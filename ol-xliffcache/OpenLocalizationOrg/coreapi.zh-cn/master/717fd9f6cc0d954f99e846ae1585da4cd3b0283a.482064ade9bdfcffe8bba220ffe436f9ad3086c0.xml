{"nodes":[{"pos":[744,759],"content":"GenericIdentity","needQuote":true,"nodes":[{"content":"GenericIdentity","pos":[0,15]}]},{"pos":[3950,3982],"content":"GenericIdentity(GenericIdentity)","needQuote":true,"nodes":[{"content":"GenericIdentity(GenericIdentity)","pos":[0,32]}]},{"pos":[5566,5589],"content":"GenericIdentity(String)","needQuote":true,"nodes":[{"content":"GenericIdentity(String)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The name of the user on whose behalf the code is running.","pos":[6432,6494],"source":"\\n<p>The name of the user on whose behalf the code is running."},{"content":"&lt;/p&gt;\\n","pos":[6495,6501],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;name&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.","pos":[6620,6678],"source":"\\n<p>The <em>name</em> parameter is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[6679,6685],"source":" </p>\\n"},{"pos":[7107,7138],"content":"GenericIdentity(String, String)","needQuote":true,"nodes":[{"content":"GenericIdentity(String, String)","pos":[0,31]}]},{"content":"\\n&lt;p&gt;The name of the user on whose behalf the code is running.","pos":[8049,8111],"source":"\\n<p>The name of the user on whose behalf the code is running."},{"content":"&lt;/p&gt;\\n","pos":[8112,8118],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The type of authentication used to identify the user.","pos":[8181,8239],"source":"\\n<p>The type of authentication used to identify the user."},{"content":"&lt;/p&gt;\\n","pos":[8240,8246],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;name&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The &lt;em&gt;type&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.","pos":[8365,8499],"source":"\\n<p>The <em>name</em> parameter is <strong>null</strong>.</p>\\n<p>-or- </p>\\n<p>The <em>type</em> parameter is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[8500,8506],"source":" </p>\\n"},{"pos":[8886,8904],"content":"AuthenticationType","needQuote":true,"nodes":[{"content":"AuthenticationType","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The type of authentication used to identify the user.&lt;/p&gt;\\n","pos":[9663,9727],"source":"\\n<p>The type of authentication used to identify the user.</p>\\n"},{"pos":[10177,10183],"content":"Claims","needQuote":true,"nodes":[{"content":"Claims","pos":[0,6]}]},{"pos":[11589,11604],"content":"IsAuthenticated","needQuote":true,"nodes":[{"content":"IsAuthenticated","pos":[0,15]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the user was has been authenticated; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[12357,12466],"source":"\\n<p>\\n<strong>true</strong> if the user was has been authenticated; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[12904,12908],"content":"Name","needQuote":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"content":"\\n&lt;p&gt;The name of the user on whose behalf the code is being run.&lt;/p&gt;\\n","pos":[13574,13644],"source":"\\n<p>The name of the user on whose behalf the code is being run.</p>\\n"},{"pos":[14063,14070],"content":"Clone()","needQuote":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"content":"\\n&lt;p&gt;A copy of the current instance.&lt;/p&gt;\\n","pos":[14784,14826],"source":"\\n<p>A copy of the current instance.</p>\\n"},{"pos":[15084,15109],"content":"System.Security.Principal","needQuote":true,"nodes":[{"content":"System.Security.Principal","pos":[0,25]}]},{"pos":[15297,15303],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15488,15502],"content":"ClaimsIdentity","needQuote":true,"nodes":[{"content":"ClaimsIdentity","pos":[0,14]}]},{"pos":[15744,15753],"content":"IIdentity","needQuote":true,"nodes":[{"content":"IIdentity","pos":[0,9]}]},{"pos":[16014,16027],"content":"DefaultIssuer","needQuote":true,"nodes":[{"content":"DefaultIssuer","pos":[0,13]}]},{"pos":[16346,16366],"content":"DefaultNameClaimType","needQuote":true,"nodes":[{"content":"DefaultNameClaimType","pos":[0,20]}]},{"pos":[16706,16726],"content":"DefaultRoleClaimType","needQuote":true,"nodes":[{"content":"DefaultRoleClaimType","pos":[0,20]}]},{"pos":[17051,17056],"content":"Actor","needQuote":true,"nodes":[{"content":"Actor","pos":[0,5]}]},{"pos":[17347,17363],"content":"BootstrapContext","needQuote":true,"nodes":[{"content":"BootstrapContext","pos":[0,16]}]},{"pos":[17694,17717],"content":"CustomSerializationData","needQuote":true,"nodes":[{"content":"CustomSerializationData","pos":[0,23]}]},{"pos":[18051,18056],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[18344,18357],"content":"NameClaimType","needQuote":true,"nodes":[{"content":"NameClaimType","pos":[0,13]}]},{"pos":[18669,18682],"content":"RoleClaimType","needQuote":true,"nodes":[{"content":"RoleClaimType","pos":[0,13]}]},{"pos":[19019,19034],"content":"AddClaim(Claim)","needQuote":true,"nodes":[{"content":"AddClaim(Claim)","pos":[0,15]}]},{"pos":[19235,19243],"content":"AddClaim","needQuote":true,"nodes":[{"content":"AddClaim","pos":[0,8]}]},{"pos":[19315,19316],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19381,19386],"content":"Claim","needQuote":true,"nodes":[{"content":"Claim","pos":[0,5]}]},{"pos":[19440,19441],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19565,19573],"content":"AddClaim","needQuote":true,"nodes":[{"content":"AddClaim","pos":[0,8]}]},{"pos":[19645,19646],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19711,19716],"content":"Claim","needQuote":true,"nodes":[{"content":"Claim","pos":[0,5]}]},{"pos":[19770,19771],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20127,20156],"content":"AddClaims(IEnumerable<Claim>)","needQuote":true,"nodes":[{"content":"AddClaims(IEnumerable&lt;Claim&gt;)","pos":[0,29],"source":"AddClaims(IEnumerable<Claim>)"}]},{"pos":[20619,20628],"content":"AddClaims","needQuote":true,"nodes":[{"content":"AddClaims","pos":[0,9]}]},{"pos":[20701,20702],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20779,20790],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[20875,20876],"content":"<","needQuote":true,"nodes":[]},{"pos":[20941,20946],"content":"Claim","needQuote":true,"nodes":[{"content":"Claim","pos":[0,5]}]},{"pos":[21032,21033],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21198,21207],"content":"AddClaims","needQuote":true,"nodes":[{"content":"AddClaims","pos":[0,9]}]},{"pos":[21280,21281],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21358,21369],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[21455,21458]},{"pos":[21530,21535],"content":"Claim","needQuote":true,"nodes":[{"content":"Claim","pos":[0,5]}]},{"pos":[21589,21590],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21617,21618],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22052,22077],"content":"CreateClaim(BinaryReader)","needQuote":true,"nodes":[{"content":"CreateClaim(BinaryReader)","pos":[0,25]}]},{"pos":[22272,22283],"content":"CreateClaim","needQuote":true,"nodes":[{"content":"CreateClaim","pos":[0,11]}]},{"pos":[22358,22359],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22418,22430],"content":"BinaryReader","needQuote":true,"nodes":[{"content":"BinaryReader","pos":[0,12]}]},{"pos":[22499,22500],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22621,22632],"content":"CreateClaim","needQuote":true,"nodes":[{"content":"CreateClaim","pos":[0,11]}]},{"pos":[22707,22708],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22767,22779],"content":"BinaryReader","needQuote":true,"nodes":[{"content":"BinaryReader","pos":[0,12]}]},{"pos":[22848,22849],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23188,23213],"content":"FindAll(Predicate<Claim>)","needQuote":true,"nodes":[{"content":"FindAll(Predicate&lt;Claim&gt;)","pos":[0,25],"source":"FindAll(Predicate<Claim>)"}]},{"pos":[23600,23607],"content":"FindAll","needQuote":true,"nodes":[{"content":"FindAll","pos":[0,7]}]},{"pos":[23678,23679],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23734,23743],"content":"Predicate","needQuote":true,"nodes":[{"content":"Predicate","pos":[0,9]}]},{"pos":[23806,23807],"content":"<","needQuote":true,"nodes":[]},{"pos":[23872,23877],"content":"Claim","needQuote":true,"nodes":[{"content":"Claim","pos":[0,5]}]},{"pos":[23963,23964],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24105,24112],"content":"FindAll","needQuote":true,"nodes":[{"content":"FindAll","pos":[0,7]}]},{"pos":[24183,24184],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24239,24248],"content":"Predicate","needQuote":true,"nodes":[{"content":"Predicate","pos":[0,9]}]},{"content":"(Of","pos":[24312,24315]},{"pos":[24387,24392],"content":"Claim","needQuote":true,"nodes":[{"content":"Claim","pos":[0,5]}]},{"pos":[24446,24447],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24474,24475],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24864,24879],"content":"FindAll(String)","needQuote":true,"nodes":[{"content":"FindAll(String)","pos":[0,15]}]},{"pos":[25048,25055],"content":"FindAll","needQuote":true,"nodes":[{"content":"FindAll","pos":[0,7]}]},{"pos":[25126,25127],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25177,25183],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[25243,25244],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25352,25359],"content":"FindAll","needQuote":true,"nodes":[{"content":"FindAll","pos":[0,7]}]},{"pos":[25430,25431],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25481,25487],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[25547,25548],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25866,25893],"content":"FindFirst(Predicate<Claim>)","needQuote":true,"nodes":[{"content":"FindFirst(Predicate&lt;Claim&gt;)","pos":[0,27],"source":"FindFirst(Predicate<Claim>)"}]},{"pos":[26288,26297],"content":"FindFirst","needQuote":true,"nodes":[{"content":"FindFirst","pos":[0,9]}]},{"pos":[26370,26371],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26426,26435],"content":"Predicate","needQuote":true,"nodes":[{"content":"Predicate","pos":[0,9]}]},{"pos":[26498,26499],"content":"<","needQuote":true,"nodes":[]},{"pos":[26564,26569],"content":"Claim","needQuote":true,"nodes":[{"content":"Claim","pos":[0,5]}]},{"pos":[26655,26656],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26799,26808],"content":"FindFirst","needQuote":true,"nodes":[{"content":"FindFirst","pos":[0,9]}]},{"pos":[26881,26882],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26937,26946],"content":"Predicate","needQuote":true,"nodes":[{"content":"Predicate","pos":[0,9]}]},{"content":"(Of","pos":[27010,27013]},{"pos":[27085,27090],"content":"Claim","needQuote":true,"nodes":[{"content":"Claim","pos":[0,5]}]},{"pos":[27144,27145],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27172,27173],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27570,27587],"content":"FindFirst(String)","needQuote":true,"nodes":[{"content":"FindFirst(String)","pos":[0,17]}]},{"pos":[27760,27769],"content":"FindFirst","needQuote":true,"nodes":[{"content":"FindFirst","pos":[0,9]}]},{"pos":[27842,27843],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27893,27899],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[27959,27960],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28070,28079],"content":"FindFirst","needQuote":true,"nodes":[{"content":"FindFirst","pos":[0,9]}]},{"pos":[28152,28153],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28203,28209],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[28269,28270],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28591,28617],"content":"HasClaim(Predicate<Claim>)","needQuote":true,"nodes":[{"content":"HasClaim(Predicate&lt;Claim&gt;)","pos":[0,26],"source":"HasClaim(Predicate<Claim>)"}]},{"pos":[29008,29016],"content":"HasClaim","needQuote":true,"nodes":[{"content":"HasClaim","pos":[0,8]}]},{"pos":[29088,29089],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29144,29153],"content":"Predicate","needQuote":true,"nodes":[{"content":"Predicate","pos":[0,9]}]},{"pos":[29216,29217],"content":"<","needQuote":true,"nodes":[]},{"pos":[29282,29287],"content":"Claim","needQuote":true,"nodes":[{"content":"Claim","pos":[0,5]}]},{"pos":[29373,29374],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29516,29524],"content":"HasClaim","needQuote":true,"nodes":[{"content":"HasClaim","pos":[0,8]}]},{"pos":[29596,29597],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29652,29661],"content":"Predicate","needQuote":true,"nodes":[{"content":"Predicate","pos":[0,9]}]},{"content":"(Of","pos":[29725,29728]},{"pos":[29800,29805],"content":"Claim","needQuote":true,"nodes":[{"content":"Claim","pos":[0,5]}]},{"pos":[29859,29860],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29887,29888],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30295,30319],"content":"HasClaim(String, String)","needQuote":true,"nodes":[{"content":"HasClaim(String, String)","pos":[0,24]}]},{"pos":[30519,30527],"content":"HasClaim","needQuote":true,"nodes":[{"content":"HasClaim","pos":[0,8]}]},{"pos":[30599,30600],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30650,30656],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[30717,30718]},{"pos":[30773,30779],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[30839,30840],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30963,30971],"content":"HasClaim","needQuote":true,"nodes":[{"content":"HasClaim","pos":[0,8]}]},{"pos":[31043,31044],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31094,31100],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[31161,31162]},{"pos":[31217,31223],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[31283,31284],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31611,31629],"content":"RemoveClaim(Claim)","needQuote":true,"nodes":[{"content":"RemoveClaim(Claim)","pos":[0,18]}]},{"pos":[31836,31847],"content":"RemoveClaim","needQuote":true,"nodes":[{"content":"RemoveClaim","pos":[0,11]}]},{"pos":[31922,31923],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31988,31993],"content":"Claim","needQuote":true,"nodes":[{"content":"Claim","pos":[0,5]}]},{"pos":[32047,32048],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32175,32186],"content":"RemoveClaim","needQuote":true,"nodes":[{"content":"RemoveClaim","pos":[0,11]}]},{"pos":[32261,32262],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32327,32332],"content":"Claim","needQuote":true,"nodes":[{"content":"Claim","pos":[0,5]}]},{"pos":[32386,32387],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32715,32736],"content":"TryRemoveClaim(Claim)","needQuote":true,"nodes":[{"content":"TryRemoveClaim(Claim)","pos":[0,21]}]},{"pos":[32949,32963],"content":"TryRemoveClaim","needQuote":true,"nodes":[{"content":"TryRemoveClaim","pos":[0,14]}]},{"pos":[33041,33042],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33107,33112],"content":"Claim","needQuote":true,"nodes":[{"content":"Claim","pos":[0,5]}]},{"pos":[33166,33167],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33297,33311],"content":"TryRemoveClaim","needQuote":true,"nodes":[{"content":"TryRemoveClaim","pos":[0,14]}]},{"pos":[33389,33390],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33455,33460],"content":"Claim","needQuote":true,"nodes":[{"content":"Claim","pos":[0,5]}]},{"pos":[33514,33515],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33835,33856],"content":"WriteTo(BinaryWriter)","needQuote":true,"nodes":[{"content":"WriteTo(BinaryWriter)","pos":[0,21]}]},{"pos":[34043,34050],"content":"WriteTo","needQuote":true,"nodes":[{"content":"WriteTo","pos":[0,7]}]},{"pos":[34121,34122],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34181,34193],"content":"BinaryWriter","needQuote":true,"nodes":[{"content":"BinaryWriter","pos":[0,12]}]},{"pos":[34262,34263],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34380,34387],"content":"WriteTo","needQuote":true,"nodes":[{"content":"WriteTo","pos":[0,7]}]},{"pos":[34458,34459],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34518,34530],"content":"BinaryWriter","needQuote":true,"nodes":[{"content":"BinaryWriter","pos":[0,12]}]},{"pos":[34599,34600],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34921,34950],"content":"WriteTo(BinaryWriter, Byte[])","needQuote":true,"nodes":[{"content":"WriteTo(BinaryWriter, Byte[])","pos":[0,29]}]},{"pos":[35307,35314],"content":"WriteTo","needQuote":true,"nodes":[{"content":"WriteTo","pos":[0,7]}]},{"pos":[35385,35386],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35445,35457],"content":"BinaryWriter","needQuote":true,"nodes":[{"content":"BinaryWriter","pos":[0,12]}]},{"content":",","pos":[35527,35528]},{"pos":[35581,35585],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[35644,35646]},{"pos":[35677,35678],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35809,35816],"content":"WriteTo","needQuote":true,"nodes":[{"content":"WriteTo","pos":[0,7]}]},{"pos":[35887,35888],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35947,35959],"content":"BinaryWriter","needQuote":true,"nodes":[{"content":"BinaryWriter","pos":[0,12]}]},{"content":",","pos":[36029,36030]},{"pos":[36083,36087],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[36145,36147],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[36175,36176],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36498,36508],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[36603,36611],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[36680,36681],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36708,36709],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36779,36787],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[36856,36857],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36884,36885],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37068,37082],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[37201,37207],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[37274,37275],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37325,37331],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[37391,37392],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37475,37481],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[37548,37549],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37599,37605],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[37665,37666],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37880,37902],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[38050,38056],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[38123,38124],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38174,38180],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[38241,38242]},{"pos":[38297,38303],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[38363,38364],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38461,38467],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[38534,38535],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38585,38591],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[38652,38653]},{"pos":[38708,38714],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[38774,38775],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39020,39051],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[39217,39232],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[39308,39309],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39359,39365],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[39426,39427]},{"pos":[39482,39488],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[39548,39549],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39655,39670],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[39746,39747],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39797,39803],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[39864,39865]},{"pos":[39920,39926],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[39986,39987],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40217,40230],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[40331,40342],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[40414,40415],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40442,40443],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40516,40527],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[40599,40600],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40627,40628],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40803,40812],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[40905,40912],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[40980,40981],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41008,41009],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41078,41085],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[41153,41154],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41181,41182],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41357,41374],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[41483,41498],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[41574,41575],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41602,41603],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41680,41695],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[41771,41772],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41799,41800],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41945,41951],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[42074,42096],"content":"System.Security.Claims","needQuote":true,"nodes":[{"content":"System.Security.Claims","pos":[0,22]}]},{"pos":[42322,42337],"content":"GenericIdentity","needQuote":true,"nodes":[{"content":"GenericIdentity","pos":[0,15]}]},{"pos":[42547,42553],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[42772,42790],"content":"AuthenticationType","needQuote":true,"nodes":[{"content":"AuthenticationType","pos":[0,18]}]},{"pos":[43110,43116],"content":"Claims","needQuote":true,"nodes":[{"content":"Claims","pos":[0,6]}]},{"pos":[43448,43466],"content":"IEnumerable<Claim>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;Claim&gt;","pos":[0,18],"source":"IEnumerable<Claim>"}]},{"pos":[43743,43754],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[43839,43840],"content":"<","needQuote":true,"nodes":[]},{"pos":[43905,43910],"content":"Claim","needQuote":true,"nodes":[{"content":"Claim","pos":[0,5]}]},{"pos":[44057,44068],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[44154,44157]},{"pos":[44229,44234],"content":"Claim","needQuote":true,"nodes":[{"content":"Claim","pos":[0,5]}]},{"pos":[44288,44289],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44542,44556],"content":"IEnumerable<T>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;T&gt;","pos":[0,14],"source":"IEnumerable<T>"}]},{"pos":[44775,44786],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[44850,44851],"content":"<","needQuote":true,"nodes":[]},{"pos":[44878,44879],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[44999,45010],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[45075,45078]},{"pos":[45112,45113],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[45140,45141],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45344,45370],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]},{"pos":[45632,45647],"content":"IsAuthenticated","needQuote":true,"nodes":[{"content":"IsAuthenticated","pos":[0,15]}]},{"pos":[45897,45904],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[46112,46116],"content":"Name","needQuote":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[46393,46400],"content":"Clone()","needQuote":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[46537,46542],"content":"Clone","needQuote":true,"nodes":[{"content":"Clone","pos":[0,5]}]},{"pos":[46611,46612],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46639,46640],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46731,46736],"content":"Clone","needQuote":true,"nodes":[{"content":"Clone","pos":[0,5]}]},{"pos":[46805,46806],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46833,46834],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47013,47034],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]}],"content":"items:\n- uid: System.Security.Principal.GenericIdentity\n  commentId: T:System.Security.Principal.GenericIdentity\n  id: GenericIdentity\n  parent: System.Security.Principal\n  children:\n  - System.Security.Principal.GenericIdentity.#ctor(System.Security.Principal.GenericIdentity)\n  - System.Security.Principal.GenericIdentity.#ctor(System.String)\n  - System.Security.Principal.GenericIdentity.#ctor(System.String,System.String)\n  - System.Security.Principal.GenericIdentity.AuthenticationType\n  - System.Security.Principal.GenericIdentity.Claims\n  - System.Security.Principal.GenericIdentity.Clone\n  - System.Security.Principal.GenericIdentity.IsAuthenticated\n  - System.Security.Principal.GenericIdentity.Name\n  langs:\n  - csharp\n  - vb\n  name: GenericIdentity\n  fullName: System.Security.Principal.GenericIdentity\n  type: Class\n  source:\n    remote:\n      path: src/System.Security.Claims/ref/System.Security.Claims.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GenericIdentity\n    path: src/System.Security.Claims/ref/System.Security.Claims.cs\n    startLine: 200\n  assemblies:\n  - System.Security.Claims\n  namespace: System.Security.Principal\n  summary: \"\\n<p>Represents a generic user.</p>\\n\"\n  syntax:\n    content: 'public class GenericIdentity : ClaimsIdentity, IIdentity'\n    content.vb: >-\n      Public Class GenericIdentity\n          Inherits ClaimsIdentity\n          Implements IIdentity\n  inheritance:\n  - System.Object\n  - System.Security.Claims.ClaimsIdentity\n  implements:\n  - System.Security.Principal.IIdentity\n  inheritedMembers:\n  - System.Security.Claims.ClaimsIdentity.DefaultIssuer\n  - System.Security.Claims.ClaimsIdentity.DefaultNameClaimType\n  - System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType\n  - System.Security.Claims.ClaimsIdentity.Actor\n  - System.Security.Claims.ClaimsIdentity.BootstrapContext\n  - System.Security.Claims.ClaimsIdentity.CustomSerializationData\n  - System.Security.Claims.ClaimsIdentity.Label\n  - System.Security.Claims.ClaimsIdentity.NameClaimType\n  - System.Security.Claims.ClaimsIdentity.RoleClaimType\n  - System.Security.Claims.ClaimsIdentity.AddClaim(System.Security.Claims.Claim)\n  - System.Security.Claims.ClaimsIdentity.AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})\n  - System.Security.Claims.ClaimsIdentity.CreateClaim(System.IO.BinaryReader)\n  - System.Security.Claims.ClaimsIdentity.FindAll(System.Predicate{System.Security.Claims.Claim})\n  - System.Security.Claims.ClaimsIdentity.FindAll(System.String)\n  - System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate{System.Security.Claims.Claim})\n  - System.Security.Claims.ClaimsIdentity.FindFirst(System.String)\n  - System.Security.Claims.ClaimsIdentity.HasClaim(System.Predicate{System.Security.Claims.Claim})\n  - System.Security.Claims.ClaimsIdentity.HasClaim(System.String,System.String)\n  - System.Security.Claims.ClaimsIdentity.RemoveClaim(System.Security.Claims.Claim)\n  - System.Security.Claims.ClaimsIdentity.TryRemoveClaim(System.Security.Claims.Claim)\n  - System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter)\n  - System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: GenericIdentity\n- uid: System.Security.Principal.GenericIdentity.#ctor(System.Security.Principal.GenericIdentity)\n  commentId: M:System.Security.Principal.GenericIdentity.#ctor(System.Security.Principal.GenericIdentity)\n  id: '#ctor(System.Security.Principal.GenericIdentity)'\n  parent: System.Security.Principal.GenericIdentity\n  langs:\n  - csharp\n  - vb\n  name: GenericIdentity(GenericIdentity)\n  fullName: System.Security.Principal.GenericIdentity.GenericIdentity(System.Security.Principal.GenericIdentity)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Claims/ref/System.Security.Claims.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Claims/ref/System.Security.Claims.cs\n    startLine: 202\n  assemblies:\n  - System.Security.Claims\n  namespace: System.Security.Principal\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Principal.GenericIdentity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class by using the specified <xref href=\\\"System.Security.Principal.GenericIdentity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: protected GenericIdentity(GenericIdentity identity)\n    content.vb: Protected Sub New(identity As GenericIdentity)\n    parameters:\n    - id: identity\n      type: System.Security.Principal.GenericIdentity\n      description: \"\\n<p>The object from which to construct the new instance of <xref href=\\\"System.Security.Principal.GenericIdentity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: GenericIdentity.GenericIdentity(GenericIdentity)\n- uid: System.Security.Principal.GenericIdentity.#ctor(System.String)\n  commentId: M:System.Security.Principal.GenericIdentity.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Security.Principal.GenericIdentity\n  langs:\n  - csharp\n  - vb\n  name: GenericIdentity(String)\n  fullName: System.Security.Principal.GenericIdentity.GenericIdentity(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Claims/ref/System.Security.Claims.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Claims/ref/System.Security.Claims.cs\n    startLine: 203\n  assemblies:\n  - System.Security.Claims\n  namespace: System.Security.Principal\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Principal.GenericIdentity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class representing the user with the specified name.</p>\\n\"\n  syntax:\n    content: public GenericIdentity(string name)\n    content.vb: Public Sub New(name As String)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the user on whose behalf the code is running. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>name</em> parameter is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: GenericIdentity.GenericIdentity(String)\n- uid: System.Security.Principal.GenericIdentity.#ctor(System.String,System.String)\n  commentId: M:System.Security.Principal.GenericIdentity.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.Security.Principal.GenericIdentity\n  langs:\n  - csharp\n  - vb\n  name: GenericIdentity(String, String)\n  fullName: System.Security.Principal.GenericIdentity.GenericIdentity(System.String, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Claims/ref/System.Security.Claims.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Claims/ref/System.Security.Claims.cs\n    startLine: 204\n  assemblies:\n  - System.Security.Claims\n  namespace: System.Security.Principal\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Principal.GenericIdentity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class representing the user with the specified name and authentication type.</p>\\n\"\n  syntax:\n    content: public GenericIdentity(string name, string type)\n    content.vb: Public Sub New(name As String, type As String)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the user on whose behalf the code is running. </p>\\n\"\n    - id: type\n      type: System.String\n      description: \"\\n<p>The type of authentication used to identify the user. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>name</em> parameter is <strong>null</strong>.</p>\\n<p>-or- </p>\\n<p>The <em>type</em> parameter is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: GenericIdentity.GenericIdentity(String, String)\n- uid: System.Security.Principal.GenericIdentity.AuthenticationType\n  commentId: P:System.Security.Principal.GenericIdentity.AuthenticationType\n  id: AuthenticationType\n  parent: System.Security.Principal.GenericIdentity\n  langs:\n  - csharp\n  - vb\n  name: AuthenticationType\n  fullName: System.Security.Principal.GenericIdentity.AuthenticationType\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Claims/ref/System.Security.Claims.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AuthenticationType\n    path: src/System.Security.Claims/ref/System.Security.Claims.cs\n    startLine: 205\n  assemblies:\n  - System.Security.Claims\n  namespace: System.Security.Principal\n  summary: \"\\n<p>Gets the type of authentication used to identify the user.</p>\\n\"\n  syntax:\n    content: public override string AuthenticationType { get; }\n    content.vb: Public Overrides ReadOnly Property AuthenticationType As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The type of authentication used to identify the user.</p>\\n\"\n  overridden: System.Security.Claims.ClaimsIdentity.AuthenticationType\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: GenericIdentity.AuthenticationType\n- uid: System.Security.Principal.GenericIdentity.Claims\n  commentId: P:System.Security.Principal.GenericIdentity.Claims\n  id: Claims\n  parent: System.Security.Principal.GenericIdentity\n  langs:\n  - csharp\n  - vb\n  name: Claims\n  fullName: System.Security.Principal.GenericIdentity.Claims\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Claims/ref/System.Security.Claims.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Claims\n    path: src/System.Security.Claims/ref/System.Security.Claims.cs\n    startLine: 206\n  assemblies:\n  - System.Security.Claims\n  namespace: System.Security.Principal\n  summary: \"\\n<p>Gets all claims for the user represented by this generic identity.</p>\\n\"\n  syntax:\n    content: public override IEnumerable<Claim> Claims { get; }\n    content.vb: Public Overrides ReadOnly Property Claims As IEnumerable(Of Claim)\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}\n      description: \"\\n<p>A collection of claims for this <xref href=\\\"System.Security.Principal.GenericIdentity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  overridden: System.Security.Claims.ClaimsIdentity.Claims\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: GenericIdentity.Claims\n- uid: System.Security.Principal.GenericIdentity.IsAuthenticated\n  commentId: P:System.Security.Principal.GenericIdentity.IsAuthenticated\n  id: IsAuthenticated\n  parent: System.Security.Principal.GenericIdentity\n  langs:\n  - csharp\n  - vb\n  name: IsAuthenticated\n  fullName: System.Security.Principal.GenericIdentity.IsAuthenticated\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Claims/ref/System.Security.Claims.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsAuthenticated\n    path: src/System.Security.Claims/ref/System.Security.Claims.cs\n    startLine: 207\n  assemblies:\n  - System.Security.Claims\n  namespace: System.Security.Principal\n  summary: \"\\n<p>Gets a value indicating whether the user has been authenticated.</p>\\n\"\n  syntax:\n    content: public override bool IsAuthenticated { get; }\n    content.vb: Public Overrides ReadOnly Property IsAuthenticated As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the user was has been authenticated; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.Security.Claims.ClaimsIdentity.IsAuthenticated\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: GenericIdentity.IsAuthenticated\n- uid: System.Security.Principal.GenericIdentity.Name\n  commentId: P:System.Security.Principal.GenericIdentity.Name\n  id: Name\n  parent: System.Security.Principal.GenericIdentity\n  langs:\n  - csharp\n  - vb\n  name: Name\n  fullName: System.Security.Principal.GenericIdentity.Name\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Claims/ref/System.Security.Claims.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Name\n    path: src/System.Security.Claims/ref/System.Security.Claims.cs\n    startLine: 208\n  assemblies:\n  - System.Security.Claims\n  namespace: System.Security.Principal\n  summary: \"\\n<p>Gets the user's name.</p>\\n\"\n  syntax:\n    content: public override string Name { get; }\n    content.vb: Public Overrides ReadOnly Property Name As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The name of the user on whose behalf the code is being run.</p>\\n\"\n  overridden: System.Security.Claims.ClaimsIdentity.Name\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: GenericIdentity.Name\n- uid: System.Security.Principal.GenericIdentity.Clone\n  commentId: M:System.Security.Principal.GenericIdentity.Clone\n  id: Clone\n  parent: System.Security.Principal.GenericIdentity\n  langs:\n  - csharp\n  - vb\n  name: Clone()\n  fullName: System.Security.Principal.GenericIdentity.Clone()\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Claims/ref/System.Security.Claims.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Clone\n    path: src/System.Security.Claims/ref/System.Security.Claims.cs\n    startLine: 209\n  assemblies:\n  - System.Security.Claims\n  namespace: System.Security.Principal\n  summary: \"\\n<p>Creates a new object that is a copy of the current instance.</p>\\n\"\n  syntax:\n    content: public override ClaimsIdentity Clone()\n    content.vb: Public Overrides Function Clone As ClaimsIdentity\n    return:\n      type: System.Security.Claims.ClaimsIdentity\n      description: \"\\n<p>A copy of the current instance.</p>\\n\"\n  overridden: System.Security.Claims.ClaimsIdentity.Clone\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: GenericIdentity.Clone()\nreferences:\n- uid: System.Security.Principal\n  isExternal: false\n  name: System.Security.Principal\n  fullName: System.Security.Principal\n  commentId: N:System.Security.Principal\n  nameWithType: System.Security.Principal\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Security.Claims.ClaimsIdentity\n  parent: System.Security.Claims\n  isExternal: false\n  name: ClaimsIdentity\n  fullName: System.Security.Claims.ClaimsIdentity\n  commentId: T:System.Security.Claims.ClaimsIdentity\n  nameWithType: ClaimsIdentity\n- uid: System.Security.Principal.IIdentity\n  parent: System.Security.Principal\n  isExternal: false\n  name: IIdentity\n  fullName: System.Security.Principal.IIdentity\n  commentId: T:System.Security.Principal.IIdentity\n  nameWithType: IIdentity\n- uid: System.Security.Claims.ClaimsIdentity.DefaultIssuer\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: false\n  name: DefaultIssuer\n  fullName: System.Security.Claims.ClaimsIdentity.DefaultIssuer\n  commentId: F:System.Security.Claims.ClaimsIdentity.DefaultIssuer\n  nameWithType: ClaimsIdentity.DefaultIssuer\n- uid: System.Security.Claims.ClaimsIdentity.DefaultNameClaimType\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: false\n  name: DefaultNameClaimType\n  fullName: System.Security.Claims.ClaimsIdentity.DefaultNameClaimType\n  commentId: F:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType\n  nameWithType: ClaimsIdentity.DefaultNameClaimType\n- uid: System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: false\n  name: DefaultRoleClaimType\n  fullName: System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType\n  commentId: F:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType\n  nameWithType: ClaimsIdentity.DefaultRoleClaimType\n- uid: System.Security.Claims.ClaimsIdentity.Actor\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: false\n  name: Actor\n  fullName: System.Security.Claims.ClaimsIdentity.Actor\n  commentId: P:System.Security.Claims.ClaimsIdentity.Actor\n  nameWithType: ClaimsIdentity.Actor\n- uid: System.Security.Claims.ClaimsIdentity.BootstrapContext\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: false\n  name: BootstrapContext\n  fullName: System.Security.Claims.ClaimsIdentity.BootstrapContext\n  commentId: P:System.Security.Claims.ClaimsIdentity.BootstrapContext\n  nameWithType: ClaimsIdentity.BootstrapContext\n- uid: System.Security.Claims.ClaimsIdentity.CustomSerializationData\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: false\n  name: CustomSerializationData\n  fullName: System.Security.Claims.ClaimsIdentity.CustomSerializationData\n  commentId: P:System.Security.Claims.ClaimsIdentity.CustomSerializationData\n  nameWithType: ClaimsIdentity.CustomSerializationData\n- uid: System.Security.Claims.ClaimsIdentity.Label\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: false\n  name: Label\n  fullName: System.Security.Claims.ClaimsIdentity.Label\n  commentId: P:System.Security.Claims.ClaimsIdentity.Label\n  nameWithType: ClaimsIdentity.Label\n- uid: System.Security.Claims.ClaimsIdentity.NameClaimType\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: false\n  name: NameClaimType\n  fullName: System.Security.Claims.ClaimsIdentity.NameClaimType\n  commentId: P:System.Security.Claims.ClaimsIdentity.NameClaimType\n  nameWithType: ClaimsIdentity.NameClaimType\n- uid: System.Security.Claims.ClaimsIdentity.RoleClaimType\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: false\n  name: RoleClaimType\n  fullName: System.Security.Claims.ClaimsIdentity.RoleClaimType\n  commentId: P:System.Security.Claims.ClaimsIdentity.RoleClaimType\n  nameWithType: ClaimsIdentity.RoleClaimType\n- uid: System.Security.Claims.ClaimsIdentity.AddClaim(System.Security.Claims.Claim)\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: false\n  name: AddClaim(Claim)\n  fullName: System.Security.Claims.ClaimsIdentity.AddClaim(System.Security.Claims.Claim)\n  spec.csharp:\n  - uid: System.Security.Claims.ClaimsIdentity.AddClaim(System.Security.Claims.Claim)\n    name: AddClaim\n    fullName: System.Security.Claims.ClaimsIdentity.AddClaim\n  - name: (\n    fullName: (\n  - uid: System.Security.Claims.Claim\n    name: Claim\n    fullName: System.Security.Claims.Claim\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Claims.ClaimsIdentity.AddClaim(System.Security.Claims.Claim)\n    name: AddClaim\n    fullName: System.Security.Claims.ClaimsIdentity.AddClaim\n  - name: (\n    fullName: (\n  - uid: System.Security.Claims.Claim\n    name: Claim\n    fullName: System.Security.Claims.Claim\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Claims.ClaimsIdentity.AddClaim(System.Security.Claims.Claim)\n  nameWithType: ClaimsIdentity.AddClaim(Claim)\n- uid: System.Security.Claims.ClaimsIdentity.AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: true\n  name: AddClaims(IEnumerable<Claim>)\n  fullName: System.Security.Claims.ClaimsIdentity.AddClaims(System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>)\n  fullname.vb: System.Security.Claims.ClaimsIdentity.AddClaims(System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim))\n  name.vb: AddClaims(IEnumerable(Of Claim))\n  spec.csharp:\n  - uid: System.Security.Claims.ClaimsIdentity.AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})\n    name: AddClaims\n    fullName: System.Security.Claims.ClaimsIdentity.AddClaims\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Security.Claims.Claim\n    name: Claim\n    fullName: System.Security.Claims.Claim\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Claims.ClaimsIdentity.AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})\n    name: AddClaims\n    fullName: System.Security.Claims.ClaimsIdentity.AddClaims\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Security.Claims.Claim\n    name: Claim\n    fullName: System.Security.Claims.Claim\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Claims.ClaimsIdentity.AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})\n  nameWithType: ClaimsIdentity.AddClaims(IEnumerable<Claim>)\n  nameWithType.vb: ClaimsIdentity.AddClaims(IEnumerable(Of Claim))\n- uid: System.Security.Claims.ClaimsIdentity.CreateClaim(System.IO.BinaryReader)\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: true\n  name: CreateClaim(BinaryReader)\n  fullName: System.Security.Claims.ClaimsIdentity.CreateClaim(System.IO.BinaryReader)\n  spec.csharp:\n  - uid: System.Security.Claims.ClaimsIdentity.CreateClaim(System.IO.BinaryReader)\n    name: CreateClaim\n    fullName: System.Security.Claims.ClaimsIdentity.CreateClaim\n  - name: (\n    fullName: (\n  - uid: System.IO.BinaryReader\n    name: BinaryReader\n    fullName: System.IO.BinaryReader\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Claims.ClaimsIdentity.CreateClaim(System.IO.BinaryReader)\n    name: CreateClaim\n    fullName: System.Security.Claims.ClaimsIdentity.CreateClaim\n  - name: (\n    fullName: (\n  - uid: System.IO.BinaryReader\n    name: BinaryReader\n    fullName: System.IO.BinaryReader\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Claims.ClaimsIdentity.CreateClaim(System.IO.BinaryReader)\n  nameWithType: ClaimsIdentity.CreateClaim(BinaryReader)\n- uid: System.Security.Claims.ClaimsIdentity.FindAll(System.Predicate{System.Security.Claims.Claim})\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: true\n  name: FindAll(Predicate<Claim>)\n  fullName: System.Security.Claims.ClaimsIdentity.FindAll(System.Predicate<System.Security.Claims.Claim>)\n  fullname.vb: System.Security.Claims.ClaimsIdentity.FindAll(System.Predicate(Of System.Security.Claims.Claim))\n  name.vb: FindAll(Predicate(Of Claim))\n  spec.csharp:\n  - uid: System.Security.Claims.ClaimsIdentity.FindAll(System.Predicate{System.Security.Claims.Claim})\n    name: FindAll\n    fullName: System.Security.Claims.ClaimsIdentity.FindAll\n  - name: (\n    fullName: (\n  - uid: System.Predicate`1\n    name: Predicate\n    fullName: System.Predicate\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Security.Claims.Claim\n    name: Claim\n    fullName: System.Security.Claims.Claim\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Claims.ClaimsIdentity.FindAll(System.Predicate{System.Security.Claims.Claim})\n    name: FindAll\n    fullName: System.Security.Claims.ClaimsIdentity.FindAll\n  - name: (\n    fullName: (\n  - uid: System.Predicate`1\n    name: Predicate\n    fullName: System.Predicate\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Security.Claims.Claim\n    name: Claim\n    fullName: System.Security.Claims.Claim\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Claims.ClaimsIdentity.FindAll(System.Predicate{System.Security.Claims.Claim})\n  nameWithType: ClaimsIdentity.FindAll(Predicate<Claim>)\n  nameWithType.vb: ClaimsIdentity.FindAll(Predicate(Of Claim))\n- uid: System.Security.Claims.ClaimsIdentity.FindAll(System.String)\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: true\n  name: FindAll(String)\n  fullName: System.Security.Claims.ClaimsIdentity.FindAll(System.String)\n  spec.csharp:\n  - uid: System.Security.Claims.ClaimsIdentity.FindAll(System.String)\n    name: FindAll\n    fullName: System.Security.Claims.ClaimsIdentity.FindAll\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Claims.ClaimsIdentity.FindAll(System.String)\n    name: FindAll\n    fullName: System.Security.Claims.ClaimsIdentity.FindAll\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Claims.ClaimsIdentity.FindAll(System.String)\n  nameWithType: ClaimsIdentity.FindAll(String)\n- uid: System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate{System.Security.Claims.Claim})\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: true\n  name: FindFirst(Predicate<Claim>)\n  fullName: System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate<System.Security.Claims.Claim>)\n  fullname.vb: System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate(Of System.Security.Claims.Claim))\n  name.vb: FindFirst(Predicate(Of Claim))\n  spec.csharp:\n  - uid: System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate{System.Security.Claims.Claim})\n    name: FindFirst\n    fullName: System.Security.Claims.ClaimsIdentity.FindFirst\n  - name: (\n    fullName: (\n  - uid: System.Predicate`1\n    name: Predicate\n    fullName: System.Predicate\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Security.Claims.Claim\n    name: Claim\n    fullName: System.Security.Claims.Claim\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate{System.Security.Claims.Claim})\n    name: FindFirst\n    fullName: System.Security.Claims.ClaimsIdentity.FindFirst\n  - name: (\n    fullName: (\n  - uid: System.Predicate`1\n    name: Predicate\n    fullName: System.Predicate\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Security.Claims.Claim\n    name: Claim\n    fullName: System.Security.Claims.Claim\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate{System.Security.Claims.Claim})\n  nameWithType: ClaimsIdentity.FindFirst(Predicate<Claim>)\n  nameWithType.vb: ClaimsIdentity.FindFirst(Predicate(Of Claim))\n- uid: System.Security.Claims.ClaimsIdentity.FindFirst(System.String)\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: true\n  name: FindFirst(String)\n  fullName: System.Security.Claims.ClaimsIdentity.FindFirst(System.String)\n  spec.csharp:\n  - uid: System.Security.Claims.ClaimsIdentity.FindFirst(System.String)\n    name: FindFirst\n    fullName: System.Security.Claims.ClaimsIdentity.FindFirst\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Claims.ClaimsIdentity.FindFirst(System.String)\n    name: FindFirst\n    fullName: System.Security.Claims.ClaimsIdentity.FindFirst\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Claims.ClaimsIdentity.FindFirst(System.String)\n  nameWithType: ClaimsIdentity.FindFirst(String)\n- uid: System.Security.Claims.ClaimsIdentity.HasClaim(System.Predicate{System.Security.Claims.Claim})\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: true\n  name: HasClaim(Predicate<Claim>)\n  fullName: System.Security.Claims.ClaimsIdentity.HasClaim(System.Predicate<System.Security.Claims.Claim>)\n  fullname.vb: System.Security.Claims.ClaimsIdentity.HasClaim(System.Predicate(Of System.Security.Claims.Claim))\n  name.vb: HasClaim(Predicate(Of Claim))\n  spec.csharp:\n  - uid: System.Security.Claims.ClaimsIdentity.HasClaim(System.Predicate{System.Security.Claims.Claim})\n    name: HasClaim\n    fullName: System.Security.Claims.ClaimsIdentity.HasClaim\n  - name: (\n    fullName: (\n  - uid: System.Predicate`1\n    name: Predicate\n    fullName: System.Predicate\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Security.Claims.Claim\n    name: Claim\n    fullName: System.Security.Claims.Claim\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Claims.ClaimsIdentity.HasClaim(System.Predicate{System.Security.Claims.Claim})\n    name: HasClaim\n    fullName: System.Security.Claims.ClaimsIdentity.HasClaim\n  - name: (\n    fullName: (\n  - uid: System.Predicate`1\n    name: Predicate\n    fullName: System.Predicate\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Security.Claims.Claim\n    name: Claim\n    fullName: System.Security.Claims.Claim\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Claims.ClaimsIdentity.HasClaim(System.Predicate{System.Security.Claims.Claim})\n  nameWithType: ClaimsIdentity.HasClaim(Predicate<Claim>)\n  nameWithType.vb: ClaimsIdentity.HasClaim(Predicate(Of Claim))\n- uid: System.Security.Claims.ClaimsIdentity.HasClaim(System.String,System.String)\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: true\n  name: HasClaim(String, String)\n  fullName: System.Security.Claims.ClaimsIdentity.HasClaim(System.String, System.String)\n  spec.csharp:\n  - uid: System.Security.Claims.ClaimsIdentity.HasClaim(System.String,System.String)\n    name: HasClaim\n    fullName: System.Security.Claims.ClaimsIdentity.HasClaim\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Claims.ClaimsIdentity.HasClaim(System.String,System.String)\n    name: HasClaim\n    fullName: System.Security.Claims.ClaimsIdentity.HasClaim\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Claims.ClaimsIdentity.HasClaim(System.String,System.String)\n  nameWithType: ClaimsIdentity.HasClaim(String, String)\n- uid: System.Security.Claims.ClaimsIdentity.RemoveClaim(System.Security.Claims.Claim)\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: false\n  name: RemoveClaim(Claim)\n  fullName: System.Security.Claims.ClaimsIdentity.RemoveClaim(System.Security.Claims.Claim)\n  spec.csharp:\n  - uid: System.Security.Claims.ClaimsIdentity.RemoveClaim(System.Security.Claims.Claim)\n    name: RemoveClaim\n    fullName: System.Security.Claims.ClaimsIdentity.RemoveClaim\n  - name: (\n    fullName: (\n  - uid: System.Security.Claims.Claim\n    name: Claim\n    fullName: System.Security.Claims.Claim\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Claims.ClaimsIdentity.RemoveClaim(System.Security.Claims.Claim)\n    name: RemoveClaim\n    fullName: System.Security.Claims.ClaimsIdentity.RemoveClaim\n  - name: (\n    fullName: (\n  - uid: System.Security.Claims.Claim\n    name: Claim\n    fullName: System.Security.Claims.Claim\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Claims.ClaimsIdentity.RemoveClaim(System.Security.Claims.Claim)\n  nameWithType: ClaimsIdentity.RemoveClaim(Claim)\n- uid: System.Security.Claims.ClaimsIdentity.TryRemoveClaim(System.Security.Claims.Claim)\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: false\n  name: TryRemoveClaim(Claim)\n  fullName: System.Security.Claims.ClaimsIdentity.TryRemoveClaim(System.Security.Claims.Claim)\n  spec.csharp:\n  - uid: System.Security.Claims.ClaimsIdentity.TryRemoveClaim(System.Security.Claims.Claim)\n    name: TryRemoveClaim\n    fullName: System.Security.Claims.ClaimsIdentity.TryRemoveClaim\n  - name: (\n    fullName: (\n  - uid: System.Security.Claims.Claim\n    name: Claim\n    fullName: System.Security.Claims.Claim\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Claims.ClaimsIdentity.TryRemoveClaim(System.Security.Claims.Claim)\n    name: TryRemoveClaim\n    fullName: System.Security.Claims.ClaimsIdentity.TryRemoveClaim\n  - name: (\n    fullName: (\n  - uid: System.Security.Claims.Claim\n    name: Claim\n    fullName: System.Security.Claims.Claim\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Claims.ClaimsIdentity.TryRemoveClaim(System.Security.Claims.Claim)\n  nameWithType: ClaimsIdentity.TryRemoveClaim(Claim)\n- uid: System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter)\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: true\n  name: WriteTo(BinaryWriter)\n  fullName: System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter)\n  spec.csharp:\n  - uid: System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter)\n    name: WriteTo\n    fullName: System.Security.Claims.ClaimsIdentity.WriteTo\n  - name: (\n    fullName: (\n  - uid: System.IO.BinaryWriter\n    name: BinaryWriter\n    fullName: System.IO.BinaryWriter\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter)\n    name: WriteTo\n    fullName: System.Security.Claims.ClaimsIdentity.WriteTo\n  - name: (\n    fullName: (\n  - uid: System.IO.BinaryWriter\n    name: BinaryWriter\n    fullName: System.IO.BinaryWriter\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter)\n  nameWithType: ClaimsIdentity.WriteTo(BinaryWriter)\n- uid: System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: true\n  name: WriteTo(BinaryWriter, Byte[])\n  fullName: System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter, System.Byte[])\n  fullname.vb: System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter, System.Byte())\n  name.vb: WriteTo(BinaryWriter, Byte())\n  spec.csharp:\n  - uid: System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])\n    name: WriteTo\n    fullName: System.Security.Claims.ClaimsIdentity.WriteTo\n  - name: (\n    fullName: (\n  - uid: System.IO.BinaryWriter\n    name: BinaryWriter\n    fullName: System.IO.BinaryWriter\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])\n    name: WriteTo\n    fullName: System.Security.Claims.ClaimsIdentity.WriteTo\n  - name: (\n    fullName: (\n  - uid: System.IO.BinaryWriter\n    name: BinaryWriter\n    fullName: System.IO.BinaryWriter\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])\n  nameWithType: ClaimsIdentity.WriteTo(BinaryWriter, Byte[])\n  nameWithType.vb: ClaimsIdentity.WriteTo(BinaryWriter, Byte())\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Security.Claims\n  isExternal: false\n  name: System.Security.Claims\n  fullName: System.Security.Claims\n  commentId: N:System.Security.Claims\n  nameWithType: System.Security.Claims\n- uid: System.Security.Principal.GenericIdentity\n  parent: System.Security.Principal\n  isExternal: false\n  name: GenericIdentity\n  fullName: System.Security.Principal.GenericIdentity\n  commentId: T:System.Security.Principal.GenericIdentity\n  nameWithType: GenericIdentity\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Security.Claims.ClaimsIdentity.AuthenticationType\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: false\n  name: AuthenticationType\n  fullName: System.Security.Claims.ClaimsIdentity.AuthenticationType\n  commentId: P:System.Security.Claims.ClaimsIdentity.AuthenticationType\n  nameWithType: ClaimsIdentity.AuthenticationType\n- uid: System.Security.Claims.ClaimsIdentity.Claims\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: false\n  name: Claims\n  fullName: System.Security.Claims.ClaimsIdentity.Claims\n  commentId: P:System.Security.Claims.ClaimsIdentity.Claims\n  nameWithType: ClaimsIdentity.Claims\n- uid: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<Claim>\n  fullName: System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim)\n  name.vb: IEnumerable(Of Claim)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Security.Claims.Claim\n    name: Claim\n    fullName: System.Security.Claims.Claim\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Security.Claims.Claim\n    name: Claim\n    fullName: System.Security.Claims.Claim\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}\n  nameWithType: IEnumerable<Claim>\n  nameWithType.vb: IEnumerable(Of Claim)\n- uid: System.Collections.Generic.IEnumerable`1\n  isExternal: false\n  name: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of T)\n  name.vb: IEnumerable(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerable`1\n  nameWithType: IEnumerable<T>\n  nameWithType.vb: IEnumerable(Of T)\n- uid: System.Collections.Generic\n  isExternal: false\n  name: System.Collections.Generic\n  fullName: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n  nameWithType: System.Collections.Generic\n- uid: System.Security.Claims.ClaimsIdentity.IsAuthenticated\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: false\n  name: IsAuthenticated\n  fullName: System.Security.Claims.ClaimsIdentity.IsAuthenticated\n  commentId: P:System.Security.Claims.ClaimsIdentity.IsAuthenticated\n  nameWithType: ClaimsIdentity.IsAuthenticated\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Security.Claims.ClaimsIdentity.Name\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: false\n  name: Name\n  fullName: System.Security.Claims.ClaimsIdentity.Name\n  commentId: P:System.Security.Claims.ClaimsIdentity.Name\n  nameWithType: ClaimsIdentity.Name\n- uid: System.Security.Claims.ClaimsIdentity.Clone\n  parent: System.Security.Claims.ClaimsIdentity\n  isExternal: false\n  name: Clone()\n  fullName: System.Security.Claims.ClaimsIdentity.Clone()\n  spec.csharp:\n  - uid: System.Security.Claims.ClaimsIdentity.Clone\n    name: Clone\n    fullName: System.Security.Claims.ClaimsIdentity.Clone\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Claims.ClaimsIdentity.Clone\n    name: Clone\n    fullName: System.Security.Claims.ClaimsIdentity.Clone\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Claims.ClaimsIdentity.Clone\n  nameWithType: ClaimsIdentity.Clone()\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n"}