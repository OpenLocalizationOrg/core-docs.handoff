{"nodes":[{"pos":[540,557],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[2289,2308],"content":"ArgumentException()","needQuote":true,"nodes":[{"content":"ArgumentException()","pos":[0,19]}]},{"pos":[3232,3257],"content":"ArgumentException(String)","needQuote":true,"nodes":[{"content":"ArgumentException(String)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;The error message that explains the reason for the exception.","pos":[4013,4079],"source":"\\n<p>The error message that explains the reason for the exception."},{"content":"&lt;/p&gt;\\n","pos":[4080,4086],"source":" </p>\\n"},{"pos":[4470,4506],"content":"ArgumentException(String, Exception)","needQuote":true,"nodes":[{"content":"ArgumentException(String, Exception)","pos":[0,36]}]},{"content":"\\n&lt;p&gt;The error message that explains the reason for the exception.","pos":[5410,5476],"source":"\\n<p>The error message that explains the reason for the exception."},{"content":"&lt;/p&gt;\\n","pos":[5477,5483],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The exception that is the cause of the current exception.","pos":[5559,5621],"source":"\\n<p>The exception that is the cause of the current exception."},{"content":"If the &lt;em&gt;innerException&lt;/em&gt; parameter is not a null reference, the current exception is raised in a &lt;strong&gt;catch&lt;/strong&gt; block that handles the inner exception.","pos":[5622,5787],"source":" If the <em>innerException</em> parameter is not a null reference, the current exception is raised in a <strong>catch</strong> block that handles the inner exception."},{"content":"&lt;/p&gt;\\n","pos":[5788,5794],"source":" </p>\\n"},{"pos":[6252,6285],"content":"ArgumentException(String, String)","needQuote":true,"nodes":[{"content":"ArgumentException(String, String)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;The error message that explains the reason for the exception.","pos":[7152,7218],"source":"\\n<p>The error message that explains the reason for the exception."},{"content":"&lt;/p&gt;\\n","pos":[7219,7225],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The name of the parameter that caused the current exception.","pos":[7293,7358],"source":"\\n<p>The name of the parameter that caused the current exception."},{"content":"&lt;/p&gt;\\n","pos":[7359,7365],"source":" </p>\\n"},{"pos":[7799,7843],"content":"ArgumentException(String, String, Exception)","needQuote":true,"nodes":[{"content":"ArgumentException(String, String, Exception)","pos":[0,44]}]},{"content":"\\n&lt;p&gt;The error message that explains the reason for the exception.","pos":[8822,8888],"source":"\\n<p>The error message that explains the reason for the exception."},{"content":"&lt;/p&gt;\\n","pos":[8889,8895],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The name of the parameter that caused the current exception.","pos":[8963,9028],"source":"\\n<p>The name of the parameter that caused the current exception."},{"content":"&lt;/p&gt;\\n","pos":[9029,9035],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The exception that is the cause of the current exception.","pos":[9111,9173],"source":"\\n<p>The exception that is the cause of the current exception."},{"content":"If the &lt;em&gt;innerException&lt;/em&gt; parameter is not a null reference, the current exception is raised in a &lt;strong&gt;catch&lt;/strong&gt; block that handles the inner exception.","pos":[9174,9339],"source":" If the <em>innerException</em> parameter is not a null reference, the current exception is raised in a <strong>catch</strong> block that handles the inner exception."},{"content":"&lt;/p&gt;\\n","pos":[9340,9346],"source":" </p>\\n"},{"pos":[9729,9736],"content":"Message","needQuote":true,"nodes":[{"content":"Message","pos":[0,7]}]},{"content":"\\n&lt;p&gt;A text string describing the details of the exception.","pos":[10426,10485],"source":"\\n<p>A text string describing the details of the exception."},{"content":"The value of this property takes one of two forms: &lt;/p&gt;\\n&lt;p&gt;Condition &lt;/p&gt;\\n&lt;p&gt;Value &lt;/p&gt;\\n&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;The &lt;em&gt;paramName&lt;/em&gt; is a null reference (&lt;strong&gt;Nothing&lt;/strong&gt; in Visual Basic) or of zero length.","pos":[10486,10708],"source":" The value of this property takes one of two forms: </p>\\n<p>Condition </p>\\n<p>Value </p>\\n<table><tbody><tr><td>\\n<p>The <em>paramName</em> is a null reference (<strong>Nothing</strong> in Visual Basic) or of zero length."},{"content":"&lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;The &lt;em&gt;message&lt;/em&gt; string passed to the constructor.","pos":[10709,10783],"source":" </p>\\n</td><td>\\n<p>The <em>message</em> string passed to the constructor."},{"content":"&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;The &lt;em&gt;paramName&lt;/em&gt; is not null reference (&lt;strong&gt;Nothing&lt;/strong&gt; in Visual Basic) and it has a length greater than zero.","pos":[10784,10939],"source":" </p>\\n</td></tr><tr><td>\\n<p>The <em>paramName</em> is not null reference (<strong>Nothing</strong> in Visual Basic) and it has a length greater than zero."},{"content":"&lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;The &lt;em&gt;message&lt;/em&gt; string appended with the name of the invalid parameter.","pos":[10940,11036],"source":" </p>\\n</td><td>\\n<p>The <em>message</em> string appended with the name of the invalid parameter."},{"content":"&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\\n","pos":[11037,11071],"source":" </p>\\n</td></tr></tbody></table>\\n"},{"pos":[11438,11447],"content":"ParamName","needQuote":true,"nodes":[{"content":"ParamName","pos":[0,9]}]},{"content":"\\n&lt;p&gt;The parameter name.&lt;/p&gt;\\n","pos":[12103,12133],"source":"\\n<p>The parameter name.</p>\\n"},{"pos":[12340,12346],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[12477,12483],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12631,12640],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[12812,12816],"content":"Data","needQuote":true,"nodes":[{"content":"Data","pos":[0,4]}]},{"pos":[13007,13015],"content":"HelpLink","needQuote":true,"nodes":[{"content":"HelpLink","pos":[0,8]}]},{"pos":[13217,13224],"content":"HResult","needQuote":true,"nodes":[{"content":"HResult","pos":[0,7]}]},{"pos":[13430,13444],"content":"InnerException","needQuote":true,"nodes":[{"content":"InnerException","pos":[0,14]}]},{"pos":[13663,13669],"content":"Source","needQuote":true,"nodes":[{"content":"Source","pos":[0,6]}]},{"pos":[13868,13878],"content":"StackTrace","needQuote":true,"nodes":[{"content":"StackTrace","pos":[0,10]}]},{"pos":[14095,14113],"content":"GetBaseException()","needQuote":true,"nodes":[{"content":"GetBaseException()","pos":[0,18]}]},{"pos":[14230,14246],"content":"GetBaseException","needQuote":true,"nodes":[{"content":"GetBaseException","pos":[0,16]}]},{"pos":[14305,14306],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14333,14334],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14415,14431],"content":"GetBaseException","needQuote":true,"nodes":[{"content":"GetBaseException","pos":[0,16]}]},{"pos":[14490,14491],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14518,14519],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14718,14728],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[14829,14837],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[14888,14889],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14916,14917],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14990,14998],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[15049,15050],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15077,15078],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15267,15281],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[15400,15406],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[15473,15474],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15524,15530],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15590,15591],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15674,15680],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[15747,15748],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15798,15804],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15864,15865],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16079,16101],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[16249,16255],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16322,16323],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16373,16379],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16440,16441]},{"pos":[16496,16502],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16562,16563],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16660,16666],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16733,16734],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16784,16790],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16851,16852]},{"pos":[16907,16913],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16973,16974],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17219,17250],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[17416,17431],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[17507,17508],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17558,17564],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17625,17626]},{"pos":[17681,17687],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17747,17748],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17854,17869],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[17945,17946],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17996,18002],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18063,18064]},{"pos":[18119,18125],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18185,18186],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18416,18429],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[18530,18541],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[18613,18614],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18641,18642],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18715,18726],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[18798,18799],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18826,18827],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19002,19011],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[19104,19111],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[19179,19180],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19207,19208],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19277,19284],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[19352,19353],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19380,19381],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19556,19573],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[19682,19697],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[19773,19774],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19801,19802],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19879,19894],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[19970,19971],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19998,19999],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20168,20174],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[20340,20347],"content":"Message","needQuote":true,"nodes":[{"content":"Message","pos":[0,7]}]}],"content":"items:\n- uid: System.ArgumentException\n  commentId: T:System.ArgumentException\n  id: ArgumentException\n  parent: System\n  children:\n  - System.ArgumentException.#ctor\n  - System.ArgumentException.#ctor(System.String)\n  - System.ArgumentException.#ctor(System.String,System.Exception)\n  - System.ArgumentException.#ctor(System.String,System.String)\n  - System.ArgumentException.#ctor(System.String,System.String,System.Exception)\n  - System.ArgumentException.Message\n  - System.ArgumentException.ParamName\n  langs:\n  - csharp\n  - vb\n  name: ArgumentException\n  fullName: System.ArgumentException\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/ArgumentException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ArgumentException\n    path: src/mscorlib/src/System/ArgumentException.cs\n    startLine: 25\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>The exception that is thrown when one of the arguments provided to a method is not valid.</p>\\n\"\n  syntax:\n    content: >-\n      [ComVisible(true)]\n\n      [Serializable]\n\n      public class ArgumentException : SystemException, _Exception, ISerializable\n    content.vb: >-\n      <ComVisible(True)>\n\n      <Serializable>\n\n      Public Class ArgumentException\n          Inherits SystemException\n          Implements _Exception, ISerializable\n  seealso:\n  - type: System.Exception\n    commentId: T:System.Exception\n  inheritance:\n  - System.Object\n  - System.Exception\n  inheritedMembers:\n  - System.Exception.Data\n  - System.Exception.HelpLink\n  - System.Exception.HResult\n  - System.Exception.InnerException\n  - System.Exception.Source\n  - System.Exception.StackTrace\n  - System.Exception.GetBaseException\n  - System.Exception.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: ArgumentException\n- uid: System.ArgumentException.#ctor\n  commentId: M:System.ArgumentException.#ctor\n  id: '#ctor'\n  parent: System.ArgumentException\n  langs:\n  - csharp\n  - vb\n  name: ArgumentException()\n  fullName: System.ArgumentException.ArgumentException()\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/ArgumentException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/ArgumentException.cs\n    startLine: 32\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.ArgumentException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public ArgumentException()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ArgumentException.ArgumentException()\n- uid: System.ArgumentException.#ctor(System.String)\n  commentId: M:System.ArgumentException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.ArgumentException\n  langs:\n  - csharp\n  - vb\n  name: ArgumentException(String)\n  fullName: System.ArgumentException.ArgumentException(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/ArgumentException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/ArgumentException.cs\n    startLine: 40\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.ArgumentException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified error message.</p>\\n\"\n  syntax:\n    content: public ArgumentException(string message)\n    content.vb: Public Sub New(message As String)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>The error message that explains the reason for the exception. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ArgumentException.ArgumentException(String)\n- uid: System.ArgumentException.#ctor(System.String,System.Exception)\n  commentId: M:System.ArgumentException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.ArgumentException\n  langs:\n  - csharp\n  - vb\n  name: ArgumentException(String, Exception)\n  fullName: System.ArgumentException.ArgumentException(System.String, System.Exception)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/ArgumentException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/ArgumentException.cs\n    startLine: 45\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.ArgumentException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.</p>\\n\"\n  syntax:\n    content: public ArgumentException(string message, Exception innerException)\n    content.vb: Public Sub New(message As String, innerException As Exception)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>The error message that explains the reason for the exception. </p>\\n\"\n    - id: innerException\n      type: System.Exception\n      description: \"\\n<p>The exception that is the cause of the current exception. If the <em>innerException</em> parameter is not a null reference, the current exception is raised in a <strong>catch</strong> block that handles the inner exception. </p>\\n\"\n  seealso:\n  - type: System.Exception\n    commentId: T:System.Exception\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ArgumentException.ArgumentException(String, Exception)\n- uid: System.ArgumentException.#ctor(System.String,System.String)\n  commentId: M:System.ArgumentException.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.ArgumentException\n  langs:\n  - csharp\n  - vb\n  name: ArgumentException(String, String)\n  fullName: System.ArgumentException.ArgumentException(System.String, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/ArgumentException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/ArgumentException.cs\n    startLine: 56\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.ArgumentException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified error message and the name of the parameter that causes this exception.</p>\\n\"\n  syntax:\n    content: public ArgumentException(string message, string paramName)\n    content.vb: Public Sub New(message As String, paramName As String)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>The error message that explains the reason for the exception. </p>\\n\"\n    - id: paramName\n      type: System.String\n      description: \"\\n<p>The name of the parameter that caused the current exception. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ArgumentException.ArgumentException(String, String)\n- uid: System.ArgumentException.#ctor(System.String,System.String,System.Exception)\n  commentId: M:System.ArgumentException.#ctor(System.String,System.String,System.Exception)\n  id: '#ctor(System.String,System.String,System.Exception)'\n  parent: System.ArgumentException\n  langs:\n  - csharp\n  - vb\n  name: ArgumentException(String, String, Exception)\n  fullName: System.ArgumentException.ArgumentException(System.String, System.String, System.Exception)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/ArgumentException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/ArgumentException.cs\n    startLine: 50\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.ArgumentException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified error message, the parameter name, and a reference to the inner exception that is the cause of this exception.</p>\\n\"\n  syntax:\n    content: public ArgumentException(string message, string paramName, Exception innerException)\n    content.vb: Public Sub New(message As String, paramName As String, innerException As Exception)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>The error message that explains the reason for the exception. </p>\\n\"\n    - id: paramName\n      type: System.String\n      description: \"\\n<p>The name of the parameter that caused the current exception. </p>\\n\"\n    - id: innerException\n      type: System.Exception\n      description: \"\\n<p>The exception that is the cause of the current exception. If the <em>innerException</em> parameter is not a null reference, the current exception is raised in a <strong>catch</strong> block that handles the inner exception. </p>\\n\"\n  seealso:\n  - type: System.Exception\n    commentId: T:System.Exception\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ArgumentException.ArgumentException(String, String, Exception)\n- uid: System.ArgumentException.Message\n  commentId: P:System.ArgumentException.Message\n  id: Message\n  parent: System.ArgumentException\n  langs:\n  - csharp\n  - vb\n  name: Message\n  fullName: System.ArgumentException.Message\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/ArgumentException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Message\n    path: src/mscorlib/src/System/ArgumentException.cs\n    startLine: 67\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the error message and the parameter name, or only the error message if no parameter name is set.</p>\\n\"\n  syntax:\n    content: public override string Message { get; }\n    content.vb: Public Overrides ReadOnly Property Message As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A text string describing the details of the exception. The value of this property takes one of two forms: </p>\\n<p>Condition </p>\\n<p>Value </p>\\n<table><tbody><tr><td>\\n<p>The <em>paramName</em> is a null reference (<strong>Nothing</strong> in Visual Basic) or of zero length. </p>\\n</td><td>\\n<p>The <em>message</em> string passed to the constructor. </p>\\n</td></tr><tr><td>\\n<p>The <em>paramName</em> is not null reference (<strong>Nothing</strong> in Visual Basic) and it has a length greater than zero. </p>\\n</td><td>\\n<p>The <em>message</em> string appended with the name of the invalid parameter. </p>\\n</td></tr></tbody></table>\\n\"\n  overridden: System.Exception.Message\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: ArgumentException.Message\n- uid: System.ArgumentException.ParamName\n  commentId: P:System.ArgumentException.ParamName\n  id: ParamName\n  parent: System.ArgumentException\n  langs:\n  - csharp\n  - vb\n  name: ParamName\n  fullName: System.ArgumentException.ParamName\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/ArgumentException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ParamName\n    path: src/mscorlib/src/System/ArgumentException.cs\n    startLine: 80\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the name of the parameter that causes this exception.</p>\\n\"\n  syntax:\n    content: public virtual string ParamName { get; }\n    content.vb: Public Overridable ReadOnly Property ParamName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The parameter name.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: ArgumentException.ParamName\nreferences:\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  fullName: System.Exception\n  nameWithType: Exception\n  commentId: T:System.Exception\n- uid: System.Exception.Data\n  parent: System.Exception\n  isExternal: false\n  name: Data\n  fullName: System.Exception.Data\n  nameWithType: Exception.Data\n  commentId: P:System.Exception.Data\n- uid: System.Exception.HelpLink\n  parent: System.Exception\n  isExternal: false\n  name: HelpLink\n  fullName: System.Exception.HelpLink\n  nameWithType: Exception.HelpLink\n  commentId: P:System.Exception.HelpLink\n- uid: System.Exception.HResult\n  parent: System.Exception\n  isExternal: false\n  name: HResult\n  fullName: System.Exception.HResult\n  nameWithType: Exception.HResult\n  commentId: P:System.Exception.HResult\n- uid: System.Exception.InnerException\n  parent: System.Exception\n  isExternal: false\n  name: InnerException\n  fullName: System.Exception.InnerException\n  nameWithType: Exception.InnerException\n  commentId: P:System.Exception.InnerException\n- uid: System.Exception.Source\n  parent: System.Exception\n  isExternal: false\n  name: Source\n  fullName: System.Exception.Source\n  nameWithType: Exception.Source\n  commentId: P:System.Exception.Source\n- uid: System.Exception.StackTrace\n  parent: System.Exception\n  isExternal: false\n  name: StackTrace\n  fullName: System.Exception.StackTrace\n  nameWithType: Exception.StackTrace\n  commentId: P:System.Exception.StackTrace\n- uid: System.Exception.GetBaseException\n  parent: System.Exception\n  isExternal: false\n  name: GetBaseException()\n  fullName: System.Exception.GetBaseException()\n  spec.csharp:\n  - uid: System.Exception.GetBaseException\n    name: GetBaseException\n    fullName: System.Exception.GetBaseException\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.GetBaseException\n    name: GetBaseException\n    fullName: System.Exception.GetBaseException\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Exception.GetBaseException()\n  commentId: M:System.Exception.GetBaseException\n- uid: System.Exception.ToString\n  parent: System.Exception\n  isExternal: false\n  name: ToString()\n  fullName: System.Exception.ToString()\n  spec.csharp:\n  - uid: System.Exception.ToString\n    name: ToString\n    fullName: System.Exception.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.ToString\n    name: ToString\n    fullName: System.Exception.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Exception.ToString()\n  commentId: M:System.Exception.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Exception.Message\n  parent: System.Exception\n  isExternal: false\n  name: Message\n  fullName: System.Exception.Message\n  nameWithType: Exception.Message\n  commentId: P:System.Exception.Message\n"}