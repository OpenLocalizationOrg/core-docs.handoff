{"nodes":[{"pos":[703,726],"content":"XmlSerializerNamespaces","needQuote":true,"nodes":[{"content":"XmlSerializerNamespaces","pos":[0,23]}]},{"pos":[2319,2344],"content":"XmlSerializerNamespaces()","needQuote":true,"nodes":[{"content":"XmlSerializerNamespaces()","pos":[0,25]}]},{"pos":[3577,3625],"content":"XmlSerializerNamespaces(XmlSerializerNamespaces)","needQuote":true,"nodes":[{"content":"XmlSerializerNamespaces(XmlSerializerNamespaces)","pos":[0,48]}]},{"pos":[5376,5419],"content":"XmlSerializerNamespaces(XmlQualifiedName[])","needQuote":true,"nodes":[{"content":"XmlSerializerNamespaces(XmlQualifiedName[])","pos":[0,43]}]},{"pos":[7092,7097],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"content":"\\n&lt;p&gt;The number of prefix and namespace pairs in the collection.&lt;/p&gt;\\n","pos":[7804,7874],"source":"\\n<p>The number of prefix and namespace pairs in the collection.</p>\\n"},{"pos":[8320,8339],"content":"Add(String, String)","needQuote":true,"nodes":[{"content":"Add(String, String)","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The prefix associated with an XML namespace.","pos":[9185,9234],"source":"\\n<p>The prefix associated with an XML namespace."},{"content":"&lt;/p&gt;\\n","pos":[9235,9241],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An XML namespace.","pos":[9302,9324],"source":"\\n<p>An XML namespace."},{"content":"&lt;/p&gt;\\n","pos":[9325,9331],"source":" </p>\\n"},{"pos":[9695,9704],"content":"ToArray()","needQuote":true,"nodes":[{"content":"ToArray()","pos":[0,9]}]},{"pos":[10883,10907],"content":"System.Xml.Serialization","needQuote":true,"nodes":[{"content":"System.Xml.Serialization","pos":[0,24]}]},{"pos":[11092,11098],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11258,11268],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[11363,11371],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[11440,11441],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11468,11469],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11539,11547],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[11616,11617],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11644,11645],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11828,11842],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[11961,11967],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12034,12035],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12085,12091],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12151,12152],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12235,12241],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12308,12309],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12359,12365],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12425,12426],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12640,12662],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[12810,12816],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12883,12884],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12934,12940],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[13001,13002]},{"pos":[13057,13063],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13123,13124],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13221,13227],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[13294,13295],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13345,13351],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[13412,13413]},{"pos":[13468,13474],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13534,13535],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13780,13811],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[13977,13992],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[14068,14069],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14119,14125],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14186,14187]},{"pos":[14242,14248],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14308,14309],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14415,14430],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[14506,14507],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14557,14563],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14624,14625]},{"pos":[14680,14686],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14746,14747],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14977,14990],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[15091,15102],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[15174,15175],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15202,15203],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15276,15287],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[15359,15360],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15387,15388],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15563,15572],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[15665,15672],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[15740,15741],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15768,15769],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15838,15845],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[15913,15914],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15941,15942],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16117,16134],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[16243,16258],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[16334,16335],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16362,16363],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16440,16455],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[16531,16532],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16559,16560],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16705,16711],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[16895,16918],"content":"XmlSerializerNamespaces","needQuote":true,"nodes":[{"content":"XmlSerializerNamespaces","pos":[0,23]}]},{"pos":[17129,17147],"content":"XmlQualifiedName[]","needQuote":true,"nodes":[{"content":"XmlQualifiedName[]","pos":[0,18]}]},{"pos":[17327,17343],"content":"XmlQualifiedName","needQuote":true,"nodes":[{"content":"XmlQualifiedName","pos":[0,16]}]},{"content":"[]","pos":[17418,17420]},{"pos":[17499,17515],"content":"XmlQualifiedName","needQuote":true,"nodes":[{"content":"XmlQualifiedName","pos":[0,16]}]},{"pos":[17589,17591],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[17747,17752],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[17894,17900],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"items:\n- uid: System.Xml.Serialization.XmlSerializerNamespaces\n  commentId: T:System.Xml.Serialization.XmlSerializerNamespaces\n  id: XmlSerializerNamespaces\n  parent: System.Xml.Serialization\n  children:\n  - System.Xml.Serialization.XmlSerializerNamespaces.#ctor\n  - System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.Serialization.XmlSerializerNamespaces)\n  - System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.XmlQualifiedName[])\n  - System.Xml.Serialization.XmlSerializerNamespaces.Add(System.String,System.String)\n  - System.Xml.Serialization.XmlSerializerNamespaces.Count\n  - System.Xml.Serialization.XmlSerializerNamespaces.ToArray\n  langs:\n  - csharp\n  - vb\n  name: XmlSerializerNamespaces\n  fullName: System.Xml.Serialization.XmlSerializerNamespaces\n  type: Class\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: XmlSerializerNamespaces\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 199\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Contains the XML namespaces and prefixes that the <xref href=\\\"System.Xml.Serialization.XmlSerializer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> uses to generate qualified names in an XML-document instance.</p>\\n\"\n  syntax:\n    content: public class XmlSerializerNamespaces\n    content.vb: Public Class XmlSerializerNamespaces\n  seealso:\n  - type: System.Xml.Serialization.XmlAttributes\n    commentId: T:System.Xml.Serialization.XmlAttributes\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: XmlSerializerNamespaces\n- uid: System.Xml.Serialization.XmlSerializerNamespaces.#ctor\n  commentId: M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor\n  id: '#ctor'\n  parent: System.Xml.Serialization.XmlSerializerNamespaces\n  langs:\n  - csharp\n  - vb\n  name: XmlSerializerNamespaces()\n  fullName: System.Xml.Serialization.XmlSerializerNamespaces.XmlSerializerNamespaces()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 201\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Xml.Serialization.XmlSerializerNamespaces\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public XmlSerializerNamespaces()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlSerializerNamespaces.XmlSerializerNamespaces()\n- uid: System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.Serialization.XmlSerializerNamespaces)\n  commentId: M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.Serialization.XmlSerializerNamespaces)\n  id: '#ctor(System.Xml.Serialization.XmlSerializerNamespaces)'\n  parent: System.Xml.Serialization.XmlSerializerNamespaces\n  langs:\n  - csharp\n  - vb\n  name: XmlSerializerNamespaces(XmlSerializerNamespaces)\n  fullName: System.Xml.Serialization.XmlSerializerNamespaces.XmlSerializerNamespaces(System.Xml.Serialization.XmlSerializerNamespaces)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 202\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Xml.Serialization.XmlSerializerNamespaces\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class, using the specified instance of <strong>XmlSerializerNamespaces</strong> containing the collection of prefix and namespace pairs.</p>\\n\"\n  syntax:\n    content: public XmlSerializerNamespaces(XmlSerializerNamespaces namespaces)\n    content.vb: Public Sub New(namespaces As XmlSerializerNamespaces)\n    parameters:\n    - id: namespaces\n      type: System.Xml.Serialization.XmlSerializerNamespaces\n      description: \"\\n<p>An instance of the <xref href=\\\"System.Xml.Serialization.XmlSerializerNamespaces\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>containing the namespace and prefix pairs. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlSerializerNamespaces.XmlSerializerNamespaces(XmlSerializerNamespaces)\n- uid: System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.XmlQualifiedName[])\n  commentId: M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.XmlQualifiedName[])\n  id: '#ctor(System.Xml.XmlQualifiedName[])'\n  parent: System.Xml.Serialization.XmlSerializerNamespaces\n  langs:\n  - csharp\n  - vb\n  name: XmlSerializerNamespaces(XmlQualifiedName[])\n  fullName: System.Xml.Serialization.XmlSerializerNamespaces.XmlSerializerNamespaces(System.Xml.XmlQualifiedName[])\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 203\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Xml.Serialization.XmlSerializerNamespaces\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public XmlSerializerNamespaces(XmlQualifiedName[] namespaces)\n    content.vb: Public Sub New(namespaces As XmlQualifiedName())\n    parameters:\n    - id: namespaces\n      type: System.Xml.XmlQualifiedName[]\n      description: \"\\n<p>An array of <xref href=\\\"System.Xml.XmlQualifiedName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Xml.Serialization.XmlSerializerNamespaces.XmlSerializerNamespaces(System.Xml.XmlQualifiedName())\n  name.vb: XmlSerializerNamespaces(XmlQualifiedName())\n  nameWithType: XmlSerializerNamespaces.XmlSerializerNamespaces(XmlQualifiedName[])\n  nameWithType.vb: XmlSerializerNamespaces.XmlSerializerNamespaces(XmlQualifiedName())\n- uid: System.Xml.Serialization.XmlSerializerNamespaces.Count\n  commentId: P:System.Xml.Serialization.XmlSerializerNamespaces.Count\n  id: Count\n  parent: System.Xml.Serialization.XmlSerializerNamespaces\n  langs:\n  - csharp\n  - vb\n  name: Count\n  fullName: System.Xml.Serialization.XmlSerializerNamespaces.Count\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Count\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 204\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Gets the number of prefix and namespace pairs in the collection.</p>\\n\"\n  syntax:\n    content: public int Count { get; }\n    content.vb: Public ReadOnly Property Count As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of prefix and namespace pairs in the collection.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: XmlSerializerNamespaces.Count\n- uid: System.Xml.Serialization.XmlSerializerNamespaces.Add(System.String,System.String)\n  commentId: M:System.Xml.Serialization.XmlSerializerNamespaces.Add(System.String,System.String)\n  id: Add(System.String,System.String)\n  parent: System.Xml.Serialization.XmlSerializerNamespaces\n  langs:\n  - csharp\n  - vb\n  name: Add(String, String)\n  fullName: System.Xml.Serialization.XmlSerializerNamespaces.Add(System.String, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Add\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 205\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Adds a prefix and namespace pair to an <xref href=\\\"System.Xml.Serialization.XmlSerializerNamespaces\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public void Add(string prefix, string ns)\n    content.vb: Public Sub Add(prefix As String, ns As String)\n    parameters:\n    - id: prefix\n      type: System.String\n      description: \"\\n<p>The prefix associated with an XML namespace. </p>\\n\"\n    - id: ns\n      type: System.String\n      description: \"\\n<p>An XML namespace. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlSerializerNamespaces.Add(String, String)\n- uid: System.Xml.Serialization.XmlSerializerNamespaces.ToArray\n  commentId: M:System.Xml.Serialization.XmlSerializerNamespaces.ToArray\n  id: ToArray\n  parent: System.Xml.Serialization.XmlSerializerNamespaces\n  langs:\n  - csharp\n  - vb\n  name: ToArray()\n  fullName: System.Xml.Serialization.XmlSerializerNamespaces.ToArray()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToArray\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 206\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Gets the array of prefix and namespace pairs in an <xref href=\\\"System.Xml.Serialization.XmlSerializerNamespaces\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public XmlQualifiedName[] ToArray()\n    content.vb: Public Function ToArray As XmlQualifiedName()\n    return:\n      type: System.Xml.XmlQualifiedName[]\n      description: \"\\n<p>An array of <xref href=\\\"System.Xml.XmlQualifiedName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects that are used as qualified names in an XML document.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlSerializerNamespaces.ToArray()\nreferences:\n- uid: System.Xml.Serialization\n  isExternal: false\n  name: System.Xml.Serialization\n  fullName: System.Xml.Serialization\n  commentId: N:System.Xml.Serialization\n  nameWithType: System.Xml.Serialization\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Xml.Serialization.XmlSerializerNamespaces\n  parent: System.Xml.Serialization\n  isExternal: false\n  name: XmlSerializerNamespaces\n  fullName: System.Xml.Serialization.XmlSerializerNamespaces\n  commentId: T:System.Xml.Serialization.XmlSerializerNamespaces\n  nameWithType: XmlSerializerNamespaces\n- uid: System.Xml.XmlQualifiedName[]\n  name: XmlQualifiedName[]\n  fullName: System.Xml.XmlQualifiedName[]\n  fullname.vb: System.Xml.XmlQualifiedName()\n  name.vb: XmlQualifiedName()\n  spec.csharp:\n  - uid: System.Xml.XmlQualifiedName\n    name: XmlQualifiedName\n    fullName: System.Xml.XmlQualifiedName\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Xml.XmlQualifiedName\n    name: XmlQualifiedName\n    fullName: System.Xml.XmlQualifiedName\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: XmlQualifiedName[]\n  nameWithType.vb: XmlQualifiedName()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n"}