{"nodes":[{"pos":[137,153],"content":"Func<T, TResult>","needQuote":true,"nodes":[{"content":"Func&lt;T, TResult&gt;","pos":[0,16],"source":"Func<T, TResult>"}]},{"content":"\\n&lt;p&gt;The parameter of the method that this delegate encapsulates.&lt;/p&gt;\\n","pos":[1092,1163],"source":"\\n<p>The parameter of the method that this delegate encapsulates.</p>\\n"},{"content":"\\n&lt;p&gt;The type of the parameter of the method that this delegate encapsulates.&lt;/p&gt;\\n","pos":[1217,1300],"source":"\\n<p>The type of the parameter of the method that this delegate encapsulates.</p>\\n"},{"content":"\\n&lt;p&gt;The type of the return value of the method that this delegate encapsulates.&lt;/p&gt;\\n","pos":[1340,1426],"source":"\\n<p>The type of the return value of the method that this delegate encapsulates.</p>\\n"},{"content":"\\n&lt;p&gt;The return value of the method that this delegate encapsulates.&lt;/p&gt;\\n","pos":[1484,1558],"source":"\\n<p>The return value of the method that this delegate encapsulates.</p>\\n"},{"pos":[1943,1949],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[2252,2267],"content":"GetMethodInfo()","needQuote":true,"nodes":[{"content":"GetMethodInfo()","pos":[0,15]}]},{"pos":[2436,2449],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[2534,2535],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[2562,2563],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[2670,2683],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[2768,2769],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[2796,2797],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[3003,3004],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[3105,3112],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[3293,3316],"content":"GetMethodInfo(Delegate)","needQuote":true,"nodes":[{"content":"GetMethodInfo(Delegate)","pos":[0,23]}]},{"pos":[3517,3530],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[3615,3616],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[3668,3676],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[3738,3739],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[3863,3876],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[3961,3962],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[4014,4022],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[4084,4085],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[4371,4398],"content":"RuntimeReflectionExtensions","needQuote":true,"nodes":[{"content":"RuntimeReflectionExtensions","pos":[0,27]}]},{"pos":[4599,4600],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[4676,4683],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[4781,4798],"content":"System.Reflection","needQuote":true,"nodes":[{"content":"System.Reflection","pos":[0,17]}]}],"content":"items:\n- uid: System.Func`2\n  commentId: T:System.Func`2\n  id: Func`2\n  parent: System\n  children: []\n  langs:\n  - csharp\n  - vb\n  name: Func<T, TResult>\n  fullName: System.Func<T, TResult>\n  type: Delegate\n  source:\n    remote:\n      path: src/mscorlib/src/System/Action.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Func\n    path: src/mscorlib/src/System/Action.cs\n    startLine: 50\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Encapsulates a method that has one parameter and returns a value of the type specified by the <em>TResult</em> parameter.</p>\\n\"\n  syntax:\n    content: >-\n      [TypeForwardedFrom(\"System.Core, Version=2.0.5.0, Culture=Neutral, PublicKeyToken=7cec85d7bea7798e\")]\n\n      public delegate TResult Func<in T, out TResult>(T arg);\n    content.vb: >-\n      <TypeForwardedFrom(\"System.Core, Version=2.0.5.0, Culture=Neutral, PublicKeyToken=7cec85d7bea7798e\")>\n\n      Public Delegate Function Func(Of In T, Out TResult)(arg As T) As TResult\n    parameters:\n    - id: arg\n      type: '{T}'\n      description: \"\\n<p>The parameter of the method that this delegate encapsulates.</p>\\n\"\n    typeParameters:\n    - id: T\n      description: \"\\n<p>The type of the parameter of the method that this delegate encapsulates.</p>\\n\"\n    - id: TResult\n      description: \"\\n<p>The type of the return value of the method that this delegate encapsulates.</p>\\n\"\n    return:\n      type: '{TResult}'\n      description: \"\\n<p>The return value of the method that this delegate encapsulates.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - delegate\n  modifiers.vb:\n  - Public\n  - Delegate\n  fullName.vb: System.Func(Of T, TResult)\n  name.vb: Func(Of T, TResult)\n  nameWithType: Func<T, TResult>\n  extensionMethods:\n  - System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  nameWithType.vb: Func(Of T, TResult)\nreferences:\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  parent: System.Reflection.RuntimeReflectionExtensions\n  definition: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  name: GetMethodInfo()\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo()\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: RuntimeReflectionExtensions.GetMethodInfo()\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n- uid: '{T}'\n  definition: T\n  name: T\n  fullName: T\n  nameWithType: T\n  commentId: '!:T'\n- uid: '{TResult}'\n  definition: TResult\n  name: TResult\n  fullName: TResult\n  nameWithType: TResult\n  commentId: '!:TResult'\n- uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  isExternal: true\n  name: GetMethodInfo(Delegate)\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: RuntimeReflectionExtensions.GetMethodInfo(Delegate)\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n- uid: System.Reflection.RuntimeReflectionExtensions\n  parent: System.Reflection\n  isExternal: false\n  name: RuntimeReflectionExtensions\n  fullName: System.Reflection.RuntimeReflectionExtensions\n  nameWithType: RuntimeReflectionExtensions\n  commentId: T:System.Reflection.RuntimeReflectionExtensions\n- uid: T\n  isExternal: false\n  name: T\n  fullName: T\n  nameWithType: T\n- uid: TResult\n  isExternal: false\n  name: TResult\n  fullName: TResult\n  nameWithType: TResult\n- uid: System.Reflection\n  isExternal: false\n  name: System.Reflection\n  fullName: System.Reflection\n  nameWithType: System.Reflection\n  commentId: N:System.Reflection\n"}