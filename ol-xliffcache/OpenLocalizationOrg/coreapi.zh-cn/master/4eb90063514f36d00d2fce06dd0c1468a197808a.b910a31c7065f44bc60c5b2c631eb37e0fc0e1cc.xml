{"nodes":[{"pos":[608,621],"content":"XmlDictionary","needQuote":true,"nodes":[{"content":"XmlDictionary","pos":[0,13]}]},{"pos":[2002,2017],"content":"XmlDictionary()","needQuote":true,"nodes":[{"content":"XmlDictionary()","pos":[0,15]}]},{"pos":[2985,3005],"content":"XmlDictionary(Int32)","needQuote":true,"nodes":[{"content":"XmlDictionary(Int32)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The initial size of the dictionary.&lt;/p&gt;\\n","pos":[3802,3848],"source":"\\n<p>The initial size of the dictionary.</p>\\n"},{"pos":[4125,4130],"content":"Empty","needQuote":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[5416,5427],"content":"Add(String)","needQuote":true,"nodes":[{"content":"Add(String)","pos":[0,11]}]},{"content":"\\n&lt;p&gt;String to add to the dictionary.&lt;/p&gt;\\n","pos":[6246,6289],"source":"\\n<p>String to add to the dictionary.</p>\\n"},{"pos":[6933,6974],"content":"TryLookup(Int32, out XmlDictionaryString)","needQuote":true,"nodes":[{"content":"TryLookup(Int32, out XmlDictionaryString)","pos":[0,41]}]},{"content":"\\n&lt;p&gt;Key to look up.&lt;/p&gt;\\n","pos":[7826,7852],"source":"\\n<p>Key to look up.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if key is in the dictionary, otherwise &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[8188,8285],"source":"\\n<p>\\n<strong>true</strong> if key is in the dictionary, otherwise <strong>false</strong>.</p>\\n"},{"pos":[9098,9140],"content":"TryLookup(String, out XmlDictionaryString)","needQuote":true,"nodes":[{"content":"TryLookup(String, out XmlDictionaryString)","pos":[0,42]}]},{"content":"\\n&lt;p&gt;String value being checked for.&lt;/p&gt;\\n","pos":[10006,10048],"source":"\\n<p>String value being checked for.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if value is in the dictionary, otherwise &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[10354,10453],"source":"\\n<p>\\n<strong>true</strong> if value is in the dictionary, otherwise <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[10572,10625],"source":"\\n<p>\\n<em>value</em> is <strong>null</strong>.</p>\\n"},{"pos":[11494,11549],"content":"TryLookup(XmlDictionaryString, out XmlDictionaryString)","needQuote":true,"nodes":[{"content":"TryLookup(XmlDictionaryString, out XmlDictionaryString)","pos":[0,55]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[13281,13334],"source":"\\n<p>\\n<em>value</em> is <strong>null</strong>.</p>\\n"},{"pos":[13964,13974],"content":"System.Xml","needQuote":true,"nodes":[{"content":"System.Xml","pos":[0,10]}]},{"pos":[14117,14123],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14284,14298],"content":"IXmlDictionary","needQuote":true,"nodes":[{"content":"IXmlDictionary","pos":[0,14]}]},{"pos":[14490,14500],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[14595,14603],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[14672,14673],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14700,14701],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14771,14779],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[14848,14849],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14876,14877],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15060,15074],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[15193,15199],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[15266,15267],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15317,15323],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15383,15384],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15467,15473],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[15540,15541],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15591,15597],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15657,15658],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15872,15894],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[16042,16048],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16115,16116],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16166,16172],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16233,16234]},{"pos":[16289,16295],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16355,16356],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16453,16459],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16526,16527],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16577,16583],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16644,16645]},{"pos":[16700,16706],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16766,16767],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17012,17043],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[17209,17224],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[17300,17301],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17351,17357],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17418,17419]},{"pos":[17474,17480],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17540,17541],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17647,17662],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[17738,17739],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17789,17795],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17856,17857]},{"pos":[17912,17918],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17978,17979],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18209,18222],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[18323,18334],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[18406,18407],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18434,18435],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18508,18519],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[18591,18592],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18619,18620],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18795,18804],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[18897,18904],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[18972,18973],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19000,19001],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19070,19077],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[19145,19146],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19173,19174],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19349,19366],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[19475,19490],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[19566,19567],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19594,19595],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19672,19687],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[19763,19764],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19791,19792],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19937,19943],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[20073,20078],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[20220,20226],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[20392,20411],"content":"XmlDictionaryString","needQuote":true,"nodes":[{"content":"XmlDictionaryString","pos":[0,19]}]},{"pos":[20689,20726],"content":"TryLookup(Int32, XmlDictionaryString)","needQuote":true,"nodes":[{"content":"TryLookup(Int32, XmlDictionaryString)","pos":[0,37]}]},{"pos":[20937,20946],"content":"TryLookup","needQuote":true,"nodes":[{"content":"TryLookup","pos":[0,9]}]},{"pos":[21007,21008],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21057,21062],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[21122,21123]},{"pos":[21195,21214],"content":"XmlDictionaryString","needQuote":true,"nodes":[{"content":"XmlDictionaryString","pos":[0,19]}]},{"pos":[21270,21271],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21400,21409],"content":"TryLookup","needQuote":true,"nodes":[{"content":"TryLookup","pos":[0,9]}]},{"pos":[21470,21471],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21520,21525],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[21585,21586]},{"pos":[21658,21677],"content":"XmlDictionaryString","needQuote":true,"nodes":[{"content":"XmlDictionaryString","pos":[0,19]}]},{"pos":[21733,21734],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21984,21991],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[22226,22264],"content":"TryLookup(String, XmlDictionaryString)","needQuote":true,"nodes":[{"content":"TryLookup(String, XmlDictionaryString)","pos":[0,38]}]},{"pos":[22477,22486],"content":"TryLookup","needQuote":true,"nodes":[{"content":"TryLookup","pos":[0,9]}]},{"pos":[22547,22548],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22598,22604],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[22665,22666]},{"pos":[22738,22757],"content":"XmlDictionaryString","needQuote":true,"nodes":[{"content":"XmlDictionaryString","pos":[0,19]}]},{"pos":[22813,22814],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22944,22953],"content":"TryLookup","needQuote":true,"nodes":[{"content":"TryLookup","pos":[0,9]}]},{"pos":[23014,23015],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23065,23071],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[23132,23133]},{"pos":[23205,23224],"content":"XmlDictionaryString","needQuote":true,"nodes":[{"content":"XmlDictionaryString","pos":[0,19]}]},{"pos":[23280,23281],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23637,23688],"content":"TryLookup(XmlDictionaryString, XmlDictionaryString)","needQuote":true,"nodes":[{"content":"TryLookup(XmlDictionaryString, XmlDictionaryString)","pos":[0,51]}]},{"pos":[23935,23944],"content":"TryLookup","needQuote":true,"nodes":[{"content":"TryLookup","pos":[0,9]}]},{"pos":[24005,24006],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24073,24092],"content":"XmlDictionaryString","needQuote":true,"nodes":[{"content":"XmlDictionaryString","pos":[0,19]}]},{"content":",","pos":[24149,24150]},{"pos":[24222,24241],"content":"XmlDictionaryString","needQuote":true,"nodes":[{"content":"XmlDictionaryString","pos":[0,19]}]},{"pos":[24297,24298],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24445,24454],"content":"TryLookup","needQuote":true,"nodes":[{"content":"TryLookup","pos":[0,9]}]},{"pos":[24515,24516],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24583,24602],"content":"XmlDictionaryString","needQuote":true,"nodes":[{"content":"XmlDictionaryString","pos":[0,19]}]},{"content":",","pos":[24659,24660]},{"pos":[24732,24751],"content":"XmlDictionaryString","needQuote":true,"nodes":[{"content":"XmlDictionaryString","pos":[0,19]}]},{"pos":[24807,24808],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25087,25108],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]}],"content":"items:\n- uid: System.Xml.XmlDictionary\n  commentId: T:System.Xml.XmlDictionary\n  id: XmlDictionary\n  parent: System.Xml\n  children:\n  - System.Xml.XmlDictionary.#ctor\n  - System.Xml.XmlDictionary.#ctor(System.Int32)\n  - System.Xml.XmlDictionary.Add(System.String)\n  - System.Xml.XmlDictionary.Empty\n  - System.Xml.XmlDictionary.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)\n  - System.Xml.XmlDictionary.TryLookup(System.String,System.Xml.XmlDictionaryString@)\n  - System.Xml.XmlDictionary.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)\n  langs:\n  - csharp\n  - vb\n  name: XmlDictionary\n  fullName: System.Xml.XmlDictionary\n  type: Class\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: XmlDictionary\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 123\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Xml\n  summary: \"\\n<p>Implements a dictionary used to optimize Windows Communication Foundation (WCF)'s XML reader/writer implementations.</p>\\n\"\n  syntax:\n    content: 'public class XmlDictionary : IXmlDictionary'\n    content.vb: >-\n      Public Class XmlDictionary\n          Implements IXmlDictionary\n  inheritance:\n  - System.Object\n  implements:\n  - System.Xml.IXmlDictionary\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: XmlDictionary\n- uid: System.Xml.XmlDictionary.#ctor\n  commentId: M:System.Xml.XmlDictionary.#ctor\n  id: '#ctor'\n  parent: System.Xml.XmlDictionary\n  langs:\n  - csharp\n  - vb\n  name: XmlDictionary()\n  fullName: System.Xml.XmlDictionary.XmlDictionary()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 125\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Xml\n  summary: \"\\n<p>Creates an empty <xref href=\\\"System.Xml.XmlDictionary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public XmlDictionary()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlDictionary.XmlDictionary()\n- uid: System.Xml.XmlDictionary.#ctor(System.Int32)\n  commentId: M:System.Xml.XmlDictionary.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Xml.XmlDictionary\n  langs:\n  - csharp\n  - vb\n  name: XmlDictionary(Int32)\n  fullName: System.Xml.XmlDictionary.XmlDictionary(System.Int32)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 126\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Xml\n  summary: \"\\n<p>Creates a <xref href=\\\"System.Xml.XmlDictionary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with an initial capacity.</p>\\n\"\n  syntax:\n    content: public XmlDictionary(int capacity)\n    content.vb: Public Sub New(capacity As Integer)\n    parameters:\n    - id: capacity\n      type: System.Int32\n      description: \"\\n<p>The initial size of the dictionary.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlDictionary.XmlDictionary(Int32)\n- uid: System.Xml.XmlDictionary.Empty\n  commentId: P:System.Xml.XmlDictionary.Empty\n  id: Empty\n  parent: System.Xml.XmlDictionary\n  langs:\n  - csharp\n  - vb\n  name: Empty\n  fullName: System.Xml.XmlDictionary.Empty\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Empty\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 127\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Xml\n  summary: \"\\n<p>Gets a <strong>static</strong> empty <xref href=\\\"System.Xml.IXmlDictionary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public static IXmlDictionary Empty { get; }\n    content.vb: Public Shared ReadOnly Property Empty As IXmlDictionary\n    parameters: []\n    return:\n      type: System.Xml.IXmlDictionary\n      description: \"\\n<p>A <strong>static</strong> empty <xref href=\\\"System.Xml.IXmlDictionary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: XmlDictionary.Empty\n- uid: System.Xml.XmlDictionary.Add(System.String)\n  commentId: M:System.Xml.XmlDictionary.Add(System.String)\n  id: Add(System.String)\n  parent: System.Xml.XmlDictionary\n  langs:\n  - csharp\n  - vb\n  name: Add(String)\n  fullName: System.Xml.XmlDictionary.Add(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Add\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 128\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Xml\n  summary: \"\\n<p>Adds a string to the <xref href=\\\"System.Xml.XmlDictionary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual XmlDictionaryString Add(string value)\n    content.vb: Public Overridable Function Add(value As String) As XmlDictionaryString\n    parameters:\n    - id: value\n      type: System.String\n      description: \"\\n<p>String to add to the dictionary.</p>\\n\"\n    return:\n      type: System.Xml.XmlDictionaryString\n      description: \"\\n<p>The <xref href=\\\"System.Xml.XmlDictionaryString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that was added.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlDictionary.Add(String)\n- uid: System.Xml.XmlDictionary.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)\n  commentId: M:System.Xml.XmlDictionary.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)\n  id: TryLookup(System.Int32,System.Xml.XmlDictionaryString@)\n  parent: System.Xml.XmlDictionary\n  langs:\n  - csharp\n  - vb\n  name: TryLookup(Int32, out XmlDictionaryString)\n  fullName: System.Xml.XmlDictionary.TryLookup(System.Int32, out System.Xml.XmlDictionaryString)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TryLookup\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 129\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Xml\n  summary: \"\\n<p>Attempts to look up an entry in the dictionary.</p>\\n\"\n  syntax:\n    content: public virtual bool TryLookup(int key, out XmlDictionaryString result)\n    content.vb: Public Overridable Function TryLookup(key As Integer, ByRef result As XmlDictionaryString) As Boolean\n    parameters:\n    - id: key\n      type: System.Int32\n      description: \"\\n<p>Key to look up.</p>\\n\"\n    - id: result\n      type: System.Xml.XmlDictionaryString\n      description: \"\\n<p>If <em>key</em> is defined, the <xref href=\\\"System.Xml.XmlDictionaryString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is mapped to the key; otherwise <strong>null</strong>.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if key is in the dictionary, otherwise <strong>false</strong>.</p>\\n\"\n  implements:\n  - System.Xml.IXmlDictionary.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  fullName.vb: System.Xml.XmlDictionary.TryLookup(System.Int32, ByRef System.Xml.XmlDictionaryString)\n  name.vb: TryLookup(Int32, ByRef XmlDictionaryString)\n  nameWithType: XmlDictionary.TryLookup(Int32, out XmlDictionaryString)\n  nameWithType.vb: XmlDictionary.TryLookup(Int32, ByRef XmlDictionaryString)\n- uid: System.Xml.XmlDictionary.TryLookup(System.String,System.Xml.XmlDictionaryString@)\n  commentId: M:System.Xml.XmlDictionary.TryLookup(System.String,System.Xml.XmlDictionaryString@)\n  id: TryLookup(System.String,System.Xml.XmlDictionaryString@)\n  parent: System.Xml.XmlDictionary\n  langs:\n  - csharp\n  - vb\n  name: TryLookup(String, out XmlDictionaryString)\n  fullName: System.Xml.XmlDictionary.TryLookup(System.String, out System.Xml.XmlDictionaryString)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TryLookup\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 130\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Xml\n  summary: \"\\n<p>Checks the dictionary for a specified string value.</p>\\n\"\n  syntax:\n    content: public virtual bool TryLookup(string value, out XmlDictionaryString result)\n    content.vb: Public Overridable Function TryLookup(value As String, ByRef result As XmlDictionaryString) As Boolean\n    parameters:\n    - id: value\n      type: System.String\n      description: \"\\n<p>String value being checked for.</p>\\n\"\n    - id: result\n      type: System.Xml.XmlDictionaryString\n      description: \"\\n<p>The corresponding <xref href=\\\"System.Xml.XmlDictionaryString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, if found; otherwise <strong>null</strong>.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if value is in the dictionary, otherwise <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>value</em> is <strong>null</strong>.</p>\\n\"\n  implements:\n  - System.Xml.IXmlDictionary.TryLookup(System.String,System.Xml.XmlDictionaryString@)\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  fullName.vb: System.Xml.XmlDictionary.TryLookup(System.String, ByRef System.Xml.XmlDictionaryString)\n  name.vb: TryLookup(String, ByRef XmlDictionaryString)\n  nameWithType: XmlDictionary.TryLookup(String, out XmlDictionaryString)\n  nameWithType.vb: XmlDictionary.TryLookup(String, ByRef XmlDictionaryString)\n- uid: System.Xml.XmlDictionary.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)\n  commentId: M:System.Xml.XmlDictionary.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)\n  id: TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)\n  parent: System.Xml.XmlDictionary\n  langs:\n  - csharp\n  - vb\n  name: TryLookup(XmlDictionaryString, out XmlDictionaryString)\n  fullName: System.Xml.XmlDictionary.TryLookup(System.Xml.XmlDictionaryString, out System.Xml.XmlDictionaryString)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TryLookup\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 131\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Xml\n  summary: \"\\n<p>Checks the dictionary for a specified <xref href=\\\"System.Xml.XmlDictionaryString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual bool TryLookup(XmlDictionaryString value, out XmlDictionaryString result)\n    content.vb: Public Overridable Function TryLookup(value As XmlDictionaryString, ByRef result As XmlDictionaryString) As Boolean\n    parameters:\n    - id: value\n      type: System.Xml.XmlDictionaryString\n      description: \"\\n<p>The <xref href=\\\"System.Xml.XmlDictionaryString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> being checked for.</p>\\n\"\n    - id: result\n      type: System.Xml.XmlDictionaryString\n      description: \"\\n<p>The matching <xref href=\\\"System.Xml.XmlDictionaryString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, if found; otherwise <strong>null</strong>.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <xref href=\\\"System.Xml.XmlDictionaryString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is in the dictionary, otherwise <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>value</em> is <strong>null</strong>.</p>\\n\"\n  implements:\n  - System.Xml.IXmlDictionary.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  fullName.vb: System.Xml.XmlDictionary.TryLookup(System.Xml.XmlDictionaryString, ByRef System.Xml.XmlDictionaryString)\n  name.vb: TryLookup(XmlDictionaryString, ByRef XmlDictionaryString)\n  nameWithType: XmlDictionary.TryLookup(XmlDictionaryString, out XmlDictionaryString)\n  nameWithType.vb: XmlDictionary.TryLookup(XmlDictionaryString, ByRef XmlDictionaryString)\nreferences:\n- uid: System.Xml\n  isExternal: false\n  name: System.Xml\n  fullName: System.Xml\n  commentId: N:System.Xml\n  nameWithType: System.Xml\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Xml.IXmlDictionary\n  parent: System.Xml\n  isExternal: false\n  name: IXmlDictionary\n  fullName: System.Xml.IXmlDictionary\n  commentId: T:System.Xml.IXmlDictionary\n  nameWithType: IXmlDictionary\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Xml.XmlDictionaryString\n  parent: System.Xml\n  isExternal: false\n  name: XmlDictionaryString\n  fullName: System.Xml.XmlDictionaryString\n  commentId: T:System.Xml.XmlDictionaryString\n  nameWithType: XmlDictionaryString\n- uid: System.Xml.IXmlDictionary.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)\n  parent: System.Xml.IXmlDictionary\n  isExternal: true\n  name: TryLookup(Int32, XmlDictionaryString)\n  fullName: System.Xml.IXmlDictionary.TryLookup(System.Int32, System.Xml.XmlDictionaryString)\n  spec.csharp:\n  - uid: System.Xml.IXmlDictionary.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)\n    name: TryLookup\n    fullName: System.Xml.IXmlDictionary.TryLookup\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.XmlDictionaryString\n    name: XmlDictionaryString\n    fullName: System.Xml.XmlDictionaryString\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.IXmlDictionary.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)\n    name: TryLookup\n    fullName: System.Xml.IXmlDictionary.TryLookup\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.XmlDictionaryString\n    name: XmlDictionaryString\n    fullName: System.Xml.XmlDictionaryString\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.IXmlDictionary.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)\n  nameWithType: IXmlDictionary.TryLookup(Int32, XmlDictionaryString)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Xml.IXmlDictionary.TryLookup(System.String,System.Xml.XmlDictionaryString@)\n  parent: System.Xml.IXmlDictionary\n  isExternal: true\n  name: TryLookup(String, XmlDictionaryString)\n  fullName: System.Xml.IXmlDictionary.TryLookup(System.String, System.Xml.XmlDictionaryString)\n  spec.csharp:\n  - uid: System.Xml.IXmlDictionary.TryLookup(System.String,System.Xml.XmlDictionaryString@)\n    name: TryLookup\n    fullName: System.Xml.IXmlDictionary.TryLookup\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.XmlDictionaryString\n    name: XmlDictionaryString\n    fullName: System.Xml.XmlDictionaryString\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.IXmlDictionary.TryLookup(System.String,System.Xml.XmlDictionaryString@)\n    name: TryLookup\n    fullName: System.Xml.IXmlDictionary.TryLookup\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.XmlDictionaryString\n    name: XmlDictionaryString\n    fullName: System.Xml.XmlDictionaryString\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.IXmlDictionary.TryLookup(System.String,System.Xml.XmlDictionaryString@)\n  nameWithType: IXmlDictionary.TryLookup(String, XmlDictionaryString)\n- uid: System.Xml.IXmlDictionary.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)\n  parent: System.Xml.IXmlDictionary\n  isExternal: false\n  name: TryLookup(XmlDictionaryString, XmlDictionaryString)\n  fullName: System.Xml.IXmlDictionary.TryLookup(System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString)\n  spec.csharp:\n  - uid: System.Xml.IXmlDictionary.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)\n    name: TryLookup\n    fullName: System.Xml.IXmlDictionary.TryLookup\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlDictionaryString\n    name: XmlDictionaryString\n    fullName: System.Xml.XmlDictionaryString\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.XmlDictionaryString\n    name: XmlDictionaryString\n    fullName: System.Xml.XmlDictionaryString\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.IXmlDictionary.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)\n    name: TryLookup\n    fullName: System.Xml.IXmlDictionary.TryLookup\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlDictionaryString\n    name: XmlDictionaryString\n    fullName: System.Xml.XmlDictionaryString\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.XmlDictionaryString\n    name: XmlDictionaryString\n    fullName: System.Xml.XmlDictionaryString\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.IXmlDictionary.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)\n  nameWithType: IXmlDictionary.TryLookup(XmlDictionaryString, XmlDictionaryString)\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n"}