{"nodes":[{"pos":[1478,1497],"content":"AssemblyLoadContext","needQuote":true,"nodes":[{"content":"AssemblyLoadContext","pos":[0,19]}]},{"pos":[2819,2840],"content":"AssemblyLoadContext()","needQuote":true,"nodes":[{"content":"AssemblyLoadContext()","pos":[0,21]}]},{"pos":[3717,3724],"content":"Default","needQuote":true,"nodes":[{"content":"Default","pos":[0,7]}]},{"pos":[4828,4851],"content":"GetAssemblyName(String)","needQuote":true,"nodes":[{"content":"GetAssemblyName(String)","pos":[0,23]}]},{"pos":[6079,6103],"content":"GetLoadContext(Assembly)","needQuote":true,"nodes":[{"content":"GetLoadContext(Assembly)","pos":[0,24]}]},{"pos":[7353,7371],"content":"Load(AssemblyName)","needQuote":true,"nodes":[{"content":"Load(AssemblyName)","pos":[0,18]}]},{"pos":[8642,8676],"content":"LoadFromAssemblyName(AssemblyName)","needQuote":true,"nodes":[{"content":"LoadFromAssemblyName(AssemblyName)","pos":[0,34]}]},{"pos":[9912,9940],"content":"LoadFromAssemblyPath(String)","needQuote":true,"nodes":[{"content":"LoadFromAssemblyPath(String)","pos":[0,28]}]},{"pos":[11174,11213],"content":"LoadFromNativeImagePath(String, String)","needQuote":true,"nodes":[{"content":"LoadFromNativeImagePath(String, String)","pos":[0,39]}]},{"pos":[12529,12551],"content":"LoadFromStream(Stream)","needQuote":true,"nodes":[{"content":"LoadFromStream(Stream)","pos":[0,22]}]},{"pos":[13741,13771],"content":"LoadFromStream(Stream, Stream)","needQuote":true,"nodes":[{"content":"LoadFromStream(Stream, Stream)","pos":[0,30]}]},{"pos":[15063,15095],"content":"LoadUnmanagedDllFromPath(String)","needQuote":true,"nodes":[{"content":"LoadUnmanagedDllFromPath(String)","pos":[0,32]}]},{"pos":[16294,16318],"content":"LoadUnmanagedDll(String)","needQuote":true,"nodes":[{"content":"LoadUnmanagedDll(String)","pos":[0,24]}]},{"pos":[17555,17589],"content":"SetProfileOptimizationRoot(String)","needQuote":true,"nodes":[{"content":"SetProfileOptimizationRoot(String)","pos":[0,34]}]},{"pos":[18746,18778],"content":"StartProfileOptimization(String)","needQuote":true,"nodes":[{"content":"StartProfileOptimization(String)","pos":[0,32]}]},{"pos":[19817,19826],"content":"Resolving","needQuote":true,"nodes":[{"content":"Resolving","pos":[0,9]}]},{"pos":[20917,20926],"content":"Unloading","needQuote":true,"nodes":[{"content":"Unloading","pos":[0,9]}]},{"pos":[21757,21778],"content":"System.Runtime.Loader","needQuote":true,"nodes":[{"content":"System.Runtime.Loader","pos":[0,21]}]},{"pos":[21954,21960],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22120,22130],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[22259,22267],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[22370,22371],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22418,22419],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22509,22517],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[22620,22621],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22668,22669],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22838,22852],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[23009,23015],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[23114,23115],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23185,23191],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23276,23277],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23380,23386],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[23485,23486],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23556,23562],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23647,23648],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23844,23866],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[24060,24066],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[24165,24166],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24236,24242],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[24328,24329]},{"pos":[24407,24413],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24498,24499],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24616,24622],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[24721,24722],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24792,24798],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[24884,24885]},{"pos":[24963,24969],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[25054,25055],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25274,25305],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[25526,25541],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[25658,25659],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25729,25735],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[25821,25822]},{"pos":[25900,25906],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[25991,25992],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26118,26133],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[26250,26251],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26321,26327],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[26413,26414]},{"pos":[26492,26498],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[26583,26584],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26779,26792],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[26930,26941],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[27050,27051],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27098,27099],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27192,27203],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[27312,27313],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27360,27361],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27519,27528],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[27654,27661],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[27762,27763],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27810,27811],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27900,27907],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[28008,28009],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28056,28057],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28219,28236],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[28386,28401],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[28518,28519],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28566,28567],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28664,28679],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[28796,28797],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28844,28845],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28969,28975],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[29149,29168],"content":"AssemblyLoadContext","needQuote":true,"nodes":[{"content":"AssemblyLoadContext","pos":[0,19]}]},{"pos":[29382,29388],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[29561,29573],"content":"AssemblyName","needQuote":true,"nodes":[{"content":"AssemblyName","pos":[0,12]}]},{"pos":[29745,29762],"content":"System.Reflection","needQuote":true,"nodes":[{"content":"System.Reflection","pos":[0,17]}]},{"pos":[29950,29958],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[30137,30143],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[30273,30282],"content":"System.IO","needQuote":true,"nodes":[{"content":"System.IO","pos":[0,9]}]},{"pos":[30422,30428],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[30680,30729],"content":"Func<AssemblyLoadContext, AssemblyName, Assembly>","needQuote":true,"nodes":[{"content":"Func&lt;AssemblyLoadContext, AssemblyName, Assembly&gt;","pos":[0,49],"source":"Func<AssemblyLoadContext, AssemblyName, Assembly>"}]},{"pos":[31240,31244],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[31325,31326],"content":"<","needQuote":true,"nodes":[]},{"pos":[31424,31443],"content":"AssemblyLoadContext","needQuote":true,"nodes":[{"content":"AssemblyLoadContext","pos":[0,19]}]},{"content":",","pos":[31549,31550]},{"pos":[31645,31657],"content":"AssemblyName","needQuote":true,"nodes":[{"content":"AssemblyName","pos":[0,12]}]},{"content":",","pos":[31766,31767]},{"pos":[31858,31866],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[32054,32058],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[32140,32143]},{"pos":[32253,32272],"content":"AssemblyLoadContext","needQuote":true,"nodes":[{"content":"AssemblyLoadContext","pos":[0,19]}]},{"content":",","pos":[32378,32379]},{"pos":[32474,32486],"content":"AssemblyName","needQuote":true,"nodes":[{"content":"AssemblyName","pos":[0,12]}]},{"content":",","pos":[32595,32596]},{"pos":[32687,32695],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[32795,32796],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33010,33031],"content":"Func<T1, T2, TResult>","needQuote":true,"nodes":[{"content":"Func&lt;T1, T2, TResult&gt;","pos":[0,21],"source":"Func<T1, T2, TResult>"}]},{"pos":[33286,33290],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[33350,33351],"content":"<","needQuote":true,"nodes":[]},{"pos":[33398,33400],"content":"T1","needQuote":true,"nodes":[{"content":"T1","pos":[0,2]}]},{"content":",","pos":[33450,33451]},{"pos":[33506,33508],"content":"T2","needQuote":true,"nodes":[{"content":"T2","pos":[0,2]}]},{"content":",","pos":[33558,33559]},{"pos":[33614,33621],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[33768,33772],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[33833,33836]},{"pos":[33895,33897],"content":"T1","needQuote":true,"nodes":[{"content":"T1","pos":[0,2]}]},{"content":",","pos":[33947,33948]},{"pos":[34003,34005],"content":"T2","needQuote":true,"nodes":[{"content":"T2","pos":[0,2]}]},{"content":",","pos":[34055,34056]},{"pos":[34111,34118],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[34177,34178],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34363,34390],"content":"Action<AssemblyLoadContext>","needQuote":true,"nodes":[{"content":"Action&lt;AssemblyLoadContext&gt;","pos":[0,27],"source":"Action<AssemblyLoadContext>"}]},{"pos":[34721,34727],"content":"Action","needQuote":true,"nodes":[{"content":"Action","pos":[0,6]}]},{"pos":[34812,34813],"content":"<","needQuote":true,"nodes":[]},{"pos":[34911,34930],"content":"AssemblyLoadContext","needQuote":true,"nodes":[{"content":"AssemblyLoadContext","pos":[0,19]}]},{"pos":[35125,35131],"content":"Action","needQuote":true,"nodes":[{"content":"Action","pos":[0,6]}]},{"content":"(Of","pos":[35217,35220]},{"pos":[35330,35349],"content":"AssemblyLoadContext","needQuote":true,"nodes":[{"content":"AssemblyLoadContext","pos":[0,19]}]},{"pos":[35454,35455],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35615,35624],"content":"Action<T>","needQuote":true,"nodes":[{"content":"Action&lt;T&gt;","pos":[0,9],"source":"Action<T>"}]},{"pos":[35821,35827],"content":"Action","needQuote":true,"nodes":[{"content":"Action","pos":[0,6]}]},{"pos":[35891,35892],"content":"<","needQuote":true,"nodes":[]},{"pos":[35939,35940],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[36077,36083],"content":"Action","needQuote":true,"nodes":[{"content":"Action","pos":[0,6]}]},{"content":"(Of","pos":[36148,36151]},{"pos":[36210,36211],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[36258,36259],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]}],"content":"items:\n- uid: System.Runtime.Loader.AssemblyLoadContext\n  commentId: T:System.Runtime.Loader.AssemblyLoadContext\n  id: AssemblyLoadContext\n  parent: System.Runtime.Loader\n  children:\n  - System.Runtime.Loader.AssemblyLoadContext.#ctor\n  - System.Runtime.Loader.AssemblyLoadContext.Default\n  - System.Runtime.Loader.AssemblyLoadContext.GetAssemblyName(System.String)\n  - System.Runtime.Loader.AssemblyLoadContext.GetLoadContext(System.Reflection.Assembly)\n  - System.Runtime.Loader.AssemblyLoadContext.Load(System.Reflection.AssemblyName)\n  - System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyName(System.Reflection.AssemblyName)\n  - System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyPath(System.String)\n  - System.Runtime.Loader.AssemblyLoadContext.LoadFromNativeImagePath(System.String,System.String)\n  - System.Runtime.Loader.AssemblyLoadContext.LoadFromStream(System.IO.Stream)\n  - System.Runtime.Loader.AssemblyLoadContext.LoadFromStream(System.IO.Stream,System.IO.Stream)\n  - System.Runtime.Loader.AssemblyLoadContext.LoadUnmanagedDll(System.String)\n  - System.Runtime.Loader.AssemblyLoadContext.LoadUnmanagedDllFromPath(System.String)\n  - System.Runtime.Loader.AssemblyLoadContext.Resolving\n  - System.Runtime.Loader.AssemblyLoadContext.SetProfileOptimizationRoot(System.String)\n  - System.Runtime.Loader.AssemblyLoadContext.StartProfileOptimization(System.String)\n  - System.Runtime.Loader.AssemblyLoadContext.Unloading\n  langs:\n  - csharp\n  - vb\n  name: AssemblyLoadContext\n  nameWithType: AssemblyLoadContext\n  fullName: System.Runtime.Loader.AssemblyLoadContext\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Loader/AssemblyLoadContext.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AssemblyLoadContext\n    path: src/mscorlib/src/System/Runtime/Loader/AssemblyLoadContext.cs\n    startLine: 19\n  assemblies:\n  - System.Runtime.Loader\n  namespace: System.Runtime.Loader\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public abstract class AssemblyLoadContext\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public MustInherit Class AssemblyLoadContext\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n- uid: System.Runtime.Loader.AssemblyLoadContext.#ctor\n  commentId: M:System.Runtime.Loader.AssemblyLoadContext.#ctor\n  id: '#ctor'\n  parent: System.Runtime.Loader.AssemblyLoadContext\n  langs:\n  - csharp\n  - vb\n  name: AssemblyLoadContext()\n  nameWithType: AssemblyLoadContext.AssemblyLoadContext()\n  fullName: System.Runtime.Loader.AssemblyLoadContext.AssemblyLoadContext()\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Loader/AssemblyLoadContext.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Runtime/Loader/AssemblyLoadContext.cs\n    startLine: 48\n  assemblies:\n  - System.Runtime.Loader\n  namespace: System.Runtime.Loader\n  syntax:\n    content: protected AssemblyLoadContext()\n    content.vb: Protected Sub New\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n- uid: System.Runtime.Loader.AssemblyLoadContext.Default\n  commentId: P:System.Runtime.Loader.AssemblyLoadContext.Default\n  id: Default\n  parent: System.Runtime.Loader.AssemblyLoadContext\n  langs:\n  - csharp\n  - vb\n  name: Default\n  nameWithType: AssemblyLoadContext.Default\n  fullName: System.Runtime.Loader.AssemblyLoadContext.Default\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Loader/AssemblyLoadContext.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Default\n    path: src/mscorlib/src/System/Runtime/Loader/AssemblyLoadContext.cs\n    startLine: 327\n  assemblies:\n  - System.Runtime.Loader\n  namespace: System.Runtime.Loader\n  syntax:\n    content: public static AssemblyLoadContext Default { get; }\n    content.vb: Public Shared ReadOnly Property Default As AssemblyLoadContext\n    parameters: []\n    return:\n      type: System.Runtime.Loader.AssemblyLoadContext\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n- uid: System.Runtime.Loader.AssemblyLoadContext.GetAssemblyName(System.String)\n  commentId: M:System.Runtime.Loader.AssemblyLoadContext.GetAssemblyName(System.String)\n  id: GetAssemblyName(System.String)\n  parent: System.Runtime.Loader.AssemblyLoadContext\n  langs:\n  - csharp\n  - vb\n  name: GetAssemblyName(String)\n  nameWithType: AssemblyLoadContext.GetAssemblyName(String)\n  fullName: System.Runtime.Loader.AssemblyLoadContext.GetAssemblyName(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Loader/AssemblyLoadContext.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetAssemblyName\n    path: src/mscorlib/src/System/Runtime/Loader/AssemblyLoadContext.cs\n    startLine: 379\n  assemblies:\n  - System.Runtime.Loader\n  namespace: System.Runtime.Loader\n  syntax:\n    content: public static AssemblyName GetAssemblyName(string assemblyPath)\n    content.vb: Public Shared Function GetAssemblyName(assemblyPath As String) As AssemblyName\n    parameters:\n    - id: assemblyPath\n      type: System.String\n    return:\n      type: System.Reflection.AssemblyName\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n- uid: System.Runtime.Loader.AssemblyLoadContext.GetLoadContext(System.Reflection.Assembly)\n  commentId: M:System.Runtime.Loader.AssemblyLoadContext.GetLoadContext(System.Reflection.Assembly)\n  id: GetLoadContext(System.Reflection.Assembly)\n  parent: System.Runtime.Loader.AssemblyLoadContext\n  langs:\n  - csharp\n  - vb\n  name: GetLoadContext(Assembly)\n  nameWithType: AssemblyLoadContext.GetLoadContext(Assembly)\n  fullName: System.Runtime.Loader.AssemblyLoadContext.GetLoadContext(System.Reflection.Assembly)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Loader/AssemblyLoadContext.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetLoadContext\n    path: src/mscorlib/src/System/Runtime/Loader/AssemblyLoadContext.cs\n    startLine: 395\n  assemblies:\n  - System.Runtime.Loader\n  namespace: System.Runtime.Loader\n  syntax:\n    content: public static AssemblyLoadContext GetLoadContext(Assembly assembly)\n    content.vb: Public Shared Function GetLoadContext(assembly As Assembly) As AssemblyLoadContext\n    parameters:\n    - id: assembly\n      type: System.Reflection.Assembly\n    return:\n      type: System.Runtime.Loader.AssemblyLoadContext\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n- uid: System.Runtime.Loader.AssemblyLoadContext.Load(System.Reflection.AssemblyName)\n  commentId: M:System.Runtime.Loader.AssemblyLoadContext.Load(System.Reflection.AssemblyName)\n  id: Load(System.Reflection.AssemblyName)\n  parent: System.Runtime.Loader.AssemblyLoadContext\n  langs:\n  - csharp\n  - vb\n  name: Load(AssemblyName)\n  nameWithType: AssemblyLoadContext.Load(AssemblyName)\n  fullName: System.Runtime.Loader.AssemblyLoadContext.Load(System.Reflection.AssemblyName)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Loader/AssemblyLoadContext.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Load\n    path: src/mscorlib/src/System/Runtime/Loader/AssemblyLoadContext.cs\n    startLine: 171\n  assemblies:\n  - System.Runtime.Loader\n  namespace: System.Runtime.Loader\n  syntax:\n    content: protected abstract Assembly Load(AssemblyName assemblyName)\n    content.vb: Protected MustOverride Function Load(assemblyName As AssemblyName) As Assembly\n    parameters:\n    - id: assemblyName\n      type: System.Reflection.AssemblyName\n    return:\n      type: System.Reflection.Assembly\n  modifiers.csharp:\n  - protected\n  - abstract\n  modifiers.vb:\n  - Protected\n  - MustOverride\n- uid: System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyName(System.Reflection.AssemblyName)\n  commentId: M:System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyName(System.Reflection.AssemblyName)\n  id: LoadFromAssemblyName(System.Reflection.AssemblyName)\n  parent: System.Runtime.Loader.AssemblyLoadContext\n  langs:\n  - csharp\n  - vb\n  name: LoadFromAssemblyName(AssemblyName)\n  nameWithType: AssemblyLoadContext.LoadFromAssemblyName(AssemblyName)\n  fullName: System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyName(System.Reflection.AssemblyName)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Loader/AssemblyLoadContext.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: LoadFromAssemblyName\n    path: src/mscorlib/src/System/Runtime/Loader/AssemblyLoadContext.cs\n    startLine: 271\n  assemblies:\n  - System.Runtime.Loader\n  namespace: System.Runtime.Loader\n  syntax:\n    content: public Assembly LoadFromAssemblyName(AssemblyName assemblyName)\n    content.vb: Public Function LoadFromAssemblyName(assemblyName As AssemblyName) As Assembly\n    parameters:\n    - id: assemblyName\n      type: System.Reflection.AssemblyName\n    return:\n      type: System.Reflection.Assembly\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n- uid: System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyPath(System.String)\n  commentId: M:System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyPath(System.String)\n  id: LoadFromAssemblyPath(System.String)\n  parent: System.Runtime.Loader.AssemblyLoadContext\n  langs:\n  - csharp\n  - vb\n  name: LoadFromAssemblyPath(String)\n  nameWithType: AssemblyLoadContext.LoadFromAssemblyPath(String)\n  fullName: System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyPath(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Loader/AssemblyLoadContext.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: LoadFromAssemblyPath\n    path: src/mscorlib/src/System/Runtime/Loader/AssemblyLoadContext.cs\n    startLine: 84\n  assemblies:\n  - System.Runtime.Loader\n  namespace: System.Runtime.Loader\n  syntax:\n    content: public Assembly LoadFromAssemblyPath(string assemblyPath)\n    content.vb: Public Function LoadFromAssemblyPath(assemblyPath As String) As Assembly\n    parameters:\n    - id: assemblyPath\n      type: System.String\n    return:\n      type: System.Reflection.Assembly\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n- uid: System.Runtime.Loader.AssemblyLoadContext.LoadFromNativeImagePath(System.String,System.String)\n  commentId: M:System.Runtime.Loader.AssemblyLoadContext.LoadFromNativeImagePath(System.String,System.String)\n  id: LoadFromNativeImagePath(System.String,System.String)\n  parent: System.Runtime.Loader.AssemblyLoadContext\n  langs:\n  - csharp\n  - vb\n  name: LoadFromNativeImagePath(String, String)\n  nameWithType: AssemblyLoadContext.LoadFromNativeImagePath(String, String)\n  fullName: System.Runtime.Loader.AssemblyLoadContext.LoadFromNativeImagePath(System.String, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Loader/AssemblyLoadContext.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: LoadFromNativeImagePath\n    path: src/mscorlib/src/System/Runtime/Loader/AssemblyLoadContext.cs\n    startLine: 101\n  assemblies:\n  - System.Runtime.Loader\n  namespace: System.Runtime.Loader\n  syntax:\n    content: public Assembly LoadFromNativeImagePath(string nativeImagePath, string assemblyPath)\n    content.vb: Public Function LoadFromNativeImagePath(nativeImagePath As String, assemblyPath As String) As Assembly\n    parameters:\n    - id: nativeImagePath\n      type: System.String\n    - id: assemblyPath\n      type: System.String\n    return:\n      type: System.Reflection.Assembly\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n- uid: System.Runtime.Loader.AssemblyLoadContext.LoadFromStream(System.IO.Stream)\n  commentId: M:System.Runtime.Loader.AssemblyLoadContext.LoadFromStream(System.IO.Stream)\n  id: LoadFromStream(System.IO.Stream)\n  parent: System.Runtime.Loader.AssemblyLoadContext\n  langs:\n  - csharp\n  - vb\n  name: LoadFromStream(Stream)\n  nameWithType: AssemblyLoadContext.LoadFromStream(Stream)\n  fullName: System.Runtime.Loader.AssemblyLoadContext.LoadFromStream(System.IO.Stream)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Loader/AssemblyLoadContext.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: LoadFromStream\n    path: src/mscorlib/src/System/Runtime/Loader/AssemblyLoadContext.cs\n    startLine: 125\n  assemblies:\n  - System.Runtime.Loader\n  namespace: System.Runtime.Loader\n  syntax:\n    content: public Assembly LoadFromStream(Stream assembly)\n    content.vb: Public Function LoadFromStream(assembly As Stream) As Assembly\n    parameters:\n    - id: assembly\n      type: System.IO.Stream\n    return:\n      type: System.Reflection.Assembly\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n- uid: System.Runtime.Loader.AssemblyLoadContext.LoadFromStream(System.IO.Stream,System.IO.Stream)\n  commentId: M:System.Runtime.Loader.AssemblyLoadContext.LoadFromStream(System.IO.Stream,System.IO.Stream)\n  id: LoadFromStream(System.IO.Stream,System.IO.Stream)\n  parent: System.Runtime.Loader.AssemblyLoadContext\n  langs:\n  - csharp\n  - vb\n  name: LoadFromStream(Stream, Stream)\n  nameWithType: AssemblyLoadContext.LoadFromStream(Stream, Stream)\n  fullName: System.Runtime.Loader.AssemblyLoadContext.LoadFromStream(System.IO.Stream, System.IO.Stream)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Loader/AssemblyLoadContext.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: LoadFromStream\n    path: src/mscorlib/src/System/Runtime/Loader/AssemblyLoadContext.cs\n    startLine: 130\n  assemblies:\n  - System.Runtime.Loader\n  namespace: System.Runtime.Loader\n  syntax:\n    content: public Assembly LoadFromStream(Stream assembly, Stream assemblySymbols)\n    content.vb: Public Function LoadFromStream(assembly As Stream, assemblySymbols As Stream) As Assembly\n    parameters:\n    - id: assembly\n      type: System.IO.Stream\n    - id: assemblySymbols\n      type: System.IO.Stream\n    return:\n      type: System.Reflection.Assembly\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n- uid: System.Runtime.Loader.AssemblyLoadContext.LoadUnmanagedDllFromPath(System.String)\n  commentId: M:System.Runtime.Loader.AssemblyLoadContext.LoadUnmanagedDllFromPath(System.String)\n  id: LoadUnmanagedDllFromPath(System.String)\n  parent: System.Runtime.Loader.AssemblyLoadContext\n  langs:\n  - csharp\n  - vb\n  name: LoadUnmanagedDllFromPath(String)\n  nameWithType: AssemblyLoadContext.LoadUnmanagedDllFromPath(String)\n  fullName: System.Runtime.Loader.AssemblyLoadContext.LoadUnmanagedDllFromPath(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Loader/AssemblyLoadContext.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: LoadUnmanagedDllFromPath\n    path: src/mscorlib/src/System/Runtime/Loader/AssemblyLoadContext.cs\n    startLine: 292\n  assemblies:\n  - System.Runtime.Loader\n  namespace: System.Runtime.Loader\n  syntax:\n    content: protected IntPtr LoadUnmanagedDllFromPath(string unmanagedDllPath)\n    content.vb: Protected Function LoadUnmanagedDllFromPath(unmanagedDllPath As String) As IntPtr\n    parameters:\n    - id: unmanagedDllPath\n      type: System.String\n    return:\n      type: System.IntPtr\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n- uid: System.Runtime.Loader.AssemblyLoadContext.LoadUnmanagedDll(System.String)\n  commentId: M:System.Runtime.Loader.AssemblyLoadContext.LoadUnmanagedDll(System.String)\n  id: LoadUnmanagedDll(System.String)\n  parent: System.Runtime.Loader.AssemblyLoadContext\n  langs:\n  - csharp\n  - vb\n  name: LoadUnmanagedDll(String)\n  nameWithType: AssemblyLoadContext.LoadUnmanagedDll(String)\n  fullName: System.Runtime.Loader.AssemblyLoadContext.LoadUnmanagedDll(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Loader/AssemblyLoadContext.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: LoadUnmanagedDll\n    path: src/mscorlib/src/System/Runtime/Loader/AssemblyLoadContext.cs\n    startLine: 313\n  assemblies:\n  - System.Runtime.Loader\n  namespace: System.Runtime.Loader\n  syntax:\n    content: protected virtual IntPtr LoadUnmanagedDll(string unmanagedDllName)\n    content.vb: Protected Overridable Function LoadUnmanagedDll(unmanagedDllName As String) As IntPtr\n    parameters:\n    - id: unmanagedDllName\n      type: System.String\n    return:\n      type: System.IntPtr\n  modifiers.csharp:\n  - protected\n  - virtual\n  modifiers.vb:\n  - Protected\n  - Overridable\n- uid: System.Runtime.Loader.AssemblyLoadContext.SetProfileOptimizationRoot(System.String)\n  commentId: M:System.Runtime.Loader.AssemblyLoadContext.SetProfileOptimizationRoot(System.String)\n  id: SetProfileOptimizationRoot(System.String)\n  parent: System.Runtime.Loader.AssemblyLoadContext\n  langs:\n  - csharp\n  - vb\n  name: SetProfileOptimizationRoot(String)\n  nameWithType: AssemblyLoadContext.SetProfileOptimizationRoot(String)\n  fullName: System.Runtime.Loader.AssemblyLoadContext.SetProfileOptimizationRoot(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Loader/AssemblyLoadContext.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetProfileOptimizationRoot\n    path: src/mscorlib/src/System/Runtime/Loader/AssemblyLoadContext.cs\n    startLine: 420\n  assemblies:\n  - System.Runtime.Loader\n  namespace: System.Runtime.Loader\n  syntax:\n    content: public void SetProfileOptimizationRoot(string directoryPath)\n    content.vb: Public Sub SetProfileOptimizationRoot(directoryPath As String)\n    parameters:\n    - id: directoryPath\n      type: System.String\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n- uid: System.Runtime.Loader.AssemblyLoadContext.StartProfileOptimization(System.String)\n  commentId: M:System.Runtime.Loader.AssemblyLoadContext.StartProfileOptimization(System.String)\n  id: StartProfileOptimization(System.String)\n  parent: System.Runtime.Loader.AssemblyLoadContext\n  langs:\n  - csharp\n  - vb\n  name: StartProfileOptimization(String)\n  nameWithType: AssemblyLoadContext.StartProfileOptimization(String)\n  fullName: System.Runtime.Loader.AssemblyLoadContext.StartProfileOptimization(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Loader/AssemblyLoadContext.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: StartProfileOptimization\n    path: src/mscorlib/src/System/Runtime/Loader/AssemblyLoadContext.cs\n    startLine: 428\n  assemblies:\n  - System.Runtime.Loader\n  namespace: System.Runtime.Loader\n  syntax:\n    content: public void StartProfileOptimization(string profile)\n    content.vb: Public Sub StartProfileOptimization(profile As String)\n    parameters:\n    - id: profile\n      type: System.String\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n- uid: System.Runtime.Loader.AssemblyLoadContext.Resolving\n  commentId: E:System.Runtime.Loader.AssemblyLoadContext.Resolving\n  id: Resolving\n  parent: System.Runtime.Loader.AssemblyLoadContext\n  langs:\n  - csharp\n  - vb\n  name: Resolving\n  nameWithType: AssemblyLoadContext.Resolving\n  fullName: System.Runtime.Loader.AssemblyLoadContext.Resolving\n  type: Event\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Loader/AssemblyLoadContext.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Resolving\n    path: src/mscorlib/src/System/Runtime/Loader/AssemblyLoadContext.cs\n    startLine: 444\n  assemblies:\n  - System.Runtime.Loader\n  namespace: System.Runtime.Loader\n  syntax:\n    content: public event Func<AssemblyLoadContext, AssemblyName, Assembly> Resolving\n    content.vb: Public Event Resolving As Func(Of AssemblyLoadContext, AssemblyName, Assembly)\n    return:\n      type: System.Func{System.Runtime.Loader.AssemblyLoadContext,System.Reflection.AssemblyName,System.Reflection.Assembly}\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n- uid: System.Runtime.Loader.AssemblyLoadContext.Unloading\n  commentId: E:System.Runtime.Loader.AssemblyLoadContext.Unloading\n  id: Unloading\n  parent: System.Runtime.Loader.AssemblyLoadContext\n  langs:\n  - csharp\n  - vb\n  name: Unloading\n  nameWithType: AssemblyLoadContext.Unloading\n  fullName: System.Runtime.Loader.AssemblyLoadContext.Unloading\n  type: Event\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Loader/AssemblyLoadContext.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Unloading\n    path: src/mscorlib/src/System/Runtime/Loader/AssemblyLoadContext.cs\n    startLine: 445\n  assemblies:\n  - System.Runtime.Loader\n  namespace: System.Runtime.Loader\n  syntax:\n    content: public event Action<AssemblyLoadContext> Unloading\n    content.vb: Public Event Unloading As Action(Of AssemblyLoadContext)\n    return:\n      type: System.Action{System.Runtime.Loader.AssemblyLoadContext}\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\nreferences:\n- uid: System.Runtime.Loader\n  isExternal: false\n  name: System.Runtime.Loader\n  nameWithType: System.Runtime.Loader\n  fullName: System.Runtime.Loader\n  commentId: N:System.Runtime.Loader\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    nameWithType: Object.ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    nameWithType: Object.ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    nameWithType: Object.GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    nameWithType: Object.GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    nameWithType: Object.MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    nameWithType: Object.MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  nameWithType: System\n  fullName: System\n  commentId: N:System\n- uid: System.Runtime.Loader.AssemblyLoadContext\n  parent: System.Runtime.Loader\n  isExternal: false\n  name: AssemblyLoadContext\n  nameWithType: AssemblyLoadContext\n  fullName: System.Runtime.Loader.AssemblyLoadContext\n  commentId: T:System.Runtime.Loader.AssemblyLoadContext\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n  commentId: T:System.String\n- uid: System.Reflection.AssemblyName\n  parent: System.Reflection\n  isExternal: false\n  name: AssemblyName\n  nameWithType: AssemblyName\n  fullName: System.Reflection.AssemblyName\n  commentId: T:System.Reflection.AssemblyName\n- uid: System.Reflection\n  isExternal: false\n  name: System.Reflection\n  nameWithType: System.Reflection\n  fullName: System.Reflection\n  commentId: N:System.Reflection\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n  commentId: T:System.Reflection.Assembly\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n  commentId: T:System.IO.Stream\n- uid: System.IO\n  isExternal: false\n  name: System.IO\n  nameWithType: System.IO\n  fullName: System.IO\n  commentId: N:System.IO\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n  commentId: T:System.IntPtr\n- uid: System.Func{System.Runtime.Loader.AssemblyLoadContext,System.Reflection.AssemblyName,System.Reflection.Assembly}\n  parent: System\n  definition: System.Func`3\n  name: Func<AssemblyLoadContext, AssemblyName, Assembly>\n  nameWithType: Func<AssemblyLoadContext, AssemblyName, Assembly>\n  fullName: System.Func<System.Runtime.Loader.AssemblyLoadContext, System.Reflection.AssemblyName, System.Reflection.Assembly>\n  nameWithType.vb: Func(Of AssemblyLoadContext, AssemblyName, Assembly)\n  fullname.vb: System.Func(Of System.Runtime.Loader.AssemblyLoadContext, System.Reflection.AssemblyName, System.Reflection.Assembly)\n  name.vb: Func(Of AssemblyLoadContext, AssemblyName, Assembly)\n  spec.csharp:\n  - uid: System.Func`3\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Runtime.Loader.AssemblyLoadContext\n    name: AssemblyLoadContext\n    nameWithType: AssemblyLoadContext\n    fullName: System.Runtime.Loader.AssemblyLoadContext\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Reflection.AssemblyName\n    name: AssemblyName\n    nameWithType: AssemblyName\n    fullName: System.Reflection.AssemblyName\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Reflection.Assembly\n    name: Assembly\n    nameWithType: Assembly\n    fullName: System.Reflection.Assembly\n    isExternal: true\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Func`3\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - uid: System.Runtime.Loader.AssemblyLoadContext\n    name: AssemblyLoadContext\n    nameWithType: AssemblyLoadContext\n    fullName: System.Runtime.Loader.AssemblyLoadContext\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Reflection.AssemblyName\n    name: AssemblyName\n    nameWithType: AssemblyName\n    fullName: System.Reflection.AssemblyName\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Reflection.Assembly\n    name: Assembly\n    nameWithType: Assembly\n    fullName: System.Reflection.Assembly\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Func{System.Runtime.Loader.AssemblyLoadContext,System.Reflection.AssemblyName,System.Reflection.Assembly}\n- uid: System.Func`3\n  isExternal: false\n  name: Func<T1, T2, TResult>\n  nameWithType: Func<T1, T2, TResult>\n  fullName: System.Func<T1, T2, TResult>\n  nameWithType.vb: Func(Of T1, T2, TResult)\n  fullname.vb: System.Func(Of T1, T2, TResult)\n  name.vb: Func(Of T1, T2, TResult)\n  spec.csharp:\n  - uid: System.Func`3\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: T1\n    nameWithType: T1\n    fullName: T1\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - name: T2\n    nameWithType: T2\n    fullName: T2\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Func`3\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: T1\n    nameWithType: T1\n    fullName: T1\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - name: T2\n    nameWithType: T2\n    fullName: T2\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Func`3\n- uid: System.Action{System.Runtime.Loader.AssemblyLoadContext}\n  parent: System\n  definition: System.Action`1\n  name: Action<AssemblyLoadContext>\n  nameWithType: Action<AssemblyLoadContext>\n  fullName: System.Action<System.Runtime.Loader.AssemblyLoadContext>\n  nameWithType.vb: Action(Of AssemblyLoadContext)\n  fullname.vb: System.Action(Of System.Runtime.Loader.AssemblyLoadContext)\n  name.vb: Action(Of AssemblyLoadContext)\n  spec.csharp:\n  - uid: System.Action`1\n    name: Action\n    nameWithType: Action\n    fullName: System.Action\n    isExternal: true\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Runtime.Loader.AssemblyLoadContext\n    name: AssemblyLoadContext\n    nameWithType: AssemblyLoadContext\n    fullName: System.Runtime.Loader.AssemblyLoadContext\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Action`1\n    name: Action\n    nameWithType: Action\n    fullName: System.Action\n    isExternal: true\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - uid: System.Runtime.Loader.AssemblyLoadContext\n    name: AssemblyLoadContext\n    nameWithType: AssemblyLoadContext\n    fullName: System.Runtime.Loader.AssemblyLoadContext\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Action{System.Runtime.Loader.AssemblyLoadContext}\n- uid: System.Action`1\n  isExternal: false\n  name: Action<T>\n  nameWithType: Action<T>\n  fullName: System.Action<T>\n  nameWithType.vb: Action(Of T)\n  fullname.vb: System.Action(Of T)\n  name.vb: Action(Of T)\n  spec.csharp:\n  - uid: System.Action`1\n    name: Action\n    nameWithType: Action\n    fullName: System.Action\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Action`1\n    name: Action\n    nameWithType: Action\n    fullName: System.Action\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: T:System.Action`1\n"}