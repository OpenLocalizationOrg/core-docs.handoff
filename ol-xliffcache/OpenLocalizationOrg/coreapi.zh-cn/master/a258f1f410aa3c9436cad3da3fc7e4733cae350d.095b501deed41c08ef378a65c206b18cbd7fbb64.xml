{"nodes":[{"pos":[379,405],"content":"DataErrorsChangedEventArgs","needQuote":true,"nodes":[{"content":"DataErrorsChangedEventArgs","pos":[0,26]}]},{"pos":[1941,1975],"content":"DataErrorsChangedEventArgs(String)","needQuote":true,"nodes":[{"content":"DataErrorsChangedEventArgs(String)","pos":[0,34]}]},{"pos":[3395,3407],"content":"PropertyName","needQuote":true,"nodes":[{"content":"PropertyName","pos":[0,12]}]},{"pos":[4539,4560],"content":"System.ComponentModel","needQuote":true,"nodes":[{"content":"System.ComponentModel","pos":[0,21]}]},{"pos":[4736,4742],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[4890,4899],"content":"EventArgs","needQuote":true,"nodes":[{"content":"EventArgs","pos":[0,9]}]},{"pos":[5071,5076],"content":"Empty","needQuote":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[5263,5273],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[5368,5376],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[5445,5446],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5473,5474],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5544,5552],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[5621,5622],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5649,5650],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5833,5847],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[5966,5972],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[6039,6040],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6090,6096],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6156,6157],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6240,6246],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[6313,6314],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6364,6370],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6430,6431],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6645,6667],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[6815,6821],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[6888,6889],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6939,6945],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[7006,7007]},{"pos":[7062,7068],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7128,7129],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7226,7232],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7299,7300],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7350,7356],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[7417,7418]},{"pos":[7473,7479],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7539,7540],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7785,7816],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[7982,7997],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[8073,8074],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8124,8130],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8191,8192]},{"pos":[8247,8253],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8313,8314],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8420,8435],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[8511,8512],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8562,8568],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8629,8630]},{"pos":[8685,8691],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8751,8752],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8982,8995],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[9096,9107],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[9179,9180],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9207,9208],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9281,9292],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[9364,9365],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9392,9393],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9568,9577],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[9670,9677],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[9745,9746],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9773,9774],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9843,9850],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[9918,9919],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9946,9947],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10122,10139],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[10248,10263],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[10339,10340],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10367,10368],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10445,10460],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[10536,10537],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10564,10565],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10710,10716],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[10847,10853],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"items:\n- uid: System.ComponentModel.DataErrorsChangedEventArgs\n  commentId: T:System.ComponentModel.DataErrorsChangedEventArgs\n  id: DataErrorsChangedEventArgs\n  parent: System.ComponentModel\n  children:\n  - System.ComponentModel.DataErrorsChangedEventArgs.#ctor(System.String)\n  - System.ComponentModel.DataErrorsChangedEventArgs.PropertyName\n  langs:\n  - csharp\n  - vb\n  name: DataErrorsChangedEventArgs\n  fullName: System.ComponentModel.DataErrorsChangedEventArgs\n  type: Class\n  source:\n    remote:\n      path: src/System.ObjectModel/ref/System.ObjectModel.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DataErrorsChangedEventArgs\n    path: src/System.ObjectModel/ref/System.ObjectModel.cs\n    startLine: 164\n  assemblies:\n  - System.ObjectModel\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Provides data for the <xref href=\\\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> event.</p>\\n\"\n  syntax:\n    content: 'public class DataErrorsChangedEventArgs : EventArgs'\n    content.vb: >-\n      Public Class DataErrorsChangedEventArgs\n          Inherits EventArgs\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  inheritedMembers:\n  - System.EventArgs.Empty\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: DataErrorsChangedEventArgs\n- uid: System.ComponentModel.DataErrorsChangedEventArgs.#ctor(System.String)\n  commentId: M:System.ComponentModel.DataErrorsChangedEventArgs.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.ComponentModel.DataErrorsChangedEventArgs\n  langs:\n  - csharp\n  - vb\n  name: DataErrorsChangedEventArgs(String)\n  fullName: System.ComponentModel.DataErrorsChangedEventArgs.DataErrorsChangedEventArgs(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.ObjectModel/ref/System.ObjectModel.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.ObjectModel/ref/System.ObjectModel.cs\n    startLine: 166\n  assemblies:\n  - System.ObjectModel\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.ComponentModel.DataErrorsChangedEventArgs\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public DataErrorsChangedEventArgs(string propertyName)\n    content.vb: Public Sub New(propertyName As String)\n    parameters:\n    - id: propertyName\n      type: System.String\n      description: \"\\n<p>The name of the property that has an error.  <strong>null</strong> or <xref href=\\\"System.String.Empty\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the error is object-level.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DataErrorsChangedEventArgs.DataErrorsChangedEventArgs(String)\n- uid: System.ComponentModel.DataErrorsChangedEventArgs.PropertyName\n  commentId: P:System.ComponentModel.DataErrorsChangedEventArgs.PropertyName\n  id: PropertyName\n  parent: System.ComponentModel.DataErrorsChangedEventArgs\n  langs:\n  - csharp\n  - vb\n  name: PropertyName\n  fullName: System.ComponentModel.DataErrorsChangedEventArgs.PropertyName\n  type: Property\n  source:\n    remote:\n      path: src/System.ObjectModel/ref/System.ObjectModel.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PropertyName\n    path: src/System.ObjectModel/ref/System.ObjectModel.cs\n    startLine: 167\n  assemblies:\n  - System.ObjectModel\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Gets the name of the property that has an error.</p>\\n\"\n  syntax:\n    content: public virtual string PropertyName { get; }\n    content.vb: Public Overridable ReadOnly Property PropertyName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The name of the property that has an error. <strong>null</strong> or <xref href=\\\"System.String.Empty\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the error is object-level.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: DataErrorsChangedEventArgs.PropertyName\nreferences:\n- uid: System.ComponentModel\n  isExternal: false\n  name: System.ComponentModel\n  fullName: System.ComponentModel\n  commentId: N:System.ComponentModel\n  nameWithType: System.ComponentModel\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  fullName: System.EventArgs\n  commentId: T:System.EventArgs\n  nameWithType: EventArgs\n- uid: System.EventArgs.Empty\n  parent: System.EventArgs\n  isExternal: true\n  name: Empty\n  fullName: System.EventArgs.Empty\n  commentId: F:System.EventArgs.Empty\n  nameWithType: EventArgs.Empty\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n"}