{"nodes":[{"pos":[1776,1784],"content":"Duration","needQuote":true,"nodes":[{"content":"Duration","pos":[0,8]}]},{"pos":[3384,3402],"content":"Duration(TimeSpan)","needQuote":true,"nodes":[{"content":"Duration(TimeSpan)","pos":[0,18]}]},{"pos":[4345,4354],"content":"Automatic","needQuote":true,"nodes":[{"content":"Automatic","pos":[0,9]}]},{"pos":[5339,5346],"content":"Forever","needQuote":true,"nodes":[{"content":"Forever","pos":[0,7]}]},{"pos":[6333,6344],"content":"HasTimeSpan","needQuote":true,"nodes":[{"content":"HasTimeSpan","pos":[0,11]}]},{"pos":[7291,7299],"content":"TimeSpan","needQuote":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[8300,8313],"content":"Add(Duration)","needQuote":true,"nodes":[{"content":"Add(Duration)","pos":[0,13]}]},{"pos":[9474,9501],"content":"Compare(Duration, Duration)","needQuote":true,"nodes":[{"content":"Compare(Duration, Duration)","pos":[0,27]}]},{"pos":[10686,10700],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[12073,12089],"content":"Equals(Duration)","needQuote":true,"nodes":[{"content":"Equals(Duration)","pos":[0,16]}]},{"pos":[13247,13273],"content":"Equals(Duration, Duration)","needQuote":true,"nodes":[{"content":"Equals(Duration, Duration)","pos":[0,26]}]},{"pos":[14426,14439],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[15808,15836],"content":"Addition(Duration, Duration)","needQuote":true,"nodes":[{"content":"Addition(Duration, Duration)","pos":[0,28]}]},{"pos":[17167,17195],"content":"Equality(Duration, Duration)","needQuote":true,"nodes":[{"content":"Equality(Duration, Duration)","pos":[0,28]}]},{"pos":[18521,18552],"content":"GreaterThan(Duration, Duration)","needQuote":true,"nodes":[{"content":"GreaterThan(Duration, Duration)","pos":[0,31]}]},{"pos":[19905,19943],"content":"GreaterThanOrEqual(Duration, Duration)","needQuote":true,"nodes":[{"content":"GreaterThanOrEqual(Duration, Duration)","pos":[0,38]}]},{"pos":[21264,21294],"content":"Implicit(TimeSpan to Duration)","needQuote":true,"nodes":[{"content":"Implicit(TimeSpan to Duration)","pos":[0,30]}]},{"pos":[22771,22801],"content":"Inequality(Duration, Duration)","needQuote":true,"nodes":[{"content":"Inequality(Duration, Duration)","pos":[0,30]}]},{"pos":[24125,24153],"content":"LessThan(Duration, Duration)","needQuote":true,"nodes":[{"content":"LessThan(Duration, Duration)","pos":[0,28]}]},{"pos":[25490,25525],"content":"LessThanOrEqual(Duration, Duration)","needQuote":true,"nodes":[{"content":"LessThanOrEqual(Duration, Duration)","pos":[0,35]}]},{"pos":[26873,26904],"content":"Subtraction(Duration, Duration)","needQuote":true,"nodes":[{"content":"Subtraction(Duration, Duration)","pos":[0,31]}]},{"pos":[28172,28191],"content":"UnaryPlus(Duration)","needQuote":true,"nodes":[{"content":"UnaryPlus(Duration)","pos":[0,19]}]},{"pos":[29344,29362],"content":"Subtract(Duration)","needQuote":true,"nodes":[{"content":"Subtract(Duration)","pos":[0,18]}]},{"pos":[30398,30408],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[31519,31534],"content":"Windows.UI.Xaml","needQuote":true,"nodes":[{"content":"Windows.UI.Xaml","pos":[0,15]}]},{"pos":[31768,31790],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[31984,31990],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[32089,32090],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32160,32166],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[32252,32253]},{"pos":[32331,32337],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[32422,32423],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32540,32546],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[32645,32646],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32716,32722],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[32808,32809]},{"pos":[32887,32893],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[32978,32979],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33207,33238],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[33459,33474],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[33591,33592],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33662,33668],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[33754,33755]},{"pos":[33833,33839],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[33924,33925],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34051,34066],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[34183,34184],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34254,34260],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[34346,34347]},{"pos":[34425,34431],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[34516,34517],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34671,34680],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[34806,34813],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[34914,34915],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34962,34963],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35052,35059],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[35160,35161],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35208,35209],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35341,35347],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[35461,35467],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[35609,35617],"content":"TimeSpan","needQuote":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[35797,35805],"content":"Duration","needQuote":true,"nodes":[{"content":"Duration","pos":[0,8]}]},{"pos":[35965,35972],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[36117,36122],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[36324,36338],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[36504,36510],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[36594,36595],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36665,36671],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[36756,36757],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36863,36869],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[36953,36954],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37024,37030],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[37115,37116],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37254,37263],"content":"ValueType","needQuote":true,"nodes":[{"content":"ValueType","pos":[0,9]}]},{"pos":[37454,37467],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[37614,37625],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[37719,37720],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37767,37768],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37864,37875],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[37969,37970],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38017,38018],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38184,38194],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[38332,38340],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[38428,38429],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38476,38477],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38570,38578],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[38666,38667],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38714,38715],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38847,38853],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"items:\n- uid: Windows.UI.Xaml.Duration\n  commentId: T:Windows.UI.Xaml.Duration\n  id: Duration\n  parent: Windows.UI.Xaml\n  children:\n  - Windows.UI.Xaml.Duration.#ctor(System.TimeSpan)\n  - Windows.UI.Xaml.Duration.Add(Windows.UI.Xaml.Duration)\n  - Windows.UI.Xaml.Duration.Automatic\n  - Windows.UI.Xaml.Duration.Compare(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)\n  - Windows.UI.Xaml.Duration.Equals(System.Object)\n  - Windows.UI.Xaml.Duration.Equals(Windows.UI.Xaml.Duration)\n  - Windows.UI.Xaml.Duration.Equals(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)\n  - Windows.UI.Xaml.Duration.Forever\n  - Windows.UI.Xaml.Duration.GetHashCode\n  - Windows.UI.Xaml.Duration.HasTimeSpan\n  - Windows.UI.Xaml.Duration.op_Addition(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)\n  - Windows.UI.Xaml.Duration.op_Equality(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)\n  - Windows.UI.Xaml.Duration.op_GreaterThan(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)\n  - Windows.UI.Xaml.Duration.op_GreaterThanOrEqual(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)\n  - Windows.UI.Xaml.Duration.op_Implicit(System.TimeSpan)~Windows.UI.Xaml.Duration\n  - Windows.UI.Xaml.Duration.op_Inequality(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)\n  - Windows.UI.Xaml.Duration.op_LessThan(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)\n  - Windows.UI.Xaml.Duration.op_LessThanOrEqual(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)\n  - Windows.UI.Xaml.Duration.op_Subtraction(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)\n  - Windows.UI.Xaml.Duration.op_UnaryPlus(Windows.UI.Xaml.Duration)\n  - Windows.UI.Xaml.Duration.Subtract(Windows.UI.Xaml.Duration)\n  - Windows.UI.Xaml.Duration.TimeSpan\n  - Windows.UI.Xaml.Duration.ToString\n  langs:\n  - csharp\n  - vb\n  name: Duration\n  nameWithType: Duration\n  fullName: Windows.UI.Xaml.Duration\n  type: Struct\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Duration\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 30\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      [StructLayout(LayoutKind.Sequential)]\n\n      public struct Duration\n    content.vb: >-\n      <SecurityCritical>\n\n      <StructLayout(LayoutKind.Sequential)>\n\n      Public Structure Duration\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n    ctor: System.Security.SecurityCriticalAttribute.#ctor\n    arguments: []\n  - type: System.Runtime.InteropServices.StructLayoutAttribute\n    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)\n    arguments:\n    - type: System.Runtime.InteropServices.LayoutKind\n      value: 0\n  modifiers.csharp:\n  - public\n  - struct\n  modifiers.vb:\n  - Public\n  - Structure\n- uid: Windows.UI.Xaml.Duration.#ctor(System.TimeSpan)\n  commentId: M:Windows.UI.Xaml.Duration.#ctor(System.TimeSpan)\n  id: '#ctor(System.TimeSpan)'\n  parent: Windows.UI.Xaml.Duration\n  langs:\n  - csharp\n  - vb\n  name: Duration(TimeSpan)\n  nameWithType: Duration.Duration(TimeSpan)\n  fullName: Windows.UI.Xaml.Duration.Duration(System.TimeSpan)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 34\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml\n  syntax:\n    content: public Duration(TimeSpan timeSpan)\n    content.vb: Public Sub New(timeSpan As TimeSpan)\n    parameters:\n    - id: timeSpan\n      type: System.TimeSpan\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n- uid: Windows.UI.Xaml.Duration.Automatic\n  commentId: P:Windows.UI.Xaml.Duration.Automatic\n  id: Automatic\n  parent: Windows.UI.Xaml.Duration\n  langs:\n  - csharp\n  - vb\n  name: Automatic\n  nameWithType: Duration.Automatic\n  fullName: Windows.UI.Xaml.Duration.Automatic\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Automatic\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 35\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml\n  syntax:\n    content: public static Duration Automatic { get; }\n    content.vb: Public Shared ReadOnly Property Automatic As Duration\n    parameters: []\n    return:\n      type: Windows.UI.Xaml.Duration\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n- uid: Windows.UI.Xaml.Duration.Forever\n  commentId: P:Windows.UI.Xaml.Duration.Forever\n  id: Forever\n  parent: Windows.UI.Xaml.Duration\n  langs:\n  - csharp\n  - vb\n  name: Forever\n  nameWithType: Duration.Forever\n  fullName: Windows.UI.Xaml.Duration.Forever\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Forever\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 36\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml\n  syntax:\n    content: public static Duration Forever { get; }\n    content.vb: Public Shared ReadOnly Property Forever As Duration\n    parameters: []\n    return:\n      type: Windows.UI.Xaml.Duration\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n- uid: Windows.UI.Xaml.Duration.HasTimeSpan\n  commentId: P:Windows.UI.Xaml.Duration.HasTimeSpan\n  id: HasTimeSpan\n  parent: Windows.UI.Xaml.Duration\n  langs:\n  - csharp\n  - vb\n  name: HasTimeSpan\n  nameWithType: Duration.HasTimeSpan\n  fullName: Windows.UI.Xaml.Duration.HasTimeSpan\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: HasTimeSpan\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 37\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml\n  syntax:\n    content: public bool HasTimeSpan { get; }\n    content.vb: Public ReadOnly Property HasTimeSpan As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n- uid: Windows.UI.Xaml.Duration.TimeSpan\n  commentId: P:Windows.UI.Xaml.Duration.TimeSpan\n  id: TimeSpan\n  parent: Windows.UI.Xaml.Duration\n  langs:\n  - csharp\n  - vb\n  name: TimeSpan\n  nameWithType: Duration.TimeSpan\n  fullName: Windows.UI.Xaml.Duration.TimeSpan\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TimeSpan\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 38\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml\n  syntax:\n    content: public TimeSpan TimeSpan { get; }\n    content.vb: Public ReadOnly Property TimeSpan As TimeSpan\n    parameters: []\n    return:\n      type: System.TimeSpan\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n- uid: Windows.UI.Xaml.Duration.Add(Windows.UI.Xaml.Duration)\n  commentId: M:Windows.UI.Xaml.Duration.Add(Windows.UI.Xaml.Duration)\n  id: Add(Windows.UI.Xaml.Duration)\n  parent: Windows.UI.Xaml.Duration\n  langs:\n  - csharp\n  - vb\n  name: Add(Duration)\n  nameWithType: Duration.Add(Duration)\n  fullName: Windows.UI.Xaml.Duration.Add(Windows.UI.Xaml.Duration)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Add\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 39\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml\n  syntax:\n    content: public Duration Add(Duration duration)\n    content.vb: Public Function Add(duration As Duration) As Duration\n    parameters:\n    - id: duration\n      type: Windows.UI.Xaml.Duration\n    return:\n      type: Windows.UI.Xaml.Duration\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n- uid: Windows.UI.Xaml.Duration.Compare(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)\n  commentId: M:Windows.UI.Xaml.Duration.Compare(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)\n  id: Compare(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)\n  parent: Windows.UI.Xaml.Duration\n  langs:\n  - csharp\n  - vb\n  name: Compare(Duration, Duration)\n  nameWithType: Duration.Compare(Duration, Duration)\n  fullName: Windows.UI.Xaml.Duration.Compare(Windows.UI.Xaml.Duration, Windows.UI.Xaml.Duration)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Compare\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 40\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml\n  syntax:\n    content: public static int Compare(Duration t1, Duration t2)\n    content.vb: Public Shared Function Compare(t1 As Duration, t2 As Duration) As Integer\n    parameters:\n    - id: t1\n      type: Windows.UI.Xaml.Duration\n    - id: t2\n      type: Windows.UI.Xaml.Duration\n    return:\n      type: System.Int32\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n- uid: Windows.UI.Xaml.Duration.Equals(System.Object)\n  commentId: M:Windows.UI.Xaml.Duration.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: Windows.UI.Xaml.Duration\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  nameWithType: Duration.Equals(Object)\n  fullName: Windows.UI.Xaml.Duration.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equals\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 41\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public override bool Equals(object value)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Overrides Function Equals(value As Object) As Boolean\n    parameters:\n    - id: value\n      type: System.Object\n    return:\n      type: System.Boolean\n  overridden: System.ValueType.Equals(System.Object)\n  attributes:\n  - type: System.Security.SecuritySafeCriticalAttribute\n    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n- uid: Windows.UI.Xaml.Duration.Equals(Windows.UI.Xaml.Duration)\n  commentId: M:Windows.UI.Xaml.Duration.Equals(Windows.UI.Xaml.Duration)\n  id: Equals(Windows.UI.Xaml.Duration)\n  parent: Windows.UI.Xaml.Duration\n  langs:\n  - csharp\n  - vb\n  name: Equals(Duration)\n  nameWithType: Duration.Equals(Duration)\n  fullName: Windows.UI.Xaml.Duration.Equals(Windows.UI.Xaml.Duration)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equals\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 43\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml\n  syntax:\n    content: public bool Equals(Duration duration)\n    content.vb: Public Function Equals(duration As Duration) As Boolean\n    parameters:\n    - id: duration\n      type: Windows.UI.Xaml.Duration\n    return:\n      type: System.Boolean\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n- uid: Windows.UI.Xaml.Duration.Equals(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)\n  commentId: M:Windows.UI.Xaml.Duration.Equals(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)\n  id: Equals(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)\n  parent: Windows.UI.Xaml.Duration\n  langs:\n  - csharp\n  - vb\n  name: Equals(Duration, Duration)\n  nameWithType: Duration.Equals(Duration, Duration)\n  fullName: Windows.UI.Xaml.Duration.Equals(Windows.UI.Xaml.Duration, Windows.UI.Xaml.Duration)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equals\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 44\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml\n  syntax:\n    content: public static bool Equals(Duration t1, Duration t2)\n    content.vb: Public Shared Function Equals(t1 As Duration, t2 As Duration) As Boolean\n    parameters:\n    - id: t1\n      type: Windows.UI.Xaml.Duration\n    - id: t2\n      type: Windows.UI.Xaml.Duration\n    return:\n      type: System.Boolean\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n- uid: Windows.UI.Xaml.Duration.GetHashCode\n  commentId: M:Windows.UI.Xaml.Duration.GetHashCode\n  id: GetHashCode\n  parent: Windows.UI.Xaml.Duration\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  nameWithType: Duration.GetHashCode()\n  fullName: Windows.UI.Xaml.Duration.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetHashCode\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 45\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public override int GetHashCode()\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n  overridden: System.ValueType.GetHashCode\n  attributes:\n  - type: System.Security.SecuritySafeCriticalAttribute\n    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n- uid: Windows.UI.Xaml.Duration.op_Addition(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)\n  commentId: M:Windows.UI.Xaml.Duration.op_Addition(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)\n  id: op_Addition(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)\n  parent: Windows.UI.Xaml.Duration\n  langs:\n  - csharp\n  - vb\n  name: Addition(Duration, Duration)\n  nameWithType: Duration.Addition(Duration, Duration)\n  fullName: Windows.UI.Xaml.Duration.Addition(Windows.UI.Xaml.Duration, Windows.UI.Xaml.Duration)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Addition\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 47\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml\n  syntax:\n    content: public static Duration operator +(Duration t1, Duration t2)\n    content.vb: Public Shared Operator +(t1 As Duration, t2 As Duration) As Duration\n    parameters:\n    - id: t1\n      type: Windows.UI.Xaml.Duration\n    - id: t2\n      type: Windows.UI.Xaml.Duration\n    return:\n      type: Windows.UI.Xaml.Duration\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n- uid: Windows.UI.Xaml.Duration.op_Equality(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)\n  commentId: M:Windows.UI.Xaml.Duration.op_Equality(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)\n  id: op_Equality(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)\n  parent: Windows.UI.Xaml.Duration\n  langs:\n  - csharp\n  - vb\n  name: Equality(Duration, Duration)\n  nameWithType: Duration.Equality(Duration, Duration)\n  fullName: Windows.UI.Xaml.Duration.Equality(Windows.UI.Xaml.Duration, Windows.UI.Xaml.Duration)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Equality\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 48\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml\n  syntax:\n    content: public static bool operator ==(Duration t1, Duration t2)\n    content.vb: Public Shared Operator =(t1 As Duration, t2 As Duration) As Boolean\n    parameters:\n    - id: t1\n      type: Windows.UI.Xaml.Duration\n    - id: t2\n      type: Windows.UI.Xaml.Duration\n    return:\n      type: System.Boolean\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n- uid: Windows.UI.Xaml.Duration.op_GreaterThan(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)\n  commentId: M:Windows.UI.Xaml.Duration.op_GreaterThan(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)\n  id: op_GreaterThan(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)\n  parent: Windows.UI.Xaml.Duration\n  langs:\n  - csharp\n  - vb\n  name: GreaterThan(Duration, Duration)\n  nameWithType: Duration.GreaterThan(Duration, Duration)\n  fullName: Windows.UI.Xaml.Duration.GreaterThan(Windows.UI.Xaml.Duration, Windows.UI.Xaml.Duration)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_GreaterThan\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 49\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml\n  syntax:\n    content: public static bool operator>(Duration t1, Duration t2)\n    content.vb: Public Shared Operator>(t1 As Duration, t2 As Duration) As Boolean\n    parameters:\n    - id: t1\n      type: Windows.UI.Xaml.Duration\n    - id: t2\n      type: Windows.UI.Xaml.Duration\n    return:\n      type: System.Boolean\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n- uid: Windows.UI.Xaml.Duration.op_GreaterThanOrEqual(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)\n  commentId: M:Windows.UI.Xaml.Duration.op_GreaterThanOrEqual(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)\n  id: op_GreaterThanOrEqual(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)\n  parent: Windows.UI.Xaml.Duration\n  langs:\n  - csharp\n  - vb\n  name: GreaterThanOrEqual(Duration, Duration)\n  nameWithType: Duration.GreaterThanOrEqual(Duration, Duration)\n  fullName: Windows.UI.Xaml.Duration.GreaterThanOrEqual(Windows.UI.Xaml.Duration, Windows.UI.Xaml.Duration)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_GreaterThanOrEqual\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 50\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml\n  syntax:\n    content: public static bool operator >=(Duration t1, Duration t2)\n    content.vb: Public Shared Operator >=(t1 As Duration, t2 As Duration) As Boolean\n    parameters:\n    - id: t1\n      type: Windows.UI.Xaml.Duration\n    - id: t2\n      type: Windows.UI.Xaml.Duration\n    return:\n      type: System.Boolean\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n- uid: Windows.UI.Xaml.Duration.op_Implicit(System.TimeSpan)~Windows.UI.Xaml.Duration\n  commentId: M:Windows.UI.Xaml.Duration.op_Implicit(System.TimeSpan)~Windows.UI.Xaml.Duration\n  id: op_Implicit(System.TimeSpan)~Windows.UI.Xaml.Duration\n  parent: Windows.UI.Xaml.Duration\n  langs:\n  - csharp\n  - vb\n  name: Implicit(TimeSpan to Duration)\n  nameWithType: Duration.Implicit(TimeSpan to Duration)\n  fullName: Windows.UI.Xaml.Duration.Implicit(System.TimeSpan to Windows.UI.Xaml.Duration)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Implicit\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 51\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml\n  syntax:\n    content: public static implicit operator Duration(TimeSpan timeSpan)\n    content.vb: Public Shared Widening Operator CType(timeSpan As TimeSpan) As Duration\n    parameters:\n    - id: timeSpan\n      type: System.TimeSpan\n    return:\n      type: Windows.UI.Xaml.Duration\n  nameWithType.vb: Duration.Widening(TimeSpan to Duration)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: Windows.UI.Xaml.Duration.Widening(System.TimeSpan to Windows.UI.Xaml.Duration)\n  name.vb: Widening(TimeSpan to Duration)\n- uid: Windows.UI.Xaml.Duration.op_Inequality(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)\n  commentId: M:Windows.UI.Xaml.Duration.op_Inequality(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)\n  id: op_Inequality(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)\n  parent: Windows.UI.Xaml.Duration\n  langs:\n  - csharp\n  - vb\n  name: Inequality(Duration, Duration)\n  nameWithType: Duration.Inequality(Duration, Duration)\n  fullName: Windows.UI.Xaml.Duration.Inequality(Windows.UI.Xaml.Duration, Windows.UI.Xaml.Duration)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Inequality\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 52\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml\n  syntax:\n    content: public static bool operator !=(Duration t1, Duration t2)\n    content.vb: Public Shared Operator <>(t1 As Duration, t2 As Duration) As Boolean\n    parameters:\n    - id: t1\n      type: Windows.UI.Xaml.Duration\n    - id: t2\n      type: Windows.UI.Xaml.Duration\n    return:\n      type: System.Boolean\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n- uid: Windows.UI.Xaml.Duration.op_LessThan(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)\n  commentId: M:Windows.UI.Xaml.Duration.op_LessThan(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)\n  id: op_LessThan(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)\n  parent: Windows.UI.Xaml.Duration\n  langs:\n  - csharp\n  - vb\n  name: LessThan(Duration, Duration)\n  nameWithType: Duration.LessThan(Duration, Duration)\n  fullName: Windows.UI.Xaml.Duration.LessThan(Windows.UI.Xaml.Duration, Windows.UI.Xaml.Duration)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_LessThan\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 53\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml\n  syntax:\n    content: public static bool operator <(Duration t1, Duration t2)\n    content.vb: Public Shared Operator <(t1 As Duration, t2 As Duration) As Boolean\n    parameters:\n    - id: t1\n      type: Windows.UI.Xaml.Duration\n    - id: t2\n      type: Windows.UI.Xaml.Duration\n    return:\n      type: System.Boolean\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n- uid: Windows.UI.Xaml.Duration.op_LessThanOrEqual(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)\n  commentId: M:Windows.UI.Xaml.Duration.op_LessThanOrEqual(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)\n  id: op_LessThanOrEqual(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)\n  parent: Windows.UI.Xaml.Duration\n  langs:\n  - csharp\n  - vb\n  name: LessThanOrEqual(Duration, Duration)\n  nameWithType: Duration.LessThanOrEqual(Duration, Duration)\n  fullName: Windows.UI.Xaml.Duration.LessThanOrEqual(Windows.UI.Xaml.Duration, Windows.UI.Xaml.Duration)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_LessThanOrEqual\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 54\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml\n  syntax:\n    content: public static bool operator <=(Duration t1, Duration t2)\n    content.vb: Public Shared Operator <=(t1 As Duration, t2 As Duration) As Boolean\n    parameters:\n    - id: t1\n      type: Windows.UI.Xaml.Duration\n    - id: t2\n      type: Windows.UI.Xaml.Duration\n    return:\n      type: System.Boolean\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n- uid: Windows.UI.Xaml.Duration.op_Subtraction(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)\n  commentId: M:Windows.UI.Xaml.Duration.op_Subtraction(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)\n  id: op_Subtraction(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)\n  parent: Windows.UI.Xaml.Duration\n  langs:\n  - csharp\n  - vb\n  name: Subtraction(Duration, Duration)\n  nameWithType: Duration.Subtraction(Duration, Duration)\n  fullName: Windows.UI.Xaml.Duration.Subtraction(Windows.UI.Xaml.Duration, Windows.UI.Xaml.Duration)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Subtraction\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 55\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml\n  syntax:\n    content: public static Duration operator -(Duration t1, Duration t2)\n    content.vb: Public Shared Operator -(t1 As Duration, t2 As Duration) As Duration\n    parameters:\n    - id: t1\n      type: Windows.UI.Xaml.Duration\n    - id: t2\n      type: Windows.UI.Xaml.Duration\n    return:\n      type: Windows.UI.Xaml.Duration\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n- uid: Windows.UI.Xaml.Duration.op_UnaryPlus(Windows.UI.Xaml.Duration)\n  commentId: M:Windows.UI.Xaml.Duration.op_UnaryPlus(Windows.UI.Xaml.Duration)\n  id: op_UnaryPlus(Windows.UI.Xaml.Duration)\n  parent: Windows.UI.Xaml.Duration\n  langs:\n  - csharp\n  - vb\n  name: UnaryPlus(Duration)\n  nameWithType: Duration.UnaryPlus(Duration)\n  fullName: Windows.UI.Xaml.Duration.UnaryPlus(Windows.UI.Xaml.Duration)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_UnaryPlus\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 56\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml\n  syntax:\n    content: public static Duration operator +(Duration duration)\n    content.vb: Public Shared Operator +(duration As Duration) As Duration\n    parameters:\n    - id: duration\n      type: Windows.UI.Xaml.Duration\n    return:\n      type: Windows.UI.Xaml.Duration\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n- uid: Windows.UI.Xaml.Duration.Subtract(Windows.UI.Xaml.Duration)\n  commentId: M:Windows.UI.Xaml.Duration.Subtract(Windows.UI.Xaml.Duration)\n  id: Subtract(Windows.UI.Xaml.Duration)\n  parent: Windows.UI.Xaml.Duration\n  langs:\n  - csharp\n  - vb\n  name: Subtract(Duration)\n  nameWithType: Duration.Subtract(Duration)\n  fullName: Windows.UI.Xaml.Duration.Subtract(Windows.UI.Xaml.Duration)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Subtract\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 57\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml\n  syntax:\n    content: public Duration Subtract(Duration duration)\n    content.vb: Public Function Subtract(duration As Duration) As Duration\n    parameters:\n    - id: duration\n      type: Windows.UI.Xaml.Duration\n    return:\n      type: Windows.UI.Xaml.Duration\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n- uid: Windows.UI.Xaml.Duration.ToString\n  commentId: M:Windows.UI.Xaml.Duration.ToString\n  id: ToString\n  parent: Windows.UI.Xaml.Duration\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  nameWithType: Duration.ToString()\n  fullName: Windows.UI.Xaml.Duration.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToString\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 58\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public override string ToString()\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Overrides Function ToString As String\n    return:\n      type: System.String\n  overridden: System.ValueType.ToString\n  attributes:\n  - type: System.Security.SecuritySafeCriticalAttribute\n    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\nreferences:\n- uid: Windows.UI.Xaml\n  commentId: N:Windows.UI.Xaml\n  isExternal: false\n  name: Windows.UI.Xaml\n  nameWithType: Windows.UI.Xaml\n  fullName: Windows.UI.Xaml\n- uid: System.Object.Equals(System.Object,System.Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.GetType\n  commentId: M:System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object\n  commentId: T:System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System\n  commentId: N:System\n  isExternal: false\n  name: System\n  nameWithType: System\n  fullName: System\n- uid: System.TimeSpan\n  commentId: T:System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: Windows.UI.Xaml.Duration\n  commentId: T:Windows.UI.Xaml.Duration\n  parent: Windows.UI.Xaml\n  isExternal: false\n  name: Duration\n  nameWithType: Duration\n  fullName: Windows.UI.Xaml.Duration\n- uid: System.Boolean\n  commentId: T:System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Int32\n  commentId: T:System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ValueType.Equals(System.Object)\n  commentId: M:System.ValueType.Equals(System.Object)\n  parent: System.ValueType\n  isExternal: true\n  name: Equals(Object)\n  nameWithType: ValueType.Equals(Object)\n  fullName: System.ValueType.Equals(System.Object)\n  spec.csharp:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    nameWithType: ValueType.Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    nameWithType: ValueType.Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.ValueType\n  commentId: T:System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.ValueType.GetHashCode\n  commentId: M:System.ValueType.GetHashCode\n  parent: System.ValueType\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ValueType.GetHashCode()\n  fullName: System.ValueType.GetHashCode()\n  spec.csharp:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    nameWithType: ValueType.GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    nameWithType: ValueType.GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.ValueType.ToString\n  commentId: M:System.ValueType.ToString\n  parent: System.ValueType\n  isExternal: false\n  name: ToString()\n  nameWithType: ValueType.ToString()\n  fullName: System.ValueType.ToString()\n  spec.csharp:\n  - uid: System.ValueType.ToString\n    name: ToString\n    nameWithType: ValueType.ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.ToString\n    name: ToString\n    nameWithType: ValueType.ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.String\n  commentId: T:System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n"}