{"nodes":[{"pos":[409,429],"content":"IStructuralEquatable","needQuote":true,"nodes":[{"content":"IStructuralEquatable","pos":[0,20]}]},{"pos":[1941,1974],"content":"Equals(Object, IEqualityComparer)","needQuote":true,"nodes":[{"content":"Equals(Object, IEqualityComparer)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;The object to compare with the current instance.&lt;/p&gt;\\n","pos":[2780,2839],"source":"\\n<p>The object to compare with the current instance.</p>\\n"},{"content":"\\n&lt;p&gt;An object that determines whether the current instance and &lt;em&gt;other&lt;/em&gt; are equal.","pos":[2929,3018],"source":"\\n<p>An object that determines whether the current instance and <em>other</em> are equal."},{"content":"&lt;/p&gt;\\n","pos":[3019,3025],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the two objects are equal; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[3086,3185],"source":"\\n<p>\\n<strong>true</strong> if the two objects are equal; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[3775,3805],"content":"GetHashCode(IEqualityComparer)","needQuote":true,"nodes":[{"content":"GetHashCode(IEqualityComparer)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;An object that computes the hash code of the current object.&lt;/p&gt;\\n","pos":[4580,4651],"source":"\\n<p>An object that computes the hash code of the current object.</p>\\n"},{"content":"\\n&lt;p&gt;The hash code for the current instance.&lt;/p&gt;\\n","pos":[4710,4760],"source":"\\n<p>The hash code for the current instance.</p>\\n"},{"pos":[4896,4914],"content":"System.Collections","needQuote":true,"nodes":[{"content":"System.Collections","pos":[0,18]}]},{"pos":[5081,5087],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[5267,5284],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[5487,5494],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[5618,5624],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[5754,5759],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"items:\n- uid: System.Collections.IStructuralEquatable\n  commentId: T:System.Collections.IStructuralEquatable\n  id: IStructuralEquatable\n  parent: System.Collections\n  children:\n  - System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)\n  - System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)\n  langs:\n  - csharp\n  - vb\n  name: IStructuralEquatable\n  fullName: System.Collections.IStructuralEquatable\n  type: Interface\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/IStructuralEquatable.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IStructuralEquatable\n    path: src/mscorlib/src/System/Collections/IStructuralEquatable.cs\n    startLine: 5\n  assemblies:\n  - System.Runtime\n  namespace: System.Collections\n  summary: \"\\n<p>Defines methods to support the comparison of objects for structural equality. </p>\\n\"\n  syntax:\n    content: public interface IStructuralEquatable\n    content.vb: Public Interface IStructuralEquatable\n  seealso:\n  - type: System.Collections.IEqualityComparer\n    commentId: T:System.Collections.IEqualityComparer\n  - type: System.Collections.IStructuralComparable\n    commentId: T:System.Collections.IStructuralComparable\n  - type: System.Collections.StructuralComparisons.StructuralEqualityComparer\n    commentId: P:System.Collections.StructuralComparisons.StructuralEqualityComparer\n  modifiers.csharp:\n  - public\n  - interface\n  modifiers.vb:\n  - Public\n  - Interface\n  nameWithType: IStructuralEquatable\n- uid: System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)\n  commentId: M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)\n  id: Equals(System.Object,System.Collections.IEqualityComparer)\n  parent: System.Collections.IStructuralEquatable\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object, IEqualityComparer)\n  fullName: System.Collections.IStructuralEquatable.Equals(System.Object, System.Collections.IEqualityComparer)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/IStructuralEquatable.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Equals\n    path: src/mscorlib/src/System/Collections/IStructuralEquatable.cs\n    startLine: 6\n  assemblies:\n  - System.Runtime\n  namespace: System.Collections\n  summary: \"\\n<p>Determines whether an object is structurally equal to the current instance.</p>\\n\"\n  syntax:\n    content: bool Equals(object other, IEqualityComparer comparer)\n    content.vb: Function Equals(other As Object, comparer As IEqualityComparer) As Boolean\n    parameters:\n    - id: other\n      type: System.Object\n      description: \"\\n<p>The object to compare with the current instance.</p>\\n\"\n    - id: comparer\n      type: System.Collections.IEqualityComparer\n      description: \"\\n<p>An object that determines whether the current instance and <em>other</em> are equal. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the two objects are equal; otherwise, <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.Collections.StructuralComparisons.StructuralEqualityComparer\n    commentId: P:System.Collections.StructuralComparisons.StructuralEqualityComparer\n  nameWithType: IStructuralEquatable.Equals(Object, IEqualityComparer)\n- uid: System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)\n  commentId: M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)\n  id: GetHashCode(System.Collections.IEqualityComparer)\n  parent: System.Collections.IStructuralEquatable\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode(IEqualityComparer)\n  fullName: System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/IStructuralEquatable.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetHashCode\n    path: src/mscorlib/src/System/Collections/IStructuralEquatable.cs\n    startLine: 7\n  assemblies:\n  - System.Runtime\n  namespace: System.Collections\n  summary: \"\\n<p>Returns a hash code for the current instance.</p>\\n\"\n  syntax:\n    content: int GetHashCode(IEqualityComparer comparer)\n    content.vb: Function GetHashCode(comparer As IEqualityComparer) As Integer\n    parameters:\n    - id: comparer\n      type: System.Collections.IEqualityComparer\n      description: \"\\n<p>An object that computes the hash code of the current object.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The hash code for the current instance.</p>\\n\"\n  nameWithType: IStructuralEquatable.GetHashCode(IEqualityComparer)\nreferences:\n- uid: System.Collections\n  isExternal: false\n  name: System.Collections\n  fullName: System.Collections\n  nameWithType: System.Collections\n  commentId: N:System.Collections\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Collections.IEqualityComparer\n  parent: System.Collections\n  isExternal: false\n  name: IEqualityComparer\n  fullName: System.Collections.IEqualityComparer\n  nameWithType: IEqualityComparer\n  commentId: T:System.Collections.IEqualityComparer\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n"}