{"nodes":[{"pos":[638,656],"content":"RuntimeInformation","needQuote":true,"nodes":[{"content":"RuntimeInformation","pos":[0,18]}]},{"pos":[2052,2071],"content":"ProcessArchitecture","needQuote":true,"nodes":[{"content":"ProcessArchitecture","pos":[0,19]}]},{"pos":[3339,3353],"content":"OSArchitecture","needQuote":true,"nodes":[{"content":"OSArchitecture","pos":[0,14]}]},{"pos":[4593,4606],"content":"OSDescription","needQuote":true,"nodes":[{"content":"OSDescription","pos":[0,13]}]},{"pos":[5820,5840],"content":"FrameworkDescription","needQuote":true,"nodes":[{"content":"FrameworkDescription","pos":[0,20]}]},{"pos":[7194,7218],"content":"IsOSPlatform(OSPlatform)","needQuote":true,"nodes":[{"content":"IsOSPlatform(OSPlatform)","pos":[0,24]}]},{"pos":[8400,8430],"content":"System.Runtime.InteropServices","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices","pos":[0,30]}]},{"pos":[8616,8622],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8791,8801],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[8930,8938],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[9041,9042],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9089,9090],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9180,9188],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[9291,9292],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9339,9340],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9522,9536],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[9693,9699],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9798,9799],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9869,9875],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9960,9961],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10064,10070],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[10169,10170],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10240,10246],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10331,10332],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10542,10564],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[10758,10764],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[10863,10864],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10934,10940],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11026,11027]},{"pos":[11105,11111],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11196,11197],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11314,11320],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[11419,11420],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11490,11496],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11582,11583]},{"pos":[11661,11667],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11752,11753],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11981,12012],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[12233,12248],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[12365,12366],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12436,12442],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12528,12529]},{"pos":[12607,12613],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12698,12699],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12825,12840],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[12957,12958],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13028,13034],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[13120,13121]},{"pos":[13199,13205],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13290,13291],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13453,13466],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[13604,13615],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[13724,13725],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13772,13773],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13866,13877],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[13986,13987],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14034,14035],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14189,14198],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[14324,14331],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[14432,14433],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14480,14481],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14570,14577],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[14678,14679],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14726,14727],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14897,14914],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[15064,15079],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[15196,15197],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15244,15245],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15342,15357],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[15474,15475],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15522,15523],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15624,15630],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[15852,15864],"content":"Architecture","needQuote":true,"nodes":[{"content":"Architecture","pos":[0,12]}]},{"pos":[16045,16051],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[16276,16286],"content":"OSPlatform","needQuote":true,"nodes":[{"content":"OSPlatform","pos":[0,10]}]},{"pos":[16465,16472],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]}],"content":"items:\n- uid: System.Runtime.InteropServices.RuntimeInformation\n  commentId: T:System.Runtime.InteropServices.RuntimeInformation\n  id: RuntimeInformation\n  parent: System.Runtime.InteropServices\n  children:\n  - System.Runtime.InteropServices.RuntimeInformation.FrameworkDescription\n  - System.Runtime.InteropServices.RuntimeInformation.IsOSPlatform(System.Runtime.InteropServices.OSPlatform)\n  - System.Runtime.InteropServices.RuntimeInformation.OSArchitecture\n  - System.Runtime.InteropServices.RuntimeInformation.OSDescription\n  - System.Runtime.InteropServices.RuntimeInformation.ProcessArchitecture\n  langs:\n  - csharp\n  - vb\n  name: RuntimeInformation\n  nameWithType: RuntimeInformation\n  fullName: System.Runtime.InteropServices.RuntimeInformation\n  type: Class\n  source:\n    remote:\n      path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RuntimeInformation\n    path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs\n    startLine: 33\n  assemblies:\n  - System.Runtime.InteropServices.RuntimeInformation\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public class RuntimeInformation\n    content.vb: Public Class RuntimeInformation\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n- uid: System.Runtime.InteropServices.RuntimeInformation.ProcessArchitecture\n  commentId: P:System.Runtime.InteropServices.RuntimeInformation.ProcessArchitecture\n  id: ProcessArchitecture\n  parent: System.Runtime.InteropServices.RuntimeInformation\n  langs:\n  - csharp\n  - vb\n  name: ProcessArchitecture\n  nameWithType: RuntimeInformation.ProcessArchitecture\n  fullName: System.Runtime.InteropServices.RuntimeInformation.ProcessArchitecture\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ProcessArchitecture\n    path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs\n    startLine: 35\n  assemblies:\n  - System.Runtime.InteropServices.RuntimeInformation\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public static Architecture ProcessArchitecture { get; }\n    content.vb: Public Shared ReadOnly Property ProcessArchitecture As Architecture\n    parameters: []\n    return:\n      type: System.Runtime.InteropServices.Architecture\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n- uid: System.Runtime.InteropServices.RuntimeInformation.OSArchitecture\n  commentId: P:System.Runtime.InteropServices.RuntimeInformation.OSArchitecture\n  id: OSArchitecture\n  parent: System.Runtime.InteropServices.RuntimeInformation\n  langs:\n  - csharp\n  - vb\n  name: OSArchitecture\n  nameWithType: RuntimeInformation.OSArchitecture\n  fullName: System.Runtime.InteropServices.RuntimeInformation.OSArchitecture\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: OSArchitecture\n    path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs\n    startLine: 36\n  assemblies:\n  - System.Runtime.InteropServices.RuntimeInformation\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public static Architecture OSArchitecture { get; }\n    content.vb: Public Shared ReadOnly Property OSArchitecture As Architecture\n    parameters: []\n    return:\n      type: System.Runtime.InteropServices.Architecture\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n- uid: System.Runtime.InteropServices.RuntimeInformation.OSDescription\n  commentId: P:System.Runtime.InteropServices.RuntimeInformation.OSDescription\n  id: OSDescription\n  parent: System.Runtime.InteropServices.RuntimeInformation\n  langs:\n  - csharp\n  - vb\n  name: OSDescription\n  nameWithType: RuntimeInformation.OSDescription\n  fullName: System.Runtime.InteropServices.RuntimeInformation.OSDescription\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: OSDescription\n    path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs\n    startLine: 37\n  assemblies:\n  - System.Runtime.InteropServices.RuntimeInformation\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public static string OSDescription { get; }\n    content.vb: Public Shared ReadOnly Property OSDescription As String\n    parameters: []\n    return:\n      type: System.String\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n- uid: System.Runtime.InteropServices.RuntimeInformation.FrameworkDescription\n  commentId: P:System.Runtime.InteropServices.RuntimeInformation.FrameworkDescription\n  id: FrameworkDescription\n  parent: System.Runtime.InteropServices.RuntimeInformation\n  langs:\n  - csharp\n  - vb\n  name: FrameworkDescription\n  nameWithType: RuntimeInformation.FrameworkDescription\n  fullName: System.Runtime.InteropServices.RuntimeInformation.FrameworkDescription\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: FrameworkDescription\n    path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs\n    startLine: 38\n  assemblies:\n  - System.Runtime.InteropServices.RuntimeInformation\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public static string FrameworkDescription { get; }\n    content.vb: Public Shared ReadOnly Property FrameworkDescription As String\n    parameters: []\n    return:\n      type: System.String\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n- uid: System.Runtime.InteropServices.RuntimeInformation.IsOSPlatform(System.Runtime.InteropServices.OSPlatform)\n  commentId: M:System.Runtime.InteropServices.RuntimeInformation.IsOSPlatform(System.Runtime.InteropServices.OSPlatform)\n  id: IsOSPlatform(System.Runtime.InteropServices.OSPlatform)\n  parent: System.Runtime.InteropServices.RuntimeInformation\n  langs:\n  - csharp\n  - vb\n  name: IsOSPlatform(OSPlatform)\n  nameWithType: RuntimeInformation.IsOSPlatform(OSPlatform)\n  fullName: System.Runtime.InteropServices.RuntimeInformation.IsOSPlatform(System.Runtime.InteropServices.OSPlatform)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsOSPlatform\n    path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs\n    startLine: 39\n  assemblies:\n  - System.Runtime.InteropServices.RuntimeInformation\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public static bool IsOSPlatform(OSPlatform osPlatform)\n    content.vb: Public Shared Function IsOSPlatform(osPlatform As OSPlatform) As Boolean\n    parameters:\n    - id: osPlatform\n      type: System.Runtime.InteropServices.OSPlatform\n    return:\n      type: System.Boolean\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\nreferences:\n- uid: System.Runtime.InteropServices\n  commentId: N:System.Runtime.InteropServices\n  isExternal: false\n  name: System.Runtime.InteropServices\n  nameWithType: System.Runtime.InteropServices\n  fullName: System.Runtime.InteropServices\n- uid: System.Object\n  commentId: T:System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object.ToString\n  commentId: M:System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    nameWithType: Object.ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    nameWithType: Object.ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.Equals(System.Object)\n  commentId: M:System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.Equals(System.Object,System.Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.GetHashCode\n  commentId: M:System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    nameWithType: Object.GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    nameWithType: Object.GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.GetType\n  commentId: M:System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.MemberwiseClone\n  commentId: M:System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    nameWithType: Object.MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    nameWithType: Object.MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System\n  commentId: N:System\n  isExternal: false\n  name: System\n  nameWithType: System\n  fullName: System\n- uid: System.Runtime.InteropServices.Architecture\n  commentId: T:System.Runtime.InteropServices.Architecture\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: Architecture\n  nameWithType: Architecture\n  fullName: System.Runtime.InteropServices.Architecture\n- uid: System.String\n  commentId: T:System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Runtime.InteropServices.OSPlatform\n  commentId: T:System.Runtime.InteropServices.OSPlatform\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: OSPlatform\n  nameWithType: OSPlatform\n  fullName: System.Runtime.InteropServices.OSPlatform\n- uid: System.Boolean\n  commentId: T:System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n"}