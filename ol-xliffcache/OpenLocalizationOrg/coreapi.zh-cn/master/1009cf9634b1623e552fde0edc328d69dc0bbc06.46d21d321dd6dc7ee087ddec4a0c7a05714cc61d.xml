{"nodes":[{"pos":[1572,1583],"content":"CultureInfo","needQuote":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[3375,3394],"content":"CultureInfo(String)","needQuote":true,"nodes":[{"content":"CultureInfo(String)","pos":[0,19]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is null.","pos":[4705,4734],"source":"\\n<p>\\n<em>name</em> is null."},{"content":"&lt;/p&gt;\\n","pos":[4735,4741],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is not a valid culture name.","pos":[4880,4929],"source":"\\n<p>\\n<em>name</em> is not a valid culture name."},{"content":"For more information, see the Notes to Callers section.","pos":[4930,4985]},{"content":"&lt;/p&gt;\\n","pos":[4986,4992],"source":" </p>\\n"},{"pos":[5705,5713],"content":"Calendar","needQuote":true,"nodes":[{"content":"Calendar","pos":[0,8]}]},{"pos":[7261,7272],"content":"CompareInfo","needQuote":true,"nodes":[{"content":"CompareInfo","pos":[0,11]}]},{"pos":[8737,8751],"content":"CurrentCulture","needQuote":true,"nodes":[{"content":"CurrentCulture","pos":[0,14]}]},{"content":"\\n&lt;p&gt;An object that represents the culture used by the current thread.&lt;/p&gt;\\n","pos":[9605,9681],"source":"\\n<p>An object that represents the culture used by the current thread.</p>\\n"},{"content":"\\n&lt;p&gt;The property is set to &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[9800,9856],"source":"\\n<p>The property is set to <strong>null</strong>.</p>\\n"},{"pos":[11365,11381],"content":"CurrentUICulture","needQuote":true,"nodes":[{"content":"CurrentUICulture","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The culture used by the Resource Manager to look up culture-specific resources at run time.&lt;/p&gt;\\n","pos":[12318,12420],"source":"\\n<p>The culture used by the Resource Manager to look up culture-specific resources at run time.</p>\\n"},{"content":"\\n&lt;p&gt;The property is set to &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[12539,12595],"source":"\\n<p>The property is set to <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The property is set to a culture name that cannot be used to locate a resource file.","pos":[12692,12781],"source":"\\n<p>The property is set to a culture name that cannot be used to locate a resource file."},{"content":"Resource filenames can include only letters, numbers, hyphens, or underscores.","pos":[12782,12860]},{"content":"&lt;/p&gt;\\n","pos":[12861,12867],"source":" </p>\\n"},{"pos":[13975,13989],"content":"DateTimeFormat","needQuote":true,"nodes":[{"content":"DateTimeFormat","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The property is set to null.","pos":[15200,15233],"source":"\\n<p>The property is set to null."},{"content":"&lt;/p&gt;\\n","pos":[15234,15240],"source":" </p>\\n"},{"pos":[16512,16539],"content":"DefaultThreadCurrentCulture","needQuote":true,"nodes":[{"content":"DefaultThreadCurrentCulture","pos":[0,27]}]},{"content":"\\n&lt;p&gt;The default culture for threads in the current application domain, or &lt;strong&gt;null&lt;/strong&gt; if the current system culture is the default thread culture in the application domain.&lt;/p&gt;\\n","pos":[17503,17692],"source":"\\n<p>The default culture for threads in the current application domain, or <strong>null</strong> if the current system culture is the default thread culture in the application domain.</p>\\n"},{"pos":[18395,18424],"content":"DefaultThreadCurrentUICulture","needQuote":true,"nodes":[{"content":"DefaultThreadCurrentUICulture","pos":[0,29]}]},{"content":"\\n&lt;p&gt;The default UI culture for threads in the current application domain, or &lt;strong&gt;null&lt;/strong&gt; if the current system UI culture is the default thread UI culture in the application domain.&lt;/p&gt;\\n","pos":[19399,19597],"source":"\\n<p>The default UI culture for threads in the current application domain, or <strong>null</strong> if the current system UI culture is the default thread UI culture in the application domain.</p>\\n"},{"pos":[20519,20530],"content":"DisplayName","needQuote":true,"nodes":[{"content":"DisplayName","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The full localized culture name in the format languagefull [country/regionfull], where languagefull is the full name of the language and country/regionfull is the full name of the country/region.&lt;/p&gt;\\n","pos":[21285,21491],"source":"\\n<p>The full localized culture name in the format languagefull [country/regionfull], where languagefull is the full name of the language and country/regionfull is the full name of the country/region.</p>\\n"},{"pos":[22639,22650],"content":"EnglishName","needQuote":true,"nodes":[{"content":"EnglishName","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The culture name in the format languagefull [country/regionfull] in English, where languagefull is the full name of the language and country/regionfull is the full name of the country/region.&lt;/p&gt;\\n","pos":[23448,23650],"source":"\\n<p>The culture name in the format languagefull [country/regionfull] in English, where languagefull is the full name of the language and country/regionfull is the full name of the country/region.</p>\\n"},{"pos":[24813,24829],"content":"InvariantCulture","needQuote":true,"nodes":[{"content":"InvariantCulture","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The object that is culture-independent (invariant).&lt;/p&gt;\\n","pos":[25672,25734],"source":"\\n<p>The object that is culture-independent (invariant).</p>\\n"},{"pos":[26731,26747],"content":"IsNeutralCulture","needQuote":true,"nodes":[{"content":"IsNeutralCulture","pos":[0,16]}]},{"pos":[28289,28299],"content":"IsReadOnly","needQuote":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[29804,29808],"content":"Name","needQuote":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"content":"\\n&lt;p&gt;The culture name in the format languagecode2-country/regioncode2.","pos":[30502,30572],"source":"\\n<p>The culture name in the format languagecode2-country/regioncode2."},{"content":"languagecode2 is a lowercase two-letter code derived from ISO 639-1.","pos":[30573,30641]},{"content":"country/regioncode2 is derived from ISO 3166 and usually consists of two uppercase letters, or a BCP-47 language tag.","pos":[30642,30759]},{"content":"&lt;/p&gt;\\n","pos":[30760,30766],"source":" </p>\\n"},{"pos":[31918,31928],"content":"NativeName","needQuote":true,"nodes":[{"content":"NativeName","pos":[0,10]}]},{"pos":[34209,34221],"content":"NumberFormat","needQuote":true,"nodes":[{"content":"NumberFormat","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The property is set to null.","pos":[35450,35483],"source":"\\n<p>The property is set to null."},{"content":"&lt;/p&gt;\\n","pos":[35484,35490],"source":" </p>\\n"},{"pos":[36726,36743],"content":"OptionalCalendars","needQuote":true,"nodes":[{"content":"OptionalCalendars","pos":[0,17]}]},{"pos":[38480,38486],"content":"Parent","needQuote":true,"nodes":[{"content":"Parent","pos":[0,6]}]},{"pos":[40871,40879],"content":"TextInfo","needQuote":true,"nodes":[{"content":"TextInfo","pos":[0,8]}]},{"pos":[42354,42378],"content":"TwoLetterISOLanguageName","needQuote":true,"nodes":[{"content":"TwoLetterISOLanguageName","pos":[0,24]}]},{"pos":[44590,44597],"content":"Clone()","needQuote":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[45867,45881],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[47658,47673],"content":"GetFormat(Type)","needQuote":true,"nodes":[{"content":"GetFormat(Type)","pos":[0,15]}]},{"pos":[51117,51130],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[52867,52888],"content":"ReadOnly(CultureInfo)","needQuote":true,"nodes":[{"content":"ReadOnly(CultureInfo)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;ci&lt;/em&gt; is null.","pos":[54213,54240],"source":"\\n<p>\\n<em>ci</em> is null."},{"content":"&lt;/p&gt;\\n","pos":[54241,54247],"source":" </p>\\n"},{"pos":[54704,54714],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[56077,56097],"content":"System.Globalization","needQuote":true,"nodes":[{"content":"System.Globalization","pos":[0,20]}]},{"pos":[56270,56276],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[56430,56445],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[56659,56681],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[56829,56835],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[56902,56903],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[56953,56959],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[57020,57021]},{"pos":[57076,57082],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[57142,57143],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57240,57246],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[57313,57314],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57364,57370],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[57431,57432]},{"pos":[57487,57493],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[57553,57554],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57799,57830],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[57996,58011],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[58087,58088],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58138,58144],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[58205,58206]},{"pos":[58261,58267],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[58327,58328],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58434,58449],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[58525,58526],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58576,58582],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[58643,58644]},{"pos":[58699,58705],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[58765,58766],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58992,59001],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[59094,59101],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[59169,59170],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59197,59198],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59267,59274],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[59342,59343],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59370,59371],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59546,59563],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[59672,59687],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[59763,59764],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59791,59792],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59869,59884],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[59960,59961],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59988,59989],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60134,60140],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[60271,60277],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[60452,60460],"content":"Calendar","needQuote":true,"nodes":[{"content":"Calendar","pos":[0,8]}]},{"pos":[60672,60683],"content":"CompareInfo","needQuote":true,"nodes":[{"content":"CompareInfo","pos":[0,11]}]},{"pos":[60904,60915],"content":"CultureInfo","needQuote":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[61143,61161],"content":"DateTimeFormatInfo","needQuote":true,"nodes":[{"content":"DateTimeFormatInfo","pos":[0,18]}]},{"pos":[61371,61378],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[61564,61580],"content":"NumberFormatInfo","needQuote":true,"nodes":[{"content":"NumberFormatInfo","pos":[0,16]}]},{"pos":[61764,61774],"content":"Calendar[]","needQuote":true,"nodes":[{"content":"Calendar[]","pos":[0,10]}]},{"pos":[61952,61960],"content":"Calendar","needQuote":true,"nodes":[{"content":"Calendar","pos":[0,8]}]},{"content":"[]","pos":[62016,62018]},{"pos":[62099,62107],"content":"Calendar","needQuote":true,"nodes":[{"content":"Calendar","pos":[0,8]}]},{"pos":[62162,62164],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[62335,62343],"content":"TextInfo","needQuote":true,"nodes":[{"content":"TextInfo","pos":[0,8]}]},{"pos":[62550,62564],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[62683,62689],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[62756,62757],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62807,62813],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[62873,62874],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62957,62963],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[63030,63031],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63081,63087],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[63147,63148],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63367,63382],"content":"GetFormat(Type)","needQuote":true,"nodes":[{"content":"GetFormat(Type)","pos":[0,15]}]},{"pos":[63521,63530],"content":"GetFormat","needQuote":true,"nodes":[{"content":"GetFormat","pos":[0,9]}]},{"pos":[63609,63610],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63658,63662],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[63720,63721],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63814,63823],"content":"GetFormat","needQuote":true,"nodes":[{"content":"GetFormat","pos":[0,9]}]},{"pos":[63902,63903],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63951,63955],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[64013,64014],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64204,64208],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[64365,64378],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[64479,64490],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[64562,64563],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64590,64591],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64664,64675],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[64747,64748],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64775,64776],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64936,64941],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[65098,65108],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[65203,65211],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[65280,65281],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65308,65309],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65379,65387],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[65456,65457],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65484,65485],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65638,65659],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[65864,65888],"content":"CultureNotFoundException","needQuote":true,"nodes":[{"content":"CultureNotFoundException","pos":[0,24]}]},{"pos":[66126,66143],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[66340,66365],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]}],"content":"items:\n- uid: System.Globalization.CultureInfo\n  commentId: T:System.Globalization.CultureInfo\n  id: CultureInfo\n  parent: System.Globalization\n  children:\n  - System.Globalization.CultureInfo.#ctor(System.String)\n  - System.Globalization.CultureInfo.Calendar\n  - System.Globalization.CultureInfo.Clone\n  - System.Globalization.CultureInfo.CompareInfo\n  - System.Globalization.CultureInfo.CurrentCulture\n  - System.Globalization.CultureInfo.CurrentUICulture\n  - System.Globalization.CultureInfo.DateTimeFormat\n  - System.Globalization.CultureInfo.DefaultThreadCurrentCulture\n  - System.Globalization.CultureInfo.DefaultThreadCurrentUICulture\n  - System.Globalization.CultureInfo.DisplayName\n  - System.Globalization.CultureInfo.EnglishName\n  - System.Globalization.CultureInfo.Equals(System.Object)\n  - System.Globalization.CultureInfo.GetFormat(System.Type)\n  - System.Globalization.CultureInfo.GetHashCode\n  - System.Globalization.CultureInfo.InvariantCulture\n  - System.Globalization.CultureInfo.IsNeutralCulture\n  - System.Globalization.CultureInfo.IsReadOnly\n  - System.Globalization.CultureInfo.Name\n  - System.Globalization.CultureInfo.NativeName\n  - System.Globalization.CultureInfo.NumberFormat\n  - System.Globalization.CultureInfo.OptionalCalendars\n  - System.Globalization.CultureInfo.Parent\n  - System.Globalization.CultureInfo.ReadOnly(System.Globalization.CultureInfo)\n  - System.Globalization.CultureInfo.TextInfo\n  - System.Globalization.CultureInfo.ToString\n  - System.Globalization.CultureInfo.TwoLetterISOLanguageName\n  langs:\n  - csharp\n  - vb\n  name: CultureInfo\n  fullName: System.Globalization.CultureInfo\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CultureInfo\n    path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n    startLine: 44\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Provides information about a specific culture (called a locale for unmanaged code development). The information includes the names for the culture, the writing system, the calendar used, the sort order of strings, and formatting for dates and numbers. </p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [ComVisible(true)]\n\n      public class CultureInfo : ICloneable, IFormatProvider\n    content.vb: >-\n      <Serializable>\n\n      <ComVisible(True)>\n\n      Public Class CultureInfo\n          Implements ICloneable, IFormatProvider\n  seealso:\n  - type: System.Globalization.CultureAndRegionInfoBuilder\n    commentId: T:System.Globalization.CultureAndRegionInfoBuilder\n  - type: System.Globalization.RegionInfo\n    commentId: T:System.Globalization.RegionInfo\n  inheritance:\n  - System.Object\n  implements:\n  - System.IFormatProvider\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: CultureInfo\n- uid: System.Globalization.CultureInfo.#ctor(System.String)\n  commentId: M:System.Globalization.CultureInfo.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Globalization.CultureInfo\n  langs:\n  - csharp\n  - vb\n  name: CultureInfo(String)\n  fullName: System.Globalization.CultureInfo.CultureInfo(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n    startLine: 321\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Globalization.CultureInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class based on the culture specified by name.</p>\\n\"\n  syntax:\n    content: public CultureInfo(string name)\n    content.vb: Public Sub New(name As String)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>A predefined <xref href=\\\"System.Globalization.CultureInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> name, <xref href=\\\"System.Globalization.CultureInfo.Name\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of an existing <xref href=\\\"System.Globalization.CultureInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, or Windows-only culture name. <em>name</em> is not case-sensitive.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is null. </p>\\n\"\n  - type: System.Globalization.CultureNotFoundException\n    commentId: T:System.Globalization.CultureNotFoundException\n    description: \"\\n<p>\\n<em>name</em> is not a valid culture name. For more information, see the Notes to Callers section. </p>\\n\"\n  seealso:\n  - type: System.Globalization.CultureInfo.LCID\n    commentId: P:System.Globalization.CultureInfo.LCID\n  - type: System.Globalization.CultureInfo.UseUserOverride\n    commentId: P:System.Globalization.CultureInfo.UseUserOverride\n  - type: System.Globalization.CultureInfo.CreateSpecificCulture(System.String)\n    commentId: M:System.Globalization.CultureInfo.CreateSpecificCulture(System.String)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: CultureInfo.CultureInfo(String)\n- uid: System.Globalization.CultureInfo.Calendar\n  commentId: P:System.Globalization.CultureInfo.Calendar\n  id: Calendar\n  parent: System.Globalization.CultureInfo\n  langs:\n  - csharp\n  - vb\n  name: Calendar\n  fullName: System.Globalization.CultureInfo.Calendar\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Calendar\n    path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n    startLine: 1496\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets the default calendar used by the culture.</p>\\n\"\n  syntax:\n    content: public virtual Calendar Calendar { get; }\n    content.vb: Public Overridable ReadOnly Property Calendar As Calendar\n    parameters: []\n    return:\n      type: System.Globalization.Calendar\n      description: \"\\n<p>A <xref href=\\\"System.Globalization.Calendar\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the default calendar used by the culture.</p>\\n\"\n  seealso:\n  - type: System.Globalization.Calendar\n    commentId: T:System.Globalization.Calendar\n  - type: System.Globalization.CultureInfo.DateTimeFormat\n    commentId: P:System.Globalization.CultureInfo.DateTimeFormat\n  - type: System.Globalization.DateTimeFormatInfo\n    commentId: T:System.Globalization.DateTimeFormatInfo\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: CultureInfo.Calendar\n- uid: System.Globalization.CultureInfo.CompareInfo\n  commentId: P:System.Globalization.CultureInfo.CompareInfo\n  id: CompareInfo\n  parent: System.Globalization.CultureInfo\n  langs:\n  - csharp\n  - vb\n  name: CompareInfo\n  fullName: System.Globalization.CultureInfo.CompareInfo\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CompareInfo\n    path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n    startLine: 1162\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Globalization.CompareInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that defines how to compare strings for the culture.</p>\\n\"\n  syntax:\n    content: public virtual CompareInfo CompareInfo { get; }\n    content.vb: Public Overridable ReadOnly Property CompareInfo As CompareInfo\n    parameters: []\n    return:\n      type: System.Globalization.CompareInfo\n      description: \"\\n<p>The <xref href=\\\"System.Globalization.CompareInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that defines how to compare strings for the culture.</p>\\n\"\n  seealso:\n  - type: System.Globalization.CompareInfo\n    commentId: T:System.Globalization.CompareInfo\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: CultureInfo.CompareInfo\n- uid: System.Globalization.CultureInfo.CurrentCulture\n  commentId: P:System.Globalization.CultureInfo.CurrentCulture\n  id: CurrentCulture\n  parent: System.Globalization.CultureInfo\n  langs:\n  - csharp\n  - vb\n  name: CurrentCulture\n  fullName: System.Globalization.CultureInfo.CurrentCulture\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CurrentCulture\n    path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n    startLine: 673\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets the <xref href=\\\"System.Globalization.CultureInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents the culture used by the current thread.</p>\\n\"\n  syntax:\n    content: public static CultureInfo CurrentCulture { get; set; }\n    content.vb: Public Shared Property CurrentCulture As CultureInfo\n    parameters: []\n    return:\n      type: System.Globalization.CultureInfo\n      description: \"\\n<p>An object that represents the culture used by the current thread.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The property is set to <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.Globalization.CultureInfo.DefaultThreadCurrentCulture\n    commentId: P:System.Globalization.CultureInfo.DefaultThreadCurrentCulture\n  - type: System.Threading.Thread.CurrentCulture\n    commentId: P:System.Threading.Thread.CurrentCulture\n  - type: System.Globalization.CultureInfo.CurrentUICulture\n    commentId: P:System.Globalization.CultureInfo.CurrentUICulture\n  - type: System.Globalization.CultureInfo.InstalledUICulture\n    commentId: P:System.Globalization.CultureInfo.InstalledUICulture\n  - type: System.Globalization.CultureInfo.InvariantCulture\n    commentId: P:System.Globalization.CultureInfo.InvariantCulture\n  - type: System.Globalization.CultureInfo.Parent\n    commentId: P:System.Globalization.CultureInfo.Parent\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  - type: System.Security.Permissions.SecurityPermissionAttribute\n    commentId: T:System.Security.Permissions.SecurityPermissionAttribute\n  see:\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: CultureInfo.CurrentCulture\n- uid: System.Globalization.CultureInfo.CurrentUICulture\n  commentId: P:System.Globalization.CultureInfo.CurrentUICulture\n  id: CurrentUICulture\n  parent: System.Globalization.CultureInfo\n  langs:\n  - csharp\n  - vb\n  name: CurrentUICulture\n  fullName: System.Globalization.CultureInfo.CurrentUICulture\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CurrentUICulture\n    path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n    startLine: 772\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets the <xref href=\\\"System.Globalization.CultureInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents the current user interface culture used by the Resource Manager to look up culture-specific resources at run time.</p>\\n\"\n  syntax:\n    content: public static CultureInfo CurrentUICulture { get; set; }\n    content.vb: Public Shared Property CurrentUICulture As CultureInfo\n    parameters: []\n    return:\n      type: System.Globalization.CultureInfo\n      description: \"\\n<p>The culture used by the Resource Manager to look up culture-specific resources at run time.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The property is set to <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The property is set to a culture name that cannot be used to locate a resource file. Resource filenames can include only letters, numbers, hyphens, or underscores. </p>\\n\"\n  seealso:\n  - type: System.Resources.ResourceManager\n    commentId: T:System.Resources.ResourceManager\n  - type: System.Threading.Thread.CurrentUICulture\n    commentId: P:System.Threading.Thread.CurrentUICulture\n  - type: System.Globalization.CultureInfo.CurrentCulture\n    commentId: P:System.Globalization.CultureInfo.CurrentCulture\n  - type: System.Globalization.CultureInfo.InstalledUICulture\n    commentId: P:System.Globalization.CultureInfo.InstalledUICulture\n  - type: System.Globalization.CultureInfo.DefaultThreadCurrentUICulture\n    commentId: P:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture\n  see:\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: CultureInfo.CurrentUICulture\n- uid: System.Globalization.CultureInfo.DateTimeFormat\n  commentId: P:System.Globalization.CultureInfo.DateTimeFormat\n  id: DateTimeFormat\n  parent: System.Globalization.CultureInfo\n  langs:\n  - csharp\n  - vb\n  name: DateTimeFormat\n  fullName: System.Globalization.CultureInfo.DateTimeFormat\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DateTimeFormat\n    path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n    startLine: 1386\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets a <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that defines the culturally appropriate format of displaying dates and times.</p>\\n\"\n  syntax:\n    content: public virtual DateTimeFormatInfo DateTimeFormat { get; set; }\n    content.vb: Public Overridable Property DateTimeFormat As DateTimeFormatInfo\n    parameters: []\n    return:\n      type: System.Globalization.DateTimeFormatInfo\n      description: \"\\n<p>A <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that defines the culturally appropriate format of displaying dates and times.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The property is set to null. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Globalization.CultureInfo.DateTimeFormat\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property or any of the <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> properties is set, and the <xref href=\\\"System.Globalization.CultureInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is read-only. </p>\\n\"\n  seealso:\n  - type: System.Globalization.DateTimeFormatInfo\n    commentId: T:System.Globalization.DateTimeFormatInfo\n  - type: System.Globalization.CultureInfo.GetFormat(System.Type)\n    commentId: M:System.Globalization.CultureInfo.GetFormat(System.Type)\n  - type: System.Globalization.CultureInfo.NumberFormat\n    commentId: P:System.Globalization.CultureInfo.NumberFormat\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: CultureInfo.DateTimeFormat\n- uid: System.Globalization.CultureInfo.DefaultThreadCurrentCulture\n  commentId: P:System.Globalization.CultureInfo.DefaultThreadCurrentCulture\n  id: DefaultThreadCurrentCulture\n  parent: System.Globalization.CultureInfo\n  langs:\n  - csharp\n  - vb\n  name: DefaultThreadCurrentCulture\n  fullName: System.Globalization.CultureInfo.DefaultThreadCurrentCulture\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefaultThreadCurrentCulture\n    path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n    startLine: 844\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets the default culture for threads in the current application domain.</p>\\n\"\n  syntax:\n    content: >-\n      public static CultureInfo DefaultThreadCurrentCulture\n\n      {\n          get;\n          [SecuritySafeCritical]\n          [SecurityPermission(SecurityAction.Demand, ControlThread = true)]\n          set;\n      }\n    content.vb: Public Shared Property DefaultThreadCurrentCulture As CultureInfo\n    parameters: []\n    return:\n      type: System.Globalization.CultureInfo\n      description: \"\\n<p>The default culture for threads in the current application domain, or <strong>null</strong> if the current system culture is the default thread culture in the application domain.</p>\\n\"\n  seealso:\n  - type: System.Globalization.CultureInfo.CurrentCulture\n    commentId: P:System.Globalization.CultureInfo.CurrentCulture\n  - type: System.Globalization.CultureInfo.DefaultThreadCurrentUICulture\n    commentId: P:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: CultureInfo.DefaultThreadCurrentCulture\n- uid: System.Globalization.CultureInfo.DefaultThreadCurrentUICulture\n  commentId: P:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture\n  id: DefaultThreadCurrentUICulture\n  parent: System.Globalization.CultureInfo\n  langs:\n  - csharp\n  - vb\n  name: DefaultThreadCurrentUICulture\n  fullName: System.Globalization.CultureInfo.DefaultThreadCurrentUICulture\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefaultThreadCurrentUICulture\n    path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n    startLine: 862\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets the default UI culture for threads in the current application domain.</p>\\n\"\n  syntax:\n    content: >-\n      public static CultureInfo DefaultThreadCurrentUICulture\n\n      {\n          get;\n          [SecuritySafeCritical]\n          [SecurityPermission(SecurityAction.Demand, ControlThread = true)]\n          set;\n      }\n    content.vb: Public Shared Property DefaultThreadCurrentUICulture As CultureInfo\n    parameters: []\n    return:\n      type: System.Globalization.CultureInfo\n      description: \"\\n<p>The default UI culture for threads in the current application domain, or <strong>null</strong> if the current system UI culture is the default thread UI culture in the application domain.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>In a set operation, the <xref href=\\\"System.Globalization.CultureInfo.Name\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property value is invalid. </p>\\n\"\n  seealso:\n  - type: System.Globalization.CultureInfo.CurrentUICulture\n    commentId: P:System.Globalization.CultureInfo.CurrentUICulture\n  - type: System.Globalization.CultureInfo.DefaultThreadCurrentCulture\n    commentId: P:System.Globalization.CultureInfo.DefaultThreadCurrentCulture\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: CultureInfo.DefaultThreadCurrentUICulture\n- uid: System.Globalization.CultureInfo.DisplayName\n  commentId: P:System.Globalization.CultureInfo.DisplayName\n  id: DisplayName\n  parent: System.Globalization.CultureInfo\n  langs:\n  - csharp\n  - vb\n  name: DisplayName\n  fullName: System.Globalization.CultureInfo.DisplayName\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DisplayName\n    path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n    startLine: 1073\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets the full localized culture name. </p>\\n\"\n  syntax:\n    content: >-\n      public virtual string DisplayName\n\n      {\n          [SecuritySafeCritical]\n          get;\n      }\n    content.vb: Public Overridable ReadOnly Property DisplayName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The full localized culture name in the format languagefull [country/regionfull], where languagefull is the full name of the language and country/regionfull is the full name of the country/region.</p>\\n\"\n  seealso:\n  - type: System.Globalization.CultureInfo.Name\n    commentId: P:System.Globalization.CultureInfo.Name\n  - type: System.Globalization.CultureInfo.NativeName\n    commentId: P:System.Globalization.CultureInfo.NativeName\n  - type: System.Globalization.CultureInfo.EnglishName\n    commentId: P:System.Globalization.CultureInfo.EnglishName\n  - type: System.Globalization.CultureInfo.TwoLetterISOLanguageName\n    commentId: P:System.Globalization.CultureInfo.TwoLetterISOLanguageName\n  - type: System.Globalization.CultureInfo.ThreeLetterISOLanguageName\n    commentId: P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName\n  - type: System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName\n    commentId: P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: CultureInfo.DisplayName\n- uid: System.Globalization.CultureInfo.EnglishName\n  commentId: P:System.Globalization.CultureInfo.EnglishName\n  id: EnglishName\n  parent: System.Globalization.CultureInfo\n  langs:\n  - csharp\n  - vb\n  name: EnglishName\n  fullName: System.Globalization.CultureInfo.EnglishName\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: EnglishName\n    path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n    startLine: 1111\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets the culture name in the format languagefull [country/regionfull] in English.</p>\\n\"\n  syntax:\n    content: >-\n      public virtual string EnglishName\n\n      {\n          [SecuritySafeCritical]\n          get;\n      }\n    content.vb: Public Overridable ReadOnly Property EnglishName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The culture name in the format languagefull [country/regionfull] in English, where languagefull is the full name of the language and country/regionfull is the full name of the country/region.</p>\\n\"\n  seealso:\n  - type: System.Globalization.CultureInfo.Name\n    commentId: P:System.Globalization.CultureInfo.Name\n  - type: System.Globalization.CultureInfo.DisplayName\n    commentId: P:System.Globalization.CultureInfo.DisplayName\n  - type: System.Globalization.CultureInfo.NativeName\n    commentId: P:System.Globalization.CultureInfo.NativeName\n  - type: System.Globalization.CultureInfo.TwoLetterISOLanguageName\n    commentId: P:System.Globalization.CultureInfo.TwoLetterISOLanguageName\n  - type: System.Globalization.CultureInfo.ThreeLetterISOLanguageName\n    commentId: P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName\n  - type: System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName\n    commentId: P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: CultureInfo.EnglishName\n- uid: System.Globalization.CultureInfo.InvariantCulture\n  commentId: P:System.Globalization.CultureInfo.InvariantCulture\n  id: InvariantCulture\n  parent: System.Globalization.CultureInfo\n  langs:\n  - csharp\n  - vb\n  name: InvariantCulture\n  fullName: System.Globalization.CultureInfo.InvariantCulture\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: InvariantCulture\n    path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n    startLine: 902\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Globalization.CultureInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that is culture-independent (invariant).</p>\\n\"\n  syntax:\n    content: public static CultureInfo InvariantCulture { get; }\n    content.vb: Public Shared ReadOnly Property InvariantCulture As CultureInfo\n    parameters: []\n    return:\n      type: System.Globalization.CultureInfo\n      description: \"\\n<p>The object that is culture-independent (invariant).</p>\\n\"\n  seealso:\n  - type: System.Globalization.CultureInfo.CurrentCulture\n    commentId: P:System.Globalization.CultureInfo.CurrentCulture\n  - type: System.Globalization.CultureInfo.CurrentUICulture\n    commentId: P:System.Globalization.CultureInfo.CurrentUICulture\n  - type: System.Globalization.CultureInfo.InstalledUICulture\n    commentId: P:System.Globalization.CultureInfo.InstalledUICulture\n  - type: System.Globalization.CultureInfo.Parent\n    commentId: P:System.Globalization.CultureInfo.Parent\n  - type: System.Globalization.CultureInfo.IsNeutralCulture\n    commentId: P:System.Globalization.CultureInfo.IsNeutralCulture\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: CultureInfo.InvariantCulture\n- uid: System.Globalization.CultureInfo.IsNeutralCulture\n  commentId: P:System.Globalization.CultureInfo.IsNeutralCulture\n  id: IsNeutralCulture\n  parent: System.Globalization.CultureInfo\n  langs:\n  - csharp\n  - vb\n  name: IsNeutralCulture\n  fullName: System.Globalization.CultureInfo.IsNeutralCulture\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IsNeutralCulture\n    path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n    startLine: 1319\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets a value indicating whether the current <xref href=\\\"System.Globalization.CultureInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> represents a neutral culture.</p>\\n\"\n  syntax:\n    content: public virtual bool IsNeutralCulture { get; }\n    content.vb: Public Overridable ReadOnly Property IsNeutralCulture As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the current <xref href=\\\"System.Globalization.CultureInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> represents a neutral culture; otherwise, <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.Globalization.CultureInfo.InvariantCulture\n    commentId: P:System.Globalization.CultureInfo.InvariantCulture\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: CultureInfo.IsNeutralCulture\n- uid: System.Globalization.CultureInfo.IsReadOnly\n  commentId: P:System.Globalization.CultureInfo.IsReadOnly\n  id: IsReadOnly\n  parent: System.Globalization.CultureInfo\n  langs:\n  - csharp\n  - vb\n  name: IsReadOnly\n  fullName: System.Globalization.CultureInfo.IsReadOnly\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IsReadOnly\n    path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n    startLine: 1651\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets a value indicating whether the current <xref href=\\\"System.Globalization.CultureInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is read-only.</p>\\n\"\n  syntax:\n    content: public bool IsReadOnly { get; }\n    content.vb: Public ReadOnly Property IsReadOnly As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the current <xref href=\\\"System.Globalization.CultureInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is read-only; otherwise, <strong>false</strong>. The default is <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.Globalization.CultureInfo.ReadOnly(System.Globalization.CultureInfo)\n    commentId: M:System.Globalization.CultureInfo.ReadOnly(System.Globalization.CultureInfo)\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: CultureInfo.IsReadOnly\n- uid: System.Globalization.CultureInfo.Name\n  commentId: P:System.Globalization.CultureInfo.Name\n  id: Name\n  parent: System.Globalization.CultureInfo\n  langs:\n  - csharp\n  - vb\n  name: Name\n  fullName: System.Globalization.CultureInfo.Name\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Name\n    path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n    startLine: 1013\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets the culture name in the format languagecode2-country/regioncode2.</p>\\n\"\n  syntax:\n    content: public virtual string Name { get; }\n    content.vb: Public Overridable ReadOnly Property Name As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The culture name in the format languagecode2-country/regioncode2. languagecode2 is a lowercase two-letter code derived from ISO 639-1. country/regioncode2 is derived from ISO 3166 and usually consists of two uppercase letters, or a BCP-47 language tag. </p>\\n\"\n  seealso:\n  - type: System.Globalization.CultureInfo.DisplayName\n    commentId: P:System.Globalization.CultureInfo.DisplayName\n  - type: System.Globalization.CultureInfo.NativeName\n    commentId: P:System.Globalization.CultureInfo.NativeName\n  - type: System.Globalization.CultureInfo.EnglishName\n    commentId: P:System.Globalization.CultureInfo.EnglishName\n  - type: System.Globalization.CultureInfo.TwoLetterISOLanguageName\n    commentId: P:System.Globalization.CultureInfo.TwoLetterISOLanguageName\n  - type: System.Globalization.CultureInfo.ThreeLetterISOLanguageName\n    commentId: P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName\n  - type: System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName\n    commentId: P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: CultureInfo.Name\n- uid: System.Globalization.CultureInfo.NativeName\n  commentId: P:System.Globalization.CultureInfo.NativeName\n  id: NativeName\n  parent: System.Globalization.CultureInfo\n  langs:\n  - csharp\n  - vb\n  name: NativeName\n  fullName: System.Globalization.CultureInfo.NativeName\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: NativeName\n    path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n    startLine: 1094\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets the culture name, consisting of the language, the country/region, and the optional script, that the culture is set to display.</p>\\n\"\n  syntax:\n    content: >-\n      public virtual string NativeName\n\n      {\n          [SecuritySafeCritical]\n          get;\n      }\n    content.vb: Public Overridable ReadOnly Property NativeName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The culture name. consisting of the full name of the language, the full name of the country/region, and the optional script. The format is discussed in the description of the <xref href=\\\"System.Globalization.CultureInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  seealso:\n  - type: System.Globalization.CultureInfo.Name\n    commentId: P:System.Globalization.CultureInfo.Name\n  - type: System.Globalization.CultureInfo.DisplayName\n    commentId: P:System.Globalization.CultureInfo.DisplayName\n  - type: System.Globalization.CultureInfo.EnglishName\n    commentId: P:System.Globalization.CultureInfo.EnglishName\n  - type: System.Globalization.CultureInfo.TwoLetterISOLanguageName\n    commentId: P:System.Globalization.CultureInfo.TwoLetterISOLanguageName\n  - type: System.Globalization.CultureInfo.ThreeLetterISOLanguageName\n    commentId: P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName\n  - type: System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName\n    commentId: P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: CultureInfo.NativeName\n- uid: System.Globalization.CultureInfo.NumberFormat\n  commentId: P:System.Globalization.CultureInfo.NumberFormat\n  id: NumberFormat\n  parent: System.Globalization.CultureInfo\n  langs:\n  - csharp\n  - vb\n  name: NumberFormat\n  fullName: System.Globalization.CultureInfo.NumberFormat\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: NumberFormat\n    path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n    startLine: 1353\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets a <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that defines the culturally appropriate format of displaying numbers, currency, and percentage.</p>\\n\"\n  syntax:\n    content: public virtual NumberFormatInfo NumberFormat { get; set; }\n    content.vb: Public Overridable Property NumberFormat As NumberFormatInfo\n    parameters: []\n    return:\n      type: System.Globalization.NumberFormatInfo\n      description: \"\\n<p>A <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that defines the culturally appropriate format of displaying numbers, currency, and percentage.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The property is set to null. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Globalization.CultureInfo.NumberFormat\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property or any of the <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> properties is set, and the <xref href=\\\"System.Globalization.CultureInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is read-only. </p>\\n\"\n  seealso:\n  - type: System.Globalization.NumberFormatInfo\n    commentId: T:System.Globalization.NumberFormatInfo\n  - type: System.Globalization.CultureInfo.GetFormat(System.Type)\n    commentId: M:System.Globalization.CultureInfo.GetFormat(System.Type)\n  - type: System.Globalization.CultureInfo.DateTimeFormat\n    commentId: P:System.Globalization.CultureInfo.DateTimeFormat\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: CultureInfo.NumberFormat\n- uid: System.Globalization.CultureInfo.OptionalCalendars\n  commentId: P:System.Globalization.CultureInfo.OptionalCalendars\n  id: OptionalCalendars\n  parent: System.Globalization.CultureInfo\n  langs:\n  - csharp\n  - vb\n  name: OptionalCalendars\n  fullName: System.Globalization.CultureInfo.OptionalCalendars\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: OptionalCalendars\n    path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n    startLine: 1521\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets the list of calendars that can be used by the culture.</p>\\n\"\n  syntax:\n    content: public virtual Calendar[] OptionalCalendars { get; }\n    content.vb: Public Overridable ReadOnly Property OptionalCalendars As Calendar()\n    parameters: []\n    return:\n      type: System.Globalization.Calendar[]\n      description: \"\\n<p>An array of type <xref href=\\\"System.Globalization.Calendar\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the calendars that can be used by the culture represented by the current <xref href=\\\"System.Globalization.CultureInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Globalization.Calendar\n    commentId: T:System.Globalization.Calendar\n  - type: System.Globalization.CultureInfo.DateTimeFormat\n    commentId: P:System.Globalization.CultureInfo.DateTimeFormat\n  - type: System.Globalization.DateTimeFormatInfo\n    commentId: T:System.Globalization.DateTimeFormatInfo\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: CultureInfo.OptionalCalendars\n- uid: System.Globalization.CultureInfo.Parent\n  commentId: P:System.Globalization.CultureInfo.Parent\n  id: Parent\n  parent: System.Globalization.CultureInfo\n  langs:\n  - csharp\n  - vb\n  name: Parent\n  fullName: System.Globalization.CultureInfo.Parent\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Parent\n    path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n    startLine: 919\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Globalization.CultureInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the parent culture of the current <xref href=\\\"System.Globalization.CultureInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: >-\n      public virtual CultureInfo Parent\n\n      {\n          [SecuritySafeCritical]\n          get;\n      }\n    content.vb: Public Overridable ReadOnly Property Parent As CultureInfo\n    parameters: []\n    return:\n      type: System.Globalization.CultureInfo\n      description: \"\\n<p>The <xref href=\\\"System.Globalization.CultureInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the parent culture of the current <xref href=\\\"System.Globalization.CultureInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Globalization.CultureInfo.#ctor(System.String)\n    commentId: M:System.Globalization.CultureInfo.#ctor(System.String)\n  - type: System.Globalization.CultureInfo.CreateSpecificCulture(System.String)\n    commentId: M:System.Globalization.CultureInfo.CreateSpecificCulture(System.String)\n  - type: System.Globalization.CultureInfo.CurrentCulture\n    commentId: P:System.Globalization.CultureInfo.CurrentCulture\n  - type: System.Globalization.CultureInfo.CurrentUICulture\n    commentId: P:System.Globalization.CultureInfo.CurrentUICulture\n  - type: System.Globalization.CultureInfo.InstalledUICulture\n    commentId: P:System.Globalization.CultureInfo.InstalledUICulture\n  - type: System.Globalization.CultureInfo.InvariantCulture\n    commentId: P:System.Globalization.CultureInfo.InvariantCulture\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: CultureInfo.Parent\n- uid: System.Globalization.CultureInfo.TextInfo\n  commentId: P:System.Globalization.CultureInfo.TextInfo\n  id: TextInfo\n  parent: System.Globalization.CultureInfo\n  langs:\n  - csharp\n  - vb\n  name: TextInfo\n  fullName: System.Globalization.CultureInfo.TextInfo\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TextInfo\n    path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n    startLine: 1222\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Globalization.TextInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that defines the writing system associated with the culture.</p>\\n\"\n  syntax:\n    content: public virtual TextInfo TextInfo { get; }\n    content.vb: Public Overridable ReadOnly Property TextInfo As TextInfo\n    parameters: []\n    return:\n      type: System.Globalization.TextInfo\n      description: \"\\n<p>The <xref href=\\\"System.Globalization.TextInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that defines the writing system associated with the culture.</p>\\n\"\n  seealso:\n  - type: System.Globalization.TextInfo\n    commentId: T:System.Globalization.TextInfo\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: CultureInfo.TextInfo\n- uid: System.Globalization.CultureInfo.TwoLetterISOLanguageName\n  commentId: P:System.Globalization.CultureInfo.TwoLetterISOLanguageName\n  id: TwoLetterISOLanguageName\n  parent: System.Globalization.CultureInfo\n  langs:\n  - csharp\n  - vb\n  name: TwoLetterISOLanguageName\n  fullName: System.Globalization.CultureInfo.TwoLetterISOLanguageName\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TwoLetterISOLanguageName\n    path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n    startLine: 1120\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets the ISO 639-1 two-letter code for the language of the current <xref href=\\\"System.Globalization.CultureInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: >-\n      public virtual string TwoLetterISOLanguageName\n\n      {\n          [SecuritySafeCritical]\n          get;\n      }\n    content.vb: Public Overridable ReadOnly Property TwoLetterISOLanguageName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The ISO 639-1 two-letter code for the language of the current <xref href=\\\"System.Globalization.CultureInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Globalization.CultureInfo.Name\n    commentId: P:System.Globalization.CultureInfo.Name\n  - type: System.Globalization.CultureInfo.DisplayName\n    commentId: P:System.Globalization.CultureInfo.DisplayName\n  - type: System.Globalization.CultureInfo.NativeName\n    commentId: P:System.Globalization.CultureInfo.NativeName\n  - type: System.Globalization.CultureInfo.EnglishName\n    commentId: P:System.Globalization.CultureInfo.EnglishName\n  - type: System.Globalization.CultureInfo.ThreeLetterISOLanguageName\n    commentId: P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName\n  - type: System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName\n    commentId: P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: CultureInfo.TwoLetterISOLanguageName\n- uid: System.Globalization.CultureInfo.Clone\n  commentId: M:System.Globalization.CultureInfo.Clone\n  id: Clone\n  parent: System.Globalization.CultureInfo\n  langs:\n  - csharp\n  - vb\n  name: Clone()\n  fullName: System.Globalization.CultureInfo.Clone()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Clone\n    path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n    startLine: 1562\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Creates a copy of the current <xref href=\\\"System.Globalization.CultureInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual object Clone()\n    content.vb: Public Overridable Function Clone As Object\n    return:\n      type: System.Object\n      description: \"\\n<p>A copy of the current <xref href=\\\"System.Globalization.CultureInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Object\n    commentId: T:System.Object\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: CultureInfo.Clone()\n- uid: System.Globalization.CultureInfo.Equals(System.Object)\n  commentId: M:System.Globalization.CultureInfo.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Globalization.CultureInfo\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  fullName: System.Globalization.CultureInfo.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Equals\n    path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n    startLine: 1255\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Determines whether the specified object is the same culture as the current <xref href=\\\"System.Globalization.CultureInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override bool Equals(object value)\n    content.vb: Public Overrides Function Equals(value As Object) As Boolean\n    parameters:\n    - id: value\n      type: System.Object\n      description: \"\\n<p>The object to compare with the current <xref href=\\\"System.Globalization.CultureInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <em>value</em> is the same culture as the current <xref href=\\\"System.Globalization.CultureInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.Object.Equals(System.Object)\n  seealso:\n  - type: System.Object.Equals(System.Object)\n    commentId: M:System.Object.Equals(System.Object)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: CultureInfo.Equals(Object)\n- uid: System.Globalization.CultureInfo.GetFormat(System.Type)\n  commentId: M:System.Globalization.CultureInfo.GetFormat(System.Type)\n  id: GetFormat(System.Type)\n  parent: System.Globalization.CultureInfo\n  langs:\n  - csharp\n  - vb\n  name: GetFormat(Type)\n  fullName: System.Globalization.CultureInfo.GetFormat(System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetFormat\n    path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n    startLine: 1309\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets an object that defines how to format the specified type.</p>\\n\"\n  syntax:\n    content: public virtual object GetFormat(Type formatType)\n    content.vb: Public Overridable Function GetFormat(formatType As Type) As Object\n    parameters:\n    - id: formatType\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for which to get a formatting object. This method only supports the <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> types. </p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>The value of the <xref href=\\\"System.Globalization.CultureInfo.NumberFormat\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property, which is a <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the default number format information for the current <xref href=\\\"System.Globalization.CultureInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, if <em>formatType</em> is the <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object for the <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n<p>-or- </p>\\n<p>The value of the <xref href=\\\"System.Globalization.CultureInfo.DateTimeFormat\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property, which is a <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the default date and time format information for the current <xref href=\\\"System.Globalization.CultureInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, if <em>formatType</em> is the <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object for the <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n<p>-or- </p>\\n<p>null, if <em>formatType</em> is any other object.</p>\\n\"\n  seealso:\n  - type: System.Type\n    commentId: T:System.Type\n  - type: System.Globalization.NumberFormatInfo\n    commentId: T:System.Globalization.NumberFormatInfo\n  - type: System.Globalization.DateTimeFormatInfo\n    commentId: T:System.Globalization.DateTimeFormatInfo\n  - type: System.Globalization.CultureInfo.NumberFormat\n    commentId: P:System.Globalization.CultureInfo.NumberFormat\n  - type: System.Globalization.CultureInfo.DateTimeFormat\n    commentId: P:System.Globalization.CultureInfo.DateTimeFormat\n  implements:\n  - System.IFormatProvider.GetFormat(System.Type)\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: CultureInfo.GetFormat(Type)\n- uid: System.Globalization.CultureInfo.GetHashCode\n  commentId: M:System.Globalization.CultureInfo.GetHashCode\n  id: GetHashCode\n  parent: System.Globalization.CultureInfo\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  fullName: System.Globalization.CultureInfo.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetHashCode\n    path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n    startLine: 1284\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Serves as a hash function for the current <xref href=\\\"System.Globalization.CultureInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, suitable for hashing algorithms and data structures, such as a hash table.</p>\\n\"\n  syntax:\n    content: public override int GetHashCode()\n    content.vb: Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>A hash code for the current <xref href=\\\"System.Globalization.CultureInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  overridden: System.Object.GetHashCode\n  seealso:\n  - type: System.Object.GetHashCode\n    commentId: M:System.Object.GetHashCode\n  - type: System.Collections.Hashtable\n    commentId: T:System.Collections.Hashtable\n  - type: System.Globalization.CultureInfo.Equals(System.Object)\n    commentId: M:System.Globalization.CultureInfo.Equals(System.Object)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: CultureInfo.GetHashCode()\n- uid: System.Globalization.CultureInfo.ReadOnly(System.Globalization.CultureInfo)\n  commentId: M:System.Globalization.CultureInfo.ReadOnly(System.Globalization.CultureInfo)\n  id: ReadOnly(System.Globalization.CultureInfo)\n  parent: System.Globalization.CultureInfo\n  langs:\n  - csharp\n  - vb\n  name: ReadOnly(CultureInfo)\n  fullName: System.Globalization.CultureInfo.ReadOnly(System.Globalization.CultureInfo)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ReadOnly\n    path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n    startLine: 1603\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Returns a read-only wrapper around the specified <xref href=\\\"System.Globalization.CultureInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object. </p>\\n\"\n  syntax:\n    content: public static CultureInfo ReadOnly(CultureInfo ci)\n    content.vb: Public Shared Function ReadOnly(ci As CultureInfo) As CultureInfo\n    parameters:\n    - id: ci\n      type: System.Globalization.CultureInfo\n      description: \"\\n<p>The <xref href=\\\"System.Globalization.CultureInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to wrap. </p>\\n\"\n    return:\n      type: System.Globalization.CultureInfo\n      description: \"\\n<p>A read-only <xref href=\\\"System.Globalization.CultureInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> wrapper around <em>ci</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>ci</em> is null. </p>\\n\"\n  seealso:\n  - type: System.Globalization.CultureInfo.IsReadOnly\n    commentId: P:System.Globalization.CultureInfo.IsReadOnly\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: CultureInfo.ReadOnly(CultureInfo)\n- uid: System.Globalization.CultureInfo.ToString\n  commentId: M:System.Globalization.CultureInfo.ToString\n  id: ToString\n  parent: System.Globalization.CultureInfo\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.Globalization.CultureInfo.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToString\n    path: src/mscorlib/src/System/Globalization/CultureInfo.cs\n    startLine: 1300\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Returns a string containing the name of the current <xref href=\\\"System.Globalization.CultureInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> in the format languagecode2-country/regioncode2.</p>\\n\"\n  syntax:\n    content: public override string ToString()\n    content.vb: Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>A string containing the name of the current <xref href=\\\"System.Globalization.CultureInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  overridden: System.Object.ToString\n  seealso:\n  - type: System.Object.ToString\n    commentId: M:System.Object.ToString\n  - type: System.Globalization.CultureInfo.Name\n    commentId: P:System.Globalization.CultureInfo.Name\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: CultureInfo.ToString()\nreferences:\n- uid: System.Globalization\n  isExternal: false\n  name: System.Globalization\n  fullName: System.Globalization\n  nameWithType: System.Globalization\n  commentId: N:System.Globalization\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  fullName: System.IFormatProvider\n  nameWithType: IFormatProvider\n  commentId: T:System.IFormatProvider\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Globalization.Calendar\n  parent: System.Globalization\n  isExternal: false\n  name: Calendar\n  fullName: System.Globalization.Calendar\n  nameWithType: Calendar\n  commentId: T:System.Globalization.Calendar\n- uid: System.Globalization.CompareInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CompareInfo\n  fullName: System.Globalization.CompareInfo\n  nameWithType: CompareInfo\n  commentId: T:System.Globalization.CompareInfo\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  fullName: System.Globalization.CultureInfo\n  nameWithType: CultureInfo\n  commentId: T:System.Globalization.CultureInfo\n- uid: System.Globalization.DateTimeFormatInfo\n  parent: System.Globalization\n  isExternal: false\n  name: DateTimeFormatInfo\n  fullName: System.Globalization.DateTimeFormatInfo\n  nameWithType: DateTimeFormatInfo\n  commentId: T:System.Globalization.DateTimeFormatInfo\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Globalization.NumberFormatInfo\n  parent: System.Globalization\n  isExternal: false\n  name: NumberFormatInfo\n  fullName: System.Globalization.NumberFormatInfo\n  nameWithType: NumberFormatInfo\n  commentId: T:System.Globalization.NumberFormatInfo\n- uid: System.Globalization.Calendar[]\n  name: Calendar[]\n  fullName: System.Globalization.Calendar[]\n  fullname.vb: System.Globalization.Calendar()\n  name.vb: Calendar()\n  spec.csharp:\n  - uid: System.Globalization.Calendar\n    name: Calendar\n    fullName: System.Globalization.Calendar\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Globalization.Calendar\n    name: Calendar\n    fullName: System.Globalization.Calendar\n  - name: ()\n    fullName: ()\n  nameWithType: Calendar[]\n  nameWithType.vb: Calendar()\n- uid: System.Globalization.TextInfo\n  parent: System.Globalization\n  isExternal: false\n  name: TextInfo\n  fullName: System.Globalization.TextInfo\n  nameWithType: TextInfo\n  commentId: T:System.Globalization.TextInfo\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.IFormatProvider.GetFormat(System.Type)\n  parent: System.IFormatProvider\n  isExternal: true\n  name: GetFormat(Type)\n  fullName: System.IFormatProvider.GetFormat(System.Type)\n  spec.csharp:\n  - uid: System.IFormatProvider.GetFormat(System.Type)\n    name: GetFormat\n    fullName: System.IFormatProvider.GetFormat\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IFormatProvider.GetFormat(System.Type)\n    name: GetFormat\n    fullName: System.IFormatProvider.GetFormat\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IFormatProvider.GetFormat(Type)\n  commentId: M:System.IFormatProvider.GetFormat(System.Type)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  nameWithType: Type\n  commentId: T:System.Type\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.Globalization.CultureNotFoundException\n  isExternal: false\n  name: CultureNotFoundException\n  fullName: System.Globalization.CultureNotFoundException\n  nameWithType: CultureNotFoundException\n  commentId: T:System.Globalization.CultureNotFoundException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n"}