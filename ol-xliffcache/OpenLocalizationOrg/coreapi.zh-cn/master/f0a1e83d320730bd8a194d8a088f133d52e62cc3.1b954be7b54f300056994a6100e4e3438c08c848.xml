{"nodes":[{"pos":[358,378],"content":"WaitForChangedResult","needQuote":true,"nodes":[{"content":"WaitForChangedResult","pos":[0,20]}]},{"pos":[2466,2476],"content":"ChangeType","needQuote":true,"nodes":[{"content":"ChangeType","pos":[0,10]}]},{"pos":[3728,3732],"content":"Name","needQuote":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"content":"\\n&lt;p&gt;The name of the file or directory that changed.&lt;/p&gt;\\n","pos":[4416,4474],"source":"\\n<p>The name of the file or directory that changed.</p>\\n"},{"pos":[4782,4789],"content":"OldName","needQuote":true,"nodes":[{"content":"OldName","pos":[0,7]}]},{"content":"\\n&lt;p&gt;The original name of the file or directory that was renamed.&lt;/p&gt;\\n","pos":[5498,5569],"source":"\\n<p>The original name of the file or directory that was renamed.</p>\\n"},{"pos":[5883,5891],"content":"TimedOut","needQuote":true,"nodes":[{"content":"TimedOut","pos":[0,8]}]},{"pos":[7190,7199],"content":"System.IO","needQuote":true,"nodes":[{"content":"System.IO","pos":[0,9]}]},{"pos":[7373,7387],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[7512,7518],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7567,7568],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7618,7624],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7684,7685],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7771,7777],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7826,7827],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7877,7883],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7943,7944],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8147,8160],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[8267,8278],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[8332,8333],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8360,8361],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8437,8448],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[8502,8503],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8530,8531],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8720,8730],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[8831,8839],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[8890,8891],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8918,8919],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8992,9000],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[9051,9052],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9079,9080],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9283,9305],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[9453,9459],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9526,9527],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9577,9583],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9644,9645]},{"pos":[9700,9706],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9766,9767],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9864,9870],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9937,9938],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9988,9994],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10055,10056]},{"pos":[10111,10117],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10177,10178],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10423,10454],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[10620,10635],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[10711,10712],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10762,10768],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10829,10830]},{"pos":[10885,10891],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10951,10952],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11058,11073],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[11149,11150],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11200,11206],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11267,11268]},{"pos":[11323,11329],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11389,11390],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11616,11625],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[11718,11725],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[11793,11794],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11821,11822],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11891,11898],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[11966,11967],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11994,11995],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12151,12160],"content":"ValueType","needQuote":true,"nodes":[{"content":"ValueType","pos":[0,9]}]},{"pos":[12314,12320],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12441,12447],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[12596,12614],"content":"WatcherChangeTypes","needQuote":true,"nodes":[{"content":"WatcherChangeTypes","pos":[0,18]}]},{"pos":[12801,12807],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[12953,12960],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]}],"content":"items:\n- uid: System.IO.WaitForChangedResult\n  commentId: T:System.IO.WaitForChangedResult\n  id: WaitForChangedResult\n  parent: System.IO\n  children:\n  - System.IO.WaitForChangedResult.ChangeType\n  - System.IO.WaitForChangedResult.Name\n  - System.IO.WaitForChangedResult.OldName\n  - System.IO.WaitForChangedResult.TimedOut\n  langs:\n  - csharp\n  - vb\n  name: WaitForChangedResult\n  fullName: System.IO.WaitForChangedResult\n  type: Struct\n  source:\n    remote:\n      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WaitForChangedResult\n    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n    startLine: 67\n  assemblies:\n  - System.IO.FileSystem.Watcher\n  namespace: System.IO\n  summary: \"\\n<p>Contains information on the change that occurred.</p>\\n\"\n  syntax:\n    content: public struct WaitForChangedResult\n    content.vb: Public Structure WaitForChangedResult\n  seealso:\n  - type: System.IO.FileSystemEventArgs\n    commentId: T:System.IO.FileSystemEventArgs\n  - type: System.IO.FileSystemEventHandler\n    commentId: T:System.IO.FileSystemEventHandler\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  - type: System.IO.InternalBufferOverflowException\n    commentId: T:System.IO.InternalBufferOverflowException\n  - type: System.IO.NotifyFilters\n    commentId: T:System.IO.NotifyFilters\n  - type: System.IO.RenamedEventArgs\n    commentId: T:System.IO.RenamedEventArgs\n  - type: System.IO.RenamedEventHandler\n    commentId: T:System.IO.RenamedEventHandler\n  - type: System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes)\n    commentId: M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes)\n  - type: System.IO.WatcherChangeTypes\n    commentId: T:System.IO.WatcherChangeTypes\n  inheritedMembers:\n  - System.ValueType.Equals(System.Object)\n  - System.ValueType.GetHashCode\n  - System.ValueType.ToString\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  modifiers.csharp:\n  - public\n  - struct\n  modifiers.vb:\n  - Public\n  - Structure\n  nameWithType: WaitForChangedResult\n- uid: System.IO.WaitForChangedResult.ChangeType\n  commentId: P:System.IO.WaitForChangedResult.ChangeType\n  id: ChangeType\n  parent: System.IO.WaitForChangedResult\n  langs:\n  - csharp\n  - vb\n  name: ChangeType\n  fullName: System.IO.WaitForChangedResult.ChangeType\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ChangeType\n    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n    startLine: 69\n  assemblies:\n  - System.IO.FileSystem.Watcher\n  namespace: System.IO\n  summary: \"\\n<p>Gets or sets the type of change that occurred.</p>\\n\"\n  syntax:\n    content: public WatcherChangeTypes ChangeType { get; set; }\n    content.vb: Public Property ChangeType As WatcherChangeTypes\n    parameters: []\n    return:\n      type: System.IO.WatcherChangeTypes\n      description: \"\\n<p>One of the <xref href=\\\"System.IO.WatcherChangeTypes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n  seealso:\n  - type: System.IO.WatcherChangeTypes\n    commentId: T:System.IO.WatcherChangeTypes\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: WaitForChangedResult.ChangeType\n- uid: System.IO.WaitForChangedResult.Name\n  commentId: P:System.IO.WaitForChangedResult.Name\n  id: Name\n  parent: System.IO.WaitForChangedResult\n  langs:\n  - csharp\n  - vb\n  name: Name\n  fullName: System.IO.WaitForChangedResult.Name\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Name\n    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n    startLine: 70\n  assemblies:\n  - System.IO.FileSystem.Watcher\n  namespace: System.IO\n  summary: \"\\n<p>Gets or sets the name of the file or directory that changed.</p>\\n\"\n  syntax:\n    content: public string Name { get; set; }\n    content.vb: Public Property Name As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The name of the file or directory that changed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: WaitForChangedResult.Name\n- uid: System.IO.WaitForChangedResult.OldName\n  commentId: P:System.IO.WaitForChangedResult.OldName\n  id: OldName\n  parent: System.IO.WaitForChangedResult\n  langs:\n  - csharp\n  - vb\n  name: OldName\n  fullName: System.IO.WaitForChangedResult.OldName\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: OldName\n    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n    startLine: 71\n  assemblies:\n  - System.IO.FileSystem.Watcher\n  namespace: System.IO\n  summary: \"\\n<p>Gets or sets the original name of the file or directory that was renamed.</p>\\n\"\n  syntax:\n    content: public string OldName { get; set; }\n    content.vb: Public Property OldName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The original name of the file or directory that was renamed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: WaitForChangedResult.OldName\n- uid: System.IO.WaitForChangedResult.TimedOut\n  commentId: P:System.IO.WaitForChangedResult.TimedOut\n  id: TimedOut\n  parent: System.IO.WaitForChangedResult\n  langs:\n  - csharp\n  - vb\n  name: TimedOut\n  fullName: System.IO.WaitForChangedResult.TimedOut\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TimedOut\n    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n    startLine: 72\n  assemblies:\n  - System.IO.FileSystem.Watcher\n  namespace: System.IO\n  summary: \"\\n<p>Gets or sets a value indicating whether the wait operation timed out.</p>\\n\"\n  syntax:\n    content: public bool TimedOut { get; set; }\n    content.vb: Public Property TimedOut As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method timed out; otherwise, <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes)\n    commentId: M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes)\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: WaitForChangedResult.TimedOut\nreferences:\n- uid: System.IO\n  isExternal: false\n  name: System.IO\n  fullName: System.IO\n  commentId: N:System.IO\n  nameWithType: System.IO\n- uid: System.ValueType.Equals(System.Object)\n  parent: System.ValueType\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.ValueType.Equals(System.Object)\n  spec.csharp:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.ValueType.Equals(System.Object)\n  nameWithType: ValueType.Equals(Object)\n- uid: System.ValueType.GetHashCode\n  parent: System.ValueType\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.ValueType.GetHashCode()\n  spec.csharp:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.ValueType.GetHashCode\n  nameWithType: ValueType.GetHashCode()\n- uid: System.ValueType.ToString\n  parent: System.ValueType\n  isExternal: false\n  name: ToString()\n  fullName: System.ValueType.ToString()\n  spec.csharp:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.ValueType.ToString\n  nameWithType: ValueType.ToString()\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  fullName: System.ValueType\n  commentId: T:System.ValueType\n  nameWithType: ValueType\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.IO.WatcherChangeTypes\n  parent: System.IO\n  isExternal: false\n  name: WatcherChangeTypes\n  fullName: System.IO.WatcherChangeTypes\n  commentId: T:System.IO.WatcherChangeTypes\n  nameWithType: WatcherChangeTypes\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n"}