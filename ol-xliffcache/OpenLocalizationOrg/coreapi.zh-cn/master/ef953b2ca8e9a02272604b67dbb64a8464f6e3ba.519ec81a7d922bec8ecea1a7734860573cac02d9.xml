{"nodes":[{"pos":[930,955],"content":"RetryConditionHeaderValue","needQuote":true,"nodes":[{"content":"RetryConditionHeaderValue","pos":[0,25]}]},{"pos":[2250,2291],"content":"RetryConditionHeaderValue(DateTimeOffset)","needQuote":true,"nodes":[{"content":"RetryConditionHeaderValue(DateTimeOffset)","pos":[0,41]}]},{"content":"\\n&lt;p&gt;The date and time offset used to initialize the new instance.&lt;/p&gt;\\n","pos":[3119,3191],"source":"\\n<p>The date and time offset used to initialize the new instance.</p>\\n"},{"pos":[3629,3664],"content":"RetryConditionHeaderValue(TimeSpan)","needQuote":true,"nodes":[{"content":"RetryConditionHeaderValue(TimeSpan)","pos":[0,35]}]},{"content":"\\n&lt;p&gt;The delta, in seconds, used to initialize the new instance.&lt;/p&gt;\\n","pos":[4471,4541],"source":"\\n<p>The delta, in seconds, used to initialize the new instance.</p>\\n"},{"pos":[4917,4921],"content":"Date","needQuote":true,"nodes":[{"content":"Date","pos":[0,4]}]},{"pos":[6347,6352],"content":"Delta","needQuote":true,"nodes":[{"content":"Delta","pos":[0,5]}]},{"pos":[7799,7813],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The object to compare with the current object.&lt;/p&gt;\\n","pos":[8705,8762],"source":"\\n<p>The object to compare with the current object.</p>\\n"},{"pos":[9560,9573],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[10934,10947],"content":"Parse(String)","needQuote":true,"nodes":[{"content":"Parse(String)","pos":[0,13]}]},{"content":"\\n&lt;p&gt;A string that represents retry condition header value information.&lt;/p&gt;\\n","pos":[11770,11847],"source":"\\n<p>A string that represents retry condition header value information.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;input&lt;/em&gt; is a &lt;strong&gt;null&lt;/strong&gt; reference.&lt;/p&gt;\\n","pos":[12322,12387],"source":"\\n<p>\\n<em>input</em> is a <strong>null</strong> reference.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;input&lt;/em&gt; is not valid retry condition header value information.&lt;/p&gt;\\n","pos":[12480,12562],"source":"\\n<p>\\n<em>input</em> is not valid retry condition header value information.</p>\\n"},{"pos":[12950,12960],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[14490,14537],"content":"TryParse(String, out RetryConditionHeaderValue)","needQuote":true,"nodes":[{"content":"TryParse(String, out RetryConditionHeaderValue)","pos":[0,47]}]},{"content":"\\n&lt;p&gt;The string to validate.&lt;/p&gt;\\n","pos":[15495,15529],"source":"\\n<p>The string to validate.</p>\\n"},{"pos":[16699,16722],"content":"System.Net.Http.Headers","needQuote":true,"nodes":[{"content":"System.Net.Http.Headers","pos":[0,23]}]},{"pos":[16904,16910],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17097,17119],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[17267,17273],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17340,17341],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17391,17397],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17458,17459]},{"pos":[17514,17520],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17580,17581],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17678,17684],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17751,17752],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17802,17808],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17869,17870]},{"pos":[17925,17931],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17991,17992],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18237,18268],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[18434,18449],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[18525,18526],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18576,18582],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18643,18644]},{"pos":[18699,18705],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18765,18766],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18872,18887],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[18963,18964],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19014,19020],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[19081,19082]},{"pos":[19137,19143],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19203,19204],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19430,19439],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[19532,19539],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[19607,19608],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19635,19636],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19705,19712],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[19780,19781],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19808,19809],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19984,20001],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[20110,20125],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[20201,20202],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20229,20230],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20307,20322],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[20398,20399],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20426,20427],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20572,20578],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[20717,20731],"content":"DateTimeOffset","needQuote":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[20902,20910],"content":"TimeSpan","needQuote":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[21098,21122],"content":"Nullable<DateTimeOffset>","needQuote":true,"nodes":[{"content":"Nullable&lt;DateTimeOffset&gt;","pos":[0,24],"source":"Nullable<DateTimeOffset>"}]},{"pos":[21322,21330],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[21392,21393],"content":"<","needQuote":true,"nodes":[]},{"pos":[21451,21465],"content":"DateTimeOffset","needQuote":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[21603,21611],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[21674,21677]},{"pos":[21742,21756],"content":"DateTimeOffset","needQuote":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[21824,21825],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22054,22065],"content":"Nullable<T>","needQuote":true,"nodes":[{"content":"Nullable&lt;T&gt;","pos":[0,11],"source":"Nullable<T>"}]},{"pos":[22212,22220],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[22261,22262],"content":"<","needQuote":true,"nodes":[]},{"pos":[22289,22290],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[22387,22395],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[22437,22440]},{"pos":[22474,22475],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[22502,22503],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22712,22730],"content":"Nullable<TimeSpan>","needQuote":true,"nodes":[{"content":"Nullable&lt;TimeSpan&gt;","pos":[0,18],"source":"Nullable<TimeSpan>"}]},{"pos":[22912,22920],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[22982,22983],"content":"<","needQuote":true,"nodes":[]},{"pos":[23035,23043],"content":"TimeSpan","needQuote":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[23175,23183],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[23246,23249]},{"pos":[23308,23316],"content":"TimeSpan","needQuote":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[23378,23379],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23614,23628],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[23747,23753],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[23820,23821],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23871,23877],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23937,23938],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24021,24027],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[24094,24095],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24145,24151],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24211,24212],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24385,24392],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[24558,24571],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[24672,24683],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[24755,24756],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24783,24784],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24857,24868],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[24940,24941],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24968,24969],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25129,25134],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[25276,25282],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[25480,25505],"content":"RetryConditionHeaderValue","needQuote":true,"nodes":[{"content":"RetryConditionHeaderValue","pos":[0,25]}]},{"pos":[25756,25766],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[25861,25869],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[25938,25939],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25966,25967],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26037,26045],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[26114,26115],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26142,26143],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26296,26317],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[26516,26531],"content":"FormatException","needQuote":true,"nodes":[{"content":"FormatException","pos":[0,15]}]}],"content":"items:\n- uid: System.Net.Http.Headers.RetryConditionHeaderValue\n  commentId: T:System.Net.Http.Headers.RetryConditionHeaderValue\n  id: RetryConditionHeaderValue\n  parent: System.Net.Http.Headers\n  children:\n  - System.Net.Http.Headers.RetryConditionHeaderValue.#ctor(System.DateTimeOffset)\n  - System.Net.Http.Headers.RetryConditionHeaderValue.#ctor(System.TimeSpan)\n  - System.Net.Http.Headers.RetryConditionHeaderValue.Date\n  - System.Net.Http.Headers.RetryConditionHeaderValue.Delta\n  - System.Net.Http.Headers.RetryConditionHeaderValue.Equals(System.Object)\n  - System.Net.Http.Headers.RetryConditionHeaderValue.GetHashCode\n  - System.Net.Http.Headers.RetryConditionHeaderValue.Parse(System.String)\n  - System.Net.Http.Headers.RetryConditionHeaderValue.ToString\n  - System.Net.Http.Headers.RetryConditionHeaderValue.TryParse(System.String,System.Net.Http.Headers.RetryConditionHeaderValue@)\n  langs:\n  - csharp\n  - vb\n  name: RetryConditionHeaderValue\n  fullName: System.Net.Http.Headers.RetryConditionHeaderValue\n  type: Class\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RetryConditionHeaderValue\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 541\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Represents a Retry-After header value which can either be a date/time or a timespan value.</p>\\n\"\n  syntax:\n    content: public class RetryConditionHeaderValue\n    content.vb: Public Class RetryConditionHeaderValue\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: RetryConditionHeaderValue\n- uid: System.Net.Http.Headers.RetryConditionHeaderValue.#ctor(System.DateTimeOffset)\n  commentId: M:System.Net.Http.Headers.RetryConditionHeaderValue.#ctor(System.DateTimeOffset)\n  id: '#ctor(System.DateTimeOffset)'\n  parent: System.Net.Http.Headers.RetryConditionHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: RetryConditionHeaderValue(DateTimeOffset)\n  fullName: System.Net.Http.Headers.RetryConditionHeaderValue.RetryConditionHeaderValue(System.DateTimeOffset)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 543\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.Http.Headers.RetryConditionHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public RetryConditionHeaderValue(DateTimeOffset date)\n    content.vb: Public Sub New(date As DateTimeOffset)\n    parameters:\n    - id: date\n      type: System.DateTimeOffset\n      description: \"\\n<p>The date and time offset used to initialize the new instance.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RetryConditionHeaderValue.RetryConditionHeaderValue(DateTimeOffset)\n- uid: System.Net.Http.Headers.RetryConditionHeaderValue.#ctor(System.TimeSpan)\n  commentId: M:System.Net.Http.Headers.RetryConditionHeaderValue.#ctor(System.TimeSpan)\n  id: '#ctor(System.TimeSpan)'\n  parent: System.Net.Http.Headers.RetryConditionHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: RetryConditionHeaderValue(TimeSpan)\n  fullName: System.Net.Http.Headers.RetryConditionHeaderValue.RetryConditionHeaderValue(System.TimeSpan)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 544\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.Http.Headers.RetryConditionHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public RetryConditionHeaderValue(TimeSpan delta)\n    content.vb: Public Sub New(delta As TimeSpan)\n    parameters:\n    - id: delta\n      type: System.TimeSpan\n      description: \"\\n<p>The delta, in seconds, used to initialize the new instance.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RetryConditionHeaderValue.RetryConditionHeaderValue(TimeSpan)\n- uid: System.Net.Http.Headers.RetryConditionHeaderValue.Date\n  commentId: P:System.Net.Http.Headers.RetryConditionHeaderValue.Date\n  id: Date\n  parent: System.Net.Http.Headers.RetryConditionHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: Date\n  fullName: System.Net.Http.Headers.RetryConditionHeaderValue.Date\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Date\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 545\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Gets the date and time offset from the <xref href=\\\"System.Net.Http.Headers.RetryConditionHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public DateTimeOffset? Date { get; }\n    content.vb: Public ReadOnly Property Date As DateTimeOffset?\n    parameters: []\n    return:\n      type: System.Nullable{System.DateTimeOffset}\n      description: \"\\n<p>Returns <xref href=\\\"System.DateTimeOffset\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The date and time offset from the <xref href=\\\"System.Net.Http.Headers.RetryConditionHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: RetryConditionHeaderValue.Date\n- uid: System.Net.Http.Headers.RetryConditionHeaderValue.Delta\n  commentId: P:System.Net.Http.Headers.RetryConditionHeaderValue.Delta\n  id: Delta\n  parent: System.Net.Http.Headers.RetryConditionHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: Delta\n  fullName: System.Net.Http.Headers.RetryConditionHeaderValue.Delta\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Delta\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 546\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Gets the delta in seconds from the <xref href=\\\"System.Net.Http.Headers.RetryConditionHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public TimeSpan? Delta { get; }\n    content.vb: Public ReadOnly Property Delta As TimeSpan?\n    parameters: []\n    return:\n      type: System.Nullable{System.TimeSpan}\n      description: \"\\n<p>Returns <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The delta in seconds from the <xref href=\\\"System.Net.Http.Headers.RetryConditionHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: RetryConditionHeaderValue.Delta\n- uid: System.Net.Http.Headers.RetryConditionHeaderValue.Equals(System.Object)\n  commentId: M:System.Net.Http.Headers.RetryConditionHeaderValue.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Net.Http.Headers.RetryConditionHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  fullName: System.Net.Http.Headers.RetryConditionHeaderValue.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equals\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 547\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Determines whether the specified <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is equal to the current <xref href=\\\"System.Net.Http.Headers.RetryConditionHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override bool Equals(object obj)\n    content.vb: Public Overrides Function Equals(obj As Object) As Boolean\n    parameters:\n    - id: obj\n      type: System.Object\n      description: \"\\n<p>The object to compare with the current object.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Returns <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>\\n<strong>true</strong> if the specified <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is equal to the current object; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.Object.Equals(System.Object)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: RetryConditionHeaderValue.Equals(Object)\n- uid: System.Net.Http.Headers.RetryConditionHeaderValue.GetHashCode\n  commentId: M:System.Net.Http.Headers.RetryConditionHeaderValue.GetHashCode\n  id: GetHashCode\n  parent: System.Net.Http.Headers.RetryConditionHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  fullName: System.Net.Http.Headers.RetryConditionHeaderValue.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetHashCode\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 548\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Serves as a hash function for an <xref href=\\\"System.Net.Http.Headers.RetryConditionHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override int GetHashCode()\n    content.vb: Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>Returns <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>A hash code for the current object.</p>\\n\"\n  overridden: System.Object.GetHashCode\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: RetryConditionHeaderValue.GetHashCode()\n- uid: System.Net.Http.Headers.RetryConditionHeaderValue.Parse(System.String)\n  commentId: M:System.Net.Http.Headers.RetryConditionHeaderValue.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.Net.Http.Headers.RetryConditionHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: Parse(String)\n  fullName: System.Net.Http.Headers.RetryConditionHeaderValue.Parse(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Parse\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 549\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Converts a string to an <xref href=\\\"System.Net.Http.Headers.RetryConditionHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  syntax:\n    content: public static RetryConditionHeaderValue Parse(string input)\n    content.vb: Public Shared Function Parse(input As String) As RetryConditionHeaderValue\n    parameters:\n    - id: input\n      type: System.String\n      description: \"\\n<p>A string that represents retry condition header value information.</p>\\n\"\n    return:\n      type: System.Net.Http.Headers.RetryConditionHeaderValue\n      description: \"\\n<p>Returns <xref href=\\\"System.Net.Http.Headers.RetryConditionHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>An <xref href=\\\"System.Net.Http.Headers.RetryConditionHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>input</em> is a <strong>null</strong> reference.</p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>\\n<em>input</em> is not valid retry condition header value information.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: RetryConditionHeaderValue.Parse(String)\n- uid: System.Net.Http.Headers.RetryConditionHeaderValue.ToString\n  commentId: M:System.Net.Http.Headers.RetryConditionHeaderValue.ToString\n  id: ToString\n  parent: System.Net.Http.Headers.RetryConditionHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.Net.Http.Headers.RetryConditionHeaderValue.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToString\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 550\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Returns a string that represents the current <xref href=\\\"System.Net.Http.Headers.RetryConditionHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override string ToString()\n    content.vb: Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>Returns <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>A string that represents the current object.</p>\\n\"\n  overridden: System.Object.ToString\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: RetryConditionHeaderValue.ToString()\n- uid: System.Net.Http.Headers.RetryConditionHeaderValue.TryParse(System.String,System.Net.Http.Headers.RetryConditionHeaderValue@)\n  commentId: M:System.Net.Http.Headers.RetryConditionHeaderValue.TryParse(System.String,System.Net.Http.Headers.RetryConditionHeaderValue@)\n  id: TryParse(System.String,System.Net.Http.Headers.RetryConditionHeaderValue@)\n  parent: System.Net.Http.Headers.RetryConditionHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: TryParse(String, out RetryConditionHeaderValue)\n  fullName: System.Net.Http.Headers.RetryConditionHeaderValue.TryParse(System.String, out System.Net.Http.Headers.RetryConditionHeaderValue)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TryParse\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 551\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Determines whether a string is valid <xref href=\\\"System.Net.Http.Headers.RetryConditionHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> information.</p>\\n\"\n  syntax:\n    content: public static bool TryParse(string input, out RetryConditionHeaderValue parsedValue)\n    content.vb: Public Shared Function TryParse(input As String, ByRef parsedValue As RetryConditionHeaderValue) As Boolean\n    parameters:\n    - id: input\n      type: System.String\n      description: \"\\n<p>The string to validate.</p>\\n\"\n    - id: parsedValue\n      type: System.Net.Http.Headers.RetryConditionHeaderValue\n      description: \"\\n<p>The <xref href=\\\"System.Net.Http.Headers.RetryConditionHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> version of the string.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Returns <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>\\n<strong>true</strong> if <em>input</em> is valid <xref href=\\\"System.Net.Http.Headers.RetryConditionHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> information; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Net.Http.Headers.RetryConditionHeaderValue.TryParse(System.String, ByRef System.Net.Http.Headers.RetryConditionHeaderValue)\n  name.vb: TryParse(String, ByRef RetryConditionHeaderValue)\n  nameWithType: RetryConditionHeaderValue.TryParse(String, out RetryConditionHeaderValue)\n  nameWithType.vb: RetryConditionHeaderValue.TryParse(String, ByRef RetryConditionHeaderValue)\nreferences:\n- uid: System.Net.Http.Headers\n  isExternal: false\n  name: System.Net.Http.Headers\n  fullName: System.Net.Http.Headers\n  commentId: N:System.Net.Http.Headers\n  nameWithType: System.Net.Http.Headers\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  fullName: System.DateTimeOffset\n  commentId: T:System.DateTimeOffset\n  nameWithType: DateTimeOffset\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  fullName: System.TimeSpan\n  commentId: T:System.TimeSpan\n  nameWithType: TimeSpan\n- uid: System.Nullable{System.DateTimeOffset}\n  parent: System\n  definition: System.Nullable`1\n  name: Nullable<DateTimeOffset>\n  fullName: System.Nullable<System.DateTimeOffset>\n  fullname.vb: System.Nullable(Of System.DateTimeOffset)\n  name.vb: Nullable(Of DateTimeOffset)\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.DateTimeOffset\n    name: DateTimeOffset\n    fullName: System.DateTimeOffset\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.DateTimeOffset\n    name: DateTimeOffset\n    fullName: System.DateTimeOffset\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: T:System.Nullable{System.DateTimeOffset}\n  nameWithType: Nullable<DateTimeOffset>\n  nameWithType.vb: Nullable(Of DateTimeOffset)\n- uid: System.Nullable`1\n  parent: System\n  isExternal: false\n  name: Nullable<T>\n  fullName: System.Nullable<T>\n  fullname.vb: System.Nullable(Of T)\n  name.vb: Nullable(Of T)\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Nullable`1\n  nameWithType: Nullable<T>\n  nameWithType.vb: Nullable(Of T)\n- uid: System.Nullable{System.TimeSpan}\n  parent: System\n  definition: System.Nullable`1\n  name: Nullable<TimeSpan>\n  fullName: System.Nullable<System.TimeSpan>\n  fullname.vb: System.Nullable(Of System.TimeSpan)\n  name.vb: Nullable(Of TimeSpan)\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.TimeSpan\n    name: TimeSpan\n    fullName: System.TimeSpan\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.TimeSpan\n    name: TimeSpan\n    fullName: System.TimeSpan\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: T:System.Nullable{System.TimeSpan}\n  nameWithType: Nullable<TimeSpan>\n  nameWithType.vb: Nullable(Of TimeSpan)\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Net.Http.Headers.RetryConditionHeaderValue\n  parent: System.Net.Http.Headers\n  isExternal: false\n  name: RetryConditionHeaderValue\n  fullName: System.Net.Http.Headers.RetryConditionHeaderValue\n  commentId: T:System.Net.Http.Headers.RetryConditionHeaderValue\n  nameWithType: RetryConditionHeaderValue\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.FormatException\n  parent: System\n  isExternal: false\n  name: FormatException\n  fullName: System.FormatException\n  nameWithType: FormatException\n  commentId: T:System.FormatException\n"}