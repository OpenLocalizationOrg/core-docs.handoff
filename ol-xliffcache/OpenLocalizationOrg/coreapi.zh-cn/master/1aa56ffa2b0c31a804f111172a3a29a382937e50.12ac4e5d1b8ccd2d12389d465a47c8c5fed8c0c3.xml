{"nodes":[{"pos":[797,854],"content":"SortedDictionary<TKey, TValue>.ValueCollection.Enumerator","needQuote":true,"nodes":[{"content":"SortedDictionary&lt;TKey, TValue&gt;.ValueCollection.Enumerator","pos":[0,57],"source":"SortedDictionary<TKey, TValue>.ValueCollection.Enumerator"}]},{"pos":[3977,3984],"content":"Current","needQuote":true,"nodes":[{"content":"Current","pos":[0,7]}]},{"pos":[6097,6116],"content":"IEnumerator.Current","needQuote":true,"nodes":[{"content":"IEnumerator.Current","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The element in the collection at the current position of the enumerator.&lt;/p&gt;\\n","pos":[7019,7102],"source":"\\n<p>The element in the collection at the current position of the enumerator.</p>\\n"},{"content":"\\n&lt;p&gt;The enumerator is positioned before the first element of the collection or after the last element.","pos":[7229,7332],"source":"\\n<p>The enumerator is positioned before the first element of the collection or after the last element."},{"content":"&lt;/p&gt;\\n","pos":[7333,7339],"source":" </p>\\n"},{"pos":[8589,8598],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[10077,10087],"content":"MoveNext()","needQuote":true,"nodes":[{"content":"MoveNext()","pos":[0,10]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the enumerator was successfully advanced to the next element; &lt;strong&gt;false&lt;/strong&gt; if the enumerator has passed the end of the collection.&lt;/p&gt;\\n","pos":[10941,11119],"source":"\\n<p>\\n<strong>true</strong> if the enumerator was successfully advanced to the next element; <strong>false</strong> if the enumerator has passed the end of the collection.</p>\\n"},{"content":"\\n&lt;p&gt;The collection was modified after the enumerator was created.","pos":[11246,11312],"source":"\\n<p>The collection was modified after the enumerator was created."},{"content":"&lt;/p&gt;\\n","pos":[11313,11319],"source":" </p>\\n"},{"pos":[12344,12363],"content":"IEnumerator.Reset()","needQuote":true,"nodes":[{"content":"IEnumerator.Reset()","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The collection was modified after the enumerator was created.","pos":[13299,13365],"source":"\\n<p>The collection was modified after the enumerator was created."},{"content":"&lt;/p&gt;\\n","pos":[13366,13372],"source":" </p>\\n"},{"pos":[14405,14431],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]},{"pos":[14712,14731],"content":"IEnumerator<TValue>","needQuote":true,"nodes":[{"content":"IEnumerator&lt;TValue&gt;","pos":[0,19],"source":"IEnumerator<TValue>"}]},{"pos":[14965,14976],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[15061,15062],"content":"<","needQuote":true,"nodes":[]},{"pos":[15089,15095],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[15220,15231],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"content":"(Of","pos":[15317,15320]},{"pos":[15354,15360],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[15392,15393],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15641,15652],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[15841,15852],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[16046,16060],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[16185,16191],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16240,16241],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16291,16297],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16357,16358],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16444,16450],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16499,16500],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16550,16556],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16616,16617],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16820,16833],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[16940,16951],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[17005,17006],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17033,17034],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17110,17121],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[17175,17176],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17203,17204],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17393,17403],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[17504,17512],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[17563,17564],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17591,17592],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17665,17673],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[17724,17725],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17752,17753],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17956,17978],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[18126,18132],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[18199,18200],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18250,18256],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18317,18318]},{"pos":[18373,18379],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18439,18440],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18537,18543],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[18610,18611],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18661,18667],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18728,18729]},{"pos":[18784,18790],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18850,18851],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19096,19127],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[19293,19308],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[19384,19385],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19435,19441],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[19502,19503]},{"pos":[19558,19564],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19624,19625],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19731,19746],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[19822,19823],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19873,19879],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[19940,19941]},{"pos":[19996,20002],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20062,20063],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20289,20298],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[20391,20398],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[20466,20467],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20494,20495],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20564,20571],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[20639,20640],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20667,20668],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20831,20845],"content":"IEnumerator<T>","needQuote":true,"nodes":[{"content":"IEnumerator&lt;T&gt;","pos":[0,14],"source":"IEnumerator<T>"}]},{"pos":[21064,21075],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[21139,21140],"content":"<","needQuote":true,"nodes":[]},{"pos":[21167,21168],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[21288,21299],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"content":"(Of","pos":[21364,21367]},{"pos":[21401,21402],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[21429,21430],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21625,21643],"content":"System.Collections","needQuote":true,"nodes":[{"content":"System.Collections","pos":[0,18]}]},{"pos":[21786,21792],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[21926,21935],"content":"ValueType","needQuote":true,"nodes":[{"content":"ValueType","pos":[0,9]}]},{"pos":[22089,22095],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22368,22375],"content":"Current","needQuote":true,"nodes":[{"content":"Current","pos":[0,7]}]},{"pos":[22723,22729],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[22879,22886],"content":"Current","needQuote":true,"nodes":[{"content":"Current","pos":[0,7]}]},{"pos":[23207,23213],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[23371,23378],"content":"Current","needQuote":true,"nodes":[{"content":"Current","pos":[0,7]}]},{"pos":[23611,23620],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[23723,23730],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[23782,23783],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23810,23811],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23885,23892],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[23944,23945],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23972,23973],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24186,24196],"content":"MoveNext()","needQuote":true,"nodes":[{"content":"MoveNext()","pos":[0,10]}]},{"pos":[24325,24333],"content":"MoveNext","needQuote":true,"nodes":[{"content":"MoveNext","pos":[0,8]}]},{"pos":[24398,24399],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24426,24427],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24514,24522],"content":"MoveNext","needQuote":true,"nodes":[{"content":"MoveNext","pos":[0,8]}]},{"pos":[24587,24588],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24615,24616],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24794,24801],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[24996,25003],"content":"Reset()","needQuote":true,"nodes":[{"content":"Reset()","pos":[0,7]}]},{"pos":[25126,25131],"content":"Reset","needQuote":true,"nodes":[{"content":"Reset","pos":[0,5]}]},{"pos":[25193,25194],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25221,25222],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25306,25311],"content":"Reset","needQuote":true,"nodes":[{"content":"Reset","pos":[0,5]}]},{"pos":[25373,25374],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25401,25402],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25592,25617],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]}],"content":"items:\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator\n  commentId: T:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator\n  id: SortedDictionary`2.ValueCollection.Enumerator\n  parent: System.Collections.Generic\n  children:\n  - System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.Current\n  - System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.Dispose\n  - System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.MoveNext\n  - System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Current\n  - System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Reset\n  langs:\n  - csharp\n  - vb\n  name: SortedDictionary<TKey, TValue>.ValueCollection.Enumerator\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.ValueCollection.Enumerator\n  type: Struct\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Enumerator\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 872\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Enumerates the elements of a <xref href=\\\"System.Collections.Generic.SortedDictionary`2.ValueCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: >-\n      [SuppressMessage(\"Microsoft.Performance\", \"CA1815:OverrideEqualsAndOperatorEqualsOnValueTypes\", Justification = \"not an expected scenario\")]\n\n      public struct Enumerator : IEnumerator<TValue>, IDisposable, IEnumerator\n    content.vb: >-\n      <SuppressMessage(\"Microsoft.Performance\", \"CA1815:OverrideEqualsAndOperatorEqualsOnValueTypes\", Justification:=\"not an expected scenario\")>\n\n      Public Structure Enumerator\n          Implements IEnumerator(Of TValue), IDisposable, IEnumerator\n  seealso:\n  - type: System.Collections.Generic.SortedDictionary`2.Enumerator\n    commentId: T:System.Collections.Generic.SortedDictionary`2.Enumerator\n  - type: System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator\n    commentId: T:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator\n  - type: System.Collections.Generic.IEnumerable`1\n    commentId: T:System.Collections.Generic.IEnumerable`1\n  - type: System.Collections.Generic.IEnumerator`1\n    commentId: T:System.Collections.Generic.IEnumerator`1\n  implements:\n  - System.Collections.Generic.IEnumerator{{TValue}}\n  - System.Collections.IEnumerator\n  - System.IDisposable\n  inheritedMembers:\n  - System.ValueType.Equals(System.Object)\n  - System.ValueType.GetHashCode\n  - System.ValueType.ToString\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  attributes:\n  - type: System.Runtime.InteropServices.StructLayoutAttribute\n    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)\n    arguments:\n    - type: System.Runtime.InteropServices.LayoutKind\n      value: 0\n  modifiers.csharp:\n  - public\n  - struct\n  modifiers.vb:\n  - Public\n  - Structure\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).ValueCollection.Enumerator\n  name.vb: SortedDictionary(Of TKey, TValue).ValueCollection.Enumerator\n  nameWithType: SortedDictionary<TKey, TValue>.ValueCollection.Enumerator\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).ValueCollection.Enumerator\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.Current\n  commentId: P:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.Current\n  id: Current\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator\n  langs:\n  - csharp\n  - vb\n  name: Current\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.ValueCollection.Enumerator.Current\n  type: Property\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Current\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 892\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Gets the element at the current position of the enumerator.</p>\\n\"\n  syntax:\n    content: public TValue Current { get; }\n    content.vb: Public ReadOnly Property Current As TValue\n    parameters: []\n    return:\n      type: '{TValue}'\n      description: \"\\n<p>The element in the <xref href=\\\"System.Collections.Generic.SortedDictionary`2.ValueCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> at the current position of the enumerator.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.MoveNext\n    commentId: M:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.MoveNext\n  - type: System.Collections.IEnumerator\n    commentId: T:System.Collections.IEnumerator\n  implements:\n  - System.Collections.Generic.IEnumerator{{TValue}}.Current\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).ValueCollection.Enumerator.Current\n  nameWithType: SortedDictionary<TKey, TValue>.ValueCollection.Enumerator.Current\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).ValueCollection.Enumerator.Current\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Current\n  commentId: P:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Current\n  id: System#Collections#IEnumerator#Current\n  isEii: true\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator\n  langs:\n  - csharp\n  - vb\n  name: IEnumerator.Current\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.ValueCollection.Enumerator.System.Collections.IEnumerator.Current\n  type: Property\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IEnumerator.Current\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 900\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Gets the element at the current position of the enumerator.</p>\\n\"\n  syntax:\n    content: object IEnumerator.Current { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.IEnumerator.Current As Object Implements IEnumerator.Current\n    parameters: []\n    return:\n      type: System.Object\n      description: \"\\n<p>The element in the collection at the current position of the enumerator.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The enumerator is positioned before the first element of the collection or after the last element. </p>\\n\"\n  seealso:\n  - type: System.Collections.IEnumerator.Current\n    commentId: P:System.Collections.IEnumerator.Current\n  - type: System.Collections.IEnumerator.MoveNext\n    commentId: M:System.Collections.IEnumerator.MoveNext\n  - type: System.Collections.IEnumerator.Reset\n    commentId: M:System.Collections.IEnumerator.Reset\n  - type: System.Collections.IEnumerator\n    commentId: T:System.Collections.IEnumerator\n  implements:\n  - System.Collections.IEnumerator.Current\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).ValueCollection.Enumerator.System.Collections.IEnumerator.Current\n  name.vb: System.Collections.IEnumerator.Current\n  nameWithType: SortedDictionary<TKey, TValue>.ValueCollection.Enumerator.IEnumerator.Current\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).ValueCollection.Enumerator.System.Collections.IEnumerator.Current\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.Dispose\n  commentId: M:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.Dispose\n  id: Dispose\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator\n  langs:\n  - csharp\n  - vb\n  name: Dispose()\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.ValueCollection.Enumerator.Dispose()\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Dispose\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 882\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Releases all resources used by the <xref href=\\\"System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void Dispose()\n    content.vb: Public Sub Dispose\n  implements:\n  - System.IDisposable.Dispose\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).ValueCollection.Enumerator.Dispose()\n  nameWithType: SortedDictionary<TKey, TValue>.ValueCollection.Enumerator.Dispose()\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).ValueCollection.Enumerator.Dispose()\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.MoveNext\n  commentId: M:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.MoveNext\n  id: MoveNext\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator\n  langs:\n  - csharp\n  - vb\n  name: MoveNext()\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.ValueCollection.Enumerator.MoveNext()\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MoveNext\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 887\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Advances the enumerator to the next element of the <xref href=\\\"System.Collections.Generic.SortedDictionary`2.ValueCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public bool MoveNext()\n    content.vb: Public Function MoveNext As Boolean\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the enumerator was successfully advanced to the next element; <strong>false</strong> if the enumerator has passed the end of the collection.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The collection was modified after the enumerator was created. </p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.Current\n    commentId: P:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.Current\n  implements:\n  - System.Collections.IEnumerator.MoveNext\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).ValueCollection.Enumerator.MoveNext()\n  nameWithType: SortedDictionary<TKey, TValue>.ValueCollection.Enumerator.MoveNext()\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).ValueCollection.Enumerator.MoveNext()\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Reset\n  commentId: M:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Reset\n  id: System#Collections#IEnumerator#Reset\n  isEii: true\n  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator\n  langs:\n  - csharp\n  - vb\n  name: IEnumerator.Reset()\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.ValueCollection.Enumerator.System.Collections.IEnumerator.Reset()\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IEnumerator.Reset\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 913\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Sets the enumerator to its initial position, which is before the first element in the collection.</p>\\n\"\n  syntax:\n    content: void IEnumerator.Reset()\n    content.vb: Sub System.Collections.IEnumerator.Reset Implements IEnumerator.Reset\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The collection was modified after the enumerator was created. </p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.Current\n    commentId: P:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.Current\n  - type: System.Collections.IEnumerator.MoveNext\n    commentId: M:System.Collections.IEnumerator.MoveNext\n  - type: System.Collections.IEnumerator.Reset\n    commentId: M:System.Collections.IEnumerator.Reset\n  - type: System.Collections.IEnumerator\n    commentId: T:System.Collections.IEnumerator\n  implements:\n  - System.Collections.IEnumerator.Reset\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).ValueCollection.Enumerator.System.Collections.IEnumerator.Reset()\n  name.vb: System.Collections.IEnumerator.Reset()\n  nameWithType: SortedDictionary<TKey, TValue>.ValueCollection.Enumerator.IEnumerator.Reset()\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).ValueCollection.Enumerator.System.Collections.IEnumerator.Reset()\nreferences:\n- uid: System.Collections.Generic\n  isExternal: false\n  name: System.Collections.Generic\n  fullName: System.Collections.Generic\n  nameWithType: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n- uid: System.Collections.Generic.IEnumerator{{TValue}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerator`1\n  name: IEnumerator<TValue>\n  fullName: System.Collections.Generic.IEnumerator<TValue>\n  fullname.vb: System.Collections.Generic.IEnumerator(Of TValue)\n  name.vb: IEnumerator(Of TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: IEnumerator<TValue>\n  nameWithType.vb: IEnumerator(Of TValue)\n  commentId: T:System.Collections.Generic.IEnumerator{`1}\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  fullName: System.Collections.IEnumerator\n  nameWithType: IEnumerator\n  commentId: T:System.Collections.IEnumerator\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  nameWithType: IDisposable\n  commentId: T:System.IDisposable\n- uid: System.ValueType.Equals(System.Object)\n  parent: System.ValueType\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.ValueType.Equals(System.Object)\n  spec.csharp:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ValueType.Equals(Object)\n  commentId: M:System.ValueType.Equals(System.Object)\n- uid: System.ValueType.GetHashCode\n  parent: System.ValueType\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.ValueType.GetHashCode()\n  spec.csharp:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.GetHashCode()\n  commentId: M:System.ValueType.GetHashCode\n- uid: System.ValueType.ToString\n  parent: System.ValueType\n  isExternal: false\n  name: ToString()\n  fullName: System.ValueType.ToString()\n  spec.csharp:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.ToString()\n  commentId: M:System.ValueType.ToString\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Collections.Generic.IEnumerator`1\n  isExternal: false\n  name: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n  fullname.vb: System.Collections.Generic.IEnumerator(Of T)\n  name.vb: IEnumerator(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IEnumerator<T>\n  nameWithType.vb: IEnumerator(Of T)\n  commentId: T:System.Collections.Generic.IEnumerator`1\n- uid: System.Collections\n  isExternal: false\n  name: System.Collections\n  fullName: System.Collections\n  nameWithType: System.Collections\n  commentId: N:System.Collections\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  fullName: System.ValueType\n  nameWithType: ValueType\n  commentId: T:System.ValueType\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Collections.Generic.IEnumerator{{TValue}}.Current\n  parent: System.Collections.Generic.IEnumerator{{TValue}}\n  definition: System.Collections.Generic.IEnumerator`1.Current\n  name: Current\n  fullName: System.Collections.Generic.IEnumerator<TValue>.Current\n  fullname.vb: System.Collections.Generic.IEnumerator(Of TValue).Current\n  nameWithType: IEnumerator<TValue>.Current\n  nameWithType.vb: IEnumerator(Of TValue).Current\n  commentId: P:System.Collections.Generic.IEnumerator{`1}.Current\n- uid: '{TValue}'\n  definition: TValue\n  name: TValue\n  fullName: TValue\n  nameWithType: TValue\n  commentId: '!:TValue'\n- uid: System.Collections.Generic.IEnumerator`1.Current\n  isExternal: true\n  name: Current\n  fullName: System.Collections.Generic.IEnumerator<T>.Current\n  fullname.vb: System.Collections.Generic.IEnumerator(Of T).Current\n  nameWithType: IEnumerator<T>.Current\n  nameWithType.vb: IEnumerator(Of T).Current\n  commentId: P:System.Collections.Generic.IEnumerator`1.Current\n- uid: TValue\n  isExternal: false\n  name: TValue\n  fullName: TValue\n  nameWithType: TValue\n- uid: System.Collections.IEnumerator.Current\n  parent: System.Collections.IEnumerator\n  isExternal: false\n  name: Current\n  fullName: System.Collections.IEnumerator.Current\n  nameWithType: IEnumerator.Current\n  commentId: P:System.Collections.IEnumerator.Current\n- uid: System.IDisposable.Dispose\n  parent: System.IDisposable\n  isExternal: false\n  name: Dispose()\n  fullName: System.IDisposable.Dispose()\n  spec.csharp:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IDisposable.Dispose()\n  commentId: M:System.IDisposable.Dispose\n- uid: System.Collections.IEnumerator.MoveNext\n  parent: System.Collections.IEnumerator\n  isExternal: false\n  name: MoveNext()\n  fullName: System.Collections.IEnumerator.MoveNext()\n  spec.csharp:\n  - uid: System.Collections.IEnumerator.MoveNext\n    name: MoveNext\n    fullName: System.Collections.IEnumerator.MoveNext\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IEnumerator.MoveNext\n    name: MoveNext\n    fullName: System.Collections.IEnumerator.MoveNext\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IEnumerator.MoveNext()\n  commentId: M:System.Collections.IEnumerator.MoveNext\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Collections.IEnumerator.Reset\n  parent: System.Collections.IEnumerator\n  isExternal: false\n  name: Reset()\n  fullName: System.Collections.IEnumerator.Reset()\n  spec.csharp:\n  - uid: System.Collections.IEnumerator.Reset\n    name: Reset\n    fullName: System.Collections.IEnumerator.Reset\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IEnumerator.Reset\n    name: Reset\n    fullName: System.Collections.IEnumerator.Reset\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IEnumerator.Reset()\n  commentId: M:System.Collections.IEnumerator.Reset\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n"}