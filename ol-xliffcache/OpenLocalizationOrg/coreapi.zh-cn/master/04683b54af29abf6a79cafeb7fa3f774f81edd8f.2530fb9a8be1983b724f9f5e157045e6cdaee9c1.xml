{"nodes":[{"pos":[3713,3721],"content":"TimeSpan","needQuote":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[5525,5533],"content":"MaxValue","needQuote":true,"nodes":[{"content":"MaxValue","pos":[0,8]}]},{"pos":[6608,6616],"content":"MinValue","needQuote":true,"nodes":[{"content":"MinValue","pos":[0,8]}]},{"pos":[7700,7711],"content":"TicksPerDay","needQuote":true,"nodes":[{"content":"TicksPerDay","pos":[0,11]}]},{"pos":[9005,9017],"content":"TicksPerHour","needQuote":true,"nodes":[{"content":"TicksPerHour","pos":[0,12]}]},{"pos":[10334,10353],"content":"TicksPerMillisecond","needQuote":true,"nodes":[{"content":"TicksPerMillisecond","pos":[0,19]}]},{"pos":[11671,11685],"content":"TicksPerMinute","needQuote":true,"nodes":[{"content":"TicksPerMinute","pos":[0,14]}]},{"pos":[12991,13005],"content":"TicksPerSecond","needQuote":true,"nodes":[{"content":"TicksPerSecond","pos":[0,14]}]},{"pos":[14255,14259],"content":"Zero","needQuote":true,"nodes":[{"content":"Zero","pos":[0,4]}]},{"pos":[15283,15312],"content":"TimeSpan(Int32, Int32, Int32)","needQuote":true,"nodes":[{"content":"TimeSpan(Int32, Int32, Int32)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;Number of hours.","pos":[16124,16145],"source":"\\n<p>Number of hours."},{"content":"&lt;/p&gt;\\n","pos":[16146,16152],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Number of minutes.","pos":[16217,16240],"source":"\\n<p>Number of minutes."},{"content":"&lt;/p&gt;\\n","pos":[16241,16247],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Number of seconds.","pos":[16312,16335],"source":"\\n<p>Number of seconds."},{"content":"&lt;/p&gt;\\n","pos":[16336,16342],"source":" </p>\\n"},{"pos":[17267,17303],"content":"TimeSpan(Int32, Int32, Int32, Int32)","needQuote":true,"nodes":[{"content":"TimeSpan(Int32, Int32, Int32, Int32)","pos":[0,36]}]},{"content":"\\n&lt;p&gt;Number of days.","pos":[18161,18181],"source":"\\n<p>Number of days."},{"content":"&lt;/p&gt;\\n","pos":[18182,18188],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Number of hours.","pos":[18251,18272],"source":"\\n<p>Number of hours."},{"content":"&lt;/p&gt;\\n","pos":[18273,18279],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Number of minutes.","pos":[18344,18367],"source":"\\n<p>Number of minutes."},{"content":"&lt;/p&gt;\\n","pos":[18368,18374],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Number of seconds.","pos":[18439,18462],"source":"\\n<p>Number of seconds."},{"content":"&lt;/p&gt;\\n","pos":[18463,18469],"source":" </p>\\n"},{"pos":[19440,19483],"content":"TimeSpan(Int32, Int32, Int32, Int32, Int32)","needQuote":true,"nodes":[{"content":"TimeSpan(Int32, Int32, Int32, Int32, Int32)","pos":[0,43]}]},{"content":"\\n&lt;p&gt;Number of days.","pos":[20412,20432],"source":"\\n<p>Number of days."},{"content":"&lt;/p&gt;\\n","pos":[20433,20439],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Number of hours.","pos":[20502,20523],"source":"\\n<p>Number of hours."},{"content":"&lt;/p&gt;\\n","pos":[20524,20530],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Number of minutes.","pos":[20595,20618],"source":"\\n<p>Number of minutes."},{"content":"&lt;/p&gt;\\n","pos":[20619,20625],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Number of seconds.","pos":[20690,20713],"source":"\\n<p>Number of seconds."},{"content":"&lt;/p&gt;\\n","pos":[20714,20720],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Number of milliseconds.","pos":[20790,20818],"source":"\\n<p>Number of milliseconds."},{"content":"&lt;/p&gt;\\n","pos":[20819,20825],"source":" </p>\\n"},{"pos":[21647,21662],"content":"TimeSpan(Int64)","needQuote":true,"nodes":[{"content":"TimeSpan(Int64)","pos":[0,15]}]},{"content":"\\n&lt;p&gt;A time period expressed in 100-nanosecond units.","pos":[22358,22411],"source":"\\n<p>A time period expressed in 100-nanosecond units."},{"content":"&lt;/p&gt;\\n","pos":[22412,22418],"source":" </p>\\n"},{"pos":[22737,22741],"content":"Days","needQuote":true,"nodes":[{"content":"Days","pos":[0,4]}]},{"content":"\\n&lt;p&gt;The day component of this instance.","pos":[23428,23468],"source":"\\n<p>The day component of this instance."},{"content":"The return value can be positive or negative.&lt;/p&gt;\\n","pos":[23469,23520],"source":" The return value can be positive or negative.</p>\\n"},{"pos":[24237,24242],"content":"Hours","needQuote":true,"nodes":[{"content":"Hours","pos":[0,5]}]},{"pos":[25849,25861],"content":"Milliseconds","needQuote":true,"nodes":[{"content":"Milliseconds","pos":[0,12]}]},{"pos":[27504,27511],"content":"Minutes","needQuote":true,"nodes":[{"content":"Minutes","pos":[0,7]}]},{"pos":[29117,29124],"content":"Seconds","needQuote":true,"nodes":[{"content":"Seconds","pos":[0,7]}]},{"pos":[30724,30729],"content":"Ticks","needQuote":true,"nodes":[{"content":"Ticks","pos":[0,5]}]},{"content":"\\n&lt;p&gt;The number of ticks contained in this instance.&lt;/p&gt;\\n","pos":[31410,31468],"source":"\\n<p>The number of ticks contained in this instance.</p>\\n"},{"pos":[32170,32179],"content":"TotalDays","needQuote":true,"nodes":[{"content":"TotalDays","pos":[0,9]}]},{"content":"\\n&lt;p&gt;The total number of days represented by this instance.&lt;/p&gt;\\n","pos":[32886,32951],"source":"\\n<p>The total number of days represented by this instance.</p>\\n"},{"pos":[33647,33657],"content":"TotalHours","needQuote":true,"nodes":[{"content":"TotalHours","pos":[0,10]}]},{"content":"\\n&lt;p&gt;The total number of hours represented by this instance.&lt;/p&gt;\\n","pos":[34369,34435],"source":"\\n<p>The total number of hours represented by this instance.</p>\\n"},{"pos":[35153,35170],"content":"TotalMilliseconds","needQuote":true,"nodes":[{"content":"TotalMilliseconds","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The total number of milliseconds represented by this instance.&lt;/p&gt;\\n","pos":[35917,35990],"source":"\\n<p>The total number of milliseconds represented by this instance.</p>\\n"},{"pos":[36700,36712],"content":"TotalMinutes","needQuote":true,"nodes":[{"content":"TotalMinutes","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The total number of minutes represented by this instance.&lt;/p&gt;\\n","pos":[37434,37502],"source":"\\n<p>The total number of minutes represented by this instance.</p>\\n"},{"pos":[38207,38219],"content":"TotalSeconds","needQuote":true,"nodes":[{"content":"TotalSeconds","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The total number of seconds represented by this instance.&lt;/p&gt;\\n","pos":[38941,39009],"source":"\\n<p>The total number of seconds represented by this instance.</p>\\n"},{"pos":[39738,39751],"content":"Add(TimeSpan)","needQuote":true,"nodes":[{"content":"Add(TimeSpan)","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The time interval to add.&lt;/p&gt;\\n","pos":[40547,40583],"source":"\\n<p>The time interval to add.</p>\\n"},{"content":"\\n&lt;p&gt;A new object that represents the value of this instance plus the value of &lt;em&gt;ts&lt;/em&gt;.&lt;/p&gt;\\n","pos":[40645,40742],"source":"\\n<p>A new object that represents the value of this instance plus the value of <em>ts</em>.</p>\\n"},{"pos":[41609,41636],"content":"Compare(TimeSpan, TimeSpan)","needQuote":true,"nodes":[{"content":"Compare(TimeSpan, TimeSpan)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;The first time interval to compare.","pos":[42481,42521],"source":"\\n<p>The first time interval to compare."},{"content":"&lt;/p&gt;\\n","pos":[42522,42528],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The second time interval to compare.","pos":[42591,42632],"source":"\\n<p>The second time interval to compare."},{"content":"&lt;/p&gt;\\n","pos":[42633,42639],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;One of the following values.&lt;/p&gt;\\n&lt;p&gt;Value &lt;/p&gt;\\n&lt;p&gt;Description &lt;/p&gt;\\n&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;-1 &lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;\\n&lt;em&gt;t1&lt;/em&gt; is shorter than &lt;em&gt;t2&lt;/em&gt;.","pos":[42698,42865],"source":"\\n<p>One of the following values.</p>\\n<p>Value </p>\\n<p>Description </p>\\n<table><tbody><tr><td>\\n<p>-1 </p>\\n</td><td>\\n<p>\\n<em>t1</em> is shorter than <em>t2</em>."},{"content":"&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;0 &lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;\\n&lt;em&gt;t1&lt;/em&gt; is equal to &lt;em&gt;t2&lt;/em&gt;.","pos":[42866,42955],"source":" </p>\\n</td></tr><tr><td>\\n<p>0 </p>\\n</td><td>\\n<p>\\n<em>t1</em> is equal to <em>t2</em>."},{"content":"&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;1 &lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;\\n&lt;em&gt;t1&lt;/em&gt; is longer than &lt;em&gt;t2&lt;/em&gt;.","pos":[42956,43048],"source":" </p>\\n</td></tr><tr><td>\\n<p>1 </p>\\n</td><td>\\n<p>\\n<em>t1</em> is longer than <em>t2</em>."},{"content":"&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\\n","pos":[43049,43083],"source":" </p>\\n</td></tr></tbody></table>\\n"},{"pos":[43643,43662],"content":"CompareTo(TimeSpan)","needQuote":true,"nodes":[{"content":"CompareTo(TimeSpan)","pos":[0,19]}]},{"content":"\\n&lt;p&gt;An object to compare to this instance.&lt;/p&gt;\\n","pos":[44557,44606],"source":"\\n<p>An object to compare to this instance.</p>\\n"},{"content":"\\n&lt;p&gt;A signed number indicating the relative values of this instance and &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\\n&lt;p&gt;Value &lt;/p&gt;\\n&lt;p&gt;Description &lt;/p&gt;\\n&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;A negative integer &lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;This instance is shorter than &lt;em&gt;value&lt;/em&gt;.","pos":[44665,44906],"source":"\\n<p>A signed number indicating the relative values of this instance and <em>value</em>.</p>\\n<p>Value </p>\\n<p>Description </p>\\n<table><tbody><tr><td>\\n<p>A negative integer </p>\\n</td><td>\\n<p>This instance is shorter than <em>value</em>."},{"content":"&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;Zero &lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;This instance is equal to &lt;em&gt;value&lt;/em&gt;.","pos":[44907,45002],"source":" </p>\\n</td></tr><tr><td>\\n<p>Zero </p>\\n</td><td>\\n<p>This instance is equal to <em>value</em>."},{"content":"&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;A positive integer &lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;This instance is longer than &lt;em&gt;value&lt;/em&gt;.","pos":[45003,45115],"source":" </p>\\n</td></tr><tr><td>\\n<p>A positive integer </p>\\n</td><td>\\n<p>This instance is longer than <em>value</em>."},{"content":"&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\\n","pos":[45116,45150],"source":" </p>\\n</td></tr></tbody></table>\\n"},{"pos":[45484,45494],"content":"Duration()","needQuote":true,"nodes":[{"content":"Duration()","pos":[0,10]}]},{"pos":[47001,47015],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;An object to compare with this instance.","pos":[47680,47725],"source":"\\n<p>An object to compare with this instance."},{"content":"&lt;/p&gt;\\n","pos":[47726,47732],"source":" </p>\\n"},{"pos":[48798,48814],"content":"Equals(TimeSpan)","needQuote":true,"nodes":[{"content":"Equals(TimeSpan)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;An object to compare with this instance.","pos":[49538,49583],"source":"\\n<p>An object to compare with this instance."},{"content":"&lt;/p&gt;\\n","pos":[49584,49590],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;obj&lt;/em&gt; represents the same time interval as this instance; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[49651,49788],"source":"\\n<p>\\n<strong>true</strong> if <em>obj</em> represents the same time interval as this instance; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[50435,50461],"content":"Equals(TimeSpan, TimeSpan)","needQuote":true,"nodes":[{"content":"Equals(TimeSpan, TimeSpan)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;The first time interval to compare.","pos":[51238,51278],"source":"\\n<p>The first time interval to compare."},{"content":"&lt;/p&gt;\\n","pos":[51279,51285],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The second time interval to compare.","pos":[51348,51389],"source":"\\n<p>The second time interval to compare."},{"content":"&lt;/p&gt;\\n","pos":[51390,51396],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the values of &lt;em&gt;t1&lt;/em&gt; and &lt;em&gt;t2&lt;/em&gt; are equal; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[51457,51582],"source":"\\n<p>\\n<strong>true</strong> if the values of <em>t1</em> and <em>t2</em> are equal; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[52227,52243],"content":"FromDays(Double)","needQuote":true,"nodes":[{"content":"FromDays(Double)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;A number of days, accurate to the nearest millisecond.","pos":[53029,53088],"source":"\\n<p>A number of days, accurate to the nearest millisecond."},{"content":"&lt;/p&gt;\\n","pos":[53089,53095],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An object that represents &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\\n","pos":[53157,53209],"source":"\\n<p>An object that represents <em>value</em>.</p>\\n"},{"pos":[54981,54998],"content":"FromHours(Double)","needQuote":true,"nodes":[{"content":"FromHours(Double)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;A number of hours accurate to the nearest millisecond.","pos":[55789,55848],"source":"\\n<p>A number of hours accurate to the nearest millisecond."},{"content":"&lt;/p&gt;\\n","pos":[55849,55855],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An object that represents &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\\n","pos":[55917,55969],"source":"\\n<p>An object that represents <em>value</em>.</p>\\n"},{"pos":[57761,57785],"content":"FromMilliseconds(Double)","needQuote":true,"nodes":[{"content":"FromMilliseconds(Double)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;A number of milliseconds.","pos":[58547,58577],"source":"\\n<p>A number of milliseconds."},{"content":"&lt;/p&gt;\\n","pos":[58578,58584],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An object that represents &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\\n","pos":[58646,58698],"source":"\\n<p>An object that represents <em>value</em>.</p>\\n"},{"pos":[60467,60486],"content":"FromMinutes(Double)","needQuote":true,"nodes":[{"content":"FromMinutes(Double)","pos":[0,19]}]},{"content":"\\n&lt;p&gt;A number of minutes, accurate to the nearest millisecond.","pos":[61287,61349],"source":"\\n<p>A number of minutes, accurate to the nearest millisecond."},{"content":"&lt;/p&gt;\\n","pos":[61350,61356],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An object that represents &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\\n","pos":[61418,61470],"source":"\\n<p>An object that represents <em>value</em>.</p>\\n"},{"pos":[63244,63263],"content":"FromSeconds(Double)","needQuote":true,"nodes":[{"content":"FromSeconds(Double)","pos":[0,19]}]},{"content":"\\n&lt;p&gt;A number of seconds, accurate to the nearest millisecond.","pos":[64064,64126],"source":"\\n<p>A number of seconds, accurate to the nearest millisecond."},{"content":"&lt;/p&gt;\\n","pos":[64127,64133],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An object that represents &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\\n","pos":[64195,64247],"source":"\\n<p>An object that represents <em>value</em>.</p>\\n"},{"pos":[66012,66028],"content":"FromTicks(Int64)","needQuote":true,"nodes":[{"content":"FromTicks(Int64)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;A number of ticks that represent a time.","pos":[66784,66829],"source":"\\n<p>A number of ticks that represent a time."},{"content":"&lt;/p&gt;\\n","pos":[66830,66836],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An object that represents &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\\n","pos":[66898,66950],"source":"\\n<p>An object that represents <em>value</em>.</p>\\n"},{"pos":[67860,67873],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"content":"\\n&lt;p&gt;A 32-bit signed integer hash code.&lt;/p&gt;\\n","pos":[68452,68497],"source":"\\n<p>A 32-bit signed integer hash code.</p>\\n"},{"pos":[68808,68816],"content":"Negate()","needQuote":true,"nodes":[{"content":"Negate()","pos":[0,8]}]},{"content":"\\n&lt;p&gt;A new object with the same numeric value as this instance, but with the opposite sign.&lt;/p&gt;\\n","pos":[69474,69571],"source":"\\n<p>A new object with the same numeric value as this instance, but with the opposite sign.</p>\\n"},{"pos":[70307,70335],"content":"Addition(TimeSpan, TimeSpan)","needQuote":true,"nodes":[{"content":"Addition(TimeSpan, TimeSpan)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The first time interval to add.","pos":[71078,71114],"source":"\\n<p>The first time interval to add."},{"content":"&lt;/p&gt;\\n","pos":[71115,71121],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The second time interval to add.&lt;/p&gt;\\n","pos":[71184,71227],"source":"\\n<p>The second time interval to add.</p>\\n"},{"content":"\\n&lt;p&gt;An object whose value is the sum of the values of &lt;em&gt;t1&lt;/em&gt; and &lt;em&gt;t2&lt;/em&gt;.&lt;/p&gt;\\n","pos":[71289,71378],"source":"\\n<p>An object whose value is the sum of the values of <em>t1</em> and <em>t2</em>.</p>\\n"},{"pos":[72294,72322],"content":"Equality(TimeSpan, TimeSpan)","needQuote":true,"nodes":[{"content":"Equality(TimeSpan, TimeSpan)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The first time interval to compare.","pos":[73074,73114],"source":"\\n<p>The first time interval to compare."},{"content":"&lt;/p&gt;\\n","pos":[73115,73121],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The second time interval to compare.","pos":[73184,73225],"source":"\\n<p>The second time interval to compare."},{"content":"&lt;/p&gt;\\n","pos":[73226,73232],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the values of &lt;em&gt;t1&lt;/em&gt; and &lt;em&gt;t2&lt;/em&gt; are equal; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[73293,73418],"source":"\\n<p>\\n<strong>true</strong> if the values of <em>t1</em> and <em>t2</em> are equal; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[74183,74214],"content":"GreaterThan(TimeSpan, TimeSpan)","needQuote":true,"nodes":[{"content":"GreaterThan(TimeSpan, TimeSpan)","pos":[0,31]}]},{"content":"\\n&lt;p&gt;The first time interval to compare.","pos":[75067,75107],"source":"\\n<p>The first time interval to compare."},{"content":"&lt;/p&gt;\\n","pos":[75108,75114],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The second time interval to compare.","pos":[75177,75218],"source":"\\n<p>The second time interval to compare."},{"content":"&lt;/p&gt;\\n","pos":[75219,75225],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the value of &lt;em&gt;t1&lt;/em&gt; is greater than the value of &lt;em&gt;t2&lt;/em&gt;; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[75286,75425],"source":"\\n<p>\\n<strong>true</strong> if the value of <em>t1</em> is greater than the value of <em>t2</em>; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[76111,76149],"content":"GreaterThanOrEqual(TimeSpan, TimeSpan)","needQuote":true,"nodes":[{"content":"GreaterThanOrEqual(TimeSpan, TimeSpan)","pos":[0,38]}]},{"content":"\\n&lt;p&gt;The first time interval to compare.&lt;/p&gt;\\n","pos":[77032,77078],"source":"\\n<p>The first time interval to compare.</p>\\n"},{"content":"\\n&lt;p&gt;The second time interval to compare.&lt;/p&gt;\\n","pos":[77141,77188],"source":"\\n<p>The second time interval to compare.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the value of &lt;em&gt;t1&lt;/em&gt; is greater than or equal to the value of &lt;em&gt;t2&lt;/em&gt;; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[77249,77400],"source":"\\n<p>\\n<strong>true</strong> if the value of <em>t1</em> is greater than or equal to the value of <em>t2</em>; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[78069,78099],"content":"Inequality(TimeSpan, TimeSpan)","needQuote":true,"nodes":[{"content":"Inequality(TimeSpan, TimeSpan)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;The first time interval to compare.&lt;/p&gt;\\n","pos":[78860,78906],"source":"\\n<p>The first time interval to compare.</p>\\n"},{"content":"\\n&lt;p&gt;The second time interval to compare.&lt;/p&gt;\\n","pos":[78969,79016],"source":"\\n<p>The second time interval to compare.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the values of &lt;em&gt;t1&lt;/em&gt; and &lt;em&gt;t2&lt;/em&gt; are not equal; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[79077,79206],"source":"\\n<p>\\n<strong>true</strong> if the values of <em>t1</em> and <em>t2</em> are not equal; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[79861,79889],"content":"LessThan(TimeSpan, TimeSpan)","needQuote":true,"nodes":[{"content":"LessThan(TimeSpan, TimeSpan)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The first time interval to compare.&lt;/p&gt;\\n","pos":[80735,80781],"source":"\\n<p>The first time interval to compare.</p>\\n"},{"content":"\\n&lt;p&gt;The second time interval to compare.","pos":[80844,80885],"source":"\\n<p>The second time interval to compare."},{"content":"&lt;/p&gt;\\n","pos":[80886,80892],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the value of &lt;em&gt;t1&lt;/em&gt; is less than the value of &lt;em&gt;t2&lt;/em&gt;; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[80953,81089],"source":"\\n<p>\\n<strong>true</strong> if the value of <em>t1</em> is less than the value of <em>t2</em>; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[81763,81798],"content":"LessThanOrEqual(TimeSpan, TimeSpan)","needQuote":true,"nodes":[{"content":"LessThanOrEqual(TimeSpan, TimeSpan)","pos":[0,35]}]},{"content":"\\n&lt;p&gt;The first time interval to compare.","pos":[82672,82712],"source":"\\n<p>The first time interval to compare."},{"content":"&lt;/p&gt;\\n","pos":[82713,82719],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The second time interval to compare.","pos":[82782,82823],"source":"\\n<p>The second time interval to compare."},{"content":"&lt;/p&gt;\\n","pos":[82824,82830],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the value of &lt;em&gt;t1&lt;/em&gt; is less than or equal to the value of &lt;em&gt;t2&lt;/em&gt;; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[82891,83039],"source":"\\n<p>\\n<strong>true</strong> if the value of <em>t1</em> is less than or equal to the value of <em>t2</em>; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[83708,83739],"content":"Subtraction(TimeSpan, TimeSpan)","needQuote":true,"nodes":[{"content":"Subtraction(TimeSpan, TimeSpan)","pos":[0,31]}]},{"content":"\\n&lt;p&gt;The minuend.","pos":[84580,84597],"source":"\\n<p>The minuend."},{"content":"&lt;/p&gt;\\n","pos":[84598,84604],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The subtrahend.","pos":[84667,84687],"source":"\\n<p>The subtrahend."},{"content":"&lt;/p&gt;\\n","pos":[84688,84694],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An object whose value is the result of the value of &lt;em&gt;t1&lt;/em&gt; minus the value of &lt;em&gt;t2&lt;/em&gt;.&lt;/p&gt;\\n","pos":[84756,84862],"source":"\\n<p>An object whose value is the result of the value of <em>t1</em> minus the value of <em>t2</em>.</p>\\n"},{"pos":[85563,85586],"content":"UnaryNegation(TimeSpan)","needQuote":true,"nodes":[{"content":"UnaryNegation(TimeSpan)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The time interval to be negated.","pos":[86330,86367],"source":"\\n<p>The time interval to be negated."},{"content":"&lt;/p&gt;\\n","pos":[86368,86374],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An object that has the same numeric value as this instance, but the opposite sign.&lt;/p&gt;\\n","pos":[86436,86529],"source":"\\n<p>An object that has the same numeric value as this instance, but the opposite sign.</p>\\n"},{"pos":[87257,87276],"content":"UnaryPlus(TimeSpan)","needQuote":true,"nodes":[{"content":"UnaryPlus(TimeSpan)","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The time interval to return.","pos":[87977,88010],"source":"\\n<p>The time interval to return."},{"content":"&lt;/p&gt;\\n","pos":[88011,88017],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The time interval specified by &lt;em&gt;t&lt;/em&gt;.&lt;/p&gt;\\n","pos":[88079,88132],"source":"\\n<p>The time interval specified by <em>t</em>.</p>\\n"},{"pos":[88443,88456],"content":"Parse(String)","needQuote":true,"nodes":[{"content":"Parse(String)","pos":[0,13]}]},{"content":"\\n&lt;p&gt;A string that specifies the time interval to convert.","pos":[89174,89232],"source":"\\n<p>A string that specifies the time interval to convert."},{"content":"&lt;/p&gt;\\n","pos":[89233,89239],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A time interval that corresponds to &lt;em&gt;s&lt;/em&gt;.&lt;/p&gt;\\n","pos":[89301,89359],"source":"\\n<p>A time interval that corresponds to <em>s</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;s&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[89478,89521],"source":"\\n<p>\\n<em>s</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[89522,89528],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;s&lt;/em&gt; has an invalid format.","pos":[89621,89661],"source":"\\n<p>\\n<em>s</em> has an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[89662,89668],"source":" </p>\\n"},{"pos":[90502,90532],"content":"Parse(String, IFormatProvider)","needQuote":true,"nodes":[{"content":"Parse(String, IFormatProvider)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;A string that specifies the time interval to convert.&lt;/p&gt;\\n","pos":[91411,91475],"source":"\\n<p>A string that specifies the time interval to convert.</p>\\n"},{"content":"\\n&lt;p&gt;An object that supplies culture-specific formatting information.&lt;/p&gt;\\n","pos":[91557,91632],"source":"\\n<p>An object that supplies culture-specific formatting information.</p>\\n"},{"content":"\\n&lt;p&gt;A time interval that corresponds to &lt;em&gt;input&lt;/em&gt;, as specified by &lt;em&gt;formatProvider&lt;/em&gt;.&lt;/p&gt;\\n","pos":[91694,91797],"source":"\\n<p>A time interval that corresponds to <em>input</em>, as specified by <em>formatProvider</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;input&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[91916,91963],"source":"\\n<p>\\n<em>input</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[91964,91970],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;input&lt;/em&gt; has an invalid format.","pos":[92063,92107],"source":"\\n<p>\\n<em>input</em> has an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[92108,92114],"source":" </p>\\n"},{"pos":[93044,93087],"content":"ParseExact(String, String, IFormatProvider)","needQuote":true,"nodes":[{"content":"ParseExact(String, String, IFormatProvider)","pos":[0,43]}]},{"content":"\\n&lt;p&gt;A string that specifies the time interval to convert.&lt;/p&gt;\\n","pos":[94126,94190],"source":"\\n<p>A string that specifies the time interval to convert.</p>\\n"},{"content":"\\n&lt;p&gt;A standard or custom format string that defines the required format of &lt;em&gt;input&lt;/em&gt;.&lt;/p&gt;\\n","pos":[94255,94352],"source":"\\n<p>A standard or custom format string that defines the required format of <em>input</em>.</p>\\n"},{"content":"\\n&lt;p&gt;An object that provides culture-specific formatting information.&lt;/p&gt;\\n","pos":[94434,94509],"source":"\\n<p>An object that provides culture-specific formatting information.</p>\\n"},{"content":"\\n&lt;p&gt;A time interval that corresponds to &lt;em&gt;input&lt;/em&gt;, as specified by &lt;em&gt;format&lt;/em&gt; and &lt;em&gt;formatProvider&lt;/em&gt;.&lt;/p&gt;\\n","pos":[94571,94694],"source":"\\n<p>A time interval that corresponds to <em>input</em>, as specified by <em>format</em> and <em>formatProvider</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;input&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[94813,94860],"source":"\\n<p>\\n<em>input</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[94861,94867],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;input&lt;/em&gt; has an invalid format.","pos":[94960,95004],"source":"\\n<p>\\n<em>input</em> has an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[95005,95011],"source":" </p>\\n"},{"pos":[96062,96121],"content":"ParseExact(String, String, IFormatProvider, TimeSpanStyles)","needQuote":true,"nodes":[{"content":"ParseExact(String, String, IFormatProvider, TimeSpanStyles)","pos":[0,59]}]},{"content":"\\n&lt;p&gt;A string that specifies the time interval to convert.&lt;/p&gt;\\n","pos":[97255,97319],"source":"\\n<p>A string that specifies the time interval to convert.</p>\\n"},{"content":"\\n&lt;p&gt;A standard or custom format string that defines the required format of &lt;em&gt;input&lt;/em&gt;.&lt;/p&gt;\\n","pos":[97384,97481],"source":"\\n<p>A standard or custom format string that defines the required format of <em>input</em>.</p>\\n"},{"content":"\\n&lt;p&gt;An object that provides culture-specific formatting information.&lt;/p&gt;\\n","pos":[97563,97638],"source":"\\n<p>An object that provides culture-specific formatting information.</p>\\n"},{"content":"\\n&lt;p&gt;A bitwise combination of enumeration values that defines the style elements that may be present in &lt;em&gt;input&lt;/em&gt;.&lt;/p&gt;\\n","pos":[97725,97850],"source":"\\n<p>A bitwise combination of enumeration values that defines the style elements that may be present in <em>input</em>.</p>\\n"},{"content":"\\n&lt;p&gt;A time interval that corresponds to &lt;em&gt;input&lt;/em&gt;, as specified by &lt;em&gt;format&lt;/em&gt;, &lt;em&gt;formatProvider&lt;/em&gt;, and &lt;em&gt;styles&lt;/em&gt;.&lt;/p&gt;\\n","pos":[97912,98053],"source":"\\n<p>A time interval that corresponds to <em>input</em>, as specified by <em>format</em>, <em>formatProvider</em>, and <em>styles</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;input&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[98414,98461],"source":"\\n<p>\\n<em>input</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[98462,98468],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;input&lt;/em&gt; has an invalid format.","pos":[98561,98605],"source":"\\n<p>\\n<em>input</em> has an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[98606,98612],"source":" </p>\\n"},{"pos":[99577,99622],"content":"ParseExact(String, String[], IFormatProvider)","needQuote":true,"nodes":[{"content":"ParseExact(String, String[], IFormatProvider)","pos":[0,45]}]},{"content":"\\n&lt;p&gt;A string that specifies the time interval to convert.&lt;/p&gt;\\n","pos":[100694,100758],"source":"\\n<p>A string that specifies the time interval to convert.</p>\\n"},{"content":"\\n&lt;p&gt;A array of standard or custom format strings that defines the required format of &lt;em&gt;input&lt;/em&gt;.&lt;/p&gt;\\n","pos":[100826,100933],"source":"\\n<p>A array of standard or custom format strings that defines the required format of <em>input</em>.</p>\\n"},{"content":"\\n&lt;p&gt;An object that provides culture-specific formatting information.&lt;/p&gt;\\n","pos":[101015,101090],"source":"\\n<p>An object that provides culture-specific formatting information.</p>\\n"},{"content":"\\n&lt;p&gt;A time interval that corresponds to &lt;em&gt;input&lt;/em&gt;, as specified by &lt;em&gt;formats&lt;/em&gt; and &lt;em&gt;formatProvider&lt;/em&gt;.&lt;/p&gt;\\n","pos":[101152,101276],"source":"\\n<p>A time interval that corresponds to <em>input</em>, as specified by <em>formats</em> and <em>formatProvider</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;input&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[101395,101442],"source":"\\n<p>\\n<em>input</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[101443,101449],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;input&lt;/em&gt; has an invalid format.","pos":[101542,101586],"source":"\\n<p>\\n<em>input</em> has an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[101587,101593],"source":" </p>\\n"},{"pos":[103121,103182],"content":"ParseExact(String, String[], IFormatProvider, TimeSpanStyles)","needQuote":true,"nodes":[{"content":"ParseExact(String, String[], IFormatProvider, TimeSpanStyles)","pos":[0,61]}]},{"content":"\\n&lt;p&gt;A string that specifies the time interval to convert.&lt;/p&gt;\\n","pos":[104334,104398],"source":"\\n<p>A string that specifies the time interval to convert.</p>\\n"},{"content":"\\n&lt;p&gt;A array of standard or custom format strings that define the required format of &lt;em&gt;input&lt;/em&gt;.&lt;/p&gt;\\n","pos":[104466,104572],"source":"\\n<p>A array of standard or custom format strings that define the required format of <em>input</em>.</p>\\n"},{"content":"\\n&lt;p&gt;An object that provides culture-specific formatting information.&lt;/p&gt;\\n","pos":[104654,104729],"source":"\\n<p>An object that provides culture-specific formatting information.</p>\\n"},{"content":"\\n&lt;p&gt;A bitwise combination of enumeration values that defines the style elements that may be present in input.&lt;/p&gt;\\n","pos":[104816,104932],"source":"\\n<p>A bitwise combination of enumeration values that defines the style elements that may be present in input.</p>\\n"},{"content":"\\n&lt;p&gt;A time interval that corresponds to &lt;em&gt;input&lt;/em&gt;, as specified by &lt;em&gt;formats&lt;/em&gt;, &lt;em&gt;formatProvider&lt;/em&gt;, and &lt;em&gt;styles&lt;/em&gt;.&lt;/p&gt;\\n","pos":[104994,105136],"source":"\\n<p>A time interval that corresponds to <em>input</em>, as specified by <em>formats</em>, <em>formatProvider</em>, and <em>styles</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;input&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[105497,105544],"source":"\\n<p>\\n<em>input</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[105545,105551],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;input&lt;/em&gt; has an invalid format.","pos":[105644,105688],"source":"\\n<p>\\n<em>input</em> has an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[105689,105695],"source":" </p>\\n"},{"pos":[106843,106861],"content":"Subtract(TimeSpan)","needQuote":true,"nodes":[{"content":"Subtract(TimeSpan)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The time interval to be subtracted.","pos":[107689,107729],"source":"\\n<p>The time interval to be subtracted."},{"content":"&lt;/p&gt;\\n","pos":[107730,107736],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A new time interval whose value is the result of the value of this instance minus the value of &lt;em&gt;ts&lt;/em&gt;.&lt;/p&gt;\\n","pos":[107798,107916],"source":"\\n<p>A new time interval whose value is the result of the value of this instance minus the value of <em>ts</em>.</p>\\n"},{"pos":[108748,108777],"content":"IComparable.CompareTo(Object)","needQuote":true,"nodes":[{"content":"IComparable.CompareTo(Object)","pos":[0,29]}]},{"pos":[109822,109832],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[111320,111336],"content":"ToString(String)","needQuote":true,"nodes":[{"content":"ToString(String)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The &lt;em&gt;format&lt;/em&gt; parameter is not recognized or is not supported.&lt;/p&gt;\\n","pos":[112581,112660],"source":"\\n<p>The <em>format</em> parameter is not recognized or is not supported.</p>\\n"},{"pos":[113024,113057],"content":"ToString(String, IFormatProvider)","needQuote":true,"nodes":[{"content":"ToString(String, IFormatProvider)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;An object that supplies culture-specific formatting information.&lt;/p&gt;\\n","pos":[114161,114236],"source":"\\n<p>An object that supplies culture-specific formatting information.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;format&lt;/em&gt; parameter is not recognized or is not supported.&lt;/p&gt;\\n","pos":[114598,114677],"source":"\\n<p>The <em>format</em> parameter is not recognized or is not supported.</p>\\n"},{"pos":[115194,115241],"content":"TryParse(String, IFormatProvider, out TimeSpan)","needQuote":true,"nodes":[{"content":"TryParse(String, IFormatProvider, out TimeSpan)","pos":[0,47]}]},{"content":"\\n&lt;p&gt;A string that specifies the time interval to convert.&lt;/p&gt;\\n","pos":[116268,116332],"source":"\\n<p>A string that specifies the time interval to convert.</p>\\n"},{"content":"\\n&lt;p&gt;An object that supplies culture-specific formatting information.&lt;/p&gt;\\n","pos":[116414,116489],"source":"\\n<p>An object that supplies culture-specific formatting information.</p>\\n"},{"pos":[118170,118200],"content":"TryParse(String, out TimeSpan)","needQuote":true,"nodes":[{"content":"TryParse(String, out TimeSpan)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;A string that specifies the time interval to convert.&lt;/p&gt;\\n","pos":[119060,119124],"source":"\\n<p>A string that specifies the time interval to convert.</p>\\n"},{"pos":[120952,121028],"content":"TryParseExact(String, String, IFormatProvider, TimeSpanStyles, out TimeSpan)","needQuote":true,"nodes":[{"content":"TryParseExact(String, String, IFormatProvider, TimeSpanStyles, out TimeSpan)","pos":[0,76]}]},{"content":"\\n&lt;p&gt;A string that specifies the time interval to convert.&lt;/p&gt;\\n","pos":[122307,122371],"source":"\\n<p>A string that specifies the time interval to convert.</p>\\n"},{"content":"\\n&lt;p&gt;A standard or custom format string that defines the required format of &lt;em&gt;input&lt;/em&gt;.&lt;/p&gt;\\n","pos":[122436,122533],"source":"\\n<p>A standard or custom format string that defines the required format of <em>input</em>.</p>\\n"},{"content":"\\n&lt;p&gt;An object that provides culture-specific formatting information.&lt;/p&gt;\\n","pos":[122615,122690],"source":"\\n<p>An object that provides culture-specific formatting information.</p>\\n"},{"content":"\\n&lt;p&gt;One or more enumeration values that indicate the style of &lt;em&gt;input&lt;/em&gt;.&lt;/p&gt;\\n","pos":[122777,122861],"source":"\\n<p>One or more enumeration values that indicate the style of <em>input</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;input&lt;/em&gt; was converted successfully; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[123257,123372],"source":"\\n<p>\\n<strong>true</strong> if <em>input</em> was converted successfully; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[124282,124342],"content":"TryParseExact(String, String, IFormatProvider, out TimeSpan)","needQuote":true,"nodes":[{"content":"TryParseExact(String, String, IFormatProvider, out TimeSpan)","pos":[0,60]}]},{"content":"\\n&lt;p&gt;A string that specifies the time interval to convert.&lt;/p&gt;\\n","pos":[125526,125590],"source":"\\n<p>A string that specifies the time interval to convert.</p>\\n"},{"content":"\\n&lt;p&gt;A standard or custom format string that defines the required format of &lt;em&gt;input&lt;/em&gt;.&lt;/p&gt;\\n","pos":[125655,125752],"source":"\\n<p>A standard or custom format string that defines the required format of <em>input</em>.</p>\\n"},{"content":"\\n&lt;p&gt;An object that supplies culture-specific formatting information.&lt;/p&gt;\\n","pos":[125834,125909],"source":"\\n<p>An object that supplies culture-specific formatting information.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;input&lt;/em&gt; was converted successfully; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[126305,126420],"source":"\\n<p>\\n<strong>true</strong> if <em>input</em> was converted successfully; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[127359,127437],"content":"TryParseExact(String, String[], IFormatProvider, TimeSpanStyles, out TimeSpan)","needQuote":true,"nodes":[{"content":"TryParseExact(String, String[], IFormatProvider, TimeSpanStyles, out TimeSpan)","pos":[0,78]}]},{"content":"\\n&lt;p&gt;A string that specifies the time interval to convert.&lt;/p&gt;\\n","pos":[128743,128807],"source":"\\n<p>A string that specifies the time interval to convert.</p>\\n"},{"content":"\\n&lt;p&gt;A array of standard or custom format strings that define the acceptable formats of &lt;em&gt;input&lt;/em&gt;.&lt;/p&gt;\\n","pos":[128875,128984],"source":"\\n<p>A array of standard or custom format strings that define the acceptable formats of <em>input</em>.</p>\\n"},{"content":"\\n&lt;p&gt;An object that supplies culture-specific formatting information.&lt;/p&gt;\\n","pos":[129066,129141],"source":"\\n<p>An object that supplies culture-specific formatting information.</p>\\n"},{"content":"\\n&lt;p&gt;One or more enumeration values that indicate the style of &lt;em&gt;input&lt;/em&gt;.&lt;/p&gt;\\n","pos":[129228,129312],"source":"\\n<p>One or more enumeration values that indicate the style of <em>input</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;input&lt;/em&gt; was converted successfully; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[129708,129823],"source":"\\n<p>\\n<strong>true</strong> if <em>input</em> was converted successfully; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[130747,130809],"content":"TryParseExact(String, String[], IFormatProvider, out TimeSpan)","needQuote":true,"nodes":[{"content":"TryParseExact(String, String[], IFormatProvider, out TimeSpan)","pos":[0,62]}]},{"content":"\\n&lt;p&gt;A string that specifies the time interval to convert.&lt;/p&gt;\\n","pos":[132020,132084],"source":"\\n<p>A string that specifies the time interval to convert.</p>\\n"},{"content":"\\n&lt;p&gt;A array of standard or custom format strings that define the acceptable formats of &lt;em&gt;input&lt;/em&gt;.&lt;/p&gt;\\n","pos":[132152,132261],"source":"\\n<p>A array of standard or custom format strings that define the acceptable formats of <em>input</em>.</p>\\n"},{"content":"\\n&lt;p&gt;An object that provides culture-specific formatting information.&lt;/p&gt;\\n","pos":[132343,132418],"source":"\\n<p>An object that provides culture-specific formatting information.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;input&lt;/em&gt; was converted successfully; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[132814,132929],"source":"\\n<p>\\n<strong>true</strong> if <em>input</em> was converted successfully; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[133446,133452],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[133588,133599],"content":"IComparable","needQuote":true,"nodes":[{"content":"IComparable","pos":[0,11]}]},{"pos":[133796,133817],"content":"IComparable<TimeSpan>","needQuote":true,"nodes":[{"content":"IComparable&lt;TimeSpan&gt;","pos":[0,21],"source":"IComparable<TimeSpan>"}]},{"pos":[134011,134022],"content":"IComparable","needQuote":true,"nodes":[{"content":"IComparable","pos":[0,11]}]},{"pos":[134066,134067],"content":"<","needQuote":true,"nodes":[]},{"pos":[134119,134127],"content":"TimeSpan","needQuote":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[134241,134252],"content":"IComparable","needQuote":true,"nodes":[{"content":"IComparable","pos":[0,11]}]},{"content":"(Of","pos":[134297,134300]},{"pos":[134359,134367],"content":"TimeSpan","needQuote":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[134408,134409],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[134660,134680],"content":"IEquatable<TimeSpan>","needQuote":true,"nodes":[{"content":"IEquatable&lt;TimeSpan&gt;","pos":[0,20],"source":"IEquatable<TimeSpan>"}]},{"pos":[134870,134880],"content":"IEquatable","needQuote":true,"nodes":[{"content":"IEquatable","pos":[0,10]}]},{"pos":[134923,134924],"content":"<","needQuote":true,"nodes":[]},{"pos":[134976,134984],"content":"TimeSpan","needQuote":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[135097,135107],"content":"IEquatable","needQuote":true,"nodes":[{"content":"IEquatable","pos":[0,10]}]},{"content":"(Of","pos":[135151,135154]},{"pos":[135213,135221],"content":"TimeSpan","needQuote":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[135262,135263],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[135482,135494],"content":"IFormattable","needQuote":true,"nodes":[{"content":"IFormattable","pos":[0,12]}]},{"pos":[135699,135721],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[135869,135875],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[135942,135943],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[135993,135999],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[136060,136061]},{"pos":[136116,136122],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[136182,136183],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[136280,136286],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[136353,136354],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[136404,136410],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[136471,136472]},{"pos":[136527,136533],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[136593,136594],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[136839,136870],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[137036,137051],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[137127,137128],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[137178,137184],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[137245,137246]},{"pos":[137301,137307],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[137367,137368],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[137474,137489],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[137565,137566],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[137616,137622],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[137683,137684]},{"pos":[137739,137745],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[137805,137806],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[138032,138041],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[138134,138141],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[138209,138210],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[138237,138238],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[138307,138314],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[138382,138383],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[138410,138411],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[138554,138568],"content":"IComparable<T>","needQuote":true,"nodes":[{"content":"IComparable&lt;T&gt;","pos":[0,14],"source":"IComparable<T>"}]},{"pos":[138727,138738],"content":"IComparable","needQuote":true,"nodes":[{"content":"IComparable","pos":[0,11]}]},{"pos":[138782,138783],"content":"<","needQuote":true,"nodes":[]},{"pos":[138810,138811],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[138911,138922],"content":"IComparable","needQuote":true,"nodes":[{"content":"IComparable","pos":[0,11]}]},{"content":"(Of","pos":[138967,138970]},{"pos":[139004,139005],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[139032,139033],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[139209,139222],"content":"IEquatable<T>","needQuote":true,"nodes":[{"content":"IEquatable&lt;T&gt;","pos":[0,13],"source":"IEquatable<T>"}]},{"pos":[139377,139387],"content":"IEquatable","needQuote":true,"nodes":[{"content":"IEquatable","pos":[0,10]}]},{"pos":[139430,139431],"content":"<","needQuote":true,"nodes":[]},{"pos":[139458,139459],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[139558,139568],"content":"IEquatable","needQuote":true,"nodes":[{"content":"IEquatable","pos":[0,10]}]},{"content":"(Of","pos":[139612,139615]},{"pos":[139649,139650],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[139677,139678],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[139862,139868],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[140015,140023],"content":"TimeSpan","needQuote":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[140173,140178],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[140319,140324],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[140466,140472],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[140724,140743],"content":"CompareTo(TimeSpan)","needQuote":true,"nodes":[{"content":"CompareTo(TimeSpan)","pos":[0,19]}]},{"pos":[140969,140978],"content":"CompareTo","needQuote":true,"nodes":[{"content":"CompareTo","pos":[0,9]}]},{"pos":[141049,141050],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[141102,141110],"content":"TimeSpan","needQuote":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[141151,141152],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[141234,141243],"content":"CompareTo","needQuote":true,"nodes":[{"content":"CompareTo","pos":[0,9]}]},{"pos":[141317,141318],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[141370,141378],"content":"TimeSpan","needQuote":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[141419,141420],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[141707,141719],"content":"CompareTo(T)","needQuote":true,"nodes":[{"content":"CompareTo(T)","pos":[0,12]}]},{"pos":[141889,141898],"content":"CompareTo","needQuote":true,"nodes":[{"content":"CompareTo","pos":[0,9]}]},{"pos":[141955,141956],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[141983,141984],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[142011,142012],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[142094,142103],"content":"CompareTo","needQuote":true,"nodes":[{"content":"CompareTo","pos":[0,9]}]},{"pos":[142163,142164],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[142191,142192],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[142219,142220],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[142481,142495],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[142620,142626],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[142675,142676],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[142726,142732],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[142792,142793],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[142879,142885],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[142934,142935],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[142985,142991],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[143051,143052],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[143231,143238],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[143389,143398],"content":"ValueType","needQuote":true,"nodes":[{"content":"ValueType","pos":[0,9]}]},{"pos":[143650,143666],"content":"Equals(TimeSpan)","needQuote":true,"nodes":[{"content":"Equals(TimeSpan)","pos":[0,16]}]},{"pos":[143880,143886],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[143953,143954],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[144006,144014],"content":"TimeSpan","needQuote":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[144055,144056],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[144134,144140],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[144210,144211],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[144263,144271],"content":"TimeSpan","needQuote":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[144312,144313],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[144584,144593],"content":"Equals(T)","needQuote":true,"nodes":[{"content":"Equals(T)","pos":[0,9]}]},{"pos":[144751,144757],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[144810,144811],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[144838,144839],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[144866,144867],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[144945,144951],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[145007,145008],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[145035,145036],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[145063,145064],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[145304,145317],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[145424,145435],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[145489,145490],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[145517,145518],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[145594,145605],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[145659,145660],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[145687,145688],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[145855,145861],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[146015,146030],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[146238,146252],"content":"TimeSpanStyles","needQuote":true,"nodes":[{"content":"TimeSpanStyles","pos":[0,14]}]},{"pos":[146439,146459],"content":"System.Globalization","needQuote":true,"nodes":[{"content":"System.Globalization","pos":[0,20]}]},{"pos":[146597,146605],"content":"String[]","needQuote":true,"nodes":[{"content":"String[]","pos":[0,8]}]},{"pos":[146733,146739],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":"[]","pos":[146800,146802]},{"pos":[146867,146873],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[146933,146935],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[147113,147130],"content":"CompareTo(Object)","needQuote":true,"nodes":[{"content":"CompareTo(Object)","pos":[0,17]}]},{"pos":[147265,147274],"content":"CompareTo","needQuote":true,"nodes":[{"content":"CompareTo","pos":[0,9]}]},{"pos":[147328,147329],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[147379,147385],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[147445,147446],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[147537,147546],"content":"CompareTo","needQuote":true,"nodes":[{"content":"CompareTo","pos":[0,9]}]},{"pos":[147600,147601],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[147651,147657],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[147717,147718],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[147928,147938],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[148039,148047],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[148098,148099],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[148126,148127],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[148200,148208],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[148259,148260],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[148287,148288],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[148514,148547],"content":"ToString(String, IFormatProvider)","needQuote":true,"nodes":[{"content":"ToString(String, IFormatProvider)","pos":[0,33]}]},{"pos":[148729,148737],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[148791,148792],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[148842,148848],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[148909,148910]},{"pos":[148974,148989],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[149037,149038],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[149152,149160],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[149214,149215],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[149265,149271],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[149332,149333]},{"pos":[149397,149412],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[149460,149461],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[149693,149720],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]},{"pos":[149922,149939],"content":"OverflowException","needQuote":true,"nodes":[{"content":"OverflowException","pos":[0,17]}]},{"pos":[150128,150145],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[150321,150342],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[150541,150556],"content":"FormatException","needQuote":true,"nodes":[{"content":"FormatException","pos":[0,15]}]}],"content":"items:\n- uid: System.TimeSpan\n  commentId: T:System.TimeSpan\n  id: TimeSpan\n  parent: System\n  children:\n  - System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32)\n  - System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.TimeSpan.#ctor(System.Int64)\n  - System.TimeSpan.Add(System.TimeSpan)\n  - System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)\n  - System.TimeSpan.CompareTo(System.TimeSpan)\n  - System.TimeSpan.Days\n  - System.TimeSpan.Duration\n  - System.TimeSpan.Equals(System.Object)\n  - System.TimeSpan.Equals(System.TimeSpan)\n  - System.TimeSpan.Equals(System.TimeSpan,System.TimeSpan)\n  - System.TimeSpan.FromDays(System.Double)\n  - System.TimeSpan.FromHours(System.Double)\n  - System.TimeSpan.FromMilliseconds(System.Double)\n  - System.TimeSpan.FromMinutes(System.Double)\n  - System.TimeSpan.FromSeconds(System.Double)\n  - System.TimeSpan.FromTicks(System.Int64)\n  - System.TimeSpan.GetHashCode\n  - System.TimeSpan.Hours\n  - System.TimeSpan.MaxValue\n  - System.TimeSpan.Milliseconds\n  - System.TimeSpan.Minutes\n  - System.TimeSpan.MinValue\n  - System.TimeSpan.Negate\n  - System.TimeSpan.op_Addition(System.TimeSpan,System.TimeSpan)\n  - System.TimeSpan.op_Equality(System.TimeSpan,System.TimeSpan)\n  - System.TimeSpan.op_GreaterThan(System.TimeSpan,System.TimeSpan)\n  - System.TimeSpan.op_GreaterThanOrEqual(System.TimeSpan,System.TimeSpan)\n  - System.TimeSpan.op_Inequality(System.TimeSpan,System.TimeSpan)\n  - System.TimeSpan.op_LessThan(System.TimeSpan,System.TimeSpan)\n  - System.TimeSpan.op_LessThanOrEqual(System.TimeSpan,System.TimeSpan)\n  - System.TimeSpan.op_Subtraction(System.TimeSpan,System.TimeSpan)\n  - System.TimeSpan.op_UnaryNegation(System.TimeSpan)\n  - System.TimeSpan.op_UnaryPlus(System.TimeSpan)\n  - System.TimeSpan.Parse(System.String)\n  - System.TimeSpan.Parse(System.String,System.IFormatProvider)\n  - System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider)\n  - System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles)\n  - System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider)\n  - System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles)\n  - System.TimeSpan.Seconds\n  - System.TimeSpan.Subtract(System.TimeSpan)\n  - System.TimeSpan.System#IComparable#CompareTo(System.Object)\n  - System.TimeSpan.Ticks\n  - System.TimeSpan.TicksPerDay\n  - System.TimeSpan.TicksPerHour\n  - System.TimeSpan.TicksPerMillisecond\n  - System.TimeSpan.TicksPerMinute\n  - System.TimeSpan.TicksPerSecond\n  - System.TimeSpan.ToString\n  - System.TimeSpan.ToString(System.String)\n  - System.TimeSpan.ToString(System.String,System.IFormatProvider)\n  - System.TimeSpan.TotalDays\n  - System.TimeSpan.TotalHours\n  - System.TimeSpan.TotalMilliseconds\n  - System.TimeSpan.TotalMinutes\n  - System.TimeSpan.TotalSeconds\n  - System.TimeSpan.TryParse(System.String,System.IFormatProvider,System.TimeSpan@)\n  - System.TimeSpan.TryParse(System.String,System.TimeSpan@)\n  - System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)\n  - System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.TimeSpan@)\n  - System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)\n  - System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.TimeSpan@)\n  - System.TimeSpan.Zero\n  langs:\n  - csharp\n  - vb\n  name: TimeSpan\n  fullName: System.TimeSpan\n  type: Struct\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TimeSpan\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 30\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Represents a time interval.</p>\\n\"\n  syntax:\n    content: >-\n      [ComVisible(true)]\n\n      [Serializable]\n\n      public struct TimeSpan : IComparable, IComparable<TimeSpan>, IEquatable<TimeSpan>, IFormattable\n    content.vb: >-\n      <ComVisible(True)>\n\n      <Serializable>\n\n      Public Structure TimeSpan\n          Implements IComparable, IComparable(Of TimeSpan), IEquatable(Of TimeSpan), IFormattable\n  seealso:\n  - type: System.DateTime\n    commentId: T:System.DateTime\n  - type: System.DateTimeOffset\n    commentId: T:System.DateTimeOffset\n  - type: System.Globalization.Calendar\n    commentId: T:System.Globalization.Calendar\n  implements:\n  - System.IComparable\n  - System.IComparable{System.TimeSpan}\n  - System.IEquatable{System.TimeSpan}\n  - System.IFormattable\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  attributes:\n  - type: System.Runtime.InteropServices.StructLayoutAttribute\n    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)\n    arguments:\n    - type: System.Runtime.InteropServices.LayoutKind\n      value: 0\n  modifiers.csharp:\n  - public\n  - struct\n  modifiers.vb:\n  - Public\n  - Structure\n  nameWithType: TimeSpan\n- uid: System.TimeSpan.MaxValue\n  commentId: F:System.TimeSpan.MaxValue\n  id: MaxValue\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: MaxValue\n  fullName: System.TimeSpan.MaxValue\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: MaxValue\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 64\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Represents the maximum <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value. This field is read-only.</p>\\n\"\n  syntax:\n    content: public static readonly TimeSpan MaxValue\n    content.vb: Public Shared ReadOnly MaxValue As TimeSpan\n    return:\n      type: System.TimeSpan\n  seealso:\n  - type: System.Int64\n    commentId: T:System.Int64\n  - type: System.TimeSpan.MinValue\n    commentId: F:System.TimeSpan.MinValue\n  modifiers.csharp:\n  - public\n  - static\n  - readonly\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: TimeSpan.MaxValue\n- uid: System.TimeSpan.MinValue\n  commentId: F:System.TimeSpan.MinValue\n  id: MinValue\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: MinValue\n  fullName: System.TimeSpan.MinValue\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: MinValue\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 65\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Represents the minimum <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value. This field is read-only.</p>\\n\"\n  syntax:\n    content: public static readonly TimeSpan MinValue\n    content.vb: Public Shared ReadOnly MinValue As TimeSpan\n    return:\n      type: System.TimeSpan\n  seealso:\n  - type: System.Int64\n    commentId: T:System.Int64\n  - type: System.TimeSpan.MaxValue\n    commentId: F:System.TimeSpan.MaxValue\n  modifiers.csharp:\n  - public\n  - static\n  - readonly\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: TimeSpan.MinValue\n- uid: System.TimeSpan.TicksPerDay\n  commentId: F:System.TimeSpan.TicksPerDay\n  id: TicksPerDay\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: TicksPerDay\n  fullName: System.TimeSpan.TicksPerDay\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TicksPerDay\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 46\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Represents the number of ticks in 1 day. This field is constant.</p>\\n\"\n  syntax:\n    content: public const long TicksPerDay = 864000000000L\n    content.vb: Public Const TicksPerDay As Long = 864000000000L\n    return:\n      type: System.Int64\n  seealso:\n  - type: System.Int64\n    commentId: T:System.Int64\n  - type: System.TimeSpan.TicksPerMillisecond\n    commentId: F:System.TimeSpan.TicksPerMillisecond\n  - type: System.TimeSpan.TicksPerSecond\n    commentId: F:System.TimeSpan.TicksPerSecond\n  - type: System.TimeSpan.TicksPerMinute\n    commentId: F:System.TimeSpan.TicksPerMinute\n  - type: System.TimeSpan.TicksPerHour\n    commentId: F:System.TimeSpan.TicksPerHour\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: TimeSpan.TicksPerDay\n- uid: System.TimeSpan.TicksPerHour\n  commentId: F:System.TimeSpan.TicksPerHour\n  id: TicksPerHour\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: TicksPerHour\n  fullName: System.TimeSpan.TicksPerHour\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TicksPerHour\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 43\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Represents the number of ticks in 1 hour. This field is constant.</p>\\n\"\n  syntax:\n    content: public const long TicksPerHour = 36000000000L\n    content.vb: Public Const TicksPerHour As Long = 36000000000L\n    return:\n      type: System.Int64\n  seealso:\n  - type: System.Int64\n    commentId: T:System.Int64\n  - type: System.TimeSpan.TicksPerMillisecond\n    commentId: F:System.TimeSpan.TicksPerMillisecond\n  - type: System.TimeSpan.TicksPerSecond\n    commentId: F:System.TimeSpan.TicksPerSecond\n  - type: System.TimeSpan.TicksPerMinute\n    commentId: F:System.TimeSpan.TicksPerMinute\n  - type: System.TimeSpan.TicksPerDay\n    commentId: F:System.TimeSpan.TicksPerDay\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: TimeSpan.TicksPerHour\n- uid: System.TimeSpan.TicksPerMillisecond\n  commentId: F:System.TimeSpan.TicksPerMillisecond\n  id: TicksPerMillisecond\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: TicksPerMillisecond\n  fullName: System.TimeSpan.TicksPerMillisecond\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TicksPerMillisecond\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 34\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Represents the number of ticks in 1 millisecond. This field is constant.</p>\\n\"\n  syntax:\n    content: public const long TicksPerMillisecond = 10000L\n    content.vb: Public Const TicksPerMillisecond As Long = 10000L\n    return:\n      type: System.Int64\n  seealso:\n  - type: System.Int64\n    commentId: T:System.Int64\n  - type: System.TimeSpan.TicksPerSecond\n    commentId: F:System.TimeSpan.TicksPerSecond\n  - type: System.TimeSpan.TicksPerMinute\n    commentId: F:System.TimeSpan.TicksPerMinute\n  - type: System.TimeSpan.TicksPerHour\n    commentId: F:System.TimeSpan.TicksPerHour\n  - type: System.TimeSpan.TicksPerDay\n    commentId: F:System.TimeSpan.TicksPerDay\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: TimeSpan.TicksPerMillisecond\n- uid: System.TimeSpan.TicksPerMinute\n  commentId: F:System.TimeSpan.TicksPerMinute\n  id: TicksPerMinute\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: TicksPerMinute\n  fullName: System.TimeSpan.TicksPerMinute\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TicksPerMinute\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 40\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Represents the number of ticks in 1 minute. This field is constant.</p>\\n\"\n  syntax:\n    content: public const long TicksPerMinute = 600000000L\n    content.vb: Public Const TicksPerMinute As Long = 600000000L\n    return:\n      type: System.Int64\n  seealso:\n  - type: System.Int64\n    commentId: T:System.Int64\n  - type: System.TimeSpan.TicksPerMillisecond\n    commentId: F:System.TimeSpan.TicksPerMillisecond\n  - type: System.TimeSpan.TicksPerSecond\n    commentId: F:System.TimeSpan.TicksPerSecond\n  - type: System.TimeSpan.TicksPerHour\n    commentId: F:System.TimeSpan.TicksPerHour\n  - type: System.TimeSpan.TicksPerDay\n    commentId: F:System.TimeSpan.TicksPerDay\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: TimeSpan.TicksPerMinute\n- uid: System.TimeSpan.TicksPerSecond\n  commentId: F:System.TimeSpan.TicksPerSecond\n  id: TicksPerSecond\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: TicksPerSecond\n  fullName: System.TimeSpan.TicksPerSecond\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TicksPerSecond\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 37\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Represents the number of ticks in 1 second.</p>\\n\"\n  syntax:\n    content: public const long TicksPerSecond = 10000000L\n    content.vb: Public Const TicksPerSecond As Long = 10000000L\n    return:\n      type: System.Int64\n  seealso:\n  - type: System.Int64\n    commentId: T:System.Int64\n  - type: System.TimeSpan.TicksPerMillisecond\n    commentId: F:System.TimeSpan.TicksPerMillisecond\n  - type: System.TimeSpan.TicksPerMinute\n    commentId: F:System.TimeSpan.TicksPerMinute\n  - type: System.TimeSpan.TicksPerHour\n    commentId: F:System.TimeSpan.TicksPerHour\n  - type: System.TimeSpan.TicksPerDay\n    commentId: F:System.TimeSpan.TicksPerDay\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: TimeSpan.TicksPerSecond\n- uid: System.TimeSpan.Zero\n  commentId: F:System.TimeSpan.Zero\n  id: Zero\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: Zero\n  fullName: System.TimeSpan.Zero\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Zero\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 62\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Represents the zero <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value. This field is read-only.</p>\\n\"\n  syntax:\n    content: public static readonly TimeSpan Zero\n    content.vb: Public Shared ReadOnly Zero As TimeSpan\n    return:\n      type: System.TimeSpan\n  modifiers.csharp:\n  - public\n  - static\n  - readonly\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: TimeSpan.Zero\n- uid: System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32)\n  commentId: M:System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32)\n  id: '#ctor(System.Int32,System.Int32,System.Int32)'\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: TimeSpan(Int32, Int32, Int32)\n  fullName: System.TimeSpan.TimeSpan(System.Int32, System.Int32, System.Int32)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 79\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to a specified number of hours, minutes, and seconds.</p>\\n\"\n  syntax:\n    content: public TimeSpan(int hours, int minutes, int seconds)\n    content.vb: Public Sub New(hours As Integer, minutes As Integer, seconds As Integer)\n    parameters:\n    - id: hours\n      type: System.Int32\n      description: \"\\n<p>Number of hours. </p>\\n\"\n    - id: minutes\n      type: System.Int32\n      description: \"\\n<p>Number of minutes. </p>\\n\"\n    - id: seconds\n      type: System.Int32\n      description: \"\\n<p>Number of seconds. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The parameters specify a <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value less than <xref href=\\\"System.TimeSpan.MinValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.TimeSpan.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  seealso:\n  - type: System.Int64\n    commentId: T:System.Int64\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TimeSpan.TimeSpan(Int32, Int32, Int32)\n- uid: System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)\n  commentId: M:System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)\n  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32)'\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: TimeSpan(Int32, Int32, Int32, Int32)\n  fullName: System.TimeSpan.TimeSpan(System.Int32, System.Int32, System.Int32, System.Int32)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 83\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to a specified number of days, hours, minutes, and seconds.</p>\\n\"\n  syntax:\n    content: public TimeSpan(int days, int hours, int minutes, int seconds)\n    content.vb: Public Sub New(days As Integer, hours As Integer, minutes As Integer, seconds As Integer)\n    parameters:\n    - id: days\n      type: System.Int32\n      description: \"\\n<p>Number of days. </p>\\n\"\n    - id: hours\n      type: System.Int32\n      description: \"\\n<p>Number of hours. </p>\\n\"\n    - id: minutes\n      type: System.Int32\n      description: \"\\n<p>Number of minutes. </p>\\n\"\n    - id: seconds\n      type: System.Int32\n      description: \"\\n<p>Number of seconds. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The parameters specify a <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value less than <xref href=\\\"System.TimeSpan.MinValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.TimeSpan.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  seealso:\n  - type: System.Int64\n    commentId: T:System.Int64\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TimeSpan.TimeSpan(Int32, Int32, Int32, Int32)\n- uid: System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  commentId: M:System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)'\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: TimeSpan(Int32, Int32, Int32, Int32, Int32)\n  fullName: System.TimeSpan.TimeSpan(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 88\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to a specified number of days, hours, minutes, seconds, and milliseconds.</p>\\n\"\n  syntax:\n    content: public TimeSpan(int days, int hours, int minutes, int seconds, int milliseconds)\n    content.vb: Public Sub New(days As Integer, hours As Integer, minutes As Integer, seconds As Integer, milliseconds As Integer)\n    parameters:\n    - id: days\n      type: System.Int32\n      description: \"\\n<p>Number of days. </p>\\n\"\n    - id: hours\n      type: System.Int32\n      description: \"\\n<p>Number of hours. </p>\\n\"\n    - id: minutes\n      type: System.Int32\n      description: \"\\n<p>Number of minutes. </p>\\n\"\n    - id: seconds\n      type: System.Int32\n      description: \"\\n<p>Number of seconds. </p>\\n\"\n    - id: milliseconds\n      type: System.Int32\n      description: \"\\n<p>Number of milliseconds. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The parameters specify a <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value less than <xref href=\\\"System.TimeSpan.MinValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.TimeSpan.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  seealso:\n  - type: System.Int64\n    commentId: T:System.Int64\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TimeSpan.TimeSpan(Int32, Int32, Int32, Int32, Int32)\n- uid: System.TimeSpan.#ctor(System.Int64)\n  commentId: M:System.TimeSpan.#ctor(System.Int64)\n  id: '#ctor(System.Int64)'\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: TimeSpan(Int64)\n  fullName: System.TimeSpan.TimeSpan(System.Int64)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 75\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to the specified number of ticks.</p>\\n\"\n  syntax:\n    content: public TimeSpan(long ticks)\n    content.vb: Public Sub New(ticks As Long)\n    parameters:\n    - id: ticks\n      type: System.Int64\n      description: \"\\n<p>A time period expressed in 100-nanosecond units. </p>\\n\"\n  seealso:\n  - type: System.TimeSpan.Ticks\n    commentId: P:System.TimeSpan.Ticks\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TimeSpan.TimeSpan(Int64)\n- uid: System.TimeSpan.Days\n  commentId: P:System.TimeSpan.Days\n  id: Days\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: Days\n  fullName: System.TimeSpan.Days\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Days\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 100\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the days component of the time interval represented by the current <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public int Days { get; }\n    content.vb: Public ReadOnly Property Days As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The day component of this instance. The return value can be positive or negative.</p>\\n\"\n  seealso:\n  - type: System.TimeSpan.TotalDays\n    commentId: P:System.TimeSpan.TotalDays\n  - type: System.TimeSpan.Ticks\n    commentId: P:System.TimeSpan.Ticks\n  - type: System.TimeSpan.Milliseconds\n    commentId: P:System.TimeSpan.Milliseconds\n  - type: System.TimeSpan.Seconds\n    commentId: P:System.TimeSpan.Seconds\n  - type: System.TimeSpan.Minutes\n    commentId: P:System.TimeSpan.Minutes\n  - type: System.TimeSpan.Hours\n    commentId: P:System.TimeSpan.Hours\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: TimeSpan.Days\n- uid: System.TimeSpan.Hours\n  commentId: P:System.TimeSpan.Hours\n  id: Hours\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: Hours\n  fullName: System.TimeSpan.Hours\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Hours\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 104\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the hours component of the time interval represented by the current <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public int Hours { get; }\n    content.vb: Public ReadOnly Property Hours As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The hour component of the current <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. The return value ranges from -23 through 23.</p>\\n\"\n  seealso:\n  - type: System.TimeSpan.TotalHours\n    commentId: P:System.TimeSpan.TotalHours\n  - type: System.TimeSpan.Ticks\n    commentId: P:System.TimeSpan.Ticks\n  - type: System.TimeSpan.Milliseconds\n    commentId: P:System.TimeSpan.Milliseconds\n  - type: System.TimeSpan.Seconds\n    commentId: P:System.TimeSpan.Seconds\n  - type: System.TimeSpan.Minutes\n    commentId: P:System.TimeSpan.Minutes\n  - type: System.TimeSpan.Days\n    commentId: P:System.TimeSpan.Days\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: TimeSpan.Hours\n- uid: System.TimeSpan.Milliseconds\n  commentId: P:System.TimeSpan.Milliseconds\n  id: Milliseconds\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: Milliseconds\n  fullName: System.TimeSpan.Milliseconds\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Milliseconds\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 108\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the milliseconds component of the time interval represented by the current <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public int Milliseconds { get; }\n    content.vb: Public ReadOnly Property Milliseconds As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The millisecond component of the current <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. The return value ranges from -999 through 999.</p>\\n\"\n  seealso:\n  - type: System.TimeSpan.TotalMilliseconds\n    commentId: P:System.TimeSpan.TotalMilliseconds\n  - type: System.TimeSpan.Ticks\n    commentId: P:System.TimeSpan.Ticks\n  - type: System.TimeSpan.Seconds\n    commentId: P:System.TimeSpan.Seconds\n  - type: System.TimeSpan.Minutes\n    commentId: P:System.TimeSpan.Minutes\n  - type: System.TimeSpan.Hours\n    commentId: P:System.TimeSpan.Hours\n  - type: System.TimeSpan.Days\n    commentId: P:System.TimeSpan.Days\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: TimeSpan.Milliseconds\n- uid: System.TimeSpan.Minutes\n  commentId: P:System.TimeSpan.Minutes\n  id: Minutes\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: Minutes\n  fullName: System.TimeSpan.Minutes\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Minutes\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 112\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the minutes component of the time interval represented by the current <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public int Minutes { get; }\n    content.vb: Public ReadOnly Property Minutes As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The minute component of the current <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. The return value ranges from -59 through 59.</p>\\n\"\n  seealso:\n  - type: System.TimeSpan.TotalMinutes\n    commentId: P:System.TimeSpan.TotalMinutes\n  - type: System.TimeSpan.Ticks\n    commentId: P:System.TimeSpan.Ticks\n  - type: System.TimeSpan.Milliseconds\n    commentId: P:System.TimeSpan.Milliseconds\n  - type: System.TimeSpan.Seconds\n    commentId: P:System.TimeSpan.Seconds\n  - type: System.TimeSpan.Hours\n    commentId: P:System.TimeSpan.Hours\n  - type: System.TimeSpan.Days\n    commentId: P:System.TimeSpan.Days\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: TimeSpan.Minutes\n- uid: System.TimeSpan.Seconds\n  commentId: P:System.TimeSpan.Seconds\n  id: Seconds\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: Seconds\n  fullName: System.TimeSpan.Seconds\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Seconds\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 116\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the seconds component of the time interval represented by the current <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public int Seconds { get; }\n    content.vb: Public ReadOnly Property Seconds As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The second component of the current <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. The return value ranges from -59 through 59.</p>\\n\"\n  seealso:\n  - type: System.TimeSpan.TotalSeconds\n    commentId: P:System.TimeSpan.TotalSeconds\n  - type: System.TimeSpan.Ticks\n    commentId: P:System.TimeSpan.Ticks\n  - type: System.TimeSpan.Milliseconds\n    commentId: P:System.TimeSpan.Milliseconds\n  - type: System.TimeSpan.Minutes\n    commentId: P:System.TimeSpan.Minutes\n  - type: System.TimeSpan.Hours\n    commentId: P:System.TimeSpan.Hours\n  - type: System.TimeSpan.Days\n    commentId: P:System.TimeSpan.Days\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: TimeSpan.Seconds\n- uid: System.TimeSpan.Ticks\n  commentId: P:System.TimeSpan.Ticks\n  id: Ticks\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: Ticks\n  fullName: System.TimeSpan.Ticks\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Ticks\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 96\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the number of ticks that represent the value of the current <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public long Ticks { get; }\n    content.vb: Public ReadOnly Property Ticks As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>The number of ticks contained in this instance.</p>\\n\"\n  seealso:\n  - type: System.Int64\n    commentId: T:System.Int64\n  - type: System.TimeSpan.Milliseconds\n    commentId: P:System.TimeSpan.Milliseconds\n  - type: System.TimeSpan.Seconds\n    commentId: P:System.TimeSpan.Seconds\n  - type: System.TimeSpan.Minutes\n    commentId: P:System.TimeSpan.Minutes\n  - type: System.TimeSpan.Hours\n    commentId: P:System.TimeSpan.Hours\n  - type: System.TimeSpan.Days\n    commentId: P:System.TimeSpan.Days\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: TimeSpan.Ticks\n- uid: System.TimeSpan.TotalDays\n  commentId: P:System.TimeSpan.TotalDays\n  id: TotalDays\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: TotalDays\n  fullName: System.TimeSpan.TotalDays\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TotalDays\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 120\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the value of the current <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure expressed in whole and fractional days.</p>\\n\"\n  syntax:\n    content: public double TotalDays { get; }\n    content.vb: Public ReadOnly Property TotalDays As Double\n    parameters: []\n    return:\n      type: System.Double\n      description: \"\\n<p>The total number of days represented by this instance.</p>\\n\"\n  seealso:\n  - type: System.TimeSpan.Days\n    commentId: P:System.TimeSpan.Days\n  - type: System.TimeSpan.TotalMilliseconds\n    commentId: P:System.TimeSpan.TotalMilliseconds\n  - type: System.TimeSpan.TotalSeconds\n    commentId: P:System.TimeSpan.TotalSeconds\n  - type: System.TimeSpan.TotalMinutes\n    commentId: P:System.TimeSpan.TotalMinutes\n  - type: System.TimeSpan.TotalHours\n    commentId: P:System.TimeSpan.TotalHours\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: TimeSpan.TotalDays\n- uid: System.TimeSpan.TotalHours\n  commentId: P:System.TimeSpan.TotalHours\n  id: TotalHours\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: TotalHours\n  fullName: System.TimeSpan.TotalHours\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TotalHours\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 124\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the value of the current <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure expressed in whole and fractional hours.</p>\\n\"\n  syntax:\n    content: public double TotalHours { get; }\n    content.vb: Public ReadOnly Property TotalHours As Double\n    parameters: []\n    return:\n      type: System.Double\n      description: \"\\n<p>The total number of hours represented by this instance.</p>\\n\"\n  seealso:\n  - type: System.TimeSpan.Hours\n    commentId: P:System.TimeSpan.Hours\n  - type: System.TimeSpan.TotalMilliseconds\n    commentId: P:System.TimeSpan.TotalMilliseconds\n  - type: System.TimeSpan.TotalSeconds\n    commentId: P:System.TimeSpan.TotalSeconds\n  - type: System.TimeSpan.TotalMinutes\n    commentId: P:System.TimeSpan.TotalMinutes\n  - type: System.TimeSpan.TotalDays\n    commentId: P:System.TimeSpan.TotalDays\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: TimeSpan.TotalHours\n- uid: System.TimeSpan.TotalMilliseconds\n  commentId: P:System.TimeSpan.TotalMilliseconds\n  id: TotalMilliseconds\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: TotalMilliseconds\n  fullName: System.TimeSpan.TotalMilliseconds\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TotalMilliseconds\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 128\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the value of the current <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure expressed in whole and fractional milliseconds.</p>\\n\"\n  syntax:\n    content: public double TotalMilliseconds { get; }\n    content.vb: Public ReadOnly Property TotalMilliseconds As Double\n    parameters: []\n    return:\n      type: System.Double\n      description: \"\\n<p>The total number of milliseconds represented by this instance.</p>\\n\"\n  seealso:\n  - type: System.TimeSpan.Milliseconds\n    commentId: P:System.TimeSpan.Milliseconds\n  - type: System.TimeSpan.TotalSeconds\n    commentId: P:System.TimeSpan.TotalSeconds\n  - type: System.TimeSpan.TotalMinutes\n    commentId: P:System.TimeSpan.TotalMinutes\n  - type: System.TimeSpan.TotalHours\n    commentId: P:System.TimeSpan.TotalHours\n  - type: System.TimeSpan.TotalDays\n    commentId: P:System.TimeSpan.TotalDays\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: TimeSpan.TotalMilliseconds\n- uid: System.TimeSpan.TotalMinutes\n  commentId: P:System.TimeSpan.TotalMinutes\n  id: TotalMinutes\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: TotalMinutes\n  fullName: System.TimeSpan.TotalMinutes\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TotalMinutes\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 141\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the value of the current <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure expressed in whole and fractional minutes.</p>\\n\"\n  syntax:\n    content: public double TotalMinutes { get; }\n    content.vb: Public ReadOnly Property TotalMinutes As Double\n    parameters: []\n    return:\n      type: System.Double\n      description: \"\\n<p>The total number of minutes represented by this instance.</p>\\n\"\n  seealso:\n  - type: System.TimeSpan.Minutes\n    commentId: P:System.TimeSpan.Minutes\n  - type: System.TimeSpan.TotalMilliseconds\n    commentId: P:System.TimeSpan.TotalMilliseconds\n  - type: System.TimeSpan.TotalSeconds\n    commentId: P:System.TimeSpan.TotalSeconds\n  - type: System.TimeSpan.TotalHours\n    commentId: P:System.TimeSpan.TotalHours\n  - type: System.TimeSpan.TotalDays\n    commentId: P:System.TimeSpan.TotalDays\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: TimeSpan.TotalMinutes\n- uid: System.TimeSpan.TotalSeconds\n  commentId: P:System.TimeSpan.TotalSeconds\n  id: TotalSeconds\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: TotalSeconds\n  fullName: System.TimeSpan.TotalSeconds\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TotalSeconds\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 145\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the value of the current <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure expressed in whole and fractional seconds.</p>\\n\"\n  syntax:\n    content: public double TotalSeconds { get; }\n    content.vb: Public ReadOnly Property TotalSeconds As Double\n    parameters: []\n    return:\n      type: System.Double\n      description: \"\\n<p>The total number of seconds represented by this instance.</p>\\n\"\n  seealso:\n  - type: System.TimeSpan.Seconds\n    commentId: P:System.TimeSpan.Seconds\n  - type: System.TimeSpan.TotalMilliseconds\n    commentId: P:System.TimeSpan.TotalMilliseconds\n  - type: System.TimeSpan.TotalMinutes\n    commentId: P:System.TimeSpan.TotalMinutes\n  - type: System.TimeSpan.TotalHours\n    commentId: P:System.TimeSpan.TotalHours\n  - type: System.TimeSpan.TotalDays\n    commentId: P:System.TimeSpan.TotalDays\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: TimeSpan.TotalSeconds\n- uid: System.TimeSpan.Add(System.TimeSpan)\n  commentId: M:System.TimeSpan.Add(System.TimeSpan)\n  id: Add(System.TimeSpan)\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: Add(TimeSpan)\n  fullName: System.TimeSpan.Add(System.TimeSpan)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Add\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 149\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Returns a new <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object whose value is the sum of the specified <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object and this instance.</p>\\n\"\n  syntax:\n    content: public TimeSpan Add(TimeSpan ts)\n    content.vb: Public Function Add(ts As TimeSpan) As TimeSpan\n    parameters:\n    - id: ts\n      type: System.TimeSpan\n      description: \"\\n<p>The time interval to add.</p>\\n\"\n    return:\n      type: System.TimeSpan\n      description: \"\\n<p>A new object that represents the value of this instance plus the value of <em>ts</em>.</p>\\n\"\n  exceptions:\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: \"\\n<p>The resulting <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is less than <xref href=\\\"System.TimeSpan.MinValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.TimeSpan.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  seealso:\n  - type: System.DateTime.Add(System.TimeSpan)\n    commentId: M:System.DateTime.Add(System.TimeSpan)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TimeSpan.Add(TimeSpan)\n- uid: System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)\n  commentId: M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)\n  id: Compare(System.TimeSpan,System.TimeSpan)\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: Compare(TimeSpan, TimeSpan)\n  fullName: System.TimeSpan.Compare(System.TimeSpan, System.TimeSpan)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Compare\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 163\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Compares two <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values and returns an integer that indicates whether the first value is shorter than, equal to, or longer than the second value.</p>\\n\"\n  syntax:\n    content: public static int Compare(TimeSpan t1, TimeSpan t2)\n    content.vb: Public Shared Function Compare(t1 As TimeSpan, t2 As TimeSpan) As Integer\n    parameters:\n    - id: t1\n      type: System.TimeSpan\n      description: \"\\n<p>The first time interval to compare. </p>\\n\"\n    - id: t2\n      type: System.TimeSpan\n      description: \"\\n<p>The second time interval to compare. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>One of the following values.</p>\\n<p>Value </p>\\n<p>Description </p>\\n<table><tbody><tr><td>\\n<p>-1 </p>\\n</td><td>\\n<p>\\n<em>t1</em> is shorter than <em>t2</em>. </p>\\n</td></tr><tr><td>\\n<p>0 </p>\\n</td><td>\\n<p>\\n<em>t1</em> is equal to <em>t2</em>. </p>\\n</td></tr><tr><td>\\n<p>1 </p>\\n</td><td>\\n<p>\\n<em>t1</em> is longer than <em>t2</em>. </p>\\n</td></tr></tbody></table>\\n\"\n  seealso:\n  - type: System.TimeSpan.CompareTo(System.Object)\n    commentId: M:System.TimeSpan.CompareTo(System.Object)\n  - type: System.TimeSpan.Equals(System.Object)\n    commentId: M:System.TimeSpan.Equals(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TimeSpan.Compare(TimeSpan, TimeSpan)\n- uid: System.TimeSpan.CompareTo(System.TimeSpan)\n  commentId: M:System.TimeSpan.CompareTo(System.TimeSpan)\n  id: CompareTo(System.TimeSpan)\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: CompareTo(TimeSpan)\n  fullName: System.TimeSpan.CompareTo(System.TimeSpan)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CompareTo\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 180\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Compares this instance to a specified <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object and returns an integer that indicates whether this instance is shorter than, equal to, or longer than the <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public int CompareTo(TimeSpan value)\n    content.vb: Public Function CompareTo(value As TimeSpan) As Integer\n    parameters:\n    - id: value\n      type: System.TimeSpan\n      description: \"\\n<p>An object to compare to this instance.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>A signed number indicating the relative values of this instance and <em>value</em>.</p>\\n<p>Value </p>\\n<p>Description </p>\\n<table><tbody><tr><td>\\n<p>A negative integer </p>\\n</td><td>\\n<p>This instance is shorter than <em>value</em>. </p>\\n</td></tr><tr><td>\\n<p>Zero </p>\\n</td><td>\\n<p>This instance is equal to <em>value</em>. </p>\\n</td></tr><tr><td>\\n<p>A positive integer </p>\\n</td><td>\\n<p>This instance is longer than <em>value</em>. </p>\\n</td></tr></tbody></table>\\n\"\n  implements:\n  - System.IComparable{System.TimeSpan}.CompareTo(System.TimeSpan)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TimeSpan.CompareTo(TimeSpan)\n- uid: System.TimeSpan.Duration\n  commentId: M:System.TimeSpan.Duration\n  id: Duration\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: Duration()\n  fullName: System.TimeSpan.Duration()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Duration\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 191\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Returns a new <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object whose value is the absolute value of the current <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public TimeSpan Duration()\n    content.vb: Public Function Duration As TimeSpan\n    return:\n      type: System.TimeSpan\n      description: \"\\n<p>A new object whose value is the absolute value of the current <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  exceptions:\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: \"\\n<p>The value of this instance is <xref href=\\\"System.TimeSpan.MinValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  seealso:\n  - type: System.TimeSpan.Ticks\n    commentId: P:System.TimeSpan.Ticks\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TimeSpan.Duration()\n- uid: System.TimeSpan.Equals(System.Object)\n  commentId: M:System.TimeSpan.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  fullName: System.TimeSpan.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Equals\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 198\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Returns a value indicating whether this instance is equal to a specified object.</p>\\n\"\n  syntax:\n    content: public override bool Equals(object value)\n    content.vb: Public Overrides Function Equals(value As Object) As Boolean\n    parameters:\n    - id: value\n      type: System.Object\n      description: \"\\n<p>An object to compare with this instance. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <em>value</em> is a <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents the same time interval as the current <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.ValueType.Equals(System.Object)\n  seealso:\n  - type: System.Object\n    commentId: T:System.Object\n  - type: System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)\n    commentId: M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)\n  - type: System.TimeSpan.CompareTo(System.Object)\n    commentId: M:System.TimeSpan.CompareTo(System.Object)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: TimeSpan.Equals(Object)\n- uid: System.TimeSpan.Equals(System.TimeSpan)\n  commentId: M:System.TimeSpan.Equals(System.TimeSpan)\n  id: Equals(System.TimeSpan)\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: Equals(TimeSpan)\n  fullName: System.TimeSpan.Equals(System.TimeSpan)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Equals\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 205\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Returns a value indicating whether this instance is equal to a specified <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public bool Equals(TimeSpan obj)\n    content.vb: Public Function Equals(obj As TimeSpan) As Boolean\n    parameters:\n    - id: obj\n      type: System.TimeSpan\n      description: \"\\n<p>An object to compare with this instance. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <em>obj</em> represents the same time interval as this instance; otherwise, <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.TimeSpan.Equals(System.Object)\n    commentId: M:System.TimeSpan.Equals(System.Object)\n  - type: System.TimeSpan.CompareTo(System.TimeSpan)\n    commentId: M:System.TimeSpan.CompareTo(System.TimeSpan)\n  implements:\n  - System.IEquatable{System.TimeSpan}.Equals(System.TimeSpan)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TimeSpan.Equals(TimeSpan)\n- uid: System.TimeSpan.Equals(System.TimeSpan,System.TimeSpan)\n  commentId: M:System.TimeSpan.Equals(System.TimeSpan,System.TimeSpan)\n  id: Equals(System.TimeSpan,System.TimeSpan)\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: Equals(TimeSpan, TimeSpan)\n  fullName: System.TimeSpan.Equals(System.TimeSpan, System.TimeSpan)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Equals\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 210\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Returns a value that indicates whether two specified instances of <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> are equal.</p>\\n\"\n  syntax:\n    content: public static bool Equals(TimeSpan t1, TimeSpan t2)\n    content.vb: Public Shared Function Equals(t1 As TimeSpan, t2 As TimeSpan) As Boolean\n    parameters:\n    - id: t1\n      type: System.TimeSpan\n      description: \"\\n<p>The first time interval to compare. </p>\\n\"\n    - id: t2\n      type: System.TimeSpan\n      description: \"\\n<p>The second time interval to compare. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the values of <em>t1</em> and <em>t2</em> are equal; otherwise, <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.Boolean\n    commentId: T:System.Boolean\n  - type: System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)\n    commentId: M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)\n  - type: System.TimeSpan.CompareTo(System.Object)\n    commentId: M:System.TimeSpan.CompareTo(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TimeSpan.Equals(TimeSpan, TimeSpan)\n- uid: System.TimeSpan.FromDays(System.Double)\n  commentId: M:System.TimeSpan.FromDays(System.Double)\n  id: FromDays(System.Double)\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: FromDays(Double)\n  fullName: System.TimeSpan.FromDays(System.Double)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: FromDays\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 187\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Returns a <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents a specified number of days, where the specification is accurate to the nearest millisecond.</p>\\n\"\n  syntax:\n    content: public static TimeSpan FromDays(double value)\n    content.vb: Public Shared Function FromDays(value As Double) As TimeSpan\n    parameters:\n    - id: value\n      type: System.Double\n      description: \"\\n<p>A number of days, accurate to the nearest millisecond. </p>\\n\"\n    return:\n      type: System.TimeSpan\n      description: \"\\n<p>An object that represents <em>value</em>.</p>\\n\"\n  exceptions:\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: \"\\n<p>\\n<em>value</em> is less than <xref href=\\\"System.TimeSpan.MinValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.TimeSpan.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n<p>-or-</p>\\n<p>\\n<em>value</em> is <xref href=\\\"System.Double.PositiveInfinity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or-</p>\\n<p>\\n<em>value</em> is <xref href=\\\"System.Double.NegativeInfinity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>value</em> is equal to <xref href=\\\"System.Double.NaN\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  seealso:\n  - type: System.Double\n    commentId: T:System.Double\n  - type: System.TimeSpan.FromTicks(System.Int64)\n    commentId: M:System.TimeSpan.FromTicks(System.Int64)\n  - type: System.TimeSpan.FromMilliseconds(System.Double)\n    commentId: M:System.TimeSpan.FromMilliseconds(System.Double)\n  - type: System.TimeSpan.FromSeconds(System.Double)\n    commentId: M:System.TimeSpan.FromSeconds(System.Double)\n  - type: System.TimeSpan.FromMinutes(System.Double)\n    commentId: M:System.TimeSpan.FromMinutes(System.Double)\n  - type: System.TimeSpan.FromHours(System.Double)\n    commentId: M:System.TimeSpan.FromHours(System.Double)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TimeSpan.FromDays(Double)\n- uid: System.TimeSpan.FromHours(System.Double)\n  commentId: M:System.TimeSpan.FromHours(System.Double)\n  id: FromHours(System.Double)\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: FromHours(Double)\n  fullName: System.TimeSpan.FromHours(System.Double)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: FromHours\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 218\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Returns a <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents a specified number of hours, where the specification is accurate to the nearest millisecond.</p>\\n\"\n  syntax:\n    content: public static TimeSpan FromHours(double value)\n    content.vb: Public Shared Function FromHours(value As Double) As TimeSpan\n    parameters:\n    - id: value\n      type: System.Double\n      description: \"\\n<p>A number of hours accurate to the nearest millisecond. </p>\\n\"\n    return:\n      type: System.TimeSpan\n      description: \"\\n<p>An object that represents <em>value</em>.</p>\\n\"\n  exceptions:\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: \"\\n<p>\\n<em>value</em> is less than <xref href=\\\"System.TimeSpan.MinValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.TimeSpan.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n<p>-or-</p>\\n<p>\\n<em>value</em> is <xref href=\\\"System.Double.PositiveInfinity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or-</p>\\n<p>\\n<em>value</em> is <xref href=\\\"System.Double.NegativeInfinity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>value</em> is equal to <xref href=\\\"System.Double.NaN\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  seealso:\n  - type: System.Double\n    commentId: T:System.Double\n  - type: System.TimeSpan.FromTicks(System.Int64)\n    commentId: M:System.TimeSpan.FromTicks(System.Int64)\n  - type: System.TimeSpan.FromMilliseconds(System.Double)\n    commentId: M:System.TimeSpan.FromMilliseconds(System.Double)\n  - type: System.TimeSpan.FromSeconds(System.Double)\n    commentId: M:System.TimeSpan.FromSeconds(System.Double)\n  - type: System.TimeSpan.FromMinutes(System.Double)\n    commentId: M:System.TimeSpan.FromMinutes(System.Double)\n  - type: System.TimeSpan.FromDays(System.Double)\n    commentId: M:System.TimeSpan.FromDays(System.Double)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TimeSpan.FromHours(Double)\n- uid: System.TimeSpan.FromMilliseconds(System.Double)\n  commentId: M:System.TimeSpan.FromMilliseconds(System.Double)\n  id: FromMilliseconds(System.Double)\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: FromMilliseconds(Double)\n  fullName: System.TimeSpan.FromMilliseconds(System.Double)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: FromMilliseconds\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 233\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Returns a <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents a specified number of milliseconds.</p>\\n\"\n  syntax:\n    content: public static TimeSpan FromMilliseconds(double value)\n    content.vb: Public Shared Function FromMilliseconds(value As Double) As TimeSpan\n    parameters:\n    - id: value\n      type: System.Double\n      description: \"\\n<p>A number of milliseconds. </p>\\n\"\n    return:\n      type: System.TimeSpan\n      description: \"\\n<p>An object that represents <em>value</em>.</p>\\n\"\n  exceptions:\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: \"\\n<p>\\n<em>value</em> is less than <xref href=\\\"System.TimeSpan.MinValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.TimeSpan.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or-</p>\\n<p>\\n<em>value</em> is <xref href=\\\"System.Double.PositiveInfinity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or-</p>\\n<p>\\n<em>value</em> is <xref href=\\\"System.Double.NegativeInfinity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>value</em> is equal to <xref href=\\\"System.Double.NaN\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  seealso:\n  - type: System.Double\n    commentId: T:System.Double\n  - type: System.TimeSpan.FromTicks(System.Int64)\n    commentId: M:System.TimeSpan.FromTicks(System.Int64)\n  - type: System.TimeSpan.FromSeconds(System.Double)\n    commentId: M:System.TimeSpan.FromSeconds(System.Double)\n  - type: System.TimeSpan.FromMinutes(System.Double)\n    commentId: M:System.TimeSpan.FromMinutes(System.Double)\n  - type: System.TimeSpan.FromHours(System.Double)\n    commentId: M:System.TimeSpan.FromHours(System.Double)\n  - type: System.TimeSpan.FromDays(System.Double)\n    commentId: M:System.TimeSpan.FromDays(System.Double)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TimeSpan.FromMilliseconds(Double)\n- uid: System.TimeSpan.FromMinutes(System.Double)\n  commentId: M:System.TimeSpan.FromMinutes(System.Double)\n  id: FromMinutes(System.Double)\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: FromMinutes(Double)\n  fullName: System.TimeSpan.FromMinutes(System.Double)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: FromMinutes\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 237\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Returns a <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents a specified number of minutes, where the specification is accurate to the nearest millisecond.</p>\\n\"\n  syntax:\n    content: public static TimeSpan FromMinutes(double value)\n    content.vb: Public Shared Function FromMinutes(value As Double) As TimeSpan\n    parameters:\n    - id: value\n      type: System.Double\n      description: \"\\n<p>A number of minutes, accurate to the nearest millisecond. </p>\\n\"\n    return:\n      type: System.TimeSpan\n      description: \"\\n<p>An object that represents <em>value</em>.</p>\\n\"\n  exceptions:\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: \"\\n<p>\\n<em>value</em> is less than <xref href=\\\"System.TimeSpan.MinValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.TimeSpan.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or-</p>\\n<p>\\n<em>value</em> is <xref href=\\\"System.Double.PositiveInfinity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or-</p>\\n<p>\\n<em>value</em> is <xref href=\\\"System.Double.NegativeInfinity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>value</em> is equal to <xref href=\\\"System.Double.NaN\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  seealso:\n  - type: System.Double\n    commentId: T:System.Double\n  - type: System.TimeSpan.FromTicks(System.Int64)\n    commentId: M:System.TimeSpan.FromTicks(System.Int64)\n  - type: System.TimeSpan.FromMilliseconds(System.Double)\n    commentId: M:System.TimeSpan.FromMilliseconds(System.Double)\n  - type: System.TimeSpan.FromSeconds(System.Double)\n    commentId: M:System.TimeSpan.FromSeconds(System.Double)\n  - type: System.TimeSpan.FromHours(System.Double)\n    commentId: M:System.TimeSpan.FromHours(System.Double)\n  - type: System.TimeSpan.FromDays(System.Double)\n    commentId: M:System.TimeSpan.FromDays(System.Double)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TimeSpan.FromMinutes(Double)\n- uid: System.TimeSpan.FromSeconds(System.Double)\n  commentId: M:System.TimeSpan.FromSeconds(System.Double)\n  id: FromSeconds(System.Double)\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: FromSeconds(Double)\n  fullName: System.TimeSpan.FromSeconds(System.Double)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: FromSeconds\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 248\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Returns a <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents a specified number of seconds, where the specification is accurate to the nearest millisecond.</p>\\n\"\n  syntax:\n    content: public static TimeSpan FromSeconds(double value)\n    content.vb: Public Shared Function FromSeconds(value As Double) As TimeSpan\n    parameters:\n    - id: value\n      type: System.Double\n      description: \"\\n<p>A number of seconds, accurate to the nearest millisecond. </p>\\n\"\n    return:\n      type: System.TimeSpan\n      description: \"\\n<p>An object that represents <em>value</em>.</p>\\n\"\n  exceptions:\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: \"\\n<p>\\n<em>value</em> is less than <xref href=\\\"System.TimeSpan.MinValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.TimeSpan.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or-</p>\\n<p>\\n<em>value</em> is <xref href=\\\"System.Double.PositiveInfinity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or-</p>\\n<p>\\n<em>value</em> is <xref href=\\\"System.Double.NegativeInfinity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>value</em> is equal to <xref href=\\\"System.Double.NaN\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  seealso:\n  - type: System.Double\n    commentId: T:System.Double\n  - type: System.TimeSpan.FromTicks(System.Int64)\n    commentId: M:System.TimeSpan.FromTicks(System.Int64)\n  - type: System.TimeSpan.FromMilliseconds(System.Double)\n    commentId: M:System.TimeSpan.FromMilliseconds(System.Double)\n  - type: System.TimeSpan.FromMinutes(System.Double)\n    commentId: M:System.TimeSpan.FromMinutes(System.Double)\n  - type: System.TimeSpan.FromHours(System.Double)\n    commentId: M:System.TimeSpan.FromHours(System.Double)\n  - type: System.TimeSpan.FromDays(System.Double)\n    commentId: M:System.TimeSpan.FromDays(System.Double)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TimeSpan.FromSeconds(Double)\n- uid: System.TimeSpan.FromTicks(System.Int64)\n  commentId: M:System.TimeSpan.FromTicks(System.Int64)\n  id: FromTicks(System.Int64)\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: FromTicks(Int64)\n  fullName: System.TimeSpan.FromTicks(System.Int64)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: FromTicks\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 262\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Returns a <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents a specified time, where the specification is in units of ticks.</p>\\n\"\n  syntax:\n    content: public static TimeSpan FromTicks(long value)\n    content.vb: Public Shared Function FromTicks(value As Long) As TimeSpan\n    parameters:\n    - id: value\n      type: System.Int64\n      description: \"\\n<p>A number of ticks that represent a time. </p>\\n\"\n    return:\n      type: System.TimeSpan\n      description: \"\\n<p>An object that represents <em>value</em>.</p>\\n\"\n  seealso:\n  - type: System.Int64\n    commentId: T:System.Int64\n  - type: System.TimeSpan.FromMilliseconds(System.Double)\n    commentId: M:System.TimeSpan.FromMilliseconds(System.Double)\n  - type: System.TimeSpan.FromSeconds(System.Double)\n    commentId: M:System.TimeSpan.FromSeconds(System.Double)\n  - type: System.TimeSpan.FromMinutes(System.Double)\n    commentId: M:System.TimeSpan.FromMinutes(System.Double)\n  - type: System.TimeSpan.FromHours(System.Double)\n    commentId: M:System.TimeSpan.FromHours(System.Double)\n  - type: System.TimeSpan.FromDays(System.Double)\n    commentId: M:System.TimeSpan.FromDays(System.Double)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TimeSpan.FromTicks(Int64)\n- uid: System.TimeSpan.GetHashCode\n  commentId: M:System.TimeSpan.GetHashCode\n  id: GetHashCode\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  fullName: System.TimeSpan.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetHashCode\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 214\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Returns a hash code for this instance.</p>\\n\"\n  syntax:\n    content: public override int GetHashCode()\n    content.vb: Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>A 32-bit signed integer hash code.</p>\\n\"\n  overridden: System.ValueType.GetHashCode\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: TimeSpan.GetHashCode()\n- uid: System.TimeSpan.Negate\n  commentId: M:System.TimeSpan.Negate\n  id: Negate\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: Negate()\n  fullName: System.TimeSpan.Negate()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Negate\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 241\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Returns a new <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object whose value is the negated value of this instance.</p>\\n\"\n  syntax:\n    content: public TimeSpan Negate()\n    content.vb: Public Function Negate As TimeSpan\n    return:\n      type: System.TimeSpan\n      description: \"\\n<p>A new object with the same numeric value as this instance, but with the opposite sign.</p>\\n\"\n  exceptions:\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: \"\\n<p>The negated value of this instance cannot be represented by a <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>; that is, the value of this instance is <xref href=\\\"System.TimeSpan.MinValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TimeSpan.Negate()\n- uid: System.TimeSpan.op_Addition(System.TimeSpan,System.TimeSpan)\n  commentId: M:System.TimeSpan.op_Addition(System.TimeSpan,System.TimeSpan)\n  id: op_Addition(System.TimeSpan,System.TimeSpan)\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: Addition(TimeSpan, TimeSpan)\n  fullName: System.TimeSpan.Addition(System.TimeSpan, System.TimeSpan)\n  type: Operator\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: op_Addition\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 348\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Adds two specified <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instances.</p>\\n\"\n  syntax:\n    content: public static TimeSpan operator +(TimeSpan t1, TimeSpan t2)\n    content.vb: Public Shared Operator +(t1 As TimeSpan, t2 As TimeSpan) As TimeSpan\n    parameters:\n    - id: t1\n      type: System.TimeSpan\n      description: \"\\n<p>The first time interval to add. </p>\\n\"\n    - id: t2\n      type: System.TimeSpan\n      description: \"\\n<p>The second time interval to add.</p>\\n\"\n    return:\n      type: System.TimeSpan\n      description: \"\\n<p>An object whose value is the sum of the values of <em>t1</em> and <em>t2</em>.</p>\\n\"\n  exceptions:\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: \"\\n<p>The resulting <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is less than <xref href=\\\"System.TimeSpan.MinValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.TimeSpan.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  seealso:\n  - type: System.TimeSpan.Add(System.TimeSpan)\n    commentId: M:System.TimeSpan.Add(System.TimeSpan)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TimeSpan.Addition(TimeSpan, TimeSpan)\n- uid: System.TimeSpan.op_Equality(System.TimeSpan,System.TimeSpan)\n  commentId: M:System.TimeSpan.op_Equality(System.TimeSpan,System.TimeSpan)\n  id: op_Equality(System.TimeSpan,System.TimeSpan)\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: Equality(TimeSpan, TimeSpan)\n  fullName: System.TimeSpan.Equality(System.TimeSpan, System.TimeSpan)\n  type: Operator\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: op_Equality\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 352\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Indicates whether two <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instances are equal.</p>\\n\"\n  syntax:\n    content: public static bool operator ==(TimeSpan t1, TimeSpan t2)\n    content.vb: Public Shared Operator =(t1 As TimeSpan, t2 As TimeSpan) As Boolean\n    parameters:\n    - id: t1\n      type: System.TimeSpan\n      description: \"\\n<p>The first time interval to compare. </p>\\n\"\n    - id: t2\n      type: System.TimeSpan\n      description: \"\\n<p>The second time interval to compare. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the values of <em>t1</em> and <em>t2</em> are equal; otherwise, <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.TimeSpan.Equals(System.Object)\n    commentId: M:System.TimeSpan.Equals(System.Object)\n  - type: System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)\n    commentId: M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)\n  - type: System.TimeSpan.CompareTo(System.Object)\n    commentId: M:System.TimeSpan.CompareTo(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TimeSpan.Equality(TimeSpan, TimeSpan)\n- uid: System.TimeSpan.op_GreaterThan(System.TimeSpan,System.TimeSpan)\n  commentId: M:System.TimeSpan.op_GreaterThan(System.TimeSpan,System.TimeSpan)\n  id: op_GreaterThan(System.TimeSpan,System.TimeSpan)\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: GreaterThan(TimeSpan, TimeSpan)\n  fullName: System.TimeSpan.GreaterThan(System.TimeSpan, System.TimeSpan)\n  type: Operator\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: op_GreaterThan\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 368\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Indicates whether a specified <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is greater than another specified <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public static bool operator>(TimeSpan t1, TimeSpan t2)\n    content.vb: Public Shared Operator>(t1 As TimeSpan, t2 As TimeSpan) As Boolean\n    parameters:\n    - id: t1\n      type: System.TimeSpan\n      description: \"\\n<p>The first time interval to compare. </p>\\n\"\n    - id: t2\n      type: System.TimeSpan\n      description: \"\\n<p>The second time interval to compare. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the value of <em>t1</em> is greater than the value of <em>t2</em>; otherwise, <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)\n    commentId: M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)\n  - type: System.TimeSpan.CompareTo(System.Object)\n    commentId: M:System.TimeSpan.CompareTo(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TimeSpan.GreaterThan(TimeSpan, TimeSpan)\n- uid: System.TimeSpan.op_GreaterThanOrEqual(System.TimeSpan,System.TimeSpan)\n  commentId: M:System.TimeSpan.op_GreaterThanOrEqual(System.TimeSpan,System.TimeSpan)\n  id: op_GreaterThanOrEqual(System.TimeSpan,System.TimeSpan)\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: GreaterThanOrEqual(TimeSpan, TimeSpan)\n  fullName: System.TimeSpan.GreaterThanOrEqual(System.TimeSpan, System.TimeSpan)\n  type: Operator\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: op_GreaterThanOrEqual\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 372\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Indicates whether a specified <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is greater than or equal to another specified <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public static bool operator >=(TimeSpan t1, TimeSpan t2)\n    content.vb: Public Shared Operator >=(t1 As TimeSpan, t2 As TimeSpan) As Boolean\n    parameters:\n    - id: t1\n      type: System.TimeSpan\n      description: \"\\n<p>The first time interval to compare.</p>\\n\"\n    - id: t2\n      type: System.TimeSpan\n      description: \"\\n<p>The second time interval to compare.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the value of <em>t1</em> is greater than or equal to the value of <em>t2</em>; otherwise, <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)\n    commentId: M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)\n  - type: System.TimeSpan.CompareTo(System.Object)\n    commentId: M:System.TimeSpan.CompareTo(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TimeSpan.GreaterThanOrEqual(TimeSpan, TimeSpan)\n- uid: System.TimeSpan.op_Inequality(System.TimeSpan,System.TimeSpan)\n  commentId: M:System.TimeSpan.op_Inequality(System.TimeSpan,System.TimeSpan)\n  id: op_Inequality(System.TimeSpan,System.TimeSpan)\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: Inequality(TimeSpan, TimeSpan)\n  fullName: System.TimeSpan.Inequality(System.TimeSpan, System.TimeSpan)\n  type: Operator\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: op_Inequality\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 356\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Indicates whether two <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instances are not equal.</p>\\n\"\n  syntax:\n    content: public static bool operator !=(TimeSpan t1, TimeSpan t2)\n    content.vb: Public Shared Operator <>(t1 As TimeSpan, t2 As TimeSpan) As Boolean\n    parameters:\n    - id: t1\n      type: System.TimeSpan\n      description: \"\\n<p>The first time interval to compare.</p>\\n\"\n    - id: t2\n      type: System.TimeSpan\n      description: \"\\n<p>The second time interval to compare.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the values of <em>t1</em> and <em>t2</em> are not equal; otherwise, <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)\n    commentId: M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)\n  - type: System.TimeSpan.CompareTo(System.Object)\n    commentId: M:System.TimeSpan.CompareTo(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TimeSpan.Inequality(TimeSpan, TimeSpan)\n- uid: System.TimeSpan.op_LessThan(System.TimeSpan,System.TimeSpan)\n  commentId: M:System.TimeSpan.op_LessThan(System.TimeSpan,System.TimeSpan)\n  id: op_LessThan(System.TimeSpan,System.TimeSpan)\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: LessThan(TimeSpan, TimeSpan)\n  fullName: System.TimeSpan.LessThan(System.TimeSpan, System.TimeSpan)\n  type: Operator\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: op_LessThan\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 360\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Indicates whether a specified <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is less than another specified <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public static bool operator <(TimeSpan t1, TimeSpan t2)\n    content.vb: Public Shared Operator <(t1 As TimeSpan, t2 As TimeSpan) As Boolean\n    parameters:\n    - id: t1\n      type: System.TimeSpan\n      description: \"\\n<p>The first time interval to compare.</p>\\n\"\n    - id: t2\n      type: System.TimeSpan\n      description: \"\\n<p>The second time interval to compare. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the value of <em>t1</em> is less than the value of <em>t2</em>; otherwise, <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)\n    commentId: M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)\n  - type: System.TimeSpan.CompareTo(System.Object)\n    commentId: M:System.TimeSpan.CompareTo(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TimeSpan.LessThan(TimeSpan, TimeSpan)\n- uid: System.TimeSpan.op_LessThanOrEqual(System.TimeSpan,System.TimeSpan)\n  commentId: M:System.TimeSpan.op_LessThanOrEqual(System.TimeSpan,System.TimeSpan)\n  id: op_LessThanOrEqual(System.TimeSpan,System.TimeSpan)\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: LessThanOrEqual(TimeSpan, TimeSpan)\n  fullName: System.TimeSpan.LessThanOrEqual(System.TimeSpan, System.TimeSpan)\n  type: Operator\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: op_LessThanOrEqual\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 364\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Indicates whether a specified <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is less than or equal to another specified <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public static bool operator <=(TimeSpan t1, TimeSpan t2)\n    content.vb: Public Shared Operator <=(t1 As TimeSpan, t2 As TimeSpan) As Boolean\n    parameters:\n    - id: t1\n      type: System.TimeSpan\n      description: \"\\n<p>The first time interval to compare. </p>\\n\"\n    - id: t2\n      type: System.TimeSpan\n      description: \"\\n<p>The second time interval to compare. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the value of <em>t1</em> is less than or equal to the value of <em>t2</em>; otherwise, <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)\n    commentId: M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)\n  - type: System.TimeSpan.CompareTo(System.Object)\n    commentId: M:System.TimeSpan.CompareTo(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TimeSpan.LessThanOrEqual(TimeSpan, TimeSpan)\n- uid: System.TimeSpan.op_Subtraction(System.TimeSpan,System.TimeSpan)\n  commentId: M:System.TimeSpan.op_Subtraction(System.TimeSpan,System.TimeSpan)\n  id: op_Subtraction(System.TimeSpan,System.TimeSpan)\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: Subtraction(TimeSpan, TimeSpan)\n  fullName: System.TimeSpan.Subtraction(System.TimeSpan, System.TimeSpan)\n  type: Operator\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: op_Subtraction\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 340\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Subtracts a specified <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> from another specified <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public static TimeSpan operator -(TimeSpan t1, TimeSpan t2)\n    content.vb: Public Shared Operator -(t1 As TimeSpan, t2 As TimeSpan) As TimeSpan\n    parameters:\n    - id: t1\n      type: System.TimeSpan\n      description: \"\\n<p>The minuend. </p>\\n\"\n    - id: t2\n      type: System.TimeSpan\n      description: \"\\n<p>The subtrahend. </p>\\n\"\n    return:\n      type: System.TimeSpan\n      description: \"\\n<p>An object whose value is the result of the value of <em>t1</em> minus the value of <em>t2</em>.</p>\\n\"\n  exceptions:\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: \"\\n<p>The return value is less than <xref href=\\\"System.TimeSpan.MinValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.TimeSpan.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TimeSpan.Subtraction(TimeSpan, TimeSpan)\n- uid: System.TimeSpan.op_UnaryNegation(System.TimeSpan)\n  commentId: M:System.TimeSpan.op_UnaryNegation(System.TimeSpan)\n  id: op_UnaryNegation(System.TimeSpan)\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: UnaryNegation(TimeSpan)\n  fullName: System.TimeSpan.UnaryNegation(System.TimeSpan)\n  type: Operator\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: op_UnaryNegation\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 334\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Returns a <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> whose value is the negated value of the specified instance.</p>\\n\"\n  syntax:\n    content: public static TimeSpan operator -(TimeSpan t)\n    content.vb: Public Shared Operator -(t As TimeSpan) As TimeSpan\n    parameters:\n    - id: t\n      type: System.TimeSpan\n      description: \"\\n<p>The time interval to be negated. </p>\\n\"\n    return:\n      type: System.TimeSpan\n      description: \"\\n<p>An object that has the same numeric value as this instance, but the opposite sign.</p>\\n\"\n  exceptions:\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: \"\\n<p>The negated value of this instance cannot be represented by a <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>; that is, the value of this instance is <xref href=\\\"System.TimeSpan.MinValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TimeSpan.UnaryNegation(TimeSpan)\n- uid: System.TimeSpan.op_UnaryPlus(System.TimeSpan)\n  commentId: M:System.TimeSpan.op_UnaryPlus(System.TimeSpan)\n  id: op_UnaryPlus(System.TimeSpan)\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: UnaryPlus(TimeSpan)\n  fullName: System.TimeSpan.UnaryPlus(System.TimeSpan)\n  type: Operator\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: op_UnaryPlus\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 344\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Returns the specified instance of <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public static TimeSpan operator +(TimeSpan t)\n    content.vb: Public Shared Operator +(t As TimeSpan) As TimeSpan\n    parameters:\n    - id: t\n      type: System.TimeSpan\n      description: \"\\n<p>The time interval to return. </p>\\n\"\n    return:\n      type: System.TimeSpan\n      description: \"\\n<p>The time interval specified by <em>t</em>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TimeSpan.UnaryPlus(TimeSpan)\n- uid: System.TimeSpan.Parse(System.String)\n  commentId: M:System.TimeSpan.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: Parse(String)\n  fullName: System.TimeSpan.Parse(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Parse\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 277\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the string representation of a time interval to its <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> equivalent. </p>\\n\"\n  syntax:\n    content: public static TimeSpan Parse(string s)\n    content.vb: Public Shared Function Parse(s As String) As TimeSpan\n    parameters:\n    - id: s\n      type: System.String\n      description: \"\\n<p>A string that specifies the time interval to convert. </p>\\n\"\n    return:\n      type: System.TimeSpan\n      description: \"\\n<p>A time interval that corresponds to <em>s</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>s</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>\\n<em>s</em> has an invalid format. </p>\\n\"\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: \"\\n<p>\\n<em>s</em> represents a number that is less than <xref href=\\\"System.TimeSpan.MinValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.TimeSpan.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or- </p>\\n<p>At least one of the days, hours, minutes, or seconds components is outside its valid range. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TimeSpan.Parse(String)\n- uid: System.TimeSpan.Parse(System.String,System.IFormatProvider)\n  commentId: M:System.TimeSpan.Parse(System.String,System.IFormatProvider)\n  id: Parse(System.String,System.IFormatProvider)\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: Parse(String, IFormatProvider)\n  fullName: System.TimeSpan.Parse(System.String, System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Parse\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 281\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the string representation of a time interval to its <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> equivalent by using the specified culture-specific format information.</p>\\n\"\n  syntax:\n    content: public static TimeSpan Parse(string input, IFormatProvider formatProvider)\n    content.vb: Public Shared Function Parse(input As String, formatProvider As IFormatProvider) As TimeSpan\n    parameters:\n    - id: input\n      type: System.String\n      description: \"\\n<p>A string that specifies the time interval to convert.</p>\\n\"\n    - id: formatProvider\n      type: System.IFormatProvider\n      description: \"\\n<p>An object that supplies culture-specific formatting information.</p>\\n\"\n    return:\n      type: System.TimeSpan\n      description: \"\\n<p>A time interval that corresponds to <em>input</em>, as specified by <em>formatProvider</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>input</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>\\n<em>input</em> has an invalid format. </p>\\n\"\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: \"\\n<p>\\n<em>input</em> represents a number that is less than <xref href=\\\"System.TimeSpan.MinValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.TimeSpan.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or- </p>\\n<p>At least one of the days, hours, minutes, or seconds components in <em>input</em> is outside its valid range. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TimeSpan.Parse(String, IFormatProvider)\n- uid: System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider)\n  commentId: M:System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider)\n  id: ParseExact(System.String,System.String,System.IFormatProvider)\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: ParseExact(String, String, IFormatProvider)\n  fullName: System.TimeSpan.ParseExact(System.String, System.String, System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ParseExact\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 284\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the string representation of a time interval to its <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> equivalent by using the specified format and culture-specific format information. The format of the string representation must match the specified format exactly.</p>\\n\"\n  syntax:\n    content: public static TimeSpan ParseExact(string input, string format, IFormatProvider formatProvider)\n    content.vb: Public Shared Function ParseExact(input As String, format As String, formatProvider As IFormatProvider) As TimeSpan\n    parameters:\n    - id: input\n      type: System.String\n      description: \"\\n<p>A string that specifies the time interval to convert.</p>\\n\"\n    - id: format\n      type: System.String\n      description: \"\\n<p>A standard or custom format string that defines the required format of <em>input</em>.</p>\\n\"\n    - id: formatProvider\n      type: System.IFormatProvider\n      description: \"\\n<p>An object that provides culture-specific formatting information.</p>\\n\"\n    return:\n      type: System.TimeSpan\n      description: \"\\n<p>A time interval that corresponds to <em>input</em>, as specified by <em>format</em> and <em>formatProvider</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>input</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>\\n<em>input</em> has an invalid format. </p>\\n\"\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: \"\\n<p>\\n<em>input</em> represents a number that is less than <xref href=\\\"System.TimeSpan.MinValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.TimeSpan.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or- </p>\\n<p>At least one of the days, hours, minutes, or seconds components in <em>input</em> is outside its valid range. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TimeSpan.ParseExact(String, String, IFormatProvider)\n- uid: System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles)\n  commentId: M:System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles)\n  id: ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles)\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: ParseExact(String, String, IFormatProvider, TimeSpanStyles)\n  fullName: System.TimeSpan.ParseExact(System.String, System.String, System.IFormatProvider, System.Globalization.TimeSpanStyles)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ParseExact\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 290\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the string representation of a time interval to its <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> equivalent by using the specified format, culture-specific format information, and styles. The format of the string representation must match the specified format exactly.</p>\\n\"\n  syntax:\n    content: public static TimeSpan ParseExact(string input, string format, IFormatProvider formatProvider, TimeSpanStyles styles)\n    content.vb: Public Shared Function ParseExact(input As String, format As String, formatProvider As IFormatProvider, styles As TimeSpanStyles) As TimeSpan\n    parameters:\n    - id: input\n      type: System.String\n      description: \"\\n<p>A string that specifies the time interval to convert.</p>\\n\"\n    - id: format\n      type: System.String\n      description: \"\\n<p>A standard or custom format string that defines the required format of <em>input</em>.</p>\\n\"\n    - id: formatProvider\n      type: System.IFormatProvider\n      description: \"\\n<p>An object that provides culture-specific formatting information.</p>\\n\"\n    - id: styles\n      type: System.Globalization.TimeSpanStyles\n      description: \"\\n<p>A bitwise combination of enumeration values that defines the style elements that may be present in <em>input</em>.</p>\\n\"\n    return:\n      type: System.TimeSpan\n      description: \"\\n<p>A time interval that corresponds to <em>input</em>, as specified by <em>format</em>, <em>formatProvider</em>, and <em>styles</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>styles</em> is an invalid <xref href=\\\"System.Globalization.TimeSpanStyles\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>input</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>\\n<em>input</em> has an invalid format. </p>\\n\"\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: \"\\n<p>\\n<em>input</em> represents a number that is less than <xref href=\\\"System.TimeSpan.MinValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.TimeSpan.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or- </p>\\n<p>At least one of the days, hours, minutes, or seconds components in <em>input</em> is outside its valid range. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TimeSpan.ParseExact(String, String, IFormatProvider, TimeSpanStyles)\n- uid: System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider)\n  commentId: M:System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider)\n  id: ParseExact(System.String,System.String[],System.IFormatProvider)\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: ParseExact(String, String[], IFormatProvider)\n  fullName: System.TimeSpan.ParseExact(System.String, System.String[], System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ParseExact\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 287\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the string representation of a time interval to its <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> equivalent by using the specified array of format strings and culture-specific format information. The format of the string representation must match one of the specified formats exactly.</p>\\n\"\n  syntax:\n    content: public static TimeSpan ParseExact(string input, string[] formats, IFormatProvider formatProvider)\n    content.vb: Public Shared Function ParseExact(input As String, formats As String(), formatProvider As IFormatProvider) As TimeSpan\n    parameters:\n    - id: input\n      type: System.String\n      description: \"\\n<p>A string that specifies the time interval to convert.</p>\\n\"\n    - id: formats\n      type: System.String[]\n      description: \"\\n<p>A array of standard or custom format strings that defines the required format of <em>input</em>.</p>\\n\"\n    - id: formatProvider\n      type: System.IFormatProvider\n      description: \"\\n<p>An object that provides culture-specific formatting information.</p>\\n\"\n    return:\n      type: System.TimeSpan\n      description: \"\\n<p>A time interval that corresponds to <em>input</em>, as specified by <em>formats</em> and <em>formatProvider</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>input</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>\\n<em>input</em> has an invalid format. </p>\\n\"\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: \"\\n<p>\\n<em>input</em> represents a number that is less than <xref href=\\\"System.TimeSpan.MinValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.TimeSpan.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or- </p>\\n<p>At least one of the days, hours, minutes, or seconds components in <em>input</em> is outside its valid range. </p>\\n\"\n  seealso:\n  - type: System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.TimeSpan@)\n    commentId: M:System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.TimeSpan@)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.TimeSpan.ParseExact(System.String, System.String(), System.IFormatProvider)\n  name.vb: ParseExact(String, String(), IFormatProvider)\n  nameWithType: TimeSpan.ParseExact(String, String[], IFormatProvider)\n  nameWithType.vb: TimeSpan.ParseExact(String, String(), IFormatProvider)\n- uid: System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles)\n  commentId: M:System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles)\n  id: ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles)\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: ParseExact(String, String[], IFormatProvider, TimeSpanStyles)\n  fullName: System.TimeSpan.ParseExact(System.String, System.String[], System.IFormatProvider, System.Globalization.TimeSpanStyles)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ParseExact\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 294\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the string representation of a time interval to its <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> equivalent by using the specified formats, culture-specific format information, and styles. The format of the string representation must match one of the specified formats exactly. </p>\\n\"\n  syntax:\n    content: public static TimeSpan ParseExact(string input, string[] formats, IFormatProvider formatProvider, TimeSpanStyles styles)\n    content.vb: Public Shared Function ParseExact(input As String, formats As String(), formatProvider As IFormatProvider, styles As TimeSpanStyles) As TimeSpan\n    parameters:\n    - id: input\n      type: System.String\n      description: \"\\n<p>A string that specifies the time interval to convert.</p>\\n\"\n    - id: formats\n      type: System.String[]\n      description: \"\\n<p>A array of standard or custom format strings that define the required format of <em>input</em>.</p>\\n\"\n    - id: formatProvider\n      type: System.IFormatProvider\n      description: \"\\n<p>An object that provides culture-specific formatting information.</p>\\n\"\n    - id: styles\n      type: System.Globalization.TimeSpanStyles\n      description: \"\\n<p>A bitwise combination of enumeration values that defines the style elements that may be present in input.</p>\\n\"\n    return:\n      type: System.TimeSpan\n      description: \"\\n<p>A time interval that corresponds to <em>input</em>, as specified by <em>formats</em>, <em>formatProvider</em>, and <em>styles</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>styles</em> is an invalid <xref href=\\\"System.Globalization.TimeSpanStyles\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>input</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>\\n<em>input</em> has an invalid format. </p>\\n\"\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: \"\\n<p>\\n<em>input</em> represents a number that is less than <xref href=\\\"System.TimeSpan.MinValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.TimeSpan.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or- </p>\\n<p>At least one of the days, hours, minutes, or seconds components in <em>input</em> is outside its valid range. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.TimeSpan.ParseExact(System.String, System.String(), System.IFormatProvider, System.Globalization.TimeSpanStyles)\n  name.vb: ParseExact(String, String(), IFormatProvider, TimeSpanStyles)\n  nameWithType: TimeSpan.ParseExact(String, String[], IFormatProvider, TimeSpanStyles)\n  nameWithType.vb: TimeSpan.ParseExact(String, String(), IFormatProvider, TimeSpanStyles)\n- uid: System.TimeSpan.Subtract(System.TimeSpan)\n  commentId: M:System.TimeSpan.Subtract(System.TimeSpan)\n  id: Subtract(System.TimeSpan)\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: Subtract(TimeSpan)\n  fullName: System.TimeSpan.Subtract(System.TimeSpan)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Subtract\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 252\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Returns a new <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object whose value is the difference between the specified <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object and this instance.</p>\\n\"\n  syntax:\n    content: public TimeSpan Subtract(TimeSpan ts)\n    content.vb: Public Function Subtract(ts As TimeSpan) As TimeSpan\n    parameters:\n    - id: ts\n      type: System.TimeSpan\n      description: \"\\n<p>The time interval to be subtracted. </p>\\n\"\n    return:\n      type: System.TimeSpan\n      description: \"\\n<p>A new time interval whose value is the result of the value of this instance minus the value of <em>ts</em>.</p>\\n\"\n  exceptions:\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: \"\\n<p>The return value is less than <xref href=\\\"System.TimeSpan.MinValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.TimeSpan.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  seealso:\n  - type: System.DateTime.Subtract(System.DateTime)\n    commentId: M:System.DateTime.Subtract(System.DateTime)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TimeSpan.Subtract(TimeSpan)\n- uid: System.TimeSpan.System#IComparable#CompareTo(System.Object)\n  commentId: M:System.TimeSpan.System#IComparable#CompareTo(System.Object)\n  id: System#IComparable#CompareTo(System.Object)\n  isEii: true\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: IComparable.CompareTo(Object)\n  fullName: System.TimeSpan.System.IComparable.CompareTo(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.IComparable.CompareTo\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 1707\n  assemblies:\n  - System.Runtime\n  namespace: System\n  syntax:\n    content: int IComparable.CompareTo(object value)\n    content.vb: Function System.IComparable.CompareTo(value As Object) As Integer Implements IComparable.CompareTo\n    parameters:\n    - id: value\n      type: System.Object\n    return:\n      type: System.Int32\n  implements:\n  - System.IComparable.CompareTo(System.Object)\n  name.vb: System.IComparable.CompareTo(Object)\n  nameWithType: TimeSpan.IComparable.CompareTo(Object)\n  nameWithType.vb: TimeSpan.System.IComparable.CompareTo(Object)\n- uid: System.TimeSpan.ToString\n  commentId: M:System.TimeSpan.ToString\n  id: ToString\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.TimeSpan.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToString\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 318\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the value of the current <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to its equivalent string representation.</p>\\n\"\n  syntax:\n    content: public override string ToString()\n    content.vb: Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>The string representation of the current <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value. </p>\\n\"\n  overridden: System.ValueType.ToString\n  seealso:\n  - type: System.String\n    commentId: T:System.String\n  - type: System.TimeSpan.Parse(System.String)\n    commentId: M:System.TimeSpan.Parse(System.String)\n  - type: System.TimeSpan.TryParse(System.String,System.TimeSpan@)\n    commentId: M:System.TimeSpan.TryParse(System.String,System.TimeSpan@)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: TimeSpan.ToString()\n- uid: System.TimeSpan.ToString(System.String)\n  commentId: M:System.TimeSpan.ToString(System.String)\n  id: ToString(System.String)\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: ToString(String)\n  fullName: System.TimeSpan.ToString(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToString\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 321\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the value of the current <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to its equivalent string representation by using the specified format.</p>\\n\"\n  syntax:\n    content: public string ToString(string format)\n    content.vb: Public Function ToString(format As String) As String\n    parameters:\n    - id: format\n      type: System.String\n      description: \"\\n<p>A standard or custom <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> format string.</p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>The string representation of the current <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value in the format specified by the <em>format</em> parameter.</p>\\n\"\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The <em>format</em> parameter is not recognized or is not supported.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TimeSpan.ToString(String)\n- uid: System.TimeSpan.ToString(System.String,System.IFormatProvider)\n  commentId: M:System.TimeSpan.ToString(System.String,System.IFormatProvider)\n  id: ToString(System.String,System.IFormatProvider)\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: ToString(String, IFormatProvider)\n  fullName: System.TimeSpan.ToString(System.String, System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToString\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 324\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the value of the current <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to its equivalent string representation by using the specified format and culture-specific formatting information.</p>\\n\"\n  syntax:\n    content: public string ToString(string format, IFormatProvider formatProvider)\n    content.vb: Public Function ToString(format As String, formatProvider As IFormatProvider) As String\n    parameters:\n    - id: format\n      type: System.String\n      description: \"\\n<p>A standard or custom <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> format string.</p>\\n\"\n    - id: formatProvider\n      type: System.IFormatProvider\n      description: \"\\n<p>An object that supplies culture-specific formatting information.</p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>The string representation of the current <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value, as specified by <em>format</em> and <em>formatProvider</em>.</p>\\n\"\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The <em>format</em> parameter is not recognized or is not supported.</p>\\n\"\n  implements:\n  - System.IFormattable.ToString(System.String,System.IFormatProvider)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TimeSpan.ToString(String, IFormatProvider)\n- uid: System.TimeSpan.TryParse(System.String,System.IFormatProvider,System.TimeSpan@)\n  commentId: M:System.TimeSpan.TryParse(System.String,System.IFormatProvider,System.TimeSpan@)\n  id: TryParse(System.String,System.IFormatProvider,System.TimeSpan@)\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: TryParse(String, IFormatProvider, out TimeSpan)\n  fullName: System.TimeSpan.TryParse(System.String, System.IFormatProvider, out System.TimeSpan)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TryParse\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 301\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the string representation of a time interval to its <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> equivalent by using the specified culture-specific formatting information, and returns a value that indicates whether the conversion succeeded.</p>\\n\"\n  syntax:\n    content: public static bool TryParse(string input, IFormatProvider formatProvider, out TimeSpan result)\n    content.vb: Public Shared Function TryParse(input As String, formatProvider As IFormatProvider, ByRef result As TimeSpan) As Boolean\n    parameters:\n    - id: input\n      type: System.String\n      description: \"\\n<p>A string that specifies the time interval to convert.</p>\\n\"\n    - id: formatProvider\n      type: System.IFormatProvider\n      description: \"\\n<p>An object that supplies culture-specific formatting information.</p>\\n\"\n    - id: result\n      type: System.TimeSpan\n      description: \"\\n<p>When this method returns, contains an object that represents the time interval specified by <em>input</em>, or <xref href=\\\"System.TimeSpan.Zero\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the conversion failed. This parameter is passed uninitialized.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <em>input</em> was converted successfully; otherwise, <strong>false</strong>. This operation returns <strong>false</strong> if the <em>input</em> parameter is <strong>null</strong> or <xref href=\\\"System.String.Empty\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, has an invalid format, represents a time interval that is less than <xref href=\\\"System.TimeSpan.MinValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.TimeSpan.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, or has at least one days, hours, minutes, or seconds component outside its valid range.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.TimeSpan.TryParse(System.String, System.IFormatProvider, ByRef System.TimeSpan)\n  name.vb: TryParse(String, IFormatProvider, ByRef TimeSpan)\n  nameWithType: TimeSpan.TryParse(String, IFormatProvider, out TimeSpan)\n  nameWithType.vb: TimeSpan.TryParse(String, IFormatProvider, ByRef TimeSpan)\n- uid: System.TimeSpan.TryParse(System.String,System.TimeSpan@)\n  commentId: M:System.TimeSpan.TryParse(System.String,System.TimeSpan@)\n  id: TryParse(System.String,System.TimeSpan@)\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: TryParse(String, out TimeSpan)\n  fullName: System.TimeSpan.TryParse(System.String, out System.TimeSpan)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TryParse\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 298\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the string representation of a time interval to its <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> equivalent and returns a value that indicates whether the conversion succeeded.</p>\\n\"\n  syntax:\n    content: public static bool TryParse(string s, out TimeSpan result)\n    content.vb: Public Shared Function TryParse(s As String, ByRef result As TimeSpan) As Boolean\n    parameters:\n    - id: s\n      type: System.String\n      description: \"\\n<p>A string that specifies the time interval to convert.</p>\\n\"\n    - id: result\n      type: System.TimeSpan\n      description: \"\\n<p>When this method returns, contains an object that represents the time interval specified by <em>s</em>, or <xref href=\\\"System.TimeSpan.Zero\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the conversion failed. This parameter is passed uninitialized.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <em>s</em> was converted successfully; otherwise, <strong>false</strong>. This operation returns <strong>false</strong> if the <em>s</em> parameter is <strong>null</strong> or <xref href=\\\"System.String.Empty\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, has an invalid format, represents a time interval that is less than <xref href=\\\"System.TimeSpan.MinValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.TimeSpan.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, or has at least one days, hours, minutes, or seconds component outside its valid range.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.TimeSpan.TryParse(System.String, ByRef System.TimeSpan)\n  name.vb: TryParse(String, ByRef TimeSpan)\n  nameWithType: TimeSpan.TryParse(String, out TimeSpan)\n  nameWithType.vb: TimeSpan.TryParse(String, ByRef TimeSpan)\n- uid: System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)\n  commentId: M:System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)\n  id: TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: TryParseExact(String, String, IFormatProvider, TimeSpanStyles, out TimeSpan)\n  fullName: System.TimeSpan.TryParseExact(System.String, System.String, System.IFormatProvider, System.Globalization.TimeSpanStyles, out System.TimeSpan)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TryParseExact\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 310\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the string representation of a time interval to its <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> equivalent by using the specified format, culture-specific format information, and styles, and returns a value that indicates whether the conversion succeeded. The format of the string representation must match the specified format exactly. </p>\\n\"\n  syntax:\n    content: public static bool TryParseExact(string input, string format, IFormatProvider formatProvider, TimeSpanStyles styles, out TimeSpan result)\n    content.vb: Public Shared Function TryParseExact(input As String, format As String, formatProvider As IFormatProvider, styles As TimeSpanStyles, ByRef result As TimeSpan) As Boolean\n    parameters:\n    - id: input\n      type: System.String\n      description: \"\\n<p>A string that specifies the time interval to convert.</p>\\n\"\n    - id: format\n      type: System.String\n      description: \"\\n<p>A standard or custom format string that defines the required format of <em>input</em>.</p>\\n\"\n    - id: formatProvider\n      type: System.IFormatProvider\n      description: \"\\n<p>An object that provides culture-specific formatting information.</p>\\n\"\n    - id: styles\n      type: System.Globalization.TimeSpanStyles\n      description: \"\\n<p>One or more enumeration values that indicate the style of <em>input</em>.</p>\\n\"\n    - id: result\n      type: System.TimeSpan\n      description: \"\\n<p>When this method returns, contains an object that represents the time interval specified by <em>input</em>, or <xref href=\\\"System.TimeSpan.Zero\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the conversion failed. This parameter is passed uninitialized.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <em>input</em> was converted successfully; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.TimeSpan.TryParseExact(System.String, System.String, System.IFormatProvider, System.Globalization.TimeSpanStyles, ByRef System.TimeSpan)\n  name.vb: TryParseExact(String, String, IFormatProvider, TimeSpanStyles, ByRef TimeSpan)\n  nameWithType: TimeSpan.TryParseExact(String, String, IFormatProvider, TimeSpanStyles, out TimeSpan)\n  nameWithType.vb: TimeSpan.TryParseExact(String, String, IFormatProvider, TimeSpanStyles, ByRef TimeSpan)\n- uid: System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.TimeSpan@)\n  commentId: M:System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.TimeSpan@)\n  id: TryParseExact(System.String,System.String,System.IFormatProvider,System.TimeSpan@)\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: TryParseExact(String, String, IFormatProvider, out TimeSpan)\n  fullName: System.TimeSpan.TryParseExact(System.String, System.String, System.IFormatProvider, out System.TimeSpan)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TryParseExact\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 304\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the string representation of a time interval to its <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> equivalent by using the specified format and culture-specific format information, and returns a value that indicates whether the conversion succeeded. The format of the string representation must match the specified format exactly. </p>\\n\"\n  syntax:\n    content: public static bool TryParseExact(string input, string format, IFormatProvider formatProvider, out TimeSpan result)\n    content.vb: Public Shared Function TryParseExact(input As String, format As String, formatProvider As IFormatProvider, ByRef result As TimeSpan) As Boolean\n    parameters:\n    - id: input\n      type: System.String\n      description: \"\\n<p>A string that specifies the time interval to convert.</p>\\n\"\n    - id: format\n      type: System.String\n      description: \"\\n<p>A standard or custom format string that defines the required format of <em>input</em>.</p>\\n\"\n    - id: formatProvider\n      type: System.IFormatProvider\n      description: \"\\n<p>An object that supplies culture-specific formatting information.</p>\\n\"\n    - id: result\n      type: System.TimeSpan\n      description: \"\\n<p>When this method returns, contains an object that represents the time interval specified by <em>input</em>, or <xref href=\\\"System.TimeSpan.Zero\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the conversion failed. This parameter is passed uninitialized.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <em>input</em> was converted successfully; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.TimeSpan.TryParseExact(System.String, System.String, System.IFormatProvider, ByRef System.TimeSpan)\n  name.vb: TryParseExact(String, String, IFormatProvider, ByRef TimeSpan)\n  nameWithType: TimeSpan.TryParseExact(String, String, IFormatProvider, out TimeSpan)\n  nameWithType.vb: TimeSpan.TryParseExact(String, String, IFormatProvider, ByRef TimeSpan)\n- uid: System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)\n  commentId: M:System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)\n  id: TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: TryParseExact(String, String[], IFormatProvider, TimeSpanStyles, out TimeSpan)\n  fullName: System.TimeSpan.TryParseExact(System.String, System.String[], System.IFormatProvider, System.Globalization.TimeSpanStyles, out System.TimeSpan)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TryParseExact\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 314\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the specified string representation of a time interval to its <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> equivalent by using the specified formats, culture-specific format information, and styles, and returns a value that indicates whether the conversion succeeded. The format of the string representation must match one of the specified formats exactly. </p>\\n\"\n  syntax:\n    content: public static bool TryParseExact(string input, string[] formats, IFormatProvider formatProvider, TimeSpanStyles styles, out TimeSpan result)\n    content.vb: Public Shared Function TryParseExact(input As String, formats As String(), formatProvider As IFormatProvider, styles As TimeSpanStyles, ByRef result As TimeSpan) As Boolean\n    parameters:\n    - id: input\n      type: System.String\n      description: \"\\n<p>A string that specifies the time interval to convert.</p>\\n\"\n    - id: formats\n      type: System.String[]\n      description: \"\\n<p>A array of standard or custom format strings that define the acceptable formats of <em>input</em>.</p>\\n\"\n    - id: formatProvider\n      type: System.IFormatProvider\n      description: \"\\n<p>An object that supplies culture-specific formatting information.</p>\\n\"\n    - id: styles\n      type: System.Globalization.TimeSpanStyles\n      description: \"\\n<p>One or more enumeration values that indicate the style of <em>input</em>.</p>\\n\"\n    - id: result\n      type: System.TimeSpan\n      description: \"\\n<p>When this method returns, contains an object that represents the time interval specified by <em>input</em>, or <xref href=\\\"System.TimeSpan.Zero\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the conversion failed. This parameter is passed uninitialized.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <em>input</em> was converted successfully; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.TimeSpan.TryParseExact(System.String, System.String(), System.IFormatProvider, System.Globalization.TimeSpanStyles, ByRef System.TimeSpan)\n  name.vb: TryParseExact(String, String(), IFormatProvider, TimeSpanStyles, ByRef TimeSpan)\n  nameWithType: TimeSpan.TryParseExact(String, String[], IFormatProvider, TimeSpanStyles, out TimeSpan)\n  nameWithType.vb: TimeSpan.TryParseExact(String, String(), IFormatProvider, TimeSpanStyles, ByRef TimeSpan)\n- uid: System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.TimeSpan@)\n  commentId: M:System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.TimeSpan@)\n  id: TryParseExact(System.String,System.String[],System.IFormatProvider,System.TimeSpan@)\n  parent: System.TimeSpan\n  langs:\n  - csharp\n  - vb\n  name: TryParseExact(String, String[], IFormatProvider, out TimeSpan)\n  fullName: System.TimeSpan.TryParseExact(System.String, System.String[], System.IFormatProvider, out System.TimeSpan)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/TimeSpan.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TryParseExact\n    path: src/mscorlib/src/System/TimeSpan.cs\n    startLine: 307\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the specified string representation of a time interval to its <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> equivalent by using the specified formats and culture-specific format information, and returns a value that indicates whether the conversion succeeded. The format of the string representation must match one of the specified formats exactly. </p>\\n\"\n  syntax:\n    content: public static bool TryParseExact(string input, string[] formats, IFormatProvider formatProvider, out TimeSpan result)\n    content.vb: Public Shared Function TryParseExact(input As String, formats As String(), formatProvider As IFormatProvider, ByRef result As TimeSpan) As Boolean\n    parameters:\n    - id: input\n      type: System.String\n      description: \"\\n<p>A string that specifies the time interval to convert.</p>\\n\"\n    - id: formats\n      type: System.String[]\n      description: \"\\n<p>A array of standard or custom format strings that define the acceptable formats of <em>input</em>.</p>\\n\"\n    - id: formatProvider\n      type: System.IFormatProvider\n      description: \"\\n<p>An object that provides culture-specific formatting information.</p>\\n\"\n    - id: result\n      type: System.TimeSpan\n      description: \"\\n<p>When this method returns, contains an object that represents the time interval specified by <em>input</em>, or <xref href=\\\"System.TimeSpan.Zero\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the conversion failed. This parameter is passed uninitialized.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <em>input</em> was converted successfully; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.TimeSpan.TryParseExact(System.String, System.String(), System.IFormatProvider, ByRef System.TimeSpan)\n  name.vb: TryParseExact(String, String(), IFormatProvider, ByRef TimeSpan)\n  nameWithType: TimeSpan.TryParseExact(String, String[], IFormatProvider, out TimeSpan)\n  nameWithType.vb: TimeSpan.TryParseExact(String, String(), IFormatProvider, ByRef TimeSpan)\nreferences:\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.IComparable\n  parent: System\n  isExternal: false\n  name: IComparable\n  fullName: System.IComparable\n  nameWithType: IComparable\n  commentId: T:System.IComparable\n- uid: System.IComparable{System.TimeSpan}\n  parent: System\n  definition: System.IComparable`1\n  name: IComparable<TimeSpan>\n  fullName: System.IComparable<System.TimeSpan>\n  fullname.vb: System.IComparable(Of System.TimeSpan)\n  name.vb: IComparable(Of TimeSpan)\n  spec.csharp:\n  - uid: System.IComparable`1\n    name: IComparable\n    fullName: System.IComparable\n  - name: <\n    fullName: <\n  - uid: System.TimeSpan\n    name: TimeSpan\n    fullName: System.TimeSpan\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.IComparable`1\n    name: IComparable\n    fullName: System.IComparable\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.TimeSpan\n    name: TimeSpan\n    fullName: System.TimeSpan\n  - name: )\n    fullName: )\n  nameWithType: IComparable<TimeSpan>\n  nameWithType.vb: IComparable(Of TimeSpan)\n  commentId: T:System.IComparable{System.TimeSpan}\n- uid: System.IEquatable{System.TimeSpan}\n  parent: System\n  definition: System.IEquatable`1\n  name: IEquatable<TimeSpan>\n  fullName: System.IEquatable<System.TimeSpan>\n  fullname.vb: System.IEquatable(Of System.TimeSpan)\n  name.vb: IEquatable(Of TimeSpan)\n  spec.csharp:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    fullName: System.IEquatable\n  - name: <\n    fullName: <\n  - uid: System.TimeSpan\n    name: TimeSpan\n    fullName: System.TimeSpan\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    fullName: System.IEquatable\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.TimeSpan\n    name: TimeSpan\n    fullName: System.TimeSpan\n  - name: )\n    fullName: )\n  nameWithType: IEquatable<TimeSpan>\n  nameWithType.vb: IEquatable(Of TimeSpan)\n  commentId: T:System.IEquatable{System.TimeSpan}\n- uid: System.IFormattable\n  parent: System\n  isExternal: false\n  name: IFormattable\n  fullName: System.IFormattable\n  nameWithType: IFormattable\n  commentId: T:System.IFormattable\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.IComparable`1\n  isExternal: false\n  name: IComparable<T>\n  fullName: System.IComparable<T>\n  fullname.vb: System.IComparable(Of T)\n  name.vb: IComparable(Of T)\n  spec.csharp:\n  - uid: System.IComparable`1\n    name: IComparable\n    fullName: System.IComparable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.IComparable`1\n    name: IComparable\n    fullName: System.IComparable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IComparable<T>\n  nameWithType.vb: IComparable(Of T)\n  commentId: T:System.IComparable`1\n- uid: System.IEquatable`1\n  isExternal: false\n  name: IEquatable<T>\n  fullName: System.IEquatable<T>\n  fullname.vb: System.IEquatable(Of T)\n  name.vb: IEquatable(Of T)\n  spec.csharp:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    fullName: System.IEquatable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    fullName: System.IEquatable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IEquatable<T>\n  nameWithType.vb: IEquatable(Of T)\n  commentId: T:System.IEquatable`1\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  fullName: System.TimeSpan\n  nameWithType: TimeSpan\n  commentId: T:System.TimeSpan\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  fullName: System.Int64\n  nameWithType: Int64\n  commentId: T:System.Int64\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  fullName: System.Double\n  nameWithType: Double\n  commentId: T:System.Double\n- uid: System.IComparable{System.TimeSpan}.CompareTo(System.TimeSpan)\n  parent: System.IComparable{System.TimeSpan}\n  definition: System.IComparable`1.CompareTo(`0)\n  name: CompareTo(TimeSpan)\n  fullName: System.IComparable<System.TimeSpan>.CompareTo(System.TimeSpan)\n  fullname.vb: System.IComparable(Of System.TimeSpan).CompareTo(System.TimeSpan)\n  spec.csharp:\n  - uid: System.IComparable`1.CompareTo(`0)\n    name: CompareTo\n    fullName: System.IComparable<System.TimeSpan>.CompareTo\n  - name: (\n    fullName: (\n  - uid: System.TimeSpan\n    name: TimeSpan\n    fullName: System.TimeSpan\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IComparable`1.CompareTo(`0)\n    name: CompareTo\n    fullName: System.IComparable(Of System.TimeSpan).CompareTo\n  - name: (\n    fullName: (\n  - uid: System.TimeSpan\n    name: TimeSpan\n    fullName: System.TimeSpan\n  - name: )\n    fullName: )\n  nameWithType: IComparable<TimeSpan>.CompareTo(TimeSpan)\n  nameWithType.vb: IComparable(Of TimeSpan).CompareTo(TimeSpan)\n  commentId: M:System.IComparable{System.TimeSpan}.CompareTo(System.TimeSpan)\n- uid: System.IComparable`1.CompareTo(`0)\n  isExternal: false\n  name: CompareTo(T)\n  fullName: System.IComparable<T>.CompareTo(T)\n  fullname.vb: System.IComparable(Of T).CompareTo(T)\n  spec.csharp:\n  - uid: System.IComparable`1.CompareTo(`0)\n    name: CompareTo\n    fullName: System.IComparable<T>.CompareTo\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IComparable`1.CompareTo(`0)\n    name: CompareTo\n    fullName: System.IComparable(Of T).CompareTo\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IComparable<T>.CompareTo(T)\n  nameWithType.vb: IComparable(Of T).CompareTo(T)\n  commentId: M:System.IComparable`1.CompareTo(`0)\n- uid: System.ValueType.Equals(System.Object)\n  parent: System.ValueType\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.ValueType.Equals(System.Object)\n  spec.csharp:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ValueType.Equals(Object)\n  commentId: M:System.ValueType.Equals(System.Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  fullName: System.ValueType\n  nameWithType: ValueType\n  commentId: T:System.ValueType\n- uid: System.IEquatable{System.TimeSpan}.Equals(System.TimeSpan)\n  parent: System.IEquatable{System.TimeSpan}\n  definition: System.IEquatable`1.Equals(`0)\n  name: Equals(TimeSpan)\n  fullName: System.IEquatable<System.TimeSpan>.Equals(System.TimeSpan)\n  fullname.vb: System.IEquatable(Of System.TimeSpan).Equals(System.TimeSpan)\n  spec.csharp:\n  - uid: System.IEquatable`1.Equals(`0)\n    name: Equals\n    fullName: System.IEquatable<System.TimeSpan>.Equals\n  - name: (\n    fullName: (\n  - uid: System.TimeSpan\n    name: TimeSpan\n    fullName: System.TimeSpan\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IEquatable`1.Equals(`0)\n    name: Equals\n    fullName: System.IEquatable(Of System.TimeSpan).Equals\n  - name: (\n    fullName: (\n  - uid: System.TimeSpan\n    name: TimeSpan\n    fullName: System.TimeSpan\n  - name: )\n    fullName: )\n  nameWithType: IEquatable<TimeSpan>.Equals(TimeSpan)\n  nameWithType.vb: IEquatable(Of TimeSpan).Equals(TimeSpan)\n  commentId: M:System.IEquatable{System.TimeSpan}.Equals(System.TimeSpan)\n- uid: System.IEquatable`1.Equals(`0)\n  isExternal: false\n  name: Equals(T)\n  fullName: System.IEquatable<T>.Equals(T)\n  fullname.vb: System.IEquatable(Of T).Equals(T)\n  spec.csharp:\n  - uid: System.IEquatable`1.Equals(`0)\n    name: Equals\n    fullName: System.IEquatable<T>.Equals\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IEquatable`1.Equals(`0)\n    name: Equals\n    fullName: System.IEquatable(Of T).Equals\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IEquatable<T>.Equals(T)\n  nameWithType.vb: IEquatable(Of T).Equals(T)\n  commentId: M:System.IEquatable`1.Equals(`0)\n- uid: System.ValueType.GetHashCode\n  parent: System.ValueType\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.ValueType.GetHashCode()\n  spec.csharp:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.GetHashCode()\n  commentId: M:System.ValueType.GetHashCode\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  fullName: System.IFormatProvider\n  nameWithType: IFormatProvider\n  commentId: T:System.IFormatProvider\n- uid: System.Globalization.TimeSpanStyles\n  parent: System.Globalization\n  isExternal: false\n  name: TimeSpanStyles\n  fullName: System.Globalization.TimeSpanStyles\n  nameWithType: TimeSpanStyles\n  commentId: T:System.Globalization.TimeSpanStyles\n- uid: System.Globalization\n  isExternal: false\n  name: System.Globalization\n  fullName: System.Globalization\n  nameWithType: System.Globalization\n  commentId: N:System.Globalization\n- uid: System.String[]\n  name: String[]\n  fullName: System.String[]\n  fullname.vb: System.String()\n  name.vb: String()\n  spec.csharp:\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: String[]\n  nameWithType.vb: String()\n- uid: System.IComparable.CompareTo(System.Object)\n  parent: System.IComparable\n  isExternal: true\n  name: CompareTo(Object)\n  fullName: System.IComparable.CompareTo(System.Object)\n  spec.csharp:\n  - uid: System.IComparable.CompareTo(System.Object)\n    name: CompareTo\n    fullName: System.IComparable.CompareTo\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IComparable.CompareTo(System.Object)\n    name: CompareTo\n    fullName: System.IComparable.CompareTo\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IComparable.CompareTo(Object)\n  commentId: M:System.IComparable.CompareTo(System.Object)\n- uid: System.ValueType.ToString\n  parent: System.ValueType\n  isExternal: false\n  name: ToString()\n  fullName: System.ValueType.ToString()\n  spec.csharp:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.ToString()\n  commentId: M:System.ValueType.ToString\n- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)\n  parent: System.IFormattable\n  isExternal: true\n  name: ToString(String, IFormatProvider)\n  fullName: System.IFormattable.ToString(System.String, System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)\n    name: ToString\n    fullName: System.IFormattable.ToString\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)\n    name: ToString\n    fullName: System.IFormattable.ToString\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IFormattable.ToString(String, IFormatProvider)\n  commentId: M:System.IFormattable.ToString(System.String,System.IFormatProvider)\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n- uid: System.OverflowException\n  isExternal: false\n  name: OverflowException\n  fullName: System.OverflowException\n  nameWithType: OverflowException\n  commentId: T:System.OverflowException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.FormatException\n  parent: System\n  isExternal: false\n  name: FormatException\n  fullName: System.FormatException\n  nameWithType: FormatException\n  commentId: T:System.FormatException\n"}