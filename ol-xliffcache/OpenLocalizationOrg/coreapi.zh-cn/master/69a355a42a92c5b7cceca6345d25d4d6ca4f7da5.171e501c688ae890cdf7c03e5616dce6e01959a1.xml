{"nodes":[{"pos":[846,869],"content":"AbandonedMutexException","needQuote":true,"nodes":[{"content":"AbandonedMutexException","pos":[0,23]}]},{"pos":[3212,3237],"content":"AbandonedMutexException()","needQuote":true,"nodes":[{"content":"AbandonedMutexException()","pos":[0,25]}]},{"pos":[4494,4536],"content":"AbandonedMutexException(Int32, WaitHandle)","needQuote":true,"nodes":[{"content":"AbandonedMutexException(Int32, WaitHandle)","pos":[0,42]}]},{"pos":[6827,6858],"content":"AbandonedMutexException(String)","needQuote":true,"nodes":[{"content":"AbandonedMutexException(String)","pos":[0,31]}]},{"content":"\\n&lt;p&gt;An error message that explains the reason for the exception.&lt;/p&gt;\\n","pos":[7702,7773],"source":"\\n<p>An error message that explains the reason for the exception.</p>\\n"},{"pos":[8301,8343],"content":"AbandonedMutexException(String, Exception)","needQuote":true,"nodes":[{"content":"AbandonedMutexException(String, Exception)","pos":[0,42]}]},{"content":"\\n&lt;p&gt;An error message that explains the reason for the exception.&lt;/p&gt;\\n","pos":[9263,9334],"source":"\\n<p>An error message that explains the reason for the exception.</p>\\n"},{"content":"\\n&lt;p&gt;The exception that is the cause of the current exception.","pos":[9401,9463],"source":"\\n<p>The exception that is the cause of the current exception."},{"content":"If the &lt;em&gt;inner&lt;/em&gt; parameter is not &lt;strong&gt;null&lt;/strong&gt;, the current exception is raised in a &lt;strong&gt;catch&lt;/strong&gt; block that handles the inner exception.&lt;/p&gt;\\n","pos":[9464,9631],"source":" If the <em>inner</em> parameter is not <strong>null</strong>, the current exception is raised in a <strong>catch</strong> block that handles the inner exception.</p>\\n"},{"pos":[10293,10354],"content":"AbandonedMutexException(String, Exception, Int32, WaitHandle)","needQuote":true,"nodes":[{"content":"AbandonedMutexException(String, Exception, Int32, WaitHandle)","pos":[0,61]}]},{"content":"\\n&lt;p&gt;An error message that explains the reason for the exception.&lt;/p&gt;\\n","pos":[11566,11637],"source":"\\n<p>An error message that explains the reason for the exception.</p>\\n"},{"content":"\\n&lt;p&gt;The exception that is the cause of the current exception.","pos":[11704,11766],"source":"\\n<p>The exception that is the cause of the current exception."},{"content":"If the &lt;em&gt;inner&lt;/em&gt; parameter is not &lt;strong&gt;null&lt;/strong&gt;, the current exception is raised in a &lt;strong&gt;catch&lt;/strong&gt; block that handles the inner exception.&lt;/p&gt;\\n","pos":[11767,11934],"source":" If the <em>inner</em> parameter is not <strong>null</strong>, the current exception is raised in a <strong>catch</strong> block that handles the inner exception.</p>\\n"},{"pos":[13366,13416],"content":"AbandonedMutexException(String, Int32, WaitHandle)","needQuote":true,"nodes":[{"content":"AbandonedMutexException(String, Int32, WaitHandle)","pos":[0,50]}]},{"content":"\\n&lt;p&gt;An error message that explains the reason for the exception.&lt;/p&gt;\\n","pos":[14454,14525],"source":"\\n<p>An error message that explains the reason for the exception.</p>\\n"},{"pos":[15776,15781],"content":"Mutex","needQuote":true,"nodes":[{"content":"Mutex","pos":[0,5]}]},{"pos":[17123,17133],"content":"MutexIndex","needQuote":true,"nodes":[{"content":"MutexIndex","pos":[0,10]}]},{"pos":[18526,18542],"content":"System.Threading","needQuote":true,"nodes":[{"content":"System.Threading","pos":[0,16]}]},{"pos":[18703,18709],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18857,18866],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[19071,19084],"content":"ISerializable","needQuote":true,"nodes":[{"content":"ISerializable","pos":[0,13]}]},{"pos":[19345,19355],"content":"_Exception","needQuote":true,"nodes":[{"content":"_Exception","pos":[0,10]}]},{"pos":[19590,19608],"content":"GetBaseException()","needQuote":true,"nodes":[{"content":"GetBaseException()","pos":[0,18]}]},{"pos":[19725,19741],"content":"GetBaseException","needQuote":true,"nodes":[{"content":"GetBaseException","pos":[0,16]}]},{"pos":[19800,19801],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19828,19829],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19910,19926],"content":"GetBaseException","needQuote":true,"nodes":[{"content":"GetBaseException","pos":[0,16]}]},{"pos":[19985,19986],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20013,20014],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20213,20223],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[20324,20332],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[20383,20384],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20411,20412],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20485,20493],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[20544,20545],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20572,20573],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20854,20904],"content":"GetObjectData(SerializationInfo, StreamingContext)","needQuote":true,"nodes":[{"content":"GetObjectData(SerializationInfo, StreamingContext)","pos":[0,50]}]},{"pos":[21202,21215],"content":"GetObjectData","needQuote":true,"nodes":[{"content":"GetObjectData","pos":[0,13]}]},{"pos":[21292,21293],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21376,21393],"content":"SerializationInfo","needQuote":true,"nodes":[{"content":"SerializationInfo","pos":[0,17]}]},{"content":",","pos":[21487,21488]},{"pos":[21575,21591],"content":"StreamingContext","needQuote":true,"nodes":[{"content":"StreamingContext","pos":[0,16]}]},{"pos":[21683,21684],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21856,21869],"content":"GetObjectData","needQuote":true,"nodes":[{"content":"GetObjectData","pos":[0,13]}]},{"pos":[21946,21947],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22030,22047],"content":"SerializationInfo","needQuote":true,"nodes":[{"content":"SerializationInfo","pos":[0,17]}]},{"content":",","pos":[22141,22142]},{"pos":[22229,22245],"content":"StreamingContext","needQuote":true,"nodes":[{"content":"StreamingContext","pos":[0,16]}]},{"pos":[22337,22338],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22658,22667],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[22766,22773],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[22844,22845],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22872,22873],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22945,22952],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[23023,23024],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23051,23052],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23232,23239],"content":"Message","needQuote":true,"nodes":[{"content":"Message","pos":[0,7]}]},{"pos":[23435,23439],"content":"Data","needQuote":true,"nodes":[{"content":"Data","pos":[0,4]}]},{"pos":[23636,23650],"content":"InnerException","needQuote":true,"nodes":[{"content":"InnerException","pos":[0,14]}]},{"pos":[23872,23882],"content":"TargetSite","needQuote":true,"nodes":[{"content":"TargetSite","pos":[0,10]}]},{"pos":[24093,24103],"content":"StackTrace","needQuote":true,"nodes":[{"content":"StackTrace","pos":[0,10]}]},{"pos":[24312,24320],"content":"HelpLink","needQuote":true,"nodes":[{"content":"HelpLink","pos":[0,8]}]},{"pos":[24521,24527],"content":"Source","needQuote":true,"nodes":[{"content":"Source","pos":[0,6]}]},{"pos":[24723,24730],"content":"HResult","needQuote":true,"nodes":[{"content":"HResult","pos":[0,7]}]},{"pos":[24941,24961],"content":"SerializeObjectState","needQuote":true,"nodes":[{"content":"SerializeObjectState","pos":[0,20]}]},{"pos":[25206,25220],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[25339,25345],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[25412,25413],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25463,25469],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[25529,25530],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25613,25619],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[25686,25687],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25737,25743],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[25803,25804],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26018,26040],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[26188,26194],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[26261,26262],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26312,26318],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[26379,26380]},{"pos":[26435,26441],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[26501,26502],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26599,26605],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[26672,26673],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26723,26729],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[26790,26791]},{"pos":[26846,26852],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[26912,26913],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27158,27189],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[27355,27370],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[27446,27447],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27497,27503],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[27564,27565]},{"pos":[27620,27626],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[27686,27687],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27793,27808],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[27884,27885],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27935,27941],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[28002,28003]},{"pos":[28058,28064],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[28124,28125],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28355,28368],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[28469,28480],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[28552,28553],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28580,28581],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28654,28665],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[28737,28738],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28765,28766],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28949,28966],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[29075,29090],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[29166,29167],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29194,29195],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29272,29287],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[29363,29364],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29391,29392],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29537,29543],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[29672,29700],"content":"System.Runtime.Serialization","needQuote":true,"nodes":[{"content":"System.Runtime.Serialization","pos":[0,28]}]},{"pos":[29897,29927],"content":"System.Runtime.InteropServices","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices","pos":[0,30]}]},{"pos":[30129,30134],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[30300,30310],"content":"WaitHandle","needQuote":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"pos":[30487,30493],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[30657,30662],"content":"Mutex","needQuote":true,"nodes":[{"content":"Mutex","pos":[0,5]}]}],"content":"items:\n- uid: System.Threading.AbandonedMutexException\n  commentId: T:System.Threading.AbandonedMutexException\n  id: AbandonedMutexException\n  parent: System.Threading\n  children:\n  - System.Threading.AbandonedMutexException.#ctor\n  - System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)\n  - System.Threading.AbandonedMutexException.#ctor(System.String)\n  - System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)\n  - System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)\n  - System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)\n  - System.Threading.AbandonedMutexException.Mutex\n  - System.Threading.AbandonedMutexException.MutexIndex\n  langs:\n  - csharp\n  - vb\n  name: AbandonedMutexException\n  fullName: System.Threading.AbandonedMutexException\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/AbandonedMutexException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AbandonedMutexException\n    path: src/mscorlib/src/System/Threading/AbandonedMutexException.cs\n    startLine: 18\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>The exception that is thrown when one thread acquires a <xref href=\\\"System.Threading.Mutex\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that another thread has abandoned by exiting without releasing it.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [ComVisible(false)]\n\n      public class AbandonedMutexException : SystemException, ISerializable, _Exception\n    content.vb: >-\n      <Serializable>\n\n      <ComVisible(False)>\n\n      Public Class AbandonedMutexException\n          Inherits SystemException\n          Implements ISerializable, _Exception\n  seealso:\n  - type: System.Threading.Mutex\n    commentId: T:System.Threading.Mutex\n  inheritance:\n  - System.Object\n  - System.Exception\n  implements:\n  - System.Runtime.Serialization.ISerializable\n  - System.Runtime.InteropServices._Exception\n  inheritedMembers:\n  - System.Exception.GetBaseException\n  - System.Exception.ToString\n  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Exception.GetType\n  - System.Exception.Message\n  - System.Exception.Data\n  - System.Exception.InnerException\n  - System.Exception.TargetSite\n  - System.Exception.StackTrace\n  - System.Exception.HelpLink\n  - System.Exception.Source\n  - System.Exception.HResult\n  - System.Exception.SerializeObjectState\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: AbandonedMutexException\n- uid: System.Threading.AbandonedMutexException.#ctor\n  commentId: M:System.Threading.AbandonedMutexException.#ctor\n  id: '#ctor'\n  parent: System.Threading.AbandonedMutexException\n  langs:\n  - csharp\n  - vb\n  name: AbandonedMutexException()\n  fullName: System.Threading.AbandonedMutexException.AbandonedMutexException()\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/AbandonedMutexException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Threading/AbandonedMutexException.cs\n    startLine: 25\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Threading.AbandonedMutexException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with default values.</p>\\n\"\n  syntax:\n    content: public AbandonedMutexException()\n    content.vb: Public Sub New\n  seealso:\n  - type: System.Threading.Mutex\n    commentId: T:System.Threading.Mutex\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: AbandonedMutexException.AbandonedMutexException()\n- uid: System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)\n  commentId: M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)\n  id: '#ctor(System.Int32,System.Threading.WaitHandle)'\n  parent: System.Threading.AbandonedMutexException\n  langs:\n  - csharp\n  - vb\n  name: AbandonedMutexException(Int32, WaitHandle)\n  fullName: System.Threading.AbandonedMutexException.AbandonedMutexException(System.Int32, System.Threading.WaitHandle)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/AbandonedMutexException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Threading/AbandonedMutexException.cs\n    startLine: 40\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Threading.AbandonedMutexException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified index for the abandoned mutex, if applicable, and a <xref href=\\\"System.Threading.Mutex\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents the mutex.</p>\\n\"\n  syntax:\n    content: public AbandonedMutexException(int location, WaitHandle handle)\n    content.vb: Public Sub New(location As Integer, handle As WaitHandle)\n    parameters:\n    - id: location\n      type: System.Int32\n      description: \"\\n<p>The index of the abandoned mutex in the array of wait handles if the exception is thrown for the <xref href=\\\"System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[])\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method, or –1 if the exception is thrown for the <xref href=\\\"System.Threading.WaitHandle.WaitOne\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[])\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> methods.</p>\\n\"\n    - id: handle\n      type: System.Threading.WaitHandle\n      description: \"\\n<p>A <xref href=\\\"System.Threading.Mutex\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents the abandoned mutex.</p>\\n\"\n  seealso:\n  - type: System.Threading.Mutex\n    commentId: T:System.Threading.Mutex\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: AbandonedMutexException.AbandonedMutexException(Int32, WaitHandle)\n- uid: System.Threading.AbandonedMutexException.#ctor(System.String)\n  commentId: M:System.Threading.AbandonedMutexException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Threading.AbandonedMutexException\n  langs:\n  - csharp\n  - vb\n  name: AbandonedMutexException(String)\n  fullName: System.Threading.AbandonedMutexException.AbandonedMutexException(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/AbandonedMutexException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Threading/AbandonedMutexException.cs\n    startLine: 30\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Threading.AbandonedMutexException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified error message.</p>\\n\"\n  syntax:\n    content: public AbandonedMutexException(string message)\n    content.vb: Public Sub New(message As String)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>An error message that explains the reason for the exception.</p>\\n\"\n  seealso:\n  - type: System.Threading.Mutex\n    commentId: T:System.Threading.Mutex\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: AbandonedMutexException.AbandonedMutexException(String)\n- uid: System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)\n  commentId: M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.Threading.AbandonedMutexException\n  langs:\n  - csharp\n  - vb\n  name: AbandonedMutexException(String, Exception)\n  fullName: System.Threading.AbandonedMutexException.AbandonedMutexException(System.String, System.Exception)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/AbandonedMutexException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Threading/AbandonedMutexException.cs\n    startLine: 35\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Threading.AbandonedMutexException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified error message and inner exception. </p>\\n\"\n  syntax:\n    content: public AbandonedMutexException(string message, Exception inner)\n    content.vb: Public Sub New(message As String, inner As Exception)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>An error message that explains the reason for the exception.</p>\\n\"\n    - id: inner\n      type: System.Exception\n      description: \"\\n<p>The exception that is the cause of the current exception. If the <em>inner</em> parameter is not <strong>null</strong>, the current exception is raised in a <strong>catch</strong> block that handles the inner exception.</p>\\n\"\n  seealso:\n  - type: System.Threading.Mutex\n    commentId: T:System.Threading.Mutex\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: AbandonedMutexException.AbandonedMutexException(String, Exception)\n- uid: System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)\n  commentId: M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)\n  id: '#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)'\n  parent: System.Threading.AbandonedMutexException\n  langs:\n  - csharp\n  - vb\n  name: AbandonedMutexException(String, Exception, Int32, WaitHandle)\n  fullName: System.Threading.AbandonedMutexException.AbandonedMutexException(System.String, System.Exception, System.Int32, System.Threading.WaitHandle)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/AbandonedMutexException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Threading/AbandonedMutexException.cs\n    startLine: 52\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Threading.AbandonedMutexException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified error message, the inner exception, the index for the abandoned mutex, if applicable, and a <xref href=\\\"System.Threading.Mutex\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents the mutex.</p>\\n\"\n  syntax:\n    content: public AbandonedMutexException(string message, Exception inner, int location, WaitHandle handle)\n    content.vb: Public Sub New(message As String, inner As Exception, location As Integer, handle As WaitHandle)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>An error message that explains the reason for the exception.</p>\\n\"\n    - id: inner\n      type: System.Exception\n      description: \"\\n<p>The exception that is the cause of the current exception. If the <em>inner</em> parameter is not <strong>null</strong>, the current exception is raised in a <strong>catch</strong> block that handles the inner exception.</p>\\n\"\n    - id: location\n      type: System.Int32\n      description: \"\\n<p>The index of the abandoned mutex in the array of wait handles if the exception is thrown for the <xref href=\\\"System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[])\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method, or –1 if the exception is thrown for the <xref href=\\\"System.Threading.WaitHandle.WaitOne\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[])\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> methods.</p>\\n\"\n    - id: handle\n      type: System.Threading.WaitHandle\n      description: \"\\n<p>A <xref href=\\\"System.Threading.Mutex\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents the abandoned mutex.</p>\\n\"\n  seealso:\n  - type: System.Threading.Mutex\n    commentId: T:System.Threading.Mutex\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: AbandonedMutexException.AbandonedMutexException(String, Exception, Int32, WaitHandle)\n- uid: System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)\n  commentId: M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)\n  id: '#ctor(System.String,System.Int32,System.Threading.WaitHandle)'\n  parent: System.Threading.AbandonedMutexException\n  langs:\n  - csharp\n  - vb\n  name: AbandonedMutexException(String, Int32, WaitHandle)\n  fullName: System.Threading.AbandonedMutexException.AbandonedMutexException(System.String, System.Int32, System.Threading.WaitHandle)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/AbandonedMutexException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Threading/AbandonedMutexException.cs\n    startLine: 46\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Threading.AbandonedMutexException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified error message, the index of the abandoned mutex, if applicable, and the abandoned mutex. </p>\\n\"\n  syntax:\n    content: public AbandonedMutexException(string message, int location, WaitHandle handle)\n    content.vb: Public Sub New(message As String, location As Integer, handle As WaitHandle)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>An error message that explains the reason for the exception.</p>\\n\"\n    - id: location\n      type: System.Int32\n      description: \"\\n<p>The index of the abandoned mutex in the array of wait handles if the exception is thrown for the <xref href=\\\"System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[])\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method, or –1 if the exception is thrown for the <xref href=\\\"System.Threading.WaitHandle.WaitOne\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[])\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> methods.</p>\\n\"\n    - id: handle\n      type: System.Threading.WaitHandle\n      description: \"\\n<p>A <xref href=\\\"System.Threading.Mutex\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents the abandoned mutex.</p>\\n\"\n  seealso:\n  - type: System.Threading.Mutex\n    commentId: T:System.Threading.Mutex\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: AbandonedMutexException.AbandonedMutexException(String, Int32, WaitHandle)\n- uid: System.Threading.AbandonedMutexException.Mutex\n  commentId: P:System.Threading.AbandonedMutexException.Mutex\n  id: Mutex\n  parent: System.Threading.AbandonedMutexException\n  langs:\n  - csharp\n  - vb\n  name: Mutex\n  fullName: System.Threading.AbandonedMutexException.Mutex\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/AbandonedMutexException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Mutex\n    path: src/mscorlib/src/System/Threading/AbandonedMutexException.cs\n    startLine: 68\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>Gets the abandoned mutex that caused the exception, if known.</p>\\n\"\n  syntax:\n    content: public Mutex Mutex { get; }\n    content.vb: Public ReadOnly Property Mutex As Mutex\n    parameters: []\n    return:\n      type: System.Threading.Mutex\n      description: \"\\n<p>A <xref href=\\\"System.Threading.Mutex\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents the abandoned mutex, or <strong>null</strong> if the abandoned mutex could not be identified.</p>\\n\"\n  seealso:\n  - type: System.Threading.Mutex\n    commentId: T:System.Threading.Mutex\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: AbandonedMutexException.Mutex\n- uid: System.Threading.AbandonedMutexException.MutexIndex\n  commentId: P:System.Threading.AbandonedMutexException.MutexIndex\n  id: MutexIndex\n  parent: System.Threading.AbandonedMutexException\n  langs:\n  - csharp\n  - vb\n  name: MutexIndex\n  fullName: System.Threading.AbandonedMutexException.MutexIndex\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/AbandonedMutexException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: MutexIndex\n    path: src/mscorlib/src/System/Threading/AbandonedMutexException.cs\n    startLine: 75\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>Gets the index of the abandoned mutex that caused the exception, if known.</p>\\n\"\n  syntax:\n    content: public int MutexIndex { get; }\n    content.vb: Public ReadOnly Property MutexIndex As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The index, in the array of wait handles passed to the <xref href=\\\"System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[])\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method, of the <xref href=\\\"System.Threading.Mutex\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents the abandoned mutex, or –1 if the index of the abandoned mutex could not be determined.</p>\\n\"\n  seealso:\n  - type: System.Threading.Mutex\n    commentId: T:System.Threading.Mutex\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: AbandonedMutexException.MutexIndex\nreferences:\n- uid: System.Threading\n  isExternal: false\n  name: System.Threading\n  fullName: System.Threading\n  nameWithType: System.Threading\n  commentId: N:System.Threading\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  fullName: System.Exception\n  nameWithType: Exception\n  commentId: T:System.Exception\n- uid: System.Runtime.Serialization.ISerializable\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: ISerializable\n  fullName: System.Runtime.Serialization.ISerializable\n  nameWithType: ISerializable\n  commentId: T:System.Runtime.Serialization.ISerializable\n- uid: System.Runtime.InteropServices._Exception\n  parent: System.Runtime.InteropServices\n  isExternal: true\n  name: _Exception\n  fullName: System.Runtime.InteropServices._Exception\n  nameWithType: _Exception\n  commentId: T:System.Runtime.InteropServices._Exception\n- uid: System.Exception.GetBaseException\n  parent: System.Exception\n  isExternal: false\n  name: GetBaseException()\n  fullName: System.Exception.GetBaseException()\n  spec.csharp:\n  - uid: System.Exception.GetBaseException\n    name: GetBaseException\n    fullName: System.Exception.GetBaseException\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.GetBaseException\n    name: GetBaseException\n    fullName: System.Exception.GetBaseException\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Exception.GetBaseException()\n  commentId: M:System.Exception.GetBaseException\n- uid: System.Exception.ToString\n  parent: System.Exception\n  isExternal: false\n  name: ToString()\n  fullName: System.Exception.ToString()\n  spec.csharp:\n  - uid: System.Exception.ToString\n    name: ToString\n    fullName: System.Exception.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.ToString\n    name: ToString\n    fullName: System.Exception.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Exception.ToString()\n  commentId: M:System.Exception.ToString\n- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Exception\n  isExternal: true\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  fullName: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)\n  spec.csharp:\n  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n    name: GetObjectData\n    fullName: System.Exception.GetObjectData\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Runtime.Serialization.SerializationInfo\n    name: SerializationInfo\n    fullName: System.Runtime.Serialization.SerializationInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Runtime.Serialization.StreamingContext\n    name: StreamingContext\n    fullName: System.Runtime.Serialization.StreamingContext\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n    name: GetObjectData\n    fullName: System.Exception.GetObjectData\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Runtime.Serialization.SerializationInfo\n    name: SerializationInfo\n    fullName: System.Runtime.Serialization.SerializationInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Runtime.Serialization.StreamingContext\n    name: StreamingContext\n    fullName: System.Runtime.Serialization.StreamingContext\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)\n  commentId: M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n- uid: System.Exception.GetType\n  parent: System.Exception\n  isExternal: true\n  name: GetType()\n  fullName: System.Exception.GetType()\n  spec.csharp:\n  - uid: System.Exception.GetType\n    name: GetType\n    fullName: System.Exception.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.GetType\n    name: GetType\n    fullName: System.Exception.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Exception.GetType()\n  commentId: M:System.Exception.GetType\n- uid: System.Exception.Message\n  parent: System.Exception\n  isExternal: false\n  name: Message\n  fullName: System.Exception.Message\n  nameWithType: Exception.Message\n  commentId: P:System.Exception.Message\n- uid: System.Exception.Data\n  parent: System.Exception\n  isExternal: false\n  name: Data\n  fullName: System.Exception.Data\n  nameWithType: Exception.Data\n  commentId: P:System.Exception.Data\n- uid: System.Exception.InnerException\n  parent: System.Exception\n  isExternal: false\n  name: InnerException\n  fullName: System.Exception.InnerException\n  nameWithType: Exception.InnerException\n  commentId: P:System.Exception.InnerException\n- uid: System.Exception.TargetSite\n  parent: System.Exception\n  isExternal: true\n  name: TargetSite\n  fullName: System.Exception.TargetSite\n  nameWithType: Exception.TargetSite\n  commentId: P:System.Exception.TargetSite\n- uid: System.Exception.StackTrace\n  parent: System.Exception\n  isExternal: false\n  name: StackTrace\n  fullName: System.Exception.StackTrace\n  nameWithType: Exception.StackTrace\n  commentId: P:System.Exception.StackTrace\n- uid: System.Exception.HelpLink\n  parent: System.Exception\n  isExternal: false\n  name: HelpLink\n  fullName: System.Exception.HelpLink\n  nameWithType: Exception.HelpLink\n  commentId: P:System.Exception.HelpLink\n- uid: System.Exception.Source\n  parent: System.Exception\n  isExternal: false\n  name: Source\n  fullName: System.Exception.Source\n  nameWithType: Exception.Source\n  commentId: P:System.Exception.Source\n- uid: System.Exception.HResult\n  parent: System.Exception\n  isExternal: false\n  name: HResult\n  fullName: System.Exception.HResult\n  nameWithType: Exception.HResult\n  commentId: P:System.Exception.HResult\n- uid: System.Exception.SerializeObjectState\n  parent: System.Exception\n  isExternal: true\n  name: SerializeObjectState\n  fullName: System.Exception.SerializeObjectState\n  nameWithType: Exception.SerializeObjectState\n  commentId: E:System.Exception.SerializeObjectState\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Runtime.Serialization\n  isExternal: false\n  name: System.Runtime.Serialization\n  fullName: System.Runtime.Serialization\n  nameWithType: System.Runtime.Serialization\n  commentId: N:System.Runtime.Serialization\n- uid: System.Runtime.InteropServices\n  isExternal: false\n  name: System.Runtime.InteropServices\n  fullName: System.Runtime.InteropServices\n  nameWithType: System.Runtime.InteropServices\n  commentId: N:System.Runtime.InteropServices\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Threading.WaitHandle\n  parent: System.Threading\n  isExternal: false\n  name: WaitHandle\n  fullName: System.Threading.WaitHandle\n  nameWithType: WaitHandle\n  commentId: T:System.Threading.WaitHandle\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Threading.Mutex\n  parent: System.Threading\n  isExternal: false\n  name: Mutex\n  fullName: System.Threading.Mutex\n  nameWithType: Mutex\n  commentId: T:System.Threading.Mutex\n"}