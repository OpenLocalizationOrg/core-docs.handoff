{"nodes":[{"pos":[515,532],"content":"MethodImplOptions","needQuote":true,"nodes":[{"content":"MethodImplOptions","pos":[0,17]}]},{"pos":[1800,1818],"content":"AggressiveInlining","needQuote":true,"nodes":[{"content":"AggressiveInlining","pos":[0,18]}]},{"pos":[2984,2994],"content":"NoInlining","needQuote":true,"nodes":[{"content":"NoInlining","pos":[0,10]}]},{"pos":[4098,4112],"content":"NoOptimization","needQuote":true,"nodes":[{"content":"NoOptimization","pos":[0,14]}]},{"pos":[5266,5277],"content":"PreserveSig","needQuote":true,"nodes":[{"content":"PreserveSig","pos":[0,11]}]},{"pos":[6137,6168],"content":"System.Runtime.CompilerServices","needQuote":true,"nodes":[{"content":"System.Runtime.CompilerServices","pos":[0,31]}]},{"pos":[6435,6452],"content":"MethodImplOptions","needQuote":true,"nodes":[{"content":"MethodImplOptions","pos":[0,17]}]}],"content":"items:\n- uid: System.Runtime.CompilerServices.MethodImplOptions\n  commentId: T:System.Runtime.CompilerServices.MethodImplOptions\n  id: MethodImplOptions\n  parent: System.Runtime.CompilerServices\n  children:\n  - System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining\n  - System.Runtime.CompilerServices.MethodImplOptions.NoInlining\n  - System.Runtime.CompilerServices.MethodImplOptions.NoOptimization\n  - System.Runtime.CompilerServices.MethodImplOptions.PreserveSig\n  langs:\n  - csharp\n  - vb\n  name: MethodImplOptions\n  fullName: System.Runtime.CompilerServices.MethodImplOptions\n  type: Enum\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/MethodImplAttribute.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: MethodImplOptions\n    path: src/mscorlib/src/System/Runtime/CompilerServices/MethodImplAttribute.cs\n    startLine: 12\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Defines the details of how a method is implemented.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [Flags]\n\n      [ComVisible(true)]\n\n      public enum MethodImplOptions\n    content.vb: >-\n      <Serializable>\n\n      <Flags>\n\n      <ComVisible(True)>\n\n      Public Enum MethodImplOptions\n  attributes:\n  - type: System.FlagsAttribute\n    ctor: System.FlagsAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - enum\n  modifiers.vb:\n  - Public\n  - Enum\n  nameWithType: MethodImplOptions\n- uid: System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining\n  commentId: F:System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining\n  id: AggressiveInlining\n  parent: System.Runtime.CompilerServices.MethodImplOptions\n  langs:\n  - csharp\n  - vb\n  name: AggressiveInlining\n  fullName: System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/MethodImplAttribute.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AggressiveInlining\n    path: src/mscorlib/src/System/Runtime/CompilerServices/MethodImplAttribute.cs\n    startLine: 23\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>The method should be inlined if possible.</p>\\n\"\n  syntax:\n    content: >-\n      [ComVisible(false)]\n\n      AggressiveInlining = 256\n    content.vb: >-\n      <ComVisible(False)>\n\n      AggressiveInlining = 256\n    return:\n      type: System.Runtime.CompilerServices.MethodImplOptions\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: MethodImplOptions.AggressiveInlining\n- uid: System.Runtime.CompilerServices.MethodImplOptions.NoInlining\n  commentId: F:System.Runtime.CompilerServices.MethodImplOptions.NoInlining\n  id: NoInlining\n  parent: System.Runtime.CompilerServices.MethodImplOptions\n  langs:\n  - csharp\n  - vb\n  name: NoInlining\n  fullName: System.Runtime.CompilerServices.MethodImplOptions.NoInlining\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/MethodImplAttribute.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: NoInlining\n    path: src/mscorlib/src/System/Runtime/CompilerServices/MethodImplAttribute.cs\n    startLine: 22\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>The method cannot be inlined. Inlining is an optimization by which a method call is replaced with the method body.</p>\\n\"\n  syntax:\n    content: NoInlining = 8\n    return:\n      type: System.Runtime.CompilerServices.MethodImplOptions\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: MethodImplOptions.NoInlining\n- uid: System.Runtime.CompilerServices.MethodImplOptions.NoOptimization\n  commentId: F:System.Runtime.CompilerServices.MethodImplOptions.NoOptimization\n  id: NoOptimization\n  parent: System.Runtime.CompilerServices.MethodImplOptions\n  langs:\n  - csharp\n  - vb\n  name: NoOptimization\n  fullName: System.Runtime.CompilerServices.MethodImplOptions.NoOptimization\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/MethodImplAttribute.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: NoOptimization\n    path: src/mscorlib/src/System/Runtime/CompilerServices/MethodImplAttribute.cs\n    startLine: 25\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>The method is not optimized by the just-in-time (JIT) compiler or by native code generation (see Ngen.exe) when debugging possible code generation problems.</p>\\n\"\n  syntax:\n    content: NoOptimization = 64\n    return:\n      type: System.Runtime.CompilerServices.MethodImplOptions\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: MethodImplOptions.NoOptimization\n- uid: System.Runtime.CompilerServices.MethodImplOptions.PreserveSig\n  commentId: F:System.Runtime.CompilerServices.MethodImplOptions.PreserveSig\n  id: PreserveSig\n  parent: System.Runtime.CompilerServices.MethodImplOptions\n  langs:\n  - csharp\n  - vb\n  name: PreserveSig\n  fullName: System.Runtime.CompilerServices.MethodImplOptions.PreserveSig\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/MethodImplAttribute.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: PreserveSig\n    path: src/mscorlib/src/System/Runtime/CompilerServices/MethodImplAttribute.cs\n    startLine: 19\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>The method signature is exported exactly as declared.</p>\\n\"\n  syntax:\n    content: PreserveSig = 128\n    return:\n      type: System.Runtime.CompilerServices.MethodImplOptions\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: MethodImplOptions.PreserveSig\nreferences:\n- uid: System.Runtime.CompilerServices\n  isExternal: false\n  name: System.Runtime.CompilerServices\n  fullName: System.Runtime.CompilerServices\n  nameWithType: System.Runtime.CompilerServices\n  commentId: N:System.Runtime.CompilerServices\n- uid: System.Runtime.CompilerServices.MethodImplOptions\n  parent: System.Runtime.CompilerServices\n  isExternal: false\n  name: MethodImplOptions\n  fullName: System.Runtime.CompilerServices.MethodImplOptions\n  nameWithType: MethodImplOptions\n  commentId: T:System.Runtime.CompilerServices.MethodImplOptions\n"}