{"nodes":[{"pos":[701,704],"content":"Oid","needQuote":true,"nodes":[{"content":"Oid","pos":[0,3]}]},{"pos":[2126,2134],"content":"Oid(Oid)","needQuote":true,"nodes":[{"content":"Oid(Oid)","pos":[0,8]}]},{"content":"\\n&lt;p&gt;The object identifier information to use to create the new object identifier.&lt;/p&gt;\\n","pos":[3115,3203],"source":"\\n<p>The object identifier information to use to create the new object identifier.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;oid &lt;/em&gt;is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[3322,3373],"source":"\\n<p>\\n<em>oid </em>is <strong>null</strong>.</p>\\n"},{"pos":[3699,3710],"content":"Oid(String)","needQuote":true,"nodes":[{"content":"Oid(String)","pos":[0,11]}]},{"content":"\\n&lt;p&gt;An object identifier.&lt;/p&gt;\\n","pos":[4666,4698],"source":"\\n<p>An object identifier.</p>\\n"},{"pos":[5069,5088],"content":"Oid(String, String)","needQuote":true,"nodes":[{"content":"Oid(String, String)","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The dotted number of the identifier.&lt;/p&gt;\\n","pos":[6027,6074],"source":"\\n<p>The dotted number of the identifier.</p>\\n"},{"content":"\\n&lt;p&gt;The friendly name of the identifier.&lt;/p&gt;\\n","pos":[6145,6192],"source":"\\n<p>The friendly name of the identifier.</p>\\n"},{"pos":[6503,6515],"content":"FriendlyName","needQuote":true,"nodes":[{"content":"FriendlyName","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The friendly name of the identifier.&lt;/p&gt;\\n","pos":[7286,7333],"source":"\\n<p>The friendly name of the identifier.</p>\\n"},{"pos":[7632,7637],"content":"Value","needQuote":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"content":"\\n&lt;p&gt;The dotted number of the identifier.&lt;/p&gt;\\n","pos":[8380,8427],"source":"\\n<p>The dotted number of the identifier.</p>\\n"},{"pos":[8911,8945],"content":"FromFriendlyName(String, OidGroup)","needQuote":true,"nodes":[{"content":"FromFriendlyName(String, OidGroup)","pos":[0,34]}]},{"content":"\\n&lt;p&gt;The friendly name of the identifier.&lt;/p&gt;\\n","pos":[9987,10034],"source":"\\n<p>The friendly name of the identifier.</p>\\n"},{"content":"\\n&lt;p&gt;The group to search in.&lt;/p&gt;\\n","pos":[10122,10156],"source":"\\n<p>The group to search in.</p>\\n"},{"content":"\\n&lt;p&gt;An object that represents the specified OID.&lt;/p&gt;\\n","pos":[10235,10290],"source":"\\n<p>An object that represents the specified OID.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;friendlyName &lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[10409,10470],"source":"\\n<p>\\n<em>friendlyName </em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The OID was not found.&lt;/p&gt;\\n","pos":[10621,10654],"source":"\\n<p>The OID was not found.</p>\\n"},{"pos":[11161,11191],"content":"FromOidValue(String, OidGroup)","needQuote":true,"nodes":[{"content":"FromOidValue(String, OidGroup)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;The OID value.&lt;/p&gt;\\n","pos":[12189,12214],"source":"\\n<p>The OID value.</p>\\n"},{"content":"\\n&lt;p&gt;The group to search in.&lt;/p&gt;\\n","pos":[12302,12336],"source":"\\n<p>The group to search in.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;oidValue&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[12666,12722],"source":"\\n<p>\\n<em>oidValue</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The friendly name for the OID value was not found.&lt;/p&gt;\\n","pos":[12873,12934],"source":"\\n<p>The friendly name for the OID value was not found.</p>\\n"},{"pos":[13143,13171],"content":"System.Security.Cryptography","needQuote":true,"nodes":[{"content":"System.Security.Cryptography","pos":[0,28]}]},{"pos":[13368,13374],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13534,13544],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[13639,13647],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[13716,13717],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13744,13745],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13815,13823],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[13892,13893],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13920,13921],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14104,14118],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[14237,14243],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14310,14311],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14361,14367],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14427,14428],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14511,14517],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14584,14585],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14635,14641],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14701,14702],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14916,14938],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[15086,15092],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[15159,15160],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15210,15216],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[15277,15278]},{"pos":[15333,15339],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15399,15400],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15497,15503],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[15570,15571],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15621,15627],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[15688,15689]},{"pos":[15744,15750],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15810,15811],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16056,16087],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[16253,16268],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[16344,16345],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16395,16401],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16462,16463]},{"pos":[16518,16524],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16584,16585],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16691,16706],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[16782,16783],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16833,16839],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16900,16901]},{"pos":[16956,16962],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17022,17023],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17253,17266],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[17367,17378],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[17450,17451],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17478,17479],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17552,17563],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[17635,17636],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17663,17664],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17839,17848],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[17941,17948],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[18016,18017],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18044,18045],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18114,18121],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[18189,18190],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18217,18218],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18393,18410],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[18519,18534],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[18610,18611],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18638,18639],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18716,18731],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[18807,18808],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18835,18836],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18981,18987],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[19159,19162],"content":"Oid","needQuote":true,"nodes":[{"content":"Oid","pos":[0,3]}]},{"pos":[19342,19348],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[19539,19547],"content":"OidGroup","needQuote":true,"nodes":[{"content":"OidGroup","pos":[0,8]}]},{"pos":[19740,19761],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[19972,19994],"content":"CryptographicException","needQuote":true,"nodes":[{"content":"CryptographicException","pos":[0,22]}]}],"content":"items:\n- uid: System.Security.Cryptography.Oid\n  commentId: T:System.Security.Cryptography.Oid\n  id: Oid\n  parent: System.Security.Cryptography\n  children:\n  - System.Security.Cryptography.Oid.#ctor(System.Security.Cryptography.Oid)\n  - System.Security.Cryptography.Oid.#ctor(System.String)\n  - System.Security.Cryptography.Oid.#ctor(System.String,System.String)\n  - System.Security.Cryptography.Oid.FriendlyName\n  - System.Security.Cryptography.Oid.FromFriendlyName(System.String,System.Security.Cryptography.OidGroup)\n  - System.Security.Cryptography.Oid.FromOidValue(System.String,System.Security.Cryptography.OidGroup)\n  - System.Security.Cryptography.Oid.Value\n  langs:\n  - csharp\n  - vb\n  name: Oid\n  fullName: System.Security.Cryptography.Oid\n  type: Class\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Oid\n    path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs\n    startLine: 22\n  assemblies:\n  - System.Security.Cryptography.Encoding\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Represents a cryptographic object identifier. This class cannot be inherited.</p>\\n\"\n  syntax:\n    content: public sealed class Oid\n    content.vb: Public NotInheritable Class Oid\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: Oid\n- uid: System.Security.Cryptography.Oid.#ctor(System.Security.Cryptography.Oid)\n  commentId: M:System.Security.Cryptography.Oid.#ctor(System.Security.Cryptography.Oid)\n  id: '#ctor(System.Security.Cryptography.Oid)'\n  parent: System.Security.Cryptography.Oid\n  langs:\n  - csharp\n  - vb\n  name: Oid(Oid)\n  fullName: System.Security.Cryptography.Oid.Oid(System.Security.Cryptography.Oid)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs\n    startLine: 24\n  assemblies:\n  - System.Security.Cryptography.Encoding\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Cryptography.Oid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using the specified <xref href=\\\"System.Security.Cryptography.Oid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public Oid(Oid oid)\n    content.vb: Public Sub New(oid As Oid)\n    parameters:\n    - id: oid\n      type: System.Security.Cryptography.Oid\n      description: \"\\n<p>The object identifier information to use to create the new object identifier.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>oid </em>is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Oid.Oid(Oid)\n- uid: System.Security.Cryptography.Oid.#ctor(System.String)\n  commentId: M:System.Security.Cryptography.Oid.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Security.Cryptography.Oid\n  langs:\n  - csharp\n  - vb\n  name: Oid(String)\n  fullName: System.Security.Cryptography.Oid.Oid(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs\n    startLine: 25\n  assemblies:\n  - System.Security.Cryptography.Encoding\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Cryptography.Oid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using a string value of an <xref href=\\\"System.Security.Cryptography.Oid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public Oid(string oid)\n    content.vb: Public Sub New(oid As String)\n    parameters:\n    - id: oid\n      type: System.String\n      description: \"\\n<p>An object identifier.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Oid.Oid(String)\n- uid: System.Security.Cryptography.Oid.#ctor(System.String,System.String)\n  commentId: M:System.Security.Cryptography.Oid.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.Security.Cryptography.Oid\n  langs:\n  - csharp\n  - vb\n  name: Oid(String, String)\n  fullName: System.Security.Cryptography.Oid.Oid(System.String, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs\n    startLine: 26\n  assemblies:\n  - System.Security.Cryptography.Encoding\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Cryptography.Oid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using the specified value and friendly name.</p>\\n\"\n  syntax:\n    content: public Oid(string value, string friendlyName)\n    content.vb: Public Sub New(value As String, friendlyName As String)\n    parameters:\n    - id: value\n      type: System.String\n      description: \"\\n<p>The dotted number of the identifier.</p>\\n\"\n    - id: friendlyName\n      type: System.String\n      description: \"\\n<p>The friendly name of the identifier.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Oid.Oid(String, String)\n- uid: System.Security.Cryptography.Oid.FriendlyName\n  commentId: P:System.Security.Cryptography.Oid.FriendlyName\n  id: FriendlyName\n  parent: System.Security.Cryptography.Oid\n  langs:\n  - csharp\n  - vb\n  name: FriendlyName\n  fullName: System.Security.Cryptography.Oid.FriendlyName\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: FriendlyName\n    path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs\n    startLine: 27\n  assemblies:\n  - System.Security.Cryptography.Encoding\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Gets or sets the friendly name of the identifier.</p>\\n\"\n  syntax:\n    content: public string FriendlyName { get; set; }\n    content.vb: Public Property FriendlyName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The friendly name of the identifier.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: Oid.FriendlyName\n- uid: System.Security.Cryptography.Oid.Value\n  commentId: P:System.Security.Cryptography.Oid.Value\n  id: Value\n  parent: System.Security.Cryptography.Oid\n  langs:\n  - csharp\n  - vb\n  name: Value\n  fullName: System.Security.Cryptography.Oid.Value\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Value\n    path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs\n    startLine: 28\n  assemblies:\n  - System.Security.Cryptography.Encoding\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Gets or sets the dotted number of the identifier.</p>\\n\"\n  syntax:\n    content: public string Value { get; set; }\n    content.vb: Public Property Value As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The dotted number of the identifier.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: Oid.Value\n- uid: System.Security.Cryptography.Oid.FromFriendlyName(System.String,System.Security.Cryptography.OidGroup)\n  commentId: M:System.Security.Cryptography.Oid.FromFriendlyName(System.String,System.Security.Cryptography.OidGroup)\n  id: FromFriendlyName(System.String,System.Security.Cryptography.OidGroup)\n  parent: System.Security.Cryptography.Oid\n  langs:\n  - csharp\n  - vb\n  name: FromFriendlyName(String, OidGroup)\n  fullName: System.Security.Cryptography.Oid.FromFriendlyName(System.String, System.Security.Cryptography.OidGroup)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: FromFriendlyName\n    path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs\n    startLine: 29\n  assemblies:\n  - System.Security.Cryptography.Encoding\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Creates an <xref href=\\\"System.Security.Cryptography.Oid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object from an OID friendly name by searching the specified group.</p>\\n\"\n  syntax:\n    content: public static Oid FromFriendlyName(string friendlyName, OidGroup group)\n    content.vb: Public Shared Function FromFriendlyName(friendlyName As String, group As OidGroup) As Oid\n    parameters:\n    - id: friendlyName\n      type: System.String\n      description: \"\\n<p>The friendly name of the identifier.</p>\\n\"\n    - id: group\n      type: System.Security.Cryptography.OidGroup\n      description: \"\\n<p>The group to search in.</p>\\n\"\n    return:\n      type: System.Security.Cryptography.Oid\n      description: \"\\n<p>An object that represents the specified OID.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>friendlyName </em> is <strong>null</strong>.</p>\\n\"\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"\\n<p>The OID was not found.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Oid.FromFriendlyName(String, OidGroup)\n- uid: System.Security.Cryptography.Oid.FromOidValue(System.String,System.Security.Cryptography.OidGroup)\n  commentId: M:System.Security.Cryptography.Oid.FromOidValue(System.String,System.Security.Cryptography.OidGroup)\n  id: FromOidValue(System.String,System.Security.Cryptography.OidGroup)\n  parent: System.Security.Cryptography.Oid\n  langs:\n  - csharp\n  - vb\n  name: FromOidValue(String, OidGroup)\n  fullName: System.Security.Cryptography.Oid.FromOidValue(System.String, System.Security.Cryptography.OidGroup)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: FromOidValue\n    path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs\n    startLine: 30\n  assemblies:\n  - System.Security.Cryptography.Encoding\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Creates an <xref href=\\\"System.Security.Cryptography.Oid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object by using the specified OID value and group.</p>\\n\"\n  syntax:\n    content: public static Oid FromOidValue(string oidValue, OidGroup group)\n    content.vb: Public Shared Function FromOidValue(oidValue As String, group As OidGroup) As Oid\n    parameters:\n    - id: oidValue\n      type: System.String\n      description: \"\\n<p>The OID value.</p>\\n\"\n    - id: group\n      type: System.Security.Cryptography.OidGroup\n      description: \"\\n<p>The group to search in.</p>\\n\"\n    return:\n      type: System.Security.Cryptography.Oid\n      description: \"\\n<p>A new instance of an <xref href=\\\"System.Security.Cryptography.Oid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>oidValue</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"\\n<p>The friendly name for the OID value was not found.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Oid.FromOidValue(String, OidGroup)\nreferences:\n- uid: System.Security.Cryptography\n  isExternal: false\n  name: System.Security.Cryptography\n  fullName: System.Security.Cryptography\n  commentId: N:System.Security.Cryptography\n  nameWithType: System.Security.Cryptography\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Security.Cryptography.Oid\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: Oid\n  fullName: System.Security.Cryptography.Oid\n  commentId: T:System.Security.Cryptography.Oid\n  nameWithType: Oid\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Security.Cryptography.OidGroup\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: OidGroup\n  fullName: System.Security.Cryptography.OidGroup\n  commentId: T:System.Security.Cryptography.OidGroup\n  nameWithType: OidGroup\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.Security.Cryptography.CryptographicException\n  isExternal: false\n  name: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n  commentId: T:System.Security.Cryptography.CryptographicException\n  nameWithType: CryptographicException\n"}