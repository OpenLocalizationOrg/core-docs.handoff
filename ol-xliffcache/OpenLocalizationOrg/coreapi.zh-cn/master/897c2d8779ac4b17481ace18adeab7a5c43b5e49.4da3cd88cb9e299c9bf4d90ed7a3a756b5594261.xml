{"nodes":[{"pos":[501,511],"content":"XmlComment","needQuote":true,"nodes":[{"content":"XmlComment","pos":[0,10]}]},{"pos":[4335,4366],"content":"XmlComment(String, XmlDocument)","needQuote":true,"nodes":[{"content":"XmlComment(String, XmlDocument)","pos":[0,31]}]},{"content":"\\n&lt;p&gt;The content of the comment element.&lt;/p&gt;\\n","pos":[5173,5219],"source":"\\n<p>The content of the comment element.</p>\\n"},{"content":"\\n&lt;p&gt;The parent XML document.&lt;/p&gt;\\n","pos":[5290,5325],"source":"\\n<p>The parent XML document.</p>\\n"},{"pos":[5619,5628],"content":"LocalName","needQuote":true,"nodes":[{"content":"LocalName","pos":[0,9]}]},{"content":"\\n&lt;p&gt;For comment nodes, the value is &lt;strong&gt;#comment&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[6289,6358],"source":"\\n<p>For comment nodes, the value is <strong>#comment</strong>.</p>\\n"},{"pos":[6700,6704],"content":"Name","needQuote":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"content":"\\n&lt;p&gt;For comment nodes, the value is &lt;strong&gt;#comment&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[7349,7418],"source":"\\n<p>For comment nodes, the value is <strong>#comment</strong>.</p>\\n"},{"pos":[7762,7770],"content":"NodeType","needQuote":true,"nodes":[{"content":"NodeType","pos":[0,8]}]},{"content":"\\n&lt;p&gt;For comment nodes, the value is XmlNodeType.Comment.&lt;/p&gt;\\n","pos":[8448,8511],"source":"\\n<p>For comment nodes, the value is XmlNodeType.Comment.</p>\\n"},{"pos":[8998,9016],"content":"CloneNode(Boolean)","needQuote":true,"nodes":[{"content":"CloneNode(Boolean)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to recursively clone the subtree under the specified node; &lt;strong&gt;false&lt;/strong&gt; to clone only the node itself.","pos":[9705,9846],"source":"\\n<p>\\n<strong>true</strong> to recursively clone the subtree under the specified node; <strong>false</strong> to clone only the node itself."},{"content":"Because comment nodes do not have children, the cloned node always includes the text content, regardless of the parameter setting.","pos":[9847,9977]},{"content":"&lt;/p&gt;\\n","pos":[9978,9984],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The cloned node.&lt;/p&gt;\\n","pos":[10049,10076],"source":"\\n<p>The cloned node.</p>\\n"},{"pos":[10518,10543],"content":"WriteContentTo(XmlWriter)","needQuote":true,"nodes":[{"content":"WriteContentTo(XmlWriter)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;The &lt;strong&gt;XmlWriter&lt;/strong&gt; to which you want to save.","pos":[11414,11476],"source":"\\n<p>The <strong>XmlWriter</strong> to which you want to save."},{"content":"&lt;/p&gt;\\n","pos":[11477,11483],"source":" </p>\\n"},{"pos":[11922,11940],"content":"WriteTo(XmlWriter)","needQuote":true,"nodes":[{"content":"WriteTo(XmlWriter)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The &lt;strong&gt;XmlWriter&lt;/strong&gt; to which you want to save.","pos":[12692,12754],"source":"\\n<p>The <strong>XmlWriter</strong> to which you want to save."},{"content":"&lt;/p&gt;\\n","pos":[12755,12761],"source":" </p>\\n"},{"pos":[13015,13025],"content":"System.Xml","needQuote":true,"nodes":[{"content":"System.Xml","pos":[0,10]}]},{"pos":[13168,13174],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13328,13335],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[13506,13519],"content":"XmlLinkedNode","needQuote":true,"nodes":[{"content":"XmlLinkedNode","pos":[0,13]}]},{"pos":[13711,13727],"content":"XmlCharacterData","needQuote":true,"nodes":[{"content":"XmlCharacterData","pos":[0,16]}]},{"pos":[13939,13950],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[14174,14178],"content":"Data","needQuote":true,"nodes":[{"content":"Data","pos":[0,4]}]},{"pos":[14418,14424],"content":"Length","needQuote":true,"nodes":[{"content":"Length","pos":[0,6]}]},{"pos":[14669,14674],"content":"Value","needQuote":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[14935,14953],"content":"AppendData(String)","needQuote":true,"nodes":[{"content":"AppendData(String)","pos":[0,18]}]},{"pos":[15108,15118],"content":"AppendData","needQuote":true,"nodes":[{"content":"AppendData","pos":[0,10]}]},{"pos":[15182,15183],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15233,15239],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[15299,15300],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15401,15411],"content":"AppendData","needQuote":true,"nodes":[{"content":"AppendData","pos":[0,10]}]},{"pos":[15475,15476],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15526,15532],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[15592,15593],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15869,15893],"content":"DeleteData(Int32, Int32)","needQuote":true,"nodes":[{"content":"DeleteData(Int32, Int32)","pos":[0,24]}]},{"pos":[16073,16083],"content":"DeleteData","needQuote":true,"nodes":[{"content":"DeleteData","pos":[0,10]}]},{"pos":[16147,16148],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16197,16202],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[16262,16263]},{"pos":[16317,16322],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[16381,16382],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16495,16505],"content":"DeleteData","needQuote":true,"nodes":[{"content":"DeleteData","pos":[0,10]}]},{"pos":[16569,16570],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16619,16624],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[16684,16685]},{"pos":[16739,16744],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[16803,16804],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17099,17124],"content":"InsertData(Int32, String)","needQuote":true,"nodes":[{"content":"InsertData(Int32, String)","pos":[0,25]}]},{"pos":[17306,17316],"content":"InsertData","needQuote":true,"nodes":[{"content":"InsertData","pos":[0,10]}]},{"pos":[17380,17381],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17430,17435],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[17495,17496]},{"pos":[17551,17557],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[17617,17618],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17732,17742],"content":"InsertData","needQuote":true,"nodes":[{"content":"InsertData","pos":[0,10]}]},{"pos":[17806,17807],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17856,17861],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[17921,17922]},{"pos":[17977,17983],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[18043,18044],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18355,18388],"content":"ReplaceData(Int32, Int32, String)","needQuote":true,"nodes":[{"content":"ReplaceData(Int32, Int32, String)","pos":[0,33]}]},{"pos":[18599,18610],"content":"ReplaceData","needQuote":true,"nodes":[{"content":"ReplaceData","pos":[0,11]}]},{"pos":[18675,18676],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18725,18730],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[18790,18791]},{"pos":[18845,18850],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[18910,18911]},{"pos":[18966,18972],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[19032,19033],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19161,19172],"content":"ReplaceData","needQuote":true,"nodes":[{"content":"ReplaceData","pos":[0,11]}]},{"pos":[19237,19238],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19287,19292],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[19352,19353]},{"pos":[19407,19412],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[19472,19473]},{"pos":[19528,19534],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[19594,19595],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19912,19935],"content":"Substring(Int32, Int32)","needQuote":true,"nodes":[{"content":"Substring(Int32, Int32)","pos":[0,23]}]},{"pos":[20113,20122],"content":"Substring","needQuote":true,"nodes":[{"content":"Substring","pos":[0,9]}]},{"pos":[20185,20186],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20235,20240],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[20300,20301]},{"pos":[20355,20360],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[20419,20420],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20532,20541],"content":"Substring","needQuote":true,"nodes":[{"content":"Substring","pos":[0,9]}]},{"pos":[20604,20605],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20654,20659],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[20719,20720]},{"pos":[20774,20779],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[20838,20839],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21100,21111],"content":"NextSibling","needQuote":true,"nodes":[{"content":"NextSibling","pos":[0,11]}]},{"pos":[21366,21381],"content":"PreviousSibling","needQuote":true,"nodes":[{"content":"PreviousSibling","pos":[0,15]}]},{"pos":[21631,21641],"content":"Attributes","needQuote":true,"nodes":[{"content":"Attributes","pos":[0,10]}]},{"pos":[21855,21862],"content":"BaseURI","needQuote":true,"nodes":[{"content":"BaseURI","pos":[0,7]}]},{"pos":[22070,22080],"content":"ChildNodes","needQuote":true,"nodes":[{"content":"ChildNodes","pos":[0,10]}]},{"pos":[22297,22307],"content":"FirstChild","needQuote":true,"nodes":[{"content":"FirstChild","pos":[0,10]}]},{"pos":[22527,22540],"content":"HasChildNodes","needQuote":true,"nodes":[{"content":"HasChildNodes","pos":[0,13]}]},{"pos":[22765,22774],"content":"InnerText","needQuote":true,"nodes":[{"content":"InnerText","pos":[0,9]}]},{"pos":[22986,22994],"content":"InnerXml","needQuote":true,"nodes":[{"content":"InnerXml","pos":[0,8]}]},{"pos":[23205,23215],"content":"IsReadOnly","needQuote":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[23440,23452],"content":"Item[String]","needQuote":true,"nodes":[{"content":"Item[String]","pos":[0,12]}]},{"pos":[23655,23659],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"content":"[","pos":[23709,23710]},{"pos":[23763,23769],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":"]","pos":[23830,23831]},{"pos":[23920,23924],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"pos":[23973,23974],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24024,24030],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[24090,24091],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24355,24375],"content":"Item[String, String]","needQuote":true,"nodes":[{"content":"Item[String, String]","pos":[0,20]}]},{"pos":[24630,24634],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"content":"[","pos":[24684,24685]},{"pos":[24738,24744],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[24805,24806]},{"pos":[24861,24867],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":"]","pos":[24928,24929]},{"pos":[25032,25036],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"pos":[25085,25086],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25136,25142],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[25203,25204]},{"pos":[25259,25265],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[25325,25326],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25597,25606],"content":"LastChild","needQuote":true,"nodes":[{"content":"LastChild","pos":[0,9]}]},{"pos":[25822,25834],"content":"NamespaceURI","needQuote":true,"nodes":[{"content":"NamespaceURI","pos":[0,12]}]},{"pos":[26055,26063],"content":"OuterXml","needQuote":true,"nodes":[{"content":"OuterXml","pos":[0,8]}]},{"pos":[26277,26290],"content":"OwnerDocument","needQuote":true,"nodes":[{"content":"OwnerDocument","pos":[0,13]}]},{"pos":[26516,26526],"content":"ParentNode","needQuote":true,"nodes":[{"content":"ParentNode","pos":[0,10]}]},{"pos":[26739,26745],"content":"Prefix","needQuote":true,"nodes":[{"content":"Prefix","pos":[0,6]}]},{"pos":[26952,26964],"content":"PreviousText","needQuote":true,"nodes":[{"content":"PreviousText","pos":[0,12]}]},{"pos":[27208,27228],"content":"AppendChild(XmlNode)","needQuote":true,"nodes":[{"content":"AppendChild(XmlNode)","pos":[0,20]}]},{"pos":[27377,27388],"content":"AppendChild","needQuote":true,"nodes":[{"content":"AppendChild","pos":[0,11]}]},{"pos":[27444,27445],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27500,27507],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[27551,27552],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27650,27661],"content":"AppendChild","needQuote":true,"nodes":[{"content":"AppendChild","pos":[0,11]}]},{"pos":[27717,27718],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27773,27780],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[27824,27825],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28050,28065],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[28180,28193],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[28251,28252],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28279,28280],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28360,28373],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[28431,28432],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28459,28460],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28683,28711],"content":"GetNamespaceOfPrefix(String)","needQuote":true,"nodes":[{"content":"GetNamespaceOfPrefix(String)","pos":[0,28]}]},{"pos":[28868,28888],"content":"GetNamespaceOfPrefix","needQuote":true,"nodes":[{"content":"GetNamespaceOfPrefix","pos":[0,20]}]},{"pos":[28953,28954],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29004,29010],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[29070,29071],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29173,29193],"content":"GetNamespaceOfPrefix","needQuote":true,"nodes":[{"content":"GetNamespaceOfPrefix","pos":[0,20]}]},{"pos":[29258,29259],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29309,29315],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[29375,29376],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29634,29662],"content":"GetPrefixOfNamespace(String)","needQuote":true,"nodes":[{"content":"GetPrefixOfNamespace(String)","pos":[0,28]}]},{"pos":[29819,29839],"content":"GetPrefixOfNamespace","needQuote":true,"nodes":[{"content":"GetPrefixOfNamespace","pos":[0,20]}]},{"pos":[29904,29905],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29955,29961],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[30021,30022],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30124,30144],"content":"GetPrefixOfNamespace","needQuote":true,"nodes":[{"content":"GetPrefixOfNamespace","pos":[0,20]}]},{"pos":[30209,30210],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30260,30266],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[30326,30327],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30601,30630],"content":"InsertAfter(XmlNode, XmlNode)","needQuote":true,"nodes":[{"content":"InsertAfter(XmlNode, XmlNode)","pos":[0,29]}]},{"pos":[30818,30829],"content":"InsertAfter","needQuote":true,"nodes":[{"content":"InsertAfter","pos":[0,11]}]},{"pos":[30885,30886],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30941,30948],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"content":",","pos":[30993,30994]},{"pos":[31054,31061],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[31105,31106],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31223,31234],"content":"InsertAfter","needQuote":true,"nodes":[{"content":"InsertAfter","pos":[0,11]}]},{"pos":[31290,31291],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31346,31353],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"content":",","pos":[31398,31399]},{"pos":[31459,31466],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[31510,31511],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31802,31832],"content":"InsertBefore(XmlNode, XmlNode)","needQuote":true,"nodes":[{"content":"InsertBefore(XmlNode, XmlNode)","pos":[0,30]}]},{"pos":[32022,32034],"content":"InsertBefore","needQuote":true,"nodes":[{"content":"InsertBefore","pos":[0,12]}]},{"pos":[32091,32092],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32147,32154],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"content":",","pos":[32199,32200]},{"pos":[32260,32267],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[32311,32312],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32430,32442],"content":"InsertBefore","needQuote":true,"nodes":[{"content":"InsertBefore","pos":[0,12]}]},{"pos":[32499,32500],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32555,32562],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"content":",","pos":[32607,32608]},{"pos":[32668,32675],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[32719,32720],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32971,32982],"content":"Normalize()","needQuote":true,"nodes":[{"content":"Normalize()","pos":[0,11]}]},{"pos":[33089,33098],"content":"Normalize","needQuote":true,"nodes":[{"content":"Normalize","pos":[0,9]}]},{"pos":[33152,33153],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33180,33181],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33257,33266],"content":"Normalize","needQuote":true,"nodes":[{"content":"Normalize","pos":[0,9]}]},{"pos":[33320,33321],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33348,33349],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33562,33583],"content":"PrependChild(XmlNode)","needQuote":true,"nodes":[{"content":"PrependChild(XmlNode)","pos":[0,21]}]},{"pos":[33734,33746],"content":"PrependChild","needQuote":true,"nodes":[{"content":"PrependChild","pos":[0,12]}]},{"pos":[33803,33804],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33859,33866],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[33910,33911],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34010,34022],"content":"PrependChild","needQuote":true,"nodes":[{"content":"PrependChild","pos":[0,12]}]},{"pos":[34079,34080],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34135,34142],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[34186,34187],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34410,34421],"content":"RemoveAll()","needQuote":true,"nodes":[{"content":"RemoveAll()","pos":[0,11]}]},{"pos":[34528,34537],"content":"RemoveAll","needQuote":true,"nodes":[{"content":"RemoveAll","pos":[0,9]}]},{"pos":[34591,34592],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34619,34620],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34696,34705],"content":"RemoveAll","needQuote":true,"nodes":[{"content":"RemoveAll","pos":[0,9]}]},{"pos":[34759,34760],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34787,34788],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35000,35020],"content":"RemoveChild(XmlNode)","needQuote":true,"nodes":[{"content":"RemoveChild(XmlNode)","pos":[0,20]}]},{"pos":[35169,35180],"content":"RemoveChild","needQuote":true,"nodes":[{"content":"RemoveChild","pos":[0,11]}]},{"pos":[35236,35237],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35292,35299],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[35343,35344],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35442,35453],"content":"RemoveChild","needQuote":true,"nodes":[{"content":"RemoveChild","pos":[0,11]}]},{"pos":[35509,35510],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35565,35572],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[35616,35617],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35880,35910],"content":"ReplaceChild(XmlNode, XmlNode)","needQuote":true,"nodes":[{"content":"ReplaceChild(XmlNode, XmlNode)","pos":[0,30]}]},{"pos":[36100,36112],"content":"ReplaceChild","needQuote":true,"nodes":[{"content":"ReplaceChild","pos":[0,12]}]},{"pos":[36169,36170],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36225,36232],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"content":",","pos":[36277,36278]},{"pos":[36338,36345],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[36389,36390],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36508,36520],"content":"ReplaceChild","needQuote":true,"nodes":[{"content":"ReplaceChild","pos":[0,12]}]},{"pos":[36577,36578],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36633,36640],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"content":",","pos":[36685,36686]},{"pos":[36746,36753],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[36797,36798],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37076,37100],"content":"Supports(String, String)","needQuote":true,"nodes":[{"content":"Supports(String, String)","pos":[0,24]}]},{"pos":[37262,37270],"content":"Supports","needQuote":true,"nodes":[{"content":"Supports","pos":[0,8]}]},{"pos":[37323,37324],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37374,37380],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[37441,37442]},{"pos":[37497,37503],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[37563,37564],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37668,37676],"content":"Supports","needQuote":true,"nodes":[{"content":"Supports","pos":[0,8]}]},{"pos":[37729,37730],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37780,37786],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[37847,37848]},{"pos":[37903,37909],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[37969,37970],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38236,38263],"content":"IEnumerable.GetEnumerator()","needQuote":true,"nodes":[{"content":"IEnumerable.GetEnumerator()","pos":[0,27]}]},{"pos":[38498,38523],"content":"IEnumerable.GetEnumerator","needQuote":true,"nodes":[{"content":"IEnumerable.GetEnumerator","pos":[0,25]}]},{"pos":[38612,38613],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38640,38641],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38752,38796],"content":"System.Collections.IEnumerable.GetEnumerator","needQuote":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator","pos":[0,44]}]},{"pos":[38885,38886],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38913,38914],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39217,39227],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[39322,39330],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[39399,39400],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39427,39428],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39498,39506],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[39575,39576],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39603,39604],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39787,39801],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[39920,39926],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[39993,39994],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40044,40050],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[40110,40111],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40194,40200],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[40267,40268],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40318,40324],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[40384,40385],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40599,40621],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[40769,40775],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[40842,40843],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40893,40899],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[40960,40961]},{"pos":[41016,41022],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[41082,41083],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41180,41186],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[41253,41254],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41304,41310],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[41371,41372]},{"pos":[41427,41433],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[41493,41494],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41739,41770],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[41936,41951],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[42027,42028],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42078,42084],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[42145,42146]},{"pos":[42201,42207],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[42267,42268],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42374,42389],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[42465,42466],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42516,42522],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[42583,42584]},{"pos":[42639,42645],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[42705,42706],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42936,42949],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[43050,43061],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[43133,43134],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43161,43162],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43235,43246],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[43318,43319],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43346,43347],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43522,43531],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[43624,43631],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[43699,43700],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43727,43728],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43797,43804],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[43872,43873],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43900,43901],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44076,44093],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[44202,44217],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[44293,44294],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44321,44322],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44399,44414],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[44490,44491],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44518,44519],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44814,44827],"content":"AsQueryable()","needQuote":true,"nodes":[{"content":"AsQueryable()","pos":[0,13]}]},{"pos":[44944,44955],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[45014,45015],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45042,45043],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45124,45135],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[45194,45195],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45222,45223],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45578,45590],"content":"AsParallel()","needQuote":true,"nodes":[{"content":"AsParallel()","pos":[0,12]}]},{"pos":[45723,45733],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[45800,45801],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45828,45829],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45918,45928],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[45995,45996],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46023,46024],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46365,46380],"content":"Cast<TResult>()","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;()","pos":[0,15],"source":"Cast<TResult>()"}]},{"pos":[46584,46597],"content":"Cast<TResult>","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;","pos":[0,13],"source":"Cast<TResult>"}]},{"pos":[46659,46660],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46687,46688],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46766,46782],"content":"Cast(Of TResult)","needQuote":true,"nodes":[{"content":"Cast(Of TResult)","pos":[0,16]}]},{"pos":[46847,46848],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46875,46876],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47254,47271],"content":"OfType<TResult>()","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;()","pos":[0,17],"source":"OfType<TResult>()"}]},{"pos":[47483,47498],"content":"OfType<TResult>","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;","pos":[0,15],"source":"OfType<TResult>"}]},{"pos":[47562,47563],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47590,47591],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47671,47689],"content":"OfType(Of TResult)","needQuote":true,"nodes":[{"content":"OfType(Of TResult)","pos":[0,18]}]},{"pos":[47756,47757],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47784,47785],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[48020,48026],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[48145,48163],"content":"System.Collections","needQuote":true,"nodes":[{"content":"System.Collections","pos":[0,18]}]},{"pos":[48364,48388],"content":"AsQueryable(IEnumerable)","needQuote":true,"nodes":[{"content":"AsQueryable(IEnumerable)","pos":[0,24]}]},{"pos":[48567,48578],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[48637,48638],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48705,48716],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[48793,48794],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[48907,48918],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[48977,48978],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[49045,49056],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[49133,49134],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[49362,49371],"content":"Queryable","needQuote":true,"nodes":[{"content":"Queryable","pos":[0,9]}]},{"pos":[49577,49600],"content":"AsParallel(IEnumerable)","needQuote":true,"nodes":[{"content":"AsParallel(IEnumerable)","pos":[0,23]}]},{"pos":[49795,49805],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[49872,49873],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[49940,49951],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[50028,50029],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[50150,50160],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[50227,50228],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[50295,50306],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[50383,50384],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[50637,50655],"content":"ParallelEnumerable","needQuote":true,"nodes":[{"content":"ParallelEnumerable","pos":[0,18]}]},{"pos":[50877,50903],"content":"Cast<TResult>(IEnumerable)","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;(IEnumerable)","pos":[0,26],"source":"Cast<TResult>(IEnumerable)"}]},{"pos":[51210,51223],"content":"Cast<TResult>","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;","pos":[0,13],"source":"Cast<TResult>"}]},{"pos":[51285,51286],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51353,51364],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[51441,51442],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51552,51568],"content":"Cast(Of TResult)","needQuote":true,"nodes":[{"content":"Cast(Of TResult)","pos":[0,16]}]},{"pos":[51633,51634],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51701,51712],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[51789,51790],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[52079,52089],"content":"Enumerable","needQuote":true,"nodes":[{"content":"Enumerable","pos":[0,10]}]},{"pos":[52289,52317],"content":"OfType<TResult>(IEnumerable)","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;(IEnumerable)","pos":[0,28],"source":"OfType<TResult>(IEnumerable)"}]},{"pos":[52632,52647],"content":"OfType<TResult>","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;","pos":[0,15],"source":"OfType<TResult>"}]},{"pos":[52711,52712],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[52779,52790],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[52867,52868],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[52980,52998],"content":"OfType(Of TResult)","needQuote":true,"nodes":[{"content":"OfType(Of TResult)","pos":[0,18]}]},{"pos":[53065,53066],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[53133,53144],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[53221,53222],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53484,53495],"content":"System.Linq","needQuote":true,"nodes":[{"content":"System.Linq","pos":[0,11]}]},{"pos":[53641,53647],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[53805,53816],"content":"XmlDocument","needQuote":true,"nodes":[{"content":"XmlDocument","pos":[0,11]}]},{"pos":[54011,54020],"content":"LocalName","needQuote":true,"nodes":[{"content":"LocalName","pos":[0,9]}]},{"pos":[54228,54232],"content":"Name","needQuote":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[54429,54437],"content":"NodeType","needQuote":true,"nodes":[{"content":"NodeType","pos":[0,8]}]},{"pos":[54633,54644],"content":"XmlNodeType","needQuote":true,"nodes":[{"content":"XmlNodeType","pos":[0,11]}]},{"pos":[54854,54872],"content":"CloneNode(Boolean)","needQuote":true,"nodes":[{"content":"CloneNode(Boolean)","pos":[0,18]}]},{"pos":[55009,55018],"content":"CloneNode","needQuote":true,"nodes":[{"content":"CloneNode","pos":[0,9]}]},{"pos":[55072,55073],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[55124,55131],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[55192,55193],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55285,55294],"content":"CloneNode","needQuote":true,"nodes":[{"content":"CloneNode","pos":[0,9]}]},{"pos":[55348,55349],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[55400,55407],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[55468,55469],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55656,55663],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[55864,55889],"content":"WriteContentTo(XmlWriter)","needQuote":true,"nodes":[{"content":"WriteContentTo(XmlWriter)","pos":[0,25]}]},{"pos":[56048,56062],"content":"WriteContentTo","needQuote":true,"nodes":[{"content":"WriteContentTo","pos":[0,14]}]},{"pos":[56121,56122],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[56179,56188],"content":"XmlWriter","needQuote":true,"nodes":[{"content":"XmlWriter","pos":[0,9]}]},{"pos":[56255,56256],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[56359,56373],"content":"WriteContentTo","needQuote":true,"nodes":[{"content":"WriteContentTo","pos":[0,14]}]},{"pos":[56432,56433],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[56490,56499],"content":"XmlWriter","needQuote":true,"nodes":[{"content":"XmlWriter","pos":[0,9]}]},{"pos":[56566,56567],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[56782,56791],"content":"XmlWriter","needQuote":true,"nodes":[{"content":"XmlWriter","pos":[0,9]}]},{"pos":[56999,57017],"content":"WriteTo(XmlWriter)","needQuote":true,"nodes":[{"content":"WriteTo(XmlWriter)","pos":[0,18]}]},{"pos":[57162,57169],"content":"WriteTo","needQuote":true,"nodes":[{"content":"WriteTo","pos":[0,7]}]},{"pos":[57221,57222],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57279,57288],"content":"XmlWriter","needQuote":true,"nodes":[{"content":"XmlWriter","pos":[0,9]}]},{"pos":[57355,57356],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57452,57459],"content":"WriteTo","needQuote":true,"nodes":[{"content":"WriteTo","pos":[0,7]}]},{"pos":[57511,57512],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57569,57578],"content":"XmlWriter","needQuote":true,"nodes":[{"content":"XmlWriter","pos":[0,9]}]},{"pos":[57645,57646],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]}],"content":"items:\n- uid: System.Xml.XmlComment\n  commentId: T:System.Xml.XmlComment\n  id: XmlComment\n  parent: System.Xml\n  children:\n  - System.Xml.XmlComment.#ctor(System.String,System.Xml.XmlDocument)\n  - System.Xml.XmlComment.CloneNode(System.Boolean)\n  - System.Xml.XmlComment.LocalName\n  - System.Xml.XmlComment.Name\n  - System.Xml.XmlComment.NodeType\n  - System.Xml.XmlComment.WriteContentTo(System.Xml.XmlWriter)\n  - System.Xml.XmlComment.WriteTo(System.Xml.XmlWriter)\n  langs:\n  - csharp\n  - vb\n  name: XmlComment\n  fullName: System.Xml.XmlComment\n  type: Class\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: XmlComment\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 83\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Represents the content of an XML comment.</p>\\n\"\n  syntax:\n    content: 'public class XmlComment : XmlCharacterData, IEnumerable'\n    content.vb: >-\n      Public Class XmlComment\n          Inherits XmlCharacterData\n          Implements IEnumerable\n  seealso:\n  - type: System.Xml.XmlDocument.CreateComment(System.String)\n    commentId: M:System.Xml.XmlDocument.CreateComment(System.String)\n  inheritance:\n  - System.Object\n  - System.Xml.XmlNode\n  - System.Xml.XmlLinkedNode\n  - System.Xml.XmlCharacterData\n  implements:\n  - System.Collections.IEnumerable\n  inheritedMembers:\n  - System.Xml.XmlCharacterData.Data\n  - System.Xml.XmlCharacterData.Length\n  - System.Xml.XmlCharacterData.Value\n  - System.Xml.XmlCharacterData.AppendData(System.String)\n  - System.Xml.XmlCharacterData.DeleteData(System.Int32,System.Int32)\n  - System.Xml.XmlCharacterData.InsertData(System.Int32,System.String)\n  - System.Xml.XmlCharacterData.ReplaceData(System.Int32,System.Int32,System.String)\n  - System.Xml.XmlCharacterData.Substring(System.Int32,System.Int32)\n  - System.Xml.XmlLinkedNode.NextSibling\n  - System.Xml.XmlLinkedNode.PreviousSibling\n  - System.Xml.XmlNode.Attributes\n  - System.Xml.XmlNode.BaseURI\n  - System.Xml.XmlNode.ChildNodes\n  - System.Xml.XmlNode.FirstChild\n  - System.Xml.XmlNode.HasChildNodes\n  - System.Xml.XmlNode.InnerText\n  - System.Xml.XmlNode.InnerXml\n  - System.Xml.XmlNode.IsReadOnly\n  - System.Xml.XmlNode.Item(System.String)\n  - System.Xml.XmlNode.Item(System.String,System.String)\n  - System.Xml.XmlNode.LastChild\n  - System.Xml.XmlNode.NamespaceURI\n  - System.Xml.XmlNode.OuterXml\n  - System.Xml.XmlNode.OwnerDocument\n  - System.Xml.XmlNode.ParentNode\n  - System.Xml.XmlNode.Prefix\n  - System.Xml.XmlNode.PreviousText\n  - System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)\n  - System.Xml.XmlNode.GetEnumerator\n  - System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)\n  - System.Xml.XmlNode.GetPrefixOfNamespace(System.String)\n  - System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)\n  - System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)\n  - System.Xml.XmlNode.Normalize\n  - System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)\n  - System.Xml.XmlNode.RemoveAll\n  - System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)\n  - System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)\n  - System.Xml.XmlNode.Supports(System.String,System.String)\n  - System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: XmlComment\n  extensionMethods:\n  - System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable\n  - System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel\n  - System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1\n  - System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1\n- uid: System.Xml.XmlComment.#ctor(System.String,System.Xml.XmlDocument)\n  commentId: M:System.Xml.XmlComment.#ctor(System.String,System.Xml.XmlDocument)\n  id: '#ctor(System.String,System.Xml.XmlDocument)'\n  parent: System.Xml.XmlComment\n  langs:\n  - csharp\n  - vb\n  name: XmlComment(String, XmlDocument)\n  fullName: System.Xml.XmlComment.XmlComment(System.String, System.Xml.XmlDocument)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 85\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Xml.XmlComment\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: protected XmlComment(string comment, XmlDocument doc)\n    content.vb: Protected Sub New(comment As String, doc As XmlDocument)\n    parameters:\n    - id: comment\n      type: System.String\n      description: \"\\n<p>The content of the comment element.</p>\\n\"\n    - id: doc\n      type: System.Xml.XmlDocument\n      description: \"\\n<p>The parent XML document.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: XmlComment.XmlComment(String, XmlDocument)\n- uid: System.Xml.XmlComment.LocalName\n  commentId: P:System.Xml.XmlComment.LocalName\n  id: LocalName\n  parent: System.Xml.XmlComment\n  langs:\n  - csharp\n  - vb\n  name: LocalName\n  fullName: System.Xml.XmlComment.LocalName\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: LocalName\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 86\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Gets the local name of the node.</p>\\n\"\n  syntax:\n    content: public override string LocalName { get; }\n    content.vb: Public Overrides ReadOnly Property LocalName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>For comment nodes, the value is <strong>#comment</strong>.</p>\\n\"\n  overridden: System.Xml.XmlNode.LocalName\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: XmlComment.LocalName\n- uid: System.Xml.XmlComment.Name\n  commentId: P:System.Xml.XmlComment.Name\n  id: Name\n  parent: System.Xml.XmlComment\n  langs:\n  - csharp\n  - vb\n  name: Name\n  fullName: System.Xml.XmlComment.Name\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Name\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 87\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Gets the qualified name of the node.</p>\\n\"\n  syntax:\n    content: public override string Name { get; }\n    content.vb: Public Overrides ReadOnly Property Name As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>For comment nodes, the value is <strong>#comment</strong>.</p>\\n\"\n  overridden: System.Xml.XmlNode.Name\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: XmlComment.Name\n- uid: System.Xml.XmlComment.NodeType\n  commentId: P:System.Xml.XmlComment.NodeType\n  id: NodeType\n  parent: System.Xml.XmlComment\n  langs:\n  - csharp\n  - vb\n  name: NodeType\n  fullName: System.Xml.XmlComment.NodeType\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NodeType\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 88\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Gets the type of the current node.</p>\\n\"\n  syntax:\n    content: public override XmlNodeType NodeType { get; }\n    content.vb: Public Overrides ReadOnly Property NodeType As XmlNodeType\n    parameters: []\n    return:\n      type: System.Xml.XmlNodeType\n      description: \"\\n<p>For comment nodes, the value is XmlNodeType.Comment.</p>\\n\"\n  overridden: System.Xml.XmlNode.NodeType\n  seealso:\n  - type: System.Xml.XmlNodeType\n    commentId: T:System.Xml.XmlNodeType\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: XmlComment.NodeType\n- uid: System.Xml.XmlComment.CloneNode(System.Boolean)\n  commentId: M:System.Xml.XmlComment.CloneNode(System.Boolean)\n  id: CloneNode(System.Boolean)\n  parent: System.Xml.XmlComment\n  langs:\n  - csharp\n  - vb\n  name: CloneNode(Boolean)\n  fullName: System.Xml.XmlComment.CloneNode(System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CloneNode\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 89\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Creates a duplicate of this node.</p>\\n\"\n  syntax:\n    content: public override XmlNode CloneNode(bool deep)\n    content.vb: Public Overrides Function CloneNode(deep As Boolean) As XmlNode\n    parameters:\n    - id: deep\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to recursively clone the subtree under the specified node; <strong>false</strong> to clone only the node itself. Because comment nodes do not have children, the cloned node always includes the text content, regardless of the parameter setting. </p>\\n\"\n    return:\n      type: System.Xml.XmlNode\n      description: \"\\n<p>The cloned node.</p>\\n\"\n  overridden: System.Xml.XmlNode.CloneNode(System.Boolean)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: XmlComment.CloneNode(Boolean)\n- uid: System.Xml.XmlComment.WriteContentTo(System.Xml.XmlWriter)\n  commentId: M:System.Xml.XmlComment.WriteContentTo(System.Xml.XmlWriter)\n  id: WriteContentTo(System.Xml.XmlWriter)\n  parent: System.Xml.XmlComment\n  langs:\n  - csharp\n  - vb\n  name: WriteContentTo(XmlWriter)\n  fullName: System.Xml.XmlComment.WriteContentTo(System.Xml.XmlWriter)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteContentTo\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 90\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Saves all the children of the node to the specified <xref href=\\\"System.Xml.XmlWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. Because comment nodes do not have children, this method has no effect.</p>\\n\"\n  syntax:\n    content: public override void WriteContentTo(XmlWriter w)\n    content.vb: Public Overrides Sub WriteContentTo(w As XmlWriter)\n    parameters:\n    - id: w\n      type: System.Xml.XmlWriter\n      description: \"\\n<p>The <strong>XmlWriter</strong> to which you want to save. </p>\\n\"\n  overridden: System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: XmlComment.WriteContentTo(XmlWriter)\n- uid: System.Xml.XmlComment.WriteTo(System.Xml.XmlWriter)\n  commentId: M:System.Xml.XmlComment.WriteTo(System.Xml.XmlWriter)\n  id: WriteTo(System.Xml.XmlWriter)\n  parent: System.Xml.XmlComment\n  langs:\n  - csharp\n  - vb\n  name: WriteTo(XmlWriter)\n  fullName: System.Xml.XmlComment.WriteTo(System.Xml.XmlWriter)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteTo\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 91\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Saves the node to the specified <xref href=\\\"System.Xml.XmlWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override void WriteTo(XmlWriter w)\n    content.vb: Public Overrides Sub WriteTo(w As XmlWriter)\n    parameters:\n    - id: w\n      type: System.Xml.XmlWriter\n      description: \"\\n<p>The <strong>XmlWriter</strong> to which you want to save. </p>\\n\"\n  overridden: System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: XmlComment.WriteTo(XmlWriter)\nreferences:\n- uid: System.Xml\n  isExternal: false\n  name: System.Xml\n  fullName: System.Xml\n  commentId: N:System.Xml\n  nameWithType: System.Xml\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Xml.XmlNode\n  parent: System.Xml\n  isExternal: false\n  name: XmlNode\n  fullName: System.Xml.XmlNode\n  commentId: T:System.Xml.XmlNode\n  nameWithType: XmlNode\n- uid: System.Xml.XmlLinkedNode\n  parent: System.Xml\n  isExternal: false\n  name: XmlLinkedNode\n  fullName: System.Xml.XmlLinkedNode\n  commentId: T:System.Xml.XmlLinkedNode\n  nameWithType: XmlLinkedNode\n- uid: System.Xml.XmlCharacterData\n  parent: System.Xml\n  isExternal: false\n  name: XmlCharacterData\n  fullName: System.Xml.XmlCharacterData\n  commentId: T:System.Xml.XmlCharacterData\n  nameWithType: XmlCharacterData\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerable\n  fullName: System.Collections.IEnumerable\n  commentId: T:System.Collections.IEnumerable\n  nameWithType: IEnumerable\n- uid: System.Xml.XmlCharacterData.Data\n  parent: System.Xml.XmlCharacterData\n  isExternal: false\n  name: Data\n  fullName: System.Xml.XmlCharacterData.Data\n  commentId: P:System.Xml.XmlCharacterData.Data\n  nameWithType: XmlCharacterData.Data\n- uid: System.Xml.XmlCharacterData.Length\n  parent: System.Xml.XmlCharacterData\n  isExternal: false\n  name: Length\n  fullName: System.Xml.XmlCharacterData.Length\n  commentId: P:System.Xml.XmlCharacterData.Length\n  nameWithType: XmlCharacterData.Length\n- uid: System.Xml.XmlCharacterData.Value\n  parent: System.Xml.XmlCharacterData\n  isExternal: false\n  name: Value\n  fullName: System.Xml.XmlCharacterData.Value\n  commentId: P:System.Xml.XmlCharacterData.Value\n  nameWithType: XmlCharacterData.Value\n- uid: System.Xml.XmlCharacterData.AppendData(System.String)\n  parent: System.Xml.XmlCharacterData\n  isExternal: true\n  name: AppendData(String)\n  fullName: System.Xml.XmlCharacterData.AppendData(System.String)\n  spec.csharp:\n  - uid: System.Xml.XmlCharacterData.AppendData(System.String)\n    name: AppendData\n    fullName: System.Xml.XmlCharacterData.AppendData\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlCharacterData.AppendData(System.String)\n    name: AppendData\n    fullName: System.Xml.XmlCharacterData.AppendData\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlCharacterData.AppendData(System.String)\n  nameWithType: XmlCharacterData.AppendData(String)\n- uid: System.Xml.XmlCharacterData.DeleteData(System.Int32,System.Int32)\n  parent: System.Xml.XmlCharacterData\n  isExternal: true\n  name: DeleteData(Int32, Int32)\n  fullName: System.Xml.XmlCharacterData.DeleteData(System.Int32, System.Int32)\n  spec.csharp:\n  - uid: System.Xml.XmlCharacterData.DeleteData(System.Int32,System.Int32)\n    name: DeleteData\n    fullName: System.Xml.XmlCharacterData.DeleteData\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlCharacterData.DeleteData(System.Int32,System.Int32)\n    name: DeleteData\n    fullName: System.Xml.XmlCharacterData.DeleteData\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlCharacterData.DeleteData(System.Int32,System.Int32)\n  nameWithType: XmlCharacterData.DeleteData(Int32, Int32)\n- uid: System.Xml.XmlCharacterData.InsertData(System.Int32,System.String)\n  parent: System.Xml.XmlCharacterData\n  isExternal: true\n  name: InsertData(Int32, String)\n  fullName: System.Xml.XmlCharacterData.InsertData(System.Int32, System.String)\n  spec.csharp:\n  - uid: System.Xml.XmlCharacterData.InsertData(System.Int32,System.String)\n    name: InsertData\n    fullName: System.Xml.XmlCharacterData.InsertData\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlCharacterData.InsertData(System.Int32,System.String)\n    name: InsertData\n    fullName: System.Xml.XmlCharacterData.InsertData\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlCharacterData.InsertData(System.Int32,System.String)\n  nameWithType: XmlCharacterData.InsertData(Int32, String)\n- uid: System.Xml.XmlCharacterData.ReplaceData(System.Int32,System.Int32,System.String)\n  parent: System.Xml.XmlCharacterData\n  isExternal: true\n  name: ReplaceData(Int32, Int32, String)\n  fullName: System.Xml.XmlCharacterData.ReplaceData(System.Int32, System.Int32, System.String)\n  spec.csharp:\n  - uid: System.Xml.XmlCharacterData.ReplaceData(System.Int32,System.Int32,System.String)\n    name: ReplaceData\n    fullName: System.Xml.XmlCharacterData.ReplaceData\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlCharacterData.ReplaceData(System.Int32,System.Int32,System.String)\n    name: ReplaceData\n    fullName: System.Xml.XmlCharacterData.ReplaceData\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlCharacterData.ReplaceData(System.Int32,System.Int32,System.String)\n  nameWithType: XmlCharacterData.ReplaceData(Int32, Int32, String)\n- uid: System.Xml.XmlCharacterData.Substring(System.Int32,System.Int32)\n  parent: System.Xml.XmlCharacterData\n  isExternal: true\n  name: Substring(Int32, Int32)\n  fullName: System.Xml.XmlCharacterData.Substring(System.Int32, System.Int32)\n  spec.csharp:\n  - uid: System.Xml.XmlCharacterData.Substring(System.Int32,System.Int32)\n    name: Substring\n    fullName: System.Xml.XmlCharacterData.Substring\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlCharacterData.Substring(System.Int32,System.Int32)\n    name: Substring\n    fullName: System.Xml.XmlCharacterData.Substring\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlCharacterData.Substring(System.Int32,System.Int32)\n  nameWithType: XmlCharacterData.Substring(Int32, Int32)\n- uid: System.Xml.XmlLinkedNode.NextSibling\n  parent: System.Xml.XmlLinkedNode\n  isExternal: false\n  name: NextSibling\n  fullName: System.Xml.XmlLinkedNode.NextSibling\n  commentId: P:System.Xml.XmlLinkedNode.NextSibling\n  nameWithType: XmlLinkedNode.NextSibling\n- uid: System.Xml.XmlLinkedNode.PreviousSibling\n  parent: System.Xml.XmlLinkedNode\n  isExternal: false\n  name: PreviousSibling\n  fullName: System.Xml.XmlLinkedNode.PreviousSibling\n  commentId: P:System.Xml.XmlLinkedNode.PreviousSibling\n  nameWithType: XmlLinkedNode.PreviousSibling\n- uid: System.Xml.XmlNode.Attributes\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: Attributes\n  fullName: System.Xml.XmlNode.Attributes\n  commentId: P:System.Xml.XmlNode.Attributes\n  nameWithType: XmlNode.Attributes\n- uid: System.Xml.XmlNode.BaseURI\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: BaseURI\n  fullName: System.Xml.XmlNode.BaseURI\n  commentId: P:System.Xml.XmlNode.BaseURI\n  nameWithType: XmlNode.BaseURI\n- uid: System.Xml.XmlNode.ChildNodes\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: ChildNodes\n  fullName: System.Xml.XmlNode.ChildNodes\n  commentId: P:System.Xml.XmlNode.ChildNodes\n  nameWithType: XmlNode.ChildNodes\n- uid: System.Xml.XmlNode.FirstChild\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: FirstChild\n  fullName: System.Xml.XmlNode.FirstChild\n  commentId: P:System.Xml.XmlNode.FirstChild\n  nameWithType: XmlNode.FirstChild\n- uid: System.Xml.XmlNode.HasChildNodes\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: HasChildNodes\n  fullName: System.Xml.XmlNode.HasChildNodes\n  commentId: P:System.Xml.XmlNode.HasChildNodes\n  nameWithType: XmlNode.HasChildNodes\n- uid: System.Xml.XmlNode.InnerText\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: InnerText\n  fullName: System.Xml.XmlNode.InnerText\n  commentId: P:System.Xml.XmlNode.InnerText\n  nameWithType: XmlNode.InnerText\n- uid: System.Xml.XmlNode.InnerXml\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: InnerXml\n  fullName: System.Xml.XmlNode.InnerXml\n  commentId: P:System.Xml.XmlNode.InnerXml\n  nameWithType: XmlNode.InnerXml\n- uid: System.Xml.XmlNode.IsReadOnly\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: IsReadOnly\n  fullName: System.Xml.XmlNode.IsReadOnly\n  commentId: P:System.Xml.XmlNode.IsReadOnly\n  nameWithType: XmlNode.IsReadOnly\n- uid: System.Xml.XmlNode.Item(System.String)\n  parent: System.Xml.XmlNode\n  isExternal: true\n  name: Item[String]\n  fullName: System.Xml.XmlNode.Item[System.String]\n  fullname.vb: System.Xml.XmlNode.Item(System.String)\n  name.vb: Item(String)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.Item(System.String)\n    name: Item\n    fullName: System.Xml.XmlNode.Item\n  - name: '['\n    fullName: '['\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ']'\n    fullName: ']'\n  spec.vb:\n  - uid: System.Xml.XmlNode.Item(System.String)\n    name: Item\n    fullName: System.Xml.XmlNode.Item\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: P:System.Xml.XmlNode.Item(System.String)\n  nameWithType: XmlNode.Item[String]\n  nameWithType.vb: XmlNode.Item(String)\n- uid: System.Xml.XmlNode.Item(System.String,System.String)\n  parent: System.Xml.XmlNode\n  isExternal: true\n  name: Item[String, String]\n  fullName: System.Xml.XmlNode.Item[System.String, System.String]\n  fullname.vb: System.Xml.XmlNode.Item(System.String, System.String)\n  name.vb: Item(String, String)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.Item(System.String,System.String)\n    name: Item\n    fullName: System.Xml.XmlNode.Item\n  - name: '['\n    fullName: '['\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ']'\n    fullName: ']'\n  spec.vb:\n  - uid: System.Xml.XmlNode.Item(System.String,System.String)\n    name: Item\n    fullName: System.Xml.XmlNode.Item\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: P:System.Xml.XmlNode.Item(System.String,System.String)\n  nameWithType: XmlNode.Item[String, String]\n  nameWithType.vb: XmlNode.Item(String, String)\n- uid: System.Xml.XmlNode.LastChild\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: LastChild\n  fullName: System.Xml.XmlNode.LastChild\n  commentId: P:System.Xml.XmlNode.LastChild\n  nameWithType: XmlNode.LastChild\n- uid: System.Xml.XmlNode.NamespaceURI\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: NamespaceURI\n  fullName: System.Xml.XmlNode.NamespaceURI\n  commentId: P:System.Xml.XmlNode.NamespaceURI\n  nameWithType: XmlNode.NamespaceURI\n- uid: System.Xml.XmlNode.OuterXml\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: OuterXml\n  fullName: System.Xml.XmlNode.OuterXml\n  commentId: P:System.Xml.XmlNode.OuterXml\n  nameWithType: XmlNode.OuterXml\n- uid: System.Xml.XmlNode.OwnerDocument\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: OwnerDocument\n  fullName: System.Xml.XmlNode.OwnerDocument\n  commentId: P:System.Xml.XmlNode.OwnerDocument\n  nameWithType: XmlNode.OwnerDocument\n- uid: System.Xml.XmlNode.ParentNode\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: ParentNode\n  fullName: System.Xml.XmlNode.ParentNode\n  commentId: P:System.Xml.XmlNode.ParentNode\n  nameWithType: XmlNode.ParentNode\n- uid: System.Xml.XmlNode.Prefix\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: Prefix\n  fullName: System.Xml.XmlNode.Prefix\n  commentId: P:System.Xml.XmlNode.Prefix\n  nameWithType: XmlNode.Prefix\n- uid: System.Xml.XmlNode.PreviousText\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: PreviousText\n  fullName: System.Xml.XmlNode.PreviousText\n  commentId: P:System.Xml.XmlNode.PreviousText\n  nameWithType: XmlNode.PreviousText\n- uid: System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: AppendChild(XmlNode)\n  fullName: System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)\n    name: AppendChild\n    fullName: System.Xml.XmlNode.AppendChild\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)\n    name: AppendChild\n    fullName: System.Xml.XmlNode.AppendChild\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)\n  nameWithType: XmlNode.AppendChild(XmlNode)\n- uid: System.Xml.XmlNode.GetEnumerator\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: GetEnumerator()\n  fullName: System.Xml.XmlNode.GetEnumerator()\n  spec.csharp:\n  - uid: System.Xml.XmlNode.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Xml.XmlNode.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Xml.XmlNode.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.GetEnumerator\n  nameWithType: XmlNode.GetEnumerator()\n- uid: System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)\n  parent: System.Xml.XmlNode\n  isExternal: true\n  name: GetNamespaceOfPrefix(String)\n  fullName: System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)\n    name: GetNamespaceOfPrefix\n    fullName: System.Xml.XmlNode.GetNamespaceOfPrefix\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)\n    name: GetNamespaceOfPrefix\n    fullName: System.Xml.XmlNode.GetNamespaceOfPrefix\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)\n  nameWithType: XmlNode.GetNamespaceOfPrefix(String)\n- uid: System.Xml.XmlNode.GetPrefixOfNamespace(System.String)\n  parent: System.Xml.XmlNode\n  isExternal: true\n  name: GetPrefixOfNamespace(String)\n  fullName: System.Xml.XmlNode.GetPrefixOfNamespace(System.String)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.GetPrefixOfNamespace(System.String)\n    name: GetPrefixOfNamespace\n    fullName: System.Xml.XmlNode.GetPrefixOfNamespace\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.GetPrefixOfNamespace(System.String)\n    name: GetPrefixOfNamespace\n    fullName: System.Xml.XmlNode.GetPrefixOfNamespace\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.GetPrefixOfNamespace(System.String)\n  nameWithType: XmlNode.GetPrefixOfNamespace(String)\n- uid: System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: InsertAfter(XmlNode, XmlNode)\n  fullName: System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode, System.Xml.XmlNode)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)\n    name: InsertAfter\n    fullName: System.Xml.XmlNode.InsertAfter\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)\n    name: InsertAfter\n    fullName: System.Xml.XmlNode.InsertAfter\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)\n  nameWithType: XmlNode.InsertAfter(XmlNode, XmlNode)\n- uid: System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: InsertBefore(XmlNode, XmlNode)\n  fullName: System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode, System.Xml.XmlNode)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)\n    name: InsertBefore\n    fullName: System.Xml.XmlNode.InsertBefore\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)\n    name: InsertBefore\n    fullName: System.Xml.XmlNode.InsertBefore\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)\n  nameWithType: XmlNode.InsertBefore(XmlNode, XmlNode)\n- uid: System.Xml.XmlNode.Normalize\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: Normalize()\n  fullName: System.Xml.XmlNode.Normalize()\n  spec.csharp:\n  - uid: System.Xml.XmlNode.Normalize\n    name: Normalize\n    fullName: System.Xml.XmlNode.Normalize\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.Normalize\n    name: Normalize\n    fullName: System.Xml.XmlNode.Normalize\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.Normalize\n  nameWithType: XmlNode.Normalize()\n- uid: System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: PrependChild(XmlNode)\n  fullName: System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)\n    name: PrependChild\n    fullName: System.Xml.XmlNode.PrependChild\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)\n    name: PrependChild\n    fullName: System.Xml.XmlNode.PrependChild\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)\n  nameWithType: XmlNode.PrependChild(XmlNode)\n- uid: System.Xml.XmlNode.RemoveAll\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: RemoveAll()\n  fullName: System.Xml.XmlNode.RemoveAll()\n  spec.csharp:\n  - uid: System.Xml.XmlNode.RemoveAll\n    name: RemoveAll\n    fullName: System.Xml.XmlNode.RemoveAll\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.RemoveAll\n    name: RemoveAll\n    fullName: System.Xml.XmlNode.RemoveAll\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.RemoveAll\n  nameWithType: XmlNode.RemoveAll()\n- uid: System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: RemoveChild(XmlNode)\n  fullName: System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)\n    name: RemoveChild\n    fullName: System.Xml.XmlNode.RemoveChild\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)\n    name: RemoveChild\n    fullName: System.Xml.XmlNode.RemoveChild\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)\n  nameWithType: XmlNode.RemoveChild(XmlNode)\n- uid: System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: ReplaceChild(XmlNode, XmlNode)\n  fullName: System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode, System.Xml.XmlNode)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)\n    name: ReplaceChild\n    fullName: System.Xml.XmlNode.ReplaceChild\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)\n    name: ReplaceChild\n    fullName: System.Xml.XmlNode.ReplaceChild\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)\n  nameWithType: XmlNode.ReplaceChild(XmlNode, XmlNode)\n- uid: System.Xml.XmlNode.Supports(System.String,System.String)\n  parent: System.Xml.XmlNode\n  isExternal: true\n  name: Supports(String, String)\n  fullName: System.Xml.XmlNode.Supports(System.String, System.String)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.Supports(System.String,System.String)\n    name: Supports\n    fullName: System.Xml.XmlNode.Supports\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.Supports(System.String,System.String)\n    name: Supports\n    fullName: System.Xml.XmlNode.Supports\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.Supports(System.String,System.String)\n  nameWithType: XmlNode.Supports(String, String)\n- uid: System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: IEnumerable.GetEnumerator()\n  fullName: System.Xml.XmlNode.System.Collections.IEnumerable.GetEnumerator()\n  name.vb: System.Collections.IEnumerable.GetEnumerator()\n  spec.csharp:\n  - uid: System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator\n    name: IEnumerable.GetEnumerator\n    fullName: System.Xml.XmlNode.System.Collections.IEnumerable.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator\n    name: System.Collections.IEnumerable.GetEnumerator\n    fullName: System.Xml.XmlNode.System.Collections.IEnumerable.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator\n  nameWithType: XmlNode.IEnumerable.GetEnumerator()\n  nameWithType.vb: XmlNode.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable\n  parent: System.Linq.Queryable\n  definition: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  name: AsQueryable()\n  fullName: System.Linq.Queryable.AsQueryable()\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  nameWithType: Queryable.AsQueryable()\n- uid: System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel\n  parent: System.Linq.ParallelEnumerable\n  definition: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  name: AsParallel()\n  fullName: System.Linq.ParallelEnumerable.AsParallel()\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel()\n- uid: System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  name: Cast<TResult>()\n  fullName: System.Linq.Enumerable.Cast<TResult>()\n  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)()\n  name.vb: Cast(Of TResult)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Cast``1\n    name: Cast<TResult>\n    fullName: System.Linq.Enumerable.Cast<TResult>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Cast``1\n    name: Cast(Of TResult)\n    fullName: System.Linq.Enumerable.Cast(Of TResult)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>()\n  nameWithType.vb: Enumerable.Cast(Of TResult)()\n- uid: System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  name: OfType<TResult>()\n  fullName: System.Linq.Enumerable.OfType<TResult>()\n  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)()\n  name.vb: OfType(Of TResult)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OfType``1\n    name: OfType<TResult>\n    fullName: System.Linq.Enumerable.OfType<TResult>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OfType``1\n    name: OfType(Of TResult)\n    fullName: System.Linq.Enumerable.OfType(Of TResult)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>()\n  nameWithType.vb: Enumerable.OfType(Of TResult)()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Collections\n  isExternal: false\n  name: System.Collections\n  fullName: System.Collections\n  commentId: N:System.Collections\n  nameWithType: System.Collections\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  isExternal: true\n  name: AsQueryable(IEnumerable)\n  fullName: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n- uid: System.Linq.Queryable\n  parent: System.Linq\n  isExternal: false\n  name: Queryable\n  fullName: System.Linq.Queryable\n  commentId: T:System.Linq.Queryable\n  nameWithType: Queryable\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  isExternal: true\n  name: AsParallel(IEnumerable)\n  fullName: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.ParallelEnumerable\n  parent: System.Linq\n  isExternal: false\n  name: ParallelEnumerable\n  fullName: System.Linq.ParallelEnumerable\n  commentId: T:System.Linq.ParallelEnumerable\n  nameWithType: ParallelEnumerable\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  isExternal: true\n  name: Cast<TResult>(IEnumerable)\n  fullName: System.Linq.Enumerable.Cast<TResult>(System.Collections.IEnumerable)\n  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)(System.Collections.IEnumerable)\n  name.vb: Cast(Of TResult)(IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n    name: Cast<TResult>\n    fullName: System.Linq.Enumerable.Cast<TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n    name: Cast(Of TResult)\n    fullName: System.Linq.Enumerable.Cast(Of TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  nameWithType.vb: Enumerable.Cast(Of TResult)(IEnumerable)\n- uid: System.Linq.Enumerable\n  parent: System.Linq\n  isExternal: false\n  name: Enumerable\n  fullName: System.Linq.Enumerable\n  commentId: T:System.Linq.Enumerable\n  nameWithType: Enumerable\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  isExternal: true\n  name: OfType<TResult>(IEnumerable)\n  fullName: System.Linq.Enumerable.OfType<TResult>(System.Collections.IEnumerable)\n  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)(System.Collections.IEnumerable)\n  name.vb: OfType(Of TResult)(IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n    name: OfType<TResult>\n    fullName: System.Linq.Enumerable.OfType<TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n    name: OfType(Of TResult)\n    fullName: System.Linq.Enumerable.OfType(Of TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  nameWithType.vb: Enumerable.OfType(Of TResult)(IEnumerable)\n- uid: System.Linq\n  isExternal: false\n  name: System.Linq\n  fullName: System.Linq\n  commentId: N:System.Linq\n  nameWithType: System.Linq\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Xml.XmlDocument\n  parent: System.Xml\n  isExternal: false\n  name: XmlDocument\n  fullName: System.Xml.XmlDocument\n  commentId: T:System.Xml.XmlDocument\n  nameWithType: XmlDocument\n- uid: System.Xml.XmlNode.LocalName\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: LocalName\n  fullName: System.Xml.XmlNode.LocalName\n  commentId: P:System.Xml.XmlNode.LocalName\n  nameWithType: XmlNode.LocalName\n- uid: System.Xml.XmlNode.Name\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: Name\n  fullName: System.Xml.XmlNode.Name\n  commentId: P:System.Xml.XmlNode.Name\n  nameWithType: XmlNode.Name\n- uid: System.Xml.XmlNode.NodeType\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: NodeType\n  fullName: System.Xml.XmlNode.NodeType\n  commentId: P:System.Xml.XmlNode.NodeType\n  nameWithType: XmlNode.NodeType\n- uid: System.Xml.XmlNodeType\n  parent: System.Xml\n  isExternal: false\n  name: XmlNodeType\n  fullName: System.Xml.XmlNodeType\n  commentId: T:System.Xml.XmlNodeType\n  nameWithType: XmlNodeType\n- uid: System.Xml.XmlNode.CloneNode(System.Boolean)\n  parent: System.Xml.XmlNode\n  isExternal: true\n  name: CloneNode(Boolean)\n  fullName: System.Xml.XmlNode.CloneNode(System.Boolean)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.CloneNode(System.Boolean)\n    name: CloneNode\n    fullName: System.Xml.XmlNode.CloneNode\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.CloneNode(System.Boolean)\n    name: CloneNode\n    fullName: System.Xml.XmlNode.CloneNode\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.CloneNode(System.Boolean)\n  nameWithType: XmlNode.CloneNode(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)\n  parent: System.Xml.XmlNode\n  isExternal: true\n  name: WriteContentTo(XmlWriter)\n  fullName: System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)\n    name: WriteContentTo\n    fullName: System.Xml.XmlNode.WriteContentTo\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlWriter\n    name: XmlWriter\n    fullName: System.Xml.XmlWriter\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)\n    name: WriteContentTo\n    fullName: System.Xml.XmlNode.WriteContentTo\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlWriter\n    name: XmlWriter\n    fullName: System.Xml.XmlWriter\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)\n  nameWithType: XmlNode.WriteContentTo(XmlWriter)\n- uid: System.Xml.XmlWriter\n  parent: System.Xml\n  isExternal: false\n  name: XmlWriter\n  fullName: System.Xml.XmlWriter\n  commentId: T:System.Xml.XmlWriter\n  nameWithType: XmlWriter\n- uid: System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)\n  parent: System.Xml.XmlNode\n  isExternal: true\n  name: WriteTo(XmlWriter)\n  fullName: System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)\n    name: WriteTo\n    fullName: System.Xml.XmlNode.WriteTo\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlWriter\n    name: XmlWriter\n    fullName: System.Xml.XmlWriter\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)\n    name: WriteTo\n    fullName: System.Xml.XmlNode.WriteTo\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlWriter\n    name: XmlWriter\n    fullName: System.Xml.XmlWriter\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)\n  nameWithType: XmlNode.WriteTo(XmlWriter)\n"}