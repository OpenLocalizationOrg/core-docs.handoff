{"nodes":[{"pos":[209,235],"content":"XmlNodeChangedEventHandler","needQuote":true,"nodes":[{"content":"XmlNodeChangedEventHandler","pos":[0,26]}]},{"content":"\\n&lt;p&gt;The source of the event.","pos":[1604,1633],"source":"\\n<p>The source of the event."},{"content":"&lt;/p&gt;\\n","pos":[1634,1640],"source":" </p>\\n"},{"pos":[2144,2154],"content":"System.Xml","needQuote":true,"nodes":[{"content":"System.Xml","pos":[0,10]}]},{"pos":[2469,2484],"content":"GetMethodInfo()","needQuote":true,"nodes":[{"content":"GetMethodInfo()","pos":[0,15]}]},{"pos":[2653,2666],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[2751,2752],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[2779,2780],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[2887,2900],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[2985,2986],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[3013,3014],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[3249,3255],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[3425,3448],"content":"XmlNodeChangedEventArgs","needQuote":true,"nodes":[{"content":"XmlNodeChangedEventArgs","pos":[0,23]}]},{"pos":[3697,3720],"content":"GetMethodInfo(Delegate)","needQuote":true,"nodes":[{"content":"GetMethodInfo(Delegate)","pos":[0,23]}]},{"pos":[3921,3934],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[4019,4020],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[4072,4080],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[4142,4143],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[4267,4280],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[4365,4366],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[4418,4426],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[4488,4489],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[4775,4802],"content":"RuntimeReflectionExtensions","needQuote":true,"nodes":[{"content":"RuntimeReflectionExtensions","pos":[0,27]}]},{"pos":[5008,5014],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[5132,5149],"content":"System.Reflection","needQuote":true,"nodes":[{"content":"System.Reflection","pos":[0,17]}]}],"content":"items:\n- uid: System.Xml.XmlNodeChangedEventHandler\n  commentId: T:System.Xml.XmlNodeChangedEventHandler\n  id: XmlNodeChangedEventHandler\n  parent: System.Xml\n  children: []\n  langs:\n  - csharp\n  - vb\n  name: XmlNodeChangedEventHandler\n  fullName: System.Xml.XmlNodeChangedEventHandler\n  type: Delegate\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: XmlNodeChangedEventHandler\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 300\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Represents the method that handles <xref href=\\\"System.Xml.XmlDocument.NodeChanged\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Xml.XmlDocument.NodeChanging\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Xml.XmlDocument.NodeInserted\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Xml.XmlDocument.NodeInserting\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Xml.XmlDocument.NodeRemoved\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Xml.XmlDocument.NodeRemoving\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> events.</p>\\n\"\n  syntax:\n    content: public delegate void XmlNodeChangedEventHandler(object sender, XmlNodeChangedEventArgs e);\n    content.vb: Public Delegate Sub XmlNodeChangedEventHandler(sender As Object, e As XmlNodeChangedEventArgs)\n    parameters:\n    - id: sender\n      type: System.Object\n      description: \"\\n<p>The source of the event. </p>\\n\"\n    - id: e\n      type: System.Xml.XmlNodeChangedEventArgs\n      description: \"\\n<p>An <xref href=\\\"System.Xml.XmlNodeChangedEventArgs\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the event data. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - delegate\n  modifiers.vb:\n  - Public\n  - Delegate\n  nameWithType: XmlNodeChangedEventHandler\n  extensionMethods:\n  - System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\nreferences:\n- uid: System.Xml\n  isExternal: false\n  name: System.Xml\n  fullName: System.Xml\n  commentId: N:System.Xml\n  nameWithType: System.Xml\n- uid: System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  parent: System.Reflection.RuntimeReflectionExtensions\n  definition: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  name: GetMethodInfo()\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo()\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  nameWithType: RuntimeReflectionExtensions.GetMethodInfo()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Xml.XmlNodeChangedEventArgs\n  parent: System.Xml\n  isExternal: false\n  name: XmlNodeChangedEventArgs\n  fullName: System.Xml.XmlNodeChangedEventArgs\n  commentId: T:System.Xml.XmlNodeChangedEventArgs\n  nameWithType: XmlNodeChangedEventArgs\n- uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  isExternal: true\n  name: GetMethodInfo(Delegate)\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  nameWithType: RuntimeReflectionExtensions.GetMethodInfo(Delegate)\n- uid: System.Reflection.RuntimeReflectionExtensions\n  parent: System.Reflection\n  isExternal: false\n  name: RuntimeReflectionExtensions\n  fullName: System.Reflection.RuntimeReflectionExtensions\n  commentId: T:System.Reflection.RuntimeReflectionExtensions\n  nameWithType: RuntimeReflectionExtensions\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Reflection\n  isExternal: false\n  name: System.Reflection\n  fullName: System.Reflection\n  commentId: N:System.Reflection\n  nameWithType: System.Reflection\n"}