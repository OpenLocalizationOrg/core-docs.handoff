{"nodes":[{"pos":[675,686],"content":"TraceSwitch","needQuote":true,"nodes":[{"content":"TraceSwitch","pos":[0,11]}]},{"pos":[2702,2729],"content":"TraceSwitch(String, String)","needQuote":true,"nodes":[{"content":"TraceSwitch(String, String)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;The name to display on a user interface.","pos":[3657,3702],"source":"\\n<p>The name to display on a user interface."},{"content":"&lt;/p&gt;\\n","pos":[3703,3709],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The description of the switch.","pos":[3779,3814],"source":"\\n<p>The description of the switch."},{"content":"&lt;/p&gt;\\n","pos":[3815,3821],"source":" </p>\\n"},{"pos":[4672,4707],"content":"TraceSwitch(String, String, String)","needQuote":true,"nodes":[{"content":"TraceSwitch(String, String, String)","pos":[0,35]}]},{"content":"\\n&lt;p&gt;The name to display on a user interface.","pos":[5739,5784],"source":"\\n<p>The name to display on a user interface."},{"content":"&lt;/p&gt;\\n","pos":[5785,5791],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The description of the switch.","pos":[5861,5896],"source":"\\n<p>The description of the switch."},{"content":"&lt;/p&gt;\\n","pos":[5897,5903],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The default value of the switch.&lt;/p&gt;\\n","pos":[5980,6023],"source":"\\n<p>The default value of the switch.</p>\\n"},{"pos":[6331,6336],"content":"Level","needQuote":true,"nodes":[{"content":"Level","pos":[0,5]}]},{"pos":[8492,8502],"content":"TraceError","needQuote":true,"nodes":[{"content":"TraceError","pos":[0,10]}]},{"pos":[10569,10578],"content":"TraceInfo","needQuote":true,"nodes":[{"content":"TraceInfo","pos":[0,9]}]},{"pos":[12453,12465],"content":"TraceVerbose","needQuote":true,"nodes":[{"content":"TraceVerbose","pos":[0,12]}]},{"pos":[14245,14257],"content":"TraceWarning","needQuote":true,"nodes":[{"content":"TraceWarning","pos":[0,12]}]},{"pos":[16269,16293],"content":"OnSwitchSettingChanged()","needQuote":true,"nodes":[{"content":"OnSwitchSettingChanged()","pos":[0,24]}]},{"pos":[17726,17742],"content":"OnValueChanged()","needQuote":true,"nodes":[{"content":"OnValueChanged()","pos":[0,16]}]},{"pos":[18854,18872],"content":"System.Diagnostics","needQuote":true,"nodes":[{"content":"System.Diagnostics","pos":[0,18]}]},{"pos":[19039,19045],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19214,19220],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[19432,19443],"content":"Description","needQuote":true,"nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[19691,19702],"content":"DisplayName","needQuote":true,"nodes":[{"content":"DisplayName","pos":[0,11]}]},{"pos":[19952,19965],"content":"SwitchSetting","needQuote":true,"nodes":[{"content":"SwitchSetting","pos":[0,13]}]},{"pos":[20213,20218],"content":"Value","needQuote":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[20420,20430],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[20525,20533],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[20602,20603],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20630,20631],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20701,20709],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[20778,20779],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20806,20807],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20990,21004],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[21123,21129],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[21196,21197],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21247,21253],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21313,21314],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21397,21403],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[21470,21471],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21521,21527],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21587,21588],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21802,21824],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[21972,21978],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[22045,22046],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22096,22102],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[22163,22164]},{"pos":[22219,22225],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22285,22286],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22383,22389],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[22456,22457],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22507,22513],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[22574,22575]},{"pos":[22630,22636],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22696,22697],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22942,22973],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[23139,23154],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[23230,23231],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23281,23287],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[23348,23349]},{"pos":[23404,23410],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23470,23471],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23577,23592],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[23668,23669],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23719,23725],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[23786,23787]},{"pos":[23842,23848],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23908,23909],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24139,24152],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[24253,24264],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[24336,24337],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24364,24365],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24438,24449],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[24521,24522],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24549,24550],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24725,24734],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[24827,24834],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[24902,24903],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24930,24931],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25000,25007],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[25075,25076],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25103,25104],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25279,25296],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[25405,25420],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[25496,25497],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25524,25525],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25602,25617],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[25693,25694],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25721,25722],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25867,25873],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[26004,26010],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[26183,26193],"content":"TraceLevel","needQuote":true,"nodes":[{"content":"TraceLevel","pos":[0,10]}]},{"pos":[26375,26382],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[26584,26608],"content":"OnSwitchSettingChanged()","needQuote":true,"nodes":[{"content":"OnSwitchSettingChanged()","pos":[0,24]}]},{"pos":[26755,26777],"content":"OnSwitchSettingChanged","needQuote":true,"nodes":[{"content":"OnSwitchSettingChanged","pos":[0,22]}]},{"pos":[26851,26852],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26879,26880],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26976,26998],"content":"OnSwitchSettingChanged","needQuote":true,"nodes":[{"content":"OnSwitchSettingChanged","pos":[0,22]}]},{"pos":[27072,27073],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27100,27101],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27342,27358],"content":"OnValueChanged()","needQuote":true,"nodes":[{"content":"OnValueChanged()","pos":[0,16]}]},{"pos":[27489,27503],"content":"OnValueChanged","needQuote":true,"nodes":[{"content":"OnValueChanged","pos":[0,14]}]},{"pos":[27569,27570],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27597,27598],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27686,27700],"content":"OnValueChanged","needQuote":true,"nodes":[{"content":"OnValueChanged","pos":[0,14]}]},{"pos":[27766,27767],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27794,27795],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27985,28002],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]}],"content":"items:\n- uid: System.Diagnostics.TraceSwitch\n  commentId: T:System.Diagnostics.TraceSwitch\n  id: TraceSwitch\n  parent: System.Diagnostics\n  children:\n  - System.Diagnostics.TraceSwitch.#ctor(System.String,System.String)\n  - System.Diagnostics.TraceSwitch.#ctor(System.String,System.String,System.String)\n  - System.Diagnostics.TraceSwitch.Level\n  - System.Diagnostics.TraceSwitch.OnSwitchSettingChanged\n  - System.Diagnostics.TraceSwitch.OnValueChanged\n  - System.Diagnostics.TraceSwitch.TraceError\n  - System.Diagnostics.TraceSwitch.TraceInfo\n  - System.Diagnostics.TraceSwitch.TraceVerbose\n  - System.Diagnostics.TraceSwitch.TraceWarning\n  langs:\n  - csharp\n  - vb\n  name: TraceSwitch\n  fullName: System.Diagnostics.TraceSwitch\n  type: Class\n  source:\n    remote:\n      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceSwitch.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TraceSwitch\n    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceSwitch.cs\n    startLine: 12\n  assemblies:\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Provides a multilevel switch to control tracing and debug output without recompiling your code.</p>\\n\"\n  syntax:\n    content: 'public class TraceSwitch : Switch'\n    content.vb: >-\n      Public Class TraceSwitch\n          Inherits Switch\n  seealso:\n  - type: System.Diagnostics.Switch\n    commentId: T:System.Diagnostics.Switch\n  - type: System.Diagnostics.BooleanSwitch\n    commentId: T:System.Diagnostics.BooleanSwitch\n  - type: System.Diagnostics.TraceLevel\n    commentId: T:System.Diagnostics.TraceLevel\n  - type: System.Diagnostics.Debug\n    commentId: T:System.Diagnostics.Debug\n  - type: System.Diagnostics.Trace\n    commentId: T:System.Diagnostics.Trace\n  inheritance:\n  - System.Object\n  - System.Diagnostics.Switch\n  inheritedMembers:\n  - System.Diagnostics.Switch.Description\n  - System.Diagnostics.Switch.DisplayName\n  - System.Diagnostics.Switch.SwitchSetting\n  - System.Diagnostics.Switch.Value\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: TraceSwitch\n- uid: System.Diagnostics.TraceSwitch.#ctor(System.String,System.String)\n  commentId: M:System.Diagnostics.TraceSwitch.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.Diagnostics.TraceSwitch\n  langs:\n  - csharp\n  - vb\n  name: TraceSwitch(String, String)\n  fullName: System.Diagnostics.TraceSwitch.TraceSwitch(System.String, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceSwitch.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceSwitch.cs\n    startLine: 17\n  assemblies:\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Diagnostics.TraceSwitch\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class, using the specified display name and description.</p>\\n\"\n  syntax:\n    content: public TraceSwitch(string displayName, string description)\n    content.vb: Public Sub New(displayName As String, description As String)\n    parameters:\n    - id: displayName\n      type: System.String\n      description: \"\\n<p>The name to display on a user interface. </p>\\n\"\n    - id: description\n      type: System.String\n      description: \"\\n<p>The description of the switch. </p>\\n\"\n  seealso:\n  - type: System.Diagnostics.TraceSwitch\n    commentId: T:System.Diagnostics.TraceSwitch\n  - type: System.Diagnostics.TraceLevel\n    commentId: T:System.Diagnostics.TraceLevel\n  - type: System.Diagnostics.Switch\n    commentId: T:System.Diagnostics.Switch\n  - type: System.Diagnostics.Debug\n    commentId: T:System.Diagnostics.Debug\n  - type: System.Diagnostics.Trace\n    commentId: T:System.Diagnostics.Trace\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TraceSwitch.TraceSwitch(String, String)\n- uid: System.Diagnostics.TraceSwitch.#ctor(System.String,System.String,System.String)\n  commentId: M:System.Diagnostics.TraceSwitch.#ctor(System.String,System.String,System.String)\n  id: '#ctor(System.String,System.String,System.String)'\n  parent: System.Diagnostics.TraceSwitch\n  langs:\n  - csharp\n  - vb\n  name: TraceSwitch(String, String, String)\n  fullName: System.Diagnostics.TraceSwitch.TraceSwitch(System.String, System.String, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceSwitch.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceSwitch.cs\n    startLine: 22\n  assemblies:\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Diagnostics.TraceSwitch\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class, using the specified display name, description, and default value for the switch. </p>\\n\"\n  syntax:\n    content: public TraceSwitch(string displayName, string description, string defaultSwitchValue)\n    content.vb: Public Sub New(displayName As String, description As String, defaultSwitchValue As String)\n    parameters:\n    - id: displayName\n      type: System.String\n      description: \"\\n<p>The name to display on a user interface. </p>\\n\"\n    - id: description\n      type: System.String\n      description: \"\\n<p>The description of the switch. </p>\\n\"\n    - id: defaultSwitchValue\n      type: System.String\n      description: \"\\n<p>The default value of the switch.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TraceSwitch.TraceSwitch(String, String, String)\n- uid: System.Diagnostics.TraceSwitch.Level\n  commentId: P:System.Diagnostics.TraceSwitch.Level\n  id: Level\n  parent: System.Diagnostics.TraceSwitch\n  langs:\n  - csharp\n  - vb\n  name: Level\n  fullName: System.Diagnostics.TraceSwitch.Level\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceSwitch.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Level\n    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceSwitch.cs\n    startLine: 30\n  assemblies:\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets or sets the trace level that determines the messages the switch allows.</p>\\n\"\n  syntax:\n    content: public TraceLevel Level { get; set; }\n    content.vb: Public Property Level As TraceLevel\n    parameters: []\n    return:\n      type: System.Diagnostics.TraceLevel\n      description: \"\\n<p>One of the <xref href=\\\"System.Diagnostics.TraceLevel\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that that specifies the level of messages that are allowed by the switch.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<xref href=\\\"System.Diagnostics.TraceSwitch.Level\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is set to a value that is not one of the <xref href=\\\"System.Diagnostics.TraceLevel\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. </p>\\n\"\n  seealso:\n  - type: System.Diagnostics.TraceSwitch\n    commentId: T:System.Diagnostics.TraceSwitch\n  - type: System.Diagnostics.TraceLevel\n    commentId: T:System.Diagnostics.TraceLevel\n  - type: System.Diagnostics.Switch\n    commentId: T:System.Diagnostics.Switch\n  - type: System.Diagnostics.Debug\n    commentId: T:System.Diagnostics.Debug\n  - type: System.Diagnostics.Trace\n    commentId: T:System.Diagnostics.Trace\n  see:\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: TraceSwitch.Level\n- uid: System.Diagnostics.TraceSwitch.TraceError\n  commentId: P:System.Diagnostics.TraceSwitch.TraceError\n  id: TraceError\n  parent: System.Diagnostics.TraceSwitch\n  langs:\n  - csharp\n  - vb\n  name: TraceError\n  fullName: System.Diagnostics.TraceSwitch.TraceError\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceSwitch.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TraceError\n    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceSwitch.cs\n    startLine: 51\n  assemblies:\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets a value indicating whether the switch allows error-handling messages.</p>\\n\"\n  syntax:\n    content: public bool TraceError { get; }\n    content.vb: Public ReadOnly Property TraceError As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Diagnostics.TraceSwitch.Level\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is set to <xref href=\\\"System.Diagnostics.TraceLevel.Error\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Diagnostics.TraceLevel.Warning\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Diagnostics.TraceLevel.Info\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, or <xref href=\\\"System.Diagnostics.TraceLevel.Verbose\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>; otherwise, <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.TraceSwitch\n    commentId: T:System.Diagnostics.TraceSwitch\n  - type: System.Diagnostics.Switch\n    commentId: T:System.Diagnostics.Switch\n  - type: System.Diagnostics.TraceLevel\n    commentId: T:System.Diagnostics.TraceLevel\n  - type: System.Diagnostics.Debug\n    commentId: T:System.Diagnostics.Debug\n  - type: System.Diagnostics.Trace\n    commentId: T:System.Diagnostics.Trace\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: TraceSwitch.TraceError\n- uid: System.Diagnostics.TraceSwitch.TraceInfo\n  commentId: P:System.Diagnostics.TraceSwitch.TraceInfo\n  id: TraceInfo\n  parent: System.Diagnostics.TraceSwitch\n  langs:\n  - csharp\n  - vb\n  name: TraceInfo\n  fullName: System.Diagnostics.TraceSwitch.TraceInfo\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceSwitch.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TraceInfo\n    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceSwitch.cs\n    startLine: 77\n  assemblies:\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets a value indicating whether the switch allows informational messages.</p>\\n\"\n  syntax:\n    content: public bool TraceInfo { get; }\n    content.vb: Public ReadOnly Property TraceInfo As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Diagnostics.TraceSwitch.Level\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is set to <xref href=\\\"System.Diagnostics.TraceLevel.Info\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.Diagnostics.TraceLevel.Verbose\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>; otherwise, <strong>false</strong>.  </p>\\n\"\n  seealso:\n  - type: System.Diagnostics.TraceSwitch\n    commentId: T:System.Diagnostics.TraceSwitch\n  - type: System.Diagnostics.Switch\n    commentId: T:System.Diagnostics.Switch\n  - type: System.Diagnostics.TraceLevel\n    commentId: T:System.Diagnostics.TraceLevel\n  - type: System.Diagnostics.Debug\n    commentId: T:System.Diagnostics.Debug\n  - type: System.Diagnostics.Trace\n    commentId: T:System.Diagnostics.Trace\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: TraceSwitch.TraceInfo\n- uid: System.Diagnostics.TraceSwitch.TraceVerbose\n  commentId: P:System.Diagnostics.TraceSwitch.TraceVerbose\n  id: TraceVerbose\n  parent: System.Diagnostics.TraceSwitch\n  langs:\n  - csharp\n  - vb\n  name: TraceVerbose\n  fullName: System.Diagnostics.TraceSwitch.TraceVerbose\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceSwitch.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TraceVerbose\n    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceSwitch.cs\n    startLine: 90\n  assemblies:\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets a value indicating whether the switch allows all messages.</p>\\n\"\n  syntax:\n    content: public bool TraceVerbose { get; }\n    content.vb: Public ReadOnly Property TraceVerbose As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Diagnostics.TraceSwitch.Level\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is set to <xref href=\\\"System.Diagnostics.TraceLevel.Verbose\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>; otherwise, <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.TraceSwitch\n    commentId: T:System.Diagnostics.TraceSwitch\n  - type: System.Diagnostics.Switch\n    commentId: T:System.Diagnostics.Switch\n  - type: System.Diagnostics.TraceLevel\n    commentId: T:System.Diagnostics.TraceLevel\n  - type: System.Diagnostics.Debug\n    commentId: T:System.Diagnostics.Debug\n  - type: System.Diagnostics.Trace\n    commentId: T:System.Diagnostics.Trace\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: TraceSwitch.TraceVerbose\n- uid: System.Diagnostics.TraceSwitch.TraceWarning\n  commentId: P:System.Diagnostics.TraceSwitch.TraceWarning\n  id: TraceWarning\n  parent: System.Diagnostics.TraceSwitch\n  langs:\n  - csharp\n  - vb\n  name: TraceWarning\n  fullName: System.Diagnostics.TraceSwitch.TraceWarning\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceSwitch.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TraceWarning\n    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceSwitch.cs\n    startLine: 64\n  assemblies:\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets a value indicating whether the switch allows warning messages.</p>\\n\"\n  syntax:\n    content: public bool TraceWarning { get; }\n    content.vb: Public ReadOnly Property TraceWarning As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Diagnostics.TraceSwitch.Level\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is set to <xref href=\\\"System.Diagnostics.TraceLevel.Warning\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Diagnostics.TraceLevel.Info\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, or <xref href=\\\"System.Diagnostics.TraceLevel.Verbose\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>; otherwise, <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.TraceSwitch\n    commentId: T:System.Diagnostics.TraceSwitch\n  - type: System.Diagnostics.Switch\n    commentId: T:System.Diagnostics.Switch\n  - type: System.Diagnostics.TraceLevel\n    commentId: T:System.Diagnostics.TraceLevel\n  - type: System.Diagnostics.Debug\n    commentId: T:System.Diagnostics.Debug\n  - type: System.Diagnostics.Trace\n    commentId: T:System.Diagnostics.Trace\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: TraceSwitch.TraceWarning\n- uid: System.Diagnostics.TraceSwitch.OnSwitchSettingChanged\n  commentId: M:System.Diagnostics.TraceSwitch.OnSwitchSettingChanged\n  id: OnSwitchSettingChanged\n  parent: System.Diagnostics.TraceSwitch\n  langs:\n  - csharp\n  - vb\n  name: OnSwitchSettingChanged()\n  fullName: System.Diagnostics.TraceSwitch.OnSwitchSettingChanged()\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceSwitch.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: OnSwitchSettingChanged\n    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceSwitch.cs\n    startLine: 103\n  assemblies:\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Updates and corrects the level for this switch.</p>\\n\"\n  syntax:\n    content: protected override void OnSwitchSettingChanged()\n    content.vb: Protected Overrides Sub OnSwitchSettingChanged\n  overridden: System.Diagnostics.Switch.OnSwitchSettingChanged\n  seealso:\n  - type: System.Diagnostics.TraceSwitch\n    commentId: T:System.Diagnostics.TraceSwitch\n  - type: System.Diagnostics.Switch\n    commentId: T:System.Diagnostics.Switch\n  - type: System.Diagnostics.Debug\n    commentId: T:System.Diagnostics.Debug\n  - type: System.Diagnostics.Trace\n    commentId: T:System.Diagnostics.Trace\n  modifiers.csharp:\n  - protected\n  - override\n  modifiers.vb:\n  - Protected\n  - Overrides\n  nameWithType: TraceSwitch.OnSwitchSettingChanged()\n- uid: System.Diagnostics.TraceSwitch.OnValueChanged\n  commentId: M:System.Diagnostics.TraceSwitch.OnValueChanged\n  id: OnValueChanged\n  parent: System.Diagnostics.TraceSwitch\n  langs:\n  - csharp\n  - vb\n  name: OnValueChanged()\n  fullName: System.Diagnostics.TraceSwitch.OnValueChanged()\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceSwitch.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: OnValueChanged\n    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceSwitch.cs\n    startLine: 118\n  assemblies:\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Sets the <xref href=\\\"System.Diagnostics.Switch.SwitchSetting\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property to the integer equivalent of the <xref href=\\\"System.Diagnostics.Switch.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property.</p>\\n\"\n  syntax:\n    content: protected override void OnValueChanged()\n    content.vb: Protected Overrides Sub OnValueChanged\n  overridden: System.Diagnostics.Switch.OnValueChanged\n  modifiers.csharp:\n  - protected\n  - override\n  modifiers.vb:\n  - Protected\n  - Overrides\n  nameWithType: TraceSwitch.OnValueChanged()\nreferences:\n- uid: System.Diagnostics\n  isExternal: false\n  name: System.Diagnostics\n  fullName: System.Diagnostics\n  nameWithType: System.Diagnostics\n  commentId: N:System.Diagnostics\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Diagnostics.Switch\n  parent: System.Diagnostics\n  isExternal: false\n  name: Switch\n  fullName: System.Diagnostics.Switch\n  nameWithType: Switch\n  commentId: T:System.Diagnostics.Switch\n- uid: System.Diagnostics.Switch.Description\n  parent: System.Diagnostics.Switch\n  isExternal: false\n  name: Description\n  fullName: System.Diagnostics.Switch.Description\n  nameWithType: Switch.Description\n  commentId: P:System.Diagnostics.Switch.Description\n- uid: System.Diagnostics.Switch.DisplayName\n  parent: System.Diagnostics.Switch\n  isExternal: false\n  name: DisplayName\n  fullName: System.Diagnostics.Switch.DisplayName\n  nameWithType: Switch.DisplayName\n  commentId: P:System.Diagnostics.Switch.DisplayName\n- uid: System.Diagnostics.Switch.SwitchSetting\n  parent: System.Diagnostics.Switch\n  isExternal: false\n  name: SwitchSetting\n  fullName: System.Diagnostics.Switch.SwitchSetting\n  nameWithType: Switch.SwitchSetting\n  commentId: P:System.Diagnostics.Switch.SwitchSetting\n- uid: System.Diagnostics.Switch.Value\n  parent: System.Diagnostics.Switch\n  isExternal: false\n  name: Value\n  fullName: System.Diagnostics.Switch.Value\n  nameWithType: Switch.Value\n  commentId: P:System.Diagnostics.Switch.Value\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Diagnostics.TraceLevel\n  parent: System.Diagnostics\n  isExternal: false\n  name: TraceLevel\n  fullName: System.Diagnostics.TraceLevel\n  nameWithType: TraceLevel\n  commentId: T:System.Diagnostics.TraceLevel\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Diagnostics.Switch.OnSwitchSettingChanged\n  parent: System.Diagnostics.Switch\n  isExternal: false\n  name: OnSwitchSettingChanged()\n  fullName: System.Diagnostics.Switch.OnSwitchSettingChanged()\n  spec.csharp:\n  - uid: System.Diagnostics.Switch.OnSwitchSettingChanged\n    name: OnSwitchSettingChanged\n    fullName: System.Diagnostics.Switch.OnSwitchSettingChanged\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Diagnostics.Switch.OnSwitchSettingChanged\n    name: OnSwitchSettingChanged\n    fullName: System.Diagnostics.Switch.OnSwitchSettingChanged\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Switch.OnSwitchSettingChanged()\n  commentId: M:System.Diagnostics.Switch.OnSwitchSettingChanged\n- uid: System.Diagnostics.Switch.OnValueChanged\n  parent: System.Diagnostics.Switch\n  isExternal: false\n  name: OnValueChanged()\n  fullName: System.Diagnostics.Switch.OnValueChanged()\n  spec.csharp:\n  - uid: System.Diagnostics.Switch.OnValueChanged\n    name: OnValueChanged\n    fullName: System.Diagnostics.Switch.OnValueChanged\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Diagnostics.Switch.OnValueChanged\n    name: OnValueChanged\n    fullName: System.Diagnostics.Switch.OnValueChanged\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Switch.OnValueChanged()\n  commentId: M:System.Diagnostics.Switch.OnValueChanged\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n"}