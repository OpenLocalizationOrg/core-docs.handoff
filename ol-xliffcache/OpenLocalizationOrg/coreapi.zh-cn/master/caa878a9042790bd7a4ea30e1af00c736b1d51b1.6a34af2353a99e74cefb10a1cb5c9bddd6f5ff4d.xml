{"nodes":[{"pos":[1249,1269],"content":"FileSystemAccessRule","needQuote":true,"nodes":[{"content":"FileSystemAccessRule","pos":[0,20]}]},{"pos":[3951,4027],"content":"FileSystemAccessRule(IdentityReference, FileSystemRights, AccessControlType)","needQuote":true,"nodes":[{"content":"FileSystemAccessRule(IdentityReference, FileSystemRights, AccessControlType)","pos":[0,76]}]},{"content":"\\n&lt;p&gt;The &lt;em&gt;identity&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[6567,6635],"source":"\\n<p>The <em>identity</em> parameter is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;An incorrect enumeration was passed to the &lt;em&gt;type &lt;/em&gt;parameter.&lt;/p&gt;\\n","pos":[6752,6830],"source":"\\n<p>An incorrect enumeration was passed to the <em>type </em>parameter.</p>\\n"},{"pos":[7952,8064],"content":"FileSystemAccessRule(IdentityReference, FileSystemRights, InheritanceFlags, PropagationFlags, AccessControlType)","needQuote":true,"nodes":[{"content":"FileSystemAccessRule(IdentityReference, FileSystemRights, InheritanceFlags, PropagationFlags, AccessControlType)","pos":[0,112]}]},{"content":"\\n&lt;p&gt;The &lt;em&gt;identity&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[11578,11646],"source":"\\n<p>The <em>identity</em> parameter is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;An incorrect enumeration was passed to the &lt;em&gt;type &lt;/em&gt;parameter.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;An incorrect enumeration was passed to the &lt;em&gt;inheritanceFlags &lt;/em&gt;parameter.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;An incorrect enumeration was passed to the &lt;em&gt;propagationFlags &lt;/em&gt;parameter.&lt;/p&gt;\\n","pos":[11763,12043],"source":"\\n<p>An incorrect enumeration was passed to the <em>type </em>parameter.</p>\\n<p>-or-</p>\\n<p>An incorrect enumeration was passed to the <em>inheritanceFlags </em>parameter.</p>\\n<p>-or-</p>\\n<p>An incorrect enumeration was passed to the <em>propagationFlags </em>parameter.</p>\\n"},{"pos":[12829,12894],"content":"FileSystemAccessRule(String, FileSystemRights, AccessControlType)","needQuote":true,"nodes":[{"content":"FileSystemAccessRule(String, FileSystemRights, AccessControlType)","pos":[0,65]}]},{"content":"\\n&lt;p&gt;The name of a user account.&lt;/p&gt;\\n","pos":[14194,14232],"source":"\\n<p>The name of a user account.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;identity&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[14953,15021],"source":"\\n<p>The <em>identity</em> parameter is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;An incorrect enumeration was passed to the &lt;em&gt;type &lt;/em&gt;parameter.&lt;/p&gt;\\n","pos":[15138,15216],"source":"\\n<p>An incorrect enumeration was passed to the <em>type </em>parameter.</p>\\n"},{"pos":[16237,16338],"content":"FileSystemAccessRule(String, FileSystemRights, InheritanceFlags, PropagationFlags, AccessControlType)","needQuote":true,"nodes":[{"content":"FileSystemAccessRule(String, FileSystemRights, InheritanceFlags, PropagationFlags, AccessControlType)","pos":[0,101]}]},{"content":"\\n&lt;p&gt;The name of a user account.&lt;/p&gt;\\n","pos":[17980,18018],"source":"\\n<p>The name of a user account.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;identity&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[19371,19439],"source":"\\n<p>The <em>identity</em> parameter is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;An incorrect enumeration was passed to the &lt;em&gt;type &lt;/em&gt;parameter.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;An incorrect enumeration was passed to the &lt;em&gt;inheritanceFlags &lt;/em&gt;parameter.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;An incorrect enumeration was passed to the &lt;em&gt;propagationFlags &lt;/em&gt;parameter.&lt;/p&gt;\\n","pos":[19556,19836],"source":"\\n<p>An incorrect enumeration was passed to the <em>type </em>parameter.</p>\\n<p>-or-</p>\\n<p>An incorrect enumeration was passed to the <em>inheritanceFlags </em>parameter.</p>\\n<p>-or-</p>\\n<p>An incorrect enumeration was passed to the <em>propagationFlags </em>parameter.</p>\\n"},{"pos":[20312,20328],"content":"FileSystemRights","needQuote":true,"nodes":[{"content":"FileSystemRights","pos":[0,16]}]},{"pos":[21881,21910],"content":"System.Security.AccessControl","needQuote":true,"nodes":[{"content":"System.Security.AccessControl","pos":[0,29]}]},{"pos":[22110,22116],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22318,22335],"content":"AuthorizationRule","needQuote":true,"nodes":[{"content":"AuthorizationRule","pos":[0,17]}]},{"pos":[22609,22619],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[22901,22918],"content":"AccessControlType","needQuote":true,"nodes":[{"content":"AccessControlType","pos":[0,17]}]},{"pos":[23268,23285],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[23649,23659],"content":"AccessMask","needQuote":true,"nodes":[{"content":"AccessMask","pos":[0,10]}]},{"pos":[24003,24014],"content":"IsInherited","needQuote":true,"nodes":[{"content":"IsInherited","pos":[0,11]}]},{"pos":[24366,24382],"content":"InheritanceFlags","needQuote":true,"nodes":[{"content":"InheritanceFlags","pos":[0,16]}]},{"pos":[24749,24765],"content":"PropagationFlags","needQuote":true,"nodes":[{"content":"PropagationFlags","pos":[0,16]}]},{"pos":[25055,25065],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[25160,25168],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[25237,25238],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25265,25266],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25336,25344],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[25413,25414],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25441,25442],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25625,25639],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[25758,25764],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[25831,25832],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25882,25888],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[25948,25949],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26032,26038],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[26105,26106],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26156,26162],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[26222,26223],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26437,26459],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[26607,26613],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[26680,26681],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26731,26737],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[26798,26799]},{"pos":[26854,26860],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[26920,26921],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27018,27024],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[27091,27092],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27142,27148],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[27209,27210]},{"pos":[27265,27271],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[27331,27332],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27577,27608],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[27774,27789],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[27865,27866],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27916,27922],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[27983,27984]},{"pos":[28039,28045],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[28105,28106],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28212,28227],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[28303,28304],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28354,28360],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[28421,28422]},{"pos":[28477,28483],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[28543,28544],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28774,28787],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[28888,28899],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[28971,28972],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28999,29000],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29073,29084],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[29156,29157],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29184,29185],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29360,29369],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[29462,29469],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[29537,29538],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29565,29566],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29635,29642],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[29710,29711],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29738,29739],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29914,29931],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[30040,30055],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[30131,30132],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30159,30160],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30237,30252],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[30328,30329],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30356,30357],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30502,30508],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[30688,30705],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[30977,30993],"content":"FileSystemRights","needQuote":true,"nodes":[{"content":"FileSystemRights","pos":[0,16]}]},{"pos":[31271,31288],"content":"AccessControlType","needQuote":true,"nodes":[{"content":"AccessControlType","pos":[0,17]}]},{"pos":[31507,31532],"content":"System.Security.Principal","needQuote":true,"nodes":[{"content":"System.Security.Principal","pos":[0,25]}]},{"pos":[31776,31792],"content":"InheritanceFlags","needQuote":true,"nodes":[{"content":"InheritanceFlags","pos":[0,16]}]},{"pos":[32069,32085],"content":"PropagationFlags","needQuote":true,"nodes":[{"content":"PropagationFlags","pos":[0,16]}]},{"pos":[32306,32312],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[32468,32485],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[32661,32682],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[32876,32903],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]}],"content":"items:\n- uid: System.Security.AccessControl.FileSystemAccessRule\n  commentId: T:System.Security.AccessControl.FileSystemAccessRule\n  id: FileSystemAccessRule\n  parent: System.Security.AccessControl\n  children:\n  - System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)\n  - System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  - System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)\n  - System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  - System.Security.AccessControl.FileSystemAccessRule.FileSystemRights\n  langs:\n  - csharp\n  - vb\n  name: FileSystemAccessRule\n  fullName: System.Security.AccessControl.FileSystemAccessRule\n  type: Class\n  source:\n    remote:\n      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: FileSystemAccessRule\n    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n    startLine: 60\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Represents an abstraction of an access control entry (ACE) that defines an access rule for a file or directory. This class cannot be inherited.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      public sealed class FileSystemAccessRule : AccessRule\n    content.vb: >-\n      <SecurityCritical>\n\n      Public NotInheritable Class FileSystemAccessRule\n          Inherits AccessRule\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.AuthorizationRule\n  - System.Security.AccessControl.AccessRule\n  inheritedMembers:\n  - System.Security.AccessControl.AccessRule.AccessControlType\n  - System.Security.AccessControl.AuthorizationRule.IdentityReference\n  - System.Security.AccessControl.AuthorizationRule.AccessMask\n  - System.Security.AccessControl.AuthorizationRule.IsInherited\n  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags\n  - System.Security.AccessControl.AuthorizationRule.PropagationFlags\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n    ctor: System.Security.SecurityCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: FileSystemAccessRule\n- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)\n  commentId: M:System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)\n  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)'\n  parent: System.Security.AccessControl.FileSystemAccessRule\n  langs:\n  - csharp\n  - vb\n  name: FileSystemAccessRule(IdentityReference, FileSystemRights, AccessControlType)\n  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemAccessRule(System.Security.Principal.IdentityReference, System.Security.AccessControl.FileSystemRights, System.Security.AccessControl.AccessControlType)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n    startLine: 63\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.AccessControl.FileSystemAccessRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using a reference to a user account, a value that specifies the type of operation associated with the access rule, and a value that specifies whether to allow or deny the operation. </p>\\n\"\n  syntax:\n    content: public FileSystemAccessRule(IdentityReference identity, FileSystemRights fileSystemRights, AccessControlType type)\n    content.vb: Public Sub New(identity As IdentityReference, fileSystemRights As FileSystemRights, type As AccessControlType)\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IdentityReference\n      description: \"\\n<p>An <xref href=\\\"System.Security.Principal.IdentityReference\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that encapsulates a reference to a user account.</p>\\n\"\n    - id: fileSystemRights\n      type: System.Security.AccessControl.FileSystemRights\n      description: \"\\n<p>One of the <xref href=\\\"System.Security.AccessControl.FileSystemRights\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that specifies the type of operation associated with the access rule. </p>\\n\"\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: \"\\n<p>One of the <xref href=\\\"System.Security.AccessControl.AccessControlType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that specifies whether to allow or deny the operation.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The <em>identity</em> parameter is not an <xref href=\\\"System.Security.Principal.IdentityReference\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>identity</em> parameter is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>An incorrect enumeration was passed to the <em>type </em>parameter.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FileSystemAccessRule.FileSystemAccessRule(IdentityReference, FileSystemRights, AccessControlType)\n- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  commentId: M:System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)'\n  parent: System.Security.AccessControl.FileSystemAccessRule\n  langs:\n  - csharp\n  - vb\n  name: FileSystemAccessRule(IdentityReference, FileSystemRights, InheritanceFlags, PropagationFlags, AccessControlType)\n  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemAccessRule(System.Security.Principal.IdentityReference, System.Security.AccessControl.FileSystemRights, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n    startLine: 64\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.AccessControl.FileSystemAccessRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using a reference to a user account, a value that specifies the type of operation associated with the access rule, a value that determines how rights are inherited, a value that determines how rights are propagated, and a value that specifies whether to allow or deny the operation.</p>\\n\"\n  syntax:\n    content: public FileSystemAccessRule(IdentityReference identity, FileSystemRights fileSystemRights, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type)\n    content.vb: Public Sub New(identity As IdentityReference, fileSystemRights As FileSystemRights, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, type As AccessControlType)\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IdentityReference\n      description: \"\\n<p>An <xref href=\\\"System.Security.Principal.IdentityReference\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that encapsulates a reference to a user account.</p>\\n\"\n    - id: fileSystemRights\n      type: System.Security.AccessControl.FileSystemRights\n      description: \"\\n<p>One of the <xref href=\\\"System.Security.AccessControl.FileSystemRights\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that specifies the type of operation associated with the access rule.</p>\\n\"\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: \"\\n<p>One of the <xref href=\\\"System.Security.AccessControl.InheritanceFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that specifies how access masks are propagated to child objects.</p>\\n\"\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: \"\\n<p>One of the <xref href=\\\"System.Security.AccessControl.PropagationFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that specifies how Access Control Entries (ACEs) are propagated to child objects.</p>\\n\"\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: \"\\n<p>One of the <xref href=\\\"System.Security.AccessControl.AccessControlType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that specifies whether to allow or deny the operation.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The <em>identity</em> parameter is not an <xref href=\\\"System.Security.Principal.IdentityReference\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>identity</em> parameter is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>An incorrect enumeration was passed to the <em>type </em>parameter.</p>\\n<p>-or-</p>\\n<p>An incorrect enumeration was passed to the <em>inheritanceFlags </em>parameter.</p>\\n<p>-or-</p>\\n<p>An incorrect enumeration was passed to the <em>propagationFlags </em>parameter.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FileSystemAccessRule.FileSystemAccessRule(IdentityReference, FileSystemRights, InheritanceFlags, PropagationFlags, AccessControlType)\n- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)\n  commentId: M:System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)\n  id: '#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)'\n  parent: System.Security.AccessControl.FileSystemAccessRule\n  langs:\n  - csharp\n  - vb\n  name: FileSystemAccessRule(String, FileSystemRights, AccessControlType)\n  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemAccessRule(System.String, System.Security.AccessControl.FileSystemRights, System.Security.AccessControl.AccessControlType)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n    startLine: 65\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.AccessControl.FileSystemAccessRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using the name of a user account, a value that specifies the type of operation associated with the access rule, and a value that describes whether to allow or deny the operation. </p>\\n\"\n  syntax:\n    content: public FileSystemAccessRule(string identity, FileSystemRights fileSystemRights, AccessControlType type)\n    content.vb: Public Sub New(identity As String, fileSystemRights As FileSystemRights, type As AccessControlType)\n    parameters:\n    - id: identity\n      type: System.String\n      description: \"\\n<p>The name of a user account.</p>\\n\"\n    - id: fileSystemRights\n      type: System.Security.AccessControl.FileSystemRights\n      description: \"\\n<p>One of the <xref href=\\\"System.Security.AccessControl.FileSystemRights\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that specifies the type of operation associated with the access rule. </p>\\n\"\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: \"\\n<p>One of the <xref href=\\\"System.Security.AccessControl.AccessControlType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that specifies whether to allow or deny the operation.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>identity</em> parameter is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>An incorrect enumeration was passed to the <em>type </em>parameter.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FileSystemAccessRule.FileSystemAccessRule(String, FileSystemRights, AccessControlType)\n- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  commentId: M:System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  id: '#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)'\n  parent: System.Security.AccessControl.FileSystemAccessRule\n  langs:\n  - csharp\n  - vb\n  name: FileSystemAccessRule(String, FileSystemRights, InheritanceFlags, PropagationFlags, AccessControlType)\n  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemAccessRule(System.String, System.Security.AccessControl.FileSystemRights, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n    startLine: 66\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.AccessControl.FileSystemAccessRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using the name of a user account, a value that specifies the type of operation associated with the access rule, a value that determines how rights are inherited, a value that determines how rights are propagated, and a value that specifies whether to allow or deny the operation.</p>\\n\"\n  syntax:\n    content: public FileSystemAccessRule(string identity, FileSystemRights fileSystemRights, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type)\n    content.vb: Public Sub New(identity As String, fileSystemRights As FileSystemRights, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, type As AccessControlType)\n    parameters:\n    - id: identity\n      type: System.String\n      description: \"\\n<p>The name of a user account.</p>\\n\"\n    - id: fileSystemRights\n      type: System.Security.AccessControl.FileSystemRights\n      description: \"\\n<p>One of the <xref href=\\\"System.Security.AccessControl.FileSystemRights\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that specifies the type of operation associated with the access rule.</p>\\n\"\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: \"\\n<p>One of the <xref href=\\\"System.Security.AccessControl.InheritanceFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that specifies how access masks are propagated to child objects.</p>\\n\"\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: \"\\n<p>One of the <xref href=\\\"System.Security.AccessControl.PropagationFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that specifies how Access Control Entries (ACEs) are propagated to child objects.</p>\\n\"\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: \"\\n<p>One of the <xref href=\\\"System.Security.AccessControl.AccessControlType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that specifies whether to allow or deny the operation.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>identity</em> parameter is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>An incorrect enumeration was passed to the <em>type </em>parameter.</p>\\n<p>-or-</p>\\n<p>An incorrect enumeration was passed to the <em>inheritanceFlags </em>parameter.</p>\\n<p>-or-</p>\\n<p>An incorrect enumeration was passed to the <em>propagationFlags </em>parameter.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FileSystemAccessRule.FileSystemAccessRule(String, FileSystemRights, InheritanceFlags, PropagationFlags, AccessControlType)\n- uid: System.Security.AccessControl.FileSystemAccessRule.FileSystemRights\n  commentId: P:System.Security.AccessControl.FileSystemAccessRule.FileSystemRights\n  id: FileSystemRights\n  parent: System.Security.AccessControl.FileSystemAccessRule\n  langs:\n  - csharp\n  - vb\n  name: FileSystemRights\n  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemRights\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: FileSystemRights\n    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n    startLine: 67\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Security.AccessControl.FileSystemRights\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> flags associated with the current <xref href=\\\"System.Security.AccessControl.FileSystemAccessRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public FileSystemRights FileSystemRights { get; }\n    content.vb: Public ReadOnly Property FileSystemRights As FileSystemRights\n    parameters: []\n    return:\n      type: System.Security.AccessControl.FileSystemRights\n      description: \"\\n<p>The <xref href=\\\"System.Security.AccessControl.FileSystemRights\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> flags associated with the current <xref href=\\\"System.Security.AccessControl.FileSystemAccessRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: FileSystemAccessRule.FileSystemRights\nreferences:\n- uid: System.Security.AccessControl\n  isExternal: false\n  name: System.Security.AccessControl\n  fullName: System.Security.AccessControl\n  commentId: N:System.Security.AccessControl\n  nameWithType: System.Security.AccessControl\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Security.AccessControl.AuthorizationRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuthorizationRule\n  fullName: System.Security.AccessControl.AuthorizationRule\n  commentId: T:System.Security.AccessControl.AuthorizationRule\n  nameWithType: AuthorizationRule\n- uid: System.Security.AccessControl.AccessRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessRule\n  fullName: System.Security.AccessControl.AccessRule\n  commentId: T:System.Security.AccessControl.AccessRule\n  nameWithType: AccessRule\n- uid: System.Security.AccessControl.AccessRule.AccessControlType\n  parent: System.Security.AccessControl.AccessRule\n  isExternal: false\n  name: AccessControlType\n  fullName: System.Security.AccessControl.AccessRule.AccessControlType\n  commentId: P:System.Security.AccessControl.AccessRule.AccessControlType\n  nameWithType: AccessRule.AccessControlType\n- uid: System.Security.AccessControl.AuthorizationRule.IdentityReference\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: IdentityReference\n  fullName: System.Security.AccessControl.AuthorizationRule.IdentityReference\n  commentId: P:System.Security.AccessControl.AuthorizationRule.IdentityReference\n  nameWithType: AuthorizationRule.IdentityReference\n- uid: System.Security.AccessControl.AuthorizationRule.AccessMask\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: AccessMask\n  fullName: System.Security.AccessControl.AuthorizationRule.AccessMask\n  commentId: P:System.Security.AccessControl.AuthorizationRule.AccessMask\n  nameWithType: AuthorizationRule.AccessMask\n- uid: System.Security.AccessControl.AuthorizationRule.IsInherited\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: IsInherited\n  fullName: System.Security.AccessControl.AuthorizationRule.IsInherited\n  commentId: P:System.Security.AccessControl.AuthorizationRule.IsInherited\n  nameWithType: AuthorizationRule.IsInherited\n- uid: System.Security.AccessControl.AuthorizationRule.InheritanceFlags\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: InheritanceFlags\n  fullName: System.Security.AccessControl.AuthorizationRule.InheritanceFlags\n  commentId: P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags\n  nameWithType: AuthorizationRule.InheritanceFlags\n- uid: System.Security.AccessControl.AuthorizationRule.PropagationFlags\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: PropagationFlags\n  fullName: System.Security.AccessControl.AuthorizationRule.PropagationFlags\n  commentId: P:System.Security.AccessControl.AuthorizationRule.PropagationFlags\n  nameWithType: AuthorizationRule.PropagationFlags\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Security.Principal.IdentityReference\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReference\n  fullName: System.Security.Principal.IdentityReference\n  commentId: T:System.Security.Principal.IdentityReference\n  nameWithType: IdentityReference\n- uid: System.Security.AccessControl.FileSystemRights\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: FileSystemRights\n  fullName: System.Security.AccessControl.FileSystemRights\n  commentId: T:System.Security.AccessControl.FileSystemRights\n  nameWithType: FileSystemRights\n- uid: System.Security.AccessControl.AccessControlType\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlType\n  fullName: System.Security.AccessControl.AccessControlType\n  commentId: T:System.Security.AccessControl.AccessControlType\n  nameWithType: AccessControlType\n- uid: System.Security.Principal\n  isExternal: false\n  name: System.Security.Principal\n  fullName: System.Security.Principal\n  commentId: N:System.Security.Principal\n  nameWithType: System.Security.Principal\n- uid: System.Security.AccessControl.InheritanceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: InheritanceFlags\n  fullName: System.Security.AccessControl.InheritanceFlags\n  commentId: T:System.Security.AccessControl.InheritanceFlags\n  nameWithType: InheritanceFlags\n- uid: System.Security.AccessControl.PropagationFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: PropagationFlags\n  fullName: System.Security.AccessControl.PropagationFlags\n  commentId: T:System.Security.AccessControl.PropagationFlags\n  nameWithType: PropagationFlags\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n"}