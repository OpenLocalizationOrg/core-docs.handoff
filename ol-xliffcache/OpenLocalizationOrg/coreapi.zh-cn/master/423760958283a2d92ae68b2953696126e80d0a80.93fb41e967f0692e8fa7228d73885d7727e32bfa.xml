{"nodes":[{"pos":[640,656],"content":"EventHandlerList","needQuote":true,"nodes":[{"content":"EventHandlerList","pos":[0,16]}]},{"pos":[2118,2136],"content":"EventHandlerList()","needQuote":true,"nodes":[{"content":"EventHandlerList()","pos":[0,18]}]},{"pos":[3450,3462],"content":"Item[Object]","needQuote":true,"nodes":[{"content":"Item[Object]","pos":[0,12]}]},{"content":"\\n&lt;p&gt;An object to find in the list.","pos":[4376,4411],"source":"\\n<p>An object to find in the list."},{"content":"&lt;/p&gt;\\n","pos":[4412,4418],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The delegate for the specified key, or &lt;strong&gt;null&lt;/strong&gt; if a delegate does not exist.&lt;/p&gt;\\n","pos":[4480,4581],"source":"\\n<p>The delegate for the specified key, or <strong>null</strong> if a delegate does not exist.</p>\\n"},{"pos":[5282,5310],"content":"AddHandler(Object, Delegate)","needQuote":true,"nodes":[{"content":"AddHandler(Object, Delegate)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The object that owns the event.","pos":[6319,6355],"source":"\\n<p>The object that owns the event."},{"content":"&lt;/p&gt;\\n","pos":[6356,6362],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The delegate to add to the list.","pos":[6428,6465],"source":"\\n<p>The delegate to add to the list."},{"content":"&lt;/p&gt;\\n","pos":[6466,6472],"source":" </p>\\n"},{"pos":[6940,6969],"content":"AddHandlers(EventHandlerList)","needQuote":true,"nodes":[{"content":"AddHandlers(EventHandlerList)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;The list to add.&lt;/p&gt;\\n","pos":[7826,7853],"source":"\\n<p>The list to add.</p>\\n"},{"pos":[8190,8199],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[9279,9310],"content":"RemoveHandler(Object, Delegate)","needQuote":true,"nodes":[{"content":"RemoveHandler(Object, Delegate)","pos":[0,31]}]},{"content":"\\n&lt;p&gt;The object that owns the event.","pos":[10337,10373],"source":"\\n<p>The object that owns the event."},{"content":"&lt;/p&gt;\\n","pos":[10374,10380],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The delegate to remove from the list.","pos":[10446,10488],"source":"\\n<p>The delegate to remove from the list."},{"content":"&lt;/p&gt;\\n","pos":[10489,10495],"source":" </p>\\n"},{"pos":[10689,10710],"content":"System.ComponentModel","needQuote":true,"nodes":[{"content":"System.ComponentModel","pos":[0,21]}]},{"pos":[10886,10892],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11042,11053],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[11228,11238],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[11333,11341],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[11410,11411],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11438,11439],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11509,11517],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[11586,11587],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11614,11615],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11798,11812],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[11931,11937],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12004,12005],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12055,12061],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12121,12122],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12205,12211],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12278,12279],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12329,12335],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12395,12396],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12610,12632],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[12780,12786],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12853,12854],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12904,12910],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12971,12972]},{"pos":[13027,13033],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13093,13094],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13191,13197],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[13264,13265],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13315,13321],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[13382,13383]},{"pos":[13438,13444],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13504,13505],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13750,13781],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[13947,13962],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[14038,14039],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14089,14095],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14156,14157]},{"pos":[14212,14218],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14278,14279],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14385,14400],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[14476,14477],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14527,14533],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14594,14595]},{"pos":[14650,14656],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14716,14717],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14947,14960],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[15061,15072],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[15144,15145],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15172,15173],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15246,15257],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[15329,15330],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15357,15358],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15533,15542],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[15635,15642],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[15710,15711],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15738,15739],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15808,15815],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[15883,15884],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15911,15912],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16087,16104],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[16213,16228],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[16304,16305],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16332,16333],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16410,16425],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[16501,16502],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16529,16530],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16675,16681],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[16814,16822],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[17013,17029],"content":"EventHandlerList","needQuote":true,"nodes":[{"content":"EventHandlerList","pos":[0,16]}]},{"pos":[17259,17268],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[17371,17378],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[17430,17431],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17458,17459],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17533,17540],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[17592,17593],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17620,17621],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]}],"content":"items:\n- uid: System.ComponentModel.EventHandlerList\n  commentId: T:System.ComponentModel.EventHandlerList\n  id: EventHandlerList\n  parent: System.ComponentModel\n  children:\n  - System.ComponentModel.EventHandlerList.#ctor\n  - System.ComponentModel.EventHandlerList.AddHandler(System.Object,System.Delegate)\n  - System.ComponentModel.EventHandlerList.AddHandlers(System.ComponentModel.EventHandlerList)\n  - System.ComponentModel.EventHandlerList.Dispose\n  - System.ComponentModel.EventHandlerList.Item(System.Object)\n  - System.ComponentModel.EventHandlerList.RemoveHandler(System.Object,System.Delegate)\n  langs:\n  - csharp\n  - vb\n  name: EventHandlerList\n  fullName: System.ComponentModel.EventHandlerList\n  type: Class\n  source:\n    remote:\n      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/EventHandlerList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: EventHandlerList\n    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/EventHandlerList.cs\n    startLine: 11\n  assemblies:\n  - System.ComponentModel.Primitives\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Provides a simple list of delegates. This class cannot be inherited.</p>\\n\"\n  syntax:\n    content: 'public sealed class EventHandlerList : IDisposable'\n    content.vb: >-\n      Public NotInheritable Class EventHandlerList\n          Implements IDisposable\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: EventHandlerList\n- uid: System.ComponentModel.EventHandlerList.#ctor\n  commentId: M:System.ComponentModel.EventHandlerList.#ctor\n  id: '#ctor'\n  parent: System.ComponentModel.EventHandlerList\n  langs:\n  - csharp\n  - vb\n  name: EventHandlerList()\n  fullName: System.ComponentModel.EventHandlerList.EventHandlerList()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/EventHandlerList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/EventHandlerList.cs\n    startLine: 18\n  assemblies:\n  - System.ComponentModel.Primitives\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.ComponentModel.EventHandlerList\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class. </p>\\n\"\n  syntax:\n    content: >-\n      [SuppressMessage(\"Microsoft.Security\", \"CA2122:DoNotIndirectlyExposeMethodsWithLinkDemands\")]\n\n      public EventHandlerList()\n    content.vb: >-\n      <SuppressMessage(\"Microsoft.Security\", \"CA2122:DoNotIndirectlyExposeMethodsWithLinkDemands\")>\n\n      Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: EventHandlerList.EventHandlerList()\n- uid: System.ComponentModel.EventHandlerList.Item(System.Object)\n  commentId: P:System.ComponentModel.EventHandlerList.Item(System.Object)\n  id: Item(System.Object)\n  parent: System.ComponentModel.EventHandlerList\n  langs:\n  - csharp\n  - vb\n  name: Item[Object]\n  fullName: System.ComponentModel.EventHandlerList.Item[System.Object]\n  type: Property\n  source:\n    remote:\n      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/EventHandlerList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: this[]\n    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/EventHandlerList.cs\n    startLine: 26\n  assemblies:\n  - System.ComponentModel.Primitives\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Gets or sets the delegate for the specified object.</p>\\n\"\n  syntax:\n    content: >-\n      public Delegate this[object key]\n\n      {\n          [SuppressMessage(\"Microsoft.Security\", \"CA2122:DoNotIndirectlyExposeMethodsWithLinkDemands\")]\n          get;\n          set;\n      }\n    content.vb: 'Public Property Item(key As Object) As '\n    parameters:\n    - id: key\n      type: System.Object\n      description: \"\\n<p>An object to find in the list. </p>\\n\"\n    return:\n      type: System.Delegate\n      description: \"\\n<p>The delegate for the specified key, or <strong>null</strong> if a delegate does not exist.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.EventHandlerList\n    commentId: T:System.ComponentModel.EventHandlerList\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  fullName.vb: System.ComponentModel.EventHandlerList.Item(System.Object)\n  name.vb: Item(Object)\n  nameWithType: EventHandlerList.Item[Object]\n  nameWithType.vb: EventHandlerList.Item(Object)\n- uid: System.ComponentModel.EventHandlerList.AddHandler(System.Object,System.Delegate)\n  commentId: M:System.ComponentModel.EventHandlerList.AddHandler(System.Object,System.Delegate)\n  id: AddHandler(System.Object,System.Delegate)\n  parent: System.ComponentModel.EventHandlerList\n  langs:\n  - csharp\n  - vb\n  name: AddHandler(Object, Delegate)\n  fullName: System.ComponentModel.EventHandlerList.AddHandler(System.Object, System.Delegate)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/EventHandlerList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AddHandler\n    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/EventHandlerList.cs\n    startLine: 58\n  assemblies:\n  - System.ComponentModel.Primitives\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Adds a delegate to the list.</p>\\n\"\n  syntax:\n    content: >-\n      [SuppressMessage(\"Microsoft.Security\", \"CA2122:DoNotIndirectlyExposeMethodsWithLinkDemands\")]\n\n      public void AddHandler(object key, Delegate value)\n    content.vb: >-\n      <SuppressMessage(\"Microsoft.Security\", \"CA2122:DoNotIndirectlyExposeMethodsWithLinkDemands\")>\n\n      Public Sub AddHandler(key As Object, value As  Delegate)\n    parameters:\n    - id: key\n      type: System.Object\n      description: \"\\n<p>The object that owns the event. </p>\\n\"\n    - id: value\n      type: System.Delegate\n      description: \"\\n<p>The delegate to add to the list. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: EventHandlerList.AddHandler(Object, Delegate)\n- uid: System.ComponentModel.EventHandlerList.AddHandlers(System.ComponentModel.EventHandlerList)\n  commentId: M:System.ComponentModel.EventHandlerList.AddHandlers(System.ComponentModel.EventHandlerList)\n  id: AddHandlers(System.ComponentModel.EventHandlerList)\n  parent: System.ComponentModel.EventHandlerList\n  langs:\n  - csharp\n  - vb\n  name: AddHandlers(EventHandlerList)\n  fullName: System.ComponentModel.EventHandlerList.AddHandlers(System.ComponentModel.EventHandlerList)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/EventHandlerList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AddHandlers\n    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/EventHandlerList.cs\n    startLine: 73\n  assemblies:\n  - System.ComponentModel.Primitives\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Adds a list of delegates to the current list.</p>\\n\"\n  syntax:\n    content: public void AddHandlers(EventHandlerList listToAddFrom)\n    content.vb: Public Sub AddHandlers(listToAddFrom As EventHandlerList)\n    parameters:\n    - id: listToAddFrom\n      type: System.ComponentModel.EventHandlerList\n      description: \"\\n<p>The list to add.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: EventHandlerList.AddHandlers(EventHandlerList)\n- uid: System.ComponentModel.EventHandlerList.Dispose\n  commentId: M:System.ComponentModel.EventHandlerList.Dispose\n  id: Dispose\n  parent: System.ComponentModel.EventHandlerList\n  langs:\n  - csharp\n  - vb\n  name: Dispose()\n  fullName: System.ComponentModel.EventHandlerList.Dispose()\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/EventHandlerList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Dispose\n    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/EventHandlerList.cs\n    startLine: 86\n  assemblies:\n  - System.ComponentModel.Primitives\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Disposes the delegate list.</p>\\n\"\n  syntax:\n    content: public void Dispose()\n    content.vb: Public Sub Dispose\n  implements:\n  - System.IDisposable.Dispose\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: EventHandlerList.Dispose()\n- uid: System.ComponentModel.EventHandlerList.RemoveHandler(System.Object,System.Delegate)\n  commentId: M:System.ComponentModel.EventHandlerList.RemoveHandler(System.Object,System.Delegate)\n  id: RemoveHandler(System.Object,System.Delegate)\n  parent: System.ComponentModel.EventHandlerList\n  langs:\n  - csharp\n  - vb\n  name: RemoveHandler(Object, Delegate)\n  fullName: System.ComponentModel.EventHandlerList.RemoveHandler(System.Object, System.Delegate)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/EventHandlerList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveHandler\n    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/EventHandlerList.cs\n    startLine: 108\n  assemblies:\n  - System.ComponentModel.Primitives\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Removes a delegate from the list.</p>\\n\"\n  syntax:\n    content: >-\n      [SuppressMessage(\"Microsoft.Security\", \"CA2122:DoNotIndirectlyExposeMethodsWithLinkDemands\")]\n\n      public void RemoveHandler(object key, Delegate value)\n    content.vb: >-\n      <SuppressMessage(\"Microsoft.Security\", \"CA2122:DoNotIndirectlyExposeMethodsWithLinkDemands\")>\n\n      Public Sub RemoveHandler(key As Object, value As  Delegate)\n    parameters:\n    - id: key\n      type: System.Object\n      description: \"\\n<p>The object that owns the event. </p>\\n\"\n    - id: value\n      type: System.Delegate\n      description: \"\\n<p>The delegate to remove from the list. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: EventHandlerList.RemoveHandler(Object, Delegate)\nreferences:\n- uid: System.ComponentModel\n  isExternal: false\n  name: System.ComponentModel\n  fullName: System.ComponentModel\n  nameWithType: System.ComponentModel\n  commentId: N:System.ComponentModel\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  nameWithType: IDisposable\n  commentId: T:System.IDisposable\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  fullName: System.Delegate\n  nameWithType: Delegate\n  commentId: T:System.Delegate\n- uid: System.ComponentModel.EventHandlerList\n  parent: System.ComponentModel\n  isExternal: false\n  name: EventHandlerList\n  fullName: System.ComponentModel.EventHandlerList\n  nameWithType: EventHandlerList\n  commentId: T:System.ComponentModel.EventHandlerList\n- uid: System.IDisposable.Dispose\n  parent: System.IDisposable\n  isExternal: false\n  name: Dispose()\n  fullName: System.IDisposable.Dispose()\n  spec.csharp:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IDisposable.Dispose()\n  commentId: M:System.IDisposable.Dispose\n"}