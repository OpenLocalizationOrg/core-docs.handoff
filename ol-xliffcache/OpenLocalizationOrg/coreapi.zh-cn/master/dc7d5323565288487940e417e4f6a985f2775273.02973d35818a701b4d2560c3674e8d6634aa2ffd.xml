{"nodes":[{"pos":[517,537],"content":"WindowsRuntimeBuffer","needQuote":true,"nodes":[{"content":"WindowsRuntimeBuffer","pos":[0,20]}]},{"pos":[2311,2346],"content":"Create(Byte[], Int32, Int32, Int32)","needQuote":true,"nodes":[{"content":"Create(Byte[], Int32, Int32, Int32)","pos":[0,35]}]},{"pos":[4419,4432],"content":"Create(Int32)","needQuote":true,"nodes":[{"content":"Create(Int32)","pos":[0,13]}]},{"pos":[5772,5817],"content":"System.Runtime.InteropServices.WindowsRuntime","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices.WindowsRuntime","pos":[0,45]}]},{"pos":[6033,6039],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6208,6218],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[6347,6355],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[6458,6459],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6506,6507],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6597,6605],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[6708,6709],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6756,6757],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6939,6953],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[7110,7116],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7215,7216],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7286,7292],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7377,7378],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7481,7487],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7586,7587],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7657,7663],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7748,7749],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7959,7981],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[8175,8181],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8280,8281],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8351,8357],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8443,8444]},{"pos":[8522,8528],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8613,8614],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8731,8737],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8836,8837],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8907,8913],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8999,9000]},{"pos":[9078,9084],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9169,9170],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9398,9429],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[9650,9665],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[9782,9783],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9853,9859],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9945,9946]},{"pos":[10024,10030],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10115,10116],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10242,10257],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[10374,10375],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10445,10451],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10537,10538]},{"pos":[10616,10622],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10707,10708],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10870,10883],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[11021,11032],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[11141,11142],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11189,11190],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11283,11294],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[11403,11404],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11451,11452],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11606,11615],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[11741,11748],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[11849,11850],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11897,11898],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11987,11994],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[12095,12096],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12143,12144],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12314,12331],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[12481,12496],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[12613,12614],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12661,12662],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12759,12774],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[12891,12892],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12939,12940],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13041,13047],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[13119,13125],"content":"Byte[]","needQuote":true,"nodes":[{"content":"Byte[]","pos":[0,6]}]},{"pos":[13294,13298],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[13380,13382]},{"pos":[13468,13472],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[13553,13555],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[13687,13692],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[13806,13829],"content":"Storage.Streams.IBuffer","needQuote":true,"nodes":[{"content":"Storage.Streams.IBuffer","pos":[0,23]}]}],"content":"items:\n- uid: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeBuffer\n  commentId: T:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeBuffer\n  id: WindowsRuntimeBuffer\n  parent: System.Runtime.InteropServices.WindowsRuntime\n  children:\n  - System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeBuffer.Create(System.Byte[],System.Int32,System.Int32,System.Int32)\n  - System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeBuffer.Create(System.Int32)\n  langs:\n  - csharp\n  - vb\n  name: WindowsRuntimeBuffer\n  nameWithType: WindowsRuntimeBuffer\n  fullName: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeBuffer\n  type: Class\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WindowsRuntimeBuffer\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 86\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: System.Runtime.InteropServices.WindowsRuntime\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      public sealed class WindowsRuntimeBuffer\n    content.vb: >-\n      <SecurityCritical>\n\n      Public NotInheritable Class WindowsRuntimeBuffer\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n    ctor: System.Security.SecurityCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n- uid: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeBuffer.Create(System.Byte[],System.Int32,System.Int32,System.Int32)\n  commentId: M:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeBuffer.Create(System.Byte[],System.Int32,System.Int32,System.Int32)\n  id: Create(System.Byte[],System.Int32,System.Int32,System.Int32)\n  parent: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeBuffer\n  langs:\n  - csharp\n  - vb\n  name: Create(Byte[], Int32, Int32, Int32)\n  nameWithType: WindowsRuntimeBuffer.Create(Byte[], Int32, Int32, Int32)\n  fullName: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeBuffer.Create(System.Byte[], System.Int32, System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Create\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 90\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: System.Runtime.InteropServices.WindowsRuntime\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public static Storage.Streams.IBuffer Create(byte[] data, int offset, int length, int capacity)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Shared Function Create(data As Byte(), offset As Integer, length As Integer, capacity As Integer) As Storage.Streams.IBuffer\n    parameters:\n    - id: data\n      type: System.Byte[]\n    - id: offset\n      type: System.Int32\n    - id: length\n      type: System.Int32\n    - id: capacity\n      type: System.Int32\n    return:\n      type: Windows.Storage.Streams.IBuffer\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  nameWithType.vb: WindowsRuntimeBuffer.Create(Byte(), Int32, Int32, Int32)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeBuffer.Create(System.Byte(), System.Int32, System.Int32, System.Int32)\n  name.vb: Create(Byte(), Int32, Int32, Int32)\n- uid: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeBuffer.Create(System.Int32)\n  commentId: M:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeBuffer.Create(System.Int32)\n  id: Create(System.Int32)\n  parent: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeBuffer\n  langs:\n  - csharp\n  - vb\n  name: Create(Int32)\n  nameWithType: WindowsRuntimeBuffer.Create(Int32)\n  fullName: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeBuffer.Create(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Create\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 92\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: System.Runtime.InteropServices.WindowsRuntime\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public static Storage.Streams.IBuffer Create(int capacity)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Shared Function Create(capacity As Integer) As Storage.Streams.IBuffer\n    parameters:\n    - id: capacity\n      type: System.Int32\n    return:\n      type: Windows.Storage.Streams.IBuffer\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\nreferences:\n- uid: System.Runtime.InteropServices.WindowsRuntime\n  commentId: N:System.Runtime.InteropServices.WindowsRuntime\n  isExternal: false\n  name: System.Runtime.InteropServices.WindowsRuntime\n  nameWithType: System.Runtime.InteropServices.WindowsRuntime\n  fullName: System.Runtime.InteropServices.WindowsRuntime\n- uid: System.Object\n  commentId: T:System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object.ToString\n  commentId: M:System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    nameWithType: Object.ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    nameWithType: Object.ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.Equals(System.Object)\n  commentId: M:System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.Equals(System.Object,System.Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.GetHashCode\n  commentId: M:System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    nameWithType: Object.GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    nameWithType: Object.GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.GetType\n  commentId: M:System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.MemberwiseClone\n  commentId: M:System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    nameWithType: Object.MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    nameWithType: Object.MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System\n  commentId: N:System\n  isExternal: false\n  name: System\n  nameWithType: System\n  fullName: System\n- uid: System.Byte[]\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  nameWithType.vb: Byte()\n  fullname.vb: System.Byte()\n  name.vb: Byte()\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    nameWithType: ()\n    fullName: ()\n- uid: System.Int32\n  commentId: T:System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Windows.Storage.Streams.IBuffer\n  isExternal: true\n  name: Storage.Streams.IBuffer\n  nameWithType: Storage.Streams.IBuffer\n  fullName: Windows.Storage.Streams.IBuffer\n"}