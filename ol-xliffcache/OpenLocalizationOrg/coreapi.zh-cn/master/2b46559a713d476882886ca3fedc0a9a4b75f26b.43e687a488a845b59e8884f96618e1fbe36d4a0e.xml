{"nodes":[{"pos":[1960,1969],"content":"Validator","needQuote":true,"nodes":[{"content":"Validator","pos":[0,9]}]},{"pos":[4047,4122],"content":"TryValidateObject(Object, ValidationContext, ICollection<ValidationResult>)","needQuote":true,"nodes":[{"content":"TryValidateObject(Object, ValidationContext, ICollection&lt;ValidationResult&gt;)","pos":[0,75],"source":"TryValidateObject(Object, ValidationContext, ICollection<ValidationResult>)"}]},{"content":"\\n&lt;p&gt;The object to validate.&lt;/p&gt;\\n","pos":[5395,5429],"source":"\\n<p>The object to validate.</p>\\n"},{"content":"\\n&lt;p&gt;The context that describes the object to validate.&lt;/p&gt;\\n","pos":[5547,5608],"source":"\\n<p>The context that describes the object to validate.</p>\\n"},{"content":"\\n&lt;p&gt;A collection to hold each failed validation.&lt;/p&gt;\\n","pos":[5765,5820],"source":"\\n<p>A collection to hold each failed validation.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the object validates; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[5881,5975],"source":"\\n<p>\\n<strong>true</strong> if the object validates; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;instance&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[6094,6150],"source":"\\n<p>\\n<em>instance</em> is <strong>null</strong>.</p>\\n"},{"pos":[7598,7682],"content":"TryValidateObject(Object, ValidationContext, ICollection<ValidationResult>, Boolean)","needQuote":true,"nodes":[{"content":"TryValidateObject(Object, ValidationContext, ICollection&lt;ValidationResult&gt;, Boolean)","pos":[0,84],"source":"TryValidateObject(Object, ValidationContext, ICollection<ValidationResult>, Boolean)"}]},{"content":"\\n&lt;p&gt;The object to validate.&lt;/p&gt;\\n","pos":[9094,9128],"source":"\\n<p>The object to validate.</p>\\n"},{"content":"\\n&lt;p&gt;The context that describes the object to validate.&lt;/p&gt;\\n","pos":[9246,9307],"source":"\\n<p>The context that describes the object to validate.</p>\\n"},{"content":"\\n&lt;p&gt;A collection to hold each failed validation.&lt;/p&gt;\\n","pos":[9464,9519],"source":"\\n<p>A collection to hold each failed validation.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to validate all properties; if &lt;strong&gt;false&lt;/strong&gt;, only required attributes are validated..&lt;/p&gt;\\n","pos":[9600,9730],"source":"\\n<p>\\n<strong>true</strong> to validate all properties; if <strong>false</strong>, only required attributes are validated..</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the object validates; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[9791,9885],"source":"\\n<p>\\n<strong>true</strong> if the object validates; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;instance&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[10004,10060],"source":"\\n<p>\\n<em>instance</em> is <strong>null</strong>.</p>\\n"},{"pos":[11512,11589],"content":"TryValidateProperty(Object, ValidationContext, ICollection<ValidationResult>)","needQuote":true,"nodes":[{"content":"TryValidateProperty(Object, ValidationContext, ICollection&lt;ValidationResult&gt;)","pos":[0,77],"source":"TryValidateProperty(Object, ValidationContext, ICollection<ValidationResult>)"}]},{"content":"\\n&lt;p&gt;The value to validate.&lt;/p&gt;\\n","pos":[12772,12805],"source":"\\n<p>The value to validate.</p>\\n"},{"content":"\\n&lt;p&gt;The context that describes the property to validate.&lt;/p&gt;\\n","pos":[12923,12986],"source":"\\n<p>The context that describes the property to validate.</p>\\n"},{"content":"\\n&lt;p&gt;A collection to hold each failed validation.","pos":[13143,13192],"source":"\\n<p>A collection to hold each failed validation."},{"content":"&lt;/p&gt;\\n","pos":[13193,13199],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the property validates; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[13260,13356],"source":"\\n<p>\\n<strong>true</strong> if the property validates; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;value&lt;/em&gt; cannot be assigned to the property.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;value &lt;/em&gt;is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[13475,13602],"source":"\\n<p>\\n<em>value</em> cannot be assigned to the property.</p>\\n<p>-or-</p>\\n<p>\\n<em>value </em>is <strong>null</strong>.</p>\\n"},{"pos":[15304,15412],"content":"TryValidateValue(Object, ValidationContext, ICollection<ValidationResult>, IEnumerable<ValidationAttribute>)","needQuote":true,"nodes":[{"content":"TryValidateValue(Object, ValidationContext, ICollection&lt;ValidationResult&gt;, IEnumerable&lt;ValidationAttribute&gt;)","pos":[0,108],"source":"TryValidateValue(Object, ValidationContext, ICollection<ValidationResult>, IEnumerable<ValidationAttribute>)"}]},{"content":"\\n&lt;p&gt;The value to validate.&lt;/p&gt;\\n","pos":[16874,16907],"source":"\\n<p>The value to validate.</p>\\n"},{"content":"\\n&lt;p&gt;The context that describes the object to validate.&lt;/p&gt;\\n","pos":[17025,17086],"source":"\\n<p>The context that describes the object to validate.</p>\\n"},{"content":"\\n&lt;p&gt;A collection to hold failed validations.","pos":[17243,17288],"source":"\\n<p>A collection to hold failed validations."},{"content":"&lt;/p&gt;\\n","pos":[17289,17295],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The validation attributes.&lt;/p&gt;\\n","pos":[17458,17495],"source":"\\n<p>The validation attributes.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the object validates; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[17556,17650],"source":"\\n<p>\\n<strong>true</strong> if the object validates; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[18965,19006],"content":"ValidateObject(Object, ValidationContext)","needQuote":true,"nodes":[{"content":"ValidateObject(Object, ValidationContext)","pos":[0,41]}]},{"content":"\\n&lt;p&gt;The object to validate.&lt;/p&gt;\\n","pos":[20018,20052],"source":"\\n<p>The object to validate.</p>\\n"},{"content":"\\n&lt;p&gt;The context that describes the object to validate.&lt;/p&gt;\\n","pos":[20170,20231],"source":"\\n<p>The context that describes the object to validate.</p>\\n"},{"content":"\\n&lt;p&gt;The object is not valid.&lt;/p&gt;\\n","pos":[20408,20443],"source":"\\n<p>The object is not valid.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;instance&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[20548,20604],"source":"\\n<p>\\n<em>instance</em> is <strong>null</strong>.</p>\\n"},{"pos":[21274,21324],"content":"ValidateObject(Object, ValidationContext, Boolean)","needQuote":true,"nodes":[{"content":"ValidateObject(Object, ValidationContext, Boolean)","pos":[0,50]}]},{"content":"\\n&lt;p&gt;The object to validate.&lt;/p&gt;\\n","pos":[22477,22511],"source":"\\n<p>The object to validate.</p>\\n"},{"content":"\\n&lt;p&gt;The context that describes the object to validate.&lt;/p&gt;\\n","pos":[22629,22690],"source":"\\n<p>The context that describes the object to validate.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to validate all properties; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[22771,22868],"source":"\\n<p>\\n<strong>true</strong> to validate all properties; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;instance&lt;/em&gt; is not valid.&lt;/p&gt;\\n","pos":[23045,23089],"source":"\\n<p>\\n<em>instance</em> is not valid.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;instance&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[23194,23250],"source":"\\n<p>\\n<em>instance</em> is <strong>null</strong>.</p>\\n"},{"pos":[23890,23933],"content":"ValidateProperty(Object, ValidationContext)","needQuote":true,"nodes":[{"content":"ValidateProperty(Object, ValidationContext)","pos":[0,43]}]},{"content":"\\n&lt;p&gt;The value to validate.&lt;/p&gt;\\n","pos":[24889,24922],"source":"\\n<p>The value to validate.</p>\\n"},{"content":"\\n&lt;p&gt;The context that describes the property to validate.&lt;/p&gt;\\n","pos":[25040,25103],"source":"\\n<p>The context that describes the property to validate.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;value&lt;/em&gt; cannot be assigned to the property.&lt;/p&gt;\\n","pos":[25222,25285],"source":"\\n<p>\\n<em>value</em> cannot be assigned to the property.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;value&lt;/em&gt; parameter is not valid.&lt;/p&gt;\\n","pos":[25448,25501],"source":"\\n<p>The <em>value</em> parameter is not valid.</p>\\n"},{"pos":[26419,26493],"content":"ValidateValue(Object, ValidationContext, IEnumerable<ValidationAttribute>)","needQuote":true,"nodes":[{"content":"ValidateValue(Object, ValidationContext, IEnumerable&lt;ValidationAttribute&gt;)","pos":[0,74],"source":"ValidateValue(Object, ValidationContext, IEnumerable<ValidationAttribute>)"}]},{"content":"\\n&lt;p&gt;The value to validate.&lt;/p&gt;\\n","pos":[27664,27697],"source":"\\n<p>The value to validate.</p>\\n"},{"content":"\\n&lt;p&gt;The context that describes the object to validate.&lt;/p&gt;\\n","pos":[27815,27876],"source":"\\n<p>The context that describes the object to validate.</p>\\n"},{"content":"\\n&lt;p&gt;The validation attributes.&lt;/p&gt;\\n","pos":[28039,28076],"source":"\\n<p>The validation attributes.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;validationContext&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[28195,28272],"source":"\\n<p>The <em>validationContext</em> parameter is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;value&lt;/em&gt; parameter does not validate with the &lt;em&gt;validationAttributes&lt;/em&gt; parameter.&lt;/p&gt;\\n","pos":[28435,28542],"source":"\\n<p>The <em>value</em> parameter does not validate with the <em>validationAttributes</em> parameter.</p>\\n"},{"pos":[29257,29294],"content":"System.ComponentModel.DataAnnotations","needQuote":true,"nodes":[{"content":"System.ComponentModel.DataAnnotations","pos":[0,37]}]},{"pos":[29518,29524],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[29684,29694],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[29789,29797],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[29866,29867],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29894,29895],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29965,29973],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[30042,30043],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30070,30071],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30254,30268],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[30387,30393],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[30460,30461],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30511,30517],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[30577,30578],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30661,30667],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[30734,30735],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30785,30791],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[30851,30852],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31066,31088],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[31236,31242],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[31309,31310],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31360,31366],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[31427,31428]},{"pos":[31483,31489],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[31549,31550],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31647,31653],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[31720,31721],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31771,31777],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[31838,31839]},{"pos":[31894,31900],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[31960,31961],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32206,32237],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[32403,32418],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[32494,32495],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32545,32551],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[32612,32613]},{"pos":[32668,32674],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[32734,32735],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32841,32856],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[32932,32933],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32983,32989],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[33050,33051]},{"pos":[33106,33112],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[33172,33173],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33403,33416],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[33517,33528],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[33600,33601],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33628,33629],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33702,33713],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[33785,33786],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33813,33814],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33989,33998],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[34091,34098],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[34166,34167],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34194,34195],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34264,34271],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[34339,34340],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34367,34368],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34543,34560],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[34669,34684],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[34760,34761],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34788,34789],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34866,34881],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[34957,34958],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34985,34986],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35131,35137],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[35341,35358],"content":"ValidationContext","needQuote":true,"nodes":[{"content":"ValidationContext","pos":[0,17]}]},{"pos":[35734,35763],"content":"ICollection<ValidationResult>","needQuote":true,"nodes":[{"content":"ICollection&lt;ValidationResult&gt;","pos":[0,29],"source":"ICollection<ValidationResult>"}]},{"pos":[36103,36114],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[36199,36200],"content":"<","needQuote":true,"nodes":[]},{"pos":[36291,36307],"content":"ValidationResult","needQuote":true,"nodes":[{"content":"ValidationResult","pos":[0,16]}]},{"pos":[36480,36491],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"content":"(Of","pos":[36577,36580]},{"pos":[36678,36694],"content":"ValidationResult","needQuote":true,"nodes":[{"content":"ValidationResult","pos":[0,16]}]},{"pos":[36774,36775],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37067,37074],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[37232,37246],"content":"ICollection<T>","needQuote":true,"nodes":[{"content":"ICollection&lt;T&gt;","pos":[0,14],"source":"ICollection<T>"}]},{"pos":[37465,37476],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[37540,37541],"content":"<","needQuote":true,"nodes":[]},{"pos":[37568,37569],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[37689,37700],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"content":"(Of","pos":[37765,37768]},{"pos":[37802,37803],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[37830,37831],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38034,38060],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]},{"pos":[38390,38422],"content":"IEnumerable<ValidationAttribute>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;ValidationAttribute&gt;","pos":[0,32],"source":"IEnumerable<ValidationAttribute>"}]},{"pos":[38771,38782],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[38867,38868],"content":"<","needQuote":true,"nodes":[]},{"pos":[38962,38981],"content":"ValidationAttribute","needQuote":true,"nodes":[{"content":"ValidationAttribute","pos":[0,19]}]},{"pos":[39157,39168],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[39254,39257]},{"pos":[39358,39377],"content":"ValidationAttribute","needQuote":true,"nodes":[{"content":"ValidationAttribute","pos":[0,19]}]},{"pos":[39460,39461],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39771,39785],"content":"IEnumerable<T>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;T&gt;","pos":[0,14],"source":"IEnumerable<T>"}]},{"pos":[40004,40015],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[40079,40080],"content":"<","needQuote":true,"nodes":[]},{"pos":[40107,40108],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[40228,40239],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[40304,40307]},{"pos":[40341,40342],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[40369,40370],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40575,40596],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[40813,40832],"content":"ValidationException","needQuote":true,"nodes":[{"content":"ValidationException","pos":[0,19]}]}],"content":"items:\n- uid: System.ComponentModel.DataAnnotations.Validator\n  commentId: T:System.ComponentModel.DataAnnotations.Validator\n  id: Validator\n  parent: System.ComponentModel.DataAnnotations\n  children:\n  - System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})\n  - System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Boolean)\n  - System.ComponentModel.DataAnnotations.Validator.TryValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})\n  - System.ComponentModel.DataAnnotations.Validator.TryValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})\n  - System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)\n  - System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Boolean)\n  - System.ComponentModel.DataAnnotations.Validator.ValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)\n  - System.ComponentModel.DataAnnotations.Validator.ValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})\n  langs:\n  - csharp\n  - vb\n  name: Validator\n  fullName: System.ComponentModel.DataAnnotations.Validator\n  type: Class\n  source:\n    remote:\n      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Validator\n    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs\n    startLine: 16\n  assemblies:\n  - System.ComponentModel.Annotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: \"\\n<p>Defines a helper class that can be used to validate objects, properties, and methods when it is included in their associated <xref href=\\\"System.ComponentModel.DataAnnotations.ValidationAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> attributes.</p>\\n\"\n  syntax:\n    content: public class Validator\n    content.vb: Public Class Validator\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: Validator\n- uid: System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})\n  commentId: M:System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})\n  id: TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})\n  parent: System.ComponentModel.DataAnnotations.Validator\n  langs:\n  - csharp\n  - vb\n  name: TryValidateObject(Object, ValidationContext, ICollection<ValidationResult>)\n  fullName: System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object, System.ComponentModel.DataAnnotations.ValidationContext, System.Collections.Generic.ICollection<System.ComponentModel.DataAnnotations.ValidationResult>)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TryValidateObject\n    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs\n    startLine: 96\n  assemblies:\n  - System.ComponentModel.Annotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: \"\\n<p>Determines whether the specified object is valid using the validation context and validation results collection.</p>\\n\"\n  syntax:\n    content: public static bool TryValidateObject(object instance, ValidationContext validationContext, ICollection<ValidationResult> validationResults)\n    content.vb: Public Shared Function TryValidateObject(instance As Object, validationContext As ValidationContext, validationResults As ICollection(Of ValidationResult)) As Boolean\n    parameters:\n    - id: instance\n      type: System.Object\n      description: \"\\n<p>The object to validate.</p>\\n\"\n    - id: validationContext\n      type: System.ComponentModel.DataAnnotations.ValidationContext\n      description: \"\\n<p>The context that describes the object to validate.</p>\\n\"\n    - id: validationResults\n      type: System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult}\n      description: \"\\n<p>A collection to hold each failed validation.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the object validates; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>instance</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object, System.ComponentModel.DataAnnotations.ValidationContext, System.Collections.Generic.ICollection(Of System.ComponentModel.DataAnnotations.ValidationResult))\n  name.vb: TryValidateObject(Object, ValidationContext, ICollection(Of ValidationResult))\n  nameWithType: Validator.TryValidateObject(Object, ValidationContext, ICollection<ValidationResult>)\n  nameWithType.vb: Validator.TryValidateObject(Object, ValidationContext, ICollection(Of ValidationResult))\n- uid: System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Boolean)\n  commentId: M:System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Boolean)\n  id: TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Boolean)\n  parent: System.ComponentModel.DataAnnotations.Validator\n  langs:\n  - csharp\n  - vb\n  name: TryValidateObject(Object, ValidationContext, ICollection<ValidationResult>, Boolean)\n  fullName: System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object, System.ComponentModel.DataAnnotations.ValidationContext, System.Collections.Generic.ICollection<System.ComponentModel.DataAnnotations.ValidationResult>, System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TryValidateObject\n    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs\n    startLine: 135\n  assemblies:\n  - System.ComponentModel.Annotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: \"\\n<p>Determines whether the specified object is valid using the validation context, validation results collection, and a value that specifies whether to validate all properties.</p>\\n\"\n  syntax:\n    content: public static bool TryValidateObject(object instance, ValidationContext validationContext, ICollection<ValidationResult> validationResults, bool validateAllProperties)\n    content.vb: Public Shared Function TryValidateObject(instance As Object, validationContext As ValidationContext, validationResults As ICollection(Of ValidationResult), validateAllProperties As Boolean) As Boolean\n    parameters:\n    - id: instance\n      type: System.Object\n      description: \"\\n<p>The object to validate.</p>\\n\"\n    - id: validationContext\n      type: System.ComponentModel.DataAnnotations.ValidationContext\n      description: \"\\n<p>The context that describes the object to validate.</p>\\n\"\n    - id: validationResults\n      type: System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult}\n      description: \"\\n<p>A collection to hold each failed validation.</p>\\n\"\n    - id: validateAllProperties\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to validate all properties; if <strong>false</strong>, only required attributes are validated..</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the object validates; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>instance</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object, System.ComponentModel.DataAnnotations.ValidationContext, System.Collections.Generic.ICollection(Of System.ComponentModel.DataAnnotations.ValidationResult), System.Boolean)\n  name.vb: TryValidateObject(Object, ValidationContext, ICollection(Of ValidationResult), Boolean)\n  nameWithType: Validator.TryValidateObject(Object, ValidationContext, ICollection<ValidationResult>, Boolean)\n  nameWithType.vb: Validator.TryValidateObject(Object, ValidationContext, ICollection(Of ValidationResult), Boolean)\n- uid: System.ComponentModel.DataAnnotations.Validator.TryValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})\n  commentId: M:System.ComponentModel.DataAnnotations.Validator.TryValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})\n  id: TryValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})\n  parent: System.ComponentModel.DataAnnotations.Validator\n  langs:\n  - csharp\n  - vb\n  name: TryValidateProperty(Object, ValidationContext, ICollection<ValidationResult>)\n  fullName: System.ComponentModel.DataAnnotations.Validator.TryValidateProperty(System.Object, System.ComponentModel.DataAnnotations.ValidationContext, System.Collections.Generic.ICollection<System.ComponentModel.DataAnnotations.ValidationResult>)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TryValidateProperty\n    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs\n    startLine: 48\n  assemblies:\n  - System.ComponentModel.Annotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: \"\\n<p>Validates the property.</p>\\n\"\n  syntax:\n    content: public static bool TryValidateProperty(object value, ValidationContext validationContext, ICollection<ValidationResult> validationResults)\n    content.vb: Public Shared Function TryValidateProperty(value As Object, validationContext As ValidationContext, validationResults As ICollection(Of ValidationResult)) As Boolean\n    parameters:\n    - id: value\n      type: System.Object\n      description: \"\\n<p>The value to validate.</p>\\n\"\n    - id: validationContext\n      type: System.ComponentModel.DataAnnotations.ValidationContext\n      description: \"\\n<p>The context that describes the property to validate.</p>\\n\"\n    - id: validationResults\n      type: System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult}\n      description: \"\\n<p>A collection to hold each failed validation. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the property validates; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>value</em> cannot be assigned to the property.</p>\\n<p>-or-</p>\\n<p>\\n<em>value </em>is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.ComponentModel.DataAnnotations.Validator.TryValidateProperty(System.Object, System.ComponentModel.DataAnnotations.ValidationContext, System.Collections.Generic.ICollection(Of System.ComponentModel.DataAnnotations.ValidationResult))\n  name.vb: TryValidateProperty(Object, ValidationContext, ICollection(Of ValidationResult))\n  nameWithType: Validator.TryValidateProperty(Object, ValidationContext, ICollection<ValidationResult>)\n  nameWithType.vb: Validator.TryValidateProperty(Object, ValidationContext, ICollection(Of ValidationResult))\n- uid: System.ComponentModel.DataAnnotations.Validator.TryValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})\n  commentId: M:System.ComponentModel.DataAnnotations.Validator.TryValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})\n  id: TryValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})\n  parent: System.ComponentModel.DataAnnotations.Validator\n  langs:\n  - csharp\n  - vb\n  name: TryValidateValue(Object, ValidationContext, ICollection<ValidationResult>, IEnumerable<ValidationAttribute>)\n  fullName: System.ComponentModel.DataAnnotations.Validator.TryValidateValue(System.Object, System.ComponentModel.DataAnnotations.ValidationContext, System.Collections.Generic.ICollection<System.ComponentModel.DataAnnotations.ValidationResult>, System.Collections.Generic.IEnumerable<System.ComponentModel.DataAnnotations.ValidationAttribute>)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TryValidateValue\n    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs\n    startLine: 196\n  assemblies:\n  - System.ComponentModel.Annotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: \"\\n<p>Returns a value that indicates whether the specified value is valid with the specified attributes.</p>\\n\"\n  syntax:\n    content: public static bool TryValidateValue(object value, ValidationContext validationContext, ICollection<ValidationResult> validationResults, IEnumerable<ValidationAttribute> validationAttributes)\n    content.vb: Public Shared Function TryValidateValue(value As Object, validationContext As ValidationContext, validationResults As ICollection(Of ValidationResult), validationAttributes As IEnumerable(Of ValidationAttribute)) As Boolean\n    parameters:\n    - id: value\n      type: System.Object\n      description: \"\\n<p>The value to validate.</p>\\n\"\n    - id: validationContext\n      type: System.ComponentModel.DataAnnotations.ValidationContext\n      description: \"\\n<p>The context that describes the object to validate.</p>\\n\"\n    - id: validationResults\n      type: System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult}\n      description: \"\\n<p>A collection to hold failed validations. </p>\\n\"\n    - id: validationAttributes\n      type: System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute}\n      description: \"\\n<p>The validation attributes.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the object validates; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.ComponentModel.DataAnnotations.Validator.TryValidateValue(System.Object, System.ComponentModel.DataAnnotations.ValidationContext, System.Collections.Generic.ICollection(Of System.ComponentModel.DataAnnotations.ValidationResult), System.Collections.Generic.IEnumerable(Of System.ComponentModel.DataAnnotations.ValidationAttribute))\n  name.vb: TryValidateValue(Object, ValidationContext, ICollection(Of ValidationResult), IEnumerable(Of ValidationAttribute))\n  nameWithType: Validator.TryValidateValue(Object, ValidationContext, ICollection<ValidationResult>, IEnumerable<ValidationAttribute>)\n  nameWithType.vb: Validator.TryValidateValue(Object, ValidationContext, ICollection(Of ValidationResult), IEnumerable(Of ValidationAttribute))\n- uid: System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)\n  commentId: M:System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)\n  id: ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)\n  parent: System.ComponentModel.DataAnnotations.Validator\n  langs:\n  - csharp\n  - vb\n  name: ValidateObject(Object, ValidationContext)\n  fullName: System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object, System.ComponentModel.DataAnnotations.ValidationContext)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ValidateObject\n    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs\n    startLine: 260\n  assemblies:\n  - System.ComponentModel.Annotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: \"\\n<p>Determines whether the specified object is valid using the validation context.</p>\\n\"\n  syntax:\n    content: public static void ValidateObject(object instance, ValidationContext validationContext)\n    content.vb: Public Shared Sub ValidateObject(instance As Object, validationContext As ValidationContext)\n    parameters:\n    - id: instance\n      type: System.Object\n      description: \"\\n<p>The object to validate.</p>\\n\"\n    - id: validationContext\n      type: System.ComponentModel.DataAnnotations.ValidationContext\n      description: \"\\n<p>The context that describes the object to validate.</p>\\n\"\n  exceptions:\n  - type: System.ComponentModel.DataAnnotations.ValidationException\n    commentId: T:System.ComponentModel.DataAnnotations.ValidationException\n    description: \"\\n<p>The object is not valid.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>instance</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Validator.ValidateObject(Object, ValidationContext)\n- uid: System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Boolean)\n  commentId: M:System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Boolean)\n  id: ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Boolean)\n  parent: System.ComponentModel.DataAnnotations.Validator\n  langs:\n  - csharp\n  - vb\n  name: ValidateObject(Object, ValidationContext, Boolean)\n  fullName: System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object, System.ComponentModel.DataAnnotations.ValidationContext, System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ValidateObject\n    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs\n    startLine: 285\n  assemblies:\n  - System.ComponentModel.Annotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: \"\\n<p>Determines whether the specified object is valid using the validation context, and a value that specifies whether to validate all properties.</p>\\n\"\n  syntax:\n    content: public static void ValidateObject(object instance, ValidationContext validationContext, bool validateAllProperties)\n    content.vb: Public Shared Sub ValidateObject(instance As Object, validationContext As ValidationContext, validateAllProperties As Boolean)\n    parameters:\n    - id: instance\n      type: System.Object\n      description: \"\\n<p>The object to validate.</p>\\n\"\n    - id: validationContext\n      type: System.ComponentModel.DataAnnotations.ValidationContext\n      description: \"\\n<p>The context that describes the object to validate.</p>\\n\"\n    - id: validateAllProperties\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to validate all properties; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ComponentModel.DataAnnotations.ValidationException\n    commentId: T:System.ComponentModel.DataAnnotations.ValidationException\n    description: \"\\n<p>\\n<em>instance</em> is not valid.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>instance</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Validator.ValidateObject(Object, ValidationContext, Boolean)\n- uid: System.ComponentModel.DataAnnotations.Validator.ValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)\n  commentId: M:System.ComponentModel.DataAnnotations.Validator.ValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)\n  id: ValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)\n  parent: System.ComponentModel.DataAnnotations.Validator\n  langs:\n  - csharp\n  - vb\n  name: ValidateProperty(Object, ValidationContext)\n  fullName: System.ComponentModel.DataAnnotations.Validator.ValidateProperty(System.Object, System.ComponentModel.DataAnnotations.ValidationContext)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ValidateProperty\n    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs\n    startLine: 227\n  assemblies:\n  - System.ComponentModel.Annotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: \"\\n<p>Validates the property.</p>\\n\"\n  syntax:\n    content: public static void ValidateProperty(object value, ValidationContext validationContext)\n    content.vb: Public Shared Sub ValidateProperty(value As Object, validationContext As ValidationContext)\n    parameters:\n    - id: value\n      type: System.Object\n      description: \"\\n<p>The value to validate.</p>\\n\"\n    - id: validationContext\n      type: System.ComponentModel.DataAnnotations.ValidationContext\n      description: \"\\n<p>The context that describes the property to validate.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>value</em> cannot be assigned to the property.</p>\\n\"\n  - type: System.ComponentModel.DataAnnotations.ValidationException\n    commentId: T:System.ComponentModel.DataAnnotations.ValidationException\n    description: \"\\n<p>The <em>value</em> parameter is not valid.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Validator.ValidateProperty(Object, ValidationContext)\n- uid: System.ComponentModel.DataAnnotations.Validator.ValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})\n  commentId: M:System.ComponentModel.DataAnnotations.Validator.ValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})\n  id: ValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})\n  parent: System.ComponentModel.DataAnnotations.Validator\n  langs:\n  - csharp\n  - vb\n  name: ValidateValue(Object, ValidationContext, IEnumerable<ValidationAttribute>)\n  fullName: System.ComponentModel.DataAnnotations.Validator.ValidateValue(System.Object, System.ComponentModel.DataAnnotations.ValidationContext, System.Collections.Generic.IEnumerable<System.ComponentModel.DataAnnotations.ValidationAttribute>)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ValidateValue\n    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs\n    startLine: 327\n  assemblies:\n  - System.ComponentModel.Annotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: \"\\n<p>Validates the specified attributes.</p>\\n\"\n  syntax:\n    content: public static void ValidateValue(object value, ValidationContext validationContext, IEnumerable<ValidationAttribute> validationAttributes)\n    content.vb: Public Shared Sub ValidateValue(value As Object, validationContext As ValidationContext, validationAttributes As IEnumerable(Of ValidationAttribute))\n    parameters:\n    - id: value\n      type: System.Object\n      description: \"\\n<p>The value to validate.</p>\\n\"\n    - id: validationContext\n      type: System.ComponentModel.DataAnnotations.ValidationContext\n      description: \"\\n<p>The context that describes the object to validate.</p>\\n\"\n    - id: validationAttributes\n      type: System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute}\n      description: \"\\n<p>The validation attributes.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>validationContext</em> parameter is <strong>null</strong>.</p>\\n\"\n  - type: System.ComponentModel.DataAnnotations.ValidationException\n    commentId: T:System.ComponentModel.DataAnnotations.ValidationException\n    description: \"\\n<p>The <em>value</em> parameter does not validate with the <em>validationAttributes</em> parameter.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.ComponentModel.DataAnnotations.Validator.ValidateValue(System.Object, System.ComponentModel.DataAnnotations.ValidationContext, System.Collections.Generic.IEnumerable(Of System.ComponentModel.DataAnnotations.ValidationAttribute))\n  name.vb: ValidateValue(Object, ValidationContext, IEnumerable(Of ValidationAttribute))\n  nameWithType: Validator.ValidateValue(Object, ValidationContext, IEnumerable<ValidationAttribute>)\n  nameWithType.vb: Validator.ValidateValue(Object, ValidationContext, IEnumerable(Of ValidationAttribute))\nreferences:\n- uid: System.ComponentModel.DataAnnotations\n  isExternal: false\n  name: System.ComponentModel.DataAnnotations\n  fullName: System.ComponentModel.DataAnnotations\n  nameWithType: System.ComponentModel.DataAnnotations\n  commentId: N:System.ComponentModel.DataAnnotations\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.ComponentModel.DataAnnotations.ValidationContext\n  parent: System.ComponentModel.DataAnnotations\n  isExternal: false\n  name: ValidationContext\n  fullName: System.ComponentModel.DataAnnotations.ValidationContext\n  nameWithType: ValidationContext\n  commentId: T:System.ComponentModel.DataAnnotations.ValidationContext\n- uid: System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.ICollection`1\n  name: ICollection<ValidationResult>\n  fullName: System.Collections.Generic.ICollection<System.ComponentModel.DataAnnotations.ValidationResult>\n  fullname.vb: System.Collections.Generic.ICollection(Of System.ComponentModel.DataAnnotations.ValidationResult)\n  name.vb: ICollection(Of ValidationResult)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.ComponentModel.DataAnnotations.ValidationResult\n    name: ValidationResult\n    fullName: System.ComponentModel.DataAnnotations.ValidationResult\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.ComponentModel.DataAnnotations.ValidationResult\n    name: ValidationResult\n    fullName: System.ComponentModel.DataAnnotations.ValidationResult\n  - name: )\n    fullName: )\n  nameWithType: ICollection<ValidationResult>\n  nameWithType.vb: ICollection(Of ValidationResult)\n  commentId: T:System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult}\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Collections.Generic.ICollection`1\n  isExternal: false\n  name: ICollection<T>\n  fullName: System.Collections.Generic.ICollection<T>\n  fullname.vb: System.Collections.Generic.ICollection(Of T)\n  name.vb: ICollection(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: ICollection<T>\n  nameWithType.vb: ICollection(Of T)\n  commentId: T:System.Collections.Generic.ICollection`1\n- uid: System.Collections.Generic\n  isExternal: false\n  name: System.Collections.Generic\n  fullName: System.Collections.Generic\n  nameWithType: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n- uid: System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<ValidationAttribute>\n  fullName: System.Collections.Generic.IEnumerable<System.ComponentModel.DataAnnotations.ValidationAttribute>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of System.ComponentModel.DataAnnotations.ValidationAttribute)\n  name.vb: IEnumerable(Of ValidationAttribute)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute\n    name: ValidationAttribute\n    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute\n    name: ValidationAttribute\n    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<ValidationAttribute>\n  nameWithType.vb: IEnumerable(Of ValidationAttribute)\n  commentId: T:System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute}\n- uid: System.Collections.Generic.IEnumerable`1\n  isExternal: false\n  name: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of T)\n  name.vb: IEnumerable(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<T>\n  nameWithType.vb: IEnumerable(Of T)\n  commentId: T:System.Collections.Generic.IEnumerable`1\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ComponentModel.DataAnnotations.ValidationException\n  isExternal: false\n  name: ValidationException\n  fullName: System.ComponentModel.DataAnnotations.ValidationException\n  nameWithType: ValidationException\n  commentId: T:System.ComponentModel.DataAnnotations.ValidationException\n"}