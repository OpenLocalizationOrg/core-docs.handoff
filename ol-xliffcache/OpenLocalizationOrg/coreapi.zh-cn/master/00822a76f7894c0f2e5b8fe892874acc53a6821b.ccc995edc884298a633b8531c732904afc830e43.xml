{"nodes":[{"pos":[750,762],"content":"IPersistFile","needQuote":true,"nodes":[{"content":"IPersistFile","pos":[0,12]}]},{"pos":[2497,2517],"content":"GetClassID(out Guid)","needQuote":true,"nodes":[{"content":"GetClassID(out Guid)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;When this method returns, contains a reference to the CLSID.","pos":[3295,3360],"source":"\\n<p>When this method returns, contains a reference to the CLSID."},{"content":"This parameter is passed uninitialized.&lt;/p&gt;\\n","pos":[3361,3406],"source":" This parameter is passed uninitialized.</p>\\n"},{"pos":[3958,3980],"content":"GetCurFile(out String)","needQuote":true,"nodes":[{"content":"GetCurFile(out String)","pos":[0,22]}]},{"content":"\\n&lt;p&gt;When this method returns, contains the address of a pointer to a zero-terminated string containing the path for the current file, or the default file name prompt (such as *.txt).","pos":[4921,5104],"source":"\\n<p>When this method returns, contains the address of a pointer to a zero-terminated string containing the path for the current file, or the default file name prompt (such as *.txt)."},{"content":"This parameter is passed uninitialized.&lt;/p&gt;\\n","pos":[5105,5150],"source":" This parameter is passed uninitialized.</p>\\n"},{"pos":[5951,5960],"content":"IsDirty()","needQuote":true,"nodes":[{"content":"IsDirty()","pos":[0,9]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;S_OK&lt;/strong&gt; if the file has changed since it was last saved; &lt;strong&gt;S_FALSE&lt;/strong&gt; if the file has not changed since it was last saved.&lt;/p&gt;\\n","pos":[6744,6905],"source":"\\n<p>\\n<strong>S_OK</strong> if the file has changed since it was last saved; <strong>S_FALSE</strong> if the file has not changed since it was last saved.</p>\\n"},{"pos":[7277,7296],"content":"Load(String, Int32)","needQuote":true,"nodes":[{"content":"Load(String, Int32)","pos":[0,19]}]},{"content":"\\n&lt;p&gt;A zero-terminated string containing the absolute path of the file to open.","pos":[8154,8233],"source":"\\n<p>A zero-terminated string containing the absolute path of the file to open."},{"content":"&lt;/p&gt;\\n","pos":[8234,8240],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A combination of values from the &lt;strong&gt;STGM&lt;/strong&gt; enumeration to indicate the access mode in which to open &lt;em&gt;pszFileName&lt;/em&gt;.","pos":[8602,8740],"source":"\\n<p>A combination of values from the <strong>STGM</strong> enumeration to indicate the access mode in which to open <em>pszFileName</em>."},{"content":"&lt;/p&gt;\\n","pos":[8741,8747],"source":" </p>\\n"},{"pos":[9135,9156],"content":"Save(String, Boolean)","needQuote":true,"nodes":[{"content":"Save(String, Boolean)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;A zero-terminated string containing the absolute path of the file to which the object is saved.","pos":[10032,10132],"source":"\\n<p>A zero-terminated string containing the absolute path of the file to which the object is saved."},{"content":"&lt;/p&gt;\\n","pos":[10133,10139],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to used the &lt;em&gt;pszFileName&lt;/em&gt; parameter as the current working file; otherwise &lt;strong&gt;false&lt;/strong&gt;.","pos":[10506,10640],"source":"\\n<p>\\n<strong>true</strong> to used the <em>pszFileName</em> parameter as the current working file; otherwise <strong>false</strong>."},{"content":"&lt;/p&gt;\\n","pos":[10641,10647],"source":" </p>\\n"},{"pos":[11316,11337],"content":"SaveCompleted(String)","needQuote":true,"nodes":[{"content":"SaveCompleted(String)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The absolute path of the file where the object was previously saved.","pos":[12162,12235],"source":"\\n<p>The absolute path of the file where the object was previously saved."},{"content":"&lt;/p&gt;\\n","pos":[12236,12242],"source":" </p>\\n"},{"pos":[12680,12719],"content":"System.Runtime.InteropServices.ComTypes","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices.ComTypes","pos":[0,39]}]},{"pos":[12947,12951],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[13066,13072],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[13203,13209],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[13353,13358],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[13501,13508],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]}],"content":"items:\n- uid: System.Runtime.InteropServices.ComTypes.IPersistFile\n  commentId: T:System.Runtime.InteropServices.ComTypes.IPersistFile\n  id: IPersistFile\n  parent: System.Runtime.InteropServices.ComTypes\n  children:\n  - System.Runtime.InteropServices.ComTypes.IPersistFile.GetClassID(System.Guid@)\n  - System.Runtime.InteropServices.ComTypes.IPersistFile.GetCurFile(System.String@)\n  - System.Runtime.InteropServices.ComTypes.IPersistFile.IsDirty\n  - System.Runtime.InteropServices.ComTypes.IPersistFile.Load(System.String,System.Int32)\n  - System.Runtime.InteropServices.ComTypes.IPersistFile.Save(System.String,System.Boolean)\n  - System.Runtime.InteropServices.ComTypes.IPersistFile.SaveCompleted(System.String)\n  langs:\n  - csharp\n  - vb\n  name: IPersistFile\n  fullName: System.Runtime.InteropServices.ComTypes.IPersistFile\n  type: Interface\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IPersistFile.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IPersistFile\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IPersistFile.cs\n    startLine: 17\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Provides the managed definition of the <strong>IPersistFile</strong> interface, with functionality from <strong>IPersist</strong>.</p>\\n\"\n  syntax:\n    content: >-\n      [Guid(\"0000010b-0000-0000-C000-000000000046\")]\n\n      [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]\n\n      [ComImport]\n\n      public interface IPersistFile\n    content.vb: >-\n      <Guid(\"0000010b-0000-0000-C000-000000000046\")>\n\n      <InterfaceType(ComInterfaceType.InterfaceIsIUnknown)>\n\n      <ComImport>\n\n      Public Interface IPersistFile\n  attributes:\n  - type: System.Runtime.InteropServices.InterfaceTypeAttribute\n    ctor: System.Runtime.InteropServices.InterfaceTypeAttribute.#ctor(System.Runtime.InteropServices.ComInterfaceType)\n    arguments:\n    - type: System.Runtime.InteropServices.ComInterfaceType\n      value: 1\n  modifiers.csharp:\n  - public\n  - interface\n  modifiers.vb:\n  - Public\n  - Interface\n  nameWithType: IPersistFile\n- uid: System.Runtime.InteropServices.ComTypes.IPersistFile.GetClassID(System.Guid@)\n  commentId: M:System.Runtime.InteropServices.ComTypes.IPersistFile.GetClassID(System.Guid@)\n  id: GetClassID(System.Guid@)\n  parent: System.Runtime.InteropServices.ComTypes.IPersistFile\n  langs:\n  - csharp\n  - vb\n  name: GetClassID(out Guid)\n  fullName: System.Runtime.InteropServices.ComTypes.IPersistFile.GetClassID(out System.Guid)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IPersistFile.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetClassID\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IPersistFile.cs\n    startLine: 23\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Retrieves the class identifier (CLSID) of an object.</p>\\n\"\n  syntax:\n    content: void GetClassID(out Guid pClassID)\n    content.vb: Sub GetClassID(ByRef pClassID As Guid)\n    parameters:\n    - id: pClassID\n      type: System.Guid\n      description: \"\\n<p>When this method returns, contains a reference to the CLSID. This parameter is passed uninitialized.</p>\\n\"\n  fullName.vb: System.Runtime.InteropServices.ComTypes.IPersistFile.GetClassID(ByRef System.Guid)\n  name.vb: GetClassID(ByRef Guid)\n  nameWithType: IPersistFile.GetClassID(out Guid)\n  nameWithType.vb: IPersistFile.GetClassID(ByRef Guid)\n- uid: System.Runtime.InteropServices.ComTypes.IPersistFile.GetCurFile(System.String@)\n  commentId: M:System.Runtime.InteropServices.ComTypes.IPersistFile.GetCurFile(System.String@)\n  id: GetCurFile(System.String@)\n  parent: System.Runtime.InteropServices.ComTypes.IPersistFile\n  langs:\n  - csharp\n  - vb\n  name: GetCurFile(out String)\n  fullName: System.Runtime.InteropServices.ComTypes.IPersistFile.GetCurFile(out System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IPersistFile.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetCurFile\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IPersistFile.cs\n    startLine: 31\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Retrieves either the absolute path to the current working file of the object or, if there is no current working file, the default file name prompt of the object.</p>\\n\"\n  syntax:\n    content: void GetCurFile([MarshalAs(UnmanagedType.LPWStr)] out string ppszFileName)\n    content.vb: Sub GetCurFile(ByRef ppszFileName As String)\n    parameters:\n    - id: ppszFileName\n      type: System.String\n      description: \"\\n<p>When this method returns, contains the address of a pointer to a zero-terminated string containing the path for the current file, or the default file name prompt (such as *.txt). This parameter is passed uninitialized.</p>\\n\"\n      attributes:\n      - type: System.Runtime.InteropServices.MarshalAsAttribute\n        ctor: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)\n        arguments:\n        - type: System.Runtime.InteropServices.UnmanagedType\n          value: 21\n  fullName.vb: System.Runtime.InteropServices.ComTypes.IPersistFile.GetCurFile(ByRef System.String)\n  name.vb: GetCurFile(ByRef String)\n  nameWithType: IPersistFile.GetCurFile(out String)\n  nameWithType.vb: IPersistFile.GetCurFile(ByRef String)\n- uid: System.Runtime.InteropServices.ComTypes.IPersistFile.IsDirty\n  commentId: M:System.Runtime.InteropServices.ComTypes.IPersistFile.IsDirty\n  id: IsDirty\n  parent: System.Runtime.InteropServices.ComTypes.IPersistFile\n  langs:\n  - csharp\n  - vb\n  name: IsDirty()\n  fullName: System.Runtime.InteropServices.ComTypes.IPersistFile.IsDirty()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IPersistFile.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IsDirty\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IPersistFile.cs\n    startLine: 26\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Checks an object for changes since it was last saved to its current file.</p>\\n\"\n  syntax:\n    content: >-\n      [PreserveSig]\n\n      int IsDirty()\n    content.vb: >-\n      <PreserveSig>\n\n      Function IsDirty As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>\\n<strong>S_OK</strong> if the file has changed since it was last saved; <strong>S_FALSE</strong> if the file has not changed since it was last saved.</p>\\n\"\n  nameWithType: IPersistFile.IsDirty()\n- uid: System.Runtime.InteropServices.ComTypes.IPersistFile.Load(System.String,System.Int32)\n  commentId: M:System.Runtime.InteropServices.ComTypes.IPersistFile.Load(System.String,System.Int32)\n  id: Load(System.String,System.Int32)\n  parent: System.Runtime.InteropServices.ComTypes.IPersistFile\n  langs:\n  - csharp\n  - vb\n  name: Load(String, Int32)\n  fullName: System.Runtime.InteropServices.ComTypes.IPersistFile.Load(System.String, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IPersistFile.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Load\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IPersistFile.cs\n    startLine: 28\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Opens the specified file and initializes an object from the file contents.</p>\\n\"\n  syntax:\n    content: void Load([MarshalAs(UnmanagedType.LPWStr)] string pszFileName, int dwMode)\n    content.vb: Sub Load(pszFileName As String, dwMode As Integer)\n    parameters:\n    - id: pszFileName\n      type: System.String\n      description: \"\\n<p>A zero-terminated string containing the absolute path of the file to open. </p>\\n\"\n      attributes:\n      - type: System.Runtime.InteropServices.MarshalAsAttribute\n        ctor: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)\n        arguments:\n        - type: System.Runtime.InteropServices.UnmanagedType\n          value: 21\n    - id: dwMode\n      type: System.Int32\n      description: \"\\n<p>A combination of values from the <strong>STGM</strong> enumeration to indicate the access mode in which to open <em>pszFileName</em>. </p>\\n\"\n  nameWithType: IPersistFile.Load(String, Int32)\n- uid: System.Runtime.InteropServices.ComTypes.IPersistFile.Save(System.String,System.Boolean)\n  commentId: M:System.Runtime.InteropServices.ComTypes.IPersistFile.Save(System.String,System.Boolean)\n  id: Save(System.String,System.Boolean)\n  parent: System.Runtime.InteropServices.ComTypes.IPersistFile\n  langs:\n  - csharp\n  - vb\n  name: Save(String, Boolean)\n  fullName: System.Runtime.InteropServices.ComTypes.IPersistFile.Save(System.String, System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IPersistFile.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Save\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IPersistFile.cs\n    startLine: 29\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Saves a copy of the object into the specified file.</p>\\n\"\n  syntax:\n    content: void Save([MarshalAs(UnmanagedType.LPWStr)] string pszFileName, [MarshalAs(UnmanagedType.Bool)] bool fRemember)\n    content.vb: Sub Save(pszFileName As String, fRemember As Boolean)\n    parameters:\n    - id: pszFileName\n      type: System.String\n      description: \"\\n<p>A zero-terminated string containing the absolute path of the file to which the object is saved. </p>\\n\"\n      attributes:\n      - type: System.Runtime.InteropServices.MarshalAsAttribute\n        ctor: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)\n        arguments:\n        - type: System.Runtime.InteropServices.UnmanagedType\n          value: 21\n    - id: fRemember\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to used the <em>pszFileName</em> parameter as the current working file; otherwise <strong>false</strong>. </p>\\n\"\n      attributes:\n      - type: System.Runtime.InteropServices.MarshalAsAttribute\n        ctor: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)\n        arguments:\n        - type: System.Runtime.InteropServices.UnmanagedType\n          value: 2\n  nameWithType: IPersistFile.Save(String, Boolean)\n- uid: System.Runtime.InteropServices.ComTypes.IPersistFile.SaveCompleted(System.String)\n  commentId: M:System.Runtime.InteropServices.ComTypes.IPersistFile.SaveCompleted(System.String)\n  id: SaveCompleted(System.String)\n  parent: System.Runtime.InteropServices.ComTypes.IPersistFile\n  langs:\n  - csharp\n  - vb\n  name: SaveCompleted(String)\n  fullName: System.Runtime.InteropServices.ComTypes.IPersistFile.SaveCompleted(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IPersistFile.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SaveCompleted\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IPersistFile.cs\n    startLine: 30\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Notifies the object that it can write to its file.</p>\\n\"\n  syntax:\n    content: void SaveCompleted([MarshalAs(UnmanagedType.LPWStr)] string pszFileName)\n    content.vb: Sub SaveCompleted(pszFileName As String)\n    parameters:\n    - id: pszFileName\n      type: System.String\n      description: \"\\n<p>The absolute path of the file where the object was previously saved. </p>\\n\"\n      attributes:\n      - type: System.Runtime.InteropServices.MarshalAsAttribute\n        ctor: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)\n        arguments:\n        - type: System.Runtime.InteropServices.UnmanagedType\n          value: 21\n  nameWithType: IPersistFile.SaveCompleted(String)\nreferences:\n- uid: System.Runtime.InteropServices.ComTypes\n  isExternal: false\n  name: System.Runtime.InteropServices.ComTypes\n  fullName: System.Runtime.InteropServices.ComTypes\n  nameWithType: System.Runtime.InteropServices.ComTypes\n  commentId: N:System.Runtime.InteropServices.ComTypes\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  fullName: System.Guid\n  nameWithType: Guid\n  commentId: T:System.Guid\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n"}