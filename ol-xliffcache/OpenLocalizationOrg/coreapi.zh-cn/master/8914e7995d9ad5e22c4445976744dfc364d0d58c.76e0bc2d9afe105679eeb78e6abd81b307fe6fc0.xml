{"nodes":[{"pos":[365,385],"content":"IEqualityComparer<T>","needQuote":true,"nodes":[{"content":"IEqualityComparer&lt;T&gt;","pos":[0,20],"source":"IEqualityComparer<T>"}]},{"content":"\\n&lt;p&gt;The type of objects to compare.&lt;/p&gt;\\n","pos":[1093,1135],"source":"\\n<p>The type of objects to compare.</p>\\n"},{"pos":[2121,2133],"content":"Equals(T, T)","needQuote":true,"nodes":[{"content":"Equals(T, T)","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The first object of type &lt;em&gt;T&lt;/em&gt; to compare.&lt;/p&gt;\\n","pos":[2819,2877],"source":"\\n<p>The first object of type <em>T</em> to compare.</p>\\n"},{"content":"\\n&lt;p&gt;The second object of type &lt;em&gt;T&lt;/em&gt; to compare.&lt;/p&gt;\\n","pos":[2929,2988],"source":"\\n<p>The second object of type <em>T</em> to compare.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the specified objects are equal; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[3049,3154],"source":"\\n<p>\\n<strong>true</strong> if the specified objects are equal; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[3603,3617],"content":"GetHashCode(T)","needQuote":true,"nodes":[{"content":"GetHashCode(T)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;A hash code for the specified object.&lt;/p&gt;\\n","pos":[4494,4542],"source":"\\n<p>A hash code for the specified object.</p>\\n"},{"content":"\\n&lt;p&gt;The type of &lt;em&gt;obj&lt;/em&gt; is a reference type and &lt;em&gt;obj&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[4661,4759],"source":"\\n<p>The type of <em>obj</em> is a reference type and <em>obj</em> is <strong>null</strong>.</p>\\n"},{"pos":[5217,5243],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]},{"pos":[5405,5406],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[5525,5532],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[5651,5652],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[5727,5733],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[5863,5868],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[6008,6029],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]}],"content":"items:\n- uid: System.Collections.Generic.IEqualityComparer`1\n  commentId: T:System.Collections.Generic.IEqualityComparer`1\n  id: IEqualityComparer`1\n  parent: System.Collections.Generic\n  children:\n  - System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)\n  - System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)\n  langs:\n  - csharp\n  - vb\n  name: IEqualityComparer<T>\n  fullName: System.Collections.Generic.IEqualityComparer<T>\n  type: Interface\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/Generic/IEqualityComparer.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IEqualityComparer\n    path: src/mscorlib/src/System/Collections/Generic/IEqualityComparer.cs\n    startLine: 12\n  assemblies:\n  - System.Runtime\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Defines methods to support the comparison of objects for equality.</p>\\n\"\n  syntax:\n    content: public interface IEqualityComparer<in T>\n    content.vb: Public Interface IEqualityComparer(Of In T)\n    typeParameters:\n    - id: T\n      description: \"\\n<p>The type of objects to compare.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.EqualityComparer`1\n    commentId: T:System.Collections.Generic.EqualityComparer`1\n  - type: System.Collections.Generic.Dictionary`2\n    commentId: T:System.Collections.Generic.Dictionary`2\n  - type: System.Collections.Generic.Dictionary`2.#ctor\n    commentId: M:System.Collections.Generic.Dictionary`2.#ctor\n  - type: System.Collections.Generic.IComparer`1\n    commentId: T:System.Collections.Generic.IComparer`1\n  modifiers.csharp:\n  - public\n  - interface\n  modifiers.vb:\n  - Public\n  - Interface\n  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T)\n  name.vb: IEqualityComparer(Of T)\n  nameWithType: IEqualityComparer<T>\n  nameWithType.vb: IEqualityComparer(Of T)\n- uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)\n  commentId: M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)\n  id: Equals(`0,`0)\n  parent: System.Collections.Generic.IEqualityComparer`1\n  langs:\n  - csharp\n  - vb\n  name: Equals(T, T)\n  fullName: System.Collections.Generic.IEqualityComparer<T>.Equals(T, T)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/Generic/IEqualityComparer.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Equals\n    path: src/mscorlib/src/System/Collections/Generic/IEqualityComparer.cs\n    startLine: 14\n  assemblies:\n  - System.Runtime\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Determines whether the specified objects are equal.</p>\\n\"\n  syntax:\n    content: bool Equals(T x, T y)\n    content.vb: Function Equals(x As T, y As T) As Boolean\n    parameters:\n    - id: x\n      type: '{T}'\n      description: \"\\n<p>The first object of type <em>T</em> to compare.</p>\\n\"\n    - id: y\n      type: '{T}'\n      description: \"\\n<p>The second object of type <em>T</em> to compare.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the specified objects are equal; otherwise, <strong>false</strong>.</p>\\n\"\n  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T).Equals(T, T)\n  nameWithType: IEqualityComparer<T>.Equals(T, T)\n  nameWithType.vb: IEqualityComparer(Of T).Equals(T, T)\n- uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)\n  commentId: M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)\n  id: GetHashCode(`0)\n  parent: System.Collections.Generic.IEqualityComparer`1\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode(T)\n  fullName: System.Collections.Generic.IEqualityComparer<T>.GetHashCode(T)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/Generic/IEqualityComparer.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetHashCode\n    path: src/mscorlib/src/System/Collections/Generic/IEqualityComparer.cs\n    startLine: 15\n  assemblies:\n  - System.Runtime\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Returns a hash code for the specified object.</p>\\n\"\n  syntax:\n    content: int GetHashCode(T obj)\n    content.vb: Function GetHashCode(obj As T) As Integer\n    parameters:\n    - id: obj\n      type: '{T}'\n      description: \"\\n<p>The <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for which a hash code is to be returned.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>A hash code for the specified object.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The type of <em>obj</em> is a reference type and <em>obj</em> is <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.Object.GetHashCode\n    commentId: M:System.Object.GetHashCode\n  - type: System.Collections.IHashCodeProvider\n    commentId: T:System.Collections.IHashCodeProvider\n  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T).GetHashCode(T)\n  nameWithType: IEqualityComparer<T>.GetHashCode(T)\n  nameWithType.vb: IEqualityComparer(Of T).GetHashCode(T)\nreferences:\n- uid: System.Collections.Generic\n  isExternal: false\n  name: System.Collections.Generic\n  fullName: System.Collections.Generic\n  nameWithType: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n- uid: '{T}'\n  definition: T\n  name: T\n  fullName: T\n  nameWithType: T\n  commentId: '!:T'\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: T\n  isExternal: false\n  name: T\n  fullName: T\n  nameWithType: T\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n"}