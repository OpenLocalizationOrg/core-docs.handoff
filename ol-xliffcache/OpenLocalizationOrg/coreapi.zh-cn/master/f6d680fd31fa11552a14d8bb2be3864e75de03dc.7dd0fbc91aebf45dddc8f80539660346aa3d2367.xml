{"nodes":[{"pos":[218,236],"content":"DoWorkEventHandler","needQuote":true,"nodes":[{"content":"DoWorkEventHandler","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The source of the event.&lt;/p&gt;\\n","pos":[1206,1241],"source":"\\n<p>The source of the event.</p>\\n"},{"pos":[1874,1895],"content":"System.ComponentModel","needQuote":true,"nodes":[{"content":"System.ComponentModel","pos":[0,21]}]},{"pos":[2243,2258],"content":"GetMethodInfo()","needQuote":true,"nodes":[{"content":"GetMethodInfo()","pos":[0,15]}]},{"pos":[2427,2440],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[2525,2526],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[2553,2554],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[2661,2674],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[2759,2760],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[2787,2788],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[3023,3029],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[3213,3228],"content":"DoWorkEventArgs","needQuote":true,"nodes":[{"content":"DoWorkEventArgs","pos":[0,15]}]},{"pos":[3475,3498],"content":"GetMethodInfo(Delegate)","needQuote":true,"nodes":[{"content":"GetMethodInfo(Delegate)","pos":[0,23]}]},{"pos":[3699,3712],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[3797,3798],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[3850,3858],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[3920,3921],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[4045,4058],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[4143,4144],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[4196,4204],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[4266,4267],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[4553,4580],"content":"RuntimeReflectionExtensions","needQuote":true,"nodes":[{"content":"RuntimeReflectionExtensions","pos":[0,27]}]},{"pos":[4786,4792],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[4910,4927],"content":"System.Reflection","needQuote":true,"nodes":[{"content":"System.Reflection","pos":[0,17]}]}],"content":"items:\n- uid: System.ComponentModel.DoWorkEventHandler\n  commentId: T:System.ComponentModel.DoWorkEventHandler\n  id: DoWorkEventHandler\n  parent: System.ComponentModel\n  children: []\n  langs:\n  - csharp\n  - vb\n  name: DoWorkEventHandler\n  fullName: System.ComponentModel.DoWorkEventHandler\n  type: Delegate\n  source:\n    remote:\n      path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/DoWorkEvent.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DoWorkEventHandler\n    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/DoWorkEvent.cs\n    startLine: 6\n  assemblies:\n  - System.ComponentModel.EventBasedAsync\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Represents the method that will handle the <xref href=\\\"System.ComponentModel.BackgroundWorker.DoWork\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> event. This class cannot be inherited.</p>\\n\"\n  syntax:\n    content: public delegate void DoWorkEventHandler(object sender, DoWorkEventArgs e);\n    content.vb: Public Delegate Sub DoWorkEventHandler(sender As Object, e As DoWorkEventArgs)\n    parameters:\n    - id: sender\n      type: System.Object\n      description: \"\\n<p>The source of the event.</p>\\n\"\n    - id: e\n      type: System.ComponentModel.DoWorkEventArgs\n      description: \"\\n<p>A <xref href=\\\"System.ComponentModel.DoWorkEventArgs\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>    that contains the event data.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.BackgroundWorker\n    commentId: T:System.ComponentModel.BackgroundWorker\n  modifiers.csharp:\n  - public\n  - delegate\n  modifiers.vb:\n  - Public\n  - Delegate\n  nameWithType: DoWorkEventHandler\n  extensionMethods:\n  - System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\nreferences:\n- uid: System.ComponentModel\n  isExternal: false\n  name: System.ComponentModel\n  fullName: System.ComponentModel\n  nameWithType: System.ComponentModel\n  commentId: N:System.ComponentModel\n- uid: System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  parent: System.Reflection.RuntimeReflectionExtensions\n  definition: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  name: GetMethodInfo()\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo()\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: RuntimeReflectionExtensions.GetMethodInfo()\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.ComponentModel.DoWorkEventArgs\n  parent: System.ComponentModel\n  isExternal: false\n  name: DoWorkEventArgs\n  fullName: System.ComponentModel.DoWorkEventArgs\n  nameWithType: DoWorkEventArgs\n  commentId: T:System.ComponentModel.DoWorkEventArgs\n- uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  isExternal: true\n  name: GetMethodInfo(Delegate)\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: RuntimeReflectionExtensions.GetMethodInfo(Delegate)\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n- uid: System.Reflection.RuntimeReflectionExtensions\n  parent: System.Reflection\n  isExternal: false\n  name: RuntimeReflectionExtensions\n  fullName: System.Reflection.RuntimeReflectionExtensions\n  nameWithType: RuntimeReflectionExtensions\n  commentId: T:System.Reflection.RuntimeReflectionExtensions\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Reflection\n  isExternal: false\n  name: System.Reflection\n  fullName: System.Reflection\n  nameWithType: System.Reflection\n  commentId: N:System.Reflection\n"}