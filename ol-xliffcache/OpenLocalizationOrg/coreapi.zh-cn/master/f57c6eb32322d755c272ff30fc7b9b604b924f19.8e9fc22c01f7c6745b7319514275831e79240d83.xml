{"nodes":[{"pos":[816,832],"content":"ParameterBuilder","needQuote":true,"nodes":[{"content":"ParameterBuilder","pos":[0,16]}]},{"pos":[2440,2450],"content":"Attributes","needQuote":true,"nodes":[{"content":"Attributes","pos":[0,10]}]},{"content":"\\n&lt;p&gt;Read-only.","pos":[3176,3191],"source":"\\n<p>Read-only."},{"content":"Retrieves the attributes for this parameter.&lt;/p&gt;\\n","pos":[3192,3242],"source":" Retrieves the attributes for this parameter.</p>\\n"},{"pos":[3603,3607],"content":"IsIn","needQuote":true,"nodes":[{"content":"IsIn","pos":[0,4]}]},{"content":"\\n&lt;p&gt;Read-only.","pos":[4293,4308],"source":"\\n<p>Read-only."},{"content":"Retrieves whether this is an input parameter.&lt;/p&gt;\\n","pos":[4309,4360],"source":" Retrieves whether this is an input parameter.</p>\\n"},{"pos":[4705,4715],"content":"IsOptional","needQuote":true,"nodes":[{"content":"IsOptional","pos":[0,10]}]},{"content":"\\n&lt;p&gt;Read-only.","pos":[5425,5440],"source":"\\n<p>Read-only."},{"content":"Specifies whether this parameter is optional.&lt;/p&gt;\\n","pos":[5441,5492],"source":" Specifies whether this parameter is optional.</p>\\n"},{"pos":[5828,5833],"content":"IsOut","needQuote":true,"nodes":[{"content":"IsOut","pos":[0,5]}]},{"content":"\\n&lt;p&gt;Read-only.","pos":[6534,6549],"source":"\\n<p>Read-only."},{"content":"Retrieves whether this parameter is an output parameter.&lt;/p&gt;\\n","pos":[6550,6612],"source":" Retrieves whether this parameter is an output parameter.</p>\\n"},{"pos":[6940,6944],"content":"Name","needQuote":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"content":"\\n&lt;p&gt;Read-only.","pos":[7642,7657],"source":"\\n<p>Read-only."},{"content":"Retrieves the name of this parameter.&lt;/p&gt;\\n","pos":[7658,7701],"source":" Retrieves the name of this parameter.</p>\\n"},{"pos":[8068,8076],"content":"Position","needQuote":true,"nodes":[{"content":"Position","pos":[0,8]}]},{"content":"\\n&lt;p&gt;Read-only.","pos":[8802,8817],"source":"\\n<p>Read-only."},{"content":"Retrieves the signature position for this parameter.&lt;/p&gt;\\n","pos":[8818,8876],"source":" Retrieves the signature position for this parameter.</p>\\n"},{"pos":[9301,9320],"content":"SetConstant(Object)","needQuote":true,"nodes":[{"content":"SetConstant(Object)","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The default value of this parameter.","pos":[10157,10198],"source":"\\n<p>The default value of this parameter."},{"content":"&lt;/p&gt;\\n","pos":[10199,10205],"source":" </p>\\n"},{"pos":[11413,11456],"content":"SetCustomAttribute(ConstructorInfo, Byte[])","needQuote":true,"nodes":[{"content":"SetCustomAttribute(ConstructorInfo, Byte[])","pos":[0,43]}]},{"content":"\\n&lt;p&gt;The constructor for the custom attribute.","pos":[12473,12519],"source":"\\n<p>The constructor for the custom attribute."},{"content":"&lt;/p&gt;\\n","pos":[12520,12526],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A byte blob representing the attributes.","pos":[12600,12645],"source":"\\n<p>A byte blob representing the attributes."},{"content":"&lt;/p&gt;\\n","pos":[12646,12652],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;con&lt;/em&gt; or &lt;em&gt;binaryAttribute&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[12771,12844],"source":"\\n<p>\\n<em>con</em> or <em>binaryAttribute</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[12845,12851],"source":" </p>\\n"},{"pos":[13788,13830],"content":"SetCustomAttribute(CustomAttributeBuilder)","needQuote":true,"nodes":[{"content":"SetCustomAttribute(CustomAttributeBuilder)","pos":[0,42]}]},{"content":"\\n&lt;p&gt;An instance of a helper class to define the custom attribute.","pos":[14790,14856],"source":"\\n<p>An instance of a helper class to define the custom attribute."},{"content":"&lt;/p&gt;\\n","pos":[14857,14863],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;con&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[14982,15027],"source":"\\n<p>\\n<em>con</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[15028,15034],"source":" </p>\\n"},{"pos":[15390,15412],"content":"System.Reflection.Emit","needQuote":true,"nodes":[{"content":"System.Reflection.Emit","pos":[0,22]}]},{"pos":[15591,15597],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15757,15767],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[15862,15870],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[15939,15940],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15967,15968],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16038,16046],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[16115,16116],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16143,16144],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16327,16341],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[16460,16466],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16533,16534],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16584,16590],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16650,16651],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16734,16740],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16807,16808],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16858,16864],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16924,16925],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17139,17161],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[17309,17315],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17382,17383],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17433,17439],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17500,17501]},{"pos":[17556,17562],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17622,17623],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17720,17726],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17793,17794],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17844,17850],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17911,17912]},{"pos":[17967,17973],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18033,18034],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18279,18310],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[18476,18491],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[18567,18568],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18618,18624],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18685,18686]},{"pos":[18741,18747],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18807,18808],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18914,18929],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[19005,19006],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19056,19062],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[19123,19124]},{"pos":[19179,19185],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19245,19246],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19476,19489],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[19590,19601],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[19673,19674],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19701,19702],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19775,19786],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[19858,19859],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19886,19887],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20062,20071],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[20164,20171],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[20239,20240],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20267,20268],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20337,20344],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[20412,20413],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20440,20441],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20616,20633],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[20742,20757],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[20833,20834],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20861,20862],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20939,20954],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[21030,21031],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21058,21059],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21204,21210],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[21340,21345],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[21488,21495],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[21643,21649],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[21825,21840],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"pos":[21997,22003],"content":"Byte[]","needQuote":true,"nodes":[{"content":"Byte[]","pos":[0,6]}]},{"pos":[22123,22127],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[22186,22188]},{"pos":[22251,22255],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[22313,22315],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[22435,22452],"content":"System.Reflection","needQuote":true,"nodes":[{"content":"System.Reflection","pos":[0,17]}]},{"pos":[22664,22686],"content":"CustomAttributeBuilder","needQuote":true,"nodes":[{"content":"CustomAttributeBuilder","pos":[0,22]}]},{"pos":[22922,22939],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[23115,23136],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]}],"content":"items:\n- uid: System.Reflection.Emit.ParameterBuilder\n  commentId: T:System.Reflection.Emit.ParameterBuilder\n  id: ParameterBuilder\n  parent: System.Reflection.Emit\n  children:\n  - System.Reflection.Emit.ParameterBuilder.Attributes\n  - System.Reflection.Emit.ParameterBuilder.IsIn\n  - System.Reflection.Emit.ParameterBuilder.IsOptional\n  - System.Reflection.Emit.ParameterBuilder.IsOut\n  - System.Reflection.Emit.ParameterBuilder.Name\n  - System.Reflection.Emit.ParameterBuilder.Position\n  - System.Reflection.Emit.ParameterBuilder.SetConstant(System.Object)\n  - System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  - System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  langs:\n  - csharp\n  - vb\n  name: ParameterBuilder\n  fullName: System.Reflection.Emit.ParameterBuilder\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/ParameterBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ParameterBuilder\n    path: src/mscorlib/src/System/Reflection/Emit/ParameterBuilder.cs\n    startLine: 21\n  assemblies:\n  - System.Reflection.Emit.ILGeneration\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Creates or associates parameter information.</p>\\n\"\n  syntax:\n    content: >-\n      [ClassInterface(ClassInterfaceType.None)]\n\n      [ComDefaultInterface(typeof (_ParameterBuilder))]\n\n      [ComVisible(true)]\n\n      public class ParameterBuilder : _ParameterBuilder\n    content.vb: >-\n      <ClassInterface(ClassInterfaceType.None)>\n\n      <ComDefaultInterface(GetType(_ParameterBuilder))>\n\n      <ComVisible(True)>\n\n      Public Class ParameterBuilder\n          Implements _ParameterBuilder\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: ParameterBuilder\n- uid: System.Reflection.Emit.ParameterBuilder.Attributes\n  commentId: P:System.Reflection.Emit.ParameterBuilder.Attributes\n  id: Attributes\n  parent: System.Reflection.Emit.ParameterBuilder\n  langs:\n  - csharp\n  - vb\n  name: Attributes\n  fullName: System.Reflection.Emit.ParameterBuilder.Attributes\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/ParameterBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Attributes\n    path: src/mscorlib/src/System/Reflection/Emit/ParameterBuilder.cs\n    startLine: 151\n  assemblies:\n  - System.Reflection.Emit.ILGeneration\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Retrieves the attributes for this parameter.</p>\\n\"\n  syntax:\n    content: public virtual int Attributes { get; }\n    content.vb: Public Overridable ReadOnly Property Attributes As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>Read-only. Retrieves the attributes for this parameter.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: ParameterBuilder.Attributes\n- uid: System.Reflection.Emit.ParameterBuilder.IsIn\n  commentId: P:System.Reflection.Emit.ParameterBuilder.IsIn\n  id: IsIn\n  parent: System.Reflection.Emit.ParameterBuilder\n  langs:\n  - csharp\n  - vb\n  name: IsIn\n  fullName: System.Reflection.Emit.ParameterBuilder.IsIn\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/ParameterBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IsIn\n    path: src/mscorlib/src/System/Reflection/Emit/ParameterBuilder.cs\n    startLine: 155\n  assemblies:\n  - System.Reflection.Emit.ILGeneration\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Retrieves whether this is an input parameter.</p>\\n\"\n  syntax:\n    content: public bool IsIn { get; }\n    content.vb: Public ReadOnly Property IsIn As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Read-only. Retrieves whether this is an input parameter.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ParameterBuilder.IsIn\n- uid: System.Reflection.Emit.ParameterBuilder.IsOptional\n  commentId: P:System.Reflection.Emit.ParameterBuilder.IsOptional\n  id: IsOptional\n  parent: System.Reflection.Emit.ParameterBuilder\n  langs:\n  - csharp\n  - vb\n  name: IsOptional\n  fullName: System.Reflection.Emit.ParameterBuilder.IsOptional\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/ParameterBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IsOptional\n    path: src/mscorlib/src/System/Reflection/Emit/ParameterBuilder.cs\n    startLine: 161\n  assemblies:\n  - System.Reflection.Emit.ILGeneration\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Retrieves whether this parameter is optional.</p>\\n\"\n  syntax:\n    content: public bool IsOptional { get; }\n    content.vb: Public ReadOnly Property IsOptional As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Read-only. Specifies whether this parameter is optional.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ParameterBuilder.IsOptional\n- uid: System.Reflection.Emit.ParameterBuilder.IsOut\n  commentId: P:System.Reflection.Emit.ParameterBuilder.IsOut\n  id: IsOut\n  parent: System.Reflection.Emit.ParameterBuilder\n  langs:\n  - csharp\n  - vb\n  name: IsOut\n  fullName: System.Reflection.Emit.ParameterBuilder.IsOut\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/ParameterBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IsOut\n    path: src/mscorlib/src/System/Reflection/Emit/ParameterBuilder.cs\n    startLine: 158\n  assemblies:\n  - System.Reflection.Emit.ILGeneration\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Retrieves whether this parameter is an output parameter.</p>\\n\"\n  syntax:\n    content: public bool IsOut { get; }\n    content.vb: Public ReadOnly Property IsOut As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Read-only. Retrieves whether this parameter is an output parameter.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ParameterBuilder.IsOut\n- uid: System.Reflection.Emit.ParameterBuilder.Name\n  commentId: P:System.Reflection.Emit.ParameterBuilder.Name\n  id: Name\n  parent: System.Reflection.Emit.ParameterBuilder\n  langs:\n  - csharp\n  - vb\n  name: Name\n  fullName: System.Reflection.Emit.ParameterBuilder.Name\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/ParameterBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Name\n    path: src/mscorlib/src/System/Reflection/Emit/ParameterBuilder.cs\n    startLine: 143\n  assemblies:\n  - System.Reflection.Emit.ILGeneration\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Retrieves the name of this parameter.</p>\\n\"\n  syntax:\n    content: public virtual string Name { get; }\n    content.vb: Public Overridable ReadOnly Property Name As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>Read-only. Retrieves the name of this parameter.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: ParameterBuilder.Name\n- uid: System.Reflection.Emit.ParameterBuilder.Position\n  commentId: P:System.Reflection.Emit.ParameterBuilder.Position\n  id: Position\n  parent: System.Reflection.Emit.ParameterBuilder\n  langs:\n  - csharp\n  - vb\n  name: Position\n  fullName: System.Reflection.Emit.ParameterBuilder.Position\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/ParameterBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Position\n    path: src/mscorlib/src/System/Reflection/Emit/ParameterBuilder.cs\n    startLine: 147\n  assemblies:\n  - System.Reflection.Emit.ILGeneration\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Retrieves the signature position for this parameter.</p>\\n\"\n  syntax:\n    content: public virtual int Position { get; }\n    content.vb: Public Overridable ReadOnly Property Position As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>Read-only. Retrieves the signature position for this parameter.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: ParameterBuilder.Position\n- uid: System.Reflection.Emit.ParameterBuilder.SetConstant(System.Object)\n  commentId: M:System.Reflection.Emit.ParameterBuilder.SetConstant(System.Object)\n  id: SetConstant(System.Object)\n  parent: System.Reflection.Emit.ParameterBuilder\n  langs:\n  - csharp\n  - vb\n  name: SetConstant(Object)\n  fullName: System.Reflection.Emit.ParameterBuilder.SetConstant(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/ParameterBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetConstant\n    path: src/mscorlib/src/System/Reflection/Emit/ParameterBuilder.cs\n    startLine: 46\n  assemblies:\n  - System.Reflection.Emit.ILGeneration\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Sets the default value of the parameter.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public virtual void SetConstant(object defaultValue)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Overridable Sub SetConstant(defaultValue As Object)\n    parameters:\n    - id: defaultValue\n      type: System.Object\n      description: \"\\n<p>The default value of this parameter. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The parameter is not one of the supported types.</p>\\n<p>-or-</p>\\n<p>The type of <em>defaultValue</em> does not match the type of the parameter.</p>\\n<p>-or-</p>\\n<p>The parameter is of type <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or other reference type, <em>defaultValue</em> is not <strong>null</strong>, and the value cannot be assigned to the reference type.</p>\\n\"\n  attributes:\n  - type: System.Security.SecuritySafeCriticalAttribute\n    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: ParameterBuilder.SetConstant(Object)\n- uid: System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  commentId: M:System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  id: SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  parent: System.Reflection.Emit.ParameterBuilder\n  langs:\n  - csharp\n  - vb\n  name: SetCustomAttribute(ConstructorInfo, Byte[])\n  fullName: System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte[])\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/ParameterBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetCustomAttribute\n    path: src/mscorlib/src/System/Reflection/Emit/ParameterBuilder.cs\n    startLine: 58\n  assemblies:\n  - System.Reflection.Emit.ILGeneration\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Set a custom attribute using a specified custom attribute blob.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      [ComVisible(true)]\n\n      public void SetCustomAttribute(ConstructorInfo con, byte[] binaryAttribute)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      <ComVisible(True)>\n\n      Public Sub SetCustomAttribute(con As ConstructorInfo, binaryAttribute As Byte())\n    parameters:\n    - id: con\n      type: System.Reflection.ConstructorInfo\n      description: \"\\n<p>The constructor for the custom attribute. </p>\\n\"\n    - id: binaryAttribute\n      type: System.Byte[]\n      description: \"\\n<p>A byte blob representing the attributes. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>con</em> or <em>binaryAttribute</em> is <strong>null</strong>. </p>\\n\"\n  attributes:\n  - type: System.Security.SecuritySafeCriticalAttribute\n    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte())\n  name.vb: SetCustomAttribute(ConstructorInfo, Byte())\n  nameWithType: ParameterBuilder.SetCustomAttribute(ConstructorInfo, Byte[])\n  nameWithType.vb: ParameterBuilder.SetCustomAttribute(ConstructorInfo, Byte())\n- uid: System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  commentId: M:System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  id: SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  parent: System.Reflection.Emit.ParameterBuilder\n  langs:\n  - csharp\n  - vb\n  name: SetCustomAttribute(CustomAttributeBuilder)\n  fullName: System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/ParameterBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetCustomAttribute\n    path: src/mscorlib/src/System/Reflection/Emit/ParameterBuilder.cs\n    startLine: 77\n  assemblies:\n  - System.Reflection.Emit.ILGeneration\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Set a custom attribute using a custom attribute builder.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public void SetCustomAttribute(CustomAttributeBuilder customBuilder)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Sub SetCustomAttribute(customBuilder As CustomAttributeBuilder)\n    parameters:\n    - id: customBuilder\n      type: System.Reflection.Emit.CustomAttributeBuilder\n      description: \"\\n<p>An instance of a helper class to define the custom attribute. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>con</em> is <strong>null</strong>. </p>\\n\"\n  attributes:\n  - type: System.Security.SecuritySafeCriticalAttribute\n    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ParameterBuilder.SetCustomAttribute(CustomAttributeBuilder)\nreferences:\n- uid: System.Reflection.Emit\n  isExternal: false\n  name: System.Reflection.Emit\n  fullName: System.Reflection.Emit\n  nameWithType: System.Reflection.Emit\n  commentId: N:System.Reflection.Emit\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Reflection.ConstructorInfo\n  parent: System.Reflection\n  isExternal: false\n  name: ConstructorInfo\n  fullName: System.Reflection.ConstructorInfo\n  nameWithType: ConstructorInfo\n  commentId: T:System.Reflection.ConstructorInfo\n- uid: System.Byte[]\n  name: Byte[]\n  fullName: System.Byte[]\n  fullname.vb: System.Byte()\n  name.vb: Byte()\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Byte[]\n  nameWithType.vb: Byte()\n- uid: System.Reflection\n  isExternal: false\n  name: System.Reflection\n  fullName: System.Reflection\n  nameWithType: System.Reflection\n  commentId: N:System.Reflection\n- uid: System.Reflection.Emit.CustomAttributeBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: CustomAttributeBuilder\n  fullName: System.Reflection.Emit.CustomAttributeBuilder\n  nameWithType: CustomAttributeBuilder\n  commentId: T:System.Reflection.Emit.CustomAttributeBuilder\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n"}