{"nodes":[{"pos":[397,417],"content":"ThreadStateException","needQuote":true,"nodes":[{"content":"ThreadStateException","pos":[0,20]}]},{"pos":[3142,3164],"content":"ThreadStateException()","needQuote":true,"nodes":[{"content":"ThreadStateException()","pos":[0,22]}]},{"pos":[4234,4262],"content":"ThreadStateException(String)","needQuote":true,"nodes":[{"content":"ThreadStateException(String)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The error message that explains the reason for the exception.","pos":[5095,5161],"source":"\\n<p>The error message that explains the reason for the exception."},{"content":"&lt;/p&gt;\\n","pos":[5162,5168],"source":" </p>\\n"},{"pos":[5597,5636],"content":"ThreadStateException(String, Exception)","needQuote":true,"nodes":[{"content":"ThreadStateException(String, Exception)","pos":[0,39]}]},{"content":"\\n&lt;p&gt;The error message that explains the reason for the exception.","pos":[6617,6683],"source":"\\n<p>The error message that explains the reason for the exception."},{"content":"&lt;/p&gt;\\n","pos":[6684,6690],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The exception that is the cause of the current exception.","pos":[6766,6828],"source":"\\n<p>The exception that is the cause of the current exception."},{"content":"If the &lt;em&gt;innerException&lt;/em&gt; parameter is not &lt;strong&gt;null&lt;/strong&gt;, the current exception is raised in a &lt;strong&gt;catch&lt;/strong&gt; block that handles the inner exception.","pos":[6829,6999],"source":" If the <em>innerException</em> parameter is not <strong>null</strong>, the current exception is raised in a <strong>catch</strong> block that handles the inner exception."},{"content":"&lt;/p&gt;\\n","pos":[7000,7006],"source":" </p>\\n"},{"pos":[7279,7295],"content":"System.Threading","needQuote":true,"nodes":[{"content":"System.Threading","pos":[0,16]}]},{"pos":[7456,7462],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7610,7619],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[7824,7837],"content":"ISerializable","needQuote":true,"nodes":[{"content":"ISerializable","pos":[0,13]}]},{"pos":[8098,8108],"content":"_Exception","needQuote":true,"nodes":[{"content":"_Exception","pos":[0,10]}]},{"pos":[8343,8361],"content":"GetBaseException()","needQuote":true,"nodes":[{"content":"GetBaseException()","pos":[0,18]}]},{"pos":[8478,8494],"content":"GetBaseException","needQuote":true,"nodes":[{"content":"GetBaseException","pos":[0,16]}]},{"pos":[8553,8554],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8581,8582],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8663,8679],"content":"GetBaseException","needQuote":true,"nodes":[{"content":"GetBaseException","pos":[0,16]}]},{"pos":[8738,8739],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8766,8767],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8966,8976],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[9077,9085],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[9136,9137],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9164,9165],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9238,9246],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[9297,9298],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9325,9326],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9607,9657],"content":"GetObjectData(SerializationInfo, StreamingContext)","needQuote":true,"nodes":[{"content":"GetObjectData(SerializationInfo, StreamingContext)","pos":[0,50]}]},{"pos":[9955,9968],"content":"GetObjectData","needQuote":true,"nodes":[{"content":"GetObjectData","pos":[0,13]}]},{"pos":[10045,10046],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10129,10146],"content":"SerializationInfo","needQuote":true,"nodes":[{"content":"SerializationInfo","pos":[0,17]}]},{"content":",","pos":[10240,10241]},{"pos":[10328,10344],"content":"StreamingContext","needQuote":true,"nodes":[{"content":"StreamingContext","pos":[0,16]}]},{"pos":[10436,10437],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10609,10622],"content":"GetObjectData","needQuote":true,"nodes":[{"content":"GetObjectData","pos":[0,13]}]},{"pos":[10699,10700],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10783,10800],"content":"SerializationInfo","needQuote":true,"nodes":[{"content":"SerializationInfo","pos":[0,17]}]},{"content":",","pos":[10894,10895]},{"pos":[10982,10998],"content":"StreamingContext","needQuote":true,"nodes":[{"content":"StreamingContext","pos":[0,16]}]},{"pos":[11090,11091],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11411,11420],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[11519,11526],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[11597,11598],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11625,11626],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11698,11705],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[11776,11777],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11804,11805],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11985,11992],"content":"Message","needQuote":true,"nodes":[{"content":"Message","pos":[0,7]}]},{"pos":[12188,12192],"content":"Data","needQuote":true,"nodes":[{"content":"Data","pos":[0,4]}]},{"pos":[12389,12403],"content":"InnerException","needQuote":true,"nodes":[{"content":"InnerException","pos":[0,14]}]},{"pos":[12625,12635],"content":"TargetSite","needQuote":true,"nodes":[{"content":"TargetSite","pos":[0,10]}]},{"pos":[12846,12856],"content":"StackTrace","needQuote":true,"nodes":[{"content":"StackTrace","pos":[0,10]}]},{"pos":[13065,13073],"content":"HelpLink","needQuote":true,"nodes":[{"content":"HelpLink","pos":[0,8]}]},{"pos":[13274,13280],"content":"Source","needQuote":true,"nodes":[{"content":"Source","pos":[0,6]}]},{"pos":[13476,13483],"content":"HResult","needQuote":true,"nodes":[{"content":"HResult","pos":[0,7]}]},{"pos":[13694,13714],"content":"SerializeObjectState","needQuote":true,"nodes":[{"content":"SerializeObjectState","pos":[0,20]}]},{"pos":[13959,13973],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[14092,14098],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14165,14166],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14216,14222],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14282,14283],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14366,14372],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14439,14440],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14490,14496],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14556,14557],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14771,14793],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[14941,14947],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[15014,15015],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15065,15071],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[15132,15133]},{"pos":[15188,15194],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15254,15255],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15352,15358],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[15425,15426],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15476,15482],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[15543,15544]},{"pos":[15599,15605],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15665,15666],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15911,15942],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[16108,16123],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[16199,16200],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16250,16256],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16317,16318]},{"pos":[16373,16379],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16439,16440],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16546,16561],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[16637,16638],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16688,16694],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16755,16756]},{"pos":[16811,16817],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16877,16878],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17108,17121],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[17222,17233],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[17305,17306],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17333,17334],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17407,17418],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[17490,17491],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17518,17519],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17702,17719],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[17828,17843],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[17919,17920],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17947,17948],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18025,18040],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[18116,18117],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18144,18145],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18290,18296],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[18425,18453],"content":"System.Runtime.Serialization","needQuote":true,"nodes":[{"content":"System.Runtime.Serialization","pos":[0,28]}]},{"pos":[18650,18680],"content":"System.Runtime.InteropServices","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices","pos":[0,30]}]},{"pos":[18883,18889],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"items:\n- uid: System.Threading.ThreadStateException\n  commentId: T:System.Threading.ThreadStateException\n  id: ThreadStateException\n  parent: System.Threading\n  children:\n  - System.Threading.ThreadStateException.#ctor\n  - System.Threading.ThreadStateException.#ctor(System.String)\n  - System.Threading.ThreadStateException.#ctor(System.String,System.Exception)\n  langs:\n  - csharp\n  - vb\n  name: ThreadStateException\n  fullName: System.Threading.ThreadStateException\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/ThreadStateException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ThreadStateException\n    path: src/mscorlib/src/System/Threading/ThreadStateException.cs\n    startLine: 18\n  assemblies:\n  - System.Threading.Thread\n  namespace: System.Threading\n  summary: \"\\n<p>The exception that is thrown when a <xref href=\\\"System.Threading.Thread\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is in an invalid <xref href=\\\"System.Threading.Thread.ThreadState\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for the method call.</p>\\n\"\n  syntax:\n    content: >-\n      [ComVisible(true)]\n\n      [Serializable]\n\n      public class ThreadStateException : SystemException, ISerializable, _Exception\n    content.vb: >-\n      <ComVisible(True)>\n\n      <Serializable>\n\n      Public Class ThreadStateException\n          Inherits SystemException\n          Implements ISerializable, _Exception\n  seealso:\n  - type: System.Threading.Thread\n    commentId: T:System.Threading.Thread\n  - type: System.Threading.ThreadState\n    commentId: T:System.Threading.ThreadState\n  - type: System.Exception\n    commentId: T:System.Exception\n  inheritance:\n  - System.Object\n  - System.Exception\n  implements:\n  - System.Runtime.Serialization.ISerializable\n  - System.Runtime.InteropServices._Exception\n  inheritedMembers:\n  - System.Exception.GetBaseException\n  - System.Exception.ToString\n  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Exception.GetType\n  - System.Exception.Message\n  - System.Exception.Data\n  - System.Exception.InnerException\n  - System.Exception.TargetSite\n  - System.Exception.StackTrace\n  - System.Exception.HelpLink\n  - System.Exception.Source\n  - System.Exception.HResult\n  - System.Exception.SerializeObjectState\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.MemberwiseClone\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n    ctor: System.Runtime.InteropServices.ComVisibleAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: true\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: ThreadStateException\n- uid: System.Threading.ThreadStateException.#ctor\n  commentId: M:System.Threading.ThreadStateException.#ctor\n  id: '#ctor'\n  parent: System.Threading.ThreadStateException\n  langs:\n  - csharp\n  - vb\n  name: ThreadStateException()\n  fullName: System.Threading.ThreadStateException.ThreadStateException()\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/ThreadStateException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Threading/ThreadStateException.cs\n    startLine: 21\n  assemblies:\n  - System.Threading.Thread\n  namespace: System.Threading\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Threading.ThreadStateException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with default properties.</p>\\n\"\n  syntax:\n    content: public ThreadStateException()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ThreadStateException.ThreadStateException()\n- uid: System.Threading.ThreadStateException.#ctor(System.String)\n  commentId: M:System.Threading.ThreadStateException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Threading.ThreadStateException\n  langs:\n  - csharp\n  - vb\n  name: ThreadStateException(String)\n  fullName: System.Threading.ThreadStateException.ThreadStateException(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/ThreadStateException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Threading/ThreadStateException.cs\n    startLine: 26\n  assemblies:\n  - System.Threading.Thread\n  namespace: System.Threading\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Threading.ThreadStateException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified error message.</p>\\n\"\n  syntax:\n    content: public ThreadStateException(string message)\n    content.vb: Public Sub New(message As String)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>The error message that explains the reason for the exception. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ThreadStateException.ThreadStateException(String)\n- uid: System.Threading.ThreadStateException.#ctor(System.String,System.Exception)\n  commentId: M:System.Threading.ThreadStateException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.Threading.ThreadStateException\n  langs:\n  - csharp\n  - vb\n  name: ThreadStateException(String, Exception)\n  fullName: System.Threading.ThreadStateException.ThreadStateException(System.String, System.Exception)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/ThreadStateException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Threading/ThreadStateException.cs\n    startLine: 31\n  assemblies:\n  - System.Threading.Thread\n  namespace: System.Threading\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Threading.ThreadStateException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.</p>\\n\"\n  syntax:\n    content: public ThreadStateException(string message, Exception innerException)\n    content.vb: Public Sub New(message As String, innerException As Exception)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>The error message that explains the reason for the exception. </p>\\n\"\n    - id: innerException\n      type: System.Exception\n      description: \"\\n<p>The exception that is the cause of the current exception. If the <em>innerException</em> parameter is not <strong>null</strong>, the current exception is raised in a <strong>catch</strong> block that handles the inner exception. </p>\\n\"\n  seealso:\n  - type: System.Exception\n    commentId: T:System.Exception\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ThreadStateException.ThreadStateException(String, Exception)\nreferences:\n- uid: System.Threading\n  isExternal: false\n  name: System.Threading\n  fullName: System.Threading\n  nameWithType: System.Threading\n  commentId: N:System.Threading\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  fullName: System.Exception\n  nameWithType: Exception\n  commentId: T:System.Exception\n- uid: System.Runtime.Serialization.ISerializable\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: ISerializable\n  fullName: System.Runtime.Serialization.ISerializable\n  nameWithType: ISerializable\n  commentId: T:System.Runtime.Serialization.ISerializable\n- uid: System.Runtime.InteropServices._Exception\n  parent: System.Runtime.InteropServices\n  isExternal: true\n  name: _Exception\n  fullName: System.Runtime.InteropServices._Exception\n  nameWithType: _Exception\n  commentId: T:System.Runtime.InteropServices._Exception\n- uid: System.Exception.GetBaseException\n  parent: System.Exception\n  isExternal: false\n  name: GetBaseException()\n  fullName: System.Exception.GetBaseException()\n  spec.csharp:\n  - uid: System.Exception.GetBaseException\n    name: GetBaseException\n    fullName: System.Exception.GetBaseException\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.GetBaseException\n    name: GetBaseException\n    fullName: System.Exception.GetBaseException\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Exception.GetBaseException()\n  commentId: M:System.Exception.GetBaseException\n- uid: System.Exception.ToString\n  parent: System.Exception\n  isExternal: false\n  name: ToString()\n  fullName: System.Exception.ToString()\n  spec.csharp:\n  - uid: System.Exception.ToString\n    name: ToString\n    fullName: System.Exception.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.ToString\n    name: ToString\n    fullName: System.Exception.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Exception.ToString()\n  commentId: M:System.Exception.ToString\n- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Exception\n  isExternal: true\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  fullName: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)\n  spec.csharp:\n  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n    name: GetObjectData\n    fullName: System.Exception.GetObjectData\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Runtime.Serialization.SerializationInfo\n    name: SerializationInfo\n    fullName: System.Runtime.Serialization.SerializationInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Runtime.Serialization.StreamingContext\n    name: StreamingContext\n    fullName: System.Runtime.Serialization.StreamingContext\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n    name: GetObjectData\n    fullName: System.Exception.GetObjectData\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Runtime.Serialization.SerializationInfo\n    name: SerializationInfo\n    fullName: System.Runtime.Serialization.SerializationInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Runtime.Serialization.StreamingContext\n    name: StreamingContext\n    fullName: System.Runtime.Serialization.StreamingContext\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)\n  commentId: M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n- uid: System.Exception.GetType\n  parent: System.Exception\n  isExternal: true\n  name: GetType()\n  fullName: System.Exception.GetType()\n  spec.csharp:\n  - uid: System.Exception.GetType\n    name: GetType\n    fullName: System.Exception.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.GetType\n    name: GetType\n    fullName: System.Exception.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Exception.GetType()\n  commentId: M:System.Exception.GetType\n- uid: System.Exception.Message\n  parent: System.Exception\n  isExternal: false\n  name: Message\n  fullName: System.Exception.Message\n  nameWithType: Exception.Message\n  commentId: P:System.Exception.Message\n- uid: System.Exception.Data\n  parent: System.Exception\n  isExternal: false\n  name: Data\n  fullName: System.Exception.Data\n  nameWithType: Exception.Data\n  commentId: P:System.Exception.Data\n- uid: System.Exception.InnerException\n  parent: System.Exception\n  isExternal: false\n  name: InnerException\n  fullName: System.Exception.InnerException\n  nameWithType: Exception.InnerException\n  commentId: P:System.Exception.InnerException\n- uid: System.Exception.TargetSite\n  parent: System.Exception\n  isExternal: true\n  name: TargetSite\n  fullName: System.Exception.TargetSite\n  nameWithType: Exception.TargetSite\n  commentId: P:System.Exception.TargetSite\n- uid: System.Exception.StackTrace\n  parent: System.Exception\n  isExternal: false\n  name: StackTrace\n  fullName: System.Exception.StackTrace\n  nameWithType: Exception.StackTrace\n  commentId: P:System.Exception.StackTrace\n- uid: System.Exception.HelpLink\n  parent: System.Exception\n  isExternal: false\n  name: HelpLink\n  fullName: System.Exception.HelpLink\n  nameWithType: Exception.HelpLink\n  commentId: P:System.Exception.HelpLink\n- uid: System.Exception.Source\n  parent: System.Exception\n  isExternal: false\n  name: Source\n  fullName: System.Exception.Source\n  nameWithType: Exception.Source\n  commentId: P:System.Exception.Source\n- uid: System.Exception.HResult\n  parent: System.Exception\n  isExternal: false\n  name: HResult\n  fullName: System.Exception.HResult\n  nameWithType: Exception.HResult\n  commentId: P:System.Exception.HResult\n- uid: System.Exception.SerializeObjectState\n  parent: System.Exception\n  isExternal: true\n  name: SerializeObjectState\n  fullName: System.Exception.SerializeObjectState\n  nameWithType: Exception.SerializeObjectState\n  commentId: E:System.Exception.SerializeObjectState\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Runtime.Serialization\n  isExternal: false\n  name: System.Runtime.Serialization\n  fullName: System.Runtime.Serialization\n  nameWithType: System.Runtime.Serialization\n  commentId: N:System.Runtime.Serialization\n- uid: System.Runtime.InteropServices\n  isExternal: false\n  name: System.Runtime.InteropServices\n  fullName: System.Runtime.InteropServices\n  nameWithType: System.Runtime.InteropServices\n  commentId: N:System.Runtime.InteropServices\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n"}