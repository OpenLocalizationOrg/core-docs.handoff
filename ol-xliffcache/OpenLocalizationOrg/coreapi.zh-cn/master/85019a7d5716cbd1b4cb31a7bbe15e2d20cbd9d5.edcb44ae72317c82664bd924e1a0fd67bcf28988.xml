{"nodes":[{"pos":[671,685],"content":"GotoExpression","needQuote":true,"nodes":[{"content":"GotoExpression","pos":[0,14]}]},{"pos":[42025,42029],"content":"Kind","needQuote":true,"nodes":[{"content":"Kind","pos":[0,4]}]},{"pos":[43288,43296],"content":"NodeType","needQuote":true,"nodes":[{"content":"NodeType","pos":[0,8]}]},{"pos":[44738,44744],"content":"Target","needQuote":true,"nodes":[{"content":"Target","pos":[0,6]}]},{"pos":[45938,45942],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[47363,47368],"content":"Value","needQuote":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[48731,48756],"content":"Accept(ExpressionVisitor)","needQuote":true,"nodes":[{"content":"Accept(ExpressionVisitor)","pos":[0,25]}]},{"pos":[50222,50253],"content":"Update(LabelTarget, Expression)","needQuote":true,"nodes":[{"content":"Update(LabelTarget, Expression)","pos":[0,31]}]},{"content":"\\n&lt;p&gt;This expression if no children are changed or an expression with the updated children.&lt;/p&gt;\\n","pos":[51670,51767],"source":"\\n<p>This expression if no children are changed or an expression with the updated children.</p>\\n"},{"pos":[51961,51984],"content":"System.Linq.Expressions","needQuote":true,"nodes":[{"content":"System.Linq.Expressions","pos":[0,23]}]},{"pos":[52166,52172],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[52355,52365],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[52615,52624],"content":"CanReduce","needQuote":true,"nodes":[{"content":"CanReduce","pos":[0,9]}]},{"pos":[52969,52996],"content":"Add(Expression, Expression)","needQuote":true,"nodes":[{"content":"Add(Expression, Expression)","pos":[0,27]}]},{"pos":[53264,53267],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[53331,53332],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[53403,53413],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[53474,53475]},{"pos":[53551,53561],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[53621,53622],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53779,53782],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[53846,53847],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[53918,53928],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[53989,53990]},{"pos":[54066,54076],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[54136,54137],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[54552,54591],"content":"Add(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Add(Expression, Expression, MethodInfo)","pos":[0,39]}]},{"pos":[54918,54921],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[54985,54986],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[55057,55067],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[55128,55129]},{"pos":[55205,55215],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[55276,55277]},{"pos":[55347,55357],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[55432,55433],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55619,55622],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[55686,55687],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[55758,55768],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[55829,55830]},{"pos":[55906,55916],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[55977,55978]},{"pos":[56048,56058],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[56133,56134],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[56568,56601],"content":"AddAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"AddAssign(Expression, Expression)","pos":[0,33]}]},{"pos":[56881,56890],"content":"AddAssign","needQuote":true,"nodes":[{"content":"AddAssign","pos":[0,9]}]},{"pos":[56960,56961],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57032,57042],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[57103,57104]},{"pos":[57180,57190],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[57250,57251],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57414,57423],"content":"AddAssign","needQuote":true,"nodes":[{"content":"AddAssign","pos":[0,9]}]},{"pos":[57493,57494],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57565,57575],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[57636,57637]},{"pos":[57713,57723],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[57783,57784],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58217,58262],"content":"AddAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"AddAssign(Expression, Expression, MethodInfo)","pos":[0,45]}]},{"pos":[58601,58610],"content":"AddAssign","needQuote":true,"nodes":[{"content":"AddAssign","pos":[0,9]}]},{"pos":[58680,58681],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58752,58762],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[58823,58824]},{"pos":[58900,58910],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[58971,58972]},{"pos":[59042,59052],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[59127,59128],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59320,59329],"content":"AddAssign","needQuote":true,"nodes":[{"content":"AddAssign","pos":[0,9]}]},{"pos":[59399,59400],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59471,59481],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[59542,59543]},{"pos":[59619,59629],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[59690,59691]},{"pos":[59761,59771],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[59846,59847],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60362,60425],"content":"AddAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"AddAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,63]}]},{"pos":[60847,60856],"content":"AddAssign","needQuote":true,"nodes":[{"content":"AddAssign","pos":[0,9]}]},{"pos":[60926,60927],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60998,61008],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[61069,61070]},{"pos":[61146,61156],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[61217,61218]},{"pos":[61288,61298],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[61374,61375]},{"pos":[61457,61473],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[61539,61540],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61773,61782],"content":"AddAssign","needQuote":true,"nodes":[{"content":"AddAssign","pos":[0,9]}]},{"pos":[61852,61853],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61924,61934],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[61995,61996]},{"pos":[62072,62082],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[62143,62144]},{"pos":[62214,62224],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[62300,62301]},{"pos":[62383,62399],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[62465,62466],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62978,63018],"content":"AddAssignChecked(Expression, Expression)","needQuote":true,"nodes":[{"content":"AddAssignChecked(Expression, Expression)","pos":[0,40]}]},{"pos":[63312,63328],"content":"AddAssignChecked","needQuote":true,"nodes":[{"content":"AddAssignChecked","pos":[0,16]}]},{"pos":[63405,63406],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63477,63487],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[63548,63549]},{"pos":[63625,63635],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[63695,63696],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63866,63882],"content":"AddAssignChecked","needQuote":true,"nodes":[{"content":"AddAssignChecked","pos":[0,16]}]},{"pos":[63959,63960],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64031,64041],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[64102,64103]},{"pos":[64179,64189],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[64249,64250],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64704,64756],"content":"AddAssignChecked(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"AddAssignChecked(Expression, Expression, MethodInfo)","pos":[0,52]}]},{"pos":[65109,65125],"content":"AddAssignChecked","needQuote":true,"nodes":[{"content":"AddAssignChecked","pos":[0,16]}]},{"pos":[65202,65203],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65274,65284],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[65345,65346]},{"pos":[65422,65432],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[65493,65494]},{"pos":[65564,65574],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[65649,65650],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65849,65865],"content":"AddAssignChecked","needQuote":true,"nodes":[{"content":"AddAssignChecked","pos":[0,16]}]},{"pos":[65942,65943],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66014,66024],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[66085,66086]},{"pos":[66162,66172],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[66233,66234]},{"pos":[66304,66314],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[66389,66390],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66926,66996],"content":"AddAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"AddAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,70]}]},{"pos":[67432,67448],"content":"AddAssignChecked","needQuote":true,"nodes":[{"content":"AddAssignChecked","pos":[0,16]}]},{"pos":[67525,67526],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67597,67607],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[67668,67669]},{"pos":[67745,67755],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[67816,67817]},{"pos":[67887,67897],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[67973,67974]},{"pos":[68056,68072],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[68138,68139],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68379,68395],"content":"AddAssignChecked","needQuote":true,"nodes":[{"content":"AddAssignChecked","pos":[0,16]}]},{"pos":[68472,68473],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68544,68554],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[68615,68616]},{"pos":[68692,68702],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[68763,68764]},{"pos":[68834,68844],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[68920,68921]},{"pos":[69003,69019],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[69085,69086],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69606,69640],"content":"AddChecked(Expression, Expression)","needQuote":true,"nodes":[{"content":"AddChecked(Expression, Expression)","pos":[0,34]}]},{"pos":[69922,69932],"content":"AddChecked","needQuote":true,"nodes":[{"content":"AddChecked","pos":[0,10]}]},{"pos":[70003,70004],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70075,70085],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[70146,70147]},{"pos":[70223,70233],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[70293,70294],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70458,70468],"content":"AddChecked","needQuote":true,"nodes":[{"content":"AddChecked","pos":[0,10]}]},{"pos":[70539,70540],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70611,70621],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[70682,70683]},{"pos":[70759,70769],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[70829,70830],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71266,71312],"content":"AddChecked(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"AddChecked(Expression, Expression, MethodInfo)","pos":[0,46]}]},{"pos":[71653,71663],"content":"AddChecked","needQuote":true,"nodes":[{"content":"AddChecked","pos":[0,10]}]},{"pos":[71734,71735],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71806,71816],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[71877,71878]},{"pos":[71954,71964],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[72025,72026]},{"pos":[72096,72106],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[72181,72182],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72375,72385],"content":"AddChecked","needQuote":true,"nodes":[{"content":"AddChecked","pos":[0,10]}]},{"pos":[72456,72457],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72528,72538],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[72599,72600]},{"pos":[72676,72686],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[72747,72748]},{"pos":[72818,72828],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[72903,72904],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73346,73373],"content":"And(Expression, Expression)","needQuote":true,"nodes":[{"content":"And(Expression, Expression)","pos":[0,27]}]},{"pos":[73641,73644],"content":"And","needQuote":true,"nodes":[{"content":"And","pos":[0,3]}]},{"pos":[73708,73709],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73780,73790],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[73851,73852]},{"pos":[73928,73938],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[73998,73999],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74156,74159],"content":"And","needQuote":true,"nodes":[{"content":"And","pos":[0,3]}]},{"pos":[74223,74224],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74295,74305],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[74366,74367]},{"pos":[74443,74453],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[74513,74514],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74929,74968],"content":"And(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"And(Expression, Expression, MethodInfo)","pos":[0,39]}]},{"pos":[75295,75298],"content":"And","needQuote":true,"nodes":[{"content":"And","pos":[0,3]}]},{"pos":[75362,75363],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75434,75444],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[75505,75506]},{"pos":[75582,75592],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[75653,75654]},{"pos":[75724,75734],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[75809,75810],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75996,75999],"content":"And","needQuote":true,"nodes":[{"content":"And","pos":[0,3]}]},{"pos":[76063,76064],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76135,76145],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[76206,76207]},{"pos":[76283,76293],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[76354,76355]},{"pos":[76425,76435],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[76510,76511],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76943,76974],"content":"AndAlso(Expression, Expression)","needQuote":true,"nodes":[{"content":"AndAlso(Expression, Expression)","pos":[0,31]}]},{"pos":[77250,77257],"content":"AndAlso","needQuote":true,"nodes":[{"content":"AndAlso","pos":[0,7]}]},{"pos":[77325,77326],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77397,77407],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[77468,77469]},{"pos":[77545,77555],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[77615,77616],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77777,77784],"content":"AndAlso","needQuote":true,"nodes":[{"content":"AndAlso","pos":[0,7]}]},{"pos":[77852,77853],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77924,77934],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[77995,77996]},{"pos":[78072,78082],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[78142,78143],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78570,78613],"content":"AndAlso(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"AndAlso(Expression, Expression, MethodInfo)","pos":[0,43]}]},{"pos":[78948,78955],"content":"AndAlso","needQuote":true,"nodes":[{"content":"AndAlso","pos":[0,7]}]},{"pos":[79023,79024],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79095,79105],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[79166,79167]},{"pos":[79243,79253],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[79314,79315]},{"pos":[79385,79395],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[79470,79471],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79661,79668],"content":"AndAlso","needQuote":true,"nodes":[{"content":"AndAlso","pos":[0,7]}]},{"pos":[79736,79737],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79808,79818],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[79879,79880]},{"pos":[79956,79966],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[80027,80028]},{"pos":[80098,80108],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[80183,80184],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80626,80659],"content":"AndAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"AndAssign(Expression, Expression)","pos":[0,33]}]},{"pos":[80939,80948],"content":"AndAssign","needQuote":true,"nodes":[{"content":"AndAssign","pos":[0,9]}]},{"pos":[81018,81019],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81090,81100],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[81161,81162]},{"pos":[81238,81248],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[81308,81309],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81472,81481],"content":"AndAssign","needQuote":true,"nodes":[{"content":"AndAssign","pos":[0,9]}]},{"pos":[81551,81552],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81623,81633],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[81694,81695]},{"pos":[81771,81781],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[81841,81842],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82275,82320],"content":"AndAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"AndAssign(Expression, Expression, MethodInfo)","pos":[0,45]}]},{"pos":[82659,82668],"content":"AndAssign","needQuote":true,"nodes":[{"content":"AndAssign","pos":[0,9]}]},{"pos":[82738,82739],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82810,82820],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[82881,82882]},{"pos":[82958,82968],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[83029,83030]},{"pos":[83100,83110],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[83185,83186],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83378,83387],"content":"AndAssign","needQuote":true,"nodes":[{"content":"AndAssign","pos":[0,9]}]},{"pos":[83457,83458],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83529,83539],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[83600,83601]},{"pos":[83677,83687],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[83748,83749]},{"pos":[83819,83829],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[83904,83905],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[84420,84483],"content":"AndAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"AndAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,63]}]},{"pos":[84905,84914],"content":"AndAssign","needQuote":true,"nodes":[{"content":"AndAssign","pos":[0,9]}]},{"pos":[84984,84985],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85056,85066],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[85127,85128]},{"pos":[85204,85214],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[85275,85276]},{"pos":[85346,85356],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[85432,85433]},{"pos":[85515,85531],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[85597,85598],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85831,85840],"content":"AndAssign","needQuote":true,"nodes":[{"content":"AndAssign","pos":[0,9]}]},{"pos":[85910,85911],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85982,85992],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[86053,86054]},{"pos":[86130,86140],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[86201,86202]},{"pos":[86272,86282],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[86358,86359]},{"pos":[86441,86457],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[86523,86524],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87070,87118],"content":"ArrayAccess(Expression, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"ArrayAccess(Expression, IEnumerable&lt;Expression&gt;)","pos":[0,48],"source":"ArrayAccess(Expression, IEnumerable<Expression>)"}]},{"pos":[87722,87733],"content":"ArrayAccess","needQuote":true,"nodes":[{"content":"ArrayAccess","pos":[0,11]}]},{"pos":[87805,87806],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87877,87887],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[87948,87949]},{"pos":[88031,88042],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[88127,88128],"content":"<","needQuote":true,"nodes":[]},{"pos":[88199,88209],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[88301,88302],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88507,88518],"content":"ArrayAccess","needQuote":true,"nodes":[{"content":"ArrayAccess","pos":[0,11]}]},{"pos":[88590,88591],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88662,88672],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[88733,88734]},{"pos":[88816,88827],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[88913,88916]},{"pos":[88994,89004],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[89064,89065],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89092,89093],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89641,89678],"content":"ArrayAccess(Expression, Expression[])","needQuote":true,"nodes":[{"content":"ArrayAccess(Expression, Expression[])","pos":[0,37]}]},{"pos":[90151,90162],"content":"ArrayAccess","needQuote":true,"nodes":[{"content":"ArrayAccess","pos":[0,11]}]},{"pos":[90234,90235],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90306,90316],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[90377,90378]},{"pos":[90454,90464],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[90525,90527]},{"pos":[90558,90559],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90726,90737],"content":"ArrayAccess","needQuote":true,"nodes":[{"content":"ArrayAccess","pos":[0,11]}]},{"pos":[90809,90810],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90881,90891],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[90952,90953]},{"pos":[91029,91039],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[91099,91101],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[91129,91130],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91651,91698],"content":"ArrayIndex(Expression, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"ArrayIndex(Expression, IEnumerable&lt;Expression&gt;)","pos":[0,47],"source":"ArrayIndex(Expression, IEnumerable<Expression>)"}]},{"pos":[92298,92308],"content":"ArrayIndex","needQuote":true,"nodes":[{"content":"ArrayIndex","pos":[0,10]}]},{"pos":[92379,92380],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92451,92461],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[92522,92523]},{"pos":[92605,92616],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[92701,92702],"content":"<","needQuote":true,"nodes":[]},{"pos":[92773,92783],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[92875,92876],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93080,93090],"content":"ArrayIndex","needQuote":true,"nodes":[{"content":"ArrayIndex","pos":[0,10]}]},{"pos":[93161,93162],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93233,93243],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[93304,93305]},{"pos":[93387,93398],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[93484,93487]},{"pos":[93565,93575],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[93635,93636],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93663,93664],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94206,94240],"content":"ArrayIndex(Expression, Expression)","needQuote":true,"nodes":[{"content":"ArrayIndex(Expression, Expression)","pos":[0,34]}]},{"pos":[94522,94532],"content":"ArrayIndex","needQuote":true,"nodes":[{"content":"ArrayIndex","pos":[0,10]}]},{"pos":[94603,94604],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94675,94685],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[94746,94747]},{"pos":[94823,94833],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[94893,94894],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95058,95068],"content":"ArrayIndex","needQuote":true,"nodes":[{"content":"ArrayIndex","pos":[0,10]}]},{"pos":[95139,95140],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95211,95221],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[95282,95283]},{"pos":[95359,95369],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[95429,95430],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95840,95876],"content":"ArrayIndex(Expression, Expression[])","needQuote":true,"nodes":[{"content":"ArrayIndex(Expression, Expression[])","pos":[0,36]}]},{"pos":[96345,96355],"content":"ArrayIndex","needQuote":true,"nodes":[{"content":"ArrayIndex","pos":[0,10]}]},{"pos":[96426,96427],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96498,96508],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[96569,96570]},{"pos":[96646,96656],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[96717,96719]},{"pos":[96750,96751],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96917,96927],"content":"ArrayIndex","needQuote":true,"nodes":[{"content":"ArrayIndex","pos":[0,10]}]},{"pos":[96998,96999],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[97070,97080],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[97141,97142]},{"pos":[97218,97228],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[97288,97290],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[97318,97319],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97764,97787],"content":"ArrayLength(Expression)","needQuote":true,"nodes":[{"content":"ArrayLength(Expression)","pos":[0,23]}]},{"pos":[98000,98011],"content":"ArrayLength","needQuote":true,"nodes":[{"content":"ArrayLength","pos":[0,11]}]},{"pos":[98083,98084],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[98155,98165],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[98225,98226],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[98356,98367],"content":"ArrayLength","needQuote":true,"nodes":[{"content":"ArrayLength","pos":[0,11]}]},{"pos":[98439,98440],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[98511,98521],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[98581,98582],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[98941,98971],"content":"Assign(Expression, Expression)","needQuote":true,"nodes":[{"content":"Assign(Expression, Expression)","pos":[0,30]}]},{"pos":[99245,99251],"content":"Assign","needQuote":true,"nodes":[{"content":"Assign","pos":[0,6]}]},{"pos":[99318,99319],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[99390,99400],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[99461,99462]},{"pos":[99538,99548],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[99608,99609],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[99769,99775],"content":"Assign","needQuote":true,"nodes":[{"content":"Assign","pos":[0,6]}]},{"pos":[99842,99843],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[99914,99924],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[99985,99986]},{"pos":[100062,100072],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[100132,100133],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[100520,100548],"content":"Bind(MemberInfo, Expression)","needQuote":true,"nodes":[{"content":"Bind(MemberInfo, Expression)","pos":[0,28]}]},{"pos":[100806,100810],"content":"Bind","needQuote":true,"nodes":[{"content":"Bind","pos":[0,4]}]},{"pos":[100875,100876],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[100941,100951],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[101027,101028]},{"pos":[101104,101114],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[101174,101175],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[101327,101331],"content":"Bind","needQuote":true,"nodes":[{"content":"Bind","pos":[0,4]}]},{"pos":[101396,101397],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[101462,101472],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[101548,101549]},{"pos":[101625,101635],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[101695,101696],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[102073,102101],"content":"Bind(MethodInfo, Expression)","needQuote":true,"nodes":[{"content":"Bind(MethodInfo, Expression)","pos":[0,28]}]},{"pos":[102359,102363],"content":"Bind","needQuote":true,"nodes":[{"content":"Bind","pos":[0,4]}]},{"pos":[102428,102429],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[102494,102504],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[102580,102581]},{"pos":[102657,102667],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[102727,102728],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[102880,102884],"content":"Bind","needQuote":true,"nodes":[{"content":"Bind","pos":[0,4]}]},{"pos":[102949,102950],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[103015,103025],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[103101,103102]},{"pos":[103178,103188],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[103248,103249],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[103638,103668],"content":"Block(IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"Block(IEnumerable&lt;Expression&gt;)","pos":[0,30],"source":"Block(IEnumerable<Expression>)"}]},{"pos":[104129,104134],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[104200,104201],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[104278,104289],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[104374,104375],"content":"<","needQuote":true,"nodes":[]},{"pos":[104446,104456],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[104548,104549],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[104713,104718],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[104784,104785],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[104862,104873],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[104959,104962]},{"pos":[105040,105050],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[105110,105111],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[105138,105139],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[105690,105754],"content":"Block(IEnumerable<ParameterExpression>, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"Block(IEnumerable&lt;ParameterExpression&gt;, IEnumerable&lt;Expression&gt;)","pos":[0,64],"source":"Block(IEnumerable<ParameterExpression>, IEnumerable<Expression>)"}]},{"pos":[106509,106514],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[106580,106581],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[106658,106669],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[106754,106755],"content":"<","needQuote":true,"nodes":[]},{"pos":[106835,106854],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[106956,106957]},{"pos":[107039,107050],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[107135,107136],"content":"<","needQuote":true,"nodes":[]},{"pos":[107207,107217],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[107309,107310],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[107558,107563],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[107629,107630],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[107707,107718],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[107804,107807]},{"pos":[107894,107913],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[107982,107983],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[108011,108012]},{"pos":[108094,108105],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[108191,108194]},{"pos":[108272,108282],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[108342,108343],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[108370,108371],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[109039,109092],"content":"Block(IEnumerable<ParameterExpression>, Expression[])","needQuote":true,"nodes":[{"content":"Block(IEnumerable&lt;ParameterExpression&gt;, Expression[])","pos":[0,53],"source":"Block(IEnumerable<ParameterExpression>, Expression[])"}]},{"pos":[109716,109721],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[109787,109788],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[109865,109876],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[109961,109962],"content":"<","needQuote":true,"nodes":[]},{"pos":[110042,110061],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[110163,110164]},{"pos":[110240,110250],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[110311,110313]},{"pos":[110344,110345],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[110555,110560],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[110626,110627],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[110704,110715],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[110801,110804]},{"pos":[110891,110910],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[110979,110980],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[111008,111009]},{"pos":[111085,111095],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[111155,111157],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[111185,111186],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[111741,111770],"content":"Block(Expression, Expression)","needQuote":true,"nodes":[{"content":"Block(Expression, Expression)","pos":[0,29]}]},{"pos":[112042,112047],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[112113,112114],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[112185,112195],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[112256,112257]},{"pos":[112333,112343],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[112403,112404],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[112563,112568],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[112634,112635],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[112706,112716],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[112777,112778]},{"pos":[112854,112864],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[112924,112925],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[113353,113394],"content":"Block(Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Block(Expression, Expression, Expression)","pos":[0,41]}]},{"pos":[113737,113742],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[113808,113809],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[113880,113890],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[113951,113952]},{"pos":[114028,114038],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[114099,114100]},{"pos":[114176,114186],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[114246,114247],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[114441,114446],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[114512,114513],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[114584,114594],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[114655,114656]},{"pos":[114732,114742],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[114803,114804]},{"pos":[114880,114890],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[114950,114951],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[115461,115514],"content":"Block(Expression, Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Block(Expression, Expression, Expression, Expression)","pos":[0,53]}]},{"pos":[115928,115933],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[115999,116000],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[116071,116081],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[116142,116143]},{"pos":[116219,116229],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[116290,116291]},{"pos":[116367,116377],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[116438,116439]},{"pos":[116515,116525],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[116585,116586],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[116815,116820],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[116886,116887],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[116958,116968],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[117029,117030]},{"pos":[117106,117116],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[117177,117178]},{"pos":[117254,117264],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[117325,117326]},{"pos":[117402,117412],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[117472,117473],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[118065,118130],"content":"Block(Expression, Expression, Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Block(Expression, Expression, Expression, Expression, Expression)","pos":[0,65]}]},{"pos":[118615,118620],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[118686,118687],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[118758,118768],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[118829,118830]},{"pos":[118906,118916],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[118977,118978]},{"pos":[119054,119064],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[119125,119126]},{"pos":[119202,119212],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[119273,119274]},{"pos":[119350,119360],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[119420,119421],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[119685,119690],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[119756,119757],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[119828,119838],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[119899,119900]},{"pos":[119976,119986],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[120047,120048]},{"pos":[120124,120134],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[120195,120196]},{"pos":[120272,120282],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[120343,120344]},{"pos":[120420,120430],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[120490,120491],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[120992,121011],"content":"Block(Expression[])","needQuote":true,"nodes":[{"content":"Block(Expression[])","pos":[0,19]}]},{"pos":[121341,121346],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[121412,121413],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[121484,121494],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[121555,121557]},{"pos":[121588,121589],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[121715,121720],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[121786,121787],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[121858,121868],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[121928,121930],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[121958,121959],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[122375,122411],"content":"Block(Type, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"Block(Type, IEnumerable&lt;Expression&gt;)","pos":[0,36],"source":"Block(Type, IEnumerable<Expression>)"}]},{"pos":[122916,122921],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[122987,122988],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[123036,123040],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[123099,123100]},{"pos":[123182,123193],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[123278,123279],"content":"<","needQuote":true,"nodes":[]},{"pos":[123350,123360],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[123452,123453],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[123629,123634],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[123700,123701],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[123749,123753],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[123812,123813]},{"pos":[123895,123906],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[123992,123995]},{"pos":[124073,124083],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[124143,124144],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[124171,124172],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[124759,124829],"content":"Block(Type, IEnumerable<ParameterExpression>, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"Block(Type, IEnumerable&lt;ParameterExpression&gt;, IEnumerable&lt;Expression&gt;)","pos":[0,70],"source":"Block(Type, IEnumerable<ParameterExpression>, IEnumerable<Expression>)"}]},{"pos":[125628,125633],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[125699,125700],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[125748,125752],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[125811,125812]},{"pos":[125894,125905],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[125990,125991],"content":"<","needQuote":true,"nodes":[]},{"pos":[126071,126090],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[126192,126193]},{"pos":[126275,126286],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[126371,126372],"content":"<","needQuote":true,"nodes":[]},{"pos":[126443,126453],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[126545,126546],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[126806,126811],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[126877,126878],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[126926,126930],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[126989,126990]},{"pos":[127072,127083],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[127169,127172]},{"pos":[127259,127278],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[127347,127348],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[127376,127377]},{"pos":[127459,127470],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[127556,127559]},{"pos":[127637,127647],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[127707,127708],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[127735,127736],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[128440,128499],"content":"Block(Type, IEnumerable<ParameterExpression>, Expression[])","needQuote":true,"nodes":[{"content":"Block(Type, IEnumerable&lt;ParameterExpression&gt;, Expression[])","pos":[0,59],"source":"Block(Type, IEnumerable<ParameterExpression>, Expression[])"}]},{"pos":[129167,129172],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[129238,129239],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[129287,129291],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[129350,129351]},{"pos":[129433,129444],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[129529,129530],"content":"<","needQuote":true,"nodes":[]},{"pos":[129610,129629],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[129731,129732]},{"pos":[129808,129818],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[129879,129881]},{"pos":[129912,129913],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[130135,130140],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[130206,130207],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[130255,130259],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[130318,130319]},{"pos":[130401,130412],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[130498,130501]},{"pos":[130588,130607],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[130676,130677],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[130705,130706]},{"pos":[130782,130792],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[130852,130854],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[130882,130883],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[131440,131465],"content":"Block(Type, Expression[])","needQuote":true,"nodes":[{"content":"Block(Type, Expression[])","pos":[0,25]}]},{"pos":[131839,131844],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[131910,131911],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[131959,131963],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[132022,132023]},{"pos":[132099,132109],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[132170,132172]},{"pos":[132203,132204],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[132342,132347],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[132413,132414],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[132462,132466],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[132525,132526]},{"pos":[132602,132612],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[132672,132674],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[132702,132703],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[133093,133111],"content":"Break(LabelTarget)","needQuote":true,"nodes":[{"content":"Break(LabelTarget)","pos":[0,18]}]},{"pos":[133314,133319],"content":"Break","needQuote":true,"nodes":[{"content":"Break","pos":[0,5]}]},{"pos":[133385,133386],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[133458,133469],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[133530,133531],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[133656,133661],"content":"Break","needQuote":true,"nodes":[{"content":"Break","pos":[0,5]}]},{"pos":[133727,133728],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[133800,133811],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[133872,133873],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[134222,134252],"content":"Break(LabelTarget, Expression)","needQuote":true,"nodes":[{"content":"Break(LabelTarget, Expression)","pos":[0,30]}]},{"pos":[134526,134531],"content":"Break","needQuote":true,"nodes":[{"content":"Break","pos":[0,5]}]},{"pos":[134597,134598],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[134670,134681],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[134743,134744]},{"pos":[134820,134830],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[134890,134891],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[135051,135056],"content":"Break","needQuote":true,"nodes":[{"content":"Break","pos":[0,5]}]},{"pos":[135122,135123],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[135195,135206],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[135268,135269]},{"pos":[135345,135355],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[135415,135416],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[135823,135859],"content":"Break(LabelTarget, Expression, Type)","needQuote":true,"nodes":[{"content":"Break(LabelTarget, Expression, Type)","pos":[0,36]}]},{"pos":[136158,136163],"content":"Break","needQuote":true,"nodes":[{"content":"Break","pos":[0,5]}]},{"pos":[136229,136230],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[136302,136313],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[136375,136376]},{"pos":[136452,136462],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[136523,136524]},{"pos":[136577,136581],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[136639,136640],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[136812,136817],"content":"Break","needQuote":true,"nodes":[{"content":"Break","pos":[0,5]}]},{"pos":[136883,136884],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[136956,136967],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[137029,137030]},{"pos":[137106,137116],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[137177,137178]},{"pos":[137231,137235],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[137293,137294],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[137684,137708],"content":"Break(LabelTarget, Type)","needQuote":true,"nodes":[{"content":"Break(LabelTarget, Type)","pos":[0,24]}]},{"pos":[137936,137941],"content":"Break","needQuote":true,"nodes":[{"content":"Break","pos":[0,5]}]},{"pos":[138007,138008],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[138080,138091],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[138153,138154]},{"pos":[138207,138211],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[138269,138270],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[138407,138412],"content":"Break","needQuote":true,"nodes":[{"content":"Break","pos":[0,5]}]},{"pos":[138478,138479],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[138551,138562],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[138624,138625]},{"pos":[138678,138682],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[138740,138741],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[139099,139127],"content":"Call(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Call(Expression, MethodInfo)","pos":[0,28]}]},{"pos":[139385,139389],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[139454,139455],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[139526,139536],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[139597,139598]},{"pos":[139668,139678],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[139753,139754],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[139906,139910],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[139975,139976],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[140047,140057],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[140118,140119]},{"pos":[140189,140199],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[140274,140275],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[140727,140780],"content":"Call(Expression, MethodInfo, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"Call(Expression, MethodInfo, IEnumerable&lt;Expression&gt;)","pos":[0,53],"source":"Call(Expression, MethodInfo, IEnumerable<Expression>)"}]},{"pos":[141457,141461],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[141526,141527],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[141598,141608],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[141669,141670]},{"pos":[141740,141750],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[141826,141827]},{"pos":[141909,141920],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[142005,142006],"content":"<","needQuote":true,"nodes":[]},{"pos":[142077,142087],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[142179,142180],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[142407,142411],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[142476,142477],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[142548,142558],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[142619,142620]},{"pos":[142690,142700],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[142776,142777]},{"pos":[142859,142870],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[142956,142959]},{"pos":[143037,143047],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[143107,143108],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[143135,143136],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[143770,143822],"content":"Call(Expression, MethodInfo, Expression, Expression)","needQuote":true,"nodes":[{"content":"Call(Expression, MethodInfo, Expression, Expression)","pos":[0,52]}]},{"pos":[144222,144226],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[144291,144292],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[144363,144373],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[144434,144435]},{"pos":[144505,144515],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[144591,144592]},{"pos":[144668,144678],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[144739,144740]},{"pos":[144816,144826],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[144886,144887],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[145109,145113],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[145178,145179],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[145250,145260],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[145321,145322]},{"pos":[145392,145402],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[145478,145479]},{"pos":[145555,145565],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[145626,145627]},{"pos":[145703,145713],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[145773,145774],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[146350,146414],"content":"Call(Expression, MethodInfo, Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Call(Expression, MethodInfo, Expression, Expression, Expression)","pos":[0,64]}]},{"pos":[146885,146889],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[146954,146955],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[147026,147036],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[147097,147098]},{"pos":[147168,147178],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[147254,147255]},{"pos":[147331,147341],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[147402,147403]},{"pos":[147479,147489],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[147550,147551]},{"pos":[147627,147637],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[147697,147698],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[147955,147959],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[148024,148025],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[148096,148106],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[148167,148168]},{"pos":[148238,148248],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[148324,148325]},{"pos":[148401,148411],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[148472,148473]},{"pos":[148549,148559],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[148620,148621]},{"pos":[148697,148707],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[148767,148768],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[149323,149365],"content":"Call(Expression, MethodInfo, Expression[])","needQuote":true,"nodes":[{"content":"Call(Expression, MethodInfo, Expression[])","pos":[0,42]}]},{"pos":[149911,149915],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[149980,149981],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[150052,150062],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[150123,150124]},{"pos":[150194,150204],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[150280,150281]},{"pos":[150357,150367],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[150428,150430]},{"pos":[150461,150462],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[150651,150655],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[150720,150721],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[150792,150802],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[150863,150864]},{"pos":[150934,150944],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[151020,151021]},{"pos":[151097,151107],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[151167,151169],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[151197,151198],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[151735,151781],"content":"Call(Expression, String, Type[], Expression[])","needQuote":true,"nodes":[{"content":"Call(Expression, String, Type[], Expression[])","pos":[0,46]}]},{"pos":[152330,152334],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[152399,152400],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[152471,152481],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[152542,152543]},{"pos":[152598,152604],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[152665,152666]},{"pos":[152719,152723],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[152782,152784]},{"content":",","pos":[152816,152817]},{"pos":[152893,152903],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[152964,152966]},{"pos":[152997,152998],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[153186,153190],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[153255,153256],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[153327,153337],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[153398,153399]},{"pos":[153454,153460],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[153521,153522]},{"pos":[153575,153579],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[153637,153639],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[153668,153669]},{"pos":[153745,153755],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[153815,153817],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[153845,153846],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[154394,154435],"content":"Call(MethodInfo, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"Call(MethodInfo, IEnumerable&lt;Expression&gt;)","pos":[0,41],"source":"Call(MethodInfo, IEnumerable<Expression>)"}]},{"pos":[154993,154997],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[155062,155063],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[155128,155138],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[155214,155215]},{"pos":[155297,155308],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[155393,155394],"content":"<","needQuote":true,"nodes":[]},{"pos":[155465,155475],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[155567,155568],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[155760,155764],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[155829,155830],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[155895,155905],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[155981,155982]},{"pos":[156064,156075],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[156161,156164]},{"pos":[156242,156252],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[156312,156313],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[156340,156341],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[156846,156874],"content":"Call(MethodInfo, Expression)","needQuote":true,"nodes":[{"content":"Call(MethodInfo, Expression)","pos":[0,28]}]},{"pos":[157132,157136],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[157201,157202],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[157267,157277],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[157353,157354]},{"pos":[157430,157440],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[157500,157501],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[157653,157657],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[157722,157723],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[157788,157798],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[157874,157875]},{"pos":[157951,157961],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[158021,158022],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[158434,158474],"content":"Call(MethodInfo, Expression, Expression)","needQuote":true,"nodes":[{"content":"Call(MethodInfo, Expression, Expression)","pos":[0,40]}]},{"pos":[158803,158807],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[158872,158873],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[158938,158948],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[159024,159025]},{"pos":[159101,159111],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[159172,159173]},{"pos":[159249,159259],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[159319,159320],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[159507,159511],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[159576,159577],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[159642,159652],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[159728,159729]},{"pos":[159805,159815],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[159876,159877]},{"pos":[159953,159963],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[160023,160024],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[160518,160570],"content":"Call(MethodInfo, Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Call(MethodInfo, Expression, Expression, Expression)","pos":[0,52]}]},{"pos":[160970,160974],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[161039,161040],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[161105,161115],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[161191,161192]},{"pos":[161268,161278],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[161339,161340]},{"pos":[161416,161426],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[161487,161488]},{"pos":[161564,161574],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[161634,161635],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[161857,161861],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[161926,161927],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[161992,162002],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[162078,162079]},{"pos":[162155,162165],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[162226,162227]},{"pos":[162303,162313],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[162374,162375]},{"pos":[162451,162461],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[162521,162522],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[163098,163162],"content":"Call(MethodInfo, Expression, Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Call(MethodInfo, Expression, Expression, Expression, Expression)","pos":[0,64]}]},{"pos":[163633,163637],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[163702,163703],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[163768,163778],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[163854,163855]},{"pos":[163931,163941],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[164002,164003]},{"pos":[164079,164089],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[164150,164151]},{"pos":[164227,164237],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[164298,164299]},{"pos":[164375,164385],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[164445,164446],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[164703,164707],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[164772,164773],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[164838,164848],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[164924,164925]},{"pos":[165001,165011],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[165072,165073]},{"pos":[165149,165159],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[165220,165221]},{"pos":[165297,165307],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[165368,165369]},{"pos":[165445,165455],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[165515,165516],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[166174,166250],"content":"Call(MethodInfo, Expression, Expression, Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Call(MethodInfo, Expression, Expression, Expression, Expression, Expression)","pos":[0,76]}]},{"pos":[166792,166796],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[166861,166862],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[166927,166937],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[167013,167014]},{"pos":[167090,167100],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[167161,167162]},{"pos":[167238,167248],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[167309,167310]},{"pos":[167386,167396],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[167457,167458]},{"pos":[167534,167544],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[167605,167606]},{"pos":[167682,167692],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[167752,167753],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[168045,168049],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[168114,168115],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[168180,168190],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[168266,168267]},{"pos":[168343,168353],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[168414,168415]},{"pos":[168491,168501],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[168562,168563]},{"pos":[168639,168649],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[168710,168711]},{"pos":[168787,168797],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[168858,168859]},{"pos":[168935,168945],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[169005,169006],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[169573,169603],"content":"Call(MethodInfo, Expression[])","needQuote":true,"nodes":[{"content":"Call(MethodInfo, Expression[])","pos":[0,30]}]},{"pos":[170030,170034],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[170099,170100],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[170165,170175],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[170251,170252]},{"pos":[170328,170338],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[170399,170401]},{"pos":[170432,170433],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[170587,170591],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[170656,170657],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[170722,170732],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[170808,170809]},{"pos":[170885,170895],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[170955,170957],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[170985,170986],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[171441,171481],"content":"Call(Type, String, Type[], Expression[])","needQuote":true,"nodes":[{"content":"Call(Type, String, Type[], Expression[])","pos":[0,40]}]},{"pos":[171955,171959],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[172024,172025],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[172073,172077],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[172136,172137]},{"pos":[172192,172198],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[172259,172260]},{"pos":[172313,172317],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[172376,172378]},{"content":",","pos":[172410,172411]},{"pos":[172487,172497],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[172558,172560]},{"pos":[172591,172592],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[172757,172761],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[172826,172827],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[172875,172879],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[172938,172939]},{"pos":[172994,173000],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[173061,173062]},{"pos":[173115,173119],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[173177,173179],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[173208,173209]},{"pos":[173285,173295],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[173355,173357],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[173385,173386],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[173876,173914],"content":"Catch(ParameterExpression, Expression)","needQuote":true,"nodes":[{"content":"Catch(ParameterExpression, Expression)","pos":[0,38]}]},{"pos":[174204,174209],"content":"Catch","needQuote":true,"nodes":[{"content":"Catch","pos":[0,5]}]},{"pos":[174275,174276],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[174356,174375],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[174445,174446]},{"pos":[174522,174532],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[174592,174593],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[174761,174766],"content":"Catch","needQuote":true,"nodes":[{"content":"Catch","pos":[0,5]}]},{"pos":[174832,174833],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[174913,174932],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[175002,175003]},{"pos":[175079,175089],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[175149,175150],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[175605,175655],"content":"Catch(ParameterExpression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Catch(ParameterExpression, Expression, Expression)","pos":[0,50]}]},{"pos":[176016,176021],"content":"Catch","needQuote":true,"nodes":[{"content":"Catch","pos":[0,5]}]},{"pos":[176087,176088],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[176168,176187],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[176257,176258]},{"pos":[176334,176344],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[176405,176406]},{"pos":[176482,176492],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[176552,176553],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[176756,176761],"content":"Catch","needQuote":true,"nodes":[{"content":"Catch","pos":[0,5]}]},{"pos":[176827,176828],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[176908,176927],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[176997,176998]},{"pos":[177074,177084],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[177145,177146]},{"pos":[177222,177232],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[177292,177293],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[177727,177750],"content":"Catch(Type, Expression)","needQuote":true,"nodes":[{"content":"Catch(Type, Expression)","pos":[0,23]}]},{"pos":[177976,177981],"content":"Catch","needQuote":true,"nodes":[{"content":"Catch","pos":[0,5]}]},{"pos":[178047,178048],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[178096,178100],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[178159,178160]},{"pos":[178236,178246],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[178306,178307],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[178443,178448],"content":"Catch","needQuote":true,"nodes":[{"content":"Catch","pos":[0,5]}]},{"pos":[178514,178515],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[178563,178567],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[178626,178627]},{"pos":[178703,178713],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[178773,178774],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[179149,179184],"content":"Catch(Type, Expression, Expression)","needQuote":true,"nodes":[{"content":"Catch(Type, Expression, Expression)","pos":[0,35]}]},{"pos":[179481,179486],"content":"Catch","needQuote":true,"nodes":[{"content":"Catch","pos":[0,5]}]},{"pos":[179552,179553],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[179601,179605],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[179664,179665]},{"pos":[179741,179751],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[179812,179813]},{"pos":[179889,179899],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[179959,179960],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[180131,180136],"content":"Catch","needQuote":true,"nodes":[{"content":"Catch","pos":[0,5]}]},{"pos":[180202,180203],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[180251,180255],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[180314,180315]},{"pos":[180391,180401],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[180462,180463]},{"pos":[180539,180549],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[180609,180610],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[181003,181037],"content":"ClearDebugInfo(SymbolDocumentInfo)","needQuote":true,"nodes":[{"content":"ClearDebugInfo(SymbolDocumentInfo)","pos":[0,34]}]},{"pos":[181272,181286],"content":"ClearDebugInfo","needQuote":true,"nodes":[{"content":"ClearDebugInfo","pos":[0,14]}]},{"pos":[181361,181362],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[181441,181459],"content":"SymbolDocumentInfo","needQuote":true,"nodes":[{"content":"SymbolDocumentInfo","pos":[0,18]}]},{"pos":[181527,181528],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[181669,181683],"content":"ClearDebugInfo","needQuote":true,"nodes":[{"content":"ClearDebugInfo","pos":[0,14]}]},{"pos":[181758,181759],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[181838,181856],"content":"SymbolDocumentInfo","needQuote":true,"nodes":[{"content":"SymbolDocumentInfo","pos":[0,18]}]},{"pos":[181924,181925],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[182308,182340],"content":"Coalesce(Expression, Expression)","needQuote":true,"nodes":[{"content":"Coalesce(Expression, Expression)","pos":[0,32]}]},{"pos":[182618,182626],"content":"Coalesce","needQuote":true,"nodes":[{"content":"Coalesce","pos":[0,8]}]},{"pos":[182695,182696],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[182767,182777],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[182838,182839]},{"pos":[182915,182925],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[182985,182986],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[183148,183156],"content":"Coalesce","needQuote":true,"nodes":[{"content":"Coalesce","pos":[0,8]}]},{"pos":[183225,183226],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[183297,183307],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[183368,183369]},{"pos":[183445,183455],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[183515,183516],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[183959,184009],"content":"Coalesce(Expression, Expression, LambdaExpression)","needQuote":true,"nodes":[{"content":"Coalesce(Expression, Expression, LambdaExpression)","pos":[0,50]}]},{"pos":[184370,184378],"content":"Coalesce","needQuote":true,"nodes":[{"content":"Coalesce","pos":[0,8]}]},{"pos":[184447,184448],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[184519,184529],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[184590,184591]},{"pos":[184667,184677],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[184738,184739]},{"pos":[184821,184837],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[184903,184904],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[185107,185115],"content":"Coalesce","needQuote":true,"nodes":[{"content":"Coalesce","pos":[0,8]}]},{"pos":[185184,185185],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[185256,185266],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[185327,185328]},{"pos":[185404,185414],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[185475,185476]},{"pos":[185558,185574],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[185640,185641],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[186138,186183],"content":"Condition(Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Condition(Expression, Expression, Expression)","pos":[0,45]}]},{"pos":[186534,186543],"content":"Condition","needQuote":true,"nodes":[{"content":"Condition","pos":[0,9]}]},{"pos":[186613,186614],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[186685,186695],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[186756,186757]},{"pos":[186833,186843],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[186904,186905]},{"pos":[186981,186991],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[187051,187052],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[187250,187259],"content":"Condition","needQuote":true,"nodes":[{"content":"Condition","pos":[0,9]}]},{"pos":[187329,187330],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[187401,187411],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[187472,187473]},{"pos":[187549,187559],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[187620,187621]},{"pos":[187697,187707],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[187767,187768],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[188266,188317],"content":"Condition(Expression, Expression, Expression, Type)","needQuote":true,"nodes":[{"content":"Condition(Expression, Expression, Expression, Type)","pos":[0,51]}]},{"pos":[188693,188702],"content":"Condition","needQuote":true,"nodes":[{"content":"Condition","pos":[0,9]}]},{"pos":[188772,188773],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[188844,188854],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[188915,188916]},{"pos":[188992,189002],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[189063,189064]},{"pos":[189140,189150],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[189211,189212]},{"pos":[189265,189269],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[189327,189328],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[189538,189547],"content":"Condition","needQuote":true,"nodes":[{"content":"Condition","pos":[0,9]}]},{"pos":[189617,189618],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[189689,189699],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[189760,189761]},{"pos":[189837,189847],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[189908,189909]},{"pos":[189985,189995],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[190056,190057]},{"pos":[190110,190114],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[190172,190173],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[190585,190601],"content":"Constant(Object)","needQuote":true,"nodes":[{"content":"Constant(Object)","pos":[0,16]}]},{"pos":[190766,190774],"content":"Constant","needQuote":true,"nodes":[{"content":"Constant","pos":[0,8]}]},{"pos":[190843,190844],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[190894,190900],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[190960,190961],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[191067,191075],"content":"Constant","needQuote":true,"nodes":[{"content":"Constant","pos":[0,8]}]},{"pos":[191144,191145],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[191195,191201],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[191261,191262],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[191547,191569],"content":"Constant(Object, Type)","needQuote":true,"nodes":[{"content":"Constant(Object, Type)","pos":[0,22]}]},{"pos":[191759,191767],"content":"Constant","needQuote":true,"nodes":[{"content":"Constant","pos":[0,8]}]},{"pos":[191836,191837],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[191887,191893],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[191954,191955]},{"pos":[192008,192012],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[192070,192071],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[192189,192197],"content":"Constant","needQuote":true,"nodes":[{"content":"Constant","pos":[0,8]}]},{"pos":[192266,192267],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[192317,192323],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[192384,192385]},{"pos":[192438,192442],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[192500,192501],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[192815,192836],"content":"Continue(LabelTarget)","needQuote":true,"nodes":[{"content":"Continue(LabelTarget)","pos":[0,21]}]},{"pos":[193045,193053],"content":"Continue","needQuote":true,"nodes":[{"content":"Continue","pos":[0,8]}]},{"pos":[193122,193123],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[193195,193206],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[193267,193268],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[193396,193404],"content":"Continue","needQuote":true,"nodes":[{"content":"Continue","pos":[0,8]}]},{"pos":[193473,193474],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[193546,193557],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[193618,193619],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[193953,193980],"content":"Continue(LabelTarget, Type)","needQuote":true,"nodes":[{"content":"Continue(LabelTarget, Type)","pos":[0,27]}]},{"pos":[194214,194222],"content":"Continue","needQuote":true,"nodes":[{"content":"Continue","pos":[0,8]}]},{"pos":[194291,194292],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[194364,194375],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[194437,194438]},{"pos":[194491,194495],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[194553,194554],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[194694,194702],"content":"Continue","needQuote":true,"nodes":[{"content":"Continue","pos":[0,8]}]},{"pos":[194771,194772],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[194844,194855],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[194917,194918]},{"pos":[194971,194975],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[195033,195034],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[195384,195409],"content":"Convert(Expression, Type)","needQuote":true,"nodes":[{"content":"Convert(Expression, Type)","pos":[0,25]}]},{"pos":[195639,195646],"content":"Convert","needQuote":true,"nodes":[{"content":"Convert","pos":[0,7]}]},{"pos":[195714,195715],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[195786,195796],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[195857,195858]},{"pos":[195911,195915],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[195973,195974],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[196112,196119],"content":"Convert","needQuote":true,"nodes":[{"content":"Convert","pos":[0,7]}]},{"pos":[196187,196188],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[196259,196269],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[196330,196331]},{"pos":[196384,196388],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[196446,196447],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[196822,196859],"content":"Convert(Expression, Type, MethodInfo)","needQuote":true,"nodes":[{"content":"Convert(Expression, Type, MethodInfo)","pos":[0,37]}]},{"pos":[197148,197155],"content":"Convert","needQuote":true,"nodes":[{"content":"Convert","pos":[0,7]}]},{"pos":[197223,197224],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[197295,197305],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[197366,197367]},{"pos":[197420,197424],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[197483,197484]},{"pos":[197554,197564],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[197639,197640],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[197807,197814],"content":"Convert","needQuote":true,"nodes":[{"content":"Convert","pos":[0,7]}]},{"pos":[197882,197883],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[197954,197964],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[198025,198026]},{"pos":[198079,198083],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[198142,198143]},{"pos":[198213,198223],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[198298,198299],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[198693,198725],"content":"ConvertChecked(Expression, Type)","needQuote":true,"nodes":[{"content":"ConvertChecked(Expression, Type)","pos":[0,32]}]},{"pos":[198969,198983],"content":"ConvertChecked","needQuote":true,"nodes":[{"content":"ConvertChecked","pos":[0,14]}]},{"pos":[199058,199059],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[199130,199140],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[199201,199202]},{"pos":[199255,199259],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[199317,199318],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[199463,199477],"content":"ConvertChecked","needQuote":true,"nodes":[{"content":"ConvertChecked","pos":[0,14]}]},{"pos":[199552,199553],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[199624,199634],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[199695,199696]},{"pos":[199749,199753],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[199811,199812],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[200208,200252],"content":"ConvertChecked(Expression, Type, MethodInfo)","needQuote":true,"nodes":[{"content":"ConvertChecked(Expression, Type, MethodInfo)","pos":[0,44]}]},{"pos":[200555,200569],"content":"ConvertChecked","needQuote":true,"nodes":[{"content":"ConvertChecked","pos":[0,14]}]},{"pos":[200644,200645],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[200716,200726],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[200787,200788]},{"pos":[200841,200845],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[200904,200905]},{"pos":[200975,200985],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[201060,201061],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[201235,201249],"content":"ConvertChecked","needQuote":true,"nodes":[{"content":"ConvertChecked","pos":[0,14]}]},{"pos":[201324,201325],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[201396,201406],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[201467,201468]},{"pos":[201521,201525],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[201584,201585]},{"pos":[201655,201665],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[201740,201741],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[202192,202249],"content":"DebugInfo(SymbolDocumentInfo, Int32, Int32, Int32, Int32)","needQuote":true,"nodes":[{"content":"DebugInfo(SymbolDocumentInfo, Int32, Int32, Int32, Int32)","pos":[0,57]}]},{"pos":[202582,202591],"content":"DebugInfo","needQuote":true,"nodes":[{"content":"DebugInfo","pos":[0,9]}]},{"pos":[202661,202662],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[202741,202759],"content":"SymbolDocumentInfo","needQuote":true,"nodes":[{"content":"SymbolDocumentInfo","pos":[0,18]}]},{"content":",","pos":[202828,202829]},{"pos":[202883,202888],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[202948,202949]},{"pos":[203003,203008],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[203068,203069]},{"pos":[203123,203128],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[203188,203189]},{"pos":[203243,203248],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[203307,203308],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[203496,203505],"content":"DebugInfo","needQuote":true,"nodes":[{"content":"DebugInfo","pos":[0,9]}]},{"pos":[203575,203576],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[203655,203673],"content":"SymbolDocumentInfo","needQuote":true,"nodes":[{"content":"SymbolDocumentInfo","pos":[0,18]}]},{"content":",","pos":[203742,203743]},{"pos":[203797,203802],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[203862,203863]},{"pos":[203917,203922],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[203982,203983]},{"pos":[204037,204042],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[204102,204103]},{"pos":[204157,204162],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[204221,204222],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[204641,204662],"content":"Decrement(Expression)","needQuote":true,"nodes":[{"content":"Decrement(Expression)","pos":[0,21]}]},{"pos":[204871,204880],"content":"Decrement","needQuote":true,"nodes":[{"content":"Decrement","pos":[0,9]}]},{"pos":[204950,204951],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[205022,205032],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[205092,205093],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[205221,205230],"content":"Decrement","needQuote":true,"nodes":[{"content":"Decrement","pos":[0,9]}]},{"pos":[205300,205301],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[205372,205382],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[205442,205443],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[205794,205827],"content":"Decrement(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Decrement(Expression, MethodInfo)","pos":[0,33]}]},{"pos":[206095,206104],"content":"Decrement","needQuote":true,"nodes":[{"content":"Decrement","pos":[0,9]}]},{"pos":[206174,206175],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[206246,206256],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[206317,206318]},{"pos":[206388,206398],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[206473,206474],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[206631,206640],"content":"Decrement","needQuote":true,"nodes":[{"content":"Decrement","pos":[0,9]}]},{"pos":[206710,206711],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[206782,206792],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[206853,206854]},{"pos":[206924,206934],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[207009,207010],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[207348,207361],"content":"Default(Type)","needQuote":true,"nodes":[{"content":"Default(Type)","pos":[0,13]}]},{"pos":[207520,207527],"content":"Default","needQuote":true,"nodes":[{"content":"Default","pos":[0,7]}]},{"pos":[207595,207596],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[207644,207648],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[207706,207707],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[207810,207817],"content":"Default","needQuote":true,"nodes":[{"content":"Default","pos":[0,7]}]},{"pos":[207885,207886],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[207934,207938],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[207996,207997],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[208319,208349],"content":"Divide(Expression, Expression)","needQuote":true,"nodes":[{"content":"Divide(Expression, Expression)","pos":[0,30]}]},{"pos":[208623,208629],"content":"Divide","needQuote":true,"nodes":[{"content":"Divide","pos":[0,6]}]},{"pos":[208696,208697],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[208768,208778],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[208839,208840]},{"pos":[208916,208926],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[208986,208987],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[209147,209153],"content":"Divide","needQuote":true,"nodes":[{"content":"Divide","pos":[0,6]}]},{"pos":[209220,209221],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[209292,209302],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[209363,209364]},{"pos":[209440,209450],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[209510,209511],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[209935,209977],"content":"Divide(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Divide(Expression, Expression, MethodInfo)","pos":[0,42]}]},{"pos":[210310,210316],"content":"Divide","needQuote":true,"nodes":[{"content":"Divide","pos":[0,6]}]},{"pos":[210383,210384],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[210455,210465],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[210526,210527]},{"pos":[210603,210613],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[210674,210675]},{"pos":[210745,210755],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[210830,210831],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[211020,211026],"content":"Divide","needQuote":true,"nodes":[{"content":"Divide","pos":[0,6]}]},{"pos":[211093,211094],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[211165,211175],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[211236,211237]},{"pos":[211313,211323],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[211384,211385]},{"pos":[211455,211465],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[211540,211541],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[211984,212020],"content":"DivideAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"DivideAssign(Expression, Expression)","pos":[0,36]}]},{"pos":[212306,212318],"content":"DivideAssign","needQuote":true,"nodes":[{"content":"DivideAssign","pos":[0,12]}]},{"pos":[212391,212392],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[212463,212473],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[212534,212535]},{"pos":[212611,212621],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[212681,212682],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[212848,212860],"content":"DivideAssign","needQuote":true,"nodes":[{"content":"DivideAssign","pos":[0,12]}]},{"pos":[212933,212934],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[213005,213015],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[213076,213077]},{"pos":[213153,213163],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[213223,213224],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[213666,213714],"content":"DivideAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"DivideAssign(Expression, Expression, MethodInfo)","pos":[0,48]}]},{"pos":[214059,214071],"content":"DivideAssign","needQuote":true,"nodes":[{"content":"DivideAssign","pos":[0,12]}]},{"pos":[214144,214145],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[214216,214226],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[214287,214288]},{"pos":[214364,214374],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[214435,214436]},{"pos":[214506,214516],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[214591,214592],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[214787,214799],"content":"DivideAssign","needQuote":true,"nodes":[{"content":"DivideAssign","pos":[0,12]}]},{"pos":[214872,214873],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[214944,214954],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[215015,215016]},{"pos":[215092,215102],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[215163,215164]},{"pos":[215234,215244],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[215319,215320],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[215844,215910],"content":"DivideAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"DivideAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,66]}]},{"pos":[216338,216350],"content":"DivideAssign","needQuote":true,"nodes":[{"content":"DivideAssign","pos":[0,12]}]},{"pos":[216423,216424],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[216495,216505],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[216566,216567]},{"pos":[216643,216653],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[216714,216715]},{"pos":[216785,216795],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[216871,216872]},{"pos":[216954,216970],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[217036,217037],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[217273,217285],"content":"DivideAssign","needQuote":true,"nodes":[{"content":"DivideAssign","pos":[0,12]}]},{"pos":[217358,217359],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[217430,217440],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[217501,217502]},{"pos":[217578,217588],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[217649,217650]},{"pos":[217720,217730],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[217806,217807]},{"pos":[217889,217905],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[217971,217972],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[218518,218566],"content":"ElementInit(MethodInfo, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"ElementInit(MethodInfo, IEnumerable&lt;Expression&gt;)","pos":[0,48],"source":"ElementInit(MethodInfo, IEnumerable<Expression>)"}]},{"pos":[219152,219163],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[219235,219236],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[219301,219311],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[219387,219388]},{"pos":[219470,219481],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[219566,219567],"content":"<","needQuote":true,"nodes":[]},{"pos":[219638,219648],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[219740,219741],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[219940,219951],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[220023,220024],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[220089,220099],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[220175,220176]},{"pos":[220258,220269],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[220355,220358]},{"pos":[220436,220446],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[220506,220507],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[220534,220535],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[221070,221107],"content":"ElementInit(MethodInfo, Expression[])","needQuote":true,"nodes":[{"content":"ElementInit(MethodInfo, Expression[])","pos":[0,37]}]},{"pos":[221562,221573],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[221645,221646],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[221711,221721],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[221797,221798]},{"pos":[221874,221884],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[221945,221947]},{"pos":[221978,221979],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[222140,222151],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[222223,222224],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[222289,222299],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[222375,222376]},{"pos":[222452,222462],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[222522,222524],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[222552,222553],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[222953,222960],"content":"Empty()","needQuote":true,"nodes":[{"content":"Empty()","pos":[0,7]}]},{"pos":[223091,223096],"content":"Empty","needQuote":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[223162,223163],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[223190,223191],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[223279,223284],"content":"Empty","needQuote":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[223350,223351],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[223378,223379],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[223679,223708],"content":"Equal(Expression, Expression)","needQuote":true,"nodes":[{"content":"Equal(Expression, Expression)","pos":[0,29]}]},{"pos":[223980,223985],"content":"Equal","needQuote":true,"nodes":[{"content":"Equal","pos":[0,5]}]},{"pos":[224051,224052],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[224123,224133],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[224194,224195]},{"pos":[224271,224281],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[224341,224342],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[224501,224506],"content":"Equal","needQuote":true,"nodes":[{"content":"Equal","pos":[0,5]}]},{"pos":[224572,224573],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[224644,224654],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[224715,224716]},{"pos":[224792,224802],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[224862,224863],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[225299,225349],"content":"Equal(Expression, Expression, Boolean, MethodInfo)","needQuote":true,"nodes":[{"content":"Equal(Expression, Expression, Boolean, MethodInfo)","pos":[0,50]}]},{"pos":[225711,225716],"content":"Equal","needQuote":true,"nodes":[{"content":"Equal","pos":[0,5]}]},{"pos":[225782,225783],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[225854,225864],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[225925,225926]},{"pos":[226002,226012],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[226073,226074]},{"pos":[226130,226137],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[226199,226200]},{"pos":[226270,226280],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[226355,226356],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[226559,226564],"content":"Equal","needQuote":true,"nodes":[{"content":"Equal","pos":[0,5]}]},{"pos":[226630,226631],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[226702,226712],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[226773,226774]},{"pos":[226850,226860],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[226921,226922]},{"pos":[226978,226985],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[227047,227048]},{"pos":[227118,227128],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[227203,227204],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[227668,227703],"content":"ExclusiveOr(Expression, Expression)","needQuote":true,"nodes":[{"content":"ExclusiveOr(Expression, Expression)","pos":[0,35]}]},{"pos":[227987,227998],"content":"ExclusiveOr","needQuote":true,"nodes":[{"content":"ExclusiveOr","pos":[0,11]}]},{"pos":[228070,228071],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[228142,228152],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[228213,228214]},{"pos":[228290,228300],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[228360,228361],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[228526,228537],"content":"ExclusiveOr","needQuote":true,"nodes":[{"content":"ExclusiveOr","pos":[0,11]}]},{"pos":[228609,228610],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[228681,228691],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[228752,228753]},{"pos":[228829,228839],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[228899,228900],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[229339,229386],"content":"ExclusiveOr(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"ExclusiveOr(Expression, Expression, MethodInfo)","pos":[0,47]}]},{"pos":[229729,229740],"content":"ExclusiveOr","needQuote":true,"nodes":[{"content":"ExclusiveOr","pos":[0,11]}]},{"pos":[229812,229813],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[229884,229894],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[229955,229956]},{"pos":[230032,230042],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[230103,230104]},{"pos":[230174,230184],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[230259,230260],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[230454,230465],"content":"ExclusiveOr","needQuote":true,"nodes":[{"content":"ExclusiveOr","pos":[0,11]}]},{"pos":[230537,230538],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[230609,230619],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[230680,230681]},{"pos":[230757,230767],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[230828,230829]},{"pos":[230899,230909],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[230984,230985],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[231443,231484],"content":"ExclusiveOrAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign(Expression, Expression)","pos":[0,41]}]},{"pos":[231780,231797],"content":"ExclusiveOrAssign","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign","pos":[0,17]}]},{"pos":[231875,231876],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[231947,231957],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[232018,232019]},{"pos":[232095,232105],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[232165,232166],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[232337,232354],"content":"ExclusiveOrAssign","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign","pos":[0,17]}]},{"pos":[232432,232433],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[232504,232514],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[232575,232576]},{"pos":[232652,232662],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[232722,232723],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[233180,233233],"content":"ExclusiveOrAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign(Expression, Expression, MethodInfo)","pos":[0,53]}]},{"pos":[233588,233605],"content":"ExclusiveOrAssign","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign","pos":[0,17]}]},{"pos":[233683,233684],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[233755,233765],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[233826,233827]},{"pos":[233903,233913],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[233974,233975]},{"pos":[234045,234055],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[234130,234131],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[234331,234348],"content":"ExclusiveOrAssign","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign","pos":[0,17]}]},{"pos":[234426,234427],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[234498,234508],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[234569,234570]},{"pos":[234646,234656],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[234717,234718]},{"pos":[234788,234798],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[234873,234874],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[235413,235484],"content":"ExclusiveOrAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,71]}]},{"pos":[235922,235939],"content":"ExclusiveOrAssign","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign","pos":[0,17]}]},{"pos":[236017,236018],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[236089,236099],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[236160,236161]},{"pos":[236237,236247],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[236308,236309]},{"pos":[236379,236389],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[236465,236466]},{"pos":[236548,236564],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[236630,236631],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[236872,236889],"content":"ExclusiveOrAssign","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign","pos":[0,17]}]},{"pos":[236967,236968],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[237039,237049],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[237110,237111]},{"pos":[237187,237197],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[237258,237259]},{"pos":[237329,237339],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[237415,237416]},{"pos":[237498,237514],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[237580,237581],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[238090,238118],"content":"Field(Expression, FieldInfo)","needQuote":true,"nodes":[{"content":"Field(Expression, FieldInfo)","pos":[0,28]}]},{"pos":[238376,238381],"content":"Field","needQuote":true,"nodes":[{"content":"Field","pos":[0,5]}]},{"pos":[238447,238448],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[238519,238529],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[238590,238591]},{"pos":[238660,238669],"content":"FieldInfo","needQuote":true,"nodes":[{"content":"FieldInfo","pos":[0,9]}]},{"pos":[238743,238744],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[238896,238901],"content":"Field","needQuote":true,"nodes":[{"content":"Field","pos":[0,5]}]},{"pos":[238967,238968],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[239039,239049],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[239110,239111]},{"pos":[239180,239189],"content":"FieldInfo","needQuote":true,"nodes":[{"content":"FieldInfo","pos":[0,9]}]},{"pos":[239263,239264],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[239627,239652],"content":"Field(Expression, String)","needQuote":true,"nodes":[{"content":"Field(Expression, String)","pos":[0,25]}]},{"pos":[239882,239887],"content":"Field","needQuote":true,"nodes":[{"content":"Field","pos":[0,5]}]},{"pos":[239953,239954],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[240025,240035],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[240096,240097]},{"pos":[240152,240158],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[240218,240219],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[240357,240362],"content":"Field","needQuote":true,"nodes":[{"content":"Field","pos":[0,5]}]},{"pos":[240428,240429],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[240500,240510],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[240571,240572]},{"pos":[240627,240633],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[240693,240694],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[241052,241083],"content":"Field(Expression, Type, String)","needQuote":true,"nodes":[{"content":"Field(Expression, Type, String)","pos":[0,31]}]},{"pos":[241338,241343],"content":"Field","needQuote":true,"nodes":[{"content":"Field","pos":[0,5]}]},{"pos":[241409,241410],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[241481,241491],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[241552,241553]},{"pos":[241606,241610],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[241669,241670]},{"pos":[241725,241731],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[241791,241792],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[241942,241947],"content":"Field","needQuote":true,"nodes":[{"content":"Field","pos":[0,5]}]},{"pos":[242013,242014],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[242085,242095],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[242156,242157]},{"pos":[242210,242214],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[242273,242274]},{"pos":[242329,242335],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[242395,242396],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[242733,242754],"content":"GetActionType(Type[])","needQuote":true,"nodes":[{"content":"GetActionType(Type[])","pos":[0,21]}]},{"pos":[243041,243054],"content":"GetActionType","needQuote":true,"nodes":[{"content":"GetActionType","pos":[0,13]}]},{"pos":[243128,243129],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[243177,243181],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[243240,243242]},{"pos":[243273,243274],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[243385,243398],"content":"GetActionType","needQuote":true,"nodes":[{"content":"GetActionType","pos":[0,13]}]},{"pos":[243472,243473],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[243521,243525],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[243583,243585],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[243613,243614],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[243956,243979],"content":"GetDelegateType(Type[])","needQuote":true,"nodes":[{"content":"GetDelegateType(Type[])","pos":[0,23]}]},{"pos":[244274,244289],"content":"GetDelegateType","needQuote":true,"nodes":[{"content":"GetDelegateType","pos":[0,15]}]},{"pos":[244365,244366],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[244414,244418],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[244477,244479]},{"pos":[244510,244511],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[244624,244639],"content":"GetDelegateType","needQuote":true,"nodes":[{"content":"GetDelegateType","pos":[0,15]}]},{"pos":[244715,244716],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[244764,244768],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[244826,244828],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[244856,244857],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[245201,245220],"content":"GetFuncType(Type[])","needQuote":true,"nodes":[{"content":"GetFuncType(Type[])","pos":[0,19]}]},{"pos":[245499,245510],"content":"GetFuncType","needQuote":true,"nodes":[{"content":"GetFuncType","pos":[0,11]}]},{"pos":[245582,245583],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[245631,245635],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[245694,245696]},{"pos":[245727,245728],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[245837,245848],"content":"GetFuncType","needQuote":true,"nodes":[{"content":"GetFuncType","pos":[0,11]}]},{"pos":[245920,245921],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[245969,245973],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[246031,246033],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[246061,246062],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[246410,246427],"content":"Goto(LabelTarget)","needQuote":true,"nodes":[{"content":"Goto(LabelTarget)","pos":[0,17]}]},{"pos":[246628,246632],"content":"Goto","needQuote":true,"nodes":[{"content":"Goto","pos":[0,4]}]},{"pos":[246697,246698],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[246770,246781],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[246842,246843],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[246967,246971],"content":"Goto","needQuote":true,"nodes":[{"content":"Goto","pos":[0,4]}]},{"pos":[247036,247037],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[247109,247120],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[247181,247182],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[247528,247557],"content":"Goto(LabelTarget, Expression)","needQuote":true,"nodes":[{"content":"Goto(LabelTarget, Expression)","pos":[0,29]}]},{"pos":[247829,247833],"content":"Goto","needQuote":true,"nodes":[{"content":"Goto","pos":[0,4]}]},{"pos":[247898,247899],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[247971,247982],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[248044,248045]},{"pos":[248121,248131],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[248191,248192],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[248351,248355],"content":"Goto","needQuote":true,"nodes":[{"content":"Goto","pos":[0,4]}]},{"pos":[248420,248421],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[248493,248504],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[248566,248567]},{"pos":[248643,248653],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[248713,248714],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[249118,249153],"content":"Goto(LabelTarget, Expression, Type)","needQuote":true,"nodes":[{"content":"Goto(LabelTarget, Expression, Type)","pos":[0,35]}]},{"pos":[249450,249454],"content":"Goto","needQuote":true,"nodes":[{"content":"Goto","pos":[0,4]}]},{"pos":[249519,249520],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[249592,249603],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[249665,249666]},{"pos":[249742,249752],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[249813,249814]},{"pos":[249867,249871],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[249929,249930],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[250101,250105],"content":"Goto","needQuote":true,"nodes":[{"content":"Goto","pos":[0,4]}]},{"pos":[250170,250171],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[250243,250254],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[250316,250317]},{"pos":[250393,250403],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[250464,250465]},{"pos":[250518,250522],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[250580,250581],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[250968,250991],"content":"Goto(LabelTarget, Type)","needQuote":true,"nodes":[{"content":"Goto(LabelTarget, Type)","pos":[0,23]}]},{"pos":[251217,251221],"content":"Goto","needQuote":true,"nodes":[{"content":"Goto","pos":[0,4]}]},{"pos":[251286,251287],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[251359,251370],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[251432,251433]},{"pos":[251486,251490],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[251548,251549],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[251685,251689],"content":"Goto","needQuote":true,"nodes":[{"content":"Goto","pos":[0,4]}]},{"pos":[251754,251755],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[251827,251838],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[251900,251901]},{"pos":[251954,251958],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[252016,252017],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[252387,252422],"content":"GreaterThan(Expression, Expression)","needQuote":true,"nodes":[{"content":"GreaterThan(Expression, Expression)","pos":[0,35]}]},{"pos":[252706,252717],"content":"GreaterThan","needQuote":true,"nodes":[{"content":"GreaterThan","pos":[0,11]}]},{"pos":[252789,252790],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[252861,252871],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[252932,252933]},{"pos":[253009,253019],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[253079,253080],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[253245,253256],"content":"GreaterThan","needQuote":true,"nodes":[{"content":"GreaterThan","pos":[0,11]}]},{"pos":[253328,253329],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[253400,253410],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[253471,253472]},{"pos":[253548,253558],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[253618,253619],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[254073,254129],"content":"GreaterThan(Expression, Expression, Boolean, MethodInfo)","needQuote":true,"nodes":[{"content":"GreaterThan(Expression, Expression, Boolean, MethodInfo)","pos":[0,56]}]},{"pos":[254503,254514],"content":"GreaterThan","needQuote":true,"nodes":[{"content":"GreaterThan","pos":[0,11]}]},{"pos":[254586,254587],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[254658,254668],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[254729,254730]},{"pos":[254806,254816],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[254877,254878]},{"pos":[254934,254941],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[255003,255004]},{"pos":[255074,255084],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[255159,255160],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[255369,255380],"content":"GreaterThan","needQuote":true,"nodes":[{"content":"GreaterThan","pos":[0,11]}]},{"pos":[255452,255453],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[255524,255534],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[255595,255596]},{"pos":[255672,255682],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[255743,255744]},{"pos":[255800,255807],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[255869,255870]},{"pos":[255940,255950],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[256025,256026],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[256509,256551],"content":"GreaterThanOrEqual(Expression, Expression)","needQuote":true,"nodes":[{"content":"GreaterThanOrEqual(Expression, Expression)","pos":[0,42]}]},{"pos":[256849,256867],"content":"GreaterThanOrEqual","needQuote":true,"nodes":[{"content":"GreaterThanOrEqual","pos":[0,18]}]},{"pos":[256946,256947],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[257018,257028],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[257089,257090]},{"pos":[257166,257176],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[257236,257237],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[257409,257427],"content":"GreaterThanOrEqual","needQuote":true,"nodes":[{"content":"GreaterThanOrEqual","pos":[0,18]}]},{"pos":[257506,257507],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[257578,257588],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[257649,257650]},{"pos":[257726,257736],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[257796,257797],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[258272,258335],"content":"GreaterThanOrEqual(Expression, Expression, Boolean, MethodInfo)","needQuote":true,"nodes":[{"content":"GreaterThanOrEqual(Expression, Expression, Boolean, MethodInfo)","pos":[0,63]}]},{"pos":[258723,258741],"content":"GreaterThanOrEqual","needQuote":true,"nodes":[{"content":"GreaterThanOrEqual","pos":[0,18]}]},{"pos":[258820,258821],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[258892,258902],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[258963,258964]},{"pos":[259040,259050],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[259111,259112]},{"pos":[259168,259175],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[259237,259238]},{"pos":[259308,259318],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[259393,259394],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[259610,259628],"content":"GreaterThanOrEqual","needQuote":true,"nodes":[{"content":"GreaterThanOrEqual","pos":[0,18]}]},{"pos":[259707,259708],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[259779,259789],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[259850,259851]},{"pos":[259927,259937],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[259998,259999]},{"pos":[260055,260062],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[260124,260125]},{"pos":[260195,260205],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[260280,260281],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[260766,260796],"content":"IfThen(Expression, Expression)","needQuote":true,"nodes":[{"content":"IfThen(Expression, Expression)","pos":[0,30]}]},{"pos":[261070,261076],"content":"IfThen","needQuote":true,"nodes":[{"content":"IfThen","pos":[0,6]}]},{"pos":[261143,261144],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[261215,261225],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[261286,261287]},{"pos":[261363,261373],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[261433,261434],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[261594,261600],"content":"IfThen","needQuote":true,"nodes":[{"content":"IfThen","pos":[0,6]}]},{"pos":[261667,261668],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[261739,261749],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[261810,261811]},{"pos":[261887,261897],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[261957,261958],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[262393,262439],"content":"IfThenElse(Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"IfThenElse(Expression, Expression, Expression)","pos":[0,46]}]},{"pos":[262792,262802],"content":"IfThenElse","needQuote":true,"nodes":[{"content":"IfThenElse","pos":[0,10]}]},{"pos":[262873,262874],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[262945,262955],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[263016,263017]},{"pos":[263093,263103],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[263164,263165]},{"pos":[263241,263251],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[263311,263312],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[263511,263521],"content":"IfThenElse","needQuote":true,"nodes":[{"content":"IfThenElse","pos":[0,10]}]},{"pos":[263592,263593],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[263664,263674],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[263735,263736]},{"pos":[263812,263822],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[263883,263884]},{"pos":[263960,263970],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[264030,264031],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[264450,264471],"content":"Increment(Expression)","needQuote":true,"nodes":[{"content":"Increment(Expression)","pos":[0,21]}]},{"pos":[264680,264689],"content":"Increment","needQuote":true,"nodes":[{"content":"Increment","pos":[0,9]}]},{"pos":[264759,264760],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[264831,264841],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[264901,264902],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[265030,265039],"content":"Increment","needQuote":true,"nodes":[{"content":"Increment","pos":[0,9]}]},{"pos":[265109,265110],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[265181,265191],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[265251,265252],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[265603,265636],"content":"Increment(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Increment(Expression, MethodInfo)","pos":[0,33]}]},{"pos":[265904,265913],"content":"Increment","needQuote":true,"nodes":[{"content":"Increment","pos":[0,9]}]},{"pos":[265983,265984],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[266055,266065],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[266126,266127]},{"pos":[266197,266207],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[266282,266283],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[266440,266449],"content":"Increment","needQuote":true,"nodes":[{"content":"Increment","pos":[0,9]}]},{"pos":[266519,266520],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[266591,266601],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[266662,266663]},{"pos":[266733,266743],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[266818,266819],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[267254,267297],"content":"Invoke(Expression, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"Invoke(Expression, IEnumerable&lt;Expression&gt;)","pos":[0,43],"source":"Invoke(Expression, IEnumerable<Expression>)"}]},{"pos":[267881,267887],"content":"Invoke","needQuote":true,"nodes":[{"content":"Invoke","pos":[0,6]}]},{"pos":[267954,267955],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[268026,268036],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[268097,268098]},{"pos":[268180,268191],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[268276,268277],"content":"<","needQuote":true,"nodes":[]},{"pos":[268348,268358],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[268450,268451],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[268651,268657],"content":"Invoke","needQuote":true,"nodes":[{"content":"Invoke","pos":[0,6]}]},{"pos":[268724,268725],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[268796,268806],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[268867,268868]},{"pos":[268950,268961],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[269047,269050]},{"pos":[269128,269138],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[269198,269199],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[269226,269227],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[269755,269787],"content":"Invoke(Expression, Expression[])","needQuote":true,"nodes":[{"content":"Invoke(Expression, Expression[])","pos":[0,32]}]},{"pos":[270240,270246],"content":"Invoke","needQuote":true,"nodes":[{"content":"Invoke","pos":[0,6]}]},{"pos":[270313,270314],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[270385,270395],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[270456,270457]},{"pos":[270533,270543],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[270604,270606]},{"pos":[270637,270638],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[270800,270806],"content":"Invoke","needQuote":true,"nodes":[{"content":"Invoke","pos":[0,6]}]},{"pos":[270873,270874],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[270945,270955],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[271016,271017]},{"pos":[271093,271103],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[271163,271165],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[271193,271194],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[271623,271642],"content":"IsFalse(Expression)","needQuote":true,"nodes":[{"content":"IsFalse(Expression)","pos":[0,19]}]},{"pos":[271847,271854],"content":"IsFalse","needQuote":true,"nodes":[{"content":"IsFalse","pos":[0,7]}]},{"pos":[271922,271923],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[271994,272004],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[272064,272065],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[272191,272198],"content":"IsFalse","needQuote":true,"nodes":[{"content":"IsFalse","pos":[0,7]}]},{"pos":[272266,272267],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[272338,272348],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[272408,272409],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[272754,272785],"content":"IsFalse(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"IsFalse(Expression, MethodInfo)","pos":[0,31]}]},{"pos":[273049,273056],"content":"IsFalse","needQuote":true,"nodes":[{"content":"IsFalse","pos":[0,7]}]},{"pos":[273124,273125],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[273196,273206],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[273267,273268]},{"pos":[273338,273348],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[273423,273424],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[273579,273586],"content":"IsFalse","needQuote":true,"nodes":[{"content":"IsFalse","pos":[0,7]}]},{"pos":[273654,273655],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[273726,273736],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[273797,273798]},{"pos":[273868,273878],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[273953,273954],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[274311,274329],"content":"IsTrue(Expression)","needQuote":true,"nodes":[{"content":"IsTrue(Expression)","pos":[0,18]}]},{"pos":[274532,274538],"content":"IsTrue","needQuote":true,"nodes":[{"content":"IsTrue","pos":[0,6]}]},{"pos":[274605,274606],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[274677,274687],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[274747,274748],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[274873,274879],"content":"IsTrue","needQuote":true,"nodes":[{"content":"IsTrue","pos":[0,6]}]},{"pos":[274946,274947],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[275018,275028],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[275088,275089],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[275431,275461],"content":"IsTrue(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"IsTrue(Expression, MethodInfo)","pos":[0,30]}]},{"pos":[275723,275729],"content":"IsTrue","needQuote":true,"nodes":[{"content":"IsTrue","pos":[0,6]}]},{"pos":[275796,275797],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[275868,275878],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[275939,275940]},{"pos":[276010,276020],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[276095,276096],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[276250,276256],"content":"IsTrue","needQuote":true,"nodes":[{"content":"IsTrue","pos":[0,6]}]},{"pos":[276323,276324],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[276395,276405],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[276466,276467]},{"pos":[276537,276547],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[276622,276623],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[276941,276948],"content":"Label()","needQuote":true,"nodes":[{"content":"Label()","pos":[0,7]}]},{"pos":[277079,277084],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[277150,277151],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[277178,277179],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[277267,277272],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[277338,277339],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[277366,277367],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[277633,277651],"content":"Label(LabelTarget)","needQuote":true,"nodes":[{"content":"Label(LabelTarget)","pos":[0,18]}]},{"pos":[277854,277859],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[277925,277926],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[277998,278009],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[278070,278071],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[278196,278201],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[278267,278268],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[278340,278351],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[278412,278413],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[278762,278792],"content":"Label(LabelTarget, Expression)","needQuote":true,"nodes":[{"content":"Label(LabelTarget, Expression)","pos":[0,30]}]},{"pos":[279066,279071],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[279137,279138],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[279210,279221],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[279283,279284]},{"pos":[279360,279370],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[279430,279431],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[279591,279596],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[279662,279663],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[279735,279746],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[279808,279809]},{"pos":[279885,279895],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[279955,279956],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[280294,280307],"content":"Label(String)","needQuote":true,"nodes":[{"content":"Label(String)","pos":[0,13]}]},{"pos":[280466,280471],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[280537,280538],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[280588,280594],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[280654,280655],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[280758,280763],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[280829,280830],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[280880,280886],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[280946,280947],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[281209,281220],"content":"Label(Type)","needQuote":true,"nodes":[{"content":"Label(Type)","pos":[0,11]}]},{"pos":[281375,281380],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[281446,281447],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[281495,281499],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[281557,281558],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[281659,281664],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[281730,281731],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[281779,281783],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[281841,281842],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[282114,282133],"content":"Label(Type, String)","needQuote":true,"nodes":[{"content":"Label(Type, String)","pos":[0,19]}]},{"pos":[282317,282322],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[282388,282389],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[282437,282441],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[282500,282501]},{"pos":[282556,282562],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[282622,282623],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[282738,282743],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[282809,282810],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[282858,282862],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[282921,282922]},{"pos":[282977,282983],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[283043,283044],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[283447,283508],"content":"Lambda(Expression, Boolean, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda(Expression, Boolean, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,61],"source":"Lambda(Expression, Boolean, IEnumerable<ParameterExpression>)"}]},{"pos":[284184,284190],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[284257,284258],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[284329,284339],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[284400,284401]},{"pos":[284457,284464],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[284526,284527]},{"pos":[284609,284620],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[284705,284706],"content":"<","needQuote":true,"nodes":[]},{"pos":[284786,284805],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[284906,284907],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[285131,285137],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[285204,285205],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[285276,285286],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[285347,285348]},{"pos":[285404,285411],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[285473,285474]},{"pos":[285556,285567],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[285653,285656]},{"pos":[285743,285762],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[285831,285832],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[285859,285860],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[286471,286521],"content":"Lambda(Expression, Boolean, ParameterExpression[])","needQuote":true,"nodes":[{"content":"Lambda(Expression, Boolean, ParameterExpression[])","pos":[0,50]}]},{"pos":[287066,287072],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[287139,287140],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[287211,287221],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[287282,287283]},{"pos":[287339,287346],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[287408,287409]},{"pos":[287494,287513],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":"[]","pos":[287583,287585]},{"pos":[287616,287617],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[287803,287809],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[287876,287877],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[287948,287958],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[288019,288020]},{"pos":[288076,288083],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[288145,288146]},{"pos":[288231,288250],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[288319,288321],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[288349,288350],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[288921,288973],"content":"Lambda(Expression, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda(Expression, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,52],"source":"Lambda(Expression, IEnumerable<ParameterExpression>)"}]},{"pos":[289593,289599],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[289666,289667],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[289738,289748],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[289809,289810]},{"pos":[289892,289903],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[289988,289989],"content":"<","needQuote":true,"nodes":[]},{"pos":[290069,290088],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[290189,290190],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[290399,290405],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[290472,290473],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[290544,290554],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[290615,290616]},{"pos":[290698,290709],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[290795,290798]},{"pos":[290885,290904],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[290973,290974],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[291001,291002],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[291566,291607],"content":"Lambda(Expression, ParameterExpression[])","needQuote":true,"nodes":[{"content":"Lambda(Expression, ParameterExpression[])","pos":[0,41]}]},{"pos":[292096,292102],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[292169,292170],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[292241,292251],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[292312,292313]},{"pos":[292398,292417],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":"[]","pos":[292487,292489]},{"pos":[292520,292521],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[292692,292698],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[292765,292766],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[292837,292847],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[292908,292909]},{"pos":[292994,293013],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[293082,293084],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[293112,293113],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[293680,293749],"content":"Lambda(Expression, String, Boolean, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda(Expression, String, Boolean, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,69],"source":"Lambda(Expression, String, Boolean, IEnumerable<ParameterExpression>)"}]},{"pos":[294477,294483],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[294550,294551],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[294622,294632],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[294693,294694]},{"pos":[294749,294755],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[294816,294817]},{"pos":[294873,294880],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[294942,294943]},{"pos":[295025,295036],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[295121,295122],"content":"<","needQuote":true,"nodes":[]},{"pos":[295202,295221],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[295322,295323],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[295561,295567],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[295634,295635],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[295706,295716],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[295777,295778]},{"pos":[295833,295839],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[295900,295901]},{"pos":[295957,295964],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[296026,296027]},{"pos":[296109,296120],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[296206,296209]},{"pos":[296296,296315],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[296384,296385],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[296412,296413],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[297091,297151],"content":"Lambda(Expression, String, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda(Expression, String, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,60],"source":"Lambda(Expression, String, IEnumerable<ParameterExpression>)"}]},{"pos":[297823,297829],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[297896,297897],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[297968,297978],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[298039,298040]},{"pos":[298095,298101],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[298162,298163]},{"pos":[298245,298256],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[298341,298342],"content":"<","needQuote":true,"nodes":[]},{"pos":[298422,298441],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[298542,298543],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[298766,298772],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[298839,298840],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[298911,298921],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[298982,298983]},{"pos":[299038,299044],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[299105,299106]},{"pos":[299188,299199],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[299285,299288]},{"pos":[299375,299394],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[299463,299464],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[299491,299492],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[300150,300217],"content":"Lambda(Type, Expression, Boolean, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda(Type, Expression, Boolean, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,67],"source":"Lambda(Type, Expression, Boolean, IEnumerable<ParameterExpression>)"}]},{"pos":[300937,300943],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[301010,301011],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[301059,301063],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[301122,301123]},{"pos":[301199,301209],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[301270,301271]},{"pos":[301327,301334],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[301396,301397]},{"pos":[301479,301490],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[301575,301576],"content":"<","needQuote":true,"nodes":[]},{"pos":[301656,301675],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[301776,301777],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[302013,302019],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[302086,302087],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[302135,302139],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[302198,302199]},{"pos":[302275,302285],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[302346,302347]},{"pos":[302403,302410],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[302472,302473]},{"pos":[302555,302566],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[302652,302655]},{"pos":[302742,302761],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[302830,302831],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[302858,302859],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[303506,303562],"content":"Lambda(Type, Expression, Boolean, ParameterExpression[])","needQuote":true,"nodes":[{"content":"Lambda(Type, Expression, Boolean, ParameterExpression[])","pos":[0,56]}]},{"pos":[304151,304157],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[304224,304225],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[304273,304277],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[304336,304337]},{"pos":[304413,304423],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[304484,304485]},{"pos":[304541,304548],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[304610,304611]},{"pos":[304696,304715],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":"[]","pos":[304785,304787]},{"pos":[304818,304819],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[305017,305023],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[305090,305091],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[305139,305143],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[305202,305203]},{"pos":[305279,305289],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[305350,305351]},{"pos":[305407,305414],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[305476,305477]},{"pos":[305562,305581],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[305650,305652],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[305680,305681],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[306288,306346],"content":"Lambda(Type, Expression, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda(Type, Expression, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,58],"source":"Lambda(Type, Expression, IEnumerable<ParameterExpression>)"}]},{"pos":[307010,307016],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[307083,307084],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[307132,307136],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[307195,307196]},{"pos":[307272,307282],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[307343,307344]},{"pos":[307426,307437],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[307522,307523],"content":"<","needQuote":true,"nodes":[]},{"pos":[307603,307622],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[307723,307724],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[307945,307951],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[308018,308019],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[308067,308071],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[308130,308131]},{"pos":[308207,308217],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[308278,308279]},{"pos":[308361,308372],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[308458,308461]},{"pos":[308548,308567],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[308636,308637],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[308664,308665],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[309264,309311],"content":"Lambda(Type, Expression, ParameterExpression[])","needQuote":true,"nodes":[{"content":"Lambda(Type, Expression, ParameterExpression[])","pos":[0,47]}]},{"pos":[309844,309850],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[309917,309918],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[309966,309970],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[310029,310030]},{"pos":[310106,310116],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[310177,310178]},{"pos":[310263,310282],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":"[]","pos":[310352,310354]},{"pos":[310385,310386],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[310569,310575],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[310642,310643],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[310691,310695],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[310754,310755]},{"pos":[310831,310841],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[310902,310903]},{"pos":[310988,311007],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[311076,311078],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[311106,311107],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[311710,311785],"content":"Lambda(Type, Expression, String, Boolean, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda(Type, Expression, String, Boolean, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,75],"source":"Lambda(Type, Expression, String, Boolean, IEnumerable<ParameterExpression>)"}]},{"pos":[312557,312563],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[312630,312631],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[312679,312683],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[312742,312743]},{"pos":[312819,312829],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[312890,312891]},{"pos":[312946,312952],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[313013,313014]},{"pos":[313070,313077],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[313139,313140]},{"pos":[313222,313233],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[313318,313319],"content":"<","needQuote":true,"nodes":[]},{"pos":[313399,313418],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[313519,313520],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[313770,313776],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[313843,313844],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[313892,313896],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[313955,313956]},{"pos":[314032,314042],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[314103,314104]},{"pos":[314159,314165],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[314226,314227]},{"pos":[314283,314290],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[314352,314353]},{"pos":[314435,314446],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[314532,314535]},{"pos":[314622,314641],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[314710,314711],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[314738,314739],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[315453,315519],"content":"Lambda(Type, Expression, String, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda(Type, Expression, String, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,66],"source":"Lambda(Type, Expression, String, IEnumerable<ParameterExpression>)"}]},{"pos":[316235,316241],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[316308,316309],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[316357,316361],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[316420,316421]},{"pos":[316497,316507],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[316568,316569]},{"pos":[316624,316630],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[316691,316692]},{"pos":[316774,316785],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[316870,316871],"content":"<","needQuote":true,"nodes":[]},{"pos":[316951,316970],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[317071,317072],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[317307,317313],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[317380,317381],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[317429,317433],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[317492,317493]},{"pos":[317569,317579],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[317640,317641]},{"pos":[317696,317702],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[317763,317764]},{"pos":[317846,317857],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[317943,317946]},{"pos":[318033,318052],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[318121,318122],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[318149,318150],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[318823,318895],"content":"Lambda<TDelegate>(Expression, Boolean, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;(Expression, Boolean, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,72],"source":"Lambda<TDelegate>(Expression, Boolean, IEnumerable<ParameterExpression>)"}]},{"pos":[319613,319630],"content":"Lambda<TDelegate>","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;","pos":[0,17],"source":"Lambda<TDelegate>"}]},{"pos":[319708,319709],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[319780,319790],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[319851,319852]},{"pos":[319908,319915],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[319977,319978]},{"pos":[320060,320071],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[320156,320157],"content":"<","needQuote":true,"nodes":[]},{"pos":[320237,320256],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[320357,320358],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[320585,320605],"content":"Lambda(Of TDelegate)","needQuote":true,"nodes":[{"content":"Lambda(Of TDelegate)","pos":[0,20]}]},{"pos":[320686,320687],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[320758,320768],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[320829,320830]},{"pos":[320886,320893],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[320955,320956]},{"pos":[321038,321049],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[321135,321138]},{"pos":[321225,321244],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[321313,321314],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[321341,321342],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[321984,322045],"content":"Lambda<TDelegate>(Expression, Boolean, ParameterExpression[])","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;(Expression, Boolean, ParameterExpression[])","pos":[0,61],"source":"Lambda<TDelegate>(Expression, Boolean, ParameterExpression[])"}]},{"pos":[322632,322649],"content":"Lambda<TDelegate>","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;","pos":[0,17],"source":"Lambda<TDelegate>"}]},{"pos":[322727,322728],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[322799,322809],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[322870,322871]},{"pos":[322927,322934],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[322996,322997]},{"pos":[323082,323101],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":"[]","pos":[323171,323173]},{"pos":[323204,323205],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[323394,323414],"content":"Lambda(Of TDelegate)","needQuote":true,"nodes":[{"content":"Lambda(Of TDelegate)","pos":[0,20]}]},{"pos":[323495,323496],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[323567,323577],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[323638,323639]},{"pos":[323695,323702],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[323764,323765]},{"pos":[323850,323869],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[323938,323940],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[323968,323969],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[324571,324634],"content":"Lambda<TDelegate>(Expression, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;(Expression, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,63],"source":"Lambda<TDelegate>(Expression, IEnumerable<ParameterExpression>)"}]},{"pos":[325296,325313],"content":"Lambda<TDelegate>","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;","pos":[0,17],"source":"Lambda<TDelegate>"}]},{"pos":[325391,325392],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[325463,325473],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[325534,325535]},{"pos":[325617,325628],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[325713,325714],"content":"<","needQuote":true,"nodes":[]},{"pos":[325794,325813],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[325914,325915],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[326127,326147],"content":"Lambda(Of TDelegate)","needQuote":true,"nodes":[{"content":"Lambda(Of TDelegate)","pos":[0,20]}]},{"pos":[326228,326229],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[326300,326310],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[326371,326372]},{"pos":[326454,326465],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[326551,326554]},{"pos":[326641,326660],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[326729,326730],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[326757,326758],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[327353,327405],"content":"Lambda<TDelegate>(Expression, ParameterExpression[])","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;(Expression, ParameterExpression[])","pos":[0,52],"source":"Lambda<TDelegate>(Expression, ParameterExpression[])"}]},{"pos":[327936,327953],"content":"Lambda<TDelegate>","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;","pos":[0,17],"source":"Lambda<TDelegate>"}]},{"pos":[328031,328032],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[328103,328113],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[328174,328175]},{"pos":[328260,328279],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":"[]","pos":[328349,328351]},{"pos":[328382,328383],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[328557,328577],"content":"Lambda(Of TDelegate)","needQuote":true,"nodes":[{"content":"Lambda(Of TDelegate)","pos":[0,20]}]},{"pos":[328658,328659],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[328730,328740],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[328801,328802]},{"pos":[328887,328906],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[328975,328977],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[329005,329006],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[329604,329684],"content":"Lambda<TDelegate>(Expression, String, Boolean, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;(Expression, String, Boolean, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,80],"source":"Lambda<TDelegate>(Expression, String, Boolean, IEnumerable<ParameterExpression>)"}]},{"pos":[330454,330471],"content":"Lambda<TDelegate>","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;","pos":[0,17],"source":"Lambda<TDelegate>"}]},{"pos":[330549,330550],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[330621,330631],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[330692,330693]},{"pos":[330748,330754],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[330815,330816]},{"pos":[330872,330879],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[330941,330942]},{"pos":[331024,331035],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[331120,331121],"content":"<","needQuote":true,"nodes":[]},{"pos":[331201,331220],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[331321,331322],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[331563,331583],"content":"Lambda(Of TDelegate)","needQuote":true,"nodes":[{"content":"Lambda(Of TDelegate)","pos":[0,20]}]},{"pos":[331664,331665],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[331736,331746],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[331807,331808]},{"pos":[331863,331869],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[331930,331931]},{"pos":[331987,331994],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[332056,332057]},{"pos":[332139,332150],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[332236,332239]},{"pos":[332326,332345],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[332414,332415],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[332442,332443],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[333152,333223],"content":"Lambda<TDelegate>(Expression, String, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;(Expression, String, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,71],"source":"Lambda<TDelegate>(Expression, String, IEnumerable<ParameterExpression>)"}]},{"pos":[333937,333954],"content":"Lambda<TDelegate>","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;","pos":[0,17],"source":"Lambda<TDelegate>"}]},{"pos":[334032,334033],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[334104,334114],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[334175,334176]},{"pos":[334231,334237],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[334298,334299]},{"pos":[334381,334392],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[334477,334478],"content":"<","needQuote":true,"nodes":[]},{"pos":[334558,334577],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[334678,334679],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[334905,334925],"content":"Lambda(Of TDelegate)","needQuote":true,"nodes":[{"content":"Lambda(Of TDelegate)","pos":[0,20]}]},{"pos":[335006,335007],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[335078,335088],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[335149,335150]},{"pos":[335205,335211],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[335272,335273]},{"pos":[335355,335366],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[335452,335455]},{"pos":[335542,335561],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[335630,335631],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[335658,335659],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[336273,336306],"content":"LeftShift(Expression, Expression)","needQuote":true,"nodes":[{"content":"LeftShift(Expression, Expression)","pos":[0,33]}]},{"pos":[336586,336595],"content":"LeftShift","needQuote":true,"nodes":[{"content":"LeftShift","pos":[0,9]}]},{"pos":[336665,336666],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[336737,336747],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[336808,336809]},{"pos":[336885,336895],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[336955,336956],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[337119,337128],"content":"LeftShift","needQuote":true,"nodes":[{"content":"LeftShift","pos":[0,9]}]},{"pos":[337198,337199],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[337270,337280],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[337341,337342]},{"pos":[337418,337428],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[337488,337489],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[337922,337967],"content":"LeftShift(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"LeftShift(Expression, Expression, MethodInfo)","pos":[0,45]}]},{"pos":[338306,338315],"content":"LeftShift","needQuote":true,"nodes":[{"content":"LeftShift","pos":[0,9]}]},{"pos":[338385,338386],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[338457,338467],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[338528,338529]},{"pos":[338605,338615],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[338676,338677]},{"pos":[338747,338757],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[338832,338833],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[339025,339034],"content":"LeftShift","needQuote":true,"nodes":[{"content":"LeftShift","pos":[0,9]}]},{"pos":[339104,339105],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[339176,339186],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[339247,339248]},{"pos":[339324,339334],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[339395,339396]},{"pos":[339466,339476],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[339551,339552],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[340004,340043],"content":"LeftShiftAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"LeftShiftAssign(Expression, Expression)","pos":[0,39]}]},{"pos":[340335,340350],"content":"LeftShiftAssign","needQuote":true,"nodes":[{"content":"LeftShiftAssign","pos":[0,15]}]},{"pos":[340426,340427],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[340498,340508],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[340569,340570]},{"pos":[340646,340656],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[340716,340717],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[340886,340901],"content":"LeftShiftAssign","needQuote":true,"nodes":[{"content":"LeftShiftAssign","pos":[0,15]}]},{"pos":[340977,340978],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[341049,341059],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[341120,341121]},{"pos":[341197,341207],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[341267,341268],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[341719,341770],"content":"LeftShiftAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"LeftShiftAssign(Expression, Expression, MethodInfo)","pos":[0,51]}]},{"pos":[342121,342136],"content":"LeftShiftAssign","needQuote":true,"nodes":[{"content":"LeftShiftAssign","pos":[0,15]}]},{"pos":[342212,342213],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[342284,342294],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[342355,342356]},{"pos":[342432,342442],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[342503,342504]},{"pos":[342574,342584],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[342659,342660],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[342858,342873],"content":"LeftShiftAssign","needQuote":true,"nodes":[{"content":"LeftShiftAssign","pos":[0,15]}]},{"pos":[342949,342950],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[343021,343031],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[343092,343093]},{"pos":[343169,343179],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[343240,343241]},{"pos":[343311,343321],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[343396,343397],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[343930,343999],"content":"LeftShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"LeftShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,69]}]},{"pos":[344433,344448],"content":"LeftShiftAssign","needQuote":true,"nodes":[{"content":"LeftShiftAssign","pos":[0,15]}]},{"pos":[344524,344525],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[344596,344606],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[344667,344668]},{"pos":[344744,344754],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[344815,344816]},{"pos":[344886,344896],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[344972,344973]},{"pos":[345055,345071],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[345137,345138],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[345377,345392],"content":"LeftShiftAssign","needQuote":true,"nodes":[{"content":"LeftShiftAssign","pos":[0,15]}]},{"pos":[345468,345469],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[345540,345550],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[345611,345612]},{"pos":[345688,345698],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[345759,345760]},{"pos":[345830,345840],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[345916,345917]},{"pos":[345999,346015],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[346081,346082],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[346598,346630],"content":"LessThan(Expression, Expression)","needQuote":true,"nodes":[{"content":"LessThan(Expression, Expression)","pos":[0,32]}]},{"pos":[346908,346916],"content":"LessThan","needQuote":true,"nodes":[{"content":"LessThan","pos":[0,8]}]},{"pos":[346985,346986],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[347057,347067],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[347128,347129]},{"pos":[347205,347215],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[347275,347276],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[347438,347446],"content":"LessThan","needQuote":true,"nodes":[{"content":"LessThan","pos":[0,8]}]},{"pos":[347515,347516],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[347587,347597],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[347658,347659]},{"pos":[347735,347745],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[347805,347806],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[348251,348304],"content":"LessThan(Expression, Expression, Boolean, MethodInfo)","needQuote":true,"nodes":[{"content":"LessThan(Expression, Expression, Boolean, MethodInfo)","pos":[0,53]}]},{"pos":[348672,348680],"content":"LessThan","needQuote":true,"nodes":[{"content":"LessThan","pos":[0,8]}]},{"pos":[348749,348750],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[348821,348831],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[348892,348893]},{"pos":[348969,348979],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[349040,349041]},{"pos":[349097,349104],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[349166,349167]},{"pos":[349237,349247],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[349322,349323],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[349529,349537],"content":"LessThan","needQuote":true,"nodes":[{"content":"LessThan","pos":[0,8]}]},{"pos":[349606,349607],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[349678,349688],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[349749,349750]},{"pos":[349826,349836],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[349897,349898]},{"pos":[349954,349961],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[350023,350024]},{"pos":[350094,350104],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[350179,350180],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[350654,350693],"content":"LessThanOrEqual(Expression, Expression)","needQuote":true,"nodes":[{"content":"LessThanOrEqual(Expression, Expression)","pos":[0,39]}]},{"pos":[350985,351000],"content":"LessThanOrEqual","needQuote":true,"nodes":[{"content":"LessThanOrEqual","pos":[0,15]}]},{"pos":[351076,351077],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[351148,351158],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[351219,351220]},{"pos":[351296,351306],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[351366,351367],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[351536,351551],"content":"LessThanOrEqual","needQuote":true,"nodes":[{"content":"LessThanOrEqual","pos":[0,15]}]},{"pos":[351627,351628],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[351699,351709],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[351770,351771]},{"pos":[351847,351857],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[351917,351918],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[352384,352444],"content":"LessThanOrEqual(Expression, Expression, Boolean, MethodInfo)","needQuote":true,"nodes":[{"content":"LessThanOrEqual(Expression, Expression, Boolean, MethodInfo)","pos":[0,60]}]},{"pos":[352826,352841],"content":"LessThanOrEqual","needQuote":true,"nodes":[{"content":"LessThanOrEqual","pos":[0,15]}]},{"pos":[352917,352918],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[352989,352999],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[353060,353061]},{"pos":[353137,353147],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[353208,353209]},{"pos":[353265,353272],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[353334,353335]},{"pos":[353405,353415],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[353490,353491],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[353704,353719],"content":"LessThanOrEqual","needQuote":true,"nodes":[{"content":"LessThanOrEqual","pos":[0,15]}]},{"pos":[353795,353796],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[353867,353877],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[353938,353939]},{"pos":[354015,354025],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[354086,354087]},{"pos":[354143,354150],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[354212,354213]},{"pos":[354283,354293],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[354368,354369],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[354884,354930],"content":"ListBind(MemberInfo, IEnumerable<ElementInit>)","needQuote":true,"nodes":[{"content":"ListBind(MemberInfo, IEnumerable&lt;ElementInit&gt;)","pos":[0,46],"source":"ListBind(MemberInfo, IEnumerable<ElementInit>)"}]},{"pos":[355508,355516],"content":"ListBind","needQuote":true,"nodes":[{"content":"ListBind","pos":[0,8]}]},{"pos":[355585,355586],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[355651,355661],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[355737,355738]},{"pos":[355820,355831],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[355916,355917],"content":"<","needQuote":true,"nodes":[]},{"pos":[355989,356000],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[356093,356094],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[356291,356299],"content":"ListBind","needQuote":true,"nodes":[{"content":"ListBind","pos":[0,8]}]},{"pos":[356368,356369],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[356434,356444],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[356520,356521]},{"pos":[356603,356614],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[356700,356703]},{"pos":[356782,356793],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[356854,356855],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[356882,356883],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[357410,357445],"content":"ListBind(MemberInfo, ElementInit[])","needQuote":true,"nodes":[{"content":"ListBind(MemberInfo, ElementInit[])","pos":[0,35]}]},{"pos":[357892,357900],"content":"ListBind","needQuote":true,"nodes":[{"content":"ListBind","pos":[0,8]}]},{"pos":[357969,357970],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[358035,358045],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[358121,358122]},{"pos":[358199,358210],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"content":"[]","pos":[358272,358274]},{"pos":[358305,358306],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[358465,358473],"content":"ListBind","needQuote":true,"nodes":[{"content":"ListBind","pos":[0,8]}]},{"pos":[358542,358543],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[358608,358618],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[358694,358695]},{"pos":[358772,358783],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[358844,358846],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[358874,358875],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[359377,359423],"content":"ListBind(MethodInfo, IEnumerable<ElementInit>)","needQuote":true,"nodes":[{"content":"ListBind(MethodInfo, IEnumerable&lt;ElementInit&gt;)","pos":[0,46],"source":"ListBind(MethodInfo, IEnumerable<ElementInit>)"}]},{"pos":[360001,360009],"content":"ListBind","needQuote":true,"nodes":[{"content":"ListBind","pos":[0,8]}]},{"pos":[360078,360079],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[360144,360154],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[360230,360231]},{"pos":[360313,360324],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[360409,360410],"content":"<","needQuote":true,"nodes":[]},{"pos":[360482,360493],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[360586,360587],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[360784,360792],"content":"ListBind","needQuote":true,"nodes":[{"content":"ListBind","pos":[0,8]}]},{"pos":[360861,360862],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[360927,360937],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[361013,361014]},{"pos":[361096,361107],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[361193,361196]},{"pos":[361275,361286],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[361347,361348],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[361375,361376],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[361903,361938],"content":"ListBind(MethodInfo, ElementInit[])","needQuote":true,"nodes":[{"content":"ListBind(MethodInfo, ElementInit[])","pos":[0,35]}]},{"pos":[362385,362393],"content":"ListBind","needQuote":true,"nodes":[{"content":"ListBind","pos":[0,8]}]},{"pos":[362462,362463],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[362528,362538],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[362614,362615]},{"pos":[362692,362703],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"content":"[]","pos":[362765,362767]},{"pos":[362798,362799],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[362958,362966],"content":"ListBind","needQuote":true,"nodes":[{"content":"ListBind","pos":[0,8]}]},{"pos":[363035,363036],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[363101,363111],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[363187,363188]},{"pos":[363265,363276],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[363337,363339],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[363367,363368],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[363879,363928],"content":"ListInit(NewExpression, IEnumerable<ElementInit>)","needQuote":true,"nodes":[{"content":"ListInit(NewExpression, IEnumerable&lt;ElementInit&gt;)","pos":[0,49],"source":"ListInit(NewExpression, IEnumerable<ElementInit>)"}]},{"pos":[364536,364544],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[364613,364614],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[364688,364701],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[364765,364766]},{"pos":[364848,364859],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[364944,364945],"content":"<","needQuote":true,"nodes":[]},{"pos":[365017,365028],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[365121,365122],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[365328,365336],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[365405,365406],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[365480,365493],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[365557,365558]},{"pos":[365640,365651],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[365737,365740]},{"pos":[365819,365830],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[365891,365892],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[365919,365920],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[366508,366556],"content":"ListInit(NewExpression, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"ListInit(NewExpression, IEnumerable&lt;Expression&gt;)","pos":[0,48],"source":"ListInit(NewExpression, IEnumerable<Expression>)"}]},{"pos":[367160,367168],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[367237,367238],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[367312,367325],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[367389,367390]},{"pos":[367472,367483],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[367568,367569],"content":"<","needQuote":true,"nodes":[]},{"pos":[367640,367650],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[367742,367743],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[367948,367956],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[368025,368026],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[368100,368113],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[368177,368178]},{"pos":[368260,368271],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[368357,368360]},{"pos":[368438,368448],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[368508,368509],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[368536,368537],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[369086,369124],"content":"ListInit(NewExpression, ElementInit[])","needQuote":true,"nodes":[{"content":"ListInit(NewExpression, ElementInit[])","pos":[0,38]}]},{"pos":[369601,369609],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[369678,369679],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[369753,369766],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[369830,369831]},{"pos":[369908,369919],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"content":"[]","pos":[369981,369983]},{"pos":[370014,370015],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[370183,370191],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[370260,370261],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[370335,370348],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[370412,370413]},{"pos":[370490,370501],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[370562,370564],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[370592,370593],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[371081,371118],"content":"ListInit(NewExpression, Expression[])","needQuote":true,"nodes":[{"content":"ListInit(NewExpression, Expression[])","pos":[0,37]}]},{"pos":[371591,371599],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[371668,371669],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[371743,371756],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[371820,371821]},{"pos":[371897,371907],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[371968,371970]},{"pos":[372001,372002],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[372169,372177],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[372246,372247],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[372321,372334],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[372398,372399]},{"pos":[372475,372485],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[372545,372547],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[372575,372576],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[373127,373187],"content":"ListInit(NewExpression, MethodInfo, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"ListInit(NewExpression, MethodInfo, IEnumerable&lt;Expression&gt;)","pos":[0,60],"source":"ListInit(NewExpression, MethodInfo, IEnumerable<Expression>)"}]},{"pos":[373892,373900],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[373969,373970],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[374044,374057],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[374121,374122]},{"pos":[374192,374202],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[374278,374279]},{"pos":[374361,374372],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[374457,374458],"content":"<","needQuote":true,"nodes":[]},{"pos":[374529,374539],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[374631,374632],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[374866,374874],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[374943,374944],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[375018,375031],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[375095,375096]},{"pos":[375166,375176],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[375252,375253]},{"pos":[375335,375346],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[375432,375435]},{"pos":[375513,375523],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[375583,375584],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[375611,375612],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[376241,376290],"content":"ListInit(NewExpression, MethodInfo, Expression[])","needQuote":true,"nodes":[{"content":"ListInit(NewExpression, MethodInfo, Expression[])","pos":[0,49]}]},{"pos":[376864,376872],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[376941,376942],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[377016,377029],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[377093,377094]},{"pos":[377164,377174],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[377250,377251]},{"pos":[377327,377337],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[377398,377400]},{"pos":[377431,377432],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[377628,377636],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[377705,377706],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[377780,377793],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[377857,377858]},{"pos":[377928,377938],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[378014,378015]},{"pos":[378091,378101],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[378161,378163],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[378191,378192],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[378686,378702],"content":"Loop(Expression)","needQuote":true,"nodes":[{"content":"Loop(Expression)","pos":[0,16]}]},{"pos":[378901,378905],"content":"Loop","needQuote":true,"nodes":[{"content":"Loop","pos":[0,4]}]},{"pos":[378970,378971],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[379042,379052],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[379112,379113],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[379236,379240],"content":"Loop","needQuote":true,"nodes":[{"content":"Loop","pos":[0,4]}]},{"pos":[379305,379306],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[379377,379387],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[379447,379448],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[379792,379821],"content":"Loop(Expression, LabelTarget)","needQuote":true,"nodes":[{"content":"Loop(Expression, LabelTarget)","pos":[0,29]}]},{"pos":[380093,380097],"content":"Loop","needQuote":true,"nodes":[{"content":"Loop","pos":[0,4]}]},{"pos":[380162,380163],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[380234,380244],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[380305,380306]},{"pos":[380383,380394],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[380455,380456],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[380615,380619],"content":"Loop","needQuote":true,"nodes":[{"content":"Loop","pos":[0,4]}]},{"pos":[380684,380685],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[380756,380766],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[380827,380828]},{"pos":[380905,380916],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[380977,380978],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[381407,381449],"content":"Loop(Expression, LabelTarget, LabelTarget)","needQuote":true,"nodes":[{"content":"Loop(Expression, LabelTarget, LabelTarget)","pos":[0,42]}]},{"pos":[381794,381798],"content":"Loop","needQuote":true,"nodes":[{"content":"Loop","pos":[0,4]}]},{"pos":[381863,381864],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[381935,381945],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[382006,382007]},{"pos":[382084,382095],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[382157,382158]},{"pos":[382235,382246],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[382307,382308],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[382503,382507],"content":"Loop","needQuote":true,"nodes":[{"content":"Loop","pos":[0,4]}]},{"pos":[382572,382573],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[382644,382654],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[382715,382716]},{"pos":[382793,382804],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[382866,382867]},{"pos":[382944,382955],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[383016,383017],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[383503,383553],"content":"MakeBinary(ExpressionType, Expression, Expression)","needQuote":true,"nodes":[{"content":"MakeBinary(ExpressionType, Expression, Expression)","pos":[0,50]}]},{"pos":[383914,383924],"content":"MakeBinary","needQuote":true,"nodes":[{"content":"MakeBinary","pos":[0,10]}]},{"pos":[383995,383996],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[384071,384085],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[384150,384151]},{"pos":[384227,384237],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[384298,384299]},{"pos":[384375,384385],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[384445,384446],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[384649,384659],"content":"MakeBinary","needQuote":true,"nodes":[{"content":"MakeBinary","pos":[0,10]}]},{"pos":[384730,384731],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[384806,384820],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[384885,384886]},{"pos":[384962,384972],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[385033,385034]},{"pos":[385110,385120],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[385180,385181],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[385726,385797],"content":"MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo)","needQuote":true,"nodes":[{"content":"MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo)","pos":[0,71]}]},{"pos":[386248,386258],"content":"MakeBinary","needQuote":true,"nodes":[{"content":"MakeBinary","pos":[0,10]}]},{"pos":[386329,386330],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[386405,386419],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[386484,386485]},{"pos":[386561,386571],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[386632,386633]},{"pos":[386709,386719],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[386780,386781]},{"pos":[386837,386844],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[386906,386907]},{"pos":[386977,386987],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[387062,387063],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[387310,387320],"content":"MakeBinary","needQuote":true,"nodes":[{"content":"MakeBinary","pos":[0,10]}]},{"pos":[387391,387392],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[387467,387481],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[387546,387547]},{"pos":[387623,387633],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[387694,387695]},{"pos":[387771,387781],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[387842,387843]},{"pos":[387899,387906],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[387968,387969]},{"pos":[388039,388049],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[388124,388125],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[388776,388865],"content":"MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo, LambdaExpression)","pos":[0,89]}]},{"pos":[389399,389409],"content":"MakeBinary","needQuote":true,"nodes":[{"content":"MakeBinary","pos":[0,10]}]},{"pos":[389480,389481],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[389556,389570],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[389635,389636]},{"pos":[389712,389722],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[389783,389784]},{"pos":[389860,389870],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[389931,389932]},{"pos":[389988,389995],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[390057,390058]},{"pos":[390128,390138],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[390214,390215]},{"pos":[390297,390313],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[390379,390380],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[390668,390678],"content":"MakeBinary","needQuote":true,"nodes":[{"content":"MakeBinary","pos":[0,10]}]},{"pos":[390749,390750],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[390825,390839],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[390904,390905]},{"pos":[390981,390991],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[391052,391053]},{"pos":[391129,391139],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[391200,391201]},{"pos":[391257,391264],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[391326,391327]},{"pos":[391397,391407],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[391483,391484]},{"pos":[391566,391582],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[391648,391649],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[392295,392360],"content":"MakeCatchBlock(Type, ParameterExpression, Expression, Expression)","needQuote":true,"nodes":[{"content":"MakeCatchBlock(Type, ParameterExpression, Expression, Expression)","pos":[0,65]}]},{"pos":[392764,392778],"content":"MakeCatchBlock","needQuote":true,"nodes":[{"content":"MakeCatchBlock","pos":[0,14]}]},{"pos":[392853,392854],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[392902,392906],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[392965,392966]},{"pos":[393051,393070],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[393140,393141]},{"pos":[393217,393227],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[393288,393289]},{"pos":[393365,393375],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[393435,393436],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[393660,393674],"content":"MakeCatchBlock","needQuote":true,"nodes":[{"content":"MakeCatchBlock","pos":[0,14]}]},{"pos":[393749,393750],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[393798,393802],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[393861,393862]},{"pos":[393947,393966],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[394036,394037]},{"pos":[394113,394123],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[394184,394185]},{"pos":[394261,394271],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[394331,394332],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[394884,394943],"content":"MakeGoto(GotoExpressionKind, LabelTarget, Expression, Type)","needQuote":true,"nodes":[{"content":"MakeGoto(GotoExpressionKind, LabelTarget, Expression, Type)","pos":[0,59]}]},{"pos":[395335,395343],"content":"MakeGoto","needQuote":true,"nodes":[{"content":"MakeGoto","pos":[0,8]}]},{"pos":[395412,395413],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[395492,395510],"content":"GotoExpressionKind","needQuote":true,"nodes":[{"content":"GotoExpressionKind","pos":[0,18]}]},{"content":",","pos":[395579,395580]},{"pos":[395657,395668],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[395730,395731]},{"pos":[395807,395817],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[395878,395879]},{"pos":[395932,395936],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[395994,395995],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[396213,396221],"content":"MakeGoto","needQuote":true,"nodes":[{"content":"MakeGoto","pos":[0,8]}]},{"pos":[396290,396291],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[396370,396388],"content":"GotoExpressionKind","needQuote":true,"nodes":[{"content":"GotoExpressionKind","pos":[0,18]}]},{"content":",","pos":[396457,396458]},{"pos":[396535,396546],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[396608,396609]},{"pos":[396685,396695],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[396756,396757]},{"pos":[396810,396814],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[396872,396873],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[397429,397489],"content":"MakeIndex(Expression, PropertyInfo, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"MakeIndex(Expression, PropertyInfo, IEnumerable&lt;Expression&gt;)","pos":[0,60],"source":"MakeIndex(Expression, PropertyInfo, IEnumerable<Expression>)"}]},{"pos":[398194,398203],"content":"MakeIndex","needQuote":true,"nodes":[{"content":"MakeIndex","pos":[0,9]}]},{"pos":[398273,398274],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[398345,398355],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[398416,398417]},{"pos":[398489,398501],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"content":",","pos":[398579,398580]},{"pos":[398662,398673],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[398758,398759],"content":"<","needQuote":true,"nodes":[]},{"pos":[398830,398840],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[398932,398933],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[399167,399176],"content":"MakeIndex","needQuote":true,"nodes":[{"content":"MakeIndex","pos":[0,9]}]},{"pos":[399246,399247],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[399318,399328],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[399389,399390]},{"pos":[399462,399474],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"content":",","pos":[399552,399553]},{"pos":[399635,399646],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[399732,399735]},{"pos":[399813,399823],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[399883,399884],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[399911,399912],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[400509,400549],"content":"MakeMemberAccess(Expression, MemberInfo)","needQuote":true,"nodes":[{"content":"MakeMemberAccess(Expression, MemberInfo)","pos":[0,40]}]},{"pos":[400831,400847],"content":"MakeMemberAccess","needQuote":true,"nodes":[{"content":"MakeMemberAccess","pos":[0,16]}]},{"pos":[400924,400925],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[400996,401006],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[401067,401068]},{"pos":[401138,401148],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[401223,401224],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[401388,401404],"content":"MakeMemberAccess","needQuote":true,"nodes":[{"content":"MakeMemberAccess","pos":[0,16]}]},{"pos":[401481,401482],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[401553,401563],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[401624,401625]},{"pos":[401695,401705],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[401780,401781],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[402313,402387],"content":"MakeTry(Type, Expression, Expression, Expression, IEnumerable<CatchBlock>)","needQuote":true,"nodes":[{"content":"MakeTry(Type, Expression, Expression, Expression, IEnumerable&lt;CatchBlock&gt;)","pos":[0,74],"source":"MakeTry(Type, Expression, Expression, Expression, IEnumerable<CatchBlock>)"}]},{"pos":[403257,403264],"content":"MakeTry","needQuote":true,"nodes":[{"content":"MakeTry","pos":[0,7]}]},{"pos":[403332,403333],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[403381,403385],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[403444,403445]},{"pos":[403521,403531],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[403592,403593]},{"pos":[403669,403679],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[403740,403741]},{"pos":[403817,403827],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[403888,403889]},{"pos":[403971,403982],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[404067,404068],"content":"<","needQuote":true,"nodes":[]},{"pos":[404139,404149],"content":"CatchBlock","needQuote":true,"nodes":[{"content":"CatchBlock","pos":[0,10]}]},{"pos":[404241,404242],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[404525,404532],"content":"MakeTry","needQuote":true,"nodes":[{"content":"MakeTry","pos":[0,7]}]},{"pos":[404600,404601],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[404649,404653],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[404712,404713]},{"pos":[404789,404799],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[404860,404861]},{"pos":[404937,404947],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[405008,405009]},{"pos":[405085,405095],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[405156,405157]},{"pos":[405239,405250],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[405336,405339]},{"pos":[405417,405427],"content":"CatchBlock","needQuote":true,"nodes":[{"content":"CatchBlock","pos":[0,10]}]},{"pos":[405487,405488],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[405515,405516],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[406205,406248],"content":"MakeUnary(ExpressionType, Expression, Type)","needQuote":true,"nodes":[{"content":"MakeUnary(ExpressionType, Expression, Type)","pos":[0,43]}]},{"pos":[406561,406570],"content":"MakeUnary","needQuote":true,"nodes":[{"content":"MakeUnary","pos":[0,9]}]},{"pos":[406640,406641],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[406716,406730],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[406795,406796]},{"pos":[406872,406882],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[406943,406944]},{"pos":[406997,407001],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[407059,407060],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[407239,407248],"content":"MakeUnary","needQuote":true,"nodes":[{"content":"MakeUnary","pos":[0,9]}]},{"pos":[407318,407319],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[407394,407408],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[407473,407474]},{"pos":[407550,407560],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[407621,407622]},{"pos":[407675,407679],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[407737,407738],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[408213,408268],"content":"MakeUnary(ExpressionType, Expression, Type, MethodInfo)","needQuote":true,"nodes":[{"content":"MakeUnary(ExpressionType, Expression, Type, MethodInfo)","pos":[0,55]}]},{"pos":[408640,408649],"content":"MakeUnary","needQuote":true,"nodes":[{"content":"MakeUnary","pos":[0,9]}]},{"pos":[408719,408720],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[408795,408809],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[408874,408875]},{"pos":[408951,408961],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[409022,409023]},{"pos":[409076,409080],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[409139,409140]},{"pos":[409210,409220],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[409295,409296],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[409504,409513],"content":"MakeUnary","needQuote":true,"nodes":[{"content":"MakeUnary","pos":[0,9]}]},{"pos":[409583,409584],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[409659,409673],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[409738,409739]},{"pos":[409815,409825],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[409886,409887]},{"pos":[409940,409944],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[410003,410004]},{"pos":[410074,410084],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[410159,410160],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[410669,410719],"content":"MemberBind(MemberInfo, IEnumerable<MemberBinding>)","needQuote":true,"nodes":[{"content":"MemberBind(MemberInfo, IEnumerable&lt;MemberBinding&gt;)","pos":[0,50],"source":"MemberBind(MemberInfo, IEnumerable<MemberBinding>)"}]},{"pos":[411313,411323],"content":"MemberBind","needQuote":true,"nodes":[{"content":"MemberBind","pos":[0,10]}]},{"pos":[411394,411395],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[411460,411470],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[411546,411547]},{"pos":[411629,411640],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[411725,411726],"content":"<","needQuote":true,"nodes":[]},{"pos":[411800,411813],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[411908,411909],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[412110,412120],"content":"MemberBind","needQuote":true,"nodes":[{"content":"MemberBind","pos":[0,10]}]},{"pos":[412191,412192],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[412257,412267],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[412343,412344]},{"pos":[412426,412437],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[412523,412526]},{"pos":[412607,412620],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[412683,412684],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[412711,412712],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[413255,413294],"content":"MemberBind(MemberInfo, MemberBinding[])","needQuote":true,"nodes":[{"content":"MemberBind(MemberInfo, MemberBinding[])","pos":[0,39]}]},{"pos":[413757,413767],"content":"MemberBind","needQuote":true,"nodes":[{"content":"MemberBind","pos":[0,10]}]},{"pos":[413838,413839],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[413904,413914],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[413990,413991]},{"pos":[414070,414083],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"content":"[]","pos":[414147,414149]},{"pos":[414180,414181],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[414344,414354],"content":"MemberBind","needQuote":true,"nodes":[{"content":"MemberBind","pos":[0,10]}]},{"pos":[414425,414426],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[414491,414501],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[414577,414578]},{"pos":[414657,414670],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[414733,414735],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[414763,414764],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[415282,415332],"content":"MemberBind(MethodInfo, IEnumerable<MemberBinding>)","needQuote":true,"nodes":[{"content":"MemberBind(MethodInfo, IEnumerable&lt;MemberBinding&gt;)","pos":[0,50],"source":"MemberBind(MethodInfo, IEnumerable<MemberBinding>)"}]},{"pos":[415926,415936],"content":"MemberBind","needQuote":true,"nodes":[{"content":"MemberBind","pos":[0,10]}]},{"pos":[416007,416008],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[416073,416083],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[416159,416160]},{"pos":[416242,416253],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[416338,416339],"content":"<","needQuote":true,"nodes":[]},{"pos":[416413,416426],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[416521,416522],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[416723,416733],"content":"MemberBind","needQuote":true,"nodes":[{"content":"MemberBind","pos":[0,10]}]},{"pos":[416804,416805],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[416870,416880],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[416956,416957]},{"pos":[417039,417050],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[417136,417139]},{"pos":[417220,417233],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[417296,417297],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[417324,417325],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[417868,417907],"content":"MemberBind(MethodInfo, MemberBinding[])","needQuote":true,"nodes":[{"content":"MemberBind(MethodInfo, MemberBinding[])","pos":[0,39]}]},{"pos":[418370,418380],"content":"MemberBind","needQuote":true,"nodes":[{"content":"MemberBind","pos":[0,10]}]},{"pos":[418451,418452],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[418517,418527],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[418603,418604]},{"pos":[418683,418696],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"content":"[]","pos":[418760,418762]},{"pos":[418793,418794],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[418957,418967],"content":"MemberBind","needQuote":true,"nodes":[{"content":"MemberBind","pos":[0,10]}]},{"pos":[419038,419039],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[419104,419114],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[419190,419191]},{"pos":[419270,419283],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[419346,419348],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[419376,419377],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[419904,419957],"content":"MemberInit(NewExpression, IEnumerable<MemberBinding>)","needQuote":true,"nodes":[{"content":"MemberInit(NewExpression, IEnumerable&lt;MemberBinding&gt;)","pos":[0,53],"source":"MemberInit(NewExpression, IEnumerable<MemberBinding>)"}]},{"pos":[420581,420591],"content":"MemberInit","needQuote":true,"nodes":[{"content":"MemberInit","pos":[0,10]}]},{"pos":[420662,420663],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[420737,420750],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[420814,420815]},{"pos":[420897,420908],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[420993,420994],"content":"<","needQuote":true,"nodes":[]},{"pos":[421068,421081],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[421176,421177],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[421387,421397],"content":"MemberInit","needQuote":true,"nodes":[{"content":"MemberInit","pos":[0,10]}]},{"pos":[421468,421469],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[421543,421556],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[421620,421621]},{"pos":[421703,421714],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[421800,421803]},{"pos":[421884,421897],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[421960,421961],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[421988,421989],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[422557,422599],"content":"MemberInit(NewExpression, MemberBinding[])","needQuote":true,"nodes":[{"content":"MemberInit(NewExpression, MemberBinding[])","pos":[0,42]}]},{"pos":[423092,423102],"content":"MemberInit","needQuote":true,"nodes":[{"content":"MemberInit","pos":[0,10]}]},{"pos":[423173,423174],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[423248,423261],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[423325,423326]},{"pos":[423405,423418],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"content":"[]","pos":[423482,423484]},{"pos":[423515,423516],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[423688,423698],"content":"MemberInit","needQuote":true,"nodes":[{"content":"MemberInit","pos":[0,10]}]},{"pos":[423769,423770],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[423844,423857],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[423921,423922]},{"pos":[424001,424014],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[424077,424079],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[424107,424108],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[424601,424631],"content":"Modulo(Expression, Expression)","needQuote":true,"nodes":[{"content":"Modulo(Expression, Expression)","pos":[0,30]}]},{"pos":[424905,424911],"content":"Modulo","needQuote":true,"nodes":[{"content":"Modulo","pos":[0,6]}]},{"pos":[424978,424979],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[425050,425060],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[425121,425122]},{"pos":[425198,425208],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[425268,425269],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[425429,425435],"content":"Modulo","needQuote":true,"nodes":[{"content":"Modulo","pos":[0,6]}]},{"pos":[425502,425503],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[425574,425584],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[425645,425646]},{"pos":[425722,425732],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[425792,425793],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[426217,426259],"content":"Modulo(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Modulo(Expression, Expression, MethodInfo)","pos":[0,42]}]},{"pos":[426592,426598],"content":"Modulo","needQuote":true,"nodes":[{"content":"Modulo","pos":[0,6]}]},{"pos":[426665,426666],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[426737,426747],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[426808,426809]},{"pos":[426885,426895],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[426956,426957]},{"pos":[427027,427037],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[427112,427113],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[427302,427308],"content":"Modulo","needQuote":true,"nodes":[{"content":"Modulo","pos":[0,6]}]},{"pos":[427375,427376],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[427447,427457],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[427518,427519]},{"pos":[427595,427605],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[427666,427667]},{"pos":[427737,427747],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[427822,427823],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[428266,428302],"content":"ModuloAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"ModuloAssign(Expression, Expression)","pos":[0,36]}]},{"pos":[428588,428600],"content":"ModuloAssign","needQuote":true,"nodes":[{"content":"ModuloAssign","pos":[0,12]}]},{"pos":[428673,428674],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[428745,428755],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[428816,428817]},{"pos":[428893,428903],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[428963,428964],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[429130,429142],"content":"ModuloAssign","needQuote":true,"nodes":[{"content":"ModuloAssign","pos":[0,12]}]},{"pos":[429215,429216],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[429287,429297],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[429358,429359]},{"pos":[429435,429445],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[429505,429506],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[429948,429996],"content":"ModuloAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"ModuloAssign(Expression, Expression, MethodInfo)","pos":[0,48]}]},{"pos":[430341,430353],"content":"ModuloAssign","needQuote":true,"nodes":[{"content":"ModuloAssign","pos":[0,12]}]},{"pos":[430426,430427],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[430498,430508],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[430569,430570]},{"pos":[430646,430656],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[430717,430718]},{"pos":[430788,430798],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[430873,430874],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[431069,431081],"content":"ModuloAssign","needQuote":true,"nodes":[{"content":"ModuloAssign","pos":[0,12]}]},{"pos":[431154,431155],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[431226,431236],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[431297,431298]},{"pos":[431374,431384],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[431445,431446]},{"pos":[431516,431526],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[431601,431602],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[432126,432192],"content":"ModuloAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"ModuloAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,66]}]},{"pos":[432620,432632],"content":"ModuloAssign","needQuote":true,"nodes":[{"content":"ModuloAssign","pos":[0,12]}]},{"pos":[432705,432706],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[432777,432787],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[432848,432849]},{"pos":[432925,432935],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[432996,432997]},{"pos":[433067,433077],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[433153,433154]},{"pos":[433236,433252],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[433318,433319],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[433555,433567],"content":"ModuloAssign","needQuote":true,"nodes":[{"content":"ModuloAssign","pos":[0,12]}]},{"pos":[433640,433641],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[433712,433722],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[433783,433784]},{"pos":[433860,433870],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[433931,433932]},{"pos":[434002,434012],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[434088,434089]},{"pos":[434171,434187],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[434253,434254],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[434764,434796],"content":"Multiply(Expression, Expression)","needQuote":true,"nodes":[{"content":"Multiply(Expression, Expression)","pos":[0,32]}]},{"pos":[435074,435082],"content":"Multiply","needQuote":true,"nodes":[{"content":"Multiply","pos":[0,8]}]},{"pos":[435151,435152],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[435223,435233],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[435294,435295]},{"pos":[435371,435381],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[435441,435442],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[435604,435612],"content":"Multiply","needQuote":true,"nodes":[{"content":"Multiply","pos":[0,8]}]},{"pos":[435681,435682],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[435753,435763],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[435824,435825]},{"pos":[435901,435911],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[435971,435972],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[436402,436446],"content":"Multiply(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Multiply(Expression, Expression, MethodInfo)","pos":[0,44]}]},{"pos":[436783,436791],"content":"Multiply","needQuote":true,"nodes":[{"content":"Multiply","pos":[0,8]}]},{"pos":[436860,436861],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[436932,436942],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[437003,437004]},{"pos":[437080,437090],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[437151,437152]},{"pos":[437222,437232],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[437307,437308],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[437499,437507],"content":"Multiply","needQuote":true,"nodes":[{"content":"Multiply","pos":[0,8]}]},{"pos":[437576,437577],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[437648,437658],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[437719,437720]},{"pos":[437796,437806],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[437867,437868]},{"pos":[437938,437948],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[438023,438024],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[438473,438511],"content":"MultiplyAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"MultiplyAssign(Expression, Expression)","pos":[0,38]}]},{"pos":[438801,438815],"content":"MultiplyAssign","needQuote":true,"nodes":[{"content":"MultiplyAssign","pos":[0,14]}]},{"pos":[438890,438891],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[438962,438972],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[439033,439034]},{"pos":[439110,439120],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[439180,439181],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[439349,439363],"content":"MultiplyAssign","needQuote":true,"nodes":[{"content":"MultiplyAssign","pos":[0,14]}]},{"pos":[439438,439439],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[439510,439520],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[439581,439582]},{"pos":[439658,439668],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[439728,439729],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[440177,440227],"content":"MultiplyAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"MultiplyAssign(Expression, Expression, MethodInfo)","pos":[0,50]}]},{"pos":[440576,440590],"content":"MultiplyAssign","needQuote":true,"nodes":[{"content":"MultiplyAssign","pos":[0,14]}]},{"pos":[440665,440666],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[440737,440747],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[440808,440809]},{"pos":[440885,440895],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[440956,440957]},{"pos":[441027,441037],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[441112,441113],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[441310,441324],"content":"MultiplyAssign","needQuote":true,"nodes":[{"content":"MultiplyAssign","pos":[0,14]}]},{"pos":[441399,441400],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[441471,441481],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[441542,441543]},{"pos":[441619,441629],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[441690,441691]},{"pos":[441761,441771],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[441846,441847],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[442377,442445],"content":"MultiplyAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"MultiplyAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,68]}]},{"pos":[442877,442891],"content":"MultiplyAssign","needQuote":true,"nodes":[{"content":"MultiplyAssign","pos":[0,14]}]},{"pos":[442966,442967],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[443038,443048],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[443109,443110]},{"pos":[443186,443196],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[443257,443258]},{"pos":[443328,443338],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[443414,443415]},{"pos":[443497,443513],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[443579,443580],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[443818,443832],"content":"MultiplyAssign","needQuote":true,"nodes":[{"content":"MultiplyAssign","pos":[0,14]}]},{"pos":[443907,443908],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[443979,443989],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[444050,444051]},{"pos":[444127,444137],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[444198,444199]},{"pos":[444269,444279],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[444355,444356]},{"pos":[444438,444454],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[444520,444521],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[445048,445093],"content":"MultiplyAssignChecked(Expression, Expression)","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked(Expression, Expression)","pos":[0,45]}]},{"pos":[445397,445418],"content":"MultiplyAssignChecked","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked","pos":[0,21]}]},{"pos":[445500,445501],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[445572,445582],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[445643,445644]},{"pos":[445720,445730],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[445790,445791],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[445966,445987],"content":"MultiplyAssignChecked","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked","pos":[0,21]}]},{"pos":[446069,446070],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[446141,446151],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[446212,446213]},{"pos":[446289,446299],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[446359,446360],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[446829,446886],"content":"MultiplyAssignChecked(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked(Expression, Expression, MethodInfo)","pos":[0,57]}]},{"pos":[447249,447270],"content":"MultiplyAssignChecked","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked","pos":[0,21]}]},{"pos":[447352,447353],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[447424,447434],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[447495,447496]},{"pos":[447572,447582],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[447643,447644]},{"pos":[447714,447724],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[447799,447800],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[448004,448025],"content":"MultiplyAssignChecked","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked","pos":[0,21]}]},{"pos":[448107,448108],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[448179,448189],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[448250,448251]},{"pos":[448327,448337],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[448398,448399]},{"pos":[448469,448479],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[448554,448555],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[449106,449181],"content":"MultiplyAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,75]}]},{"pos":[449627,449648],"content":"MultiplyAssignChecked","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked","pos":[0,21]}]},{"pos":[449730,449731],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[449802,449812],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[449873,449874]},{"pos":[449950,449960],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[450021,450022]},{"pos":[450092,450102],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[450178,450179]},{"pos":[450261,450277],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[450343,450344],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[450589,450610],"content":"MultiplyAssignChecked","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked","pos":[0,21]}]},{"pos":[450692,450693],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[450764,450774],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[450835,450836]},{"pos":[450912,450922],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[450983,450984]},{"pos":[451054,451064],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[451140,451141]},{"pos":[451223,451239],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[451305,451306],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[451841,451880],"content":"MultiplyChecked(Expression, Expression)","needQuote":true,"nodes":[{"content":"MultiplyChecked(Expression, Expression)","pos":[0,39]}]},{"pos":[452172,452187],"content":"MultiplyChecked","needQuote":true,"nodes":[{"content":"MultiplyChecked","pos":[0,15]}]},{"pos":[452263,452264],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[452335,452345],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[452406,452407]},{"pos":[452483,452493],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[452553,452554],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[452723,452738],"content":"MultiplyChecked","needQuote":true,"nodes":[{"content":"MultiplyChecked","pos":[0,15]}]},{"pos":[452814,452815],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[452886,452896],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[452957,452958]},{"pos":[453034,453044],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[453104,453105],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[453556,453607],"content":"MultiplyChecked(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"MultiplyChecked(Expression, Expression, MethodInfo)","pos":[0,51]}]},{"pos":[453958,453973],"content":"MultiplyChecked","needQuote":true,"nodes":[{"content":"MultiplyChecked","pos":[0,15]}]},{"pos":[454049,454050],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[454121,454131],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[454192,454193]},{"pos":[454269,454279],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[454340,454341]},{"pos":[454411,454421],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[454496,454497],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[454695,454710],"content":"MultiplyChecked","needQuote":true,"nodes":[{"content":"MultiplyChecked","pos":[0,15]}]},{"pos":[454786,454787],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[454858,454868],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[454929,454930]},{"pos":[455006,455016],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[455077,455078]},{"pos":[455148,455158],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[455233,455234],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[455654,455672],"content":"Negate(Expression)","needQuote":true,"nodes":[{"content":"Negate(Expression)","pos":[0,18]}]},{"pos":[455875,455881],"content":"Negate","needQuote":true,"nodes":[{"content":"Negate","pos":[0,6]}]},{"pos":[455948,455949],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[456020,456030],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[456090,456091],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[456216,456222],"content":"Negate","needQuote":true,"nodes":[{"content":"Negate","pos":[0,6]}]},{"pos":[456289,456290],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[456361,456371],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[456431,456432],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[456774,456804],"content":"Negate(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Negate(Expression, MethodInfo)","pos":[0,30]}]},{"pos":[457066,457072],"content":"Negate","needQuote":true,"nodes":[{"content":"Negate","pos":[0,6]}]},{"pos":[457139,457140],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[457211,457221],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[457282,457283]},{"pos":[457353,457363],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[457438,457439],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[457593,457599],"content":"Negate","needQuote":true,"nodes":[{"content":"Negate","pos":[0,6]}]},{"pos":[457666,457667],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[457738,457748],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[457809,457810]},{"pos":[457880,457890],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[457965,457966],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[458328,458353],"content":"NegateChecked(Expression)","needQuote":true,"nodes":[{"content":"NegateChecked(Expression)","pos":[0,25]}]},{"pos":[458570,458583],"content":"NegateChecked","needQuote":true,"nodes":[{"content":"NegateChecked","pos":[0,13]}]},{"pos":[458657,458658],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[458729,458739],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[458799,458800],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[458932,458945],"content":"NegateChecked","needQuote":true,"nodes":[{"content":"NegateChecked","pos":[0,13]}]},{"pos":[459019,459020],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[459091,459101],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[459161,459162],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[459525,459562],"content":"NegateChecked(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"NegateChecked(Expression, MethodInfo)","pos":[0,37]}]},{"pos":[459838,459851],"content":"NegateChecked","needQuote":true,"nodes":[{"content":"NegateChecked","pos":[0,13]}]},{"pos":[459925,459926],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[459997,460007],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[460068,460069]},{"pos":[460139,460149],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[460224,460225],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[460386,460399],"content":"NegateChecked","needQuote":true,"nodes":[{"content":"NegateChecked","pos":[0,13]}]},{"pos":[460473,460474],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[460545,460555],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[460616,460617]},{"pos":[460687,460697],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[460772,460773],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[461137,461157],"content":"New(ConstructorInfo)","needQuote":true,"nodes":[{"content":"New(ConstructorInfo)","pos":[0,20]}]},{"pos":[461352,461355],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[461419,461420],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[461490,461505],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"pos":[461585,461586],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[461707,461710],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[461774,461775],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[461845,461860],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"pos":[461940,461941],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[462323,462368],"content":"New(ConstructorInfo, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"New(ConstructorInfo, IEnumerable&lt;Expression&gt;)","pos":[0,45],"source":"New(ConstructorInfo, IEnumerable<Expression>)"}]},{"pos":[462942,462945],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[463009,463010],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[463080,463095],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"content":",","pos":[463176,463177]},{"pos":[463259,463270],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[463355,463356],"content":"<","needQuote":true,"nodes":[]},{"pos":[463427,463437],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[463529,463530],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[463726,463729],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[463793,463794],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[463864,463879],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"content":",","pos":[463960,463961]},{"pos":[464043,464054],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[464140,464143]},{"pos":[464221,464231],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[464291,464292],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[464319,464320],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[464950,465020],"content":"New(ConstructorInfo, IEnumerable<Expression>, IEnumerable<MemberInfo>)","needQuote":true,"nodes":[{"content":"New(ConstructorInfo, IEnumerable&lt;Expression&gt;, IEnumerable&lt;MemberInfo&gt;)","pos":[0,70],"source":"New(ConstructorInfo, IEnumerable<Expression>, IEnumerable<MemberInfo>)"}]},{"pos":[465834,465837],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[465901,465902],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[465972,465987],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"content":",","pos":[466068,466069]},{"pos":[466151,466162],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[466247,466248],"content":"<","needQuote":true,"nodes":[]},{"pos":[466319,466329],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[466422,466423]},{"pos":[466505,466516],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[466601,466602],"content":"<","needQuote":true,"nodes":[]},{"pos":[466667,466677],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[466784,466785],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[467050,467053],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[467117,467118],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[467188,467203],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"content":",","pos":[467284,467285]},{"pos":[467367,467378],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[467464,467467]},{"pos":[467545,467555],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[467615,467616],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[467644,467645]},{"pos":[467727,467738],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[467824,467827]},{"pos":[467899,467909],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[467984,467985],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[468012,468013],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[468727,468786],"content":"New(ConstructorInfo, IEnumerable<Expression>, MemberInfo[])","needQuote":true,"nodes":[{"content":"New(ConstructorInfo, IEnumerable&lt;Expression&gt;, MemberInfo[])","pos":[0,59],"source":"New(ConstructorInfo, IEnumerable<Expression>, MemberInfo[])"}]},{"pos":[469469,469472],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[469536,469537],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[469607,469622],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"content":",","pos":[469703,469704]},{"pos":[469786,469797],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[469882,469883],"content":"<","needQuote":true,"nodes":[]},{"pos":[469954,469964],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[470057,470058]},{"pos":[470128,470138],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":"[]","pos":[470214,470216]},{"pos":[470247,470248],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[470475,470478],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[470542,470543],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[470613,470628],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"content":",","pos":[470709,470710]},{"pos":[470792,470803],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[470889,470892]},{"pos":[470970,470980],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[471040,471041],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[471069,471070]},{"pos":[471140,471150],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[471225,471227],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[471255,471256],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[471838,471872],"content":"New(ConstructorInfo, Expression[])","needQuote":true,"nodes":[{"content":"New(ConstructorInfo, Expression[])","pos":[0,34]}]},{"pos":[472315,472318],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[472382,472383],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[472453,472468],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"content":",","pos":[472549,472550]},{"pos":[472626,472636],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[472697,472699]},{"pos":[472730,472731],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[472889,472892],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[472956,472957],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[473027,473042],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"content":",","pos":[473123,473124]},{"pos":[473200,473210],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[473270,473272],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[473300,473301],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[473702,473711],"content":"New(Type)","needQuote":true,"nodes":[{"content":"New(Type)","pos":[0,9]}]},{"pos":[473862,473865],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[473929,473930],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[473978,473982],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[474040,474041],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[474140,474143],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[474207,474208],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[474256,474260],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[474318,474319],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[474657,474702],"content":"NewArrayBounds(Type, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"NewArrayBounds(Type, IEnumerable&lt;Expression&gt;)","pos":[0,45],"source":"NewArrayBounds(Type, IEnumerable<Expression>)"}]},{"pos":[475243,475257],"content":"NewArrayBounds","needQuote":true,"nodes":[{"content":"NewArrayBounds","pos":[0,14]}]},{"pos":[475332,475333],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[475381,475385],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[475444,475445]},{"pos":[475527,475538],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[475623,475624],"content":"<","needQuote":true,"nodes":[]},{"pos":[475695,475705],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[475797,475798],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[475983,475997],"content":"NewArrayBounds","needQuote":true,"nodes":[{"content":"NewArrayBounds","pos":[0,14]}]},{"pos":[476072,476073],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[476121,476125],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[476184,476185]},{"pos":[476267,476278],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[476364,476367]},{"pos":[476445,476455],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[476515,476516],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[476543,476544],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[477045,477079],"content":"NewArrayBounds(Type, Expression[])","needQuote":true,"nodes":[{"content":"NewArrayBounds(Type, Expression[])","pos":[0,34]}]},{"pos":[477489,477503],"content":"NewArrayBounds","needQuote":true,"nodes":[{"content":"NewArrayBounds","pos":[0,14]}]},{"pos":[477578,477579],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[477627,477631],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[477690,477691]},{"pos":[477767,477777],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[477838,477840]},{"pos":[477871,477872],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[478019,478033],"content":"NewArrayBounds","needQuote":true,"nodes":[{"content":"NewArrayBounds","pos":[0,14]}]},{"pos":[478108,478109],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[478157,478161],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[478220,478221]},{"pos":[478297,478307],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[478367,478369],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[478397,478398],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[478872,478915],"content":"NewArrayInit(Type, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"NewArrayInit(Type, IEnumerable&lt;Expression&gt;)","pos":[0,43],"source":"NewArrayInit(Type, IEnumerable<Expression>)"}]},{"pos":[479448,479460],"content":"NewArrayInit","needQuote":true,"nodes":[{"content":"NewArrayInit","pos":[0,12]}]},{"pos":[479533,479534],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[479582,479586],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[479645,479646]},{"pos":[479728,479739],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[479824,479825],"content":"<","needQuote":true,"nodes":[]},{"pos":[479896,479906],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[479998,479999],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[480182,480194],"content":"NewArrayInit","needQuote":true,"nodes":[{"content":"NewArrayInit","pos":[0,12]}]},{"pos":[480267,480268],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[480316,480320],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[480379,480380]},{"pos":[480462,480473],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[480559,480562]},{"pos":[480640,480650],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[480710,480711],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[480738,480739],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[481232,481264],"content":"NewArrayInit(Type, Expression[])","needQuote":true,"nodes":[{"content":"NewArrayInit(Type, Expression[])","pos":[0,32]}]},{"pos":[481666,481678],"content":"NewArrayInit","needQuote":true,"nodes":[{"content":"NewArrayInit","pos":[0,12]}]},{"pos":[481751,481752],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[481800,481804],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[481863,481864]},{"pos":[481940,481950],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[482011,482013]},{"pos":[482044,482045],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[482190,482202],"content":"NewArrayInit","needQuote":true,"nodes":[{"content":"NewArrayInit","pos":[0,12]}]},{"pos":[482275,482276],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[482324,482328],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[482387,482388]},{"pos":[482464,482474],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[482534,482536],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[482564,482565],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[482973,482988],"content":"Not(Expression)","needQuote":true,"nodes":[{"content":"Not(Expression)","pos":[0,15]}]},{"pos":[483185,483188],"content":"Not","needQuote":true,"nodes":[{"content":"Not","pos":[0,3]}]},{"pos":[483252,483253],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[483324,483334],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[483394,483395],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[483517,483520],"content":"Not","needQuote":true,"nodes":[{"content":"Not","pos":[0,3]}]},{"pos":[483584,483585],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[483656,483666],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[483726,483727],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[484060,484087],"content":"Not(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Not(Expression, MethodInfo)","pos":[0,27]}]},{"pos":[484343,484346],"content":"Not","needQuote":true,"nodes":[{"content":"Not","pos":[0,3]}]},{"pos":[484410,484411],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[484482,484492],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[484553,484554]},{"pos":[484624,484634],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[484709,484710],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[484861,484864],"content":"Not","needQuote":true,"nodes":[{"content":"Not","pos":[0,3]}]},{"pos":[484928,484929],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[485000,485010],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[485071,485072]},{"pos":[485142,485152],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[485227,485228],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[485614,485646],"content":"NotEqual(Expression, Expression)","needQuote":true,"nodes":[{"content":"NotEqual(Expression, Expression)","pos":[0,32]}]},{"pos":[485924,485932],"content":"NotEqual","needQuote":true,"nodes":[{"content":"NotEqual","pos":[0,8]}]},{"pos":[486001,486002],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[486073,486083],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[486144,486145]},{"pos":[486221,486231],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[486291,486292],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[486454,486462],"content":"NotEqual","needQuote":true,"nodes":[{"content":"NotEqual","pos":[0,8]}]},{"pos":[486531,486532],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[486603,486613],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[486674,486675]},{"pos":[486751,486761],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[486821,486822],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[487267,487320],"content":"NotEqual(Expression, Expression, Boolean, MethodInfo)","needQuote":true,"nodes":[{"content":"NotEqual(Expression, Expression, Boolean, MethodInfo)","pos":[0,53]}]},{"pos":[487688,487696],"content":"NotEqual","needQuote":true,"nodes":[{"content":"NotEqual","pos":[0,8]}]},{"pos":[487765,487766],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[487837,487847],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[487908,487909]},{"pos":[487985,487995],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[488056,488057]},{"pos":[488113,488120],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[488182,488183]},{"pos":[488253,488263],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[488338,488339],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[488545,488553],"content":"NotEqual","needQuote":true,"nodes":[{"content":"NotEqual","pos":[0,8]}]},{"pos":[488622,488623],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[488694,488704],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[488765,488766]},{"pos":[488842,488852],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[488913,488914]},{"pos":[488970,488977],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[489039,489040]},{"pos":[489110,489120],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[489195,489196],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[489634,489660],"content":"OnesComplement(Expression)","needQuote":true,"nodes":[{"content":"OnesComplement(Expression)","pos":[0,26]}]},{"pos":[489879,489893],"content":"OnesComplement","needQuote":true,"nodes":[{"content":"OnesComplement","pos":[0,14]}]},{"pos":[489968,489969],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[490040,490050],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[490110,490111],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[490244,490258],"content":"OnesComplement","needQuote":true,"nodes":[{"content":"OnesComplement","pos":[0,14]}]},{"pos":[490333,490334],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[490405,490415],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[490475,490476],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[490842,490880],"content":"OnesComplement(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"OnesComplement(Expression, MethodInfo)","pos":[0,38]}]},{"pos":[491158,491172],"content":"OnesComplement","needQuote":true,"nodes":[{"content":"OnesComplement","pos":[0,14]}]},{"pos":[491247,491248],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[491319,491329],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[491390,491391]},{"pos":[491461,491471],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[491546,491547],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[491709,491723],"content":"OnesComplement","needQuote":true,"nodes":[{"content":"OnesComplement","pos":[0,14]}]},{"pos":[491798,491799],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[491870,491880],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[491941,491942]},{"pos":[492012,492022],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[492097,492098],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[492500,492526],"content":"Or(Expression, Expression)","needQuote":true,"nodes":[{"content":"Or(Expression, Expression)","pos":[0,26]}]},{"pos":[492792,492794],"content":"Or","needQuote":true,"nodes":[{"content":"Or","pos":[0,2]}]},{"pos":[492857,492858],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[492929,492939],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[493000,493001]},{"pos":[493077,493087],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[493147,493148],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[493304,493306],"content":"Or","needQuote":true,"nodes":[{"content":"Or","pos":[0,2]}]},{"pos":[493369,493370],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[493441,493451],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[493512,493513]},{"pos":[493589,493599],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[493659,493660],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[494072,494110],"content":"Or(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Or(Expression, Expression, MethodInfo)","pos":[0,38]}]},{"pos":[494435,494437],"content":"Or","needQuote":true,"nodes":[{"content":"Or","pos":[0,2]}]},{"pos":[494500,494501],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[494572,494582],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[494643,494644]},{"pos":[494720,494730],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[494791,494792]},{"pos":[494862,494872],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[494947,494948],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[495133,495135],"content":"Or","needQuote":true,"nodes":[{"content":"Or","pos":[0,2]}]},{"pos":[495198,495199],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[495270,495280],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[495341,495342]},{"pos":[495418,495428],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[495489,495490]},{"pos":[495560,495570],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[495645,495646],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[496077,496109],"content":"OrAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"OrAssign(Expression, Expression)","pos":[0,32]}]},{"pos":[496387,496395],"content":"OrAssign","needQuote":true,"nodes":[{"content":"OrAssign","pos":[0,8]}]},{"pos":[496464,496465],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[496536,496546],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[496607,496608]},{"pos":[496684,496694],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[496754,496755],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[496917,496925],"content":"OrAssign","needQuote":true,"nodes":[{"content":"OrAssign","pos":[0,8]}]},{"pos":[496994,496995],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[497066,497076],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[497137,497138]},{"pos":[497214,497224],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[497284,497285],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[497715,497759],"content":"OrAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"OrAssign(Expression, Expression, MethodInfo)","pos":[0,44]}]},{"pos":[498096,498104],"content":"OrAssign","needQuote":true,"nodes":[{"content":"OrAssign","pos":[0,8]}]},{"pos":[498173,498174],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[498245,498255],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[498316,498317]},{"pos":[498393,498403],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[498464,498465]},{"pos":[498535,498545],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[498620,498621],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[498812,498820],"content":"OrAssign","needQuote":true,"nodes":[{"content":"OrAssign","pos":[0,8]}]},{"pos":[498889,498890],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[498961,498971],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[499032,499033]},{"pos":[499109,499119],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[499180,499181]},{"pos":[499251,499261],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[499336,499337],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[499849,499911],"content":"OrAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"OrAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,62]}]},{"pos":[500331,500339],"content":"OrAssign","needQuote":true,"nodes":[{"content":"OrAssign","pos":[0,8]}]},{"pos":[500408,500409],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[500480,500490],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[500551,500552]},{"pos":[500628,500638],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[500699,500700]},{"pos":[500770,500780],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[500856,500857]},{"pos":[500939,500955],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[501021,501022],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[501254,501262],"content":"OrAssign","needQuote":true,"nodes":[{"content":"OrAssign","pos":[0,8]}]},{"pos":[501331,501332],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[501403,501413],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[501474,501475]},{"pos":[501551,501561],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[501622,501623]},{"pos":[501693,501703],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[501779,501780]},{"pos":[501862,501878],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[501944,501945],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[502445,502475],"content":"OrElse(Expression, Expression)","needQuote":true,"nodes":[{"content":"OrElse(Expression, Expression)","pos":[0,30]}]},{"pos":[502749,502755],"content":"OrElse","needQuote":true,"nodes":[{"content":"OrElse","pos":[0,6]}]},{"pos":[502822,502823],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[502894,502904],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[502965,502966]},{"pos":[503042,503052],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[503112,503113],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[503273,503279],"content":"OrElse","needQuote":true,"nodes":[{"content":"OrElse","pos":[0,6]}]},{"pos":[503346,503347],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[503418,503428],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[503489,503490]},{"pos":[503566,503576],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[503636,503637],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[504061,504103],"content":"OrElse(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"OrElse(Expression, Expression, MethodInfo)","pos":[0,42]}]},{"pos":[504436,504442],"content":"OrElse","needQuote":true,"nodes":[{"content":"OrElse","pos":[0,6]}]},{"pos":[504509,504510],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[504581,504591],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[504652,504653]},{"pos":[504729,504739],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[504800,504801]},{"pos":[504871,504881],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[504956,504957],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[505146,505152],"content":"OrElse","needQuote":true,"nodes":[{"content":"OrElse","pos":[0,6]}]},{"pos":[505219,505220],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[505291,505301],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[505362,505363]},{"pos":[505439,505449],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[505510,505511]},{"pos":[505581,505591],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[505666,505667],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[506048,506063],"content":"Parameter(Type)","needQuote":true,"nodes":[{"content":"Parameter(Type)","pos":[0,15]}]},{"pos":[506226,506235],"content":"Parameter","needQuote":true,"nodes":[{"content":"Parameter","pos":[0,9]}]},{"pos":[506305,506306],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[506354,506358],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[506416,506417],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[506522,506531],"content":"Parameter","needQuote":true,"nodes":[{"content":"Parameter","pos":[0,9]}]},{"pos":[506601,506602],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[506650,506654],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[506712,506713],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[506997,507020],"content":"Parameter(Type, String)","needQuote":true,"nodes":[{"content":"Parameter(Type, String)","pos":[0,23]}]},{"pos":[507212,507221],"content":"Parameter","needQuote":true,"nodes":[{"content":"Parameter","pos":[0,9]}]},{"pos":[507291,507292],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[507340,507344],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[507403,507404]},{"pos":[507459,507465],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[507525,507526],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[507645,507654],"content":"Parameter","needQuote":true,"nodes":[{"content":"Parameter","pos":[0,9]}]},{"pos":[507724,507725],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[507773,507777],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[507836,507837]},{"pos":[507892,507898],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[507958,507959],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[508285,508316],"content":"PostDecrementAssign(Expression)","needQuote":true,"nodes":[{"content":"PostDecrementAssign(Expression)","pos":[0,31]}]},{"pos":[508545,508564],"content":"PostDecrementAssign","needQuote":true,"nodes":[{"content":"PostDecrementAssign","pos":[0,19]}]},{"pos":[508644,508645],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[508716,508726],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[508786,508787],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[508925,508944],"content":"PostDecrementAssign","needQuote":true,"nodes":[{"content":"PostDecrementAssign","pos":[0,19]}]},{"pos":[509024,509025],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[509096,509106],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[509166,509167],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[509548,509591],"content":"PostDecrementAssign(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"PostDecrementAssign(Expression, MethodInfo)","pos":[0,43]}]},{"pos":[509879,509898],"content":"PostDecrementAssign","needQuote":true,"nodes":[{"content":"PostDecrementAssign","pos":[0,19]}]},{"pos":[509978,509979],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[510050,510060],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[510121,510122]},{"pos":[510192,510202],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[510277,510278],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[510445,510464],"content":"PostDecrementAssign","needQuote":true,"nodes":[{"content":"PostDecrementAssign","pos":[0,19]}]},{"pos":[510544,510545],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[510616,510626],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[510687,510688]},{"pos":[510758,510768],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[510843,510844],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[511238,511269],"content":"PostIncrementAssign(Expression)","needQuote":true,"nodes":[{"content":"PostIncrementAssign(Expression)","pos":[0,31]}]},{"pos":[511498,511517],"content":"PostIncrementAssign","needQuote":true,"nodes":[{"content":"PostIncrementAssign","pos":[0,19]}]},{"pos":[511597,511598],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[511669,511679],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[511739,511740],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[511878,511897],"content":"PostIncrementAssign","needQuote":true,"nodes":[{"content":"PostIncrementAssign","pos":[0,19]}]},{"pos":[511977,511978],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[512049,512059],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[512119,512120],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[512501,512544],"content":"PostIncrementAssign(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"PostIncrementAssign(Expression, MethodInfo)","pos":[0,43]}]},{"pos":[512832,512851],"content":"PostIncrementAssign","needQuote":true,"nodes":[{"content":"PostIncrementAssign","pos":[0,19]}]},{"pos":[512931,512932],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[513003,513013],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[513074,513075]},{"pos":[513145,513155],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[513230,513231],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[513398,513417],"content":"PostIncrementAssign","needQuote":true,"nodes":[{"content":"PostIncrementAssign","pos":[0,19]}]},{"pos":[513497,513498],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[513569,513579],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[513640,513641]},{"pos":[513711,513721],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[513796,513797],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[514212,514241],"content":"Power(Expression, Expression)","needQuote":true,"nodes":[{"content":"Power(Expression, Expression)","pos":[0,29]}]},{"pos":[514513,514518],"content":"Power","needQuote":true,"nodes":[{"content":"Power","pos":[0,5]}]},{"pos":[514584,514585],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[514656,514666],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[514727,514728]},{"pos":[514804,514814],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[514874,514875],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[515034,515039],"content":"Power","needQuote":true,"nodes":[{"content":"Power","pos":[0,5]}]},{"pos":[515105,515106],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[515177,515187],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[515248,515249]},{"pos":[515325,515335],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[515395,515396],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[515817,515858],"content":"Power(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Power(Expression, Expression, MethodInfo)","pos":[0,41]}]},{"pos":[516189,516194],"content":"Power","needQuote":true,"nodes":[{"content":"Power","pos":[0,5]}]},{"pos":[516260,516261],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[516332,516342],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[516403,516404]},{"pos":[516480,516490],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[516551,516552]},{"pos":[516622,516632],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[516707,516708],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[516896,516901],"content":"Power","needQuote":true,"nodes":[{"content":"Power","pos":[0,5]}]},{"pos":[516967,516968],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[517039,517049],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[517110,517111]},{"pos":[517187,517197],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[517258,517259]},{"pos":[517329,517339],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[517414,517415],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[517855,517890],"content":"PowerAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"PowerAssign(Expression, Expression)","pos":[0,35]}]},{"pos":[518174,518185],"content":"PowerAssign","needQuote":true,"nodes":[{"content":"PowerAssign","pos":[0,11]}]},{"pos":[518257,518258],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[518329,518339],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[518400,518401]},{"pos":[518477,518487],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[518547,518548],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[518713,518724],"content":"PowerAssign","needQuote":true,"nodes":[{"content":"PowerAssign","pos":[0,11]}]},{"pos":[518796,518797],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[518868,518878],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[518939,518940]},{"pos":[519016,519026],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[519086,519087],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[519526,519573],"content":"PowerAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"PowerAssign(Expression, Expression, MethodInfo)","pos":[0,47]}]},{"pos":[519916,519927],"content":"PowerAssign","needQuote":true,"nodes":[{"content":"PowerAssign","pos":[0,11]}]},{"pos":[519999,520000],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[520071,520081],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[520142,520143]},{"pos":[520219,520229],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[520290,520291]},{"pos":[520361,520371],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[520446,520447],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[520641,520652],"content":"PowerAssign","needQuote":true,"nodes":[{"content":"PowerAssign","pos":[0,11]}]},{"pos":[520724,520725],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[520796,520806],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[520867,520868]},{"pos":[520944,520954],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[521015,521016]},{"pos":[521086,521096],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[521171,521172],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[521693,521758],"content":"PowerAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"PowerAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,65]}]},{"pos":[522184,522195],"content":"PowerAssign","needQuote":true,"nodes":[{"content":"PowerAssign","pos":[0,11]}]},{"pos":[522267,522268],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[522339,522349],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[522410,522411]},{"pos":[522487,522497],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[522558,522559]},{"pos":[522629,522639],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[522715,522716]},{"pos":[522798,522814],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[522880,522881],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[523116,523127],"content":"PowerAssign","needQuote":true,"nodes":[{"content":"PowerAssign","pos":[0,11]}]},{"pos":[523199,523200],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[523271,523281],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[523342,523343]},{"pos":[523419,523429],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[523490,523491]},{"pos":[523561,523571],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[523647,523648]},{"pos":[523730,523746],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[523812,523813],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[524296,524326],"content":"PreDecrementAssign(Expression)","needQuote":true,"nodes":[{"content":"PreDecrementAssign(Expression)","pos":[0,30]}]},{"pos":[524553,524571],"content":"PreDecrementAssign","needQuote":true,"nodes":[{"content":"PreDecrementAssign","pos":[0,18]}]},{"pos":[524650,524651],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[524722,524732],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[524792,524793],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[524930,524948],"content":"PreDecrementAssign","needQuote":true,"nodes":[{"content":"PreDecrementAssign","pos":[0,18]}]},{"pos":[525027,525028],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[525099,525109],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[525169,525170],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[525548,525590],"content":"PreDecrementAssign(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"PreDecrementAssign(Expression, MethodInfo)","pos":[0,42]}]},{"pos":[525876,525894],"content":"PreDecrementAssign","needQuote":true,"nodes":[{"content":"PreDecrementAssign","pos":[0,18]}]},{"pos":[525973,525974],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[526045,526055],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[526116,526117]},{"pos":[526187,526197],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[526272,526273],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[526439,526457],"content":"PreDecrementAssign","needQuote":true,"nodes":[{"content":"PreDecrementAssign","pos":[0,18]}]},{"pos":[526536,526537],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[526608,526618],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[526679,526680]},{"pos":[526750,526760],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[526835,526836],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[527227,527257],"content":"PreIncrementAssign(Expression)","needQuote":true,"nodes":[{"content":"PreIncrementAssign(Expression)","pos":[0,30]}]},{"pos":[527484,527502],"content":"PreIncrementAssign","needQuote":true,"nodes":[{"content":"PreIncrementAssign","pos":[0,18]}]},{"pos":[527581,527582],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[527653,527663],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[527723,527724],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[527861,527879],"content":"PreIncrementAssign","needQuote":true,"nodes":[{"content":"PreIncrementAssign","pos":[0,18]}]},{"pos":[527958,527959],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[528030,528040],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[528100,528101],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[528479,528521],"content":"PreIncrementAssign(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"PreIncrementAssign(Expression, MethodInfo)","pos":[0,42]}]},{"pos":[528807,528825],"content":"PreIncrementAssign","needQuote":true,"nodes":[{"content":"PreIncrementAssign","pos":[0,18]}]},{"pos":[528904,528905],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[528976,528986],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[529047,529048]},{"pos":[529118,529128],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[529203,529204],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[529370,529388],"content":"PreIncrementAssign","needQuote":true,"nodes":[{"content":"PreIncrementAssign","pos":[0,18]}]},{"pos":[529467,529468],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[529539,529549],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[529610,529611]},{"pos":[529681,529691],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[529766,529767],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[530176,530208],"content":"Property(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Property(Expression, MethodInfo)","pos":[0,32]}]},{"pos":[530474,530482],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[530551,530552],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[530623,530633],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[530694,530695]},{"pos":[530765,530775],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[530850,530851],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[531007,531015],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[531084,531085],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[531156,531166],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[531227,531228]},{"pos":[531298,531308],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[531383,531384],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[531775,531809],"content":"Property(Expression, PropertyInfo)","needQuote":true,"nodes":[{"content":"Property(Expression, PropertyInfo)","pos":[0,34]}]},{"pos":[532079,532087],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[532156,532157],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[532228,532238],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[532299,532300]},{"pos":[532372,532384],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"pos":[532461,532462],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[532620,532628],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[532697,532698],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[532769,532779],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[532840,532841]},{"pos":[532913,532925],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"pos":[533002,533003],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[533473,533532],"content":"Property(Expression, PropertyInfo, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"Property(Expression, PropertyInfo, IEnumerable&lt;Expression&gt;)","pos":[0,59],"source":"Property(Expression, PropertyInfo, IEnumerable<Expression>)"}]},{"pos":[534233,534241],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[534310,534311],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[534382,534392],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[534453,534454]},{"pos":[534526,534538],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"content":",","pos":[534616,534617]},{"pos":[534699,534710],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[534795,534796],"content":"<","needQuote":true,"nodes":[]},{"pos":[534867,534877],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[534969,534970],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[535203,535211],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[535280,535281],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[535352,535362],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[535423,535424]},{"pos":[535496,535508],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"content":",","pos":[535586,535587]},{"pos":[535669,535680],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[535766,535769]},{"pos":[535847,535857],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[535917,535918],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[535945,535946],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[536571,536619],"content":"Property(Expression, PropertyInfo, Expression[])","needQuote":true,"nodes":[{"content":"Property(Expression, PropertyInfo, Expression[])","pos":[0,48]}]},{"pos":[537189,537197],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[537266,537267],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[537338,537348],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[537409,537410]},{"pos":[537482,537494],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"content":",","pos":[537572,537573]},{"pos":[537649,537659],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[537720,537722]},{"pos":[537753,537754],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[537949,537957],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[538026,538027],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[538098,538108],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[538169,538170]},{"pos":[538242,538254],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"content":",","pos":[538332,538333]},{"pos":[538409,538419],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[538479,538481],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[538509,538510],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[539018,539046],"content":"Property(Expression, String)","needQuote":true,"nodes":[{"content":"Property(Expression, String)","pos":[0,28]}]},{"pos":[539282,539290],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[539359,539360],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[539431,539441],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[539502,539503]},{"pos":[539558,539564],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[539624,539625],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[539766,539774],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[539843,539844],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[539915,539925],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[539986,539987]},{"pos":[540042,540048],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[540108,540109],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[540501,540543],"content":"Property(Expression, String, Expression[])","needQuote":true,"nodes":[{"content":"Property(Expression, String, Expression[])","pos":[0,42]}]},{"pos":[541056,541064],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[541133,541134],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[541205,541215],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[541276,541277]},{"pos":[541332,541338],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[541399,541400]},{"pos":[541476,541486],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[541547,541549]},{"pos":[541580,541581],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[541759,541767],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[541836,541837],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[541908,541918],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[541979,541980]},{"pos":[542035,542041],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[542102,542103]},{"pos":[542179,542189],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[542249,542251],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[542279,542280],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[542771,542805],"content":"Property(Expression, Type, String)","needQuote":true,"nodes":[{"content":"Property(Expression, Type, String)","pos":[0,34]}]},{"pos":[543066,543074],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[543143,543144],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[543215,543225],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[543286,543287]},{"pos":[543340,543344],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[543403,543404]},{"pos":[543459,543465],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[543525,543526],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[543679,543687],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[543756,543757],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[543828,543838],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[543899,543900]},{"pos":[543953,543957],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[544016,544017]},{"pos":[544072,544078],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[544138,544139],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[544519,544554],"content":"PropertyOrField(Expression, String)","needQuote":true,"nodes":[{"content":"PropertyOrField(Expression, String)","pos":[0,35]}]},{"pos":[544804,544819],"content":"PropertyOrField","needQuote":true,"nodes":[{"content":"PropertyOrField","pos":[0,15]}]},{"pos":[544895,544896],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[544967,544977],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[545038,545039]},{"pos":[545094,545100],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[545160,545161],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[545309,545324],"content":"PropertyOrField","needQuote":true,"nodes":[{"content":"PropertyOrField","pos":[0,15]}]},{"pos":[545400,545401],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[545472,545482],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[545543,545544]},{"pos":[545599,545605],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[545665,545666],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[546019,546036],"content":"Quote(Expression)","needQuote":true,"nodes":[{"content":"Quote(Expression)","pos":[0,17]}]},{"pos":[546237,546242],"content":"Quote","needQuote":true,"nodes":[{"content":"Quote","pos":[0,5]}]},{"pos":[546308,546309],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[546380,546390],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[546450,546451],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[546575,546580],"content":"Quote","needQuote":true,"nodes":[{"content":"Quote","pos":[0,5]}]},{"pos":[546646,546647],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[546718,546728],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[546788,546789],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[547065,547073],"content":"Reduce()","needQuote":true,"nodes":[{"content":"Reduce()","pos":[0,8]}]},{"pos":[547206,547212],"content":"Reduce","needQuote":true,"nodes":[{"content":"Reduce","pos":[0,6]}]},{"pos":[547279,547280],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[547307,547308],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[547397,547403],"content":"Reduce","needQuote":true,"nodes":[{"content":"Reduce","pos":[0,6]}]},{"pos":[547470,547471],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[547498,547499],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[547739,547755],"content":"ReduceAndCheck()","needQuote":true,"nodes":[{"content":"ReduceAndCheck()","pos":[0,16]}]},{"pos":[547904,547918],"content":"ReduceAndCheck","needQuote":true,"nodes":[{"content":"ReduceAndCheck","pos":[0,14]}]},{"pos":[547993,547994],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[548021,548022],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[548119,548133],"content":"ReduceAndCheck","needQuote":true,"nodes":[{"content":"ReduceAndCheck","pos":[0,14]}]},{"pos":[548208,548209],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[548236,548237],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[548495,548513],"content":"ReduceExtensions()","needQuote":true,"nodes":[{"content":"ReduceExtensions()","pos":[0,18]}]},{"pos":[548666,548682],"content":"ReduceExtensions","needQuote":true,"nodes":[{"content":"ReduceExtensions","pos":[0,16]}]},{"pos":[548759,548760],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[548787,548788],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[548887,548903],"content":"ReduceExtensions","needQuote":true,"nodes":[{"content":"ReduceExtensions","pos":[0,16]}]},{"pos":[548980,548981],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[549008,549009],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[549340,549378],"content":"ReferenceEqual(Expression, Expression)","needQuote":true,"nodes":[{"content":"ReferenceEqual(Expression, Expression)","pos":[0,38]}]},{"pos":[549668,549682],"content":"ReferenceEqual","needQuote":true,"nodes":[{"content":"ReferenceEqual","pos":[0,14]}]},{"pos":[549757,549758],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[549829,549839],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[549900,549901]},{"pos":[549977,549987],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[550047,550048],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[550216,550230],"content":"ReferenceEqual","needQuote":true,"nodes":[{"content":"ReferenceEqual","pos":[0,14]}]},{"pos":[550305,550306],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[550377,550387],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[550448,550449]},{"pos":[550525,550535],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[550595,550596],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[551019,551060],"content":"ReferenceNotEqual(Expression, Expression)","needQuote":true,"nodes":[{"content":"ReferenceNotEqual(Expression, Expression)","pos":[0,41]}]},{"pos":[551356,551373],"content":"ReferenceNotEqual","needQuote":true,"nodes":[{"content":"ReferenceNotEqual","pos":[0,17]}]},{"pos":[551451,551452],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[551523,551533],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[551594,551595]},{"pos":[551671,551681],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[551741,551742],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[551913,551930],"content":"ReferenceNotEqual","needQuote":true,"nodes":[{"content":"ReferenceNotEqual","pos":[0,17]}]},{"pos":[552008,552009],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[552080,552090],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[552151,552152]},{"pos":[552228,552238],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[552298,552299],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[552647,552656],"content":"Rethrow()","needQuote":true,"nodes":[{"content":"Rethrow()","pos":[0,9]}]},{"pos":[552791,552798],"content":"Rethrow","needQuote":true,"nodes":[{"content":"Rethrow","pos":[0,7]}]},{"pos":[552866,552867],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[552894,552895],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[552985,552992],"content":"Rethrow","needQuote":true,"nodes":[{"content":"Rethrow","pos":[0,7]}]},{"pos":[553060,553061],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[553088,553089],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[553336,553349],"content":"Rethrow(Type)","needQuote":true,"nodes":[{"content":"Rethrow(Type)","pos":[0,13]}]},{"pos":[553508,553515],"content":"Rethrow","needQuote":true,"nodes":[{"content":"Rethrow","pos":[0,7]}]},{"pos":[553583,553584],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[553632,553636],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[553694,553695],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[553798,553805],"content":"Rethrow","needQuote":true,"nodes":[{"content":"Rethrow","pos":[0,7]}]},{"pos":[553873,553874],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[553922,553926],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[553984,553985],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[554273,554292],"content":"Return(LabelTarget)","needQuote":true,"nodes":[{"content":"Return(LabelTarget)","pos":[0,19]}]},{"pos":[554497,554503],"content":"Return","needQuote":true,"nodes":[{"content":"Return","pos":[0,6]}]},{"pos":[554570,554571],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[554643,554654],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[554715,554716],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[554842,554848],"content":"Return","needQuote":true,"nodes":[{"content":"Return","pos":[0,6]}]},{"pos":[554915,554916],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[554988,554999],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[555060,555061],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[555413,555444],"content":"Return(LabelTarget, Expression)","needQuote":true,"nodes":[{"content":"Return(LabelTarget, Expression)","pos":[0,31]}]},{"pos":[555720,555726],"content":"Return","needQuote":true,"nodes":[{"content":"Return","pos":[0,6]}]},{"pos":[555793,555794],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[555866,555877],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[555939,555940]},{"pos":[556016,556026],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[556086,556087],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[556248,556254],"content":"Return","needQuote":true,"nodes":[{"content":"Return","pos":[0,6]}]},{"pos":[556321,556322],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[556394,556405],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[556467,556468]},{"pos":[556544,556554],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[556614,556615],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[557025,557062],"content":"Return(LabelTarget, Expression, Type)","needQuote":true,"nodes":[{"content":"Return(LabelTarget, Expression, Type)","pos":[0,37]}]},{"pos":[557363,557369],"content":"Return","needQuote":true,"nodes":[{"content":"Return","pos":[0,6]}]},{"pos":[557436,557437],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[557509,557520],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[557582,557583]},{"pos":[557659,557669],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[557730,557731]},{"pos":[557784,557788],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[557846,557847],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[558020,558026],"content":"Return","needQuote":true,"nodes":[{"content":"Return","pos":[0,6]}]},{"pos":[558093,558094],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[558166,558177],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[558239,558240]},{"pos":[558316,558326],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[558387,558388]},{"pos":[558441,558445],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[558503,558504],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[558897,558922],"content":"Return(LabelTarget, Type)","needQuote":true,"nodes":[{"content":"Return(LabelTarget, Type)","pos":[0,25]}]},{"pos":[559152,559158],"content":"Return","needQuote":true,"nodes":[{"content":"Return","pos":[0,6]}]},{"pos":[559225,559226],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[559298,559309],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[559371,559372]},{"pos":[559425,559429],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[559487,559488],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[559626,559632],"content":"Return","needQuote":true,"nodes":[{"content":"Return","pos":[0,6]}]},{"pos":[559699,559700],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[559772,559783],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[559845,559846]},{"pos":[559899,559903],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[559961,559962],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[560335,560369],"content":"RightShift(Expression, Expression)","needQuote":true,"nodes":[{"content":"RightShift(Expression, Expression)","pos":[0,34]}]},{"pos":[560651,560661],"content":"RightShift","needQuote":true,"nodes":[{"content":"RightShift","pos":[0,10]}]},{"pos":[560732,560733],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[560804,560814],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[560875,560876]},{"pos":[560952,560962],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[561022,561023],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[561187,561197],"content":"RightShift","needQuote":true,"nodes":[{"content":"RightShift","pos":[0,10]}]},{"pos":[561268,561269],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[561340,561350],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[561411,561412]},{"pos":[561488,561498],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[561558,561559],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[561995,562041],"content":"RightShift(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"RightShift(Expression, Expression, MethodInfo)","pos":[0,46]}]},{"pos":[562382,562392],"content":"RightShift","needQuote":true,"nodes":[{"content":"RightShift","pos":[0,10]}]},{"pos":[562463,562464],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[562535,562545],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[562606,562607]},{"pos":[562683,562693],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[562754,562755]},{"pos":[562825,562835],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[562910,562911],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[563104,563114],"content":"RightShift","needQuote":true,"nodes":[{"content":"RightShift","pos":[0,10]}]},{"pos":[563185,563186],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[563257,563267],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[563328,563329]},{"pos":[563405,563415],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[563476,563477]},{"pos":[563547,563557],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[563632,563633],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[564088,564128],"content":"RightShiftAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"RightShiftAssign(Expression, Expression)","pos":[0,40]}]},{"pos":[564422,564438],"content":"RightShiftAssign","needQuote":true,"nodes":[{"content":"RightShiftAssign","pos":[0,16]}]},{"pos":[564515,564516],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[564587,564597],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[564658,564659]},{"pos":[564735,564745],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[564805,564806],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[564976,564992],"content":"RightShiftAssign","needQuote":true,"nodes":[{"content":"RightShiftAssign","pos":[0,16]}]},{"pos":[565069,565070],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[565141,565151],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[565212,565213]},{"pos":[565289,565299],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[565359,565360],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[565814,565866],"content":"RightShiftAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"RightShiftAssign(Expression, Expression, MethodInfo)","pos":[0,52]}]},{"pos":[566219,566235],"content":"RightShiftAssign","needQuote":true,"nodes":[{"content":"RightShiftAssign","pos":[0,16]}]},{"pos":[566312,566313],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[566384,566394],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[566455,566456]},{"pos":[566532,566542],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[566603,566604]},{"pos":[566674,566684],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[566759,566760],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[566959,566975],"content":"RightShiftAssign","needQuote":true,"nodes":[{"content":"RightShiftAssign","pos":[0,16]}]},{"pos":[567052,567053],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[567124,567134],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[567195,567196]},{"pos":[567272,567282],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[567343,567344]},{"pos":[567414,567424],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[567499,567500],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[568036,568106],"content":"RightShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"RightShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,70]}]},{"pos":[568542,568558],"content":"RightShiftAssign","needQuote":true,"nodes":[{"content":"RightShiftAssign","pos":[0,16]}]},{"pos":[568635,568636],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[568707,568717],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[568778,568779]},{"pos":[568855,568865],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[568926,568927]},{"pos":[568997,569007],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[569083,569084]},{"pos":[569166,569182],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[569248,569249],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[569489,569505],"content":"RightShiftAssign","needQuote":true,"nodes":[{"content":"RightShiftAssign","pos":[0,16]}]},{"pos":[569582,569583],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[569654,569664],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[569725,569726]},{"pos":[569802,569812],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[569873,569874]},{"pos":[569944,569954],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[570030,570031]},{"pos":[570113,570129],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[570195,570196],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[570735,570785],"content":"RuntimeVariables(IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"RuntimeVariables(IEnumerable&lt;ParameterExpression&gt;)","pos":[0,50],"source":"RuntimeVariables(IEnumerable<ParameterExpression>)"}]},{"pos":[571326,571342],"content":"RuntimeVariables","needQuote":true,"nodes":[{"content":"RuntimeVariables","pos":[0,16]}]},{"pos":[571419,571420],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[571497,571508],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[571593,571594],"content":"<","needQuote":true,"nodes":[]},{"pos":[571674,571693],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[571794,571795],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[571979,571995],"content":"RuntimeVariables","needQuote":true,"nodes":[{"content":"RuntimeVariables","pos":[0,16]}]},{"pos":[572072,572073],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[572150,572161],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[572247,572250]},{"pos":[572337,572356],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[572425,572426],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[572453,572454],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[572964,573003],"content":"RuntimeVariables(ParameterExpression[])","needQuote":true,"nodes":[{"content":"RuntimeVariables(ParameterExpression[])","pos":[0,39]}]},{"pos":[573413,573429],"content":"RuntimeVariables","needQuote":true,"nodes":[{"content":"RuntimeVariables","pos":[0,16]}]},{"pos":[573506,573507],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[573587,573606],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":"[]","pos":[573676,573678]},{"pos":[573709,573710],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[573856,573872],"content":"RuntimeVariables","needQuote":true,"nodes":[{"content":"RuntimeVariables","pos":[0,16]}]},{"pos":[573949,573950],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[574030,574049],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[574118,574120],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[574148,574149],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[574612,574644],"content":"Subtract(Expression, Expression)","needQuote":true,"nodes":[{"content":"Subtract(Expression, Expression)","pos":[0,32]}]},{"pos":[574922,574930],"content":"Subtract","needQuote":true,"nodes":[{"content":"Subtract","pos":[0,8]}]},{"pos":[574999,575000],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[575071,575081],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[575142,575143]},{"pos":[575219,575229],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[575289,575290],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[575452,575460],"content":"Subtract","needQuote":true,"nodes":[{"content":"Subtract","pos":[0,8]}]},{"pos":[575529,575530],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[575601,575611],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[575672,575673]},{"pos":[575749,575759],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[575819,575820],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[576250,576294],"content":"Subtract(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Subtract(Expression, Expression, MethodInfo)","pos":[0,44]}]},{"pos":[576631,576639],"content":"Subtract","needQuote":true,"nodes":[{"content":"Subtract","pos":[0,8]}]},{"pos":[576708,576709],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[576780,576790],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[576851,576852]},{"pos":[576928,576938],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[576999,577000]},{"pos":[577070,577080],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[577155,577156],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[577347,577355],"content":"Subtract","needQuote":true,"nodes":[{"content":"Subtract","pos":[0,8]}]},{"pos":[577424,577425],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[577496,577506],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[577567,577568]},{"pos":[577644,577654],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[577715,577716]},{"pos":[577786,577796],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[577871,577872],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[578321,578359],"content":"SubtractAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"SubtractAssign(Expression, Expression)","pos":[0,38]}]},{"pos":[578649,578663],"content":"SubtractAssign","needQuote":true,"nodes":[{"content":"SubtractAssign","pos":[0,14]}]},{"pos":[578738,578739],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[578810,578820],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[578881,578882]},{"pos":[578958,578968],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[579028,579029],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[579197,579211],"content":"SubtractAssign","needQuote":true,"nodes":[{"content":"SubtractAssign","pos":[0,14]}]},{"pos":[579286,579287],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[579358,579368],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[579429,579430]},{"pos":[579506,579516],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[579576,579577],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[580025,580075],"content":"SubtractAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"SubtractAssign(Expression, Expression, MethodInfo)","pos":[0,50]}]},{"pos":[580424,580438],"content":"SubtractAssign","needQuote":true,"nodes":[{"content":"SubtractAssign","pos":[0,14]}]},{"pos":[580513,580514],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[580585,580595],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[580656,580657]},{"pos":[580733,580743],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[580804,580805]},{"pos":[580875,580885],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[580960,580961],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[581158,581172],"content":"SubtractAssign","needQuote":true,"nodes":[{"content":"SubtractAssign","pos":[0,14]}]},{"pos":[581247,581248],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[581319,581329],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[581390,581391]},{"pos":[581467,581477],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[581538,581539]},{"pos":[581609,581619],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[581694,581695],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[582225,582293],"content":"SubtractAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"SubtractAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,68]}]},{"pos":[582725,582739],"content":"SubtractAssign","needQuote":true,"nodes":[{"content":"SubtractAssign","pos":[0,14]}]},{"pos":[582814,582815],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[582886,582896],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[582957,582958]},{"pos":[583034,583044],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[583105,583106]},{"pos":[583176,583186],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[583262,583263]},{"pos":[583345,583361],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[583427,583428],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[583666,583680],"content":"SubtractAssign","needQuote":true,"nodes":[{"content":"SubtractAssign","pos":[0,14]}]},{"pos":[583755,583756],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[583827,583837],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[583898,583899]},{"pos":[583975,583985],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[584046,584047]},{"pos":[584117,584127],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[584203,584204]},{"pos":[584286,584302],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[584368,584369],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[584896,584941],"content":"SubtractAssignChecked(Expression, Expression)","needQuote":true,"nodes":[{"content":"SubtractAssignChecked(Expression, Expression)","pos":[0,45]}]},{"pos":[585245,585266],"content":"SubtractAssignChecked","needQuote":true,"nodes":[{"content":"SubtractAssignChecked","pos":[0,21]}]},{"pos":[585348,585349],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[585420,585430],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[585491,585492]},{"pos":[585568,585578],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[585638,585639],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[585814,585835],"content":"SubtractAssignChecked","needQuote":true,"nodes":[{"content":"SubtractAssignChecked","pos":[0,21]}]},{"pos":[585917,585918],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[585989,585999],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[586060,586061]},{"pos":[586137,586147],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[586207,586208],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[586677,586734],"content":"SubtractAssignChecked(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"SubtractAssignChecked(Expression, Expression, MethodInfo)","pos":[0,57]}]},{"pos":[587097,587118],"content":"SubtractAssignChecked","needQuote":true,"nodes":[{"content":"SubtractAssignChecked","pos":[0,21]}]},{"pos":[587200,587201],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[587272,587282],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[587343,587344]},{"pos":[587420,587430],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[587491,587492]},{"pos":[587562,587572],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[587647,587648],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[587852,587873],"content":"SubtractAssignChecked","needQuote":true,"nodes":[{"content":"SubtractAssignChecked","pos":[0,21]}]},{"pos":[587955,587956],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[588027,588037],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[588098,588099]},{"pos":[588175,588185],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[588246,588247]},{"pos":[588317,588327],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[588402,588403],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[588954,589029],"content":"SubtractAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"SubtractAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,75]}]},{"pos":[589475,589496],"content":"SubtractAssignChecked","needQuote":true,"nodes":[{"content":"SubtractAssignChecked","pos":[0,21]}]},{"pos":[589578,589579],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[589650,589660],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[589721,589722]},{"pos":[589798,589808],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[589869,589870]},{"pos":[589940,589950],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[590026,590027]},{"pos":[590109,590125],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[590191,590192],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[590437,590458],"content":"SubtractAssignChecked","needQuote":true,"nodes":[{"content":"SubtractAssignChecked","pos":[0,21]}]},{"pos":[590540,590541],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[590612,590622],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[590683,590684]},{"pos":[590760,590770],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[590831,590832]},{"pos":[590902,590912],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[590988,590989]},{"pos":[591071,591087],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[591153,591154],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[591689,591728],"content":"SubtractChecked(Expression, Expression)","needQuote":true,"nodes":[{"content":"SubtractChecked(Expression, Expression)","pos":[0,39]}]},{"pos":[592020,592035],"content":"SubtractChecked","needQuote":true,"nodes":[{"content":"SubtractChecked","pos":[0,15]}]},{"pos":[592111,592112],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[592183,592193],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[592254,592255]},{"pos":[592331,592341],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[592401,592402],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[592571,592586],"content":"SubtractChecked","needQuote":true,"nodes":[{"content":"SubtractChecked","pos":[0,15]}]},{"pos":[592662,592663],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[592734,592744],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[592805,592806]},{"pos":[592882,592892],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[592952,592953],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[593404,593455],"content":"SubtractChecked(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"SubtractChecked(Expression, Expression, MethodInfo)","pos":[0,51]}]},{"pos":[593806,593821],"content":"SubtractChecked","needQuote":true,"nodes":[{"content":"SubtractChecked","pos":[0,15]}]},{"pos":[593897,593898],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[593969,593979],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[594040,594041]},{"pos":[594117,594127],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[594188,594189]},{"pos":[594259,594269],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[594344,594345],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[594543,594558],"content":"SubtractChecked","needQuote":true,"nodes":[{"content":"SubtractChecked","pos":[0,15]}]},{"pos":[594634,594635],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[594706,594716],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[594777,594778]},{"pos":[594854,594864],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[594925,594926]},{"pos":[594996,595006],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[595081,595082],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[595574,595618],"content":"Switch(Expression, Expression, SwitchCase[])","needQuote":true,"nodes":[{"content":"Switch(Expression, Expression, SwitchCase[])","pos":[0,44]}]},{"pos":[596190,596196],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[596263,596264],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[596335,596345],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[596406,596407]},{"pos":[596483,596493],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[596554,596555]},{"pos":[596631,596641],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"content":"[]","pos":[596702,596704]},{"pos":[596735,596736],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[596933,596939],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[597006,597007],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[597078,597088],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[597149,597150]},{"pos":[597226,597236],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[597297,597298]},{"pos":[597374,597384],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[597444,597446],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[597474,597475],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[598100,598167],"content":"Switch(Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)","needQuote":true,"nodes":[{"content":"Switch(Expression, Expression, MethodInfo, IEnumerable&lt;SwitchCase&gt;)","pos":[0,67],"source":"Switch(Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)"}]},{"pos":[598971,598977],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[599044,599045],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[599116,599126],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[599187,599188]},{"pos":[599264,599274],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[599335,599336]},{"pos":[599406,599416],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[599492,599493]},{"pos":[599575,599586],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[599671,599672],"content":"<","needQuote":true,"nodes":[]},{"pos":[599743,599753],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[599845,599846],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[600110,600116],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[600183,600184],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[600255,600265],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[600326,600327]},{"pos":[600403,600413],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[600474,600475]},{"pos":[600545,600555],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[600631,600632]},{"pos":[600714,600725],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[600811,600814]},{"pos":[600892,600902],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[600962,600963],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[600990,600991],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[601694,601750],"content":"Switch(Expression, Expression, MethodInfo, SwitchCase[])","needQuote":true,"nodes":[{"content":"Switch(Expression, Expression, MethodInfo, SwitchCase[])","pos":[0,56]}]},{"pos":[602423,602429],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[602496,602497],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[602568,602578],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[602639,602640]},{"pos":[602716,602726],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[602787,602788]},{"pos":[602858,602868],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[602944,602945]},{"pos":[603021,603031],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"content":"[]","pos":[603092,603094]},{"pos":[603125,603126],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[603352,603358],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[603425,603426],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[603497,603507],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[603568,603569]},{"pos":[603645,603655],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[603716,603717]},{"pos":[603787,603797],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[603873,603874]},{"pos":[603950,603960],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[604020,604022],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[604050,604051],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[604628,604660],"content":"Switch(Expression, SwitchCase[])","needQuote":true,"nodes":[{"content":"Switch(Expression, SwitchCase[])","pos":[0,32]}]},{"pos":[605113,605119],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[605186,605187],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[605258,605268],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[605329,605330]},{"pos":[605406,605416],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"content":"[]","pos":[605477,605479]},{"pos":[605510,605511],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[605673,605679],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[605746,605747],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[605818,605828],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[605889,605890]},{"pos":[605966,605976],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[606036,606038],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[606066,606067],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[606645,606718],"content":"Switch(Type, Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)","needQuote":true,"nodes":[{"content":"Switch(Type, Expression, Expression, MethodInfo, IEnumerable&lt;SwitchCase&gt;)","pos":[0,73],"source":"Switch(Type, Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)"}]},{"pos":[607566,607572],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[607639,607640],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[607688,607692],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[607751,607752]},{"pos":[607828,607838],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[607899,607900]},{"pos":[607976,607986],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[608047,608048]},{"pos":[608118,608128],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[608204,608205]},{"pos":[608287,608298],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[608383,608384],"content":"<","needQuote":true,"nodes":[]},{"pos":[608455,608465],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[608557,608558],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[608834,608840],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[608907,608908],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[608956,608960],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[609019,609020]},{"pos":[609096,609106],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[609167,609168]},{"pos":[609244,609254],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[609315,609316]},{"pos":[609386,609396],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[609472,609473]},{"pos":[609555,609566],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[609652,609655]},{"pos":[609733,609743],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[609803,609804],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[609831,609832],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[610571,610633],"content":"Switch(Type, Expression, Expression, MethodInfo, SwitchCase[])","needQuote":true,"nodes":[{"content":"Switch(Type, Expression, Expression, MethodInfo, SwitchCase[])","pos":[0,62]}]},{"pos":[611350,611356],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[611423,611424],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[611472,611476],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[611535,611536]},{"pos":[611612,611622],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[611683,611684]},{"pos":[611760,611770],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[611831,611832]},{"pos":[611902,611912],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[611988,611989]},{"pos":[612065,612075],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"content":"[]","pos":[612136,612138]},{"pos":[612169,612170],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[612408,612414],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[612481,612482],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[612530,612534],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[612593,612594]},{"pos":[612670,612680],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[612741,612742]},{"pos":[612818,612828],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[612889,612890]},{"pos":[612960,612970],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[613046,613047]},{"pos":[613123,613133],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[613193,613195],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[613223,613224],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[613866,613913],"content":"SwitchCase(Expression, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"SwitchCase(Expression, IEnumerable&lt;Expression&gt;)","pos":[0,47],"source":"SwitchCase(Expression, IEnumerable<Expression>)"}]},{"pos":[614513,614523],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[614594,614595],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[614666,614676],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[614737,614738]},{"pos":[614820,614831],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[614916,614917],"content":"<","needQuote":true,"nodes":[]},{"pos":[614988,614998],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[615090,615091],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[615295,615305],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[615376,615377],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[615448,615458],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[615519,615520]},{"pos":[615602,615613],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[615699,615702]},{"pos":[615780,615790],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[615850,615851],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[615878,615879],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[616423,616459],"content":"SwitchCase(Expression, Expression[])","needQuote":true,"nodes":[{"content":"SwitchCase(Expression, Expression[])","pos":[0,36]}]},{"pos":[616928,616938],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[617009,617010],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[617081,617091],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[617152,617153]},{"pos":[617229,617239],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[617300,617302]},{"pos":[617333,617334],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[617500,617510],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[617581,617582],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[617653,617663],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[617724,617725]},{"pos":[617801,617811],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[617871,617873],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[617901,617902],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[618328,618350],"content":"SymbolDocument(String)","needQuote":true,"nodes":[{"content":"SymbolDocument(String)","pos":[0,22]}]},{"pos":[618527,618541],"content":"SymbolDocument","needQuote":true,"nodes":[{"content":"SymbolDocument","pos":[0,14]}]},{"pos":[618616,618617],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[618667,618673],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[618733,618734],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[618846,618860],"content":"SymbolDocument","needQuote":true,"nodes":[{"content":"SymbolDocument","pos":[0,14]}]},{"pos":[618935,618936],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[618986,618992],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[619052,619053],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[619356,619384],"content":"SymbolDocument(String, Guid)","needQuote":true,"nodes":[{"content":"SymbolDocument(String, Guid)","pos":[0,28]}]},{"pos":[619586,619600],"content":"SymbolDocument","needQuote":true,"nodes":[{"content":"SymbolDocument","pos":[0,14]}]},{"pos":[619675,619676],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[619726,619732],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[619793,619794]},{"pos":[619847,619851],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[619909,619910],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[620034,620048],"content":"SymbolDocument","needQuote":true,"nodes":[{"content":"SymbolDocument","pos":[0,14]}]},{"pos":[620123,620124],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[620174,620180],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[620241,620242]},{"pos":[620295,620299],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[620357,620358],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[620691,620725],"content":"SymbolDocument(String, Guid, Guid)","needQuote":true,"nodes":[{"content":"SymbolDocument(String, Guid, Guid)","pos":[0,34]}]},{"pos":[620952,620966],"content":"SymbolDocument","needQuote":true,"nodes":[{"content":"SymbolDocument","pos":[0,14]}]},{"pos":[621041,621042],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[621092,621098],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[621159,621160]},{"pos":[621213,621217],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[621276,621277]},{"pos":[621330,621334],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[621392,621393],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[621529,621543],"content":"SymbolDocument","needQuote":true,"nodes":[{"content":"SymbolDocument","pos":[0,14]}]},{"pos":[621618,621619],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[621669,621675],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[621736,621737]},{"pos":[621790,621794],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[621853,621854]},{"pos":[621907,621911],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[621969,621970],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[622333,622373],"content":"SymbolDocument(String, Guid, Guid, Guid)","needQuote":true,"nodes":[{"content":"SymbolDocument(String, Guid, Guid, Guid)","pos":[0,40]}]},{"pos":[622625,622639],"content":"SymbolDocument","needQuote":true,"nodes":[{"content":"SymbolDocument","pos":[0,14]}]},{"pos":[622714,622715],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[622765,622771],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[622832,622833]},{"pos":[622886,622890],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[622949,622950]},{"pos":[623003,623007],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[623066,623067]},{"pos":[623120,623124],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[623182,623183],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[623331,623345],"content":"SymbolDocument","needQuote":true,"nodes":[{"content":"SymbolDocument","pos":[0,14]}]},{"pos":[623420,623421],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[623471,623477],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[623538,623539]},{"pos":[623592,623596],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[623655,623656]},{"pos":[623709,623713],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[623772,623773]},{"pos":[623826,623830],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[623888,623889],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[624247,624264],"content":"Throw(Expression)","needQuote":true,"nodes":[{"content":"Throw(Expression)","pos":[0,17]}]},{"pos":[624465,624470],"content":"Throw","needQuote":true,"nodes":[{"content":"Throw","pos":[0,5]}]},{"pos":[624536,624537],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[624608,624618],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[624678,624679],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[624803,624808],"content":"Throw","needQuote":true,"nodes":[{"content":"Throw","pos":[0,5]}]},{"pos":[624874,624875],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[624946,624956],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[625016,625017],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[625339,625362],"content":"Throw(Expression, Type)","needQuote":true,"nodes":[{"content":"Throw(Expression, Type)","pos":[0,23]}]},{"pos":[625588,625593],"content":"Throw","needQuote":true,"nodes":[{"content":"Throw","pos":[0,5]}]},{"pos":[625659,625660],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[625731,625741],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[625802,625803]},{"pos":[625856,625860],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[625918,625919],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[626055,626060],"content":"Throw","needQuote":true,"nodes":[{"content":"Throw","pos":[0,5]}]},{"pos":[626126,626127],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[626198,626208],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[626269,626270]},{"pos":[626323,626327],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[626385,626386],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[626682,626692],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[626829,626837],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[626906,626907],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[626934,626935],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[627026,627034],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[627103,627104],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[627131,627132],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[627443,627477],"content":"TryCatch(Expression, CatchBlock[])","needQuote":true,"nodes":[{"content":"TryCatch(Expression, CatchBlock[])","pos":[0,34]}]},{"pos":[627938,627946],"content":"TryCatch","needQuote":true,"nodes":[{"content":"TryCatch","pos":[0,8]}]},{"pos":[628015,628016],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[628087,628097],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[628158,628159]},{"pos":[628235,628245],"content":"CatchBlock","needQuote":true,"nodes":[{"content":"CatchBlock","pos":[0,10]}]},{"content":"[]","pos":[628306,628308]},{"pos":[628339,628340],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[628504,628512],"content":"TryCatch","needQuote":true,"nodes":[{"content":"TryCatch","pos":[0,8]}]},{"pos":[628581,628582],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[628653,628663],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[628724,628725]},{"pos":[628801,628811],"content":"CatchBlock","needQuote":true,"nodes":[{"content":"CatchBlock","pos":[0,10]}]},{"pos":[628871,628873],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[628901,628902],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[629417,629470],"content":"TryCatchFinally(Expression, Expression, CatchBlock[])","needQuote":true,"nodes":[{"content":"TryCatchFinally(Expression, Expression, CatchBlock[])","pos":[0,53]}]},{"pos":[630078,630093],"content":"TryCatchFinally","needQuote":true,"nodes":[{"content":"TryCatchFinally","pos":[0,15]}]},{"pos":[630169,630170],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[630241,630251],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[630312,630313]},{"pos":[630389,630399],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[630460,630461]},{"pos":[630537,630547],"content":"CatchBlock","needQuote":true,"nodes":[{"content":"CatchBlock","pos":[0,10]}]},{"content":"[]","pos":[630608,630610]},{"pos":[630641,630642],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[630848,630863],"content":"TryCatchFinally","needQuote":true,"nodes":[{"content":"TryCatchFinally","pos":[0,15]}]},{"pos":[630939,630940],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[631011,631021],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[631082,631083]},{"pos":[631159,631169],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[631230,631231]},{"pos":[631307,631317],"content":"CatchBlock","needQuote":true,"nodes":[{"content":"CatchBlock","pos":[0,10]}]},{"pos":[631377,631379],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[631407,631408],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[631959,631991],"content":"TryFault(Expression, Expression)","needQuote":true,"nodes":[{"content":"TryFault(Expression, Expression)","pos":[0,32]}]},{"pos":[632269,632277],"content":"TryFault","needQuote":true,"nodes":[{"content":"TryFault","pos":[0,8]}]},{"pos":[632346,632347],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[632418,632428],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[632489,632490]},{"pos":[632566,632576],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[632636,632637],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[632799,632807],"content":"TryFault","needQuote":true,"nodes":[{"content":"TryFault","pos":[0,8]}]},{"pos":[632876,632877],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[632948,632958],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[633019,633020]},{"pos":[633096,633106],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[633166,633167],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[633571,633605],"content":"TryFinally(Expression, Expression)","needQuote":true,"nodes":[{"content":"TryFinally(Expression, Expression)","pos":[0,34]}]},{"pos":[633887,633897],"content":"TryFinally","needQuote":true,"nodes":[{"content":"TryFinally","pos":[0,10]}]},{"pos":[633968,633969],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[634040,634050],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[634111,634112]},{"pos":[634188,634198],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[634258,634259],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[634423,634433],"content":"TryFinally","needQuote":true,"nodes":[{"content":"TryFinally","pos":[0,10]}]},{"pos":[634504,634505],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[634576,634586],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[634647,634648]},{"pos":[634724,634734],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[634794,634795],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[635165,635195],"content":"TryGetActionType(Type[], Type)","needQuote":true,"nodes":[{"content":"TryGetActionType(Type[], Type)","pos":[0,30]}]},{"pos":[635539,635555],"content":"TryGetActionType","needQuote":true,"nodes":[{"content":"TryGetActionType","pos":[0,16]}]},{"pos":[635632,635633],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[635681,635685],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[635744,635746]},{"content":",","pos":[635778,635779]},{"pos":[635832,635836],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[635894,635895],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[636022,636038],"content":"TryGetActionType","needQuote":true,"nodes":[{"content":"TryGetActionType","pos":[0,16]}]},{"pos":[636115,636116],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[636164,636168],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[636226,636228],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[636257,636258]},{"pos":[636311,636315],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[636373,636374],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[636762,636790],"content":"TryGetFuncType(Type[], Type)","needQuote":true,"nodes":[{"content":"TryGetFuncType(Type[], Type)","pos":[0,28]}]},{"pos":[637126,637140],"content":"TryGetFuncType","needQuote":true,"nodes":[{"content":"TryGetFuncType","pos":[0,14]}]},{"pos":[637215,637216],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[637264,637268],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[637327,637329]},{"content":",","pos":[637361,637362]},{"pos":[637415,637419],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[637477,637478],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[637603,637617],"content":"TryGetFuncType","needQuote":true,"nodes":[{"content":"TryGetFuncType","pos":[0,14]}]},{"pos":[637692,637693],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[637741,637745],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[637803,637805],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[637834,637835]},{"pos":[637888,637892],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[637950,637951],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[638345,638369],"content":"TypeAs(Expression, Type)","needQuote":true,"nodes":[{"content":"TypeAs(Expression, Type)","pos":[0,24]}]},{"pos":[638597,638603],"content":"TypeAs","needQuote":true,"nodes":[{"content":"TypeAs","pos":[0,6]}]},{"pos":[638670,638671],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[638742,638752],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[638813,638814]},{"pos":[638867,638871],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[638929,638930],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[639067,639073],"content":"TypeAs","needQuote":true,"nodes":[{"content":"TypeAs","pos":[0,6]}]},{"pos":[639140,639141],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[639212,639222],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[639283,639284]},{"pos":[639337,639341],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[639399,639400],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[639746,639773],"content":"TypeEqual(Expression, Type)","needQuote":true,"nodes":[{"content":"TypeEqual(Expression, Type)","pos":[0,27]}]},{"pos":[640007,640016],"content":"TypeEqual","needQuote":true,"nodes":[{"content":"TypeEqual","pos":[0,9]}]},{"pos":[640086,640087],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[640158,640168],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[640229,640230]},{"pos":[640283,640287],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[640345,640346],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[640486,640495],"content":"TypeEqual","needQuote":true,"nodes":[{"content":"TypeEqual","pos":[0,9]}]},{"pos":[640565,640566],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[640637,640647],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[640708,640709]},{"pos":[640762,640766],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[640824,640825],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[641174,641198],"content":"TypeIs(Expression, Type)","needQuote":true,"nodes":[{"content":"TypeIs(Expression, Type)","pos":[0,24]}]},{"pos":[641426,641432],"content":"TypeIs","needQuote":true,"nodes":[{"content":"TypeIs","pos":[0,6]}]},{"pos":[641499,641500],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[641571,641581],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[641642,641643]},{"pos":[641696,641700],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[641758,641759],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[641896,641902],"content":"TypeIs","needQuote":true,"nodes":[{"content":"TypeIs","pos":[0,6]}]},{"pos":[641969,641970],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[642041,642051],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[642112,642113]},{"pos":[642166,642170],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[642228,642229],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[642564,642585],"content":"UnaryPlus(Expression)","needQuote":true,"nodes":[{"content":"UnaryPlus(Expression)","pos":[0,21]}]},{"pos":[642794,642803],"content":"UnaryPlus","needQuote":true,"nodes":[{"content":"UnaryPlus","pos":[0,9]}]},{"pos":[642873,642874],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[642945,642955],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[643015,643016],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[643144,643153],"content":"UnaryPlus","needQuote":true,"nodes":[{"content":"UnaryPlus","pos":[0,9]}]},{"pos":[643223,643224],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[643295,643305],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[643365,643366],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[643717,643750],"content":"UnaryPlus(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"UnaryPlus(Expression, MethodInfo)","pos":[0,33]}]},{"pos":[644018,644027],"content":"UnaryPlus","needQuote":true,"nodes":[{"content":"UnaryPlus","pos":[0,9]}]},{"pos":[644097,644098],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[644169,644179],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[644240,644241]},{"pos":[644311,644321],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[644396,644397],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[644554,644563],"content":"UnaryPlus","needQuote":true,"nodes":[{"content":"UnaryPlus","pos":[0,9]}]},{"pos":[644633,644634],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[644705,644715],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[644776,644777]},{"pos":[644847,644857],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[644932,644933],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[645304,645327],"content":"Unbox(Expression, Type)","needQuote":true,"nodes":[{"content":"Unbox(Expression, Type)","pos":[0,23]}]},{"pos":[645553,645558],"content":"Unbox","needQuote":true,"nodes":[{"content":"Unbox","pos":[0,5]}]},{"pos":[645624,645625],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[645696,645706],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[645767,645768]},{"pos":[645821,645825],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[645883,645884],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[646020,646025],"content":"Unbox","needQuote":true,"nodes":[{"content":"Unbox","pos":[0,5]}]},{"pos":[646091,646092],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[646163,646173],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[646234,646235]},{"pos":[646288,646292],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[646350,646351],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[646659,646673],"content":"Variable(Type)","needQuote":true,"nodes":[{"content":"Variable(Type)","pos":[0,14]}]},{"pos":[646834,646842],"content":"Variable","needQuote":true,"nodes":[{"content":"Variable","pos":[0,8]}]},{"pos":[646911,646912],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[646960,646964],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[647022,647023],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[647127,647135],"content":"Variable","needQuote":true,"nodes":[{"content":"Variable","pos":[0,8]}]},{"pos":[647204,647205],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[647253,647257],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[647315,647316],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[647597,647619],"content":"Variable(Type, String)","needQuote":true,"nodes":[{"content":"Variable(Type, String)","pos":[0,22]}]},{"pos":[647809,647817],"content":"Variable","needQuote":true,"nodes":[{"content":"Variable","pos":[0,8]}]},{"pos":[647886,647887],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[647935,647939],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[647998,647999]},{"pos":[648054,648060],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[648120,648121],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[648239,648247],"content":"Variable","needQuote":true,"nodes":[{"content":"Variable","pos":[0,8]}]},{"pos":[648316,648317],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[648365,648369],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[648428,648429]},{"pos":[648484,648490],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[648550,648551],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[648876,648908],"content":"VisitChildren(ExpressionVisitor)","needQuote":true,"nodes":[{"content":"VisitChildren(ExpressionVisitor)","pos":[0,32]}]},{"pos":[649139,649152],"content":"VisitChildren","needQuote":true,"nodes":[{"content":"VisitChildren","pos":[0,13]}]},{"pos":[649226,649227],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[649305,649322],"content":"ExpressionVisitor","needQuote":true,"nodes":[{"content":"ExpressionVisitor","pos":[0,17]}]},{"pos":[649389,649390],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[649529,649542],"content":"VisitChildren","needQuote":true,"nodes":[{"content":"VisitChildren","pos":[0,13]}]},{"pos":[649616,649617],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[649695,649712],"content":"ExpressionVisitor","needQuote":true,"nodes":[{"content":"ExpressionVisitor","pos":[0,17]}]},{"pos":[649779,649780],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[650058,650072],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[650191,650197],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[650264,650265],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[650315,650321],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[650381,650382],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[650465,650471],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[650538,650539],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[650589,650595],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[650655,650656],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[650870,650892],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[651040,651046],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[651113,651114],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[651164,651170],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[651231,651232]},{"pos":[651287,651293],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[651353,651354],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[651451,651457],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[651524,651525],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[651575,651581],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[651642,651643]},{"pos":[651698,651704],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[651764,651765],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[652010,652041],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[652207,652222],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[652298,652299],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[652349,652355],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[652416,652417]},{"pos":[652472,652478],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[652538,652539],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[652645,652660],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[652736,652737],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[652787,652793],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[652854,652855]},{"pos":[652910,652916],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[652976,652977],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[653207,653220],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[653321,653332],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[653404,653405],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[653432,653433],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[653506,653517],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[653589,653590],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[653617,653618],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[653793,653802],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[653895,653902],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[653970,653971],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[653998,653999],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[654068,654075],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[654143,654144],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[654171,654172],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[654347,654364],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[654473,654488],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[654564,654565],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[654592,654593],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[654670,654685],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[654761,654762],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[654789,654790],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[654935,654941],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[655118,655136],"content":"GotoExpressionKind","needQuote":true,"nodes":[{"content":"GotoExpressionKind","pos":[0,18]}]},{"pos":[655409,655417],"content":"NodeType","needQuote":true,"nodes":[{"content":"NodeType","pos":[0,8]}]},{"pos":[655677,655691],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"pos":[655933,655944],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[656192,656196],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[656400,656404],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[656642,656667],"content":"Accept(ExpressionVisitor)","needQuote":true,"nodes":[{"content":"Accept(ExpressionVisitor)","pos":[0,25]}]},{"pos":[656884,656890],"content":"Accept","needQuote":true,"nodes":[{"content":"Accept","pos":[0,6]}]},{"pos":[656957,656958],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[657036,657053],"content":"ExpressionVisitor","needQuote":true,"nodes":[{"content":"ExpressionVisitor","pos":[0,17]}]},{"pos":[657120,657121],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[657253,657259],"content":"Accept","needQuote":true,"nodes":[{"content":"Accept","pos":[0,6]}]},{"pos":[657326,657327],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[657405,657422],"content":"ExpressionVisitor","needQuote":true,"nodes":[{"content":"ExpressionVisitor","pos":[0,17]}]},{"pos":[657489,657490],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[657771,657788],"content":"ExpressionVisitor","needQuote":true,"nodes":[{"content":"ExpressionVisitor","pos":[0,17]}]},{"pos":[658042,658056],"content":"GotoExpression","needQuote":true,"nodes":[{"content":"GotoExpression","pos":[0,14]}]}],"content":"items:\n- uid: System.Linq.Expressions.GotoExpression\n  commentId: T:System.Linq.Expressions.GotoExpression\n  id: GotoExpression\n  parent: System.Linq.Expressions\n  children:\n  - System.Linq.Expressions.GotoExpression.Accept(System.Linq.Expressions.ExpressionVisitor)\n  - System.Linq.Expressions.GotoExpression.Kind\n  - System.Linq.Expressions.GotoExpression.NodeType\n  - System.Linq.Expressions.GotoExpression.Target\n  - System.Linq.Expressions.GotoExpression.Type\n  - System.Linq.Expressions.GotoExpression.Update(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.GotoExpression.Value\n  langs:\n  - csharp\n  - vb\n  name: GotoExpression\n  fullName: System.Linq.Expressions.GotoExpression\n  type: Class\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GotoExpression\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 567\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  summary: \"\\n<p>Represents an unconditional jump. This includes return statements, break and continue statements, and other jumps.</p>\\n\"\n  syntax:\n    content: 'public sealed class GotoExpression : Expression'\n    content.vb: >-\n      Public NotInheritable Class GotoExpression\n          Inherits Expression\n  inheritance:\n  - System.Object\n  - System.Linq.Expressions.Expression\n  inheritedMembers:\n  - System.Linq.Expressions.Expression.CanReduce\n  - System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)\n  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)\n  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)\n  - System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.Constant(System.Object)\n  - System.Linq.Expressions.Expression.Constant(System.Object,System.Type)\n  - System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)\n  - System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)\n  - System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Default(System.Type)\n  - System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Empty\n  - System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)\n  - System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)\n  - System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)\n  - System.Linq.Expressions.Expression.GetActionType(System.Type[])\n  - System.Linq.Expressions.Expression.GetDelegateType(System.Type[])\n  - System.Linq.Expressions.Expression.GetFuncType(System.Type[])\n  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)\n  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)\n  - System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Label\n  - System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)\n  - System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Label(System.String)\n  - System.Linq.Expressions.Expression.Label(System.Type)\n  - System.Linq.Expressions.Expression.Label(System.Type,System.String)\n  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])\n  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])\n  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])\n  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)\n  - System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)\n  - System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)\n  - System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})\n  - System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])\n  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])\n  - System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  - System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])\n  - System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)\n  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})\n  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])\n  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.New(System.Type)\n  - System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Parameter(System.Type)\n  - System.Linq.Expressions.Expression.Parameter(System.Type,System.String)\n  - System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)\n  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)\n  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)\n  - System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)\n  - System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Reduce\n  - System.Linq.Expressions.Expression.ReduceAndCheck\n  - System.Linq.Expressions.Expression.ReduceExtensions\n  - System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Rethrow\n  - System.Linq.Expressions.Expression.Rethrow(System.Type)\n  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)\n  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)\n  - System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])\n  - System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n  - System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n  - System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n  - System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.SymbolDocument(System.String)\n  - System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)\n  - System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)\n  - System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)\n  - System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.ToString\n  - System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n  - System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n  - System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)\n  - System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)\n  - System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.Variable(System.Type)\n  - System.Linq.Expressions.Expression.Variable(System.Type,System.String)\n  - System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: GotoExpression\n- uid: System.Linq.Expressions.GotoExpression.Kind\n  commentId: P:System.Linq.Expressions.GotoExpression.Kind\n  id: Kind\n  parent: System.Linq.Expressions.GotoExpression\n  langs:\n  - csharp\n  - vb\n  name: Kind\n  fullName: System.Linq.Expressions.GotoExpression.Kind\n  type: Property\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Kind\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 570\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  summary: \"\\n<p>The kind of the \\\"go to\\\" expression. Serves information purposes only.</p>\\n\"\n  syntax:\n    content: public GotoExpressionKind Kind { get; }\n    content.vb: Public ReadOnly Property Kind As GotoExpressionKind\n    parameters: []\n    return:\n      type: System.Linq.Expressions.GotoExpressionKind\n      description: \"\\n<p>The <xref href=\\\"System.Linq.Expressions.GotoExpressionKind\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object representing the kind of the \\\"go to\\\" expression.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: GotoExpression.Kind\n- uid: System.Linq.Expressions.GotoExpression.NodeType\n  commentId: P:System.Linq.Expressions.GotoExpression.NodeType\n  id: NodeType\n  parent: System.Linq.Expressions.GotoExpression\n  langs:\n  - csharp\n  - vb\n  name: NodeType\n  fullName: System.Linq.Expressions.GotoExpression.NodeType\n  type: Property\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NodeType\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 571\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  summary: \"\\n<p>Returns the node type of this <xref href=\\\"System.Linq.Expressions.Expression\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override sealed ExpressionType NodeType { get; }\n    content.vb: Public NotOverridable Overrides ReadOnly Property NodeType As ExpressionType\n    parameters: []\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: \"\\n<p>The <xref href=\\\"System.Linq.Expressions.ExpressionType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents this expression.</p>\\n\"\n  overridden: System.Linq.Expressions.Expression.NodeType\n  modifiers.csharp:\n  - public\n  - override\n  - sealed\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - NotOverridable\n  - ReadOnly\n  nameWithType: GotoExpression.NodeType\n- uid: System.Linq.Expressions.GotoExpression.Target\n  commentId: P:System.Linq.Expressions.GotoExpression.Target\n  id: Target\n  parent: System.Linq.Expressions.GotoExpression\n  langs:\n  - csharp\n  - vb\n  name: Target\n  fullName: System.Linq.Expressions.GotoExpression.Target\n  type: Property\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Target\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 572\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  summary: \"\\n<p>The target label where this node jumps to.</p>\\n\"\n  syntax:\n    content: public LabelTarget Target { get; }\n    content.vb: Public ReadOnly Property Target As LabelTarget\n    parameters: []\n    return:\n      type: System.Linq.Expressions.LabelTarget\n      description: \"\\n<p>The <xref href=\\\"System.Linq.Expressions.LabelTarget\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object representing the target label for this node.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: GotoExpression.Target\n- uid: System.Linq.Expressions.GotoExpression.Type\n  commentId: P:System.Linq.Expressions.GotoExpression.Type\n  id: Type\n  parent: System.Linq.Expressions.GotoExpression\n  langs:\n  - csharp\n  - vb\n  name: Type\n  fullName: System.Linq.Expressions.GotoExpression.Type\n  type: Property\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Type\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 573\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  summary: \"\\n<p>Gets the static type of the expression that this <xref href=\\\"System.Linq.Expressions.Expression\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> represents.</p>\\n\"\n  syntax:\n    content: public override sealed Type Type { get; }\n    content.vb: Public NotOverridable Overrides ReadOnly Property Type As Type\n    parameters: []\n    return:\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Linq.Expressions.GotoExpression.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the static type of the expression.</p>\\n\"\n  overridden: System.Linq.Expressions.Expression.Type\n  modifiers.csharp:\n  - public\n  - override\n  - sealed\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - NotOverridable\n  - ReadOnly\n  nameWithType: GotoExpression.Type\n- uid: System.Linq.Expressions.GotoExpression.Value\n  commentId: P:System.Linq.Expressions.GotoExpression.Value\n  id: Value\n  parent: System.Linq.Expressions.GotoExpression\n  langs:\n  - csharp\n  - vb\n  name: Value\n  fullName: System.Linq.Expressions.GotoExpression.Value\n  type: Property\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Value\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 574\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  summary: \"\\n<p>The value passed to the target, or null if the target is of type System.Void.</p>\\n\"\n  syntax:\n    content: public Expression Value { get; }\n    content.vb: Public ReadOnly Property Value As Expression\n    parameters: []\n    return:\n      type: System.Linq.Expressions.Expression\n      description: \"\\n<p>The <xref href=\\\"System.Linq.Expressions.Expression\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object representing the value passed to the target or null.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: GotoExpression.Value\n- uid: System.Linq.Expressions.GotoExpression.Accept(System.Linq.Expressions.ExpressionVisitor)\n  commentId: M:System.Linq.Expressions.GotoExpression.Accept(System.Linq.Expressions.ExpressionVisitor)\n  id: Accept(System.Linq.Expressions.ExpressionVisitor)\n  parent: System.Linq.Expressions.GotoExpression\n  langs:\n  - csharp\n  - vb\n  name: Accept(ExpressionVisitor)\n  fullName: System.Linq.Expressions.GotoExpression.Accept(System.Linq.Expressions.ExpressionVisitor)\n  type: Method\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Accept\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 575\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: protected override Expression Accept(ExpressionVisitor visitor)\n    content.vb: Protected Overrides Function Accept(visitor As ExpressionVisitor) As Expression\n    parameters:\n    - id: visitor\n      type: System.Linq.Expressions.ExpressionVisitor\n    return:\n      type: System.Linq.Expressions.Expression\n  overridden: System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)\n  modifiers.csharp:\n  - protected\n  - override\n  modifiers.vb:\n  - Protected\n  - Overrides\n  nameWithType: GotoExpression.Accept(ExpressionVisitor)\n- uid: System.Linq.Expressions.GotoExpression.Update(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  commentId: M:System.Linq.Expressions.GotoExpression.Update(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  id: Update(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.GotoExpression\n  langs:\n  - csharp\n  - vb\n  name: Update(LabelTarget, Expression)\n  fullName: System.Linq.Expressions.GotoExpression.Update(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression)\n  type: Method\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Update\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 576\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  summary: \"\\n<p>Creates a new expression that is like this one, but using the supplied children. If all of the children are the same, it will return this expression.</p>\\n\"\n  syntax:\n    content: public GotoExpression Update(LabelTarget target, Expression value)\n    content.vb: Public Function Update(target As LabelTarget, value As Expression) As GotoExpression\n    parameters:\n    - id: target\n      type: System.Linq.Expressions.LabelTarget\n      description: \"\\n<p>The <xref href=\\\"System.Linq.Expressions.GotoExpression.Target\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property of the result. </p>\\n\"\n    - id: value\n      type: System.Linq.Expressions.Expression\n      description: \"\\n<p>The <xref href=\\\"System.Linq.Expressions.GotoExpression.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property of the result. </p>\\n\"\n    return:\n      type: System.Linq.Expressions.GotoExpression\n      description: \"\\n<p>This expression if no children are changed or an expression with the updated children.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: GotoExpression.Update(LabelTarget, Expression)\nreferences:\n- uid: System.Linq.Expressions\n  isExternal: false\n  name: System.Linq.Expressions\n  fullName: System.Linq.Expressions\n  commentId: N:System.Linq.Expressions\n  nameWithType: System.Linq.Expressions\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  fullName: System.Linq.Expressions.Expression\n  commentId: T:System.Linq.Expressions.Expression\n  nameWithType: Expression\n- uid: System.Linq.Expressions.Expression.CanReduce\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: CanReduce\n  fullName: System.Linq.Expressions.Expression.CanReduce\n  commentId: P:System.Linq.Expressions.Expression.CanReduce\n  nameWithType: Expression.CanReduce\n- uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Add(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Add\n    fullName: System.Linq.Expressions.Expression.Add\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Add\n    fullName: System.Linq.Expressions.Expression.Add\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Add(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Add(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Add\n    fullName: System.Linq.Expressions.Expression.Add\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Add\n    fullName: System.Linq.Expressions.Expression.Add\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Add(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: AddAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AddAssign\n    fullName: System.Linq.Expressions.Expression.AddAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AddAssign\n    fullName: System.Linq.Expressions.Expression.AddAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.AddAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: AddAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AddAssign\n    fullName: System.Linq.Expressions.Expression.AddAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AddAssign\n    fullName: System.Linq.Expressions.Expression.AddAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.AddAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: AddAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: AddAssign\n    fullName: System.Linq.Expressions.Expression.AddAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: AddAssign\n    fullName: System.Linq.Expressions.Expression.AddAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.AddAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: AddAssignChecked(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AddAssignChecked\n    fullName: System.Linq.Expressions.Expression.AddAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AddAssignChecked\n    fullName: System.Linq.Expressions.Expression.AddAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.AddAssignChecked(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: AddAssignChecked(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AddAssignChecked\n    fullName: System.Linq.Expressions.Expression.AddAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AddAssignChecked\n    fullName: System.Linq.Expressions.Expression.AddAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.AddAssignChecked(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: AddAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: AddAssignChecked\n    fullName: System.Linq.Expressions.Expression.AddAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: AddAssignChecked\n    fullName: System.Linq.Expressions.Expression.AddAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.AddAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: AddChecked(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AddChecked\n    fullName: System.Linq.Expressions.Expression.AddChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AddChecked\n    fullName: System.Linq.Expressions.Expression.AddChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.AddChecked(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: AddChecked(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AddChecked\n    fullName: System.Linq.Expressions.Expression.AddChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AddChecked\n    fullName: System.Linq.Expressions.Expression.AddChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.AddChecked(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: And(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: And\n    fullName: System.Linq.Expressions.Expression.And\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: And\n    fullName: System.Linq.Expressions.Expression.And\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.And(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: And(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: And\n    fullName: System.Linq.Expressions.Expression.And\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: And\n    fullName: System.Linq.Expressions.Expression.And\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.And(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: AndAlso(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AndAlso\n    fullName: System.Linq.Expressions.Expression.AndAlso\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AndAlso\n    fullName: System.Linq.Expressions.Expression.AndAlso\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.AndAlso(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: AndAlso(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AndAlso\n    fullName: System.Linq.Expressions.Expression.AndAlso\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AndAlso\n    fullName: System.Linq.Expressions.Expression.AndAlso\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.AndAlso(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: AndAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AndAssign\n    fullName: System.Linq.Expressions.Expression.AndAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AndAssign\n    fullName: System.Linq.Expressions.Expression.AndAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.AndAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: AndAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AndAssign\n    fullName: System.Linq.Expressions.Expression.AndAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AndAssign\n    fullName: System.Linq.Expressions.Expression.AndAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.AndAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: AndAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: AndAssign\n    fullName: System.Linq.Expressions.Expression.AndAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: AndAssign\n    fullName: System.Linq.Expressions.Expression.AndAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.AndAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ArrayAccess(Expression, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: ArrayAccess(Expression, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ArrayAccess\n    fullName: System.Linq.Expressions.Expression.ArrayAccess\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ArrayAccess\n    fullName: System.Linq.Expressions.Expression.ArrayAccess\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.ArrayAccess(Expression, IEnumerable<Expression>)\n  nameWithType.vb: Expression.ArrayAccess(Expression, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ArrayAccess(Expression, Expression[])\n  fullName: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression())\n  name.vb: ArrayAccess(Expression, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n    name: ArrayAccess\n    fullName: System.Linq.Expressions.Expression.ArrayAccess\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n    name: ArrayAccess\n    fullName: System.Linq.Expressions.Expression.ArrayAccess\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.ArrayAccess(Expression, Expression[])\n  nameWithType.vb: Expression.ArrayAccess(Expression, Expression())\n- uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ArrayIndex(Expression, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: ArrayIndex(Expression, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ArrayIndex\n    fullName: System.Linq.Expressions.Expression.ArrayIndex\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ArrayIndex\n    fullName: System.Linq.Expressions.Expression.ArrayIndex\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.ArrayIndex(Expression, IEnumerable<Expression>)\n  nameWithType.vb: Expression.ArrayIndex(Expression, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ArrayIndex(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ArrayIndex\n    fullName: System.Linq.Expressions.Expression.ArrayIndex\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ArrayIndex\n    fullName: System.Linq.Expressions.Expression.ArrayIndex\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.ArrayIndex(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ArrayIndex(Expression, Expression[])\n  fullName: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression())\n  name.vb: ArrayIndex(Expression, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n    name: ArrayIndex\n    fullName: System.Linq.Expressions.Expression.ArrayIndex\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n    name: ArrayIndex\n    fullName: System.Linq.Expressions.Expression.ArrayIndex\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.ArrayIndex(Expression, Expression[])\n  nameWithType.vb: Expression.ArrayIndex(Expression, Expression())\n- uid: System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ArrayLength(Expression)\n  fullName: System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)\n    name: ArrayLength\n    fullName: System.Linq.Expressions.Expression.ArrayLength\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)\n    name: ArrayLength\n    fullName: System.Linq.Expressions.Expression.ArrayLength\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)\n  nameWithType: Expression.ArrayLength(Expression)\n- uid: System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Assign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Assign\n    fullName: System.Linq.Expressions.Expression.Assign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Assign\n    fullName: System.Linq.Expressions.Expression.Assign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Assign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Bind(MemberInfo, Expression)\n  fullName: System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)\n    name: Bind\n    fullName: System.Linq.Expressions.Expression.Bind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)\n    name: Bind\n    fullName: System.Linq.Expressions.Expression.Bind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Bind(MemberInfo, Expression)\n- uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Bind(MethodInfo, Expression)\n  fullName: System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n    name: Bind\n    fullName: System.Linq.Expressions.Expression.Bind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n    name: Bind\n    fullName: System.Linq.Expressions.Expression.Bind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Bind(MethodInfo, Expression)\n- uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Block(IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: Block(IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.Block(IEnumerable<Expression>)\n  nameWithType.vb: Expression.Block(IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Block(IEnumerable<ParameterExpression>, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression), System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: Block(IEnumerable(Of ParameterExpression), IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.Block(IEnumerable<ParameterExpression>, IEnumerable<Expression>)\n  nameWithType.vb: Expression.Block(IEnumerable(Of ParameterExpression), IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Block(IEnumerable<ParameterExpression>, Expression[])\n  fullName: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression), System.Linq.Expressions.Expression())\n  name.vb: Block(IEnumerable(Of ParameterExpression), Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Block(IEnumerable<ParameterExpression>, Expression[])\n  nameWithType.vb: Expression.Block(IEnumerable(Of ParameterExpression), Expression())\n- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Block(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Block(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Block(Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Block(Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Block(Expression, Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Block(Expression, Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Block(Expression, Expression, Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Block(Expression, Expression, Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Block(Expression[])\n  fullName: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression())\n  name.vb: Block(Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Block(Expression[])\n  nameWithType.vb: Expression.Block(Expression())\n- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Block(Type, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: Block(Type, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.Block(Type, IEnumerable<Expression>)\n  nameWithType.vb: Expression.Block(Type, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Block(Type, IEnumerable<ParameterExpression>, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression), System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: Block(Type, IEnumerable(Of ParameterExpression), IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.Block(Type, IEnumerable<ParameterExpression>, IEnumerable<Expression>)\n  nameWithType.vb: Expression.Block(Type, IEnumerable(Of ParameterExpression), IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Block(Type, IEnumerable<ParameterExpression>, Expression[])\n  fullName: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression), System.Linq.Expressions.Expression())\n  name.vb: Block(Type, IEnumerable(Of ParameterExpression), Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Block(Type, IEnumerable<ParameterExpression>, Expression[])\n  nameWithType.vb: Expression.Block(Type, IEnumerable(Of ParameterExpression), Expression())\n- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Block(Type, Expression[])\n  fullName: System.Linq.Expressions.Expression.Block(System.Type, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Block(System.Type, System.Linq.Expressions.Expression())\n  name.vb: Block(Type, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Block(Type, Expression[])\n  nameWithType.vb: Expression.Block(Type, Expression())\n- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Break(LabelTarget)\n  fullName: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)\n    name: Break\n    fullName: System.Linq.Expressions.Expression.Break\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)\n    name: Break\n    fullName: System.Linq.Expressions.Expression.Break\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)\n  nameWithType: Expression.Break(LabelTarget)\n- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Break(LabelTarget, Expression)\n  fullName: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n    name: Break\n    fullName: System.Linq.Expressions.Expression.Break\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n    name: Break\n    fullName: System.Linq.Expressions.Expression.Break\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Break(LabelTarget, Expression)\n- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Break(LabelTarget, Expression, Type)\n  fullName: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n    name: Break\n    fullName: System.Linq.Expressions.Expression.Break\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n    name: Break\n    fullName: System.Linq.Expressions.Expression.Break\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.Break(LabelTarget, Expression, Type)\n- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Break(LabelTarget, Type)\n  fullName: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)\n    name: Break\n    fullName: System.Linq.Expressions.Expression.Break\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)\n    name: Break\n    fullName: System.Linq.Expressions.Expression.Break\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)\n  nameWithType: Expression.Break(LabelTarget, Type)\n- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Call(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(Expression, MethodInfo, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: Call(Expression, MethodInfo, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.Call(Expression, MethodInfo, IEnumerable<Expression>)\n  nameWithType.vb: Expression.Call(Expression, MethodInfo, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(Expression, MethodInfo, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Call(Expression, MethodInfo, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(Expression, MethodInfo, Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Call(Expression, MethodInfo, Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(Expression, MethodInfo, Expression[])\n  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression())\n  name.vb: Call(Expression, MethodInfo, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Call(Expression, MethodInfo, Expression[])\n  nameWithType.vb: Expression.Call(Expression, MethodInfo, Expression())\n- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(Expression, String, Type[], Expression[])\n  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.String, System.Type[], System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.String, System.Type(), System.Linq.Expressions.Expression())\n  name.vb: Call(Expression, String, Type(), Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Call(Expression, String, Type[], Expression[])\n  nameWithType.vb: Expression.Call(Expression, String, Type(), Expression())\n- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(MethodInfo, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: Call(MethodInfo, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.Call(MethodInfo, IEnumerable<Expression>)\n  nameWithType.vb: Expression.Call(MethodInfo, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(MethodInfo, Expression)\n  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Call(MethodInfo, Expression)\n- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(MethodInfo, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Call(MethodInfo, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(MethodInfo, Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Call(MethodInfo, Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(MethodInfo, Expression, Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Call(MethodInfo, Expression, Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(MethodInfo, Expression, Expression, Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Call(MethodInfo, Expression, Expression, Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(MethodInfo, Expression[])\n  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression())\n  name.vb: Call(MethodInfo, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Call(MethodInfo, Expression[])\n  nameWithType.vb: Expression.Call(MethodInfo, Expression())\n- uid: System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(Type, String, Type[], Expression[])\n  fullName: System.Linq.Expressions.Expression.Call(System.Type, System.String, System.Type[], System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Call(System.Type, System.String, System.Type(), System.Linq.Expressions.Expression())\n  name.vb: Call(Type, String, Type(), Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Call(Type, String, Type[], Expression[])\n  nameWithType.vb: Expression.Call(Type, String, Type(), Expression())\n- uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Catch(ParameterExpression, Expression)\n  fullName: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)\n    name: Catch\n    fullName: System.Linq.Expressions.Expression.Catch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)\n    name: Catch\n    fullName: System.Linq.Expressions.Expression.Catch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Catch(ParameterExpression, Expression)\n- uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Catch(ParameterExpression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Catch\n    fullName: System.Linq.Expressions.Expression.Catch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Catch\n    fullName: System.Linq.Expressions.Expression.Catch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Catch(ParameterExpression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Catch(Type, Expression)\n  fullName: System.Linq.Expressions.Expression.Catch(System.Type, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)\n    name: Catch\n    fullName: System.Linq.Expressions.Expression.Catch\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)\n    name: Catch\n    fullName: System.Linq.Expressions.Expression.Catch\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Catch(Type, Expression)\n- uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Catch(Type, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Catch(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Catch\n    fullName: System.Linq.Expressions.Expression.Catch\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Catch\n    fullName: System.Linq.Expressions.Expression.Catch\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Catch(Type, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ClearDebugInfo(SymbolDocumentInfo)\n  fullName: System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)\n    name: ClearDebugInfo\n    fullName: System.Linq.Expressions.Expression.ClearDebugInfo\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.SymbolDocumentInfo\n    name: SymbolDocumentInfo\n    fullName: System.Linq.Expressions.SymbolDocumentInfo\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)\n    name: ClearDebugInfo\n    fullName: System.Linq.Expressions.Expression.ClearDebugInfo\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.SymbolDocumentInfo\n    name: SymbolDocumentInfo\n    fullName: System.Linq.Expressions.SymbolDocumentInfo\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)\n  nameWithType: Expression.ClearDebugInfo(SymbolDocumentInfo)\n- uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Coalesce(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Coalesce\n    fullName: System.Linq.Expressions.Expression.Coalesce\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Coalesce\n    fullName: System.Linq.Expressions.Expression.Coalesce\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Coalesce(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Coalesce(Expression, Expression, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)\n    name: Coalesce\n    fullName: System.Linq.Expressions.Expression.Coalesce\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)\n    name: Coalesce\n    fullName: System.Linq.Expressions.Expression.Coalesce\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.Coalesce(Expression, Expression, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Condition(Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Condition\n    fullName: System.Linq.Expressions.Expression.Condition\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Condition\n    fullName: System.Linq.Expressions.Expression.Condition\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Condition(Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Condition(Expression, Expression, Expression, Type)\n  fullName: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)\n    name: Condition\n    fullName: System.Linq.Expressions.Expression.Condition\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)\n    name: Condition\n    fullName: System.Linq.Expressions.Expression.Condition\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.Condition(Expression, Expression, Expression, Type)\n- uid: System.Linq.Expressions.Expression.Constant(System.Object)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Constant(Object)\n  fullName: System.Linq.Expressions.Expression.Constant(System.Object)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Constant(System.Object)\n    name: Constant\n    fullName: System.Linq.Expressions.Expression.Constant\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Constant(System.Object)\n    name: Constant\n    fullName: System.Linq.Expressions.Expression.Constant\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Constant(System.Object)\n  nameWithType: Expression.Constant(Object)\n- uid: System.Linq.Expressions.Expression.Constant(System.Object,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Constant(Object, Type)\n  fullName: System.Linq.Expressions.Expression.Constant(System.Object, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Constant(System.Object,System.Type)\n    name: Constant\n    fullName: System.Linq.Expressions.Expression.Constant\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Constant(System.Object,System.Type)\n    name: Constant\n    fullName: System.Linq.Expressions.Expression.Constant\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Constant(System.Object,System.Type)\n  nameWithType: Expression.Constant(Object, Type)\n- uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Continue(LabelTarget)\n  fullName: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)\n    name: Continue\n    fullName: System.Linq.Expressions.Expression.Continue\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)\n    name: Continue\n    fullName: System.Linq.Expressions.Expression.Continue\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)\n  nameWithType: Expression.Continue(LabelTarget)\n- uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Continue(LabelTarget, Type)\n  fullName: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)\n    name: Continue\n    fullName: System.Linq.Expressions.Expression.Continue\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)\n    name: Continue\n    fullName: System.Linq.Expressions.Expression.Continue\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)\n  nameWithType: Expression.Continue(LabelTarget, Type)\n- uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Convert(Expression, Type)\n  fullName: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)\n    name: Convert\n    fullName: System.Linq.Expressions.Expression.Convert\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)\n    name: Convert\n    fullName: System.Linq.Expressions.Expression.Convert\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.Convert(Expression, Type)\n- uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Convert(Expression, Type, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n    name: Convert\n    fullName: System.Linq.Expressions.Expression.Convert\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n    name: Convert\n    fullName: System.Linq.Expressions.Expression.Convert\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  nameWithType: Expression.Convert(Expression, Type, MethodInfo)\n- uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ConvertChecked(Expression, Type)\n  fullName: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)\n    name: ConvertChecked\n    fullName: System.Linq.Expressions.Expression.ConvertChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)\n    name: ConvertChecked\n    fullName: System.Linq.Expressions.Expression.ConvertChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.ConvertChecked(Expression, Type)\n- uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ConvertChecked(Expression, Type, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression, System.Type, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n    name: ConvertChecked\n    fullName: System.Linq.Expressions.Expression.ConvertChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n    name: ConvertChecked\n    fullName: System.Linq.Expressions.Expression.ConvertChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  nameWithType: Expression.ConvertChecked(Expression, Type, MethodInfo)\n- uid: System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: DebugInfo(SymbolDocumentInfo, Int32, Int32, Int32, Int32)\n  fullName: System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo, System.Int32, System.Int32, System.Int32, System.Int32)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)\n    name: DebugInfo\n    fullName: System.Linq.Expressions.Expression.DebugInfo\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.SymbolDocumentInfo\n    name: SymbolDocumentInfo\n    fullName: System.Linq.Expressions.SymbolDocumentInfo\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)\n    name: DebugInfo\n    fullName: System.Linq.Expressions.Expression.DebugInfo\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.SymbolDocumentInfo\n    name: SymbolDocumentInfo\n    fullName: System.Linq.Expressions.SymbolDocumentInfo\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)\n  nameWithType: Expression.DebugInfo(SymbolDocumentInfo, Int32, Int32, Int32, Int32)\n- uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Decrement(Expression)\n  fullName: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)\n    name: Decrement\n    fullName: System.Linq.Expressions.Expression.Decrement\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)\n    name: Decrement\n    fullName: System.Linq.Expressions.Expression.Decrement\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)\n  nameWithType: Expression.Decrement(Expression)\n- uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Decrement(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Decrement\n    fullName: System.Linq.Expressions.Expression.Decrement\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Decrement\n    fullName: System.Linq.Expressions.Expression.Decrement\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Decrement(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Default(System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Default(Type)\n  fullName: System.Linq.Expressions.Expression.Default(System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Default(System.Type)\n    name: Default\n    fullName: System.Linq.Expressions.Expression.Default\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Default(System.Type)\n    name: Default\n    fullName: System.Linq.Expressions.Expression.Default\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Default(System.Type)\n  nameWithType: Expression.Default(Type)\n- uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Divide(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Divide\n    fullName: System.Linq.Expressions.Expression.Divide\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Divide\n    fullName: System.Linq.Expressions.Expression.Divide\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Divide(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Divide(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Divide\n    fullName: System.Linq.Expressions.Expression.Divide\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Divide\n    fullName: System.Linq.Expressions.Expression.Divide\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Divide(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: DivideAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: DivideAssign\n    fullName: System.Linq.Expressions.Expression.DivideAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: DivideAssign\n    fullName: System.Linq.Expressions.Expression.DivideAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.DivideAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: DivideAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: DivideAssign\n    fullName: System.Linq.Expressions.Expression.DivideAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: DivideAssign\n    fullName: System.Linq.Expressions.Expression.DivideAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.DivideAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: DivideAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: DivideAssign\n    fullName: System.Linq.Expressions.Expression.DivideAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: DivideAssign\n    fullName: System.Linq.Expressions.Expression.DivideAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.DivideAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ElementInit(MethodInfo, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: ElementInit(MethodInfo, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ElementInit\n    fullName: System.Linq.Expressions.Expression.ElementInit\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ElementInit\n    fullName: System.Linq.Expressions.Expression.ElementInit\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.ElementInit(MethodInfo, IEnumerable<Expression>)\n  nameWithType.vb: Expression.ElementInit(MethodInfo, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ElementInit(MethodInfo, Expression[])\n  fullName: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo, System.Linq.Expressions.Expression())\n  name.vb: ElementInit(MethodInfo, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n    name: ElementInit\n    fullName: System.Linq.Expressions.Expression.ElementInit\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n    name: ElementInit\n    fullName: System.Linq.Expressions.Expression.ElementInit\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.ElementInit(MethodInfo, Expression[])\n  nameWithType.vb: Expression.ElementInit(MethodInfo, Expression())\n- uid: System.Linq.Expressions.Expression.Empty\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Empty()\n  fullName: System.Linq.Expressions.Expression.Empty()\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Empty\n    name: Empty\n    fullName: System.Linq.Expressions.Expression.Empty\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Empty\n    name: Empty\n    fullName: System.Linq.Expressions.Expression.Empty\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Empty\n  nameWithType: Expression.Empty()\n- uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Equal(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Equal\n    fullName: System.Linq.Expressions.Expression.Equal\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Equal\n    fullName: System.Linq.Expressions.Expression.Equal\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Equal(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Equal(Expression, Expression, Boolean, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: Equal\n    fullName: System.Linq.Expressions.Expression.Equal\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: Equal\n    fullName: System.Linq.Expressions.Expression.Equal\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  nameWithType: Expression.Equal(Expression, Expression, Boolean, MethodInfo)\n- uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ExclusiveOr(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ExclusiveOr\n    fullName: System.Linq.Expressions.Expression.ExclusiveOr\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ExclusiveOr\n    fullName: System.Linq.Expressions.Expression.ExclusiveOr\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.ExclusiveOr(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ExclusiveOr(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: ExclusiveOr\n    fullName: System.Linq.Expressions.Expression.ExclusiveOr\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: ExclusiveOr\n    fullName: System.Linq.Expressions.Expression.ExclusiveOr\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.ExclusiveOr(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ExclusiveOrAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ExclusiveOrAssign\n    fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ExclusiveOrAssign\n    fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.ExclusiveOrAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ExclusiveOrAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: ExclusiveOrAssign\n    fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: ExclusiveOrAssign\n    fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.ExclusiveOrAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ExclusiveOrAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: ExclusiveOrAssign\n    fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: ExclusiveOrAssign\n    fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.ExclusiveOrAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Field(Expression, FieldInfo)\n  fullName: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression, System.Reflection.FieldInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)\n    name: Field\n    fullName: System.Linq.Expressions.Expression.Field\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.FieldInfo\n    name: FieldInfo\n    fullName: System.Reflection.FieldInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)\n    name: Field\n    fullName: System.Linq.Expressions.Expression.Field\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.FieldInfo\n    name: FieldInfo\n    fullName: System.Reflection.FieldInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)\n  nameWithType: Expression.Field(Expression, FieldInfo)\n- uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Field(Expression, String)\n  fullName: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression, System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)\n    name: Field\n    fullName: System.Linq.Expressions.Expression.Field\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)\n    name: Field\n    fullName: System.Linq.Expressions.Expression.Field\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)\n  nameWithType: Expression.Field(Expression, String)\n- uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Field(Expression, Type, String)\n  fullName: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression, System.Type, System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)\n    name: Field\n    fullName: System.Linq.Expressions.Expression.Field\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)\n    name: Field\n    fullName: System.Linq.Expressions.Expression.Field\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)\n  nameWithType: Expression.Field(Expression, Type, String)\n- uid: System.Linq.Expressions.Expression.GetActionType(System.Type[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: GetActionType(Type[])\n  fullName: System.Linq.Expressions.Expression.GetActionType(System.Type[])\n  fullname.vb: System.Linq.Expressions.Expression.GetActionType(System.Type())\n  name.vb: GetActionType(Type())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.GetActionType(System.Type[])\n    name: GetActionType\n    fullName: System.Linq.Expressions.Expression.GetActionType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.GetActionType(System.Type[])\n    name: GetActionType\n    fullName: System.Linq.Expressions.Expression.GetActionType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.GetActionType(System.Type[])\n  nameWithType: Expression.GetActionType(Type[])\n  nameWithType.vb: Expression.GetActionType(Type())\n- uid: System.Linq.Expressions.Expression.GetDelegateType(System.Type[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: GetDelegateType(Type[])\n  fullName: System.Linq.Expressions.Expression.GetDelegateType(System.Type[])\n  fullname.vb: System.Linq.Expressions.Expression.GetDelegateType(System.Type())\n  name.vb: GetDelegateType(Type())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.GetDelegateType(System.Type[])\n    name: GetDelegateType\n    fullName: System.Linq.Expressions.Expression.GetDelegateType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.GetDelegateType(System.Type[])\n    name: GetDelegateType\n    fullName: System.Linq.Expressions.Expression.GetDelegateType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.GetDelegateType(System.Type[])\n  nameWithType: Expression.GetDelegateType(Type[])\n  nameWithType.vb: Expression.GetDelegateType(Type())\n- uid: System.Linq.Expressions.Expression.GetFuncType(System.Type[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: GetFuncType(Type[])\n  fullName: System.Linq.Expressions.Expression.GetFuncType(System.Type[])\n  fullname.vb: System.Linq.Expressions.Expression.GetFuncType(System.Type())\n  name.vb: GetFuncType(Type())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.GetFuncType(System.Type[])\n    name: GetFuncType\n    fullName: System.Linq.Expressions.Expression.GetFuncType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.GetFuncType(System.Type[])\n    name: GetFuncType\n    fullName: System.Linq.Expressions.Expression.GetFuncType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.GetFuncType(System.Type[])\n  nameWithType: Expression.GetFuncType(Type[])\n  nameWithType.vb: Expression.GetFuncType(Type())\n- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Goto(LabelTarget)\n  fullName: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)\n    name: Goto\n    fullName: System.Linq.Expressions.Expression.Goto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)\n    name: Goto\n    fullName: System.Linq.Expressions.Expression.Goto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)\n  nameWithType: Expression.Goto(LabelTarget)\n- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Goto(LabelTarget, Expression)\n  fullName: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n    name: Goto\n    fullName: System.Linq.Expressions.Expression.Goto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n    name: Goto\n    fullName: System.Linq.Expressions.Expression.Goto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Goto(LabelTarget, Expression)\n- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Goto(LabelTarget, Expression, Type)\n  fullName: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n    name: Goto\n    fullName: System.Linq.Expressions.Expression.Goto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n    name: Goto\n    fullName: System.Linq.Expressions.Expression.Goto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.Goto(LabelTarget, Expression, Type)\n- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Goto(LabelTarget, Type)\n  fullName: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)\n    name: Goto\n    fullName: System.Linq.Expressions.Expression.Goto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)\n    name: Goto\n    fullName: System.Linq.Expressions.Expression.Goto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)\n  nameWithType: Expression.Goto(LabelTarget, Type)\n- uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: GreaterThan(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: GreaterThan\n    fullName: System.Linq.Expressions.Expression.GreaterThan\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: GreaterThan\n    fullName: System.Linq.Expressions.Expression.GreaterThan\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.GreaterThan(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: GreaterThan(Expression, Expression, Boolean, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: GreaterThan\n    fullName: System.Linq.Expressions.Expression.GreaterThan\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: GreaterThan\n    fullName: System.Linq.Expressions.Expression.GreaterThan\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  nameWithType: Expression.GreaterThan(Expression, Expression, Boolean, MethodInfo)\n- uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: GreaterThanOrEqual(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: GreaterThanOrEqual\n    fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: GreaterThanOrEqual\n    fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.GreaterThanOrEqual(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: GreaterThanOrEqual(Expression, Expression, Boolean, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: GreaterThanOrEqual\n    fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: GreaterThanOrEqual\n    fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  nameWithType: Expression.GreaterThanOrEqual(Expression, Expression, Boolean, MethodInfo)\n- uid: System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: IfThen(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: IfThen\n    fullName: System.Linq.Expressions.Expression.IfThen\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: IfThen\n    fullName: System.Linq.Expressions.Expression.IfThen\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.IfThen(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: IfThenElse(Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: IfThenElse\n    fullName: System.Linq.Expressions.Expression.IfThenElse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: IfThenElse\n    fullName: System.Linq.Expressions.Expression.IfThenElse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.IfThenElse(Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Increment(Expression)\n  fullName: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)\n    name: Increment\n    fullName: System.Linq.Expressions.Expression.Increment\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)\n    name: Increment\n    fullName: System.Linq.Expressions.Expression.Increment\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)\n  nameWithType: Expression.Increment(Expression)\n- uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Increment(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Increment\n    fullName: System.Linq.Expressions.Expression.Increment\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Increment\n    fullName: System.Linq.Expressions.Expression.Increment\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Increment(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Invoke(Expression, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: Invoke(Expression, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Invoke\n    fullName: System.Linq.Expressions.Expression.Invoke\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Invoke\n    fullName: System.Linq.Expressions.Expression.Invoke\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.Invoke(Expression, IEnumerable<Expression>)\n  nameWithType.vb: Expression.Invoke(Expression, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Invoke(Expression, Expression[])\n  fullName: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression())\n  name.vb: Invoke(Expression, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n    name: Invoke\n    fullName: System.Linq.Expressions.Expression.Invoke\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n    name: Invoke\n    fullName: System.Linq.Expressions.Expression.Invoke\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Invoke(Expression, Expression[])\n  nameWithType.vb: Expression.Invoke(Expression, Expression())\n- uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: IsFalse(Expression)\n  fullName: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)\n    name: IsFalse\n    fullName: System.Linq.Expressions.Expression.IsFalse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)\n    name: IsFalse\n    fullName: System.Linq.Expressions.Expression.IsFalse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)\n  nameWithType: Expression.IsFalse(Expression)\n- uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: IsFalse(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: IsFalse\n    fullName: System.Linq.Expressions.Expression.IsFalse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: IsFalse\n    fullName: System.Linq.Expressions.Expression.IsFalse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.IsFalse(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: IsTrue(Expression)\n  fullName: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)\n    name: IsTrue\n    fullName: System.Linq.Expressions.Expression.IsTrue\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)\n    name: IsTrue\n    fullName: System.Linq.Expressions.Expression.IsTrue\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)\n  nameWithType: Expression.IsTrue(Expression)\n- uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: IsTrue(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: IsTrue\n    fullName: System.Linq.Expressions.Expression.IsTrue\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: IsTrue\n    fullName: System.Linq.Expressions.Expression.IsTrue\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.IsTrue(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Label\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Label()\n  fullName: System.Linq.Expressions.Expression.Label()\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Label\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Label\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Label\n  nameWithType: Expression.Label()\n- uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Label(LabelTarget)\n  fullName: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)\n  nameWithType: Expression.Label(LabelTarget)\n- uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Label(LabelTarget, Expression)\n  fullName: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Label(LabelTarget, Expression)\n- uid: System.Linq.Expressions.Expression.Label(System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Label(String)\n  fullName: System.Linq.Expressions.Expression.Label(System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Label(System.String)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Label(System.String)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Label(System.String)\n  nameWithType: Expression.Label(String)\n- uid: System.Linq.Expressions.Expression.Label(System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Label(Type)\n  fullName: System.Linq.Expressions.Expression.Label(System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Label(System.Type)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Label(System.Type)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Label(System.Type)\n  nameWithType: Expression.Label(Type)\n- uid: System.Linq.Expressions.Expression.Label(System.Type,System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Label(Type, String)\n  fullName: System.Linq.Expressions.Expression.Label(System.Type, System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Label(System.Type,System.String)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Label(System.Type,System.String)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Label(System.Type,System.String)\n  nameWithType: Expression.Label(Type, String)\n- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Expression, Boolean, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Boolean, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Expression, Boolean, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda(Expression, Boolean, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Expression, Boolean, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Expression, Boolean, ParameterExpression[])\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Boolean, System.Linq.Expressions.ParameterExpression[])\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Boolean, System.Linq.Expressions.ParameterExpression())\n  name.vb: Lambda(Expression, Boolean, ParameterExpression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  nameWithType: Expression.Lambda(Expression, Boolean, ParameterExpression[])\n  nameWithType.vb: Expression.Lambda(Expression, Boolean, ParameterExpression())\n- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Expression, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Expression, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda(Expression, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Expression, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Lambda(Expression, ParameterExpression[])\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression[])\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression())\n  name.vb: Lambda(Expression, ParameterExpression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  nameWithType: Expression.Lambda(Expression, ParameterExpression[])\n  nameWithType.vb: Expression.Lambda(Expression, ParameterExpression())\n- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Expression, String, Boolean, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.String, System.Boolean, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.String, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Expression, String, Boolean, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda(Expression, String, Boolean, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Expression, String, Boolean, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Expression, String, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.String, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.String, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Expression, String, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda(Expression, String, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Expression, String, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Type, Expression, Boolean, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Boolean, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Type, Expression, Boolean, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda(Type, Expression, Boolean, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Type, Expression, Boolean, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Type, Expression, Boolean, ParameterExpression[])\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Boolean, System.Linq.Expressions.ParameterExpression[])\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Boolean, System.Linq.Expressions.ParameterExpression())\n  name.vb: Lambda(Type, Expression, Boolean, ParameterExpression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  nameWithType: Expression.Lambda(Type, Expression, Boolean, ParameterExpression[])\n  nameWithType.vb: Expression.Lambda(Type, Expression, Boolean, ParameterExpression())\n- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Type, Expression, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Type, Expression, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda(Type, Expression, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Type, Expression, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Type, Expression, ParameterExpression[])\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression[])\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression())\n  name.vb: Lambda(Type, Expression, ParameterExpression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  nameWithType: Expression.Lambda(Type, Expression, ParameterExpression[])\n  nameWithType.vb: Expression.Lambda(Type, Expression, ParameterExpression())\n- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Type, Expression, String, Boolean, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.String, System.Boolean, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.String, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Type, Expression, String, Boolean, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda(Type, Expression, String, Boolean, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Type, Expression, String, Boolean, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Type, Expression, String, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.String, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.String, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Type, Expression, String, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda(Type, Expression, String, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Type, Expression, String, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda<TDelegate>(Expression, Boolean, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, System.Boolean, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(Of TDelegate)(System.Linq.Expressions.Expression, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Of TDelegate)(Expression, Boolean, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda<TDelegate>\n    fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda(Of TDelegate)\n    fullName: System.Linq.Expressions.Expression.Lambda(Of TDelegate)\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda<TDelegate>(Expression, Boolean, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Of TDelegate)(Expression, Boolean, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda<TDelegate>(Expression, Boolean, ParameterExpression[])\n  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, System.Boolean, System.Linq.Expressions.ParameterExpression[])\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(Of TDelegate)(System.Linq.Expressions.Expression, System.Boolean, System.Linq.Expressions.ParameterExpression())\n  name.vb: Lambda(Of TDelegate)(Expression, Boolean, ParameterExpression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda<TDelegate>\n    fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda(Of TDelegate)\n    fullName: System.Linq.Expressions.Expression.Lambda(Of TDelegate)\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  nameWithType: Expression.Lambda<TDelegate>(Expression, Boolean, ParameterExpression[])\n  nameWithType.vb: Expression.Lambda(Of TDelegate)(Expression, Boolean, ParameterExpression())\n- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda<TDelegate>(Expression, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(Of TDelegate)(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Of TDelegate)(Expression, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda<TDelegate>\n    fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda(Of TDelegate)\n    fullName: System.Linq.Expressions.Expression.Lambda(Of TDelegate)\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda<TDelegate>(Expression, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Of TDelegate)(Expression, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Lambda<TDelegate>(Expression, ParameterExpression[])\n  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression[])\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(Of TDelegate)(System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression())\n  name.vb: Lambda(Of TDelegate)(Expression, ParameterExpression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda<TDelegate>\n    fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda(Of TDelegate)\n    fullName: System.Linq.Expressions.Expression.Lambda(Of TDelegate)\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  nameWithType: Expression.Lambda<TDelegate>(Expression, ParameterExpression[])\n  nameWithType.vb: Expression.Lambda(Of TDelegate)(Expression, ParameterExpression())\n- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda<TDelegate>(Expression, String, Boolean, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, System.String, System.Boolean, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(Of TDelegate)(System.Linq.Expressions.Expression, System.String, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Of TDelegate)(Expression, String, Boolean, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda<TDelegate>\n    fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda(Of TDelegate)\n    fullName: System.Linq.Expressions.Expression.Lambda(Of TDelegate)\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda<TDelegate>(Expression, String, Boolean, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Of TDelegate)(Expression, String, Boolean, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda<TDelegate>(Expression, String, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, System.String, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(Of TDelegate)(System.Linq.Expressions.Expression, System.String, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Of TDelegate)(Expression, String, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda<TDelegate>\n    fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda(Of TDelegate)\n    fullName: System.Linq.Expressions.Expression.Lambda(Of TDelegate)\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda<TDelegate>(Expression, String, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Of TDelegate)(Expression, String, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: LeftShift(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: LeftShift\n    fullName: System.Linq.Expressions.Expression.LeftShift\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: LeftShift\n    fullName: System.Linq.Expressions.Expression.LeftShift\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.LeftShift(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: LeftShift(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: LeftShift\n    fullName: System.Linq.Expressions.Expression.LeftShift\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: LeftShift\n    fullName: System.Linq.Expressions.Expression.LeftShift\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.LeftShift(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: LeftShiftAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: LeftShiftAssign\n    fullName: System.Linq.Expressions.Expression.LeftShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: LeftShiftAssign\n    fullName: System.Linq.Expressions.Expression.LeftShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.LeftShiftAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: LeftShiftAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: LeftShiftAssign\n    fullName: System.Linq.Expressions.Expression.LeftShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: LeftShiftAssign\n    fullName: System.Linq.Expressions.Expression.LeftShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.LeftShiftAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: LeftShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: LeftShiftAssign\n    fullName: System.Linq.Expressions.Expression.LeftShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: LeftShiftAssign\n    fullName: System.Linq.Expressions.Expression.LeftShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.LeftShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: LessThan(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: LessThan\n    fullName: System.Linq.Expressions.Expression.LessThan\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: LessThan\n    fullName: System.Linq.Expressions.Expression.LessThan\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.LessThan(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: LessThan(Expression, Expression, Boolean, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: LessThan\n    fullName: System.Linq.Expressions.Expression.LessThan\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: LessThan\n    fullName: System.Linq.Expressions.Expression.LessThan\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  nameWithType: Expression.LessThan(Expression, Expression, Boolean, MethodInfo)\n- uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: LessThanOrEqual(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: LessThanOrEqual\n    fullName: System.Linq.Expressions.Expression.LessThanOrEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: LessThanOrEqual\n    fullName: System.Linq.Expressions.Expression.LessThanOrEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.LessThanOrEqual(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: LessThanOrEqual(Expression, Expression, Boolean, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: LessThanOrEqual\n    fullName: System.Linq.Expressions.Expression.LessThanOrEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: LessThanOrEqual\n    fullName: System.Linq.Expressions.Expression.LessThanOrEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  nameWithType: Expression.LessThanOrEqual(Expression, Expression, Boolean, MethodInfo)\n- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ListBind(MemberInfo, IEnumerable<ElementInit>)\n  fullName: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ElementInit>)\n  fullname.vb: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ElementInit))\n  name.vb: ListBind(MemberInfo, IEnumerable(Of ElementInit))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n    name: ListBind\n    fullName: System.Linq.Expressions.Expression.ListBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n    name: ListBind\n    fullName: System.Linq.Expressions.Expression.ListBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  nameWithType: Expression.ListBind(MemberInfo, IEnumerable<ElementInit>)\n  nameWithType.vb: Expression.ListBind(MemberInfo, IEnumerable(Of ElementInit))\n- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ListBind(MemberInfo, ElementInit[])\n  fullName: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo, System.Linq.Expressions.ElementInit[])\n  fullname.vb: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo, System.Linq.Expressions.ElementInit())\n  name.vb: ListBind(MemberInfo, ElementInit())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])\n    name: ListBind\n    fullName: System.Linq.Expressions.Expression.ListBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])\n    name: ListBind\n    fullName: System.Linq.Expressions.Expression.ListBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])\n  nameWithType: Expression.ListBind(MemberInfo, ElementInit[])\n  nameWithType.vb: Expression.ListBind(MemberInfo, ElementInit())\n- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ListBind(MethodInfo, IEnumerable<ElementInit>)\n  fullName: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ElementInit>)\n  fullname.vb: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ElementInit))\n  name.vb: ListBind(MethodInfo, IEnumerable(Of ElementInit))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n    name: ListBind\n    fullName: System.Linq.Expressions.Expression.ListBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n    name: ListBind\n    fullName: System.Linq.Expressions.Expression.ListBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  nameWithType: Expression.ListBind(MethodInfo, IEnumerable<ElementInit>)\n  nameWithType.vb: Expression.ListBind(MethodInfo, IEnumerable(Of ElementInit))\n- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ListBind(MethodInfo, ElementInit[])\n  fullName: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo, System.Linq.Expressions.ElementInit[])\n  fullname.vb: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo, System.Linq.Expressions.ElementInit())\n  name.vb: ListBind(MethodInfo, ElementInit())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])\n    name: ListBind\n    fullName: System.Linq.Expressions.Expression.ListBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])\n    name: ListBind\n    fullName: System.Linq.Expressions.Expression.ListBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])\n  nameWithType: Expression.ListBind(MethodInfo, ElementInit[])\n  nameWithType.vb: Expression.ListBind(MethodInfo, ElementInit())\n- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ListInit(NewExpression, IEnumerable<ElementInit>)\n  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ElementInit>)\n  fullname.vb: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ElementInit))\n  name.vb: ListInit(NewExpression, IEnumerable(Of ElementInit))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  nameWithType: Expression.ListInit(NewExpression, IEnumerable<ElementInit>)\n  nameWithType.vb: Expression.ListInit(NewExpression, IEnumerable(Of ElementInit))\n- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ListInit(NewExpression, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: ListInit(NewExpression, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.ListInit(NewExpression, IEnumerable<Expression>)\n  nameWithType.vb: Expression.ListInit(NewExpression, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ListInit(NewExpression, ElementInit[])\n  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.ElementInit[])\n  fullname.vb: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.ElementInit())\n  name.vb: ListInit(NewExpression, ElementInit())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])\n  nameWithType: Expression.ListInit(NewExpression, ElementInit[])\n  nameWithType.vb: Expression.ListInit(NewExpression, ElementInit())\n- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ListInit(NewExpression, Expression[])\n  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.Expression())\n  name.vb: ListInit(NewExpression, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.ListInit(NewExpression, Expression[])\n  nameWithType.vb: Expression.ListInit(NewExpression, Expression())\n- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ListInit(NewExpression, MethodInfo, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: ListInit(NewExpression, MethodInfo, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.ListInit(NewExpression, MethodInfo, IEnumerable<Expression>)\n  nameWithType.vb: Expression.ListInit(NewExpression, MethodInfo, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ListInit(NewExpression, MethodInfo, Expression[])\n  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression())\n  name.vb: ListInit(NewExpression, MethodInfo, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.ListInit(NewExpression, MethodInfo, Expression[])\n  nameWithType.vb: Expression.ListInit(NewExpression, MethodInfo, Expression())\n- uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Loop(Expression)\n  fullName: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)\n    name: Loop\n    fullName: System.Linq.Expressions.Expression.Loop\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)\n    name: Loop\n    fullName: System.Linq.Expressions.Expression.Loop\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)\n  nameWithType: Expression.Loop(Expression)\n- uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Loop(Expression, LabelTarget)\n  fullName: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression, System.Linq.Expressions.LabelTarget)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)\n    name: Loop\n    fullName: System.Linq.Expressions.Expression.Loop\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)\n    name: Loop\n    fullName: System.Linq.Expressions.Expression.Loop\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)\n  nameWithType: Expression.Loop(Expression, LabelTarget)\n- uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Loop(Expression, LabelTarget, LabelTarget)\n  fullName: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression, System.Linq.Expressions.LabelTarget, System.Linq.Expressions.LabelTarget)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)\n    name: Loop\n    fullName: System.Linq.Expressions.Expression.Loop\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)\n    name: Loop\n    fullName: System.Linq.Expressions.Expression.Loop\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)\n  nameWithType: Expression.Loop(Expression, LabelTarget, LabelTarget)\n- uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: MakeBinary(ExpressionType, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MakeBinary\n    fullName: System.Linq.Expressions.Expression.MakeBinary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MakeBinary\n    fullName: System.Linq.Expressions.Expression.MakeBinary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.MakeBinary(ExpressionType, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: MakeBinary\n    fullName: System.Linq.Expressions.Expression.MakeBinary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: MakeBinary\n    fullName: System.Linq.Expressions.Expression.MakeBinary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  nameWithType: Expression.MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo)\n- uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: MakeBinary\n    fullName: System.Linq.Expressions.Expression.MakeBinary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: MakeBinary\n    fullName: System.Linq.Expressions.Expression.MakeBinary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeCatchBlock(Type, ParameterExpression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.MakeCatchBlock(System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MakeCatchBlock\n    fullName: System.Linq.Expressions.Expression.MakeCatchBlock\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MakeCatchBlock\n    fullName: System.Linq.Expressions.Expression.MakeCatchBlock\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.MakeCatchBlock(Type, ParameterExpression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeGoto(GotoExpressionKind, LabelTarget, Expression, Type)\n  fullName: System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind, System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n    name: MakeGoto\n    fullName: System.Linq.Expressions.Expression.MakeGoto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.GotoExpressionKind\n    name: GotoExpressionKind\n    fullName: System.Linq.Expressions.GotoExpressionKind\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n    name: MakeGoto\n    fullName: System.Linq.Expressions.Expression.MakeGoto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.GotoExpressionKind\n    name: GotoExpressionKind\n    fullName: System.Linq.Expressions.GotoExpressionKind\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.MakeGoto(GotoExpressionKind, LabelTarget, Expression, Type)\n- uid: System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeIndex(Expression, PropertyInfo, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: MakeIndex(Expression, PropertyInfo, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: MakeIndex\n    fullName: System.Linq.Expressions.Expression.MakeIndex\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: MakeIndex\n    fullName: System.Linq.Expressions.Expression.MakeIndex\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.MakeIndex(Expression, PropertyInfo, IEnumerable<Expression>)\n  nameWithType.vb: Expression.MakeIndex(Expression, PropertyInfo, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeMemberAccess(Expression, MemberInfo)\n  fullName: System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression, System.Reflection.MemberInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)\n    name: MakeMemberAccess\n    fullName: System.Linq.Expressions.Expression.MakeMemberAccess\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)\n    name: MakeMemberAccess\n    fullName: System.Linq.Expressions.Expression.MakeMemberAccess\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)\n  nameWithType: Expression.MakeMemberAccess(Expression, MemberInfo)\n- uid: System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeTry(Type, Expression, Expression, Expression, IEnumerable<CatchBlock>)\n  fullName: System.Linq.Expressions.Expression.MakeTry(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.CatchBlock>)\n  fullname.vb: System.Linq.Expressions.Expression.MakeTry(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.CatchBlock))\n  name.vb: MakeTry(Type, Expression, Expression, Expression, IEnumerable(Of CatchBlock))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})\n    name: MakeTry\n    fullName: System.Linq.Expressions.Expression.MakeTry\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.CatchBlock\n    name: CatchBlock\n    fullName: System.Linq.Expressions.CatchBlock\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})\n    name: MakeTry\n    fullName: System.Linq.Expressions.Expression.MakeTry\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.CatchBlock\n    name: CatchBlock\n    fullName: System.Linq.Expressions.CatchBlock\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})\n  nameWithType: Expression.MakeTry(Type, Expression, Expression, Expression, IEnumerable<CatchBlock>)\n  nameWithType.vb: Expression.MakeTry(Type, Expression, Expression, Expression, IEnumerable(Of CatchBlock))\n- uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeUnary(ExpressionType, Expression, Type)\n  fullName: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)\n    name: MakeUnary\n    fullName: System.Linq.Expressions.Expression.MakeUnary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)\n    name: MakeUnary\n    fullName: System.Linq.Expressions.Expression.MakeUnary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.MakeUnary(ExpressionType, Expression, Type)\n- uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeUnary(ExpressionType, Expression, Type, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Type, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n    name: MakeUnary\n    fullName: System.Linq.Expressions.Expression.MakeUnary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n    name: MakeUnary\n    fullName: System.Linq.Expressions.Expression.MakeUnary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  nameWithType: Expression.MakeUnary(ExpressionType, Expression, Type, MethodInfo)\n- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MemberBind(MemberInfo, IEnumerable<MemberBinding>)\n  fullName: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.MemberBinding>)\n  fullname.vb: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.MemberBinding))\n  name.vb: MemberBind(MemberInfo, IEnumerable(Of MemberBinding))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n    name: MemberBind\n    fullName: System.Linq.Expressions.Expression.MemberBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n    name: MemberBind\n    fullName: System.Linq.Expressions.Expression.MemberBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  nameWithType: Expression.MemberBind(MemberInfo, IEnumerable<MemberBinding>)\n  nameWithType.vb: Expression.MemberBind(MemberInfo, IEnumerable(Of MemberBinding))\n- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MemberBind(MemberInfo, MemberBinding[])\n  fullName: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo, System.Linq.Expressions.MemberBinding[])\n  fullname.vb: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo, System.Linq.Expressions.MemberBinding())\n  name.vb: MemberBind(MemberInfo, MemberBinding())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])\n    name: MemberBind\n    fullName: System.Linq.Expressions.Expression.MemberBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])\n    name: MemberBind\n    fullName: System.Linq.Expressions.Expression.MemberBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])\n  nameWithType: Expression.MemberBind(MemberInfo, MemberBinding[])\n  nameWithType.vb: Expression.MemberBind(MemberInfo, MemberBinding())\n- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MemberBind(MethodInfo, IEnumerable<MemberBinding>)\n  fullName: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.MemberBinding>)\n  fullname.vb: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.MemberBinding))\n  name.vb: MemberBind(MethodInfo, IEnumerable(Of MemberBinding))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n    name: MemberBind\n    fullName: System.Linq.Expressions.Expression.MemberBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n    name: MemberBind\n    fullName: System.Linq.Expressions.Expression.MemberBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  nameWithType: Expression.MemberBind(MethodInfo, IEnumerable<MemberBinding>)\n  nameWithType.vb: Expression.MemberBind(MethodInfo, IEnumerable(Of MemberBinding))\n- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MemberBind(MethodInfo, MemberBinding[])\n  fullName: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo, System.Linq.Expressions.MemberBinding[])\n  fullname.vb: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo, System.Linq.Expressions.MemberBinding())\n  name.vb: MemberBind(MethodInfo, MemberBinding())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])\n    name: MemberBind\n    fullName: System.Linq.Expressions.Expression.MemberBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])\n    name: MemberBind\n    fullName: System.Linq.Expressions.Expression.MemberBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])\n  nameWithType: Expression.MemberBind(MethodInfo, MemberBinding[])\n  nameWithType.vb: Expression.MemberBind(MethodInfo, MemberBinding())\n- uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MemberInit(NewExpression, IEnumerable<MemberBinding>)\n  fullName: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.MemberBinding>)\n  fullname.vb: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.MemberBinding))\n  name.vb: MemberInit(NewExpression, IEnumerable(Of MemberBinding))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n    name: MemberInit\n    fullName: System.Linq.Expressions.Expression.MemberInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n    name: MemberInit\n    fullName: System.Linq.Expressions.Expression.MemberInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  nameWithType: Expression.MemberInit(NewExpression, IEnumerable<MemberBinding>)\n  nameWithType.vb: Expression.MemberInit(NewExpression, IEnumerable(Of MemberBinding))\n- uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: MemberInit(NewExpression, MemberBinding[])\n  fullName: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.MemberBinding[])\n  fullname.vb: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.MemberBinding())\n  name.vb: MemberInit(NewExpression, MemberBinding())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])\n    name: MemberInit\n    fullName: System.Linq.Expressions.Expression.MemberInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])\n    name: MemberInit\n    fullName: System.Linq.Expressions.Expression.MemberInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])\n  nameWithType: Expression.MemberInit(NewExpression, MemberBinding[])\n  nameWithType.vb: Expression.MemberInit(NewExpression, MemberBinding())\n- uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Modulo(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Modulo\n    fullName: System.Linq.Expressions.Expression.Modulo\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Modulo\n    fullName: System.Linq.Expressions.Expression.Modulo\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Modulo(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Modulo(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Modulo\n    fullName: System.Linq.Expressions.Expression.Modulo\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Modulo\n    fullName: System.Linq.Expressions.Expression.Modulo\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Modulo(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ModuloAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ModuloAssign\n    fullName: System.Linq.Expressions.Expression.ModuloAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ModuloAssign\n    fullName: System.Linq.Expressions.Expression.ModuloAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.ModuloAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ModuloAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: ModuloAssign\n    fullName: System.Linq.Expressions.Expression.ModuloAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: ModuloAssign\n    fullName: System.Linq.Expressions.Expression.ModuloAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.ModuloAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ModuloAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: ModuloAssign\n    fullName: System.Linq.Expressions.Expression.ModuloAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: ModuloAssign\n    fullName: System.Linq.Expressions.Expression.ModuloAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.ModuloAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Multiply(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Multiply\n    fullName: System.Linq.Expressions.Expression.Multiply\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Multiply\n    fullName: System.Linq.Expressions.Expression.Multiply\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Multiply(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Multiply(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Multiply\n    fullName: System.Linq.Expressions.Expression.Multiply\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Multiply\n    fullName: System.Linq.Expressions.Expression.Multiply\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Multiply(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: MultiplyAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MultiplyAssign\n    fullName: System.Linq.Expressions.Expression.MultiplyAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MultiplyAssign\n    fullName: System.Linq.Expressions.Expression.MultiplyAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.MultiplyAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MultiplyAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: MultiplyAssign\n    fullName: System.Linq.Expressions.Expression.MultiplyAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: MultiplyAssign\n    fullName: System.Linq.Expressions.Expression.MultiplyAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.MultiplyAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MultiplyAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: MultiplyAssign\n    fullName: System.Linq.Expressions.Expression.MultiplyAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: MultiplyAssign\n    fullName: System.Linq.Expressions.Expression.MultiplyAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.MultiplyAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: MultiplyAssignChecked(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MultiplyAssignChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MultiplyAssignChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.MultiplyAssignChecked(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MultiplyAssignChecked(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: MultiplyAssignChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: MultiplyAssignChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.MultiplyAssignChecked(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MultiplyAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: MultiplyAssignChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: MultiplyAssignChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.MultiplyAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: MultiplyChecked(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MultiplyChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MultiplyChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.MultiplyChecked(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MultiplyChecked(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: MultiplyChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: MultiplyChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.MultiplyChecked(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Negate(Expression)\n  fullName: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)\n    name: Negate\n    fullName: System.Linq.Expressions.Expression.Negate\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)\n    name: Negate\n    fullName: System.Linq.Expressions.Expression.Negate\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)\n  nameWithType: Expression.Negate(Expression)\n- uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Negate(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Negate\n    fullName: System.Linq.Expressions.Expression.Negate\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Negate\n    fullName: System.Linq.Expressions.Expression.Negate\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Negate(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: NegateChecked(Expression)\n  fullName: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)\n    name: NegateChecked\n    fullName: System.Linq.Expressions.Expression.NegateChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)\n    name: NegateChecked\n    fullName: System.Linq.Expressions.Expression.NegateChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)\n  nameWithType: Expression.NegateChecked(Expression)\n- uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: NegateChecked(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: NegateChecked\n    fullName: System.Linq.Expressions.Expression.NegateChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: NegateChecked\n    fullName: System.Linq.Expressions.Expression.NegateChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.NegateChecked(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: New(ConstructorInfo)\n  fullName: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)\n  nameWithType: Expression.New(ConstructorInfo)\n- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: New(ConstructorInfo, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: New(ConstructorInfo, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.New(ConstructorInfo, IEnumerable<Expression>)\n  nameWithType.vb: Expression.New(ConstructorInfo, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: New(ConstructorInfo, IEnumerable<Expression>, IEnumerable<MemberInfo>)\n  fullName: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>, System.Collections.Generic.IEnumerable<System.Reflection.MemberInfo>)\n  fullname.vb: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression), System.Collections.Generic.IEnumerable(Of System.Reflection.MemberInfo))\n  name.vb: New(ConstructorInfo, IEnumerable(Of Expression), IEnumerable(Of MemberInfo))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})\n  nameWithType: Expression.New(ConstructorInfo, IEnumerable<Expression>, IEnumerable<MemberInfo>)\n  nameWithType.vb: Expression.New(ConstructorInfo, IEnumerable(Of Expression), IEnumerable(Of MemberInfo))\n- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: New(ConstructorInfo, IEnumerable<Expression>, MemberInfo[])\n  fullName: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>, System.Reflection.MemberInfo[])\n  fullname.vb: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression), System.Reflection.MemberInfo())\n  name.vb: New(ConstructorInfo, IEnumerable(Of Expression), MemberInfo())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])\n  nameWithType: Expression.New(ConstructorInfo, IEnumerable<Expression>, MemberInfo[])\n  nameWithType.vb: Expression.New(ConstructorInfo, IEnumerable(Of Expression), MemberInfo())\n- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: New(ConstructorInfo, Expression[])\n  fullName: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Linq.Expressions.Expression())\n  name.vb: New(ConstructorInfo, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.New(ConstructorInfo, Expression[])\n  nameWithType.vb: Expression.New(ConstructorInfo, Expression())\n- uid: System.Linq.Expressions.Expression.New(System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: New(Type)\n  fullName: System.Linq.Expressions.Expression.New(System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.New(System.Type)\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.New(System.Type)\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.New(System.Type)\n  nameWithType: Expression.New(Type)\n- uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: NewArrayBounds(Type, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.NewArrayBounds(System.Type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.NewArrayBounds(System.Type, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: NewArrayBounds(Type, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: NewArrayBounds\n    fullName: System.Linq.Expressions.Expression.NewArrayBounds\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: NewArrayBounds\n    fullName: System.Linq.Expressions.Expression.NewArrayBounds\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.NewArrayBounds(Type, IEnumerable<Expression>)\n  nameWithType.vb: Expression.NewArrayBounds(Type, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: NewArrayBounds(Type, Expression[])\n  fullName: System.Linq.Expressions.Expression.NewArrayBounds(System.Type, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.NewArrayBounds(System.Type, System.Linq.Expressions.Expression())\n  name.vb: NewArrayBounds(Type, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])\n    name: NewArrayBounds\n    fullName: System.Linq.Expressions.Expression.NewArrayBounds\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])\n    name: NewArrayBounds\n    fullName: System.Linq.Expressions.Expression.NewArrayBounds\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.NewArrayBounds(Type, Expression[])\n  nameWithType.vb: Expression.NewArrayBounds(Type, Expression())\n- uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: NewArrayInit(Type, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.NewArrayInit(System.Type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.NewArrayInit(System.Type, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: NewArrayInit(Type, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: NewArrayInit\n    fullName: System.Linq.Expressions.Expression.NewArrayInit\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: NewArrayInit\n    fullName: System.Linq.Expressions.Expression.NewArrayInit\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.NewArrayInit(Type, IEnumerable<Expression>)\n  nameWithType.vb: Expression.NewArrayInit(Type, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: NewArrayInit(Type, Expression[])\n  fullName: System.Linq.Expressions.Expression.NewArrayInit(System.Type, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.NewArrayInit(System.Type, System.Linq.Expressions.Expression())\n  name.vb: NewArrayInit(Type, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])\n    name: NewArrayInit\n    fullName: System.Linq.Expressions.Expression.NewArrayInit\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])\n    name: NewArrayInit\n    fullName: System.Linq.Expressions.Expression.NewArrayInit\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.NewArrayInit(Type, Expression[])\n  nameWithType.vb: Expression.NewArrayInit(Type, Expression())\n- uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Not(Expression)\n  fullName: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)\n    name: Not\n    fullName: System.Linq.Expressions.Expression.Not\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)\n    name: Not\n    fullName: System.Linq.Expressions.Expression.Not\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)\n  nameWithType: Expression.Not(Expression)\n- uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Not(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Not\n    fullName: System.Linq.Expressions.Expression.Not\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Not\n    fullName: System.Linq.Expressions.Expression.Not\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Not(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: NotEqual(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: NotEqual\n    fullName: System.Linq.Expressions.Expression.NotEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: NotEqual\n    fullName: System.Linq.Expressions.Expression.NotEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.NotEqual(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: NotEqual(Expression, Expression, Boolean, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: NotEqual\n    fullName: System.Linq.Expressions.Expression.NotEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: NotEqual\n    fullName: System.Linq.Expressions.Expression.NotEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  nameWithType: Expression.NotEqual(Expression, Expression, Boolean, MethodInfo)\n- uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: OnesComplement(Expression)\n  fullName: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)\n    name: OnesComplement\n    fullName: System.Linq.Expressions.Expression.OnesComplement\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)\n    name: OnesComplement\n    fullName: System.Linq.Expressions.Expression.OnesComplement\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)\n  nameWithType: Expression.OnesComplement(Expression)\n- uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: OnesComplement(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: OnesComplement\n    fullName: System.Linq.Expressions.Expression.OnesComplement\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: OnesComplement\n    fullName: System.Linq.Expressions.Expression.OnesComplement\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.OnesComplement(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Or(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Or\n    fullName: System.Linq.Expressions.Expression.Or\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Or\n    fullName: System.Linq.Expressions.Expression.Or\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Or(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Or(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Or\n    fullName: System.Linq.Expressions.Expression.Or\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Or\n    fullName: System.Linq.Expressions.Expression.Or\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Or(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: OrAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: OrAssign\n    fullName: System.Linq.Expressions.Expression.OrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: OrAssign\n    fullName: System.Linq.Expressions.Expression.OrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.OrAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: OrAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: OrAssign\n    fullName: System.Linq.Expressions.Expression.OrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: OrAssign\n    fullName: System.Linq.Expressions.Expression.OrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.OrAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: OrAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: OrAssign\n    fullName: System.Linq.Expressions.Expression.OrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: OrAssign\n    fullName: System.Linq.Expressions.Expression.OrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.OrAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: OrElse(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: OrElse\n    fullName: System.Linq.Expressions.Expression.OrElse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: OrElse\n    fullName: System.Linq.Expressions.Expression.OrElse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.OrElse(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: OrElse(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: OrElse\n    fullName: System.Linq.Expressions.Expression.OrElse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: OrElse\n    fullName: System.Linq.Expressions.Expression.OrElse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.OrElse(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Parameter(System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Parameter(Type)\n  fullName: System.Linq.Expressions.Expression.Parameter(System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Parameter(System.Type)\n    name: Parameter\n    fullName: System.Linq.Expressions.Expression.Parameter\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Parameter(System.Type)\n    name: Parameter\n    fullName: System.Linq.Expressions.Expression.Parameter\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Parameter(System.Type)\n  nameWithType: Expression.Parameter(Type)\n- uid: System.Linq.Expressions.Expression.Parameter(System.Type,System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Parameter(Type, String)\n  fullName: System.Linq.Expressions.Expression.Parameter(System.Type, System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Parameter(System.Type,System.String)\n    name: Parameter\n    fullName: System.Linq.Expressions.Expression.Parameter\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Parameter(System.Type,System.String)\n    name: Parameter\n    fullName: System.Linq.Expressions.Expression.Parameter\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Parameter(System.Type,System.String)\n  nameWithType: Expression.Parameter(Type, String)\n- uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: PostDecrementAssign(Expression)\n  fullName: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)\n    name: PostDecrementAssign\n    fullName: System.Linq.Expressions.Expression.PostDecrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)\n    name: PostDecrementAssign\n    fullName: System.Linq.Expressions.Expression.PostDecrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)\n  nameWithType: Expression.PostDecrementAssign(Expression)\n- uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: PostDecrementAssign(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PostDecrementAssign\n    fullName: System.Linq.Expressions.Expression.PostDecrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PostDecrementAssign\n    fullName: System.Linq.Expressions.Expression.PostDecrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.PostDecrementAssign(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: PostIncrementAssign(Expression)\n  fullName: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)\n    name: PostIncrementAssign\n    fullName: System.Linq.Expressions.Expression.PostIncrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)\n    name: PostIncrementAssign\n    fullName: System.Linq.Expressions.Expression.PostIncrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)\n  nameWithType: Expression.PostIncrementAssign(Expression)\n- uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: PostIncrementAssign(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PostIncrementAssign\n    fullName: System.Linq.Expressions.Expression.PostIncrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PostIncrementAssign\n    fullName: System.Linq.Expressions.Expression.PostIncrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.PostIncrementAssign(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Power(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Power\n    fullName: System.Linq.Expressions.Expression.Power\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Power\n    fullName: System.Linq.Expressions.Expression.Power\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Power(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Power(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Power\n    fullName: System.Linq.Expressions.Expression.Power\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Power\n    fullName: System.Linq.Expressions.Expression.Power\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Power(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: PowerAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: PowerAssign\n    fullName: System.Linq.Expressions.Expression.PowerAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: PowerAssign\n    fullName: System.Linq.Expressions.Expression.PowerAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.PowerAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: PowerAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PowerAssign\n    fullName: System.Linq.Expressions.Expression.PowerAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PowerAssign\n    fullName: System.Linq.Expressions.Expression.PowerAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.PowerAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: PowerAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: PowerAssign\n    fullName: System.Linq.Expressions.Expression.PowerAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: PowerAssign\n    fullName: System.Linq.Expressions.Expression.PowerAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.PowerAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: PreDecrementAssign(Expression)\n  fullName: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)\n    name: PreDecrementAssign\n    fullName: System.Linq.Expressions.Expression.PreDecrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)\n    name: PreDecrementAssign\n    fullName: System.Linq.Expressions.Expression.PreDecrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)\n  nameWithType: Expression.PreDecrementAssign(Expression)\n- uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: PreDecrementAssign(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PreDecrementAssign\n    fullName: System.Linq.Expressions.Expression.PreDecrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PreDecrementAssign\n    fullName: System.Linq.Expressions.Expression.PreDecrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.PreDecrementAssign(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: PreIncrementAssign(Expression)\n  fullName: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)\n    name: PreIncrementAssign\n    fullName: System.Linq.Expressions.Expression.PreIncrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)\n    name: PreIncrementAssign\n    fullName: System.Linq.Expressions.Expression.PreIncrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)\n  nameWithType: Expression.PreIncrementAssign(Expression)\n- uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: PreIncrementAssign(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PreIncrementAssign\n    fullName: System.Linq.Expressions.Expression.PreIncrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PreIncrementAssign\n    fullName: System.Linq.Expressions.Expression.PreIncrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.PreIncrementAssign(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Property(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Property(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Property(Expression, PropertyInfo)\n  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)\n  nameWithType: Expression.Property(Expression, PropertyInfo)\n- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Property(Expression, PropertyInfo, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: Property(Expression, PropertyInfo, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.Property(Expression, PropertyInfo, IEnumerable<Expression>)\n  nameWithType.vb: Expression.Property(Expression, PropertyInfo, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Property(Expression, PropertyInfo, Expression[])\n  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Linq.Expressions.Expression())\n  name.vb: Property(Expression, PropertyInfo, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Property(Expression, PropertyInfo, Expression[])\n  nameWithType.vb: Expression.Property(Expression, PropertyInfo, Expression())\n- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Property(Expression, String)\n  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)\n  nameWithType: Expression.Property(Expression, String)\n- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Property(Expression, String, Expression[])\n  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.String, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.String, System.Linq.Expressions.Expression())\n  name.vb: Property(Expression, String, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Property(Expression, String, Expression[])\n  nameWithType.vb: Expression.Property(Expression, String, Expression())\n- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Property(Expression, Type, String)\n  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Type, System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)\n  nameWithType: Expression.Property(Expression, Type, String)\n- uid: System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: PropertyOrField(Expression, String)\n  fullName: System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression, System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)\n    name: PropertyOrField\n    fullName: System.Linq.Expressions.Expression.PropertyOrField\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)\n    name: PropertyOrField\n    fullName: System.Linq.Expressions.Expression.PropertyOrField\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)\n  nameWithType: Expression.PropertyOrField(Expression, String)\n- uid: System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Quote(Expression)\n  fullName: System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)\n    name: Quote\n    fullName: System.Linq.Expressions.Expression.Quote\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)\n    name: Quote\n    fullName: System.Linq.Expressions.Expression.Quote\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)\n  nameWithType: Expression.Quote(Expression)\n- uid: System.Linq.Expressions.Expression.Reduce\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Reduce()\n  fullName: System.Linq.Expressions.Expression.Reduce()\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Reduce\n    name: Reduce\n    fullName: System.Linq.Expressions.Expression.Reduce\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Reduce\n    name: Reduce\n    fullName: System.Linq.Expressions.Expression.Reduce\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Reduce\n  nameWithType: Expression.Reduce()\n- uid: System.Linq.Expressions.Expression.ReduceAndCheck\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ReduceAndCheck()\n  fullName: System.Linq.Expressions.Expression.ReduceAndCheck()\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ReduceAndCheck\n    name: ReduceAndCheck\n    fullName: System.Linq.Expressions.Expression.ReduceAndCheck\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ReduceAndCheck\n    name: ReduceAndCheck\n    fullName: System.Linq.Expressions.Expression.ReduceAndCheck\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ReduceAndCheck\n  nameWithType: Expression.ReduceAndCheck()\n- uid: System.Linq.Expressions.Expression.ReduceExtensions\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ReduceExtensions()\n  fullName: System.Linq.Expressions.Expression.ReduceExtensions()\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ReduceExtensions\n    name: ReduceExtensions\n    fullName: System.Linq.Expressions.Expression.ReduceExtensions\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ReduceExtensions\n    name: ReduceExtensions\n    fullName: System.Linq.Expressions.Expression.ReduceExtensions\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ReduceExtensions\n  nameWithType: Expression.ReduceExtensions()\n- uid: System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ReferenceEqual(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ReferenceEqual\n    fullName: System.Linq.Expressions.Expression.ReferenceEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ReferenceEqual\n    fullName: System.Linq.Expressions.Expression.ReferenceEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.ReferenceEqual(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ReferenceNotEqual(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ReferenceNotEqual\n    fullName: System.Linq.Expressions.Expression.ReferenceNotEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ReferenceNotEqual\n    fullName: System.Linq.Expressions.Expression.ReferenceNotEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.ReferenceNotEqual(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Rethrow\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Rethrow()\n  fullName: System.Linq.Expressions.Expression.Rethrow()\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Rethrow\n    name: Rethrow\n    fullName: System.Linq.Expressions.Expression.Rethrow\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Rethrow\n    name: Rethrow\n    fullName: System.Linq.Expressions.Expression.Rethrow\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Rethrow\n  nameWithType: Expression.Rethrow()\n- uid: System.Linq.Expressions.Expression.Rethrow(System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Rethrow(Type)\n  fullName: System.Linq.Expressions.Expression.Rethrow(System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Rethrow(System.Type)\n    name: Rethrow\n    fullName: System.Linq.Expressions.Expression.Rethrow\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Rethrow(System.Type)\n    name: Rethrow\n    fullName: System.Linq.Expressions.Expression.Rethrow\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Rethrow(System.Type)\n  nameWithType: Expression.Rethrow(Type)\n- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Return(LabelTarget)\n  fullName: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)\n    name: Return\n    fullName: System.Linq.Expressions.Expression.Return\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)\n    name: Return\n    fullName: System.Linq.Expressions.Expression.Return\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)\n  nameWithType: Expression.Return(LabelTarget)\n- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Return(LabelTarget, Expression)\n  fullName: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n    name: Return\n    fullName: System.Linq.Expressions.Expression.Return\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n    name: Return\n    fullName: System.Linq.Expressions.Expression.Return\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Return(LabelTarget, Expression)\n- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Return(LabelTarget, Expression, Type)\n  fullName: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n    name: Return\n    fullName: System.Linq.Expressions.Expression.Return\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n    name: Return\n    fullName: System.Linq.Expressions.Expression.Return\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.Return(LabelTarget, Expression, Type)\n- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Return(LabelTarget, Type)\n  fullName: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)\n    name: Return\n    fullName: System.Linq.Expressions.Expression.Return\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)\n    name: Return\n    fullName: System.Linq.Expressions.Expression.Return\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)\n  nameWithType: Expression.Return(LabelTarget, Type)\n- uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: RightShift(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: RightShift\n    fullName: System.Linq.Expressions.Expression.RightShift\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: RightShift\n    fullName: System.Linq.Expressions.Expression.RightShift\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.RightShift(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: RightShift(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: RightShift\n    fullName: System.Linq.Expressions.Expression.RightShift\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: RightShift\n    fullName: System.Linq.Expressions.Expression.RightShift\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.RightShift(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: RightShiftAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: RightShiftAssign\n    fullName: System.Linq.Expressions.Expression.RightShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: RightShiftAssign\n    fullName: System.Linq.Expressions.Expression.RightShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.RightShiftAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: RightShiftAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: RightShiftAssign\n    fullName: System.Linq.Expressions.Expression.RightShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: RightShiftAssign\n    fullName: System.Linq.Expressions.Expression.RightShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.RightShiftAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: RightShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: RightShiftAssign\n    fullName: System.Linq.Expressions.Expression.RightShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: RightShiftAssign\n    fullName: System.Linq.Expressions.Expression.RightShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.RightShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: RuntimeVariables(IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: RuntimeVariables(IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: RuntimeVariables\n    fullName: System.Linq.Expressions.Expression.RuntimeVariables\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: RuntimeVariables\n    fullName: System.Linq.Expressions.Expression.RuntimeVariables\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.RuntimeVariables(IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.RuntimeVariables(IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: RuntimeVariables(ParameterExpression[])\n  fullName: System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])\n  fullname.vb: System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression())\n  name.vb: RuntimeVariables(ParameterExpression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])\n    name: RuntimeVariables\n    fullName: System.Linq.Expressions.Expression.RuntimeVariables\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])\n    name: RuntimeVariables\n    fullName: System.Linq.Expressions.Expression.RuntimeVariables\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])\n  nameWithType: Expression.RuntimeVariables(ParameterExpression[])\n  nameWithType.vb: Expression.RuntimeVariables(ParameterExpression())\n- uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Subtract(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Subtract\n    fullName: System.Linq.Expressions.Expression.Subtract\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Subtract\n    fullName: System.Linq.Expressions.Expression.Subtract\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Subtract(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Subtract(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Subtract\n    fullName: System.Linq.Expressions.Expression.Subtract\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Subtract\n    fullName: System.Linq.Expressions.Expression.Subtract\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Subtract(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: SubtractAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: SubtractAssign\n    fullName: System.Linq.Expressions.Expression.SubtractAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: SubtractAssign\n    fullName: System.Linq.Expressions.Expression.SubtractAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.SubtractAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SubtractAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: SubtractAssign\n    fullName: System.Linq.Expressions.Expression.SubtractAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: SubtractAssign\n    fullName: System.Linq.Expressions.Expression.SubtractAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.SubtractAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SubtractAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: SubtractAssign\n    fullName: System.Linq.Expressions.Expression.SubtractAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: SubtractAssign\n    fullName: System.Linq.Expressions.Expression.SubtractAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.SubtractAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: SubtractAssignChecked(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: SubtractAssignChecked\n    fullName: System.Linq.Expressions.Expression.SubtractAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: SubtractAssignChecked\n    fullName: System.Linq.Expressions.Expression.SubtractAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.SubtractAssignChecked(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SubtractAssignChecked(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: SubtractAssignChecked\n    fullName: System.Linq.Expressions.Expression.SubtractAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: SubtractAssignChecked\n    fullName: System.Linq.Expressions.Expression.SubtractAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.SubtractAssignChecked(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SubtractAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: SubtractAssignChecked\n    fullName: System.Linq.Expressions.Expression.SubtractAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: SubtractAssignChecked\n    fullName: System.Linq.Expressions.Expression.SubtractAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.SubtractAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: SubtractChecked(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: SubtractChecked\n    fullName: System.Linq.Expressions.Expression.SubtractChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: SubtractChecked\n    fullName: System.Linq.Expressions.Expression.SubtractChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.SubtractChecked(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SubtractChecked(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: SubtractChecked\n    fullName: System.Linq.Expressions.Expression.SubtractChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: SubtractChecked\n    fullName: System.Linq.Expressions.Expression.SubtractChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.SubtractChecked(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Switch(Expression, Expression, SwitchCase[])\n  fullName: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.SwitchCase[])\n  fullname.vb: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.SwitchCase())\n  name.vb: Switch(Expression, Expression, SwitchCase())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n  nameWithType: Expression.Switch(Expression, Expression, SwitchCase[])\n  nameWithType.vb: Expression.Switch(Expression, Expression, SwitchCase())\n- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Switch(Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)\n  fullName: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.SwitchCase>)\n  fullname.vb: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.SwitchCase))\n  name.vb: Switch(Expression, Expression, MethodInfo, IEnumerable(Of SwitchCase))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n  nameWithType: Expression.Switch(Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)\n  nameWithType.vb: Expression.Switch(Expression, Expression, MethodInfo, IEnumerable(Of SwitchCase))\n- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Switch(Expression, Expression, MethodInfo, SwitchCase[])\n  fullName: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.SwitchCase[])\n  fullname.vb: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.SwitchCase())\n  name.vb: Switch(Expression, Expression, MethodInfo, SwitchCase())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n  nameWithType: Expression.Switch(Expression, Expression, MethodInfo, SwitchCase[])\n  nameWithType.vb: Expression.Switch(Expression, Expression, MethodInfo, SwitchCase())\n- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Switch(Expression, SwitchCase[])\n  fullName: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.SwitchCase[])\n  fullname.vb: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.SwitchCase())\n  name.vb: Switch(Expression, SwitchCase())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n  nameWithType: Expression.Switch(Expression, SwitchCase[])\n  nameWithType.vb: Expression.Switch(Expression, SwitchCase())\n- uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Switch(Type, Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)\n  fullName: System.Linq.Expressions.Expression.Switch(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.SwitchCase>)\n  fullname.vb: System.Linq.Expressions.Expression.Switch(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.SwitchCase))\n  name.vb: Switch(Type, Expression, Expression, MethodInfo, IEnumerable(Of SwitchCase))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n  nameWithType: Expression.Switch(Type, Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)\n  nameWithType.vb: Expression.Switch(Type, Expression, Expression, MethodInfo, IEnumerable(Of SwitchCase))\n- uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Switch(Type, Expression, Expression, MethodInfo, SwitchCase[])\n  fullName: System.Linq.Expressions.Expression.Switch(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.SwitchCase[])\n  fullname.vb: System.Linq.Expressions.Expression.Switch(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.SwitchCase())\n  name.vb: Switch(Type, Expression, Expression, MethodInfo, SwitchCase())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n  nameWithType: Expression.Switch(Type, Expression, Expression, MethodInfo, SwitchCase[])\n  nameWithType.vb: Expression.Switch(Type, Expression, Expression, MethodInfo, SwitchCase())\n- uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SwitchCase(Expression, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: SwitchCase(Expression, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: SwitchCase\n    fullName: System.Linq.Expressions.Expression.SwitchCase\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: SwitchCase\n    fullName: System.Linq.Expressions.Expression.SwitchCase\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.SwitchCase(Expression, IEnumerable<Expression>)\n  nameWithType.vb: Expression.SwitchCase(Expression, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: SwitchCase(Expression, Expression[])\n  fullName: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression())\n  name.vb: SwitchCase(Expression, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n    name: SwitchCase\n    fullName: System.Linq.Expressions.Expression.SwitchCase\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n    name: SwitchCase\n    fullName: System.Linq.Expressions.Expression.SwitchCase\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.SwitchCase(Expression, Expression[])\n  nameWithType.vb: Expression.SwitchCase(Expression, Expression())\n- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SymbolDocument(String)\n  fullName: System.Linq.Expressions.Expression.SymbolDocument(System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String)\n    name: SymbolDocument\n    fullName: System.Linq.Expressions.Expression.SymbolDocument\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String)\n    name: SymbolDocument\n    fullName: System.Linq.Expressions.Expression.SymbolDocument\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SymbolDocument(System.String)\n  nameWithType: Expression.SymbolDocument(String)\n- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SymbolDocument(String, Guid)\n  fullName: System.Linq.Expressions.Expression.SymbolDocument(System.String, System.Guid)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)\n    name: SymbolDocument\n    fullName: System.Linq.Expressions.Expression.SymbolDocument\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)\n    name: SymbolDocument\n    fullName: System.Linq.Expressions.Expression.SymbolDocument\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)\n  nameWithType: Expression.SymbolDocument(String, Guid)\n- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SymbolDocument(String, Guid, Guid)\n  fullName: System.Linq.Expressions.Expression.SymbolDocument(System.String, System.Guid, System.Guid)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)\n    name: SymbolDocument\n    fullName: System.Linq.Expressions.Expression.SymbolDocument\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)\n    name: SymbolDocument\n    fullName: System.Linq.Expressions.Expression.SymbolDocument\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)\n  nameWithType: Expression.SymbolDocument(String, Guid, Guid)\n- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SymbolDocument(String, Guid, Guid, Guid)\n  fullName: System.Linq.Expressions.Expression.SymbolDocument(System.String, System.Guid, System.Guid, System.Guid)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)\n    name: SymbolDocument\n    fullName: System.Linq.Expressions.Expression.SymbolDocument\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)\n    name: SymbolDocument\n    fullName: System.Linq.Expressions.Expression.SymbolDocument\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)\n  nameWithType: Expression.SymbolDocument(String, Guid, Guid, Guid)\n- uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Throw(Expression)\n  fullName: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)\n    name: Throw\n    fullName: System.Linq.Expressions.Expression.Throw\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)\n    name: Throw\n    fullName: System.Linq.Expressions.Expression.Throw\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)\n  nameWithType: Expression.Throw(Expression)\n- uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Throw(Expression, Type)\n  fullName: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)\n    name: Throw\n    fullName: System.Linq.Expressions.Expression.Throw\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)\n    name: Throw\n    fullName: System.Linq.Expressions.Expression.Throw\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.Throw(Expression, Type)\n- uid: System.Linq.Expressions.Expression.ToString\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ToString()\n  fullName: System.Linq.Expressions.Expression.ToString()\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ToString\n    name: ToString\n    fullName: System.Linq.Expressions.Expression.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ToString\n    name: ToString\n    fullName: System.Linq.Expressions.Expression.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ToString\n  nameWithType: Expression.ToString()\n- uid: System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: TryCatch(Expression, CatchBlock[])\n  fullName: System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression, System.Linq.Expressions.CatchBlock[])\n  fullname.vb: System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression, System.Linq.Expressions.CatchBlock())\n  name.vb: TryCatch(Expression, CatchBlock())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n    name: TryCatch\n    fullName: System.Linq.Expressions.Expression.TryCatch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.CatchBlock\n    name: CatchBlock\n    fullName: System.Linq.Expressions.CatchBlock\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n    name: TryCatch\n    fullName: System.Linq.Expressions.Expression.TryCatch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.CatchBlock\n    name: CatchBlock\n    fullName: System.Linq.Expressions.CatchBlock\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n  nameWithType: Expression.TryCatch(Expression, CatchBlock[])\n  nameWithType.vb: Expression.TryCatch(Expression, CatchBlock())\n- uid: System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: TryCatchFinally(Expression, Expression, CatchBlock[])\n  fullName: System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.CatchBlock[])\n  fullname.vb: System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.CatchBlock())\n  name.vb: TryCatchFinally(Expression, Expression, CatchBlock())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n    name: TryCatchFinally\n    fullName: System.Linq.Expressions.Expression.TryCatchFinally\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.CatchBlock\n    name: CatchBlock\n    fullName: System.Linq.Expressions.CatchBlock\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n    name: TryCatchFinally\n    fullName: System.Linq.Expressions.Expression.TryCatchFinally\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.CatchBlock\n    name: CatchBlock\n    fullName: System.Linq.Expressions.CatchBlock\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n  nameWithType: Expression.TryCatchFinally(Expression, Expression, CatchBlock[])\n  nameWithType.vb: Expression.TryCatchFinally(Expression, Expression, CatchBlock())\n- uid: System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: TryFault(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: TryFault\n    fullName: System.Linq.Expressions.Expression.TryFault\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: TryFault\n    fullName: System.Linq.Expressions.Expression.TryFault\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.TryFault(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: TryFinally(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: TryFinally\n    fullName: System.Linq.Expressions.Expression.TryFinally\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: TryFinally\n    fullName: System.Linq.Expressions.Expression.TryFinally\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.TryFinally(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: TryGetActionType(Type[], Type)\n  fullName: System.Linq.Expressions.Expression.TryGetActionType(System.Type[], System.Type)\n  fullname.vb: System.Linq.Expressions.Expression.TryGetActionType(System.Type(), System.Type)\n  name.vb: TryGetActionType(Type(), Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)\n    name: TryGetActionType\n    fullName: System.Linq.Expressions.Expression.TryGetActionType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)\n    name: TryGetActionType\n    fullName: System.Linq.Expressions.Expression.TryGetActionType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)\n  nameWithType: Expression.TryGetActionType(Type[], Type)\n  nameWithType.vb: Expression.TryGetActionType(Type(), Type)\n- uid: System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: TryGetFuncType(Type[], Type)\n  fullName: System.Linq.Expressions.Expression.TryGetFuncType(System.Type[], System.Type)\n  fullname.vb: System.Linq.Expressions.Expression.TryGetFuncType(System.Type(), System.Type)\n  name.vb: TryGetFuncType(Type(), Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)\n    name: TryGetFuncType\n    fullName: System.Linq.Expressions.Expression.TryGetFuncType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)\n    name: TryGetFuncType\n    fullName: System.Linq.Expressions.Expression.TryGetFuncType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)\n  nameWithType: Expression.TryGetFuncType(Type[], Type)\n  nameWithType.vb: Expression.TryGetFuncType(Type(), Type)\n- uid: System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: TypeAs(Expression, Type)\n  fullName: System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)\n    name: TypeAs\n    fullName: System.Linq.Expressions.Expression.TypeAs\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)\n    name: TypeAs\n    fullName: System.Linq.Expressions.Expression.TypeAs\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.TypeAs(Expression, Type)\n- uid: System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: TypeEqual(Expression, Type)\n  fullName: System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)\n    name: TypeEqual\n    fullName: System.Linq.Expressions.Expression.TypeEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)\n    name: TypeEqual\n    fullName: System.Linq.Expressions.Expression.TypeEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.TypeEqual(Expression, Type)\n- uid: System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: TypeIs(Expression, Type)\n  fullName: System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)\n    name: TypeIs\n    fullName: System.Linq.Expressions.Expression.TypeIs\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)\n    name: TypeIs\n    fullName: System.Linq.Expressions.Expression.TypeIs\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.TypeIs(Expression, Type)\n- uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: UnaryPlus(Expression)\n  fullName: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)\n    name: UnaryPlus\n    fullName: System.Linq.Expressions.Expression.UnaryPlus\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)\n    name: UnaryPlus\n    fullName: System.Linq.Expressions.Expression.UnaryPlus\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)\n  nameWithType: Expression.UnaryPlus(Expression)\n- uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: UnaryPlus(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: UnaryPlus\n    fullName: System.Linq.Expressions.Expression.UnaryPlus\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: UnaryPlus\n    fullName: System.Linq.Expressions.Expression.UnaryPlus\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.UnaryPlus(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Unbox(Expression, Type)\n  fullName: System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)\n    name: Unbox\n    fullName: System.Linq.Expressions.Expression.Unbox\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)\n    name: Unbox\n    fullName: System.Linq.Expressions.Expression.Unbox\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.Unbox(Expression, Type)\n- uid: System.Linq.Expressions.Expression.Variable(System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Variable(Type)\n  fullName: System.Linq.Expressions.Expression.Variable(System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Variable(System.Type)\n    name: Variable\n    fullName: System.Linq.Expressions.Expression.Variable\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Variable(System.Type)\n    name: Variable\n    fullName: System.Linq.Expressions.Expression.Variable\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Variable(System.Type)\n  nameWithType: Expression.Variable(Type)\n- uid: System.Linq.Expressions.Expression.Variable(System.Type,System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Variable(Type, String)\n  fullName: System.Linq.Expressions.Expression.Variable(System.Type, System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Variable(System.Type,System.String)\n    name: Variable\n    fullName: System.Linq.Expressions.Expression.Variable\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Variable(System.Type,System.String)\n    name: Variable\n    fullName: System.Linq.Expressions.Expression.Variable\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Variable(System.Type,System.String)\n  nameWithType: Expression.Variable(Type, String)\n- uid: System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: VisitChildren(ExpressionVisitor)\n  fullName: System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)\n    name: VisitChildren\n    fullName: System.Linq.Expressions.Expression.VisitChildren\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionVisitor\n    name: ExpressionVisitor\n    fullName: System.Linq.Expressions.ExpressionVisitor\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)\n    name: VisitChildren\n    fullName: System.Linq.Expressions.Expression.VisitChildren\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionVisitor\n    name: ExpressionVisitor\n    fullName: System.Linq.Expressions.ExpressionVisitor\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)\n  nameWithType: Expression.VisitChildren(ExpressionVisitor)\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Linq.Expressions.GotoExpressionKind\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: GotoExpressionKind\n  fullName: System.Linq.Expressions.GotoExpressionKind\n  commentId: T:System.Linq.Expressions.GotoExpressionKind\n  nameWithType: GotoExpressionKind\n- uid: System.Linq.Expressions.Expression.NodeType\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: NodeType\n  fullName: System.Linq.Expressions.Expression.NodeType\n  commentId: P:System.Linq.Expressions.Expression.NodeType\n  nameWithType: Expression.NodeType\n- uid: System.Linq.Expressions.ExpressionType\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: ExpressionType\n  fullName: System.Linq.Expressions.ExpressionType\n  commentId: T:System.Linq.Expressions.ExpressionType\n  nameWithType: ExpressionType\n- uid: System.Linq.Expressions.LabelTarget\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: LabelTarget\n  fullName: System.Linq.Expressions.LabelTarget\n  commentId: T:System.Linq.Expressions.LabelTarget\n  nameWithType: LabelTarget\n- uid: System.Linq.Expressions.Expression.Type\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Type\n  fullName: System.Linq.Expressions.Expression.Type\n  commentId: P:System.Linq.Expressions.Expression.Type\n  nameWithType: Expression.Type\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  commentId: T:System.Type\n  nameWithType: Type\n- uid: System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Accept(ExpressionVisitor)\n  fullName: System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)\n    name: Accept\n    fullName: System.Linq.Expressions.Expression.Accept\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionVisitor\n    name: ExpressionVisitor\n    fullName: System.Linq.Expressions.ExpressionVisitor\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)\n    name: Accept\n    fullName: System.Linq.Expressions.Expression.Accept\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionVisitor\n    name: ExpressionVisitor\n    fullName: System.Linq.Expressions.ExpressionVisitor\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)\n  nameWithType: Expression.Accept(ExpressionVisitor)\n- uid: System.Linq.Expressions.ExpressionVisitor\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: ExpressionVisitor\n  fullName: System.Linq.Expressions.ExpressionVisitor\n  commentId: T:System.Linq.Expressions.ExpressionVisitor\n  nameWithType: ExpressionVisitor\n- uid: System.Linq.Expressions.GotoExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: GotoExpression\n  fullName: System.Linq.Expressions.GotoExpression\n  commentId: T:System.Linq.Expressions.GotoExpression\n  nameWithType: GotoExpression\n"}