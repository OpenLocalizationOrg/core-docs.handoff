{"nodes":[{"pos":[813,837],"content":"CngKeyCreationParameters","needQuote":true,"nodes":[{"content":"CngKeyCreationParameters","pos":[0,24]}]},{"pos":[2270,2296],"content":"CngKeyCreationParameters()","needQuote":true,"nodes":[{"content":"CngKeyCreationParameters()","pos":[0,26]}]},{"pos":[3471,3483],"content":"ExportPolicy","needQuote":true,"nodes":[{"content":"ExportPolicy","pos":[0,12]}]},{"content":"\\n&lt;p&gt;An object that specifies a key export policy.","pos":[4311,4361],"source":"\\n<p>An object that specifies a key export policy."},{"content":"The default value is &lt;strong&gt;null&lt;/strong&gt;, which indicates that the key storage provider's default export policy is set.&lt;/p&gt;\\n","pos":[4362,4489],"source":" The default value is <strong>null</strong>, which indicates that the key storage provider's default export policy is set.</p>\\n"},{"pos":[4911,4929],"content":"KeyCreationOptions","needQuote":true,"nodes":[{"content":"KeyCreationOptions","pos":[0,18]}]},{"content":"\\n&lt;p&gt;An object that specifies options for creating keys.","pos":[5777,5833],"source":"\\n<p>An object that specifies options for creating keys."},{"content":"The default value is &lt;strong&gt;null&lt;/strong&gt;, which indicates that the key storage provider's default key creation options are set.&lt;/p&gt;\\n","pos":[5834,5969],"source":" The default value is <strong>null</strong>, which indicates that the key storage provider's default key creation options are set.</p>\\n"},{"pos":[6367,6375],"content":"KeyUsage","needQuote":true,"nodes":[{"content":"KeyUsage","pos":[0,8]}]},{"content":"\\n&lt;p&gt;A bitwise combination of one or more enumeration values that specify key usage.","pos":[7210,7294],"source":"\\n<p>A bitwise combination of one or more enumeration values that specify key usage."},{"content":"The default value is &lt;strong&gt;null&lt;/strong&gt;, which indicates that the key storage provider's default key usage is set.&lt;/p&gt;\\n","pos":[7295,7418],"source":" The default value is <strong>null</strong>, which indicates that the key storage provider's default key usage is set.</p>\\n"},{"pos":[7812,7822],"content":"Parameters","needQuote":true,"nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[9569,9587],"content":"ParentWindowHandle","needQuote":true,"nodes":[{"content":"ParentWindowHandle","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The HWND of the parent window that is used for CNG dialog boxes.&lt;/p&gt;\\n","pos":[10482,10557],"source":"\\n<p>The HWND of the parent window that is used for CNG dialog boxes.</p>\\n"},{"pos":[11083,11091],"content":"Provider","needQuote":true,"nodes":[{"content":"Provider","pos":[0,8]}]},{"content":"\\n&lt;p&gt;An object that specifies the KSP that a new key will be created in.&lt;/p&gt;\\n","pos":[11894,11972],"source":"\\n<p>An object that specifies the KSP that a new key will be created in.</p>\\n"},{"pos":[12666,12674],"content":"UIPolicy","needQuote":true,"nodes":[{"content":"UIPolicy","pos":[0,8]}]},{"content":"\\n&lt;p&gt;An object that contains details about the user interface shown by Cryptography Next Generation (CNG) classes when a key is created or accessed.","pos":[13509,13657],"source":"\\n<p>An object that contains details about the user interface shown by Cryptography Next Generation (CNG) classes when a key is created or accessed."},{"content":"A &lt;strong&gt;null&lt;/strong&gt; value indicates that the key storage provider's default user interface policy is set.&lt;/p&gt;\\n","pos":[13658,13773],"source":" A <strong>null</strong> value indicates that the key storage provider's default user interface policy is set.</p>\\n"},{"pos":[14091,14119],"content":"System.Security.Cryptography","needQuote":true,"nodes":[{"content":"System.Security.Cryptography","pos":[0,28]}]},{"pos":[14316,14322],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14482,14492],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[14587,14595],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[14664,14665],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14692,14693],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14763,14771],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[14840,14841],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14868,14869],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15052,15066],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[15185,15191],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[15258,15259],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15309,15315],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15375,15376],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15459,15465],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[15532,15533],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15583,15589],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15649,15650],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15864,15886],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[16034,16040],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16107,16108],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16158,16164],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16225,16226]},{"pos":[16281,16287],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16347,16348],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16445,16451],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16518,16519],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16569,16575],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16636,16637]},{"pos":[16692,16698],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16758,16759],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17004,17035],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[17201,17216],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[17292,17293],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17343,17349],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17410,17411]},{"pos":[17466,17472],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17532,17533],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17639,17654],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[17730,17731],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17781,17787],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17848,17849]},{"pos":[17904,17910],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17970,17971],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18201,18214],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[18315,18326],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[18398,18399],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18426,18427],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18500,18511],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[18583,18584],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18611,18612],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18787,18796],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[18889,18896],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[18964,18965],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18992,18993],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19062,19069],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[19137,19138],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19165,19166],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19341,19358],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[19467,19482],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[19558,19559],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19586,19587],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19664,19679],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[19755,19756],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19783,19784],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19929,19935],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[20128,20155],"content":"Nullable<CngExportPolicies>","needQuote":true,"nodes":[{"content":"Nullable&lt;CngExportPolicies&gt;","pos":[0,27],"source":"Nullable<CngExportPolicies>"}]},{"pos":[20408,20416],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[20478,20479],"content":"<","needQuote":true,"nodes":[]},{"pos":[20562,20579],"content":"CngExportPolicies","needQuote":true,"nodes":[{"content":"CngExportPolicies","pos":[0,17]}]},{"pos":[20721,20729],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[20792,20795]},{"pos":[20885,20902],"content":"CngExportPolicies","needQuote":true,"nodes":[{"content":"CngExportPolicies","pos":[0,17]}]},{"pos":[20974,20975],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21235,21246],"content":"Nullable<T>","needQuote":true,"nodes":[{"content":"Nullable&lt;T&gt;","pos":[0,11],"source":"Nullable<T>"}]},{"pos":[21393,21401],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[21442,21443],"content":"<","needQuote":true,"nodes":[]},{"pos":[21470,21471],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[21568,21576],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[21618,21621]},{"pos":[21655,21656],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[21683,21684],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21921,21942],"content":"CngKeyCreationOptions","needQuote":true,"nodes":[{"content":"CngKeyCreationOptions","pos":[0,21]}]},{"pos":[22233,22255],"content":"Nullable<CngKeyUsages>","needQuote":true,"nodes":[{"content":"Nullable&lt;CngKeyUsages&gt;","pos":[0,22],"source":"Nullable<CngKeyUsages>"}]},{"pos":[22493,22501],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[22563,22564],"content":"<","needQuote":true,"nodes":[]},{"pos":[22642,22654],"content":"CngKeyUsages","needQuote":true,"nodes":[{"content":"CngKeyUsages","pos":[0,12]}]},{"pos":[22791,22799],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[22862,22865]},{"pos":[22950,22962],"content":"CngKeyUsages","needQuote":true,"nodes":[{"content":"CngKeyUsages","pos":[0,12]}]},{"pos":[23029,23030],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23330,23351],"content":"CngPropertyCollection","needQuote":true,"nodes":[{"content":"CngPropertyCollection","pos":[0,21]}]},{"pos":[23585,23591],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[23785,23796],"content":"CngProvider","needQuote":true,"nodes":[{"content":"CngProvider","pos":[0,11]}]},{"pos":[24049,24060],"content":"CngUIPolicy","needQuote":true,"nodes":[{"content":"CngUIPolicy","pos":[0,11]}]},{"pos":[24262,24283],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]}],"content":"items:\n- uid: System.Security.Cryptography.CngKeyCreationParameters\n  commentId: T:System.Security.Cryptography.CngKeyCreationParameters\n  id: CngKeyCreationParameters\n  parent: System.Security.Cryptography\n  children:\n  - System.Security.Cryptography.CngKeyCreationParameters.#ctor\n  - System.Security.Cryptography.CngKeyCreationParameters.ExportPolicy\n  - System.Security.Cryptography.CngKeyCreationParameters.KeyCreationOptions\n  - System.Security.Cryptography.CngKeyCreationParameters.KeyUsage\n  - System.Security.Cryptography.CngKeyCreationParameters.Parameters\n  - System.Security.Cryptography.CngKeyCreationParameters.ParentWindowHandle\n  - System.Security.Cryptography.CngKeyCreationParameters.Provider\n  - System.Security.Cryptography.CngKeyCreationParameters.UIPolicy\n  langs:\n  - csharp\n  - vb\n  name: CngKeyCreationParameters\n  fullName: System.Security.Cryptography.CngKeyCreationParameters\n  type: Class\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CngKeyCreationParameters\n    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs\n    startLine: 163\n  assemblies:\n  - System.Security.Cryptography.Cng\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Contains advanced properties for key creation.</p>\\n\"\n  syntax:\n    content: public sealed class CngKeyCreationParameters\n    content.vb: Public NotInheritable Class CngKeyCreationParameters\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: CngKeyCreationParameters\n- uid: System.Security.Cryptography.CngKeyCreationParameters.#ctor\n  commentId: M:System.Security.Cryptography.CngKeyCreationParameters.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.CngKeyCreationParameters\n  langs:\n  - csharp\n  - vb\n  name: CngKeyCreationParameters()\n  fullName: System.Security.Cryptography.CngKeyCreationParameters.CngKeyCreationParameters()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs\n    startLine: 165\n  assemblies:\n  - System.Security.Cryptography.Cng\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Cryptography.CngKeyCreationParameters\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public CngKeyCreationParameters()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: CngKeyCreationParameters.CngKeyCreationParameters()\n- uid: System.Security.Cryptography.CngKeyCreationParameters.ExportPolicy\n  commentId: P:System.Security.Cryptography.CngKeyCreationParameters.ExportPolicy\n  id: ExportPolicy\n  parent: System.Security.Cryptography.CngKeyCreationParameters\n  langs:\n  - csharp\n  - vb\n  name: ExportPolicy\n  fullName: System.Security.Cryptography.CngKeyCreationParameters.ExportPolicy\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ExportPolicy\n    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs\n    startLine: 166\n  assemblies:\n  - System.Security.Cryptography.Cng\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Gets or sets the key export policy.</p>\\n\"\n  syntax:\n    content: public CngExportPolicies? ExportPolicy { get; set; }\n    content.vb: Public Property ExportPolicy As CngExportPolicies?\n    parameters: []\n    return:\n      type: System.Nullable{System.Security.Cryptography.CngExportPolicies}\n      description: \"\\n<p>An object that specifies a key export policy. The default value is <strong>null</strong>, which indicates that the key storage provider's default export policy is set.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: CngKeyCreationParameters.ExportPolicy\n- uid: System.Security.Cryptography.CngKeyCreationParameters.KeyCreationOptions\n  commentId: P:System.Security.Cryptography.CngKeyCreationParameters.KeyCreationOptions\n  id: KeyCreationOptions\n  parent: System.Security.Cryptography.CngKeyCreationParameters\n  langs:\n  - csharp\n  - vb\n  name: KeyCreationOptions\n  fullName: System.Security.Cryptography.CngKeyCreationParameters.KeyCreationOptions\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: KeyCreationOptions\n    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs\n    startLine: 167\n  assemblies:\n  - System.Security.Cryptography.Cng\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Gets or sets the key creation options.</p>\\n\"\n  syntax:\n    content: public CngKeyCreationOptions KeyCreationOptions { get; set; }\n    content.vb: Public Property KeyCreationOptions As CngKeyCreationOptions\n    parameters: []\n    return:\n      type: System.Security.Cryptography.CngKeyCreationOptions\n      description: \"\\n<p>An object that specifies options for creating keys. The default value is <strong>null</strong>, which indicates that the key storage provider's default key creation options are set.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: CngKeyCreationParameters.KeyCreationOptions\n- uid: System.Security.Cryptography.CngKeyCreationParameters.KeyUsage\n  commentId: P:System.Security.Cryptography.CngKeyCreationParameters.KeyUsage\n  id: KeyUsage\n  parent: System.Security.Cryptography.CngKeyCreationParameters\n  langs:\n  - csharp\n  - vb\n  name: KeyUsage\n  fullName: System.Security.Cryptography.CngKeyCreationParameters.KeyUsage\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: KeyUsage\n    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs\n    startLine: 168\n  assemblies:\n  - System.Security.Cryptography.Cng\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Gets or sets the cryptographic operations that apply to the current key. </p>\\n\"\n  syntax:\n    content: public CngKeyUsages? KeyUsage { get; set; }\n    content.vb: Public Property KeyUsage As CngKeyUsages?\n    parameters: []\n    return:\n      type: System.Nullable{System.Security.Cryptography.CngKeyUsages}\n      description: \"\\n<p>A bitwise combination of one or more enumeration values that specify key usage. The default value is <strong>null</strong>, which indicates that the key storage provider's default key usage is set.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: CngKeyCreationParameters.KeyUsage\n- uid: System.Security.Cryptography.CngKeyCreationParameters.Parameters\n  commentId: P:System.Security.Cryptography.CngKeyCreationParameters.Parameters\n  id: Parameters\n  parent: System.Security.Cryptography.CngKeyCreationParameters\n  langs:\n  - csharp\n  - vb\n  name: Parameters\n  fullName: System.Security.Cryptography.CngKeyCreationParameters.Parameters\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Parameters\n    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs\n    startLine: 169\n  assemblies:\n  - System.Security.Cryptography.Cng\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Enables a <xref href=\\\"System.Security.Cryptography.CngKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to be created with additional properties that are set before the key is finalized.</p>\\n\"\n  syntax:\n    content: public CngPropertyCollection Parameters { get; }\n    content.vb: Public ReadOnly Property Parameters As CngPropertyCollection\n    parameters: []\n    return:\n      type: System.Security.Cryptography.CngPropertyCollection\n      description: \"\\n<p>A collection object that contains any additional parameters that you must set on a <xref href=\\\"System.Security.Cryptography.CngKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object during key creation.</p>\\n\"\n  see:\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: CngKeyCreationParameters.Parameters\n- uid: System.Security.Cryptography.CngKeyCreationParameters.ParentWindowHandle\n  commentId: P:System.Security.Cryptography.CngKeyCreationParameters.ParentWindowHandle\n  id: ParentWindowHandle\n  parent: System.Security.Cryptography.CngKeyCreationParameters\n  langs:\n  - csharp\n  - vb\n  name: ParentWindowHandle\n  fullName: System.Security.Cryptography.CngKeyCreationParameters.ParentWindowHandle\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ParentWindowHandle\n    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs\n    startLine: 170\n  assemblies:\n  - System.Security.Cryptography.Cng\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Gets or sets the window handle that should be used as the parent window for dialog boxes that are created by Cryptography Next Generation (CNG) classes.</p>\\n\"\n  syntax:\n    content: public IntPtr ParentWindowHandle { get; set; }\n    content.vb: Public Property ParentWindowHandle As IntPtr\n    parameters: []\n    return:\n      type: System.IntPtr\n      description: \"\\n<p>The HWND of the parent window that is used for CNG dialog boxes.</p>\\n\"\n  see:\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: CngKeyCreationParameters.ParentWindowHandle\n- uid: System.Security.Cryptography.CngKeyCreationParameters.Provider\n  commentId: P:System.Security.Cryptography.CngKeyCreationParameters.Provider\n  id: Provider\n  parent: System.Security.Cryptography.CngKeyCreationParameters\n  langs:\n  - csharp\n  - vb\n  name: Provider\n  fullName: System.Security.Cryptography.CngKeyCreationParameters.Provider\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Provider\n    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs\n    startLine: 171\n  assemblies:\n  - System.Security.Cryptography.Cng\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Gets or sets the key storage provider (KSP) to create a key in.</p>\\n\"\n  syntax:\n    content: public CngProvider Provider { get; set; }\n    content.vb: Public Property Provider As CngProvider\n    parameters: []\n    return:\n      type: System.Security.Cryptography.CngProvider\n      description: \"\\n<p>An object that specifies the KSP that a new key will be created in.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.CngKeyCreationParameters.Provider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is set to a <strong>null</strong> value.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: CngKeyCreationParameters.Provider\n- uid: System.Security.Cryptography.CngKeyCreationParameters.UIPolicy\n  commentId: P:System.Security.Cryptography.CngKeyCreationParameters.UIPolicy\n  id: UIPolicy\n  parent: System.Security.Cryptography.CngKeyCreationParameters\n  langs:\n  - csharp\n  - vb\n  name: UIPolicy\n  fullName: System.Security.Cryptography.CngKeyCreationParameters.UIPolicy\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: UIPolicy\n    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs\n    startLine: 172\n  assemblies:\n  - System.Security.Cryptography.Cng\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Gets or sets information about the user interface to display when a key is created or accessed.</p>\\n\"\n  syntax:\n    content: public CngUIPolicy UIPolicy { get; set; }\n    content.vb: Public Property UIPolicy As CngUIPolicy\n    parameters: []\n    return:\n      type: System.Security.Cryptography.CngUIPolicy\n      description: \"\\n<p>An object that contains details about the user interface shown by Cryptography Next Generation (CNG) classes when a key is created or accessed. A <strong>null</strong> value indicates that the key storage provider's default user interface policy is set.</p>\\n\"\n  see:\n  - type: System.Security.Permissions.UIPermission\n    commentId: T:System.Security.Permissions.UIPermission\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: CngKeyCreationParameters.UIPolicy\nreferences:\n- uid: System.Security.Cryptography\n  isExternal: false\n  name: System.Security.Cryptography\n  fullName: System.Security.Cryptography\n  commentId: N:System.Security.Cryptography\n  nameWithType: System.Security.Cryptography\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Nullable{System.Security.Cryptography.CngExportPolicies}\n  parent: System\n  definition: System.Nullable`1\n  name: Nullable<CngExportPolicies>\n  fullName: System.Nullable<System.Security.Cryptography.CngExportPolicies>\n  fullname.vb: System.Nullable(Of System.Security.Cryptography.CngExportPolicies)\n  name.vb: Nullable(Of CngExportPolicies)\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Security.Cryptography.CngExportPolicies\n    name: CngExportPolicies\n    fullName: System.Security.Cryptography.CngExportPolicies\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Security.Cryptography.CngExportPolicies\n    name: CngExportPolicies\n    fullName: System.Security.Cryptography.CngExportPolicies\n  - name: )\n    fullName: )\n  commentId: T:System.Nullable{System.Security.Cryptography.CngExportPolicies}\n  nameWithType: Nullable<CngExportPolicies>\n  nameWithType.vb: Nullable(Of CngExportPolicies)\n- uid: System.Nullable`1\n  parent: System\n  isExternal: false\n  name: Nullable<T>\n  fullName: System.Nullable<T>\n  fullname.vb: System.Nullable(Of T)\n  name.vb: Nullable(Of T)\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Nullable`1\n  nameWithType: Nullable<T>\n  nameWithType.vb: Nullable(Of T)\n- uid: System.Security.Cryptography.CngKeyCreationOptions\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngKeyCreationOptions\n  fullName: System.Security.Cryptography.CngKeyCreationOptions\n  commentId: T:System.Security.Cryptography.CngKeyCreationOptions\n  nameWithType: CngKeyCreationOptions\n- uid: System.Nullable{System.Security.Cryptography.CngKeyUsages}\n  parent: System\n  definition: System.Nullable`1\n  name: Nullable<CngKeyUsages>\n  fullName: System.Nullable<System.Security.Cryptography.CngKeyUsages>\n  fullname.vb: System.Nullable(Of System.Security.Cryptography.CngKeyUsages)\n  name.vb: Nullable(Of CngKeyUsages)\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Security.Cryptography.CngKeyUsages\n    name: CngKeyUsages\n    fullName: System.Security.Cryptography.CngKeyUsages\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Security.Cryptography.CngKeyUsages\n    name: CngKeyUsages\n    fullName: System.Security.Cryptography.CngKeyUsages\n  - name: )\n    fullName: )\n  commentId: T:System.Nullable{System.Security.Cryptography.CngKeyUsages}\n  nameWithType: Nullable<CngKeyUsages>\n  nameWithType.vb: Nullable(Of CngKeyUsages)\n- uid: System.Security.Cryptography.CngPropertyCollection\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngPropertyCollection\n  fullName: System.Security.Cryptography.CngPropertyCollection\n  commentId: T:System.Security.Cryptography.CngPropertyCollection\n  nameWithType: CngPropertyCollection\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  fullName: System.IntPtr\n  commentId: T:System.IntPtr\n  nameWithType: IntPtr\n- uid: System.Security.Cryptography.CngProvider\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngProvider\n  fullName: System.Security.Cryptography.CngProvider\n  commentId: T:System.Security.Cryptography.CngProvider\n  nameWithType: CngProvider\n- uid: System.Security.Cryptography.CngUIPolicy\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngUIPolicy\n  fullName: System.Security.Cryptography.CngUIPolicy\n  commentId: T:System.Security.Cryptography.CngUIPolicy\n  nameWithType: CngUIPolicy\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n"}