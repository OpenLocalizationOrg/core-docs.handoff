{"nodes":[{"pos":[579,593],"content":"ContractHelper","needQuote":true,"nodes":[{"content":"ContractHelper","pos":[0,14]}]},{"pos":[2245,2317],"content":"RaiseContractFailedEvent(ContractFailureKind, String, String, Exception)","needQuote":true,"nodes":[{"content":"RaiseContractFailedEvent(ContractFailureKind, String, String, Exception)","pos":[0,72]}]},{"content":"\\n&lt;p&gt;One of the enumeration values that specifies the type of failure.&lt;/p&gt;\\n","pos":[3850,3926],"source":"\\n<p>One of the enumeration values that specifies the type of failure.</p>\\n"},{"content":"\\n&lt;p&gt;Additional user information.&lt;/p&gt;\\n","pos":[3996,4035],"source":"\\n<p>Additional user information.</p>\\n"},{"content":"\\n&lt;p&gt;The description of the condition that caused the failure.&lt;/p&gt;\\n","pos":[4107,4175],"source":"\\n<p>The description of the condition that caused the failure.</p>\\n"},{"content":"\\n&lt;p&gt;The inner exception that caused the current exception.&lt;/p&gt;\\n","pos":[4251,4316],"source":"\\n<p>The inner exception that caused the current exception.</p>\\n"},{"content":"\\n&lt;p&gt;A null reference (&lt;strong&gt;Nothing&lt;/strong&gt; in Visual Basic) if the event was handled and should not trigger a failure; otherwise, returns the localized failure message.&lt;/p&gt;\\n","pos":[4376,4555],"source":"\\n<p>A null reference (<strong>Nothing</strong> in Visual Basic) if the event was handled and should not trigger a failure; otherwise, returns the localized failure message.</p>\\n"},{"pos":[5602,5672],"content":"TriggerFailure(ContractFailureKind, String, String, String, Exception)","needQuote":true,"nodes":[{"content":"TriggerFailure(ContractFailureKind, String, String, String, Exception)","pos":[0,70]}]},{"content":"\\n&lt;p&gt;One of the enumeration values that specifies the type of failure.&lt;/p&gt;\\n","pos":[6998,7074],"source":"\\n<p>One of the enumeration values that specifies the type of failure.</p>\\n"},{"content":"\\n&lt;p&gt;The message to display.&lt;/p&gt;\\n","pos":[7147,7181],"source":"\\n<p>The message to display.</p>\\n"},{"content":"\\n&lt;p&gt;Additional user information.&lt;/p&gt;\\n","pos":[7251,7290],"source":"\\n<p>Additional user information.</p>\\n"},{"content":"\\n&lt;p&gt;The description of the condition that caused the failure.&lt;/p&gt;\\n","pos":[7362,7430],"source":"\\n<p>The description of the condition that caused the failure.</p>\\n"},{"content":"\\n&lt;p&gt;The inner exception that caused the current exception.&lt;/p&gt;\\n","pos":[7506,7571],"source":"\\n<p>The inner exception that caused the current exception.</p>\\n"},{"pos":[7834,7865],"content":"System.Runtime.CompilerServices","needQuote":true,"nodes":[{"content":"System.Runtime.CompilerServices","pos":[0,31]}]},{"pos":[8071,8077],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8237,8247],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[8342,8350],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[8419,8420],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8447,8448],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8518,8526],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[8595,8596],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8623,8624],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8807,8821],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[8940,8946],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9013,9014],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9064,9070],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9130,9131],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9214,9220],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9287,9288],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9338,9344],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9404,9405],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9619,9641],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[9789,9795],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9862,9863],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9913,9919],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9980,9981]},{"pos":[10036,10042],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10102,10103],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10200,10206],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[10273,10274],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10324,10330],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10391,10392]},{"pos":[10447,10453],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10513,10514],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10759,10790],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[10956,10971],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[11047,11048],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11098,11104],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11165,11166]},{"pos":[11221,11227],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11287,11288],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11394,11409],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[11485,11486],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11536,11542],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11603,11604]},{"pos":[11659,11665],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11725,11726],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11956,11969],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[12070,12081],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[12153,12154],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12181,12182],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12255,12266],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[12338,12339],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12366,12367],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12542,12551],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[12644,12651],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[12719,12720],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12747,12748],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12817,12824],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[12892,12893],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12920,12921],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13096,13113],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[13222,13237],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[13313,13314],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13341,13342],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13419,13434],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[13510,13511],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13538,13539],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13684,13690],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[13878,13897],"content":"ContractFailureKind","needQuote":true,"nodes":[{"content":"ContractFailureKind","pos":[0,19]}]},{"pos":[14125,14131],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[14279,14288],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[14440,14468],"content":"System.Diagnostics.Contracts","needQuote":true,"nodes":[{"content":"System.Diagnostics.Contracts","pos":[0,28]}]},{"pos":[14676,14693],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]}],"content":"items:\n- uid: System.Runtime.CompilerServices.ContractHelper\n  commentId: T:System.Runtime.CompilerServices.ContractHelper\n  id: ContractHelper\n  parent: System.Runtime.CompilerServices\n  children:\n  - System.Runtime.CompilerServices.ContractHelper.RaiseContractFailedEvent(System.Diagnostics.Contracts.ContractFailureKind,System.String,System.String,System.Exception)\n  - System.Runtime.CompilerServices.ContractHelper.TriggerFailure(System.Diagnostics.Contracts.ContractFailureKind,System.String,System.String,System.String,System.Exception)\n  langs:\n  - csharp\n  - vb\n  name: ContractHelper\n  fullName: System.Runtime.CompilerServices.ContractHelper\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Diagnostics/Contracts/ContractsBCL.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ContractHelper\n    path: src/mscorlib/src/System/Diagnostics/Contracts/ContractsBCL.cs\n    startLine: 270\n  assemblies:\n  - System.Diagnostics.Contracts\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Provides methods that the binary rewriter uses to handle contract failures.</p>\\n\"\n  syntax:\n    content: public class ContractHelper\n    content.vb: Public Class ContractHelper\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: ContractHelper\n- uid: System.Runtime.CompilerServices.ContractHelper.RaiseContractFailedEvent(System.Diagnostics.Contracts.ContractFailureKind,System.String,System.String,System.Exception)\n  commentId: M:System.Runtime.CompilerServices.ContractHelper.RaiseContractFailedEvent(System.Diagnostics.Contracts.ContractFailureKind,System.String,System.String,System.Exception)\n  id: RaiseContractFailedEvent(System.Diagnostics.Contracts.ContractFailureKind,System.String,System.String,System.Exception)\n  parent: System.Runtime.CompilerServices.ContractHelper\n  langs:\n  - csharp\n  - vb\n  name: RaiseContractFailedEvent(ContractFailureKind, String, String, Exception)\n  fullName: System.Runtime.CompilerServices.ContractHelper.RaiseContractFailedEvent(System.Diagnostics.Contracts.ContractFailureKind, System.String, System.String, System.Exception)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Diagnostics/Contracts/Contracts.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: RaiseContractFailedEvent\n    path: src/mscorlib/src/System/Diagnostics/Contracts/Contracts.cs\n    startLine: 968\n  assemblies:\n  - System.Diagnostics.Contracts\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Used by the binary rewriter to activate the default failure behavior.</p>\\n\"\n  syntax:\n    content: >-\n      [SuppressMessage(\"Microsoft.Design\", \"CA1030:UseEventsWhereAppropriate\")]\n\n      [DebuggerNonUserCode]\n\n      [ReliabilityContract(Consistency.WillNotCorruptState, Cer.MayFail)]\n\n      public static string RaiseContractFailedEvent(ContractFailureKind failureKind, string userMessage, string conditionText, Exception innerException)\n    content.vb: >-\n      <SuppressMessage(\"Microsoft.Design\", \"CA1030:UseEventsWhereAppropriate\")>\n\n      <DebuggerNonUserCode>\n\n      <ReliabilityContract(Consistency.WillNotCorruptState, Cer.MayFail)>\n\n      Public Shared Function RaiseContractFailedEvent(failureKind As ContractFailureKind, userMessage As String, conditionText As String, innerException As Exception) As String\n    parameters:\n    - id: failureKind\n      type: System.Diagnostics.Contracts.ContractFailureKind\n      description: \"\\n<p>One of the enumeration values that specifies the type of failure.</p>\\n\"\n    - id: userMessage\n      type: System.String\n      description: \"\\n<p>Additional user information.</p>\\n\"\n    - id: conditionText\n      type: System.String\n      description: \"\\n<p>The description of the condition that caused the failure.</p>\\n\"\n    - id: innerException\n      type: System.Exception\n      description: \"\\n<p>The inner exception that caused the current exception.</p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>A null reference (<strong>Nothing</strong> in Visual Basic) if the event was handled and should not trigger a failure; otherwise, returns the localized failure message.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>failureKind</em> is not a valid <xref href=\\\"System.Diagnostics.Contracts.ContractFailureKind\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: ContractHelper.RaiseContractFailedEvent(ContractFailureKind, String, String, Exception)\n- uid: System.Runtime.CompilerServices.ContractHelper.TriggerFailure(System.Diagnostics.Contracts.ContractFailureKind,System.String,System.String,System.String,System.Exception)\n  commentId: M:System.Runtime.CompilerServices.ContractHelper.TriggerFailure(System.Diagnostics.Contracts.ContractFailureKind,System.String,System.String,System.String,System.Exception)\n  id: TriggerFailure(System.Diagnostics.Contracts.ContractFailureKind,System.String,System.String,System.String,System.Exception)\n  parent: System.Runtime.CompilerServices.ContractHelper\n  langs:\n  - csharp\n  - vb\n  name: TriggerFailure(ContractFailureKind, String, String, String, Exception)\n  fullName: System.Runtime.CompilerServices.ContractHelper.TriggerFailure(System.Diagnostics.Contracts.ContractFailureKind, System.String, System.String, System.String, System.Exception)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Diagnostics/Contracts/Contracts.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TriggerFailure\n    path: src/mscorlib/src/System/Diagnostics/Contracts/Contracts.cs\n    startLine: 984\n  assemblies:\n  - System.Diagnostics.Contracts\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Triggers the default failure behavior.</p>\\n\"\n  syntax:\n    content: >-\n      [DebuggerNonUserCode]\n\n      [ReliabilityContract(Consistency.WillNotCorruptState, Cer.Success)]\n\n      public static void TriggerFailure(ContractFailureKind kind, string displayMessage, string userMessage, string conditionText, Exception innerException)\n    content.vb: >-\n      <DebuggerNonUserCode>\n\n      <ReliabilityContract(Consistency.WillNotCorruptState, Cer.Success)>\n\n      Public Shared Sub TriggerFailure(kind As ContractFailureKind, displayMessage As String, userMessage As String, conditionText As String, innerException As Exception)\n    parameters:\n    - id: kind\n      type: System.Diagnostics.Contracts.ContractFailureKind\n      description: \"\\n<p>One of the enumeration values that specifies the type of failure.</p>\\n\"\n    - id: displayMessage\n      type: System.String\n      description: \"\\n<p>The message to display.</p>\\n\"\n    - id: userMessage\n      type: System.String\n      description: \"\\n<p>Additional user information.</p>\\n\"\n    - id: conditionText\n      type: System.String\n      description: \"\\n<p>The description of the condition that caused the failure.</p>\\n\"\n    - id: innerException\n      type: System.Exception\n      description: \"\\n<p>The inner exception that caused the current exception.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: ContractHelper.TriggerFailure(ContractFailureKind, String, String, String, Exception)\nreferences:\n- uid: System.Runtime.CompilerServices\n  isExternal: false\n  name: System.Runtime.CompilerServices\n  fullName: System.Runtime.CompilerServices\n  nameWithType: System.Runtime.CompilerServices\n  commentId: N:System.Runtime.CompilerServices\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Diagnostics.Contracts.ContractFailureKind\n  parent: System.Diagnostics.Contracts\n  isExternal: false\n  name: ContractFailureKind\n  fullName: System.Diagnostics.Contracts.ContractFailureKind\n  nameWithType: ContractFailureKind\n  commentId: T:System.Diagnostics.Contracts.ContractFailureKind\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  fullName: System.Exception\n  nameWithType: Exception\n  commentId: T:System.Exception\n- uid: System.Diagnostics.Contracts\n  isExternal: false\n  name: System.Diagnostics.Contracts\n  fullName: System.Diagnostics.Contracts\n  nameWithType: System.Diagnostics.Contracts\n  commentId: N:System.Diagnostics.Contracts\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n"}