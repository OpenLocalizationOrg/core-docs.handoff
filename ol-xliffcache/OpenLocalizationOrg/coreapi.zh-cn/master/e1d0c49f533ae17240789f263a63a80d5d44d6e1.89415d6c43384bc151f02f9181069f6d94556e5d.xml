{"nodes":[{"pos":[504,513],"content":"BIND_OPTS","needQuote":true,"nodes":[{"content":"BIND_OPTS","pos":[0,9]}]},{"pos":[2177,2185],"content":"cbStruct","needQuote":true,"nodes":[{"content":"cbStruct","pos":[0,8]}]},{"pos":[3259,3278],"content":"dwTickCountDeadline","needQuote":true,"nodes":[{"content":"dwTickCountDeadline","pos":[0,19]}]},{"pos":[4477,4485],"content":"grfFlags","needQuote":true,"nodes":[{"content":"grfFlags","pos":[0,8]}]},{"pos":[5496,5503],"content":"grfMode","needQuote":true,"nodes":[{"content":"grfMode","pos":[0,7]}]},{"pos":[6412,6451],"content":"System.Runtime.InteropServices.ComTypes","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices.ComTypes","pos":[0,39]}]},{"pos":[6715,6729],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[6854,6860],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[6909,6910],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6960,6966],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7026,7027],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7113,7119],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7168,7169],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7219,7225],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7285,7286],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7489,7502],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[7609,7620],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[7674,7675],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7702,7703],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7779,7790],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[7844,7845],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7872,7873],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8062,8072],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[8173,8181],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[8232,8233],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8260,8261],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8334,8342],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[8393,8394],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8421,8422],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8625,8647],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[8795,8801],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8868,8869],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8919,8925],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8986,8987]},{"pos":[9042,9048],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9108,9109],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9206,9212],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9279,9280],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9330,9336],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9397,9398]},{"pos":[9453,9459],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9519,9520],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9765,9796],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[9962,9977],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[10053,10054],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10104,10110],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10171,10172]},{"pos":[10227,10233],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10293,10294],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10400,10415],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[10491,10492],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10542,10548],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10609,10610]},{"pos":[10665,10671],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10731,10732],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10958,10967],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[11060,11067],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[11135,11136],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11163,11164],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11233,11240],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[11308,11309],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11336,11337],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11493,11502],"content":"ValueType","needQuote":true,"nodes":[{"content":"ValueType","pos":[0,9]}]},{"pos":[11656,11662],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11783,11789],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[11919,11924],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"items:\n- uid: System.Runtime.InteropServices.ComTypes.BIND_OPTS\n  commentId: T:System.Runtime.InteropServices.ComTypes.BIND_OPTS\n  id: BIND_OPTS\n  parent: System.Runtime.InteropServices.ComTypes\n  children:\n  - System.Runtime.InteropServices.ComTypes.BIND_OPTS.cbStruct\n  - System.Runtime.InteropServices.ComTypes.BIND_OPTS.dwTickCountDeadline\n  - System.Runtime.InteropServices.ComTypes.BIND_OPTS.grfFlags\n  - System.Runtime.InteropServices.ComTypes.BIND_OPTS.grfMode\n  langs:\n  - csharp\n  - vb\n  name: BIND_OPTS\n  fullName: System.Runtime.InteropServices.ComTypes.BIND_OPTS\n  type: Struct\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IBindCtx.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: BIND_OPTS\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IBindCtx.cs\n    startLine: 17\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Stores the parameters that are used during a moniker binding operation.</p>\\n\"\n  syntax:\n    content: >-\n      [StructLayout(LayoutKind.Sequential)]\n\n      public struct BIND_OPTS\n    content.vb: >-\n      <StructLayout(LayoutKind.Sequential)>\n\n      Public Structure BIND_OPTS\n  inheritedMembers:\n  - System.ValueType.Equals(System.Object)\n  - System.ValueType.GetHashCode\n  - System.ValueType.ToString\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  attributes:\n  - type: System.Runtime.InteropServices.StructLayoutAttribute\n    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)\n    arguments:\n    - type: System.Runtime.InteropServices.LayoutKind\n      value: 0\n  modifiers.csharp:\n  - public\n  - struct\n  modifiers.vb:\n  - Public\n  - Structure\n  nameWithType: BIND_OPTS\n- uid: System.Runtime.InteropServices.ComTypes.BIND_OPTS.cbStruct\n  commentId: F:System.Runtime.InteropServices.ComTypes.BIND_OPTS.cbStruct\n  id: cbStruct\n  parent: System.Runtime.InteropServices.ComTypes.BIND_OPTS\n  langs:\n  - csharp\n  - vb\n  name: cbStruct\n  fullName: System.Runtime.InteropServices.ComTypes.BIND_OPTS.cbStruct\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IBindCtx.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: cbStruct\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IBindCtx.cs\n    startLine: 21\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Specifies the size, in bytes, of the <strong>BIND_OPTS</strong> structure.</p>\\n\"\n  syntax:\n    content: public int cbStruct\n    content.vb: Public cbStruct As Integer\n    return:\n      type: System.Int32\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: BIND_OPTS.cbStruct\n- uid: System.Runtime.InteropServices.ComTypes.BIND_OPTS.dwTickCountDeadline\n  commentId: F:System.Runtime.InteropServices.ComTypes.BIND_OPTS.dwTickCountDeadline\n  id: dwTickCountDeadline\n  parent: System.Runtime.InteropServices.ComTypes.BIND_OPTS\n  langs:\n  - csharp\n  - vb\n  name: dwTickCountDeadline\n  fullName: System.Runtime.InteropServices.ComTypes.BIND_OPTS.dwTickCountDeadline\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IBindCtx.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: dwTickCountDeadline\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IBindCtx.cs\n    startLine: 24\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Indicates the amount of time (clock time in milliseconds, as returned by the <strong>GetTickCount</strong> function) that the caller specified to complete the binding operation.</p>\\n\"\n  syntax:\n    content: public int dwTickCountDeadline\n    content.vb: Public dwTickCountDeadline As Integer\n    return:\n      type: System.Int32\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: BIND_OPTS.dwTickCountDeadline\n- uid: System.Runtime.InteropServices.ComTypes.BIND_OPTS.grfFlags\n  commentId: F:System.Runtime.InteropServices.ComTypes.BIND_OPTS.grfFlags\n  id: grfFlags\n  parent: System.Runtime.InteropServices.ComTypes.BIND_OPTS\n  langs:\n  - csharp\n  - vb\n  name: grfFlags\n  fullName: System.Runtime.InteropServices.ComTypes.BIND_OPTS.grfFlags\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IBindCtx.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: grfFlags\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IBindCtx.cs\n    startLine: 22\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Controls aspects of moniker binding operations.</p>\\n\"\n  syntax:\n    content: public int grfFlags\n    content.vb: Public grfFlags As Integer\n    return:\n      type: System.Int32\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: BIND_OPTS.grfFlags\n- uid: System.Runtime.InteropServices.ComTypes.BIND_OPTS.grfMode\n  commentId: F:System.Runtime.InteropServices.ComTypes.BIND_OPTS.grfMode\n  id: grfMode\n  parent: System.Runtime.InteropServices.ComTypes.BIND_OPTS\n  langs:\n  - csharp\n  - vb\n  name: grfMode\n  fullName: System.Runtime.InteropServices.ComTypes.BIND_OPTS.grfMode\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IBindCtx.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: grfMode\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IBindCtx.cs\n    startLine: 23\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Represents flags that should be used when opening the file that contains the object identified by the moniker.</p>\\n\"\n  syntax:\n    content: public int grfMode\n    content.vb: Public grfMode As Integer\n    return:\n      type: System.Int32\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: BIND_OPTS.grfMode\nreferences:\n- uid: System.Runtime.InteropServices.ComTypes\n  isExternal: false\n  name: System.Runtime.InteropServices.ComTypes\n  fullName: System.Runtime.InteropServices.ComTypes\n  nameWithType: System.Runtime.InteropServices.ComTypes\n  commentId: N:System.Runtime.InteropServices.ComTypes\n- uid: System.ValueType.Equals(System.Object)\n  parent: System.ValueType\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.ValueType.Equals(System.Object)\n  spec.csharp:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ValueType.Equals(Object)\n  commentId: M:System.ValueType.Equals(System.Object)\n- uid: System.ValueType.GetHashCode\n  parent: System.ValueType\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.ValueType.GetHashCode()\n  spec.csharp:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.GetHashCode()\n  commentId: M:System.ValueType.GetHashCode\n- uid: System.ValueType.ToString\n  parent: System.ValueType\n  isExternal: false\n  name: ToString()\n  fullName: System.ValueType.ToString()\n  spec.csharp:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.ToString()\n  commentId: M:System.ValueType.ToString\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  fullName: System.ValueType\n  nameWithType: ValueType\n  commentId: T:System.ValueType\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n"}