{"nodes":[{"pos":[1742,1754],"content":"SqlParameter","needQuote":true,"nodes":[{"content":"SqlParameter","pos":[0,12]}]},{"pos":[3381,3395],"content":"SqlParameter()","needQuote":true,"nodes":[{"content":"SqlParameter()","pos":[0,14]}]},{"pos":[4482,4513],"content":"SqlParameter(String, SqlDbType)","needQuote":true,"nodes":[{"content":"SqlParameter(String, SqlDbType)","pos":[0,31]}]},{"content":"\\n&lt;p&gt;The name of the parameter to map.","pos":[5442,5480],"source":"\\n<p>The name of the parameter to map."},{"content":"&lt;/p&gt;\\n","pos":[5481,5487],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The value supplied in the &lt;em&gt;dbType&lt;/em&gt; parameter is an invalid back-end data type.","pos":[5783,5873],"source":"\\n<p>The value supplied in the <em>dbType</em> parameter is an invalid back-end data type."},{"content":"&lt;/p&gt;\\n","pos":[5874,5880],"source":" </p>\\n"},{"pos":[6349,6387],"content":"SqlParameter(String, SqlDbType, Int32)","needQuote":true,"nodes":[{"content":"SqlParameter(String, SqlDbType, Int32)","pos":[0,38]}]},{"content":"\\n&lt;p&gt;The name of the parameter to map.","pos":[7441,7479],"source":"\\n<p>The name of the parameter to map."},{"content":"&lt;/p&gt;\\n","pos":[7480,7486],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The length of the parameter.","pos":[7733,7766],"source":"\\n<p>The length of the parameter."},{"content":"&lt;/p&gt;\\n","pos":[7767,7773],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The value supplied in the &lt;em&gt;dbType&lt;/em&gt; parameter is an invalid back-end data type.","pos":[7884,7974],"source":"\\n<p>The value supplied in the <em>dbType</em> parameter is an invalid back-end data type."},{"content":"&lt;/p&gt;\\n","pos":[7975,7981],"source":" </p>\\n"},{"pos":[8499,8545],"content":"SqlParameter(String, SqlDbType, Int32, String)","needQuote":true,"nodes":[{"content":"SqlParameter(String, SqlDbType, Int32, String)","pos":[0,46]}]},{"content":"\\n&lt;p&gt;The name of the parameter to map.","pos":[9683,9721],"source":"\\n<p>The name of the parameter to map."},{"content":"&lt;/p&gt;\\n","pos":[9722,9728],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The length of the parameter.","pos":[9975,10008],"source":"\\n<p>The length of the parameter."},{"content":"&lt;/p&gt;\\n","pos":[10009,10015],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The value supplied in the &lt;em&gt;dbType&lt;/em&gt; parameter is an invalid back-end data type.","pos":[10572,10662],"source":"\\n<p>The value supplied in the <em>dbType</em> parameter is an invalid back-end data type."},{"content":"&lt;/p&gt;\\n","pos":[10663,10669],"source":" </p>\\n"},{"pos":[11090,11118],"content":"SqlParameter(String, Object)","needQuote":true,"nodes":[{"content":"SqlParameter(String, Object)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The name of the parameter to map.","pos":[12131,12169],"source":"\\n<p>The name of the parameter to map."},{"content":"&lt;/p&gt;\\n","pos":[12170,12176],"source":" </p>\\n"},{"pos":[12781,12792],"content":"CompareInfo","needQuote":true,"nodes":[{"content":"CompareInfo","pos":[0,11]}]},{"pos":[14170,14176],"content":"DbType","needQuote":true,"nodes":[{"content":"DbType","pos":[0,6]}]},{"pos":[15444,15453],"content":"Direction","needQuote":true,"nodes":[{"content":"Direction","pos":[0,9]}]},{"pos":[17087,17097],"content":"IsNullable","needQuote":true,"nodes":[{"content":"IsNullable","pos":[0,10]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if null values are accepted; otherwise &lt;strong&gt;false&lt;/strong&gt;.","pos":[18094,18185],"source":"\\n<p>\\n<strong>true</strong> if null values are accepted; otherwise <strong>false</strong>."},{"content":"The default is &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[18186,18230],"source":" The default is <strong>false</strong>.</p>\\n"},{"pos":[18578,18586],"content":"LocaleId","needQuote":true,"nodes":[{"content":"LocaleId","pos":[0,8]}]},{"content":"\\n&lt;p&gt;Returns the locale identifier associated with the parameter.&lt;/p&gt;\\n","pos":[19331,19402],"source":"\\n<p>Returns the locale identifier associated with the parameter.</p>\\n"},{"pos":[19715,19721],"content":"Offset","needQuote":true,"nodes":[{"content":"Offset","pos":[0,6]}]},{"pos":[20990,21003],"content":"ParameterName","needQuote":true,"nodes":[{"content":"ParameterName","pos":[0,13]}]},{"pos":[22322,22331],"content":"Precision","needQuote":true,"nodes":[{"content":"Precision","pos":[0,9]}]},{"pos":[23840,23845],"content":"Scale","needQuote":true,"nodes":[{"content":"Scale","pos":[0,5]}]},{"pos":[25142,25146],"content":"Size","needQuote":true,"nodes":[{"content":"Size","pos":[0,4]}]},{"content":"\\n&lt;p&gt;The maximum size, in bytes, of the data within the column.","pos":[25876,25939],"source":"\\n<p>The maximum size, in bytes, of the data within the column."},{"content":"The default value is inferred from the parameter value.&lt;/p&gt;\\n","pos":[25940,26001],"source":" The default value is inferred from the parameter value.</p>\\n"},{"pos":[26355,26367],"content":"SourceColumn","needQuote":true,"nodes":[{"content":"SourceColumn","pos":[0,12]}]},{"pos":[27899,27922],"content":"SourceColumnNullMapping","needQuote":true,"nodes":[{"content":"SourceColumnNullMapping","pos":[0,23]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the source column is nullable; &lt;strong&gt;false&lt;/strong&gt; if it is not.&lt;/p&gt;\\n","pos":[28910,29015],"source":"\\n<p>\\n<strong>true</strong> if the source column is nullable; <strong>false</strong> if it is not.</p>\\n"},{"pos":[29379,29388],"content":"SqlDbType","needQuote":true,"nodes":[{"content":"SqlDbType","pos":[0,9]}]},{"pos":[30643,30651],"content":"SqlValue","needQuote":true,"nodes":[{"content":"SqlValue","pos":[0,8]}]},{"pos":[31840,31848],"content":"TypeName","needQuote":true,"nodes":[{"content":"TypeName","pos":[0,8]}]},{"content":"\\n&lt;p&gt;The type name of the specified table-valued parameter.&lt;/p&gt;\\n","pos":[32552,32617],"source":"\\n<p>The type name of the specified table-valued parameter.</p>\\n"},{"pos":[32927,32932],"content":"Value","needQuote":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[34177,34204],"content":"XmlSchemaCollectionDatabase","needQuote":true,"nodes":[{"content":"XmlSchemaCollectionDatabase","pos":[0,27]}]},{"content":"\\n&lt;p&gt;The name of the database where the schema collection for this XML instance is located.&lt;/p&gt;\\n","pos":[35019,35116],"source":"\\n<p>The name of the database where the schema collection for this XML instance is located.</p>\\n"},{"pos":[35499,35522],"content":"XmlSchemaCollectionName","needQuote":true,"nodes":[{"content":"XmlSchemaCollectionName","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The name of the schema collection for this XML instance.&lt;/p&gt;\\n","pos":[36291,36358],"source":"\\n<p>The name of the schema collection for this XML instance.</p>\\n"},{"pos":[36761,36792],"content":"XmlSchemaCollectionOwningSchema","needQuote":true,"nodes":[{"content":"XmlSchemaCollectionOwningSchema","pos":[0,31]}]},{"content":"\\n&lt;p&gt;The owning relational schema for this XML instance.&lt;/p&gt;\\n","pos":[37622,37684],"source":"\\n<p>The owning relational schema for this XML instance.</p>\\n"},{"pos":[38035,38048],"content":"ResetDbType()","needQuote":true,"nodes":[{"content":"ResetDbType()","pos":[0,13]}]},{"pos":[39104,39120],"content":"ResetSqlDbType()","needQuote":true,"nodes":[{"content":"ResetSqlDbType()","pos":[0,16]}]},{"pos":[40127,40137],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[41269,41290],"content":"System.Data.SqlClient","needQuote":true,"nodes":[{"content":"System.Data.SqlClient","pos":[0,21]}]},{"pos":[41466,41472],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[41593,41599],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[41730,41736],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[41894,41903],"content":"SqlDbType","needQuote":true,"nodes":[{"content":"SqlDbType","pos":[0,9]}]},{"pos":[42048,42059],"content":"System.Data","needQuote":true,"nodes":[{"content":"System.Data","pos":[0,11]}]},{"pos":[42204,42209],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[42390,42407],"content":"SqlCompareOptions","needQuote":true,"nodes":[{"content":"SqlCompareOptions","pos":[0,17]}]},{"pos":[42603,42623],"content":"System.Data.SqlTypes","needQuote":true,"nodes":[{"content":"System.Data.SqlTypes","pos":[0,20]}]},{"pos":[42806,42812],"content":"DbType","needQuote":true,"nodes":[{"content":"DbType","pos":[0,6]}]},{"pos":[42989,43007],"content":"ParameterDirection","needQuote":true,"nodes":[{"content":"ParameterDirection","pos":[0,18]}]},{"pos":[43199,43206],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[43352,43356],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[43506,43523],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]}],"content":"items:\n- uid: System.Data.SqlClient.SqlParameter\n  commentId: T:System.Data.SqlClient.SqlParameter\n  id: SqlParameter\n  parent: System.Data.SqlClient\n  children:\n  - System.Data.SqlClient.SqlParameter.#ctor\n  - System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType)\n  - System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32)\n  - System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.String)\n  - System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Object)\n  - System.Data.SqlClient.SqlParameter.CompareInfo\n  - System.Data.SqlClient.SqlParameter.DbType\n  - System.Data.SqlClient.SqlParameter.Direction\n  - System.Data.SqlClient.SqlParameter.IsNullable\n  - System.Data.SqlClient.SqlParameter.LocaleId\n  - System.Data.SqlClient.SqlParameter.Offset\n  - System.Data.SqlClient.SqlParameter.ParameterName\n  - System.Data.SqlClient.SqlParameter.Precision\n  - System.Data.SqlClient.SqlParameter.ResetDbType\n  - System.Data.SqlClient.SqlParameter.ResetSqlDbType\n  - System.Data.SqlClient.SqlParameter.Scale\n  - System.Data.SqlClient.SqlParameter.Size\n  - System.Data.SqlClient.SqlParameter.SourceColumn\n  - System.Data.SqlClient.SqlParameter.SourceColumnNullMapping\n  - System.Data.SqlClient.SqlParameter.SqlDbType\n  - System.Data.SqlClient.SqlParameter.SqlValue\n  - System.Data.SqlClient.SqlParameter.ToString\n  - System.Data.SqlClient.SqlParameter.TypeName\n  - System.Data.SqlClient.SqlParameter.Value\n  - System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase\n  - System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName\n  - System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema\n  langs:\n  - csharp\n  - vb\n  name: SqlParameter\n  fullName: System.Data.SqlClient.SqlParameter\n  type: Class\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterHelper.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SqlParameter\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterHelper.cs\n    startLine: 12\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Represents a parameter to a <xref href=\\\"System.Data.SqlClient.SqlCommand\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and optionally its mapping to <xref href=\\\"System.Data.DataSet\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> columns. This class cannot be inherited. For more information on parameters, see Configuring Parameters and Parameter Data Types.</p>\\n\"\n  syntax:\n    content: 'public sealed class SqlParameter : DbParameter, DbParameter'\n    content.vb: >-\n      Public NotInheritable Class SqlParameter\n          Inherits DbParameter\n          Implements DbParameter\n  seealso:\n  - type: System.Data.SqlClient.SqlParameterCollection\n    commentId: T:System.Data.SqlClient.SqlParameterCollection\n  - type: System.Data.SqlClient.SqlCommand\n    commentId: T:System.Data.SqlClient.SqlCommand\n  inheritance:\n  - System.Object\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: SqlParameter\n- uid: System.Data.SqlClient.SqlParameter.#ctor\n  commentId: M:System.Data.SqlClient.SqlParameter.#ctor\n  id: '#ctor'\n  parent: System.Data.SqlClient.SqlParameter\n  langs:\n  - csharp\n  - vb\n  name: SqlParameter()\n  fullName: System.Data.SqlClient.SqlParameter.SqlParameter()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameter.cs\n    startLine: 83\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public SqlParameter()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlParameter.SqlParameter()\n- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType)\n  commentId: M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType)\n  id: '#ctor(System.String,System.Data.SqlDbType)'\n  parent: System.Data.SqlClient.SqlParameter\n  langs:\n  - csharp\n  - vb\n  name: SqlParameter(String, SqlDbType)\n  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(System.String, System.Data.SqlDbType)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameter.cs\n    startLine: 87\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class that uses the parameter name and the data type.</p>\\n\"\n  syntax:\n    content: public SqlParameter(string parameterName, SqlDbType dbType)\n    content.vb: Public Sub New(parameterName As String, dbType As SqlDbType)\n    parameters:\n    - id: parameterName\n      type: System.String\n      description: \"\\n<p>The name of the parameter to map. </p>\\n\"\n    - id: dbType\n      type: System.Data.SqlDbType\n      description: \"\\n<p>One of the <xref href=\\\"System.Data.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The value supplied in the <em>dbType</em> parameter is an invalid back-end data type. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlParameter.SqlParameter(String, SqlDbType)\n- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32)\n  commentId: M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32)\n  id: '#ctor(System.String,System.Data.SqlDbType,System.Int32)'\n  parent: System.Data.SqlClient.SqlParameter\n  langs:\n  - csharp\n  - vb\n  name: SqlParameter(String, SqlDbType, Int32)\n  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(System.String, System.Data.SqlDbType, System.Int32)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameter.cs\n    startLine: 101\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class that uses the parameter name, the <xref href=\\\"System.Data.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, and the size.</p>\\n\"\n  syntax:\n    content: public SqlParameter(string parameterName, SqlDbType dbType, int size)\n    content.vb: Public Sub New(parameterName As String, dbType As SqlDbType, size As Integer)\n    parameters:\n    - id: parameterName\n      type: System.String\n      description: \"\\n<p>The name of the parameter to map. </p>\\n\"\n    - id: dbType\n      type: System.Data.SqlDbType\n      description: \"\\n<p>One of the <xref href=\\\"System.Data.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. </p>\\n\"\n    - id: size\n      type: System.Int32\n      description: \"\\n<p>The length of the parameter. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The value supplied in the <em>dbType</em> parameter is an invalid back-end data type. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlParameter.SqlParameter(String, SqlDbType, Int32)\n- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.String)\n  commentId: M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.String)\n  id: '#ctor(System.String,System.Data.SqlDbType,System.Int32,System.String)'\n  parent: System.Data.SqlClient.SqlParameter\n  langs:\n  - csharp\n  - vb\n  name: SqlParameter(String, SqlDbType, Int32, String)\n  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(System.String, System.Data.SqlDbType, System.Int32, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameter.cs\n    startLine: 108\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class that uses the parameter name, the <xref href=\\\"System.Data.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, the size, and the source column name.</p>\\n\"\n  syntax:\n    content: public SqlParameter(string parameterName, SqlDbType dbType, int size, string sourceColumn)\n    content.vb: Public Sub New(parameterName As String, dbType As SqlDbType, size As Integer, sourceColumn As String)\n    parameters:\n    - id: parameterName\n      type: System.String\n      description: \"\\n<p>The name of the parameter to map. </p>\\n\"\n    - id: dbType\n      type: System.Data.SqlDbType\n      description: \"\\n<p>One of the <xref href=\\\"System.Data.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. </p>\\n\"\n    - id: size\n      type: System.Int32\n      description: \"\\n<p>The length of the parameter. </p>\\n\"\n    - id: sourceColumn\n      type: System.String\n      description: \"\\n<p>The name of the source column (<xref href=\\\"System.Data.SqlClient.SqlParameter.SourceColumn\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>) if this <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is used in a call to <xref href=\\\"System.Data.Common.DbDataAdapter.Update\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The value supplied in the <em>dbType</em> parameter is an invalid back-end data type. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlParameter.SqlParameter(String, SqlDbType, Int32, String)\n- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Object)\n  commentId: M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Object)\n  id: '#ctor(System.String,System.Object)'\n  parent: System.Data.SqlClient.SqlParameter\n  langs:\n  - csharp\n  - vb\n  name: SqlParameter(String, Object)\n  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(System.String, System.Object)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameter.cs\n    startLine: 93\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class that uses the parameter name and a value of the new <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public SqlParameter(string parameterName, object value)\n    content.vb: Public Sub New(parameterName As String, value As Object)\n    parameters:\n    - id: parameterName\n      type: System.String\n      description: \"\\n<p>The name of the parameter to map. </p>\\n\"\n    - id: value\n      type: System.Object\n      description: \"\\n<p>An <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is the value of the <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlParameter.SqlParameter(String, Object)\n- uid: System.Data.SqlClient.SqlParameter.CompareInfo\n  commentId: P:System.Data.SqlClient.SqlParameter.CompareInfo\n  id: CompareInfo\n  parent: System.Data.SqlClient.SqlParameter\n  langs:\n  - csharp\n  - vb\n  name: CompareInfo\n  fullName: System.Data.SqlClient.SqlParameter.CompareInfo\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CompareInfo\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameter.cs\n    startLine: 131\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Gets or sets the <xref href=\\\"System.Globalization.CompareInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that defines how string comparisons should be performed for this parameter.</p>\\n\"\n  syntax:\n    content: public SqlCompareOptions CompareInfo { get; set; }\n    content.vb: Public Property CompareInfo As SqlCompareOptions\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlCompareOptions\n      description: \"\\n<p>A <xref href=\\\"System.Globalization.CompareInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that defines string comparison for this parameter.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: SqlParameter.CompareInfo\n- uid: System.Data.SqlClient.SqlParameter.DbType\n  commentId: P:System.Data.SqlClient.SqlParameter.DbType\n  id: DbType\n  parent: System.Data.SqlClient.SqlParameter\n  langs:\n  - csharp\n  - vb\n  name: DbType\n  fullName: System.Data.SqlClient.SqlParameter.DbType\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DbType\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameter.cs\n    startLine: 197\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Gets or sets the <xref href=\\\"System.Data.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the parameter.</p>\\n\"\n  syntax:\n    content: public override DbType DbType { get; set; }\n    content.vb: Public Overrides Property DbType As DbType\n    parameters: []\n    return:\n      type: DbType\n      description: \"\\n<p>One of the <xref href=\\\"System.Data.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. The default is <strong>NVarChar</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlParameter.DbType\n- uid: System.Data.SqlClient.SqlParameter.Direction\n  commentId: P:System.Data.SqlClient.SqlParameter.Direction\n  id: Direction\n  parent: System.Data.SqlClient.SqlParameter\n  langs:\n  - csharp\n  - vb\n  name: Direction\n  fullName: System.Data.SqlClient.SqlParameter.Direction\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterHelper.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Direction\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterHelper.cs\n    startLine: 42\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Gets or sets a value that indicates whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.</p>\\n\"\n  syntax:\n    content: public override ParameterDirection Direction { get; set; }\n    content.vb: Public Overrides Property Direction As ParameterDirection\n    parameters: []\n    return:\n      type: ParameterDirection\n      description: \"\\n<p>One of the <xref href=\\\"System.Data.ParameterDirection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. The default is <strong>Input</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The property was not set to one of the valid <xref href=\\\"System.Data.ParameterDirection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlParameter.Direction\n- uid: System.Data.SqlClient.SqlParameter.IsNullable\n  commentId: P:System.Data.SqlClient.SqlParameter.IsNullable\n  id: IsNullable\n  parent: System.Data.SqlClient.SqlParameter\n  langs:\n  - csharp\n  - vb\n  name: IsNullable\n  fullName: System.Data.SqlClient.SqlParameter.IsNullable\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterHelper.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsNullable\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterHelper.cs\n    startLine: 69\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Gets or sets a value that indicates whether the parameter accepts null values. <xref href=\\\"System.Data.SqlClient.SqlParameter.IsNullable\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not used to validate the parameter’s value and will not prevent sending or receiving a null value when executing a command.</p>\\n\"\n  syntax:\n    content: public override bool IsNullable { get; set; }\n    content.vb: Public Overrides Property IsNullable As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if null values are accepted; otherwise <strong>false</strong>. The default is <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlParameter.IsNullable\n- uid: System.Data.SqlClient.SqlParameter.LocaleId\n  commentId: P:System.Data.SqlClient.SqlParameter.LocaleId\n  id: LocaleId\n  parent: System.Data.SqlClient.SqlParameter\n  langs:\n  - csharp\n  - vb\n  name: LocaleId\n  fullName: System.Data.SqlClient.SqlParameter.LocaleId\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: LocaleId\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameter.cs\n    startLine: 233\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Gets or sets the locale identifier that determines conventions and language for a particular region.</p>\\n\"\n  syntax:\n    content: public int LocaleId { get; set; }\n    content.vb: Public Property LocaleId As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>Returns the locale identifier associated with the parameter.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: SqlParameter.LocaleId\n- uid: System.Data.SqlClient.SqlParameter.Offset\n  commentId: P:System.Data.SqlClient.SqlParameter.Offset\n  id: Offset\n  parent: System.Data.SqlClient.SqlParameter\n  langs:\n  - csharp\n  - vb\n  name: Offset\n  fullName: System.Data.SqlClient.SqlParameter.Offset\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterHelper.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Offset\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterHelper.cs\n    startLine: 82\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Gets or sets the offset to the <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property.</p>\\n\"\n  syntax:\n    content: public int Offset { get; set; }\n    content.vb: Public Property Offset As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The offset to the <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. The default is 0.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: SqlParameter.Offset\n- uid: System.Data.SqlClient.SqlParameter.ParameterName\n  commentId: P:System.Data.SqlClient.SqlParameter.ParameterName\n  id: ParameterName\n  parent: System.Data.SqlClient.SqlParameter\n  langs:\n  - csharp\n  - vb\n  name: ParameterName\n  fullName: System.Data.SqlClient.SqlParameter.ParameterName\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ParameterName\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameter.cs\n    startLine: 443\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Gets or sets the name of the <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override string ParameterName { get; set; }\n    content.vb: Public Overrides Property ParameterName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The name of the <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. The default is an empty string.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlParameter.ParameterName\n- uid: System.Data.SqlClient.SqlParameter.Precision\n  commentId: P:System.Data.SqlClient.SqlParameter.Precision\n  id: Precision\n  parent: System.Data.SqlClient.SqlParameter\n  langs:\n  - csharp\n  - vb\n  name: Precision\n  fullName: System.Data.SqlClient.SqlParameter.Precision\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Precision\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameter.cs\n    startLine: 482\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Gets or sets the maximum number of digits used to represent the <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property.</p>\\n\"\n  syntax:\n    content: public override byte Precision { get; set; }\n    content.vb: Public Overrides Property Precision As Byte\n    parameters: []\n    return:\n      type: System.Byte\n      description: \"\\n<p>The maximum number of digits used to represent the <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property. The default value is 0. This indicates that the data provider sets the precision for <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: SqlParameter.Precision\n- uid: System.Data.SqlClient.SqlParameter.Scale\n  commentId: P:System.Data.SqlClient.SqlParameter.Scale\n  id: Scale\n  parent: System.Data.SqlClient.SqlParameter\n  langs:\n  - csharp\n  - vb\n  name: Scale\n  fullName: System.Data.SqlClient.SqlParameter.Scale\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Scale\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameter.cs\n    startLine: 526\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Gets or sets the number of decimal places to which <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is resolved.</p>\\n\"\n  syntax:\n    content: public override byte Scale { get; set; }\n    content.vb: Public Overrides Property Scale As Byte\n    parameters: []\n    return:\n      type: System.Byte\n      description: \"\\n<p>The number of decimal places to which <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is resolved. The default is 0.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: SqlParameter.Scale\n- uid: System.Data.SqlClient.SqlParameter.Size\n  commentId: P:System.Data.SqlClient.SqlParameter.Size\n  id: Size\n  parent: System.Data.SqlClient.SqlParameter\n  langs:\n  - csharp\n  - vb\n  name: Size\n  fullName: System.Data.SqlClient.SqlParameter.Size\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterHelper.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Size\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterHelper.cs\n    startLine: 98\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Gets or sets the maximum size, in bytes, of the data within the column.</p>\\n\"\n  syntax:\n    content: public override int Size { get; set; }\n    content.vb: Public Overrides Property Size As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The maximum size, in bytes, of the data within the column. The default value is inferred from the parameter value.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlParameter.Size\n- uid: System.Data.SqlClient.SqlParameter.SourceColumn\n  commentId: P:System.Data.SqlClient.SqlParameter.SourceColumn\n  id: SourceColumn\n  parent: System.Data.SqlClient.SqlParameter\n  langs:\n  - csharp\n  - vb\n  name: SourceColumn\n  fullName: System.Data.SqlClient.SqlParameter.SourceColumn\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterHelper.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SourceColumn\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterHelper.cs\n    startLine: 129\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Gets or sets the name of the source column mapped to the <xref href=\\\"System.Data.DataSet\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and used for loading or returning the <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref></p>\\n\"\n  syntax:\n    content: public override string SourceColumn { get; set; }\n    content.vb: Public Overrides Property SourceColumn As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The name of the source column mapped to the <xref href=\\\"System.Data.DataSet\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. The default is an empty string.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlParameter.SourceColumn\n- uid: System.Data.SqlClient.SqlParameter.SourceColumnNullMapping\n  commentId: P:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping\n  id: SourceColumnNullMapping\n  parent: System.Data.SqlClient.SqlParameter\n  langs:\n  - csharp\n  - vb\n  name: SourceColumnNullMapping\n  fullName: System.Data.SqlClient.SqlParameter.SourceColumnNullMapping\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterHelper.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SourceColumnNullMapping\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterHelper.cs\n    startLine: 142\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Sets or gets a value which indicates whether the source column is nullable. This allows <xref href=\\\"System.Data.SqlClient.SqlCommandBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to correctly generate Update statements for nullable columns.</p>\\n\"\n  syntax:\n    content: public override bool SourceColumnNullMapping { get; set; }\n    content.vb: Public Overrides Property SourceColumnNullMapping As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the source column is nullable; <strong>false</strong> if it is not.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlParameter.SourceColumnNullMapping\n- uid: System.Data.SqlClient.SqlParameter.SqlDbType\n  commentId: P:System.Data.SqlClient.SqlParameter.SqlDbType\n  id: SqlDbType\n  parent: System.Data.SqlClient.SqlParameter\n  langs:\n  - csharp\n  - vb\n  name: SqlDbType\n  fullName: System.Data.SqlClient.SqlParameter.SqlDbType\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SqlDbType\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameter.cs\n    startLine: 567\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Gets or sets the <xref href=\\\"System.Data.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the parameter.</p>\\n\"\n  syntax:\n    content: public SqlDbType SqlDbType { get; set; }\n    content.vb: Public Property SqlDbType As SqlDbType\n    parameters: []\n    return:\n      type: System.Data.SqlDbType\n      description: \"\\n<p>One of the <xref href=\\\"System.Data.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. The default is <strong>NVarChar</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: SqlParameter.SqlDbType\n- uid: System.Data.SqlClient.SqlParameter.SqlValue\n  commentId: P:System.Data.SqlClient.SqlParameter.SqlValue\n  id: SqlValue\n  parent: System.Data.SqlClient.SqlParameter\n  langs:\n  - csharp\n  - vb\n  name: SqlValue\n  fullName: System.Data.SqlClient.SqlParameter.SqlValue\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SqlValue\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameter.cs\n    startLine: 609\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Gets or sets the value of the parameter as an SQL type.</p>\\n\"\n  syntax:\n    content: public object SqlValue { get; set; }\n    content.vb: Public Property SqlValue As Object\n    parameters: []\n    return:\n      type: System.Object\n      description: \"\\n<p>An <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is the value of the parameter, using SQL types. The default value is null.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: SqlParameter.SqlValue\n- uid: System.Data.SqlClient.SqlParameter.TypeName\n  commentId: P:System.Data.SqlClient.SqlParameter.TypeName\n  id: TypeName\n  parent: System.Data.SqlClient.SqlParameter\n  langs:\n  - csharp\n  - vb\n  name: TypeName\n  fullName: System.Data.SqlClient.SqlParameter.TypeName\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TypeName\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameter.cs\n    startLine: 650\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Gets or sets the type name for a table-valued parameter.</p>\\n\"\n  syntax:\n    content: public string TypeName { get; set; }\n    content.vb: Public Property TypeName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The type name of the specified table-valued parameter.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: SqlParameter.TypeName\n- uid: System.Data.SqlClient.SqlParameter.Value\n  commentId: P:System.Data.SqlClient.SqlParameter.Value\n  id: Value\n  parent: System.Data.SqlClient.SqlParameter\n  langs:\n  - csharp\n  - vb\n  name: Value\n  fullName: System.Data.SqlClient.SqlParameter.Value\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Value\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameter.cs\n    startLine: 663\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Gets or sets the value of the parameter.</p>\\n\"\n  syntax:\n    content: public override object Value { get; set; }\n    content.vb: Public Overrides Property Value As Object\n    parameters: []\n    return:\n      type: System.Object\n      description: \"\\n<p>An <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is the value of the parameter. The default value is null.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlParameter.Value\n- uid: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase\n  commentId: P:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase\n  id: XmlSchemaCollectionDatabase\n  parent: System.Data.SqlClient.SqlParameter\n  langs:\n  - csharp\n  - vb\n  name: XmlSchemaCollectionDatabase\n  fullName: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: XmlSchemaCollectionDatabase\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameter.cs\n    startLine: 158\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Gets the name of the database where the schema collection for this XML instance is located.</p>\\n\"\n  syntax:\n    content: public string XmlSchemaCollectionDatabase { get; set; }\n    content.vb: Public Property XmlSchemaCollectionDatabase As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The name of the database where the schema collection for this XML instance is located.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: SqlParameter.XmlSchemaCollectionDatabase\n- uid: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName\n  commentId: P:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName\n  id: XmlSchemaCollectionName\n  parent: System.Data.SqlClient.SqlParameter\n  langs:\n  - csharp\n  - vb\n  name: XmlSchemaCollectionName\n  fullName: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: XmlSchemaCollectionName\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameter.cs\n    startLine: 184\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Gets the name of the schema collection for this XML instance.</p>\\n\"\n  syntax:\n    content: public string XmlSchemaCollectionName { get; set; }\n    content.vb: Public Property XmlSchemaCollectionName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The name of the schema collection for this XML instance.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: SqlParameter.XmlSchemaCollectionName\n- uid: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema\n  commentId: P:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema\n  id: XmlSchemaCollectionOwningSchema\n  parent: System.Data.SqlClient.SqlParameter\n  langs:\n  - csharp\n  - vb\n  name: XmlSchemaCollectionOwningSchema\n  fullName: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: XmlSchemaCollectionOwningSchema\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameter.cs\n    startLine: 171\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>The owning relational schema where the schema collection for this XML instance is located.</p>\\n\"\n  syntax:\n    content: public string XmlSchemaCollectionOwningSchema { get; set; }\n    content.vb: Public Property XmlSchemaCollectionOwningSchema As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The owning relational schema for this XML instance.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: SqlParameter.XmlSchemaCollectionOwningSchema\n- uid: System.Data.SqlClient.SqlParameter.ResetDbType\n  commentId: M:System.Data.SqlClient.SqlParameter.ResetDbType\n  id: ResetDbType\n  parent: System.Data.SqlClient.SqlParameter\n  langs:\n  - csharp\n  - vb\n  name: ResetDbType()\n  fullName: System.Data.SqlClient.SqlParameter.ResetDbType()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ResetDbType\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameter.cs\n    startLine: 218\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Resets the type associated with this <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override void ResetDbType()\n    content.vb: Public Overrides Sub ResetDbType\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlParameter.ResetDbType()\n- uid: System.Data.SqlClient.SqlParameter.ResetSqlDbType\n  commentId: M:System.Data.SqlClient.SqlParameter.ResetSqlDbType\n  id: ResetSqlDbType\n  parent: System.Data.SqlClient.SqlParameter\n  langs:\n  - csharp\n  - vb\n  name: ResetSqlDbType()\n  fullName: System.Data.SqlClient.SqlParameter.ResetSqlDbType()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ResetSqlDbType\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameter.cs\n    startLine: 600\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Resets the type associated with this <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void ResetSqlDbType()\n    content.vb: Public Sub ResetSqlDbType\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlParameter.ResetSqlDbType()\n- uid: System.Data.SqlClient.SqlParameter.ToString\n  commentId: M:System.Data.SqlClient.SqlParameter.ToString\n  id: ToString\n  parent: System.Data.SqlClient.SqlParameter\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.Data.SqlClient.SqlParameter.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterHelper.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToString\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlParameterHelper.cs\n    startLine: 170\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Gets a string that contains the <xref href=\\\"System.Data.SqlClient.SqlParameter.ParameterName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override string ToString()\n    content.vb: Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>A string that contains the <xref href=\\\"System.Data.SqlClient.SqlParameter.ParameterName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlParameter.ToString()\nreferences:\n- uid: System.Data.SqlClient\n  isExternal: false\n  name: System.Data.SqlClient\n  fullName: System.Data.SqlClient\n  nameWithType: System.Data.SqlClient\n  commentId: N:System.Data.SqlClient\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Data.SqlDbType\n  parent: System.Data\n  isExternal: false\n  name: SqlDbType\n  fullName: System.Data.SqlDbType\n  nameWithType: SqlDbType\n  commentId: T:System.Data.SqlDbType\n- uid: System.Data\n  isExternal: false\n  name: System.Data\n  fullName: System.Data\n  nameWithType: System.Data\n  commentId: N:System.Data\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Data.SqlTypes.SqlCompareOptions\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlCompareOptions\n  fullName: System.Data.SqlTypes.SqlCompareOptions\n  nameWithType: SqlCompareOptions\n  commentId: T:System.Data.SqlTypes.SqlCompareOptions\n- uid: System.Data.SqlTypes\n  isExternal: false\n  name: System.Data.SqlTypes\n  fullName: System.Data.SqlTypes\n  nameWithType: System.Data.SqlTypes\n  commentId: N:System.Data.SqlTypes\n- uid: System.Data.DbType\n  parent: System.Data\n  isExternal: false\n  name: DbType\n  fullName: System.Data.DbType\n  nameWithType: DbType\n  commentId: T:System.Data.DbType\n- uid: System.Data.ParameterDirection\n  parent: System.Data\n  isExternal: false\n  name: ParameterDirection\n  fullName: System.Data.ParameterDirection\n  nameWithType: ParameterDirection\n  commentId: T:System.Data.ParameterDirection\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  fullName: System.Byte\n  nameWithType: Byte\n  commentId: T:System.Byte\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n"}