{"nodes":[{"pos":[973,986],"content":"ProcessThread","needQuote":true,"nodes":[{"content":"ProcessThread","pos":[0,13]}]},{"pos":[2418,2430],"content":"BasePriority","needQuote":true,"nodes":[{"content":"BasePriority","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The base priority of the thread, which the operating system computes by combining the process priority class with the priority level of the associated thread.&lt;/p&gt;\\n","pos":[3137,3306],"source":"\\n<p>The base priority of the thread, which the operating system computes by combining the process priority class with the priority level of the associated thread.</p>\\n"},{"pos":[4137,4152],"content":"CurrentPriority","needQuote":true,"nodes":[{"content":"CurrentPriority","pos":[0,15]}]},{"content":"\\n&lt;p&gt;The current priority of the thread, which may deviate from the base priority based on how the operating system is scheduling the thread.","pos":[4874,5015],"source":"\\n<p>The current priority of the thread, which may deviate from the base priority based on how the operating system is scheduling the thread."},{"content":"The priority may be temporarily boosted for an active thread.&lt;/p&gt;\\n","pos":[5016,5083],"source":" The priority may be temporarily boosted for an active thread.</p>\\n"},{"pos":[5656,5658],"content":"Id","needQuote":true,"nodes":[{"content":"Id","pos":[0,2]}]},{"content":"\\n&lt;p&gt;The unique identifier associated with a specific thread.&lt;/p&gt;\\n","pos":[6329,6396],"source":"\\n<p>The unique identifier associated with a specific thread.</p>\\n"},{"pos":[6727,6741],"content":"IdealProcessor","needQuote":true,"nodes":[{"content":"IdealProcessor","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The preferred processor for the thread, used when the system schedules threads, to determine which processor to run the thread on.&lt;/p&gt;\\n","pos":[7464,7605],"source":"\\n<p>The preferred processor for the thread, used when the system schedules threads, to determine which processor to run the thread on.</p>\\n"},{"content":"\\n&lt;p&gt;The system could not set the thread to start on the specified processor.","pos":[7740,7817],"source":"\\n<p>The system could not set the thread to start on the specified processor."},{"content":"&lt;/p&gt;\\n","pos":[7818,7824],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition.","pos":[7945,8007],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition."},{"content":"&lt;/p&gt;\\n","pos":[8008,8014],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The process is on a remote computer.&lt;/p&gt;\\n","pos":[8119,8166],"source":"\\n<p>The process is on a remote computer.</p>\\n"},{"pos":[8528,8548],"content":"PriorityBoostEnabled","needQuote":true,"nodes":[{"content":"PriorityBoostEnabled","pos":[0,20]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to boost the thread's priority when the user interacts with the process's interface; otherwise, &lt;strong&gt;false&lt;/strong&gt;.","pos":[9441,9589],"source":"\\n<p>\\n<strong>true</strong> to boost the thread's priority when the user interacts with the process's interface; otherwise, <strong>false</strong>."},{"content":"The default is &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[9590,9634],"source":" The default is <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The priority boost information could not be retrieved.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The priority boost information could not be set.","pos":[9769,9898],"source":"\\n<p>The priority boost information could not be retrieved.</p>\\n<p>-or-</p>\\n<p>The priority boost information could not be set."},{"content":"&lt;/p&gt;\\n","pos":[9899,9905],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition.","pos":[10026,10088],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition."},{"content":"&lt;/p&gt;\\n","pos":[10089,10095],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The process is on a remote computer.&lt;/p&gt;\\n","pos":[10200,10247],"source":"\\n<p>The process is on a remote computer.</p>\\n"},{"pos":[10706,10719],"content":"PriorityLevel","needQuote":true,"nodes":[{"content":"PriorityLevel","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The thread priority level information could not be retrieved.","pos":[11806,11872],"source":"\\n<p>The thread priority level information could not be retrieved."},{"content":"&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The thread priority level could not be set.&lt;/p&gt;\\n","pos":[11873,11944],"source":" </p>\\n<p>-or-</p>\\n<p>The thread priority level could not be set.</p>\\n"},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition.","pos":[12065,12127],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition."},{"content":"&lt;/p&gt;\\n","pos":[12128,12134],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The process is on a remote computer.&lt;/p&gt;\\n","pos":[12239,12286],"source":"\\n<p>The process is on a remote computer.</p>\\n"},{"pos":[13119,13142],"content":"PrivilegedProcessorTime","needQuote":true,"nodes":[{"content":"PrivilegedProcessorTime","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The thread time could not be retrieved.","pos":[14276,14320],"source":"\\n<p>The thread time could not be retrieved."},{"content":"&lt;/p&gt;\\n","pos":[14321,14327],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition.","pos":[14448,14510],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition."},{"content":"&lt;/p&gt;\\n","pos":[14511,14517],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The process is on a remote computer.&lt;/p&gt;\\n","pos":[14622,14669],"source":"\\n<p>The process is on a remote computer.</p>\\n"},{"pos":[15301,15318],"content":"ProcessorAffinity","needQuote":true,"nodes":[{"content":"ProcessorAffinity","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The processor affinity could not be set.","pos":[16377,16422],"source":"\\n<p>The processor affinity could not be set."},{"content":"&lt;/p&gt;\\n","pos":[16423,16429],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition.","pos":[16550,16612],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition."},{"content":"&lt;/p&gt;\\n","pos":[16613,16619],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The process is on a remote computer.&lt;/p&gt;\\n","pos":[16724,16771],"source":"\\n<p>The process is on a remote computer.</p>\\n"},{"pos":[17246,17258],"content":"StartAddress","needQuote":true,"nodes":[{"content":"StartAddress","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The thread's starting address, which points to the application-defined function that the thread executes.&lt;/p&gt;\\n","pos":[18030,18146],"source":"\\n<p>The thread's starting address, which points to the application-defined function that the thread executes.</p>\\n"},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition.","pos":[18281,18343],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition."},{"content":"&lt;/p&gt;\\n","pos":[18344,18350],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The process is on a remote computer.&lt;/p&gt;\\n","pos":[18455,18502],"source":"\\n<p>The process is on a remote computer.</p>\\n"},{"pos":[18828,18837],"content":"StartTime","needQuote":true,"nodes":[{"content":"StartTime","pos":[0,9]}]},{"content":"\\n&lt;p&gt;The thread time could not be retrieved.","pos":[19862,19906],"source":"\\n<p>The thread time could not be retrieved."},{"content":"&lt;/p&gt;\\n","pos":[19907,19913],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition.","pos":[20034,20096],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition."},{"content":"&lt;/p&gt;\\n","pos":[20097,20103],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The process is on a remote computer.&lt;/p&gt;\\n","pos":[20208,20255],"source":"\\n<p>The process is on a remote computer.</p>\\n"},{"pos":[20584,20595],"content":"ThreadState","needQuote":true,"nodes":[{"content":"ThreadState","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition.","pos":[21653,21715],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition."},{"content":"&lt;/p&gt;\\n","pos":[21716,21722],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The process is on a remote computer.&lt;/p&gt;\\n","pos":[21827,21874],"source":"\\n<p>The process is on a remote computer.</p>\\n"},{"pos":[22226,22244],"content":"TotalProcessorTime","needQuote":true,"nodes":[{"content":"TotalProcessorTime","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The thread time could not be retrieved.","pos":[23320,23364],"source":"\\n<p>The thread time could not be retrieved."},{"content":"&lt;/p&gt;\\n","pos":[23365,23371],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition.","pos":[23492,23554],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition."},{"content":"&lt;/p&gt;\\n","pos":[23555,23561],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The process is on a remote computer.&lt;/p&gt;\\n","pos":[23666,23713],"source":"\\n<p>The process is on a remote computer.</p>\\n"},{"pos":[24350,24367],"content":"UserProcessorTime","needQuote":true,"nodes":[{"content":"UserProcessorTime","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The thread time could not be retrieved.","pos":[25516,25560],"source":"\\n<p>The thread time could not be retrieved."},{"content":"&lt;/p&gt;\\n","pos":[25561,25567],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition.","pos":[25688,25750],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition."},{"content":"&lt;/p&gt;\\n","pos":[25751,25757],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The process is on a remote computer.&lt;/p&gt;\\n","pos":[25862,25909],"source":"\\n<p>The process is on a remote computer.</p>\\n"},{"pos":[26526,26536],"content":"WaitReason","needQuote":true,"nodes":[{"content":"WaitReason","pos":[0,10]}]},{"content":"\\n&lt;p&gt;The thread is not in the wait state.","pos":[27584,27625],"source":"\\n<p>The thread is not in the wait state."},{"content":"&lt;/p&gt;\\n","pos":[27626,27632],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition.","pos":[27753,27815],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition."},{"content":"&lt;/p&gt;\\n","pos":[27816,27822],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The process is on a remote computer.&lt;/p&gt;\\n","pos":[27927,27974],"source":"\\n<p>The process is on a remote computer.</p>\\n"},{"pos":[28555,28576],"content":"ResetIdealProcessor()","needQuote":true,"nodes":[{"content":"ResetIdealProcessor()","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The ideal processor could not be reset.","pos":[29432,29476],"source":"\\n<p>The ideal processor could not be reset."},{"content":"&lt;/p&gt;\\n","pos":[29477,29483],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition.","pos":[29604,29666],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition."},{"content":"&lt;/p&gt;\\n","pos":[29667,29673],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The process is on a remote computer.&lt;/p&gt;\\n","pos":[29778,29825],"source":"\\n<p>The process is on a remote computer.</p>\\n"},{"pos":[30137,30155],"content":"System.Diagnostics","needQuote":true,"nodes":[{"content":"System.Diagnostics","pos":[0,18]}]},{"pos":[30322,30328],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[30488,30498],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[30593,30601],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[30670,30671],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30698,30699],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30769,30777],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[30846,30847],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30874,30875],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31058,31072],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[31191,31197],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[31264,31265],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31315,31321],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[31381,31382],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31465,31471],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[31538,31539],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31589,31595],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[31655,31656],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31870,31892],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[32040,32046],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[32113,32114],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32164,32170],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[32231,32232]},{"pos":[32287,32293],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[32353,32354],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32451,32457],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[32524,32525],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32575,32581],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[32642,32643]},{"pos":[32698,32704],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[32764,32765],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33010,33041],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[33207,33222],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[33298,33299],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33349,33355],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[33416,33417]},{"pos":[33472,33478],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[33538,33539],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33645,33660],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[33736,33737],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33787,33793],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[33854,33855]},{"pos":[33910,33916],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[33976,33977],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34207,34220],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[34321,34332],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[34404,34405],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34432,34433],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34506,34517],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[34589,34590],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34617,34618],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34793,34802],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[34895,34902],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[34970,34971],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34998,34999],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35068,35075],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[35143,35144],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35171,35172],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35347,35364],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[35473,35488],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[35564,35565],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35592,35593],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35670,35685],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[35761,35762],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35789,35790],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35935,35941],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[36071,36076],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[36219,36226],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[36411,36430],"content":"ThreadPriorityLevel","needQuote":true,"nodes":[{"content":"ThreadPriorityLevel","pos":[0,19]}]},{"pos":[36640,36648],"content":"TimeSpan","needQuote":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[36799,36805],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[36952,36960],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[37140,37151],"content":"ThreadState","needQuote":true,"nodes":[{"content":"ThreadState","pos":[0,11]}]},{"pos":[37369,37385],"content":"ThreadWaitReason","needQuote":true,"nodes":[{"content":"ThreadWaitReason","pos":[0,16]}]},{"pos":[37590,37604],"content":"Win32Exception","needQuote":true,"nodes":[{"content":"Win32Exception","pos":[0,14]}]},{"pos":[37809,37838],"content":"PlatformNotSupportedException","needQuote":true,"nodes":[{"content":"PlatformNotSupportedException","pos":[0,29]}]},{"pos":[38067,38088],"content":"NotSupportedException","needQuote":true,"nodes":[{"content":"NotSupportedException","pos":[0,21]}]},{"pos":[38297,38322],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]}],"content":"items:\n- uid: System.Diagnostics.ProcessThread\n  commentId: T:System.Diagnostics.ProcessThread\n  id: ProcessThread\n  parent: System.Diagnostics\n  children:\n  - System.Diagnostics.ProcessThread.BasePriority\n  - System.Diagnostics.ProcessThread.CurrentPriority\n  - System.Diagnostics.ProcessThread.Id\n  - System.Diagnostics.ProcessThread.IdealProcessor\n  - System.Diagnostics.ProcessThread.PriorityBoostEnabled\n  - System.Diagnostics.ProcessThread.PriorityLevel\n  - System.Diagnostics.ProcessThread.PrivilegedProcessorTime\n  - System.Diagnostics.ProcessThread.ProcessorAffinity\n  - System.Diagnostics.ProcessThread.ResetIdealProcessor\n  - System.Diagnostics.ProcessThread.StartAddress\n  - System.Diagnostics.ProcessThread.StartTime\n  - System.Diagnostics.ProcessThread.ThreadState\n  - System.Diagnostics.ProcessThread.TotalProcessorTime\n  - System.Diagnostics.ProcessThread.UserProcessorTime\n  - System.Diagnostics.ProcessThread.WaitReason\n  langs:\n  - csharp\n  - vb\n  name: ProcessThread\n  fullName: System.Diagnostics.ProcessThread\n  type: Class\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThread.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ProcessThread\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThread.cs\n    startLine: 13\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Represents an operating system process thread.</p>\\n\"\n  syntax:\n    content: public class ProcessThread\n    content.vb: Public Class ProcessThread\n  seealso:\n  - type: System.Diagnostics.Process\n    commentId: T:System.Diagnostics.Process\n  - type: System.Diagnostics.Process.Threads\n    commentId: P:System.Diagnostics.Process.Threads\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: ProcessThread\n- uid: System.Diagnostics.ProcessThread.BasePriority\n  commentId: P:System.Diagnostics.ProcessThread.BasePriority\n  id: BasePriority\n  parent: System.Diagnostics.ProcessThread\n  langs:\n  - csharp\n  - vb\n  name: BasePriority\n  fullName: System.Diagnostics.ProcessThread.BasePriority\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThread.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: BasePriority\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThread.cs\n    startLine: 36\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the base priority of the thread.</p>\\n\"\n  syntax:\n    content: public int BasePriority { get; }\n    content.vb: Public ReadOnly Property BasePriority As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The base priority of the thread, which the operating system computes by combining the process priority class with the priority level of the associated thread.</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.ProcessThread.PriorityBoostEnabled\n    commentId: P:System.Diagnostics.ProcessThread.PriorityBoostEnabled\n  - type: System.Diagnostics.ProcessPriorityClass\n    commentId: T:System.Diagnostics.ProcessPriorityClass\n  - type: System.Diagnostics.Process.PriorityClass\n    commentId: P:System.Diagnostics.Process.PriorityClass\n  - type: System.Diagnostics.ProcessThread.CurrentPriority\n    commentId: P:System.Diagnostics.ProcessThread.CurrentPriority\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ProcessThread.BasePriority\n- uid: System.Diagnostics.ProcessThread.CurrentPriority\n  commentId: P:System.Diagnostics.ProcessThread.CurrentPriority\n  id: CurrentPriority\n  parent: System.Diagnostics.ProcessThread\n  langs:\n  - csharp\n  - vb\n  name: CurrentPriority\n  fullName: System.Diagnostics.ProcessThread.CurrentPriority\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThread.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CurrentPriority\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThread.cs\n    startLine: 46\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the current priority of the thread.</p>\\n\"\n  syntax:\n    content: public int CurrentPriority { get; }\n    content.vb: Public ReadOnly Property CurrentPriority As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The current priority of the thread, which may deviate from the base priority based on how the operating system is scheduling the thread. The priority may be temporarily boosted for an active thread.</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.ProcessThread.BasePriority\n    commentId: P:System.Diagnostics.ProcessThread.BasePriority\n  - type: System.Diagnostics.ProcessThread.PriorityBoostEnabled\n    commentId: P:System.Diagnostics.ProcessThread.PriorityBoostEnabled\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ProcessThread.CurrentPriority\n- uid: System.Diagnostics.ProcessThread.Id\n  commentId: P:System.Diagnostics.ProcessThread.Id\n  id: Id\n  parent: System.Diagnostics.ProcessThread\n  langs:\n  - csharp\n  - vb\n  name: Id\n  fullName: System.Diagnostics.ProcessThread.Id\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThread.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Id\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThread.cs\n    startLine: 54\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the unique identifier of the thread.</p>\\n\"\n  syntax:\n    content: public int Id { get; }\n    content.vb: Public ReadOnly Property Id As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The unique identifier associated with a specific thread.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ProcessThread.Id\n- uid: System.Diagnostics.ProcessThread.IdealProcessor\n  commentId: P:System.Diagnostics.ProcessThread.IdealProcessor\n  id: IdealProcessor\n  parent: System.Diagnostics.ProcessThread\n  langs:\n  - csharp\n  - vb\n  name: IdealProcessor\n  fullName: System.Diagnostics.ProcessThread.IdealProcessor\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/ref/System.Diagnostics.Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IdealProcessor\n    path: src/System.Diagnostics.Process/ref/System.Diagnostics.Process.cs\n    startLine: 144\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Sets the preferred processor for this thread to run on.</p>\\n\"\n  syntax:\n    content: public int IdealProcessor { set; }\n    content.vb: Public WriteOnly Property IdealProcessor As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The preferred processor for the thread, used when the system schedules threads, to determine which processor to run the thread on.</p>\\n\"\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: \"\\n<p>The system could not set the thread to start on the specified processor. </p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The process is on a remote computer.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - set\n  modifiers.vb:\n  - Public\n  - WriteOnly\n  nameWithType: ProcessThread.IdealProcessor\n- uid: System.Diagnostics.ProcessThread.PriorityBoostEnabled\n  commentId: P:System.Diagnostics.ProcessThread.PriorityBoostEnabled\n  id: PriorityBoostEnabled\n  parent: System.Diagnostics.ProcessThread\n  langs:\n  - csharp\n  - vb\n  name: PriorityBoostEnabled\n  fullName: System.Diagnostics.ProcessThread.PriorityBoostEnabled\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThread.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PriorityBoostEnabled\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThread.cs\n    startLine: 63\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets or sets a value indicating whether the operating system should temporarily boost the priority of the associated thread whenever the main window of the thread's process receives the focus.</p>\\n\"\n  syntax:\n    content: public bool PriorityBoostEnabled { get; set; }\n    content.vb: Public Property PriorityBoostEnabled As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to boost the thread's priority when the user interacts with the process's interface; otherwise, <strong>false</strong>. The default is <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: \"\\n<p>The priority boost information could not be retrieved.</p>\\n<p>-or-</p>\\n<p>The priority boost information could not be set. </p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The process is on a remote computer.</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.ProcessPriorityClass\n    commentId: T:System.Diagnostics.ProcessPriorityClass\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: ProcessThread.PriorityBoostEnabled\n- uid: System.Diagnostics.ProcessThread.PriorityLevel\n  commentId: P:System.Diagnostics.ProcessThread.PriorityLevel\n  id: PriorityLevel\n  parent: System.Diagnostics.ProcessThread\n  langs:\n  - csharp\n  - vb\n  name: PriorityLevel\n  fullName: System.Diagnostics.ProcessThread.PriorityLevel\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThread.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PriorityLevel\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThread.cs\n    startLine: 85\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets or sets the priority level of the thread.</p>\\n\"\n  syntax:\n    content: public ThreadPriorityLevel PriorityLevel { get; set; }\n    content.vb: Public Property PriorityLevel As ThreadPriorityLevel\n    parameters: []\n    return:\n      type: System.Diagnostics.ThreadPriorityLevel\n      description: \"\\n<p>One of the <xref href=\\\"System.Diagnostics.ThreadPriorityLevel\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values, specifying a range that bounds the thread's priority.</p>\\n\"\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: \"\\n<p>The thread priority level information could not be retrieved. </p>\\n<p>-or-</p>\\n<p>The thread priority level could not be set.</p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The process is on a remote computer.</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.ThreadPriorityLevel\n    commentId: T:System.Diagnostics.ThreadPriorityLevel\n  - type: System.Diagnostics.Process.PriorityClass\n    commentId: P:System.Diagnostics.Process.PriorityClass\n  - type: System.Diagnostics.ProcessThread.BasePriority\n    commentId: P:System.Diagnostics.ProcessThread.BasePriority\n  - type: System.Diagnostics.ProcessThread.CurrentPriority\n    commentId: P:System.Diagnostics.ProcessThread.CurrentPriority\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: ProcessThread.PriorityLevel\n- uid: System.Diagnostics.ProcessThread.PrivilegedProcessorTime\n  commentId: P:System.Diagnostics.ProcessThread.PrivilegedProcessorTime\n  id: PrivilegedProcessorTime\n  parent: System.Diagnostics.ProcessThread\n  langs:\n  - csharp\n  - vb\n  name: PrivilegedProcessorTime\n  fullName: System.Diagnostics.ProcessThread.PrivilegedProcessorTime\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/ref/System.Diagnostics.Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PrivilegedProcessorTime\n    path: src/System.Diagnostics.Process/ref/System.Diagnostics.Process.cs\n    startLine: 147\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the amount of time that the thread has spent running code inside the operating system core.</p>\\n\"\n  syntax:\n    content: public TimeSpan PrivilegedProcessorTime { get; }\n    content.vb: Public ReadOnly Property PrivilegedProcessorTime As TimeSpan\n    parameters: []\n    return:\n      type: System.TimeSpan\n      description: \"\\n<p>A <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> indicating the amount of time that the thread has spent running code inside the operating system core.</p>\\n\"\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: \"\\n<p>The thread time could not be retrieved. </p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The process is on a remote computer.</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.ProcessThread.UserProcessorTime\n    commentId: P:System.Diagnostics.ProcessThread.UserProcessorTime\n  - type: System.Diagnostics.ProcessThread.TotalProcessorTime\n    commentId: P:System.Diagnostics.ProcessThread.TotalProcessorTime\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ProcessThread.PrivilegedProcessorTime\n- uid: System.Diagnostics.ProcessThread.ProcessorAffinity\n  commentId: P:System.Diagnostics.ProcessThread.ProcessorAffinity\n  id: ProcessorAffinity\n  parent: System.Diagnostics.ProcessThread\n  langs:\n  - csharp\n  - vb\n  name: ProcessorAffinity\n  fullName: System.Diagnostics.ProcessThread.ProcessorAffinity\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/ref/System.Diagnostics.Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ProcessorAffinity\n    path: src/System.Diagnostics.Process/ref/System.Diagnostics.Process.cs\n    startLine: 148\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Sets the processors on which the associated thread can run.</p>\\n\"\n  syntax:\n    content: public IntPtr ProcessorAffinity { set; }\n    content.vb: Public WriteOnly Property ProcessorAffinity As IntPtr\n    parameters: []\n    return:\n      type: System.IntPtr\n      description: \"\\n<p>An <xref href=\\\"System.IntPtr\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that points to a set of bits, each of which represents a processor that the thread can run on.</p>\\n\"\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: \"\\n<p>The processor affinity could not be set. </p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The process is on a remote computer.</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.ProcessThread.IdealProcessor\n    commentId: P:System.Diagnostics.ProcessThread.IdealProcessor\n  modifiers.csharp:\n  - public\n  - set\n  modifiers.vb:\n  - Public\n  - WriteOnly\n  nameWithType: ProcessThread.ProcessorAffinity\n- uid: System.Diagnostics.ProcessThread.StartAddress\n  commentId: P:System.Diagnostics.ProcessThread.StartAddress\n  id: StartAddress\n  parent: System.Diagnostics.ProcessThread\n  langs:\n  - csharp\n  - vb\n  name: StartAddress\n  fullName: System.Diagnostics.ProcessThread.StartAddress\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThread.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: StartAddress\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThread.cs\n    startLine: 106\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the memory address of the function that the operating system called that started this thread.</p>\\n\"\n  syntax:\n    content: public IntPtr StartAddress { get; }\n    content.vb: Public ReadOnly Property StartAddress As IntPtr\n    parameters: []\n    return:\n      type: System.IntPtr\n      description: \"\\n<p>The thread's starting address, which points to the application-defined function that the thread executes.</p>\\n\"\n  exceptions:\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The process is on a remote computer.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ProcessThread.StartAddress\n- uid: System.Diagnostics.ProcessThread.StartTime\n  commentId: P:System.Diagnostics.ProcessThread.StartTime\n  id: StartTime\n  parent: System.Diagnostics.ProcessThread\n  langs:\n  - csharp\n  - vb\n  name: StartTime\n  fullName: System.Diagnostics.ProcessThread.StartTime\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/ref/System.Diagnostics.Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: StartTime\n    path: src/System.Diagnostics.Process/ref/System.Diagnostics.Process.cs\n    startLine: 150\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the time that the operating system started the thread.</p>\\n\"\n  syntax:\n    content: public DateTime StartTime { get; }\n    content.vb: Public ReadOnly Property StartTime As Date\n    parameters: []\n    return:\n      type: System.DateTime\n      description: \"\\n<p>A <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the time that was on the system when the operating system started the thread.</p>\\n\"\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: \"\\n<p>The thread time could not be retrieved. </p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The process is on a remote computer.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ProcessThread.StartTime\n- uid: System.Diagnostics.ProcessThread.ThreadState\n  commentId: P:System.Diagnostics.ProcessThread.ThreadState\n  id: ThreadState\n  parent: System.Diagnostics.ProcessThread\n  langs:\n  - csharp\n  - vb\n  name: ThreadState\n  fullName: System.Diagnostics.ProcessThread.ThreadState\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThread.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ThreadState\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThread.cs\n    startLine: 114\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the current state of this thread.</p>\\n\"\n  syntax:\n    content: public ThreadState ThreadState { get; }\n    content.vb: Public ReadOnly Property ThreadState As ThreadState\n    parameters: []\n    return:\n      type: System.Diagnostics.ThreadState\n      description: \"\\n<p>A <xref href=\\\"System.Diagnostics.ThreadState\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that indicates the thread's execution, for example, running, waiting, or terminated.</p>\\n\"\n  exceptions:\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The process is on a remote computer.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ProcessThread.ThreadState\n- uid: System.Diagnostics.ProcessThread.TotalProcessorTime\n  commentId: P:System.Diagnostics.ProcessThread.TotalProcessorTime\n  id: TotalProcessorTime\n  parent: System.Diagnostics.ProcessThread\n  langs:\n  - csharp\n  - vb\n  name: TotalProcessorTime\n  fullName: System.Diagnostics.ProcessThread.TotalProcessorTime\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/ref/System.Diagnostics.Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TotalProcessorTime\n    path: src/System.Diagnostics.Process/ref/System.Diagnostics.Process.cs\n    startLine: 152\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the total amount of time that this thread has spent using the processor.</p>\\n\"\n  syntax:\n    content: public TimeSpan TotalProcessorTime { get; }\n    content.vb: Public ReadOnly Property TotalProcessorTime As TimeSpan\n    parameters: []\n    return:\n      type: System.TimeSpan\n      description: \"\\n<p>A <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that indicates the amount of time that the thread has had control of the processor.</p>\\n\"\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: \"\\n<p>The thread time could not be retrieved. </p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The process is on a remote computer.</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.ProcessThread.PrivilegedProcessorTime\n    commentId: P:System.Diagnostics.ProcessThread.PrivilegedProcessorTime\n  - type: System.Diagnostics.ProcessThread.UserProcessorTime\n    commentId: P:System.Diagnostics.ProcessThread.UserProcessorTime\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ProcessThread.TotalProcessorTime\n- uid: System.Diagnostics.ProcessThread.UserProcessorTime\n  commentId: P:System.Diagnostics.ProcessThread.UserProcessorTime\n  id: UserProcessorTime\n  parent: System.Diagnostics.ProcessThread\n  langs:\n  - csharp\n  - vb\n  name: UserProcessorTime\n  fullName: System.Diagnostics.ProcessThread.UserProcessorTime\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/ref/System.Diagnostics.Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: UserProcessorTime\n    path: src/System.Diagnostics.Process/ref/System.Diagnostics.Process.cs\n    startLine: 153\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the amount of time that the associated thread has spent running code inside the application.</p>\\n\"\n  syntax:\n    content: public TimeSpan UserProcessorTime { get; }\n    content.vb: Public ReadOnly Property UserProcessorTime As TimeSpan\n    parameters: []\n    return:\n      type: System.TimeSpan\n      description: \"\\n<p>A <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> indicating the amount of time that the thread has spent running code inside the application, as opposed to inside the operating system core.</p>\\n\"\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: \"\\n<p>The thread time could not be retrieved. </p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The process is on a remote computer.</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.ProcessThread.PrivilegedProcessorTime\n    commentId: P:System.Diagnostics.ProcessThread.PrivilegedProcessorTime\n  - type: System.Diagnostics.ProcessThread.TotalProcessorTime\n    commentId: P:System.Diagnostics.ProcessThread.TotalProcessorTime\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ProcessThread.UserProcessorTime\n- uid: System.Diagnostics.ProcessThread.WaitReason\n  commentId: P:System.Diagnostics.ProcessThread.WaitReason\n  id: WaitReason\n  parent: System.Diagnostics.ProcessThread\n  langs:\n  - csharp\n  - vb\n  name: WaitReason\n  fullName: System.Diagnostics.ProcessThread.WaitReason\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThread.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WaitReason\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThread.cs\n    startLine: 122\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the reason that the thread is waiting.</p>\\n\"\n  syntax:\n    content: public ThreadWaitReason WaitReason { get; }\n    content.vb: Public ReadOnly Property WaitReason As ThreadWaitReason\n    parameters: []\n    return:\n      type: System.Diagnostics.ThreadWaitReason\n      description: \"\\n<p>A <xref href=\\\"System.Diagnostics.ThreadWaitReason\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the reason that the thread is in the wait state.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The thread is not in the wait state. </p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The process is on a remote computer.</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.ThreadWaitReason\n    commentId: T:System.Diagnostics.ThreadWaitReason\n  - type: System.Diagnostics.ProcessThread.ThreadState\n    commentId: P:System.Diagnostics.ProcessThread.ThreadState\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ProcessThread.WaitReason\n- uid: System.Diagnostics.ProcessThread.ResetIdealProcessor\n  commentId: M:System.Diagnostics.ProcessThread.ResetIdealProcessor\n  id: ResetIdealProcessor\n  parent: System.Diagnostics.ProcessThread\n  langs:\n  - csharp\n  - vb\n  name: ResetIdealProcessor()\n  fullName: System.Diagnostics.ProcessThread.ResetIdealProcessor()\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/ref/System.Diagnostics.Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ResetIdealProcessor\n    path: src/System.Diagnostics.Process/ref/System.Diagnostics.Process.cs\n    startLine: 155\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Resets the ideal processor for this thread to indicate that there is no single ideal processor. In other words, so that any processor is ideal.</p>\\n\"\n  syntax:\n    content: public void ResetIdealProcessor()\n    content.vb: Public Sub ResetIdealProcessor\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: \"\\n<p>The ideal processor could not be reset. </p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The process is on a remote computer.</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.ProcessThread.IdealProcessor\n    commentId: P:System.Diagnostics.ProcessThread.IdealProcessor\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ProcessThread.ResetIdealProcessor()\nreferences:\n- uid: System.Diagnostics\n  isExternal: false\n  name: System.Diagnostics\n  fullName: System.Diagnostics\n  nameWithType: System.Diagnostics\n  commentId: N:System.Diagnostics\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Diagnostics.ThreadPriorityLevel\n  parent: System.Diagnostics\n  isExternal: false\n  name: ThreadPriorityLevel\n  fullName: System.Diagnostics.ThreadPriorityLevel\n  nameWithType: ThreadPriorityLevel\n  commentId: T:System.Diagnostics.ThreadPriorityLevel\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  fullName: System.TimeSpan\n  nameWithType: TimeSpan\n  commentId: T:System.TimeSpan\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  fullName: System.IntPtr\n  nameWithType: IntPtr\n  commentId: T:System.IntPtr\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  fullName: System.DateTime\n  nameWithType: DateTime\n  commentId: T:System.DateTime\n- uid: System.Diagnostics.ThreadState\n  parent: System.Diagnostics\n  isExternal: false\n  name: ThreadState\n  fullName: System.Diagnostics.ThreadState\n  nameWithType: ThreadState\n  commentId: T:System.Diagnostics.ThreadState\n- uid: System.Diagnostics.ThreadWaitReason\n  parent: System.Diagnostics\n  isExternal: false\n  name: ThreadWaitReason\n  fullName: System.Diagnostics.ThreadWaitReason\n  nameWithType: ThreadWaitReason\n  commentId: T:System.Diagnostics.ThreadWaitReason\n- uid: System.ComponentModel.Win32Exception\n  isExternal: false\n  name: Win32Exception\n  fullName: System.ComponentModel.Win32Exception\n  nameWithType: Win32Exception\n  commentId: T:System.ComponentModel.Win32Exception\n- uid: System.PlatformNotSupportedException\n  isExternal: false\n  name: PlatformNotSupportedException\n  fullName: System.PlatformNotSupportedException\n  nameWithType: PlatformNotSupportedException\n  commentId: T:System.PlatformNotSupportedException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  fullName: System.NotSupportedException\n  nameWithType: NotSupportedException\n  commentId: T:System.NotSupportedException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n"}