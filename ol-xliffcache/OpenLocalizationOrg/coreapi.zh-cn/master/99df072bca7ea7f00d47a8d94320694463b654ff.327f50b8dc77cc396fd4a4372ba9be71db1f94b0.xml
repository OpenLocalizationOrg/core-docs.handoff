{"nodes":[{"pos":[1296,1304],"content":"SqlBytes","needQuote":true,"nodes":[{"content":"SqlBytes","pos":[0,8]}]},{"pos":[2841,2851],"content":"SqlBytes()","needQuote":true,"nodes":[{"content":"SqlBytes()","pos":[0,10]}]},{"pos":[3820,3836],"content":"SqlBytes(Byte[])","needQuote":true,"nodes":[{"content":"SqlBytes(Byte[])","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The array of unsigned bytes.","pos":[4640,4673],"source":"\\n<p>The array of unsigned bytes."},{"content":"&lt;/p&gt;\\n","pos":[4674,4680],"source":" </p>\\n"},{"pos":[5203,5222],"content":"SqlBytes(SqlBinary)","needQuote":true,"nodes":[{"content":"SqlBytes(SqlBinary)","pos":[0,19]}]},{"pos":[6601,6617],"content":"SqlBytes(Stream)","needQuote":true,"nodes":[{"content":"SqlBytes(Stream)","pos":[0,16]}]},{"pos":[7861,7867],"content":"Buffer","needQuote":true,"nodes":[{"content":"Buffer","pos":[0,6]}]},{"pos":[9082,9088],"content":"IsNull","needQuote":true,"nodes":[{"content":"IsNull","pos":[0,6]}]},{"pos":[10426,10437],"content":"Item[Int64]","needQuote":true,"nodes":[{"content":"Item[Int64]","pos":[0,11]}]},{"pos":[11900,11906],"content":"Length","needQuote":true,"nodes":[{"content":"Length","pos":[0,6]}]},{"pos":[13462,13471],"content":"MaxLength","needQuote":true,"nodes":[{"content":"MaxLength","pos":[0,9]}]},{"pos":[16004,16010],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":"\\n&lt;p&gt;The stream that contains the SqlBytes data.&lt;/p&gt;\\n","pos":[16769,16823],"source":"\\n<p>The stream that contains the SqlBytes data.</p>\\n"},{"pos":[17112,17117],"content":"Value","needQuote":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[18517,18548],"content":"Explicit(SqlBinary to SqlBytes)","needQuote":true,"nodes":[{"content":"Explicit(SqlBinary to SqlBytes)","pos":[0,31]}]},{"pos":[20610,20641],"content":"Explicit(SqlBytes to SqlBinary)","needQuote":true,"nodes":[{"content":"Explicit(SqlBytes to SqlBinary)","pos":[0,31]}]},{"pos":[22658,22691],"content":"Read(Int64, Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"Read(Int64, Byte[], Int32, Int32)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;The byte array buffer to copy into.&lt;/p&gt;\\n","pos":[23977,24023],"source":"\\n<p>The byte array buffer to copy into.</p>\\n"},{"pos":[25199,25215],"content":"SetLength(Int64)","needQuote":true,"nodes":[{"content":"SetLength(Int64)","pos":[0,16]}]},{"pos":[26394,26403],"content":"SetNull()","needQuote":true,"nodes":[{"content":"SetNull()","pos":[0,9]}]},{"pos":[27334,27347],"content":"ToSqlBinary()","needQuote":true,"nodes":[{"content":"ToSqlBinary()","pos":[0,13]}]},{"pos":[28773,28807],"content":"Write(Int64, Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"Write(Int64, Byte[], Int32, Int32)","pos":[0,34]}]},{"content":"\\n&lt;p&gt;The byte array buffer to copy into.&lt;/p&gt;\\n","pos":[30045,30091],"source":"\\n<p>The byte array buffer to copy into.</p>\\n"},{"pos":[30907,30927],"content":"System.Data.SqlTypes","needQuote":true,"nodes":[{"content":"System.Data.SqlTypes","pos":[0,20]}]},{"pos":[31100,31106],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[31282,31291],"content":"INullable","needQuote":true,"nodes":[{"content":"INullable","pos":[0,9]}]},{"pos":[31488,31498],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[31593,31601],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[31670,31671],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31698,31699],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31769,31777],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[31846,31847],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31874,31875],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32058,32072],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[32191,32197],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[32264,32265],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32315,32321],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[32381,32382],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32465,32471],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[32538,32539],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32589,32595],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[32655,32656],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32870,32892],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[33040,33046],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[33113,33114],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33164,33170],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[33231,33232]},{"pos":[33287,33293],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[33353,33354],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33451,33457],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[33524,33525],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33575,33581],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[33642,33643]},{"pos":[33698,33704],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[33764,33765],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34010,34041],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[34207,34222],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[34298,34299],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34349,34355],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[34416,34417]},{"pos":[34472,34478],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[34538,34539],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34645,34660],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[34736,34737],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34787,34793],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[34854,34855]},{"pos":[34910,34916],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[34976,34977],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35207,35220],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[35321,35332],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[35404,35405],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35432,35433],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35506,35517],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[35589,35590],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35617,35618],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35793,35802],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[35895,35902],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[35970,35971],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35998,35999],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36068,36075],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[36143,36144],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36171,36172],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36347,36364],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[36473,36488],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[36564,36565],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36592,36593],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36670,36685],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[36761,36762],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36789,36790],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36935,36941],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[37035,37041],"content":"Byte[]","needQuote":true,"nodes":[{"content":"Byte[]","pos":[0,6]}]},{"pos":[37161,37165],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[37224,37226]},{"pos":[37289,37293],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[37351,37353],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[37517,37526],"content":"SqlBinary","needQuote":true,"nodes":[{"content":"SqlBinary","pos":[0,9]}]},{"pos":[37714,37720],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[37850,37859],"content":"System.IO","needQuote":true,"nodes":[{"content":"System.IO","pos":[0,9]}]},{"pos":[38047,38053],"content":"IsNull","needQuote":true,"nodes":[{"content":"IsNull","pos":[0,6]}]},{"pos":[38257,38264],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[38411,38416],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[38556,38560],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[38729,38737],"content":"SqlBytes","needQuote":true,"nodes":[{"content":"SqlBytes","pos":[0,8]}]},{"pos":[38915,38920],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"items:\n- uid: System.Data.SqlTypes.SqlBytes\n  commentId: T:System.Data.SqlTypes.SqlBytes\n  id: SqlBytes\n  parent: System.Data.SqlTypes\n  children:\n  - System.Data.SqlTypes.SqlBytes.#ctor\n  - System.Data.SqlTypes.SqlBytes.#ctor(System.Byte[])\n  - System.Data.SqlTypes.SqlBytes.#ctor(System.Data.SqlTypes.SqlBinary)\n  - System.Data.SqlTypes.SqlBytes.#ctor(System.IO.Stream)\n  - System.Data.SqlTypes.SqlBytes.Buffer\n  - System.Data.SqlTypes.SqlBytes.IsNull\n  - System.Data.SqlTypes.SqlBytes.Item(System.Int64)\n  - System.Data.SqlTypes.SqlBytes.Length\n  - System.Data.SqlTypes.SqlBytes.MaxLength\n  - System.Data.SqlTypes.SqlBytes.Null\n  - System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlBytes\n  - System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBytes)~System.Data.SqlTypes.SqlBinary\n  - System.Data.SqlTypes.SqlBytes.Read(System.Int64,System.Byte[],System.Int32,System.Int32)\n  - System.Data.SqlTypes.SqlBytes.SetLength(System.Int64)\n  - System.Data.SqlTypes.SqlBytes.SetNull\n  - System.Data.SqlTypes.SqlBytes.Stream\n  - System.Data.SqlTypes.SqlBytes.ToSqlBinary\n  - System.Data.SqlTypes.SqlBytes.Value\n  - System.Data.SqlTypes.SqlBytes.Write(System.Int64,System.Byte[],System.Int32,System.Int32)\n  langs:\n  - csharp\n  - vb\n  name: SqlBytes\n  fullName: System.Data.SqlTypes.SqlBytes\n  type: Class\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SqlBytes\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs\n    startLine: 24\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Represents a mutable reference type that wraps either a <xref href=\\\"System.Data.SqlTypes.SqlBytes.Buffer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or a <xref href=\\\"System.Data.SqlTypes.SqlBytes.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: 'public sealed class SqlBytes : INullable'\n    content.vb: >-\n      Public NotInheritable Class SqlBytes\n          Implements INullable\n  inheritance:\n  - System.Object\n  implements:\n  - System.Data.SqlTypes.INullable\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: SqlBytes\n- uid: System.Data.SqlTypes.SqlBytes.#ctor\n  commentId: M:System.Data.SqlTypes.SqlBytes.#ctor\n  id: '#ctor'\n  parent: System.Data.SqlTypes.SqlBytes\n  langs:\n  - csharp\n  - vb\n  name: SqlBytes()\n  fullName: System.Data.SqlTypes.SqlBytes.SqlBytes()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs\n    startLine: 62\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Data.SqlTypes.SqlBytes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public SqlBytes()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlBytes.SqlBytes()\n- uid: System.Data.SqlTypes.SqlBytes.#ctor(System.Byte[])\n  commentId: M:System.Data.SqlTypes.SqlBytes.#ctor(System.Byte[])\n  id: '#ctor(System.Byte[])'\n  parent: System.Data.SqlTypes.SqlBytes\n  langs:\n  - csharp\n  - vb\n  name: SqlBytes(Byte[])\n  fullName: System.Data.SqlTypes.SqlBytes.SqlBytes(System.Byte[])\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs\n    startLine: 68\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Data.SqlTypes.SqlBytes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class based on the specified byte array.</p>\\n\"\n  syntax:\n    content: public SqlBytes(byte[] buffer)\n    content.vb: Public Sub New(buffer As Byte())\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>The array of unsigned bytes. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Data.SqlTypes.SqlBytes.SqlBytes(System.Byte())\n  name.vb: SqlBytes(Byte())\n  nameWithType: SqlBytes.SqlBytes(Byte[])\n  nameWithType.vb: SqlBytes.SqlBytes(Byte())\n- uid: System.Data.SqlTypes.SqlBytes.#ctor(System.Data.SqlTypes.SqlBinary)\n  commentId: M:System.Data.SqlTypes.SqlBytes.#ctor(System.Data.SqlTypes.SqlBinary)\n  id: '#ctor(System.Data.SqlTypes.SqlBinary)'\n  parent: System.Data.SqlTypes.SqlBytes\n  langs:\n  - csharp\n  - vb\n  name: SqlBytes(SqlBinary)\n  fullName: System.Data.SqlTypes.SqlBytes.SqlBytes(System.Data.SqlTypes.SqlBinary)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs\n    startLine: 89\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Data.SqlTypes.SqlBytes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class based on the specified <xref href=\\\"System.Data.SqlTypes.SqlBinary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  syntax:\n    content: public SqlBytes(SqlBinary value)\n    content.vb: Public Sub New(value As SqlBinary)\n    parameters:\n    - id: value\n      type: System.Data.SqlTypes.SqlBinary\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlBinary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlBytes.SqlBytes(SqlBinary)\n- uid: System.Data.SqlTypes.SqlBytes.#ctor(System.IO.Stream)\n  commentId: M:System.Data.SqlTypes.SqlBytes.#ctor(System.IO.Stream)\n  id: '#ctor(System.IO.Stream)'\n  parent: System.Data.SqlTypes.SqlBytes\n  langs:\n  - csharp\n  - vb\n  name: SqlBytes(Stream)\n  fullName: System.Data.SqlTypes.SqlBytes.SqlBytes(System.IO.Stream)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs\n    startLine: 93\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Data.SqlTypes.SqlBytes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class based on the specified <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  syntax:\n    content: public SqlBytes(Stream s)\n    content.vb: Public Sub New(s As Stream)\n    parameters:\n    - id: s\n      type: System.IO.Stream\n      description: \"\\n<p>A <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlBytes.SqlBytes(Stream)\n- uid: System.Data.SqlTypes.SqlBytes.Buffer\n  commentId: P:System.Data.SqlTypes.SqlBytes.Buffer\n  id: Buffer\n  parent: System.Data.SqlTypes.SqlBytes\n  langs:\n  - csharp\n  - vb\n  name: Buffer\n  fullName: System.Data.SqlTypes.SqlBytes.Buffer\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Buffer\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs\n    startLine: 123\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Returns a reference to the internal buffer. </p>\\n\"\n  syntax:\n    content: public byte[] Buffer { get; }\n    content.vb: Public ReadOnly Property Buffer As Byte()\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: \"\\n<p>Returns a reference to the internal buffer. For <xref href=\\\"System.Data.SqlTypes.SqlBytes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instances created on top of unmanaged pointers, it returns a managed copy of the internal buffer.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SqlBytes.Buffer\n- uid: System.Data.SqlTypes.SqlBytes.IsNull\n  commentId: P:System.Data.SqlTypes.SqlBytes.IsNull\n  id: IsNull\n  parent: System.Data.SqlTypes.SqlBytes\n  langs:\n  - csharp\n  - vb\n  name: IsNull\n  fullName: System.Data.SqlTypes.SqlBytes.IsNull\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsNull\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs\n    startLine: 113\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Gets a Boolean value that indicates whether this <xref href=\\\"System.Data.SqlTypes.SqlBytes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is null.</p>\\n\"\n  syntax:\n    content: public bool IsNull { get; }\n    content.vb: Public ReadOnly Property IsNull As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Data.SqlTypes.SqlBytes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is null, <strong>false</strong> otherwise.</p>\\n\"\n  implements:\n  - System.Data.SqlTypes.INullable.IsNull\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SqlBytes.IsNull\n- uid: System.Data.SqlTypes.SqlBytes.Item(System.Int64)\n  commentId: P:System.Data.SqlTypes.SqlBytes.Item(System.Int64)\n  id: Item(System.Int64)\n  parent: System.Data.SqlTypes.SqlBytes\n  langs:\n  - csharp\n  - vb\n  name: Item[Int64]\n  fullName: System.Data.SqlTypes.SqlBytes.Item[System.Int64]\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: this[]\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs\n    startLine: 205\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Gets or sets the <xref href=\\\"System.Data.SqlTypes.SqlBytes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance at the specified index.</p>\\n\"\n  syntax:\n    content: public byte this[long offset] { get; set; }\n    content.vb: Public Property Item(offset As Long) As Byte\n    parameters:\n    - id: offset\n      type: System.Int64\n      description: \"\\n<p>A <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n    return:\n      type: System.Byte\n      description: \"\\n<p>A <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Data.SqlTypes.SqlBytes.Item(System.Int64)\n  name.vb: Item(Int64)\n  nameWithType: SqlBytes.Item[Int64]\n  nameWithType.vb: SqlBytes.Item(Int64)\n- uid: System.Data.SqlTypes.SqlBytes.Length\n  commentId: P:System.Data.SqlTypes.SqlBytes.Length\n  id: Length\n  parent: System.Data.SqlTypes.SqlBytes\n  langs:\n  - csharp\n  - vb\n  name: Length\n  fullName: System.Data.SqlTypes.SqlBytes.Length\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Length\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs\n    startLine: 136\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Gets the length of the value that is contained in the <xref href=\\\"System.Data.SqlTypes.SqlBytes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  syntax:\n    content: public long Length { get; }\n    content.vb: Public ReadOnly Property Length As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>A <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value representing the length of the value that is contained in the <xref href=\\\"System.Data.SqlTypes.SqlBytes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance. </p>\\n<p>Returns -1 if no buffer is available to the instance or if the value is null. </p>\\n<p>Returns a <xref href=\\\"System.IO.Stream.Length\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for a stream-wrapped instance.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SqlBytes.Length\n- uid: System.Data.SqlTypes.SqlBytes.MaxLength\n  commentId: P:System.Data.SqlTypes.SqlBytes.MaxLength\n  id: MaxLength\n  parent: System.Data.SqlTypes.SqlBytes\n  langs:\n  - csharp\n  - vb\n  name: MaxLength\n  fullName: System.Data.SqlTypes.SqlBytes.MaxLength\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MaxLength\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs\n    startLine: 158\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Gets the maximum length of the value of the internal buffer of this <xref href=\\\"System.Data.SqlTypes.SqlBytes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public long MaxLength { get; }\n    content.vb: Public ReadOnly Property MaxLength As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>A long representing the maximum length of the value of the internal buffer. Returns -1 for a stream-wrapped <xref href=\\\"System.Data.SqlTypes.SqlBytes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SqlBytes.MaxLength\n- uid: System.Data.SqlTypes.SqlBytes.Null\n  commentId: P:System.Data.SqlTypes.SqlBytes.Null\n  parent: System.Data.SqlTypes.SqlBytes\n  langs:\n  - csharp\n  - vb\n  fullName: System.Data.SqlTypes.SqlBytes.Null\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs\n    startLine: 503\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Returns a null instance of this <xref href=\\\"System.Data.SqlTypes.SqlBytes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public static SqlBytes Null { get; }\n    content.vb: Public Shared ReadOnly Property Null As SqlBytes\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlBytes\n      description: \"\\n<p>Returns an instance in such a way that <xref href=\\\"System.Data.SqlTypes.SqlBytes.IsNull\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> returns <strong>true</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: SqlBytes.Null\n- uid: System.Data.SqlTypes.SqlBytes.Stream\n  commentId: P:System.Data.SqlTypes.SqlBytes.Stream\n  id: Stream\n  parent: System.Data.SqlTypes.SqlBytes\n  langs:\n  - csharp\n  - vb\n  name: Stream\n  fullName: System.Data.SqlTypes.SqlBytes.Stream\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Stream\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs\n    startLine: 247\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Gets or sets the data of this <xref href=\\\"System.Data.SqlTypes.SqlBytes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> as a stream.</p>\\n\"\n  syntax:\n    content: public Stream Stream { get; set; }\n    content.vb: Public Property Stream As Stream\n    parameters: []\n    return:\n      type: System.IO.Stream\n      description: \"\\n<p>The stream that contains the SqlBytes data.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: SqlBytes.Stream\n- uid: System.Data.SqlTypes.SqlBytes.Value\n  commentId: P:System.Data.SqlTypes.SqlBytes.Value\n  id: Value\n  parent: System.Data.SqlTypes.SqlBytes\n  langs:\n  - csharp\n  - vb\n  name: Value\n  fullName: System.Data.SqlTypes.SqlBytes.Value\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Value\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs\n    startLine: 174\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Returns a managed copy of the value held by this <xref href=\\\"System.Data.SqlTypes.SqlBytes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public byte[] Value { get; }\n    content.vb: Public ReadOnly Property Value As Byte()\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: \"\\n<p>The value of this <xref href=\\\"System.Data.SqlTypes.SqlBytes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> as an array of bytes.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SqlBytes.Value\n- uid: System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlBytes\n  commentId: M:System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlBytes\n  id: op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlBytes\n  parent: System.Data.SqlTypes.SqlBytes\n  langs:\n  - csharp\n  - vb\n  name: Explicit(SqlBinary to SqlBytes)\n  fullName: System.Data.SqlTypes.SqlBytes.Explicit(System.Data.SqlTypes.SqlBinary to System.Data.SqlTypes.SqlBytes)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Explicit\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs\n    startLine: 439\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts a <xref href=\\\"System.Data.SqlTypes.SqlBinary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to a <xref href=\\\"System.Data.SqlTypes.SqlBytes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public static explicit operator SqlBytes(SqlBinary value)\n    content.vb: Public Shared Narrowing Operator CType(value As SqlBinary) As SqlBytes\n    parameters:\n    - id: value\n      type: System.Data.SqlTypes.SqlBinary\n      description: \"\\n<p>The <xref href=\\\"System.Data.SqlTypes.SqlBinary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to be converted.</p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBytes\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlBytes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Data.SqlTypes.SqlBytes.Narrowing(System.Data.SqlTypes.SqlBinary to System.Data.SqlTypes.SqlBytes)\n  name.vb: Narrowing(SqlBinary to SqlBytes)\n  nameWithType: SqlBytes.Explicit(SqlBinary to SqlBytes)\n  nameWithType.vb: SqlBytes.Narrowing(SqlBinary to SqlBytes)\n- uid: System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBytes)~System.Data.SqlTypes.SqlBinary\n  commentId: M:System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBytes)~System.Data.SqlTypes.SqlBinary\n  id: op_Explicit(System.Data.SqlTypes.SqlBytes)~System.Data.SqlTypes.SqlBinary\n  parent: System.Data.SqlTypes.SqlBytes\n  langs:\n  - csharp\n  - vb\n  name: Explicit(SqlBytes to SqlBinary)\n  fullName: System.Data.SqlTypes.SqlBytes.Explicit(System.Data.SqlTypes.SqlBytes to System.Data.SqlTypes.SqlBinary)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Explicit\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs\n    startLine: 433\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts a <xref href=\\\"System.Data.SqlTypes.SqlBytes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to a <xref href=\\\"System.Data.SqlTypes.SqlBinary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public static explicit operator SqlBinary(SqlBytes value)\n    content.vb: Public Shared Narrowing Operator CType(value As SqlBytes) As SqlBinary\n    parameters:\n    - id: value\n      type: System.Data.SqlTypes.SqlBytes\n      description: \"\\n<p>The <xref href=\\\"System.Data.SqlTypes.SqlBytes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to be converted.</p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBinary\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlBinary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Data.SqlTypes.SqlBytes.Narrowing(System.Data.SqlTypes.SqlBytes to System.Data.SqlTypes.SqlBinary)\n  name.vb: Narrowing(SqlBytes to SqlBinary)\n  nameWithType: SqlBytes.Explicit(SqlBytes to SqlBinary)\n  nameWithType.vb: SqlBytes.Narrowing(SqlBytes to SqlBinary)\n- uid: System.Data.SqlTypes.SqlBytes.Read(System.Int64,System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.Data.SqlTypes.SqlBytes.Read(System.Int64,System.Byte[],System.Int32,System.Int32)\n  id: Read(System.Int64,System.Byte[],System.Int32,System.Int32)\n  parent: System.Data.SqlTypes.SqlBytes\n  langs:\n  - csharp\n  - vb\n  name: Read(Int64, Byte[], Int32, Int32)\n  fullName: System.Data.SqlTypes.SqlBytes.Read(System.Int64, System.Byte[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Read\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs\n    startLine: 310\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Copies bytes from this <xref href=\\\"System.Data.SqlTypes.SqlBytes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance to the passed-in buffer and returns the number of copied bytes.</p>\\n\"\n  syntax:\n    content: public long Read(long offset, byte[] buffer, int offsetInBuffer, int count)\n    content.vb: Public Function Read(offset As Long, buffer As Byte(), offsetInBuffer As Integer, count As Integer) As Long\n    parameters:\n    - id: offset\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> long value offset into the value that is contained in the <xref href=\\\"System.Data.SqlTypes.SqlBytes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>The byte array buffer to copy into.</p>\\n\"\n    - id: offsetInBuffer\n      type: System.Int32\n      description: \"\\n<p>An <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> integer offset into the buffer to start copying into.</p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>An <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> integer representing the number of bytes to copy.</p>\\n\"\n    return:\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> long value representing the number of copied bytes.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Data.SqlTypes.SqlBytes.Read(System.Int64, System.Byte(), System.Int32, System.Int32)\n  name.vb: Read(Int64, Byte(), Int32, Int32)\n  nameWithType: SqlBytes.Read(Int64, Byte[], Int32, Int32)\n  nameWithType.vb: SqlBytes.Read(Int64, Byte(), Int32, Int32)\n- uid: System.Data.SqlTypes.SqlBytes.SetLength(System.Int64)\n  commentId: M:System.Data.SqlTypes.SqlBytes.SetLength(System.Int64)\n  id: SetLength(System.Int64)\n  parent: System.Data.SqlTypes.SqlBytes\n  langs:\n  - csharp\n  - vb\n  name: SetLength(Int64)\n  fullName: System.Data.SqlTypes.SqlBytes.SetLength(System.Int64)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetLength\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs\n    startLine: 277\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Sets the length of this <xref href=\\\"System.Data.SqlTypes.SqlBytes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  syntax:\n    content: public void SetLength(long value)\n    content.vb: Public Sub SetLength(value As Long)\n    parameters:\n    - id: value\n      type: System.Int64\n      description: \"\\n<p>The <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> long value representing the length.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlBytes.SetLength(Int64)\n- uid: System.Data.SqlTypes.SqlBytes.SetNull\n  commentId: M:System.Data.SqlTypes.SqlBytes.SetNull\n  id: SetNull\n  parent: System.Data.SqlTypes.SqlBytes\n  langs:\n  - csharp\n  - vb\n  name: SetNull()\n  fullName: System.Data.SqlTypes.SqlBytes.SetNull()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetNull\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs\n    startLine: 266\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Sets this <xref href=\\\"System.Data.SqlTypes.SqlBytes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance to null.</p>\\n\"\n  syntax:\n    content: public void SetNull()\n    content.vb: Public Sub SetNull\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlBytes.SetNull()\n- uid: System.Data.SqlTypes.SqlBytes.ToSqlBinary\n  commentId: M:System.Data.SqlTypes.SqlBytes.ToSqlBinary\n  id: ToSqlBinary\n  parent: System.Data.SqlTypes.SqlBytes\n  langs:\n  - csharp\n  - vb\n  name: ToSqlBinary()\n  fullName: System.Data.SqlTypes.SqlBytes.ToSqlBinary()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToSqlBinary\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs\n    startLine: 423\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Constructs and returns a <xref href=\\\"System.Data.SqlTypes.SqlBinary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> from this <xref href=\\\"System.Data.SqlTypes.SqlBytes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  syntax:\n    content: public SqlBinary ToSqlBinary()\n    content.vb: Public Function ToSqlBinary As SqlBinary\n    return:\n      type: System.Data.SqlTypes.SqlBinary\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlBinary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> from this instance.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlBytes.ToSqlBinary()\n- uid: System.Data.SqlTypes.SqlBytes.Write(System.Int64,System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.Data.SqlTypes.SqlBytes.Write(System.Int64,System.Byte[],System.Int32,System.Int32)\n  id: Write(System.Int64,System.Byte[],System.Int32,System.Int32)\n  parent: System.Data.SqlTypes.SqlBytes\n  langs:\n  - csharp\n  - vb\n  name: Write(Int64, Byte[], Int32, Int32)\n  fullName: System.Data.SqlTypes.SqlBytes.Write(System.Int64, System.Byte[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Write\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs\n    startLine: 353\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Copies bytes from the passed-in buffer to this <xref href=\\\"System.Data.SqlTypes.SqlBytes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  syntax:\n    content: public void Write(long offset, byte[] buffer, int offsetInBuffer, int count)\n    content.vb: Public Sub Write(offset As Long, buffer As Byte(), offsetInBuffer As Integer, count As Integer)\n    parameters:\n    - id: offset\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> long value offset into the value that is contained in the <xref href=\\\"System.Data.SqlTypes.SqlBytes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>The byte array buffer to copy into.</p>\\n\"\n    - id: offsetInBuffer\n      type: System.Int32\n      description: \"\\n<p>An <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> integer offset into the buffer to start copying into.</p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>An <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> integer representing the number of bytes to copy.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Data.SqlTypes.SqlBytes.Write(System.Int64, System.Byte(), System.Int32, System.Int32)\n  name.vb: Write(Int64, Byte(), Int32, Int32)\n  nameWithType: SqlBytes.Write(Int64, Byte[], Int32, Int32)\n  nameWithType.vb: SqlBytes.Write(Int64, Byte(), Int32, Int32)\nreferences:\n- uid: System.Data.SqlTypes\n  isExternal: false\n  name: System.Data.SqlTypes\n  fullName: System.Data.SqlTypes\n  nameWithType: System.Data.SqlTypes\n  commentId: N:System.Data.SqlTypes\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Data.SqlTypes.INullable\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: INullable\n  fullName: System.Data.SqlTypes.INullable\n  nameWithType: INullable\n  commentId: T:System.Data.SqlTypes.INullable\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Byte[]\n  name: Byte[]\n  fullName: System.Byte[]\n  fullname.vb: System.Byte()\n  name.vb: Byte()\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Byte[]\n  nameWithType.vb: Byte()\n- uid: System.Data.SqlTypes.SqlBinary\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlBinary\n  fullName: System.Data.SqlTypes.SqlBinary\n  nameWithType: SqlBinary\n  commentId: T:System.Data.SqlTypes.SqlBinary\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  fullName: System.IO.Stream\n  nameWithType: Stream\n  commentId: T:System.IO.Stream\n- uid: System.IO\n  isExternal: false\n  name: System.IO\n  fullName: System.IO\n  nameWithType: System.IO\n  commentId: N:System.IO\n- uid: System.Data.SqlTypes.INullable.IsNull\n  parent: System.Data.SqlTypes.INullable\n  isExternal: false\n  name: IsNull\n  fullName: System.Data.SqlTypes.INullable.IsNull\n  nameWithType: INullable.IsNull\n  commentId: P:System.Data.SqlTypes.INullable.IsNull\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  fullName: System.Int64\n  nameWithType: Int64\n  commentId: T:System.Int64\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  fullName: System.Byte\n  nameWithType: Byte\n  commentId: T:System.Byte\n- uid: System.Data.SqlTypes.SqlBytes\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlBytes\n  fullName: System.Data.SqlTypes.SqlBytes\n  nameWithType: SqlBytes\n  commentId: T:System.Data.SqlTypes.SqlBytes\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n"}