{"nodes":[{"pos":[577,598],"content":"TaskCanceledException","needQuote":true,"nodes":[{"content":"TaskCanceledException","pos":[0,21]}]},{"pos":[2797,2820],"content":"TaskCanceledException()","needQuote":true,"nodes":[{"content":"TaskCanceledException()","pos":[0,23]}]},{"pos":[3980,4009],"content":"TaskCanceledException(String)","needQuote":true,"nodes":[{"content":"TaskCanceledException(String)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;The message that describes the exception.","pos":[4896,4942],"source":"\\n<p>The message that describes the exception."},{"content":"The caller of this constructor is required to ensure that this string has been localized for the current system culture.&lt;/p&gt;\\n","pos":[4943,5069],"source":" The caller of this constructor is required to ensure that this string has been localized for the current system culture.</p>\\n"},{"pos":[5521,5561],"content":"TaskCanceledException(String, Exception)","needQuote":true,"nodes":[{"content":"TaskCanceledException(String, Exception)","pos":[0,40]}]},{"content":"\\n&lt;p&gt;The message that describes the exception.","pos":[6577,6623],"source":"\\n<p>The message that describes the exception."},{"content":"The caller of this constructor is required to ensure that this string has been localized for the current system culture.","pos":[6624,6744]},{"content":"&lt;/p&gt;\\n","pos":[6745,6751],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The exception that is the cause of the current exception.","pos":[6827,6889],"source":"\\n<p>The exception that is the cause of the current exception."},{"content":"If the &lt;em&gt;innerException&lt;/em&gt; parameter is not &lt;strong&gt;null&lt;/strong&gt;, the current exception is raised in a &lt;strong&gt;catch&lt;/strong&gt; block that handles the inner exception.","pos":[6890,7060],"source":" If the <em>innerException</em> parameter is not <strong>null</strong>, the current exception is raised in a <strong>catch</strong> block that handles the inner exception."},{"content":"&lt;/p&gt;\\n","pos":[7061,7067],"source":" </p>\\n"},{"pos":[7521,7548],"content":"TaskCanceledException(Task)","needQuote":true,"nodes":[{"content":"TaskCanceledException(Task)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;A task that has been canceled.&lt;/p&gt;\\n","pos":[8535,8576],"source":"\\n<p>A task that has been canceled.</p>\\n"},{"pos":[8925,8929],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[9977,9999],"content":"System.Threading.Tasks","needQuote":true,"nodes":[{"content":"System.Threading.Tasks","pos":[0,22]}]},{"pos":[10178,10184],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10332,10341],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[10515,10541],"content":"OperationCanceledException","needQuote":true,"nodes":[{"content":"OperationCanceledException","pos":[0,26]}]},{"pos":[10797,10810],"content":"ISerializable","needQuote":true,"nodes":[{"content":"ISerializable","pos":[0,13]}]},{"pos":[11071,11081],"content":"_Exception","needQuote":true,"nodes":[{"content":"_Exception","pos":[0,10]}]},{"pos":[11351,11368],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[11657,11675],"content":"GetBaseException()","needQuote":true,"nodes":[{"content":"GetBaseException()","pos":[0,18]}]},{"pos":[11792,11808],"content":"GetBaseException","needQuote":true,"nodes":[{"content":"GetBaseException","pos":[0,16]}]},{"pos":[11867,11868],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11895,11896],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11977,11993],"content":"GetBaseException","needQuote":true,"nodes":[{"content":"GetBaseException","pos":[0,16]}]},{"pos":[12052,12053],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12080,12081],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12280,12290],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[12391,12399],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[12450,12451],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12478,12479],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12552,12560],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[12611,12612],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12639,12640],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12921,12971],"content":"GetObjectData(SerializationInfo, StreamingContext)","needQuote":true,"nodes":[{"content":"GetObjectData(SerializationInfo, StreamingContext)","pos":[0,50]}]},{"pos":[13269,13282],"content":"GetObjectData","needQuote":true,"nodes":[{"content":"GetObjectData","pos":[0,13]}]},{"pos":[13359,13360],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13443,13460],"content":"SerializationInfo","needQuote":true,"nodes":[{"content":"SerializationInfo","pos":[0,17]}]},{"content":",","pos":[13554,13555]},{"pos":[13642,13658],"content":"StreamingContext","needQuote":true,"nodes":[{"content":"StreamingContext","pos":[0,16]}]},{"pos":[13750,13751],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13923,13936],"content":"GetObjectData","needQuote":true,"nodes":[{"content":"GetObjectData","pos":[0,13]}]},{"pos":[14013,14014],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14097,14114],"content":"SerializationInfo","needQuote":true,"nodes":[{"content":"SerializationInfo","pos":[0,17]}]},{"content":",","pos":[14208,14209]},{"pos":[14296,14312],"content":"StreamingContext","needQuote":true,"nodes":[{"content":"StreamingContext","pos":[0,16]}]},{"pos":[14404,14405],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14725,14734],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[14833,14840],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[14911,14912],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14939,14940],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15012,15019],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[15090,15091],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15118,15119],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15299,15306],"content":"Message","needQuote":true,"nodes":[{"content":"Message","pos":[0,7]}]},{"pos":[15502,15506],"content":"Data","needQuote":true,"nodes":[{"content":"Data","pos":[0,4]}]},{"pos":[15703,15717],"content":"InnerException","needQuote":true,"nodes":[{"content":"InnerException","pos":[0,14]}]},{"pos":[15939,15949],"content":"TargetSite","needQuote":true,"nodes":[{"content":"TargetSite","pos":[0,10]}]},{"pos":[16160,16170],"content":"StackTrace","needQuote":true,"nodes":[{"content":"StackTrace","pos":[0,10]}]},{"pos":[16379,16387],"content":"HelpLink","needQuote":true,"nodes":[{"content":"HelpLink","pos":[0,8]}]},{"pos":[16588,16594],"content":"Source","needQuote":true,"nodes":[{"content":"Source","pos":[0,6]}]},{"pos":[16790,16797],"content":"HResult","needQuote":true,"nodes":[{"content":"HResult","pos":[0,7]}]},{"pos":[17008,17028],"content":"SerializeObjectState","needQuote":true,"nodes":[{"content":"SerializeObjectState","pos":[0,20]}]},{"pos":[17273,17287],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[17406,17412],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17479,17480],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17530,17536],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17596,17597],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17680,17686],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17753,17754],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17804,17810],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17870,17871],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18085,18107],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[18255,18261],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[18328,18329],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18379,18385],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18446,18447]},{"pos":[18502,18508],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18568,18569],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18666,18672],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[18739,18740],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18790,18796],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18857,18858]},{"pos":[18913,18919],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18979,18980],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19225,19256],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[19422,19437],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[19513,19514],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19564,19570],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[19631,19632]},{"pos":[19687,19693],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19753,19754],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19860,19875],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[19951,19952],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20002,20008],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[20069,20070]},{"pos":[20125,20131],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20191,20192],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20422,20435],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[20536,20547],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[20619,20620],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20647,20648],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20721,20732],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[20804,20805],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20832,20833],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21016,21033],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[21142,21157],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[21233,21234],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21261,21262],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21339,21354],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[21430,21431],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21458,21459],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21604,21610],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[21739,21767],"content":"System.Runtime.Serialization","needQuote":true,"nodes":[{"content":"System.Runtime.Serialization","pos":[0,28]}]},{"pos":[21964,21994],"content":"System.Runtime.InteropServices","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices","pos":[0,30]}]},{"pos":[22197,22203],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[22378,22382],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]}],"content":"items:\n- uid: System.Threading.Tasks.TaskCanceledException\n  commentId: T:System.Threading.Tasks.TaskCanceledException\n  id: TaskCanceledException\n  parent: System.Threading.Tasks\n  children:\n  - System.Threading.Tasks.TaskCanceledException.#ctor\n  - System.Threading.Tasks.TaskCanceledException.#ctor(System.String)\n  - System.Threading.Tasks.TaskCanceledException.#ctor(System.String,System.Exception)\n  - System.Threading.Tasks.TaskCanceledException.#ctor(System.Threading.Tasks.Task)\n  - System.Threading.Tasks.TaskCanceledException.Task\n  langs:\n  - csharp\n  - vb\n  name: TaskCanceledException\n  fullName: System.Threading.Tasks.TaskCanceledException\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/Tasks/TaskCanceledException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TaskCanceledException\n    path: src/mscorlib/src/System/Threading/Tasks/TaskCanceledException.cs\n    startLine: 22\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Threading.Tasks\n  summary: \"\\n<p>Represents an exception used to communicate task cancellation.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      public class TaskCanceledException : OperationCanceledException, ISerializable, _Exception\n    content.vb: >-\n      <Serializable>\n\n      Public Class TaskCanceledException\n          Inherits OperationCanceledException\n          Implements ISerializable, _Exception\n  inheritance:\n  - System.Object\n  - System.Exception\n  - System.OperationCanceledException\n  implements:\n  - System.Runtime.Serialization.ISerializable\n  - System.Runtime.InteropServices._Exception\n  inheritedMembers:\n  - System.OperationCanceledException.CancellationToken\n  - System.Exception.GetBaseException\n  - System.Exception.ToString\n  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Exception.GetType\n  - System.Exception.Message\n  - System.Exception.Data\n  - System.Exception.InnerException\n  - System.Exception.TargetSite\n  - System.Exception.StackTrace\n  - System.Exception.HelpLink\n  - System.Exception.Source\n  - System.Exception.HResult\n  - System.Exception.SerializeObjectState\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: TaskCanceledException\n- uid: System.Threading.Tasks.TaskCanceledException.#ctor\n  commentId: M:System.Threading.Tasks.TaskCanceledException.#ctor\n  id: '#ctor'\n  parent: System.Threading.Tasks.TaskCanceledException\n  langs:\n  - csharp\n  - vb\n  name: TaskCanceledException()\n  fullName: System.Threading.Tasks.TaskCanceledException.TaskCanceledException()\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/Tasks/TaskCanceledException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Threading/Tasks/TaskCanceledException.cs\n    startLine: 32\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Threading.Tasks\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Threading.Tasks.TaskCanceledException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a system-supplied message that describes the error.</p>\\n\"\n  syntax:\n    content: public TaskCanceledException()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TaskCanceledException.TaskCanceledException()\n- uid: System.Threading.Tasks.TaskCanceledException.#ctor(System.String)\n  commentId: M:System.Threading.Tasks.TaskCanceledException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Threading.Tasks.TaskCanceledException\n  langs:\n  - csharp\n  - vb\n  name: TaskCanceledException(String)\n  fullName: System.Threading.Tasks.TaskCanceledException.TaskCanceledException(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/Tasks/TaskCanceledException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Threading/Tasks/TaskCanceledException.cs\n    startLine: 41\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Threading.Tasks\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Threading.Tasks.TaskCanceledException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified message that describes the error.</p>\\n\"\n  syntax:\n    content: public TaskCanceledException(string message)\n    content.vb: Public Sub New(message As String)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TaskCanceledException.TaskCanceledException(String)\n- uid: System.Threading.Tasks.TaskCanceledException.#ctor(System.String,System.Exception)\n  commentId: M:System.Threading.Tasks.TaskCanceledException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.Threading.Tasks.TaskCanceledException\n  langs:\n  - csharp\n  - vb\n  name: TaskCanceledException(String, Exception)\n  fullName: System.Threading.Tasks.TaskCanceledException.TaskCanceledException(System.String, System.Exception)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/Tasks/TaskCanceledException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Threading/Tasks/TaskCanceledException.cs\n    startLine: 52\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Threading.Tasks\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Threading.Tasks.TaskCanceledException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.</p>\\n\"\n  syntax:\n    content: public TaskCanceledException(string message, Exception innerException)\n    content.vb: Public Sub New(message As String, innerException As Exception)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture. </p>\\n\"\n    - id: innerException\n      type: System.Exception\n      description: \"\\n<p>The exception that is the cause of the current exception. If the <em>innerException</em> parameter is not <strong>null</strong>, the current exception is raised in a <strong>catch</strong> block that handles the inner exception. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TaskCanceledException.TaskCanceledException(String, Exception)\n- uid: System.Threading.Tasks.TaskCanceledException.#ctor(System.Threading.Tasks.Task)\n  commentId: M:System.Threading.Tasks.TaskCanceledException.#ctor(System.Threading.Tasks.Task)\n  id: '#ctor(System.Threading.Tasks.Task)'\n  parent: System.Threading.Tasks.TaskCanceledException\n  langs:\n  - csharp\n  - vb\n  name: TaskCanceledException(Task)\n  fullName: System.Threading.Tasks.TaskCanceledException.TaskCanceledException(System.Threading.Tasks.Task)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/Tasks/TaskCanceledException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Threading/Tasks/TaskCanceledException.cs\n    startLine: 61\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Threading.Tasks\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Threading.Tasks.TaskCanceledException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a reference to the <xref href=\\\"System.Threading.Tasks.Task\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that has been canceled.</p>\\n\"\n  syntax:\n    content: public TaskCanceledException(Task task)\n    content.vb: Public Sub New(task As Task)\n    parameters:\n    - id: task\n      type: System.Threading.Tasks.Task\n      description: \"\\n<p>A task that has been canceled.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TaskCanceledException.TaskCanceledException(Task)\n- uid: System.Threading.Tasks.TaskCanceledException.Task\n  commentId: P:System.Threading.Tasks.TaskCanceledException.Task\n  id: Task\n  parent: System.Threading.Tasks.TaskCanceledException\n  langs:\n  - csharp\n  - vb\n  name: Task\n  fullName: System.Threading.Tasks.TaskCanceledException.Task\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/Tasks/TaskCanceledException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Task\n    path: src/mscorlib/src/System/Threading/Tasks/TaskCanceledException.cs\n    startLine: 85\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Threading.Tasks\n  summary: \"\\n<p>Gets the task associated with this exception.</p>\\n\"\n  syntax:\n    content: public Task Task { get; }\n    content.vb: Public ReadOnly Property Task As Task\n    parameters: []\n    return:\n      type: System.Threading.Tasks.Task\n      description: \"\\n<p>A reference to the <xref href=\\\"System.Threading.Tasks.Task\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is associated with this exception.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: TaskCanceledException.Task\nreferences:\n- uid: System.Threading.Tasks\n  isExternal: false\n  name: System.Threading.Tasks\n  fullName: System.Threading.Tasks\n  nameWithType: System.Threading.Tasks\n  commentId: N:System.Threading.Tasks\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  fullName: System.Exception\n  nameWithType: Exception\n  commentId: T:System.Exception\n- uid: System.OperationCanceledException\n  parent: System\n  isExternal: false\n  name: OperationCanceledException\n  fullName: System.OperationCanceledException\n  nameWithType: OperationCanceledException\n  commentId: T:System.OperationCanceledException\n- uid: System.Runtime.Serialization.ISerializable\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: ISerializable\n  fullName: System.Runtime.Serialization.ISerializable\n  nameWithType: ISerializable\n  commentId: T:System.Runtime.Serialization.ISerializable\n- uid: System.Runtime.InteropServices._Exception\n  parent: System.Runtime.InteropServices\n  isExternal: true\n  name: _Exception\n  fullName: System.Runtime.InteropServices._Exception\n  nameWithType: _Exception\n  commentId: T:System.Runtime.InteropServices._Exception\n- uid: System.OperationCanceledException.CancellationToken\n  parent: System.OperationCanceledException\n  isExternal: false\n  name: CancellationToken\n  fullName: System.OperationCanceledException.CancellationToken\n  nameWithType: OperationCanceledException.CancellationToken\n  commentId: P:System.OperationCanceledException.CancellationToken\n- uid: System.Exception.GetBaseException\n  parent: System.Exception\n  isExternal: false\n  name: GetBaseException()\n  fullName: System.Exception.GetBaseException()\n  spec.csharp:\n  - uid: System.Exception.GetBaseException\n    name: GetBaseException\n    fullName: System.Exception.GetBaseException\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.GetBaseException\n    name: GetBaseException\n    fullName: System.Exception.GetBaseException\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Exception.GetBaseException()\n  commentId: M:System.Exception.GetBaseException\n- uid: System.Exception.ToString\n  parent: System.Exception\n  isExternal: false\n  name: ToString()\n  fullName: System.Exception.ToString()\n  spec.csharp:\n  - uid: System.Exception.ToString\n    name: ToString\n    fullName: System.Exception.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.ToString\n    name: ToString\n    fullName: System.Exception.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Exception.ToString()\n  commentId: M:System.Exception.ToString\n- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Exception\n  isExternal: true\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  fullName: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)\n  spec.csharp:\n  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n    name: GetObjectData\n    fullName: System.Exception.GetObjectData\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Runtime.Serialization.SerializationInfo\n    name: SerializationInfo\n    fullName: System.Runtime.Serialization.SerializationInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Runtime.Serialization.StreamingContext\n    name: StreamingContext\n    fullName: System.Runtime.Serialization.StreamingContext\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n    name: GetObjectData\n    fullName: System.Exception.GetObjectData\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Runtime.Serialization.SerializationInfo\n    name: SerializationInfo\n    fullName: System.Runtime.Serialization.SerializationInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Runtime.Serialization.StreamingContext\n    name: StreamingContext\n    fullName: System.Runtime.Serialization.StreamingContext\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)\n  commentId: M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n- uid: System.Exception.GetType\n  parent: System.Exception\n  isExternal: true\n  name: GetType()\n  fullName: System.Exception.GetType()\n  spec.csharp:\n  - uid: System.Exception.GetType\n    name: GetType\n    fullName: System.Exception.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.GetType\n    name: GetType\n    fullName: System.Exception.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Exception.GetType()\n  commentId: M:System.Exception.GetType\n- uid: System.Exception.Message\n  parent: System.Exception\n  isExternal: false\n  name: Message\n  fullName: System.Exception.Message\n  nameWithType: Exception.Message\n  commentId: P:System.Exception.Message\n- uid: System.Exception.Data\n  parent: System.Exception\n  isExternal: false\n  name: Data\n  fullName: System.Exception.Data\n  nameWithType: Exception.Data\n  commentId: P:System.Exception.Data\n- uid: System.Exception.InnerException\n  parent: System.Exception\n  isExternal: false\n  name: InnerException\n  fullName: System.Exception.InnerException\n  nameWithType: Exception.InnerException\n  commentId: P:System.Exception.InnerException\n- uid: System.Exception.TargetSite\n  parent: System.Exception\n  isExternal: true\n  name: TargetSite\n  fullName: System.Exception.TargetSite\n  nameWithType: Exception.TargetSite\n  commentId: P:System.Exception.TargetSite\n- uid: System.Exception.StackTrace\n  parent: System.Exception\n  isExternal: false\n  name: StackTrace\n  fullName: System.Exception.StackTrace\n  nameWithType: Exception.StackTrace\n  commentId: P:System.Exception.StackTrace\n- uid: System.Exception.HelpLink\n  parent: System.Exception\n  isExternal: false\n  name: HelpLink\n  fullName: System.Exception.HelpLink\n  nameWithType: Exception.HelpLink\n  commentId: P:System.Exception.HelpLink\n- uid: System.Exception.Source\n  parent: System.Exception\n  isExternal: false\n  name: Source\n  fullName: System.Exception.Source\n  nameWithType: Exception.Source\n  commentId: P:System.Exception.Source\n- uid: System.Exception.HResult\n  parent: System.Exception\n  isExternal: false\n  name: HResult\n  fullName: System.Exception.HResult\n  nameWithType: Exception.HResult\n  commentId: P:System.Exception.HResult\n- uid: System.Exception.SerializeObjectState\n  parent: System.Exception\n  isExternal: true\n  name: SerializeObjectState\n  fullName: System.Exception.SerializeObjectState\n  nameWithType: Exception.SerializeObjectState\n  commentId: E:System.Exception.SerializeObjectState\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Runtime.Serialization\n  isExternal: false\n  name: System.Runtime.Serialization\n  fullName: System.Runtime.Serialization\n  nameWithType: System.Runtime.Serialization\n  commentId: N:System.Runtime.Serialization\n- uid: System.Runtime.InteropServices\n  isExternal: false\n  name: System.Runtime.InteropServices\n  fullName: System.Runtime.InteropServices\n  nameWithType: System.Runtime.InteropServices\n  commentId: N:System.Runtime.InteropServices\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  fullName: System.Threading.Tasks.Task\n  nameWithType: Task\n  commentId: T:System.Threading.Tasks.Task\n"}