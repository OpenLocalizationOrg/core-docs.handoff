{"nodes":[{"pos":[373,395],"content":"XmlBinaryWriterSession","needQuote":true,"nodes":[{"content":"XmlBinaryWriterSession","pos":[0,22]}]},{"pos":[1730,1754],"content":"XmlBinaryWriterSession()","needQuote":true,"nodes":[{"content":"XmlBinaryWriterSession()","pos":[0,24]}]},{"pos":[2683,2690],"content":"Reset()","needQuote":true,"nodes":[{"content":"Reset()","pos":[0,7]}]},{"pos":[3712,3750],"content":"TryAdd(XmlDictionaryString, out Int32)","needQuote":true,"nodes":[{"content":"TryAdd(XmlDictionaryString, out Int32)","pos":[0,38]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the string could be added; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[5084,5183],"source":"\\n<p>\\n<strong>true</strong> if the string could be added; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[5302,5355],"source":"\\n<p>\\n<em>value</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;An entry with key = &lt;em&gt;key&lt;/em&gt; already exists.&lt;/p&gt;\\n","pos":[5468,5527],"source":"\\n<p>An entry with key = <em>key</em> already exists.</p>\\n"},{"pos":[5994,6004],"content":"System.Xml","needQuote":true,"nodes":[{"content":"System.Xml","pos":[0,10]}]},{"pos":[6147,6153],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6313,6323],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[6418,6426],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[6495,6496],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6523,6524],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6594,6602],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[6671,6672],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6699,6700],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6883,6897],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[7016,7022],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7089,7090],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7140,7146],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7206,7207],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7290,7296],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7363,7364],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7414,7420],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7480,7481],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7695,7717],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[7865,7871],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7938,7939],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7989,7995],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8056,8057]},{"pos":[8112,8118],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8178,8179],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8276,8282],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8349,8350],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8400,8406],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8467,8468]},{"pos":[8523,8529],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8589,8590],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8835,8866],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[9032,9047],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[9123,9124],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9174,9180],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9241,9242]},{"pos":[9297,9303],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9363,9364],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9470,9485],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[9561,9562],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9612,9618],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9679,9680]},{"pos":[9735,9741],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9801,9802],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10032,10045],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[10146,10157],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[10229,10230],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10257,10258],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10331,10342],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[10414,10415],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10442,10443],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10618,10627],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[10720,10727],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[10795,10796],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10823,10824],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10893,10900],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[10968,10969],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10996,10997],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11172,11189],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[11298,11313],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[11389,11390],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11417,11418],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11495,11510],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[11586,11587],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11614,11615],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11760,11766],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[11918,11937],"content":"XmlDictionaryString","needQuote":true,"nodes":[{"content":"XmlDictionaryString","pos":[0,19]}]},{"pos":[12128,12133],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[12276,12283],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[12429,12450],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[12659,12684],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]}],"content":"items:\n- uid: System.Xml.XmlBinaryWriterSession\n  commentId: T:System.Xml.XmlBinaryWriterSession\n  id: XmlBinaryWriterSession\n  parent: System.Xml\n  children:\n  - System.Xml.XmlBinaryWriterSession.#ctor\n  - System.Xml.XmlBinaryWriterSession.Reset\n  - System.Xml.XmlBinaryWriterSession.TryAdd(System.Xml.XmlDictionaryString,System.Int32@)\n  langs:\n  - csharp\n  - vb\n  name: XmlBinaryWriterSession\n  fullName: System.Xml.XmlBinaryWriterSession\n  type: Class\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: XmlBinaryWriterSession\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 117\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Xml\n  summary: \"\\n<p>Enables using a dynamic dictionary to compress common strings that appear in a message and maintain state.</p>\\n\"\n  syntax:\n    content: public class XmlBinaryWriterSession\n    content.vb: Public Class XmlBinaryWriterSession\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: XmlBinaryWriterSession\n- uid: System.Xml.XmlBinaryWriterSession.#ctor\n  commentId: M:System.Xml.XmlBinaryWriterSession.#ctor\n  id: '#ctor'\n  parent: System.Xml.XmlBinaryWriterSession\n  langs:\n  - csharp\n  - vb\n  name: XmlBinaryWriterSession()\n  fullName: System.Xml.XmlBinaryWriterSession.XmlBinaryWriterSession()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 119\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Xml\n  summary: \"\\n<p>Creates an instance of this class. </p>\\n\"\n  syntax:\n    content: public XmlBinaryWriterSession()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlBinaryWriterSession.XmlBinaryWriterSession()\n- uid: System.Xml.XmlBinaryWriterSession.Reset\n  commentId: M:System.Xml.XmlBinaryWriterSession.Reset\n  id: Reset\n  parent: System.Xml.XmlBinaryWriterSession\n  langs:\n  - csharp\n  - vb\n  name: Reset()\n  fullName: System.Xml.XmlBinaryWriterSession.Reset()\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Reset\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 120\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Xml\n  summary: \"\\n<p>Clears out the internal collections.</p>\\n\"\n  syntax:\n    content: public void Reset()\n    content.vb: Public Sub Reset\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlBinaryWriterSession.Reset()\n- uid: System.Xml.XmlBinaryWriterSession.TryAdd(System.Xml.XmlDictionaryString,System.Int32@)\n  commentId: M:System.Xml.XmlBinaryWriterSession.TryAdd(System.Xml.XmlDictionaryString,System.Int32@)\n  id: TryAdd(System.Xml.XmlDictionaryString,System.Int32@)\n  parent: System.Xml.XmlBinaryWriterSession\n  langs:\n  - csharp\n  - vb\n  name: TryAdd(XmlDictionaryString, out Int32)\n  fullName: System.Xml.XmlBinaryWriterSession.TryAdd(System.Xml.XmlDictionaryString, out System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TryAdd\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 121\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Xml\n  summary: \"\\n<p>Tries to add an <xref href=\\\"System.Xml.XmlDictionaryString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to the internal collection.</p>\\n\"\n  syntax:\n    content: public virtual bool TryAdd(XmlDictionaryString value, out int key)\n    content.vb: Public Overridable Function TryAdd(value As XmlDictionaryString, ByRef key As Integer) As Boolean\n    parameters:\n    - id: value\n      type: System.Xml.XmlDictionaryString\n      description: \"\\n<p>The <xref href=\\\"System.Xml.XmlDictionaryString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to add.</p>\\n\"\n    - id: key\n      type: System.Int32\n      description: \"\\n<p>The key of the <xref href=\\\"System.Xml.XmlDictionaryString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that was successfully added.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the string could be added; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>value</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An entry with key = <em>key</em> already exists.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  fullName.vb: System.Xml.XmlBinaryWriterSession.TryAdd(System.Xml.XmlDictionaryString, ByRef System.Int32)\n  name.vb: TryAdd(XmlDictionaryString, ByRef Int32)\n  nameWithType: XmlBinaryWriterSession.TryAdd(XmlDictionaryString, out Int32)\n  nameWithType.vb: XmlBinaryWriterSession.TryAdd(XmlDictionaryString, ByRef Int32)\nreferences:\n- uid: System.Xml\n  isExternal: false\n  name: System.Xml\n  fullName: System.Xml\n  commentId: N:System.Xml\n  nameWithType: System.Xml\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Xml.XmlDictionaryString\n  parent: System.Xml\n  isExternal: false\n  name: XmlDictionaryString\n  fullName: System.Xml.XmlDictionaryString\n  commentId: T:System.Xml.XmlDictionaryString\n  nameWithType: XmlDictionaryString\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n"}