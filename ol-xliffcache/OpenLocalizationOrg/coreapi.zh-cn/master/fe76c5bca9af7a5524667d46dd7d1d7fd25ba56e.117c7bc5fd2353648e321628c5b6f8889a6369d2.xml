{"nodes":[{"pos":[473,498],"content":"CollectionChangeEventArgs","needQuote":true,"nodes":[{"content":"CollectionChangeEventArgs","pos":[0,25]}]},{"pos":[2648,2705],"content":"CollectionChangeEventArgs(CollectionChangeAction, Object)","needQuote":true,"nodes":[{"content":"CollectionChangeEventArgs(CollectionChangeAction, Object)","pos":[0,57]}]},{"pos":[4827,4833],"content":"Action","needQuote":true,"nodes":[{"content":"Action","pos":[0,6]}]},{"pos":[6487,6494],"content":"Element","needQuote":true,"nodes":[{"content":"Element","pos":[0,7]}]},{"pos":[7986,8007],"content":"System.ComponentModel","needQuote":true,"nodes":[{"content":"System.ComponentModel","pos":[0,21]}]},{"pos":[8183,8189],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8337,8346],"content":"EventArgs","needQuote":true,"nodes":[{"content":"EventArgs","pos":[0,9]}]},{"pos":[8518,8523],"content":"Empty","needQuote":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[8710,8720],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[8815,8823],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[8892,8893],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8920,8921],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8991,8999],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[9068,9069],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9096,9097],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9280,9294],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[9413,9419],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9486,9487],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9537,9543],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9603,9604],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9687,9693],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9760,9761],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9811,9817],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9877,9878],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10092,10114],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[10262,10268],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[10335,10336],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10386,10392],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10453,10454]},{"pos":[10509,10515],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10575,10576],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10673,10679],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[10746,10747],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10797,10803],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10864,10865]},{"pos":[10920,10926],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10986,10987],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11232,11263],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[11429,11444],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[11520,11521],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11571,11577],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11638,11639]},{"pos":[11694,11700],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11760,11761],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11867,11882],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[11958,11959],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12009,12015],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12076,12077]},{"pos":[12132,12138],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12198,12199],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12429,12442],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[12543,12554],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[12626,12627],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12654,12655],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12728,12739],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[12811,12812],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12839,12840],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13015,13024],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[13117,13124],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[13192,13193],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13220,13221],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13290,13297],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[13365,13366],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13393,13394],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13569,13586],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[13695,13710],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[13786,13787],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13814,13815],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13892,13907],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[13983,13984],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14011,14012],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14157,14163],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[14340,14362],"content":"CollectionChangeAction","needQuote":true,"nodes":[{"content":"CollectionChangeAction","pos":[0,22]}]}],"content":"items:\n- uid: System.ComponentModel.CollectionChangeEventArgs\n  commentId: T:System.ComponentModel.CollectionChangeEventArgs\n  id: CollectionChangeEventArgs\n  parent: System.ComponentModel\n  children:\n  - System.ComponentModel.CollectionChangeEventArgs.#ctor(System.ComponentModel.CollectionChangeAction,System.Object)\n  - System.ComponentModel.CollectionChangeEventArgs.Action\n  - System.ComponentModel.CollectionChangeEventArgs.Element\n  langs:\n  - csharp\n  - vb\n  name: CollectionChangeEventArgs\n  fullName: System.ComponentModel.CollectionChangeEventArgs\n  type: Class\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CollectionChangeEventArgs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CollectionChangeEventArgs\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CollectionChangeEventArgs.cs\n    startLine: 9\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Provides data for the <xref href=\\\"System.Data.DataColumnCollection.CollectionChanged\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> event.</p>\\n\"\n  syntax:\n    content: 'public class CollectionChangeEventArgs : EventArgs'\n    content.vb: >-\n      Public Class CollectionChangeEventArgs\n          Inherits EventArgs\n  seealso:\n  - type: System.Data.DataColumnCollection.CollectionChanged\n    commentId: E:System.Data.DataColumnCollection.CollectionChanged\n  - type: System.ComponentModel.CollectionChangeEventHandler\n    commentId: T:System.ComponentModel.CollectionChangeEventHandler\n  - type: System.ComponentModel.CollectionChangeAction\n    commentId: T:System.ComponentModel.CollectionChangeAction\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  inheritedMembers:\n  - System.EventArgs.Empty\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: CollectionChangeEventArgs\n- uid: System.ComponentModel.CollectionChangeEventArgs.#ctor(System.ComponentModel.CollectionChangeAction,System.Object)\n  commentId: M:System.ComponentModel.CollectionChangeEventArgs.#ctor(System.ComponentModel.CollectionChangeAction,System.Object)\n  id: '#ctor(System.ComponentModel.CollectionChangeAction,System.Object)'\n  parent: System.ComponentModel.CollectionChangeEventArgs\n  langs:\n  - csharp\n  - vb\n  name: CollectionChangeEventArgs(CollectionChangeAction, Object)\n  fullName: System.ComponentModel.CollectionChangeEventArgs.CollectionChangeEventArgs(System.ComponentModel.CollectionChangeAction, System.Object)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CollectionChangeEventArgs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CollectionChangeEventArgs.cs\n    startLine: 17\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.ComponentModel.CollectionChangeEventArgs\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public CollectionChangeEventArgs(CollectionChangeAction action, object element)\n    content.vb: Public Sub New(action As CollectionChangeAction, element As Object)\n    parameters:\n    - id: action\n      type: System.ComponentModel.CollectionChangeAction\n      description: \"\\n<p>One of the <xref href=\\\"System.ComponentModel.CollectionChangeAction\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that specifies how the collection changed. </p>\\n\"\n    - id: element\n      type: System.Object\n      description: \"\\n<p>An <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that specifies the instance of the collection where the change occurred. </p>\\n\"\n  seealso:\n  - type: System.Data.DataColumnCollection.CollectionChanged\n    commentId: E:System.Data.DataColumnCollection.CollectionChanged\n  - type: System.ComponentModel.CollectionChangeAction\n    commentId: T:System.ComponentModel.CollectionChangeAction\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: CollectionChangeEventArgs.CollectionChangeEventArgs(CollectionChangeAction, Object)\n- uid: System.ComponentModel.CollectionChangeEventArgs.Action\n  commentId: P:System.ComponentModel.CollectionChangeEventArgs.Action\n  id: Action\n  parent: System.ComponentModel.CollectionChangeEventArgs\n  langs:\n  - csharp\n  - vb\n  name: Action\n  fullName: System.ComponentModel.CollectionChangeEventArgs.Action\n  type: Property\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CollectionChangeEventArgs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Action\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CollectionChangeEventArgs.cs\n    startLine: 26\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Gets an action that specifies how the collection changed.</p>\\n\"\n  syntax:\n    content: public virtual CollectionChangeAction Action { get; }\n    content.vb: Public Overridable ReadOnly Property Action As CollectionChangeAction\n    parameters: []\n    return:\n      type: System.ComponentModel.CollectionChangeAction\n      description: \"\\n<p>One of the <xref href=\\\"System.ComponentModel.CollectionChangeAction\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n  seealso:\n  - type: System.Data.DataColumnCollection.CollectionChanged\n    commentId: E:System.Data.DataColumnCollection.CollectionChanged\n  - type: System.ComponentModel.CollectionChangeAction\n    commentId: T:System.ComponentModel.CollectionChangeAction\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: CollectionChangeEventArgs.Action\n- uid: System.ComponentModel.CollectionChangeEventArgs.Element\n  commentId: P:System.ComponentModel.CollectionChangeEventArgs.Element\n  id: Element\n  parent: System.ComponentModel.CollectionChangeEventArgs\n  langs:\n  - csharp\n  - vb\n  name: Element\n  fullName: System.ComponentModel.CollectionChangeEventArgs.Element\n  type: Property\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CollectionChangeEventArgs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Element\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CollectionChangeEventArgs.cs\n    startLine: 37\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Gets the instance of the collection with the change.</p>\\n\"\n  syntax:\n    content: public virtual object Element { get; }\n    content.vb: Public Overridable ReadOnly Property Element As Object\n    parameters: []\n    return:\n      type: System.Object\n      description: \"\\n<p>An <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the instance of the collection with the change, or <strong>null</strong> if you refresh the collection.</p>\\n\"\n  seealso:\n  - type: System.Data.DataColumnCollection.CollectionChanged\n    commentId: E:System.Data.DataColumnCollection.CollectionChanged\n  - type: System.ComponentModel.CollectionChangeAction\n    commentId: T:System.ComponentModel.CollectionChangeAction\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: CollectionChangeEventArgs.Element\nreferences:\n- uid: System.ComponentModel\n  isExternal: false\n  name: System.ComponentModel\n  fullName: System.ComponentModel\n  nameWithType: System.ComponentModel\n  commentId: N:System.ComponentModel\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  fullName: System.EventArgs\n  nameWithType: EventArgs\n  commentId: T:System.EventArgs\n- uid: System.EventArgs.Empty\n  parent: System.EventArgs\n  isExternal: true\n  name: Empty\n  fullName: System.EventArgs.Empty\n  nameWithType: EventArgs.Empty\n  commentId: F:System.EventArgs.Empty\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.ComponentModel.CollectionChangeAction\n  parent: System.ComponentModel\n  isExternal: false\n  name: CollectionChangeAction\n  fullName: System.ComponentModel.CollectionChangeAction\n  nameWithType: CollectionChangeAction\n  commentId: T:System.ComponentModel.CollectionChangeAction\n"}