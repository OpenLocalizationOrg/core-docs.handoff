{"nodes":[{"pos":[906,924],"content":"AggregateException","needQuote":true,"nodes":[{"content":"AggregateException","pos":[0,18]}]},{"pos":[2909,2929],"content":"AggregateException()","needQuote":true,"nodes":[{"content":"AggregateException()","pos":[0,20]}]},{"pos":[4057,4099],"content":"AggregateException(IEnumerable<Exception>)","needQuote":true,"nodes":[{"content":"AggregateException(IEnumerable&lt;Exception&gt;)","pos":[0,42],"source":"AggregateException(IEnumerable<Exception>)"}]},{"content":"\\n&lt;p&gt;The exceptions that are the cause of the current exception.&lt;/p&gt;\\n","pos":[5060,5130],"source":"\\n<p>The exceptions that are the cause of the current exception.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;innerExceptions&lt;/em&gt; argument is null.&lt;/p&gt;\\n","pos":[5249,5306],"source":"\\n<p>The <em>innerExceptions</em> argument is null.</p>\\n"},{"content":"\\n&lt;p&gt;An element of &lt;em&gt;innerExceptions&lt;/em&gt; is null.&lt;/p&gt;\\n","pos":[5403,5461],"source":"\\n<p>An element of <em>innerExceptions</em> is null.</p>\\n"},{"pos":[6092,6123],"content":"AggregateException(Exception[])","needQuote":true,"nodes":[{"content":"AggregateException(Exception[])","pos":[0,31]}]},{"content":"\\n&lt;p&gt;The exceptions that are the cause of the current exception.&lt;/p&gt;\\n","pos":[7002,7072],"source":"\\n<p>The exceptions that are the cause of the current exception.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;innerExceptions&lt;/em&gt; argument is null.&lt;/p&gt;\\n","pos":[7191,7248],"source":"\\n<p>The <em>innerExceptions</em> argument is null.</p>\\n"},{"content":"\\n&lt;p&gt;An element of &lt;em&gt;innerExceptions&lt;/em&gt; is null.&lt;/p&gt;\\n","pos":[7345,7403],"source":"\\n<p>An element of <em>innerExceptions</em> is null.</p>\\n"},{"pos":[7939,7965],"content":"AggregateException(String)","needQuote":true,"nodes":[{"content":"AggregateException(String)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;The message that describes the exception.","pos":[8754,8800],"source":"\\n<p>The message that describes the exception."},{"content":"The caller of this constructor is required to ensure that this string has been localized for the current system culture.&lt;/p&gt;\\n","pos":[8801,8927],"source":" The caller of this constructor is required to ensure that this string has been localized for the current system culture.</p>\\n"},{"pos":[9436,9486],"content":"AggregateException(String, IEnumerable<Exception>)","needQuote":true,"nodes":[{"content":"AggregateException(String, IEnumerable&lt;Exception&gt;)","pos":[0,50],"source":"AggregateException(String, IEnumerable<Exception>)"}]},{"content":"\\n&lt;p&gt;The error message that explains the reason for the exception.&lt;/p&gt;\\n","pos":[10477,10549],"source":"\\n<p>The error message that explains the reason for the exception.</p>\\n"},{"content":"\\n&lt;p&gt;The exceptions that are the cause of the current exception.&lt;/p&gt;\\n","pos":[10666,10736],"source":"\\n<p>The exceptions that are the cause of the current exception.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;innerExceptions&lt;/em&gt; argument is null.&lt;/p&gt;\\n","pos":[10855,10912],"source":"\\n<p>The <em>innerExceptions</em> argument is null.</p>\\n"},{"content":"\\n&lt;p&gt;An element of &lt;em&gt;innerExceptions&lt;/em&gt; is null.&lt;/p&gt;\\n","pos":[11009,11067],"source":"\\n<p>An element of <em>innerExceptions</em> is null.</p>\\n"},{"pos":[11773,11810],"content":"AggregateException(String, Exception)","needQuote":true,"nodes":[{"content":"AggregateException(String, Exception)","pos":[0,37]}]},{"content":"\\n&lt;p&gt;The message that describes the exception.","pos":[12728,12774],"source":"\\n<p>The message that describes the exception."},{"content":"The caller of this constructor is required to ensure that this string has been localized for the current system culture.","pos":[12775,12895]},{"content":"&lt;/p&gt;\\n","pos":[12896,12902],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The exception that is the cause of the current exception.","pos":[12978,13040],"source":"\\n<p>The exception that is the cause of the current exception."},{"content":"If the &lt;em&gt;innerException&lt;/em&gt; parameter is not &lt;strong&gt;null&lt;/strong&gt;, the current exception is raised in a &lt;strong&gt;catch&lt;/strong&gt; block that handles the inner exception.","pos":[13041,13211],"source":" If the <em>innerException</em> parameter is not <strong>null</strong>, the current exception is raised in a <strong>catch</strong> block that handles the inner exception."},{"content":"&lt;/p&gt;\\n","pos":[13212,13218],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;innerException&lt;/em&gt; argument is null.&lt;/p&gt;\\n","pos":[13337,13393],"source":"\\n<p>The <em>innerException</em> argument is null.</p>\\n"},{"pos":[13799,13838],"content":"AggregateException(String, Exception[])","needQuote":true,"nodes":[{"content":"AggregateException(String, Exception[])","pos":[0,39]}]},{"content":"\\n&lt;p&gt;The error message that explains the reason for the exception.&lt;/p&gt;\\n","pos":[14784,14856],"source":"\\n<p>The error message that explains the reason for the exception.</p>\\n"},{"content":"\\n&lt;p&gt;The exceptions that are the cause of the current exception.&lt;/p&gt;\\n","pos":[14935,15005],"source":"\\n<p>The exceptions that are the cause of the current exception.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;innerExceptions&lt;/em&gt; argument is null.&lt;/p&gt;\\n","pos":[15124,15181],"source":"\\n<p>The <em>innerExceptions</em> argument is null.</p>\\n"},{"content":"\\n&lt;p&gt;An element of &lt;em&gt;innerExceptions&lt;/em&gt; is null.&lt;/p&gt;\\n","pos":[15278,15336],"source":"\\n<p>An element of <em>innerExceptions</em> is null.</p>\\n"},{"pos":[15894,15909],"content":"InnerExceptions","needQuote":true,"nodes":[{"content":"InnerExceptions","pos":[0,15]}]},{"pos":[17259,17268],"content":"Flatten()","needQuote":true,"nodes":[{"content":"Flatten()","pos":[0,9]}]},{"pos":[18408,18426],"content":"GetBaseException()","needQuote":true,"nodes":[{"content":"GetBaseException()","pos":[0,18]}]},{"pos":[19825,19857],"content":"Handle(Func<Exception, Boolean>)","needQuote":true,"nodes":[{"content":"Handle(Func&lt;Exception, Boolean&gt;)","pos":[0,32],"source":"Handle(Func<Exception, Boolean>)"}]},{"content":"\\n&lt;p&gt;The &lt;em&gt;predicate&lt;/em&gt; argument is null.&lt;/p&gt;\\n","pos":[21140,21191],"source":"\\n<p>The <em>predicate</em> argument is null.</p>\\n"},{"pos":[21959,21969],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"content":"\\n&lt;p&gt;A string representation of the current exception.&lt;/p&gt;\\n","pos":[22684,22744],"source":"\\n<p>A string representation of the current exception.</p>\\n"},{"pos":[22971,22977],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[23108,23114],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23262,23271],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[23476,23489],"content":"ISerializable","needQuote":true,"nodes":[{"content":"ISerializable","pos":[0,13]}]},{"pos":[23750,23760],"content":"_Exception","needQuote":true,"nodes":[{"content":"_Exception","pos":[0,10]}]},{"pos":[24085,24135],"content":"GetObjectData(SerializationInfo, StreamingContext)","needQuote":true,"nodes":[{"content":"GetObjectData(SerializationInfo, StreamingContext)","pos":[0,50]}]},{"pos":[24433,24446],"content":"GetObjectData","needQuote":true,"nodes":[{"content":"GetObjectData","pos":[0,13]}]},{"pos":[24523,24524],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24607,24624],"content":"SerializationInfo","needQuote":true,"nodes":[{"content":"SerializationInfo","pos":[0,17]}]},{"content":",","pos":[24718,24719]},{"pos":[24806,24822],"content":"StreamingContext","needQuote":true,"nodes":[{"content":"StreamingContext","pos":[0,16]}]},{"pos":[24914,24915],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25087,25100],"content":"GetObjectData","needQuote":true,"nodes":[{"content":"GetObjectData","pos":[0,13]}]},{"pos":[25177,25178],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25261,25278],"content":"SerializationInfo","needQuote":true,"nodes":[{"content":"SerializationInfo","pos":[0,17]}]},{"content":",","pos":[25372,25373]},{"pos":[25460,25476],"content":"StreamingContext","needQuote":true,"nodes":[{"content":"StreamingContext","pos":[0,16]}]},{"pos":[25568,25569],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25889,25898],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[25997,26004],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[26075,26076],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26103,26104],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26176,26183],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[26254,26255],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26282,26283],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26463,26470],"content":"Message","needQuote":true,"nodes":[{"content":"Message","pos":[0,7]}]},{"pos":[26666,26670],"content":"Data","needQuote":true,"nodes":[{"content":"Data","pos":[0,4]}]},{"pos":[26867,26881],"content":"InnerException","needQuote":true,"nodes":[{"content":"InnerException","pos":[0,14]}]},{"pos":[27103,27113],"content":"TargetSite","needQuote":true,"nodes":[{"content":"TargetSite","pos":[0,10]}]},{"pos":[27324,27334],"content":"StackTrace","needQuote":true,"nodes":[{"content":"StackTrace","pos":[0,10]}]},{"pos":[27543,27551],"content":"HelpLink","needQuote":true,"nodes":[{"content":"HelpLink","pos":[0,8]}]},{"pos":[27752,27758],"content":"Source","needQuote":true,"nodes":[{"content":"Source","pos":[0,6]}]},{"pos":[27954,27961],"content":"HResult","needQuote":true,"nodes":[{"content":"HResult","pos":[0,7]}]},{"pos":[28172,28192],"content":"SerializeObjectState","needQuote":true,"nodes":[{"content":"SerializeObjectState","pos":[0,20]}]},{"pos":[28437,28451],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[28570,28576],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[28643,28644],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28694,28700],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[28760,28761],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28844,28850],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[28917,28918],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28968,28974],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[29034,29035],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29249,29271],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[29419,29425],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[29492,29493],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29543,29549],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[29610,29611]},{"pos":[29666,29672],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[29732,29733],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29830,29836],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[29903,29904],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29954,29960],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[30021,30022]},{"pos":[30077,30083],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[30143,30144],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30389,30420],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[30586,30601],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[30677,30678],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30728,30734],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[30795,30796]},{"pos":[30851,30857],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[30917,30918],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31024,31039],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[31115,31116],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31166,31172],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[31233,31234]},{"pos":[31289,31295],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[31355,31356],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31586,31599],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[31700,31711],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[31783,31784],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31811,31812],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31885,31896],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[31968,31969],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31996,31997],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32180,32197],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[32306,32321],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[32397,32398],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32425,32426],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32503,32518],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[32594,32595],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32622,32623],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32790,32818],"content":"System.Runtime.Serialization","needQuote":true,"nodes":[{"content":"System.Runtime.Serialization","pos":[0,28]}]},{"pos":[33015,33045],"content":"System.Runtime.InteropServices","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices","pos":[0,30]}]},{"pos":[33346,33368],"content":"IEnumerable<Exception>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;Exception&gt;","pos":[0,22],"source":"IEnumerable<Exception>"}]},{"pos":[33625,33636],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[33721,33722],"content":"<","needQuote":true,"nodes":[]},{"pos":[33775,33784],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[33940,33951],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[34037,34040]},{"pos":[34100,34109],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[34172,34173],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34422,34436],"content":"IEnumerable<T>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;T&gt;","pos":[0,14],"source":"IEnumerable<T>"}]},{"pos":[34655,34666],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[34730,34731],"content":"<","needQuote":true,"nodes":[]},{"pos":[34758,34759],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[34879,34890],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[34955,34958]},{"pos":[34992,34993],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[35020,35021],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35224,35250],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]},{"pos":[35409,35420],"content":"Exception[]","needQuote":true,"nodes":[{"content":"Exception[]","pos":[0,11]}]},{"pos":[35560,35569],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"content":"[]","pos":[35633,35635]},{"pos":[35703,35712],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[35775,35777],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[35920,35926],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[36195,36224],"content":"ReadOnlyCollection<Exception>","needQuote":true,"nodes":[{"content":"ReadOnlyCollection&lt;Exception&gt;","pos":[0,29],"source":"ReadOnlyCollection<Exception>"}]},{"pos":[36521,36539],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"pos":[36635,36636],"content":"<","needQuote":true,"nodes":[]},{"pos":[36689,36698],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[36865,36883],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"content":"(Of","pos":[36980,36983]},{"pos":[37043,37052],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[37115,37116],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37401,37422],"content":"ReadOnlyCollection<T>","needQuote":true,"nodes":[{"content":"ReadOnlyCollection&lt;T&gt;","pos":[0,21],"source":"ReadOnlyCollection<T>"}]},{"pos":[37681,37699],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"pos":[37774,37775],"content":"<","needQuote":true,"nodes":[]},{"pos":[37802,37803],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[37934,37952],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"content":"(Of","pos":[38028,38031]},{"pos":[38065,38066],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[38093,38094],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38326,38356],"content":"System.Collections.ObjectModel","needQuote":true,"nodes":[{"content":"System.Collections.ObjectModel","pos":[0,30]}]},{"pos":[38571,38589],"content":"AggregateException","needQuote":true,"nodes":[{"content":"AggregateException","pos":[0,18]}]},{"pos":[38800,38818],"content":"GetBaseException()","needQuote":true,"nodes":[{"content":"GetBaseException()","pos":[0,18]}]},{"pos":[38935,38951],"content":"GetBaseException","needQuote":true,"nodes":[{"content":"GetBaseException","pos":[0,16]}]},{"pos":[39010,39011],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39038,39039],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39120,39136],"content":"GetBaseException","needQuote":true,"nodes":[{"content":"GetBaseException","pos":[0,16]}]},{"pos":[39195,39196],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39223,39224],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39440,39464],"content":"Func<Exception, Boolean>","needQuote":true,"nodes":[{"content":"Func&lt;Exception, Boolean&gt;","pos":[0,24],"source":"Func<Exception, Boolean>"}]},{"pos":[39674,39678],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[39736,39737],"content":"<","needQuote":true,"nodes":[]},{"pos":[39790,39799],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"content":",","pos":[39863,39864]},{"pos":[39920,39927],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[40054,40058],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[40117,40120]},{"pos":[40180,40189],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"content":",","pos":[40253,40254]},{"pos":[40310,40317],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[40378,40379],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40593,40609],"content":"Func<T, TResult>","needQuote":true,"nodes":[{"content":"Func&lt;T, TResult&gt;","pos":[0,16],"source":"Func<T, TResult>"}]},{"pos":[40767,40771],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[40808,40809],"content":"<","needQuote":true,"nodes":[]},{"pos":[40836,40837],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[40865,40866]},{"pos":[40898,40905],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[41004,41008],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[41046,41049]},{"pos":[41083,41084],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[41112,41113]},{"pos":[41145,41152],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[41185,41186],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41392,41402],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[41503,41511],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[41562,41563],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41590,41591],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41664,41672],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[41723,41724],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41751,41752],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41911,41932],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[42133,42150],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]}],"content":"items:\n- uid: System.AggregateException\n  commentId: T:System.AggregateException\n  id: AggregateException\n  parent: System\n  children:\n  - System.AggregateException.#ctor\n  - System.AggregateException.#ctor(System.Collections.Generic.IEnumerable{System.Exception})\n  - System.AggregateException.#ctor(System.Exception[])\n  - System.AggregateException.#ctor(System.String)\n  - System.AggregateException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Exception})\n  - System.AggregateException.#ctor(System.String,System.Exception)\n  - System.AggregateException.#ctor(System.String,System.Exception[])\n  - System.AggregateException.Flatten\n  - System.AggregateException.GetBaseException\n  - System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})\n  - System.AggregateException.InnerExceptions\n  - System.AggregateException.ToString\n  langs:\n  - csharp\n  - vb\n  name: AggregateException\n  fullName: System.AggregateException\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/AggregateException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AggregateException\n    path: src/mscorlib/src/System/AggregateException.cs\n    startLine: 31\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System\n  summary: \"\\n<p>Represents one or more errors that occur during application execution.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [DebuggerDisplay(\"Count = {InnerExceptionCount}\")]\n\n      public class AggregateException : Exception, ISerializable, _Exception\n    content.vb: >-\n      <Serializable>\n\n      <DebuggerDisplay(\"Count = {InnerExceptionCount}\")>\n\n      Public Class AggregateException\n          Inherits Exception\n          Implements ISerializable, _Exception\n  inheritance:\n  - System.Object\n  - System.Exception\n  implements:\n  - System.Runtime.Serialization.ISerializable\n  - System.Runtime.InteropServices._Exception\n  inheritedMembers:\n  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Exception.GetType\n  - System.Exception.Message\n  - System.Exception.Data\n  - System.Exception.InnerException\n  - System.Exception.TargetSite\n  - System.Exception.StackTrace\n  - System.Exception.HelpLink\n  - System.Exception.Source\n  - System.Exception.HResult\n  - System.Exception.SerializeObjectState\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: AggregateException\n- uid: System.AggregateException.#ctor\n  commentId: M:System.AggregateException.#ctor\n  id: '#ctor'\n  parent: System.AggregateException\n  langs:\n  - csharp\n  - vb\n  name: AggregateException()\n  fullName: System.AggregateException.AggregateException()\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/AggregateException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/AggregateException.cs\n    startLine: 41\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.AggregateException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a system-supplied message that describes the error.</p>\\n\"\n  syntax:\n    content: public AggregateException()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: AggregateException.AggregateException()\n- uid: System.AggregateException.#ctor(System.Collections.Generic.IEnumerable{System.Exception})\n  commentId: M:System.AggregateException.#ctor(System.Collections.Generic.IEnumerable{System.Exception})\n  id: '#ctor(System.Collections.Generic.IEnumerable{System.Exception})'\n  parent: System.AggregateException\n  langs:\n  - csharp\n  - vb\n  name: AggregateException(IEnumerable<Exception>)\n  fullName: System.AggregateException.AggregateException(System.Collections.Generic.IEnumerable<System.Exception>)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/AggregateException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/AggregateException.cs\n    startLine: 86\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.AggregateException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with references to the inner exceptions that are the cause of this exception.</p>\\n\"\n  syntax:\n    content: public AggregateException(IEnumerable<Exception> innerExceptions)\n    content.vb: Public Sub New(innerExceptions As IEnumerable(Of Exception))\n    parameters:\n    - id: innerExceptions\n      type: System.Collections.Generic.IEnumerable{System.Exception}\n      description: \"\\n<p>The exceptions that are the cause of the current exception.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>innerExceptions</em> argument is null.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>An element of <em>innerExceptions</em> is null.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.AggregateException.AggregateException(System.Collections.Generic.IEnumerable(Of System.Exception))\n  name.vb: AggregateException(IEnumerable(Of Exception))\n  nameWithType: AggregateException.AggregateException(IEnumerable<Exception>)\n  nameWithType.vb: AggregateException.AggregateException(IEnumerable(Of Exception))\n- uid: System.AggregateException.#ctor(System.Exception[])\n  commentId: M:System.AggregateException.#ctor(System.Exception[])\n  id: '#ctor(System.Exception[])'\n  parent: System.AggregateException\n  langs:\n  - csharp\n  - vb\n  name: AggregateException(Exception[])\n  fullName: System.AggregateException.AggregateException(System.Exception[])\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/AggregateException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/AggregateException.cs\n    startLine: 100\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.AggregateException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with references to the inner exceptions that are the cause of this exception.</p>\\n\"\n  syntax:\n    content: public AggregateException(params Exception[] innerExceptions)\n    content.vb: Public Sub New(ParamArray innerExceptions As Exception())\n    parameters:\n    - id: innerExceptions\n      type: System.Exception[]\n      description: \"\\n<p>The exceptions that are the cause of the current exception.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>innerExceptions</em> argument is null.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>An element of <em>innerExceptions</em> is null.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.AggregateException.AggregateException(System.Exception())\n  name.vb: AggregateException(Exception())\n  nameWithType: AggregateException.AggregateException(Exception[])\n  nameWithType.vb: AggregateException.AggregateException(Exception())\n- uid: System.AggregateException.#ctor(System.String)\n  commentId: M:System.AggregateException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.AggregateException\n  langs:\n  - csharp\n  - vb\n  name: AggregateException(String)\n  fullName: System.AggregateException.AggregateException(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/AggregateException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/AggregateException.cs\n    startLine: 52\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.AggregateException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified message that describes the error.</p>\\n\"\n  syntax:\n    content: public AggregateException(string message)\n    content.vb: Public Sub New(message As String)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: AggregateException.AggregateException(String)\n- uid: System.AggregateException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Exception})\n  commentId: M:System.AggregateException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Exception})\n  id: '#ctor(System.String,System.Collections.Generic.IEnumerable{System.Exception})'\n  parent: System.AggregateException\n  langs:\n  - csharp\n  - vb\n  name: AggregateException(String, IEnumerable<Exception>)\n  fullName: System.AggregateException.AggregateException(System.String, System.Collections.Generic.IEnumerable<System.Exception>)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/AggregateException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/AggregateException.cs\n    startLine: 115\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.AggregateException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified error message and references to the inner exceptions that are the cause of this exception.</p>\\n\"\n  syntax:\n    content: public AggregateException(string message, IEnumerable<Exception> innerExceptions)\n    content.vb: Public Sub New(message As String, innerExceptions As IEnumerable(Of Exception))\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>The error message that explains the reason for the exception.</p>\\n\"\n    - id: innerExceptions\n      type: System.Collections.Generic.IEnumerable{System.Exception}\n      description: \"\\n<p>The exceptions that are the cause of the current exception.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>innerExceptions</em> argument is null.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>An element of <em>innerExceptions</em> is null.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.AggregateException.AggregateException(System.String, System.Collections.Generic.IEnumerable(Of System.Exception))\n  name.vb: AggregateException(String, IEnumerable(Of Exception))\n  nameWithType: AggregateException.AggregateException(String, IEnumerable<Exception>)\n  nameWithType.vb: AggregateException.AggregateException(String, IEnumerable(Of Exception))\n- uid: System.AggregateException.#ctor(System.String,System.Exception)\n  commentId: M:System.AggregateException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.AggregateException\n  langs:\n  - csharp\n  - vb\n  name: AggregateException(String, Exception)\n  fullName: System.AggregateException.AggregateException(System.String, System.Exception)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/AggregateException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/AggregateException.cs\n    startLine: 66\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.AggregateException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.</p>\\n\"\n  syntax:\n    content: public AggregateException(string message, Exception innerException)\n    content.vb: Public Sub New(message As String, innerException As Exception)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture. </p>\\n\"\n    - id: innerException\n      type: System.Exception\n      description: \"\\n<p>The exception that is the cause of the current exception. If the <em>innerException</em> parameter is not <strong>null</strong>, the current exception is raised in a <strong>catch</strong> block that handles the inner exception. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>innerException</em> argument is null.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: AggregateException.AggregateException(String, Exception)\n- uid: System.AggregateException.#ctor(System.String,System.Exception[])\n  commentId: M:System.AggregateException.#ctor(System.String,System.Exception[])\n  id: '#ctor(System.String,System.Exception[])'\n  parent: System.AggregateException\n  langs:\n  - csharp\n  - vb\n  name: AggregateException(String, Exception[])\n  fullName: System.AggregateException.AggregateException(System.String, System.Exception[])\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/AggregateException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/AggregateException.cs\n    startLine: 132\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.AggregateException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified error message and references to the inner exceptions that are the cause of this exception.</p>\\n\"\n  syntax:\n    content: public AggregateException(string message, params Exception[] innerExceptions)\n    content.vb: Public Sub New(message As String, ParamArray innerExceptions As Exception())\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>The error message that explains the reason for the exception.</p>\\n\"\n    - id: innerExceptions\n      type: System.Exception[]\n      description: \"\\n<p>The exceptions that are the cause of the current exception.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>innerExceptions</em> argument is null.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>An element of <em>innerExceptions</em> is null.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.AggregateException.AggregateException(System.String, System.Exception())\n  name.vb: AggregateException(String, Exception())\n  nameWithType: AggregateException.AggregateException(String, Exception[])\n  nameWithType.vb: AggregateException.AggregateException(String, Exception())\n- uid: System.AggregateException.InnerExceptions\n  commentId: P:System.AggregateException.InnerExceptions\n  id: InnerExceptions\n  parent: System.AggregateException\n  langs:\n  - csharp\n  - vb\n  name: InnerExceptions\n  fullName: System.AggregateException.InnerExceptions\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/AggregateException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: InnerExceptions\n    path: src/mscorlib/src/System/AggregateException.cs\n    startLine: 324\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System\n  summary: \"\\n<p>Gets a read-only collection of the <xref href=\\\"System.Exception\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instances that caused the current exception.</p>\\n\"\n  syntax:\n    content: public ReadOnlyCollection<Exception> InnerExceptions { get; }\n    content.vb: Public ReadOnly Property InnerExceptions As ReadOnlyCollection(Of Exception)\n    parameters: []\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Exception}\n      description: \"\\n<p>Returns a read-only collection of the <xref href=\\\"System.Exception\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instances that caused the current exception.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: AggregateException.InnerExceptions\n- uid: System.AggregateException.Flatten\n  commentId: M:System.AggregateException.Flatten\n  id: Flatten\n  parent: System.AggregateException\n  langs:\n  - csharp\n  - vb\n  name: Flatten()\n  fullName: System.AggregateException.Flatten()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/AggregateException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Flatten\n    path: src/mscorlib/src/System/AggregateException.cs\n    startLine: 391\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System\n  summary: \"\\n<p>Flattens an <xref href=\\\"System.AggregateException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instances into a single, new instance.</p>\\n\"\n  syntax:\n    content: public AggregateException Flatten()\n    content.vb: Public Function Flatten As AggregateException\n    return:\n      type: System.AggregateException\n      description: \"\\n<p>A new, flattened <xref href=\\\"System.AggregateException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: AggregateException.Flatten()\n- uid: System.AggregateException.GetBaseException\n  commentId: M:System.AggregateException.GetBaseException\n  id: GetBaseException\n  parent: System.AggregateException\n  langs:\n  - csharp\n  - vb\n  name: GetBaseException()\n  fullName: System.AggregateException.GetBaseException()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/AggregateException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetBaseException\n    path: src/mscorlib/src/System/AggregateException.cs\n    startLine: 305\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System\n  summary: \"\\n<p>Returns the <xref href=\\\"System.AggregateException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is the root cause of this exception.</p>\\n\"\n  syntax:\n    content: public override Exception GetBaseException()\n    content.vb: Public Overrides Function GetBaseException As Exception\n    return:\n      type: System.Exception\n      description: \"\\n<p>Returns the <xref href=\\\"System.AggregateException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is the root cause of this exception.</p>\\n\"\n  overridden: System.Exception.GetBaseException\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: AggregateException.GetBaseException()\n- uid: System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})\n  commentId: M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})\n  id: Handle(System.Func{System.Exception,System.Boolean})\n  parent: System.AggregateException\n  langs:\n  - csharp\n  - vb\n  name: Handle(Func<Exception, Boolean>)\n  fullName: System.AggregateException.Handle(System.Func<System.Exception, System.Boolean>)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/AggregateException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Handle\n    path: src/mscorlib/src/System/AggregateException.cs\n    startLine: 349\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System\n  summary: \"\\n<p>Invokes a handler on each <xref href=\\\"System.Exception\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> contained by this <xref href=\\\"System.AggregateException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void Handle(Func<Exception, bool> predicate)\n    content.vb: Public Sub Handle(predicate As Func(Of Exception, Boolean))\n    parameters:\n    - id: predicate\n      type: System.Func{System.Exception,System.Boolean}\n      description: \"\\n<p>The predicate to execute for each exception. The predicate accepts as an argument the <xref href=\\\"System.Exception\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to be processed and returns a Boolean to indicate whether the exception was handled.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>predicate</em> argument is null.</p>\\n\"\n  - type: System.AggregateException\n    commentId: T:System.AggregateException\n    description: \"\\n<p>An exception contained by this <xref href=\\\"System.AggregateException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was not handled.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.AggregateException.Handle(System.Func(Of System.Exception, System.Boolean))\n  name.vb: Handle(Func(Of Exception, Boolean))\n  nameWithType: AggregateException.Handle(Func<Exception, Boolean>)\n  nameWithType.vb: AggregateException.Handle(Func(Of Exception, Boolean))\n- uid: System.AggregateException.ToString\n  commentId: M:System.AggregateException.ToString\n  id: ToString\n  parent: System.AggregateException\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.AggregateException.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/AggregateException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToString\n    path: src/mscorlib/src/System/AggregateException.cs\n    startLine: 463\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System\n  summary: \"\\n<p>Creates and returns a string representation of the current <xref href=\\\"System.AggregateException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override string ToString()\n    content.vb: Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>A string representation of the current exception.</p>\\n\"\n  overridden: System.Exception.ToString\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: AggregateException.ToString()\nreferences:\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  fullName: System.Exception\n  nameWithType: Exception\n  commentId: T:System.Exception\n- uid: System.Runtime.Serialization.ISerializable\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: ISerializable\n  fullName: System.Runtime.Serialization.ISerializable\n  nameWithType: ISerializable\n  commentId: T:System.Runtime.Serialization.ISerializable\n- uid: System.Runtime.InteropServices._Exception\n  parent: System.Runtime.InteropServices\n  isExternal: true\n  name: _Exception\n  fullName: System.Runtime.InteropServices._Exception\n  nameWithType: _Exception\n  commentId: T:System.Runtime.InteropServices._Exception\n- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Exception\n  isExternal: true\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  fullName: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)\n  spec.csharp:\n  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n    name: GetObjectData\n    fullName: System.Exception.GetObjectData\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Runtime.Serialization.SerializationInfo\n    name: SerializationInfo\n    fullName: System.Runtime.Serialization.SerializationInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Runtime.Serialization.StreamingContext\n    name: StreamingContext\n    fullName: System.Runtime.Serialization.StreamingContext\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n    name: GetObjectData\n    fullName: System.Exception.GetObjectData\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Runtime.Serialization.SerializationInfo\n    name: SerializationInfo\n    fullName: System.Runtime.Serialization.SerializationInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Runtime.Serialization.StreamingContext\n    name: StreamingContext\n    fullName: System.Runtime.Serialization.StreamingContext\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)\n  commentId: M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n- uid: System.Exception.GetType\n  parent: System.Exception\n  isExternal: true\n  name: GetType()\n  fullName: System.Exception.GetType()\n  spec.csharp:\n  - uid: System.Exception.GetType\n    name: GetType\n    fullName: System.Exception.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.GetType\n    name: GetType\n    fullName: System.Exception.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Exception.GetType()\n  commentId: M:System.Exception.GetType\n- uid: System.Exception.Message\n  parent: System.Exception\n  isExternal: false\n  name: Message\n  fullName: System.Exception.Message\n  nameWithType: Exception.Message\n  commentId: P:System.Exception.Message\n- uid: System.Exception.Data\n  parent: System.Exception\n  isExternal: false\n  name: Data\n  fullName: System.Exception.Data\n  nameWithType: Exception.Data\n  commentId: P:System.Exception.Data\n- uid: System.Exception.InnerException\n  parent: System.Exception\n  isExternal: false\n  name: InnerException\n  fullName: System.Exception.InnerException\n  nameWithType: Exception.InnerException\n  commentId: P:System.Exception.InnerException\n- uid: System.Exception.TargetSite\n  parent: System.Exception\n  isExternal: true\n  name: TargetSite\n  fullName: System.Exception.TargetSite\n  nameWithType: Exception.TargetSite\n  commentId: P:System.Exception.TargetSite\n- uid: System.Exception.StackTrace\n  parent: System.Exception\n  isExternal: false\n  name: StackTrace\n  fullName: System.Exception.StackTrace\n  nameWithType: Exception.StackTrace\n  commentId: P:System.Exception.StackTrace\n- uid: System.Exception.HelpLink\n  parent: System.Exception\n  isExternal: false\n  name: HelpLink\n  fullName: System.Exception.HelpLink\n  nameWithType: Exception.HelpLink\n  commentId: P:System.Exception.HelpLink\n- uid: System.Exception.Source\n  parent: System.Exception\n  isExternal: false\n  name: Source\n  fullName: System.Exception.Source\n  nameWithType: Exception.Source\n  commentId: P:System.Exception.Source\n- uid: System.Exception.HResult\n  parent: System.Exception\n  isExternal: false\n  name: HResult\n  fullName: System.Exception.HResult\n  nameWithType: Exception.HResult\n  commentId: P:System.Exception.HResult\n- uid: System.Exception.SerializeObjectState\n  parent: System.Exception\n  isExternal: true\n  name: SerializeObjectState\n  fullName: System.Exception.SerializeObjectState\n  nameWithType: Exception.SerializeObjectState\n  commentId: E:System.Exception.SerializeObjectState\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System.Runtime.Serialization\n  isExternal: false\n  name: System.Runtime.Serialization\n  fullName: System.Runtime.Serialization\n  nameWithType: System.Runtime.Serialization\n  commentId: N:System.Runtime.Serialization\n- uid: System.Runtime.InteropServices\n  isExternal: false\n  name: System.Runtime.InteropServices\n  fullName: System.Runtime.InteropServices\n  nameWithType: System.Runtime.InteropServices\n  commentId: N:System.Runtime.InteropServices\n- uid: System.Collections.Generic.IEnumerable{System.Exception}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<Exception>\n  fullName: System.Collections.Generic.IEnumerable<System.Exception>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Exception)\n  name.vb: IEnumerable(Of Exception)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Exception\n    name: Exception\n    fullName: System.Exception\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Exception\n    name: Exception\n    fullName: System.Exception\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<Exception>\n  nameWithType.vb: IEnumerable(Of Exception)\n  commentId: T:System.Collections.Generic.IEnumerable{System.Exception}\n- uid: System.Collections.Generic.IEnumerable`1\n  isExternal: false\n  name: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of T)\n  name.vb: IEnumerable(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<T>\n  nameWithType.vb: IEnumerable(Of T)\n  commentId: T:System.Collections.Generic.IEnumerable`1\n- uid: System.Collections.Generic\n  isExternal: false\n  name: System.Collections.Generic\n  fullName: System.Collections.Generic\n  nameWithType: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n- uid: System.Exception[]\n  name: Exception[]\n  fullName: System.Exception[]\n  fullname.vb: System.Exception()\n  name.vb: Exception()\n  spec.csharp:\n  - uid: System.Exception\n    name: Exception\n    fullName: System.Exception\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Exception\n    name: Exception\n    fullName: System.Exception\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Exception[]\n  nameWithType.vb: Exception()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Exception}\n  parent: System.Collections.ObjectModel\n  definition: System.Collections.ObjectModel.ReadOnlyCollection`1\n  name: ReadOnlyCollection<Exception>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Exception>\n  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of System.Exception)\n  name.vb: ReadOnlyCollection(Of Exception)\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Exception\n    name: Exception\n    fullName: System.Exception\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Exception\n    name: Exception\n    fullName: System.Exception\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ReadOnlyCollection<Exception>\n  nameWithType.vb: ReadOnlyCollection(Of Exception)\n  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{System.Exception}\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)\n  name.vb: ReadOnlyCollection(Of T)\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: ReadOnlyCollection<T>\n  nameWithType.vb: ReadOnlyCollection(Of T)\n  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1\n- uid: System.Collections.ObjectModel\n  isExternal: false\n  name: System.Collections.ObjectModel\n  fullName: System.Collections.ObjectModel\n  nameWithType: System.Collections.ObjectModel\n  commentId: N:System.Collections.ObjectModel\n- uid: System.AggregateException\n  parent: System\n  isExternal: false\n  name: AggregateException\n  fullName: System.AggregateException\n  nameWithType: AggregateException\n  commentId: T:System.AggregateException\n- uid: System.Exception.GetBaseException\n  parent: System.Exception\n  isExternal: false\n  name: GetBaseException()\n  fullName: System.Exception.GetBaseException()\n  spec.csharp:\n  - uid: System.Exception.GetBaseException\n    name: GetBaseException\n    fullName: System.Exception.GetBaseException\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.GetBaseException\n    name: GetBaseException\n    fullName: System.Exception.GetBaseException\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Exception.GetBaseException()\n  commentId: M:System.Exception.GetBaseException\n- uid: System.Func{System.Exception,System.Boolean}\n  parent: System\n  definition: System.Func`2\n  name: Func<Exception, Boolean>\n  fullName: System.Func<System.Exception, System.Boolean>\n  fullname.vb: System.Func(Of System.Exception, System.Boolean)\n  name.vb: Func(Of Exception, Boolean)\n  spec.csharp:\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Exception\n    name: Exception\n    fullName: System.Exception\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Exception\n    name: Exception\n    fullName: System.Exception\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Func<Exception, Boolean>\n  nameWithType.vb: Func(Of Exception, Boolean)\n  commentId: T:System.Func{System.Exception,System.Boolean}\n- uid: System.Func`2\n  isExternal: false\n  name: Func<T, TResult>\n  fullName: System.Func<T, TResult>\n  fullname.vb: System.Func(Of T, TResult)\n  name.vb: Func(Of T, TResult)\n  spec.csharp:\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  nameWithType: Func<T, TResult>\n  nameWithType.vb: Func(Of T, TResult)\n  commentId: T:System.Func`2\n- uid: System.Exception.ToString\n  parent: System.Exception\n  isExternal: false\n  name: ToString()\n  fullName: System.Exception.ToString()\n  spec.csharp:\n  - uid: System.Exception.ToString\n    name: ToString\n    fullName: System.Exception.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.ToString\n    name: ToString\n    fullName: System.Exception.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Exception.ToString()\n  commentId: M:System.Exception.ToString\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n"}