{"nodes":[{"pos":[793,814],"content":"KeyAgreeRecipientInfo","needQuote":true,"nodes":[{"content":"KeyAgreeRecipientInfo","pos":[0,21]}]},{"pos":[3061,3065],"content":"Date","needQuote":true,"nodes":[{"content":"Date","pos":[0,4]}]},{"content":"\\n&lt;p&gt;The date and time of the start of the key agreement protocol by the originator.&lt;/p&gt;\\n","pos":[3993,4083],"source":"\\n<p>The date and time of the start of the key agreement protocol by the originator.</p>\\n"},{"content":"\\n&lt;p&gt;The recipient identifier type is not a subject key identifier.&lt;/p&gt;\\n","pos":[4210,4283],"source":"\\n<p>The recipient identifier type is not a subject key identifier.</p>\\n"},{"pos":[5748,5760],"content":"EncryptedKey","needQuote":true,"nodes":[{"content":"EncryptedKey","pos":[0,12]}]},{"content":"\\n&lt;p&gt;An array of byte values that contain the encrypted recipient keying material.&lt;/p&gt;\\n","pos":[6706,6794],"source":"\\n<p>An array of byte values that contain the encrypted recipient keying material.</p>\\n"},{"pos":[8383,8405],"content":"KeyEncryptionAlgorithm","needQuote":true,"nodes":[{"content":"KeyEncryptionAlgorithm","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The value of the algorithm used to perform the key agreement.&lt;/p&gt;\\n","pos":[9475,9547],"source":"\\n<p>The value of the algorithm used to perform the key agreement.</p>\\n"},{"pos":[11145,11170],"content":"OriginatorIdentifierOrKey","needQuote":true,"nodes":[{"content":"OriginatorIdentifierOrKey","pos":[0,25]}]},{"content":"\\n&lt;p&gt;An object that contains information about the originator of the key agreement.&lt;/p&gt;\\n","pos":[12296,12385],"source":"\\n<p>An object that contains information about the originator of the key agreement.</p>\\n"},{"pos":[13844,13861],"content":"OtherKeyAttribute","needQuote":true,"nodes":[{"content":"OtherKeyAttribute","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The attributes of the keying material.&lt;/p&gt;\\n","pos":[14895,14944],"source":"\\n<p>The attributes of the keying material.</p>\\n"},{"content":"\\n&lt;p&gt;The recipient identifier type is not a subject key identifier.&lt;/p&gt;\\n","pos":[15071,15144],"source":"\\n<p>The recipient identifier type is not a subject key identifier.</p>\\n"},{"pos":[16617,16636],"content":"RecipientIdentifier","needQuote":true,"nodes":[{"content":"RecipientIdentifier","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The identifier of the recipient.&lt;/p&gt;\\n","pos":[17669,17712],"source":"\\n<p>The identifier of the recipient.</p>\\n"},{"pos":[19256,19263],"content":"Version","needQuote":true,"nodes":[{"content":"Version","pos":[0,7]}]},{"pos":[21969,22002],"content":"System.Security.Cryptography.Pkcs","needQuote":true,"nodes":[{"content":"System.Security.Cryptography.Pkcs","pos":[0,33]}]},{"pos":[22214,22220],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22426,22439],"content":"RecipientInfo","needQuote":true,"nodes":[{"content":"RecipientInfo","pos":[0,13]}]},{"pos":[22739,22743],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[22993,23003],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[23098,23106],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[23175,23176],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23203,23204],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23274,23282],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[23351,23352],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23379,23380],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23563,23577],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[23696,23702],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[23769,23770],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23820,23826],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23886,23887],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23970,23976],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[24043,24044],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24094,24100],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24160,24161],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24375,24397],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[24545,24551],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[24618,24619],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24669,24675],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[24736,24737]},{"pos":[24792,24798],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24858,24859],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24956,24962],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[25029,25030],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25080,25086],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[25147,25148]},{"pos":[25203,25209],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[25269,25270],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25515,25546],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[25712,25727],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[25803,25804],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25854,25860],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[25921,25922]},{"pos":[25977,25983],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[26043,26044],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26150,26165],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[26241,26242],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26292,26298],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[26359,26360]},{"pos":[26415,26421],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[26481,26482],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26712,26725],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[26826,26837],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[26909,26910],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26937,26938],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27011,27022],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[27094,27095],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27122,27123],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27298,27307],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[27400,27407],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[27475,27476],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27503,27504],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27573,27580],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[27648,27649],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27676,27677],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27852,27869],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[27978,27993],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[28069,28070],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28097,28098],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28175,28190],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[28266,28267],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28294,28295],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28440,28446],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[28579,28587],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[28826,28838],"content":"EncryptedKey","needQuote":true,"nodes":[{"content":"EncryptedKey","pos":[0,12]}]},{"pos":[29060,29066],"content":"Byte[]","needQuote":true,"nodes":[{"content":"Byte[]","pos":[0,6]}]},{"pos":[29186,29190],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[29249,29251]},{"pos":[29314,29318],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[29376,29378],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[29609,29631],"content":"KeyEncryptionAlgorithm","needQuote":true,"nodes":[{"content":"KeyEncryptionAlgorithm","pos":[0,22]}]},{"pos":[29987,30006],"content":"AlgorithmIdentifier","needQuote":true,"nodes":[{"content":"AlgorithmIdentifier","pos":[0,19]}]},{"pos":[30314,30336],"content":"SubjectIdentifierOrKey","needQuote":true,"nodes":[{"content":"SubjectIdentifierOrKey","pos":[0,22]}]},{"pos":[30649,30677],"content":"CryptographicAttributeObject","needQuote":true,"nodes":[{"content":"CryptographicAttributeObject","pos":[0,28]}]},{"pos":[30930,30958],"content":"System.Security.Cryptography","needQuote":true,"nodes":[{"content":"System.Security.Cryptography","pos":[0,28]}]},{"pos":[31250,31269],"content":"RecipientIdentifier","needQuote":true,"nodes":[{"content":"RecipientIdentifier","pos":[0,19]}]},{"pos":[31614,31631],"content":"SubjectIdentifier","needQuote":true,"nodes":[{"content":"SubjectIdentifier","pos":[0,17]}]},{"pos":[31946,31953],"content":"Version","needQuote":true,"nodes":[{"content":"Version","pos":[0,7]}]},{"pos":[32196,32201],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[32362,32387],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]}],"content":"items:\n- uid: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo\n  commentId: T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo\n  id: KeyAgreeRecipientInfo\n  parent: System.Security.Cryptography.Pkcs\n  children:\n  - System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Date\n  - System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.EncryptedKey\n  - System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.KeyEncryptionAlgorithm\n  - System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OriginatorIdentifierOrKey\n  - System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OtherKeyAttribute\n  - System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.RecipientIdentifier\n  - System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Version\n  langs:\n  - csharp\n  - vb\n  name: KeyAgreeRecipientInfo\n  fullName: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo\n  type: Class\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: KeyAgreeRecipientInfo\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 110\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class defines key agreement recipient information. Key agreement algorithms typically use the Diffie-Hellman key agreement algorithm, in which the two parties that establish a shared cryptographic key both take part in its generation and, by definition, agree on that key. This is in contrast to key transport algorithms, in which one party generates the key unilaterally and sends, or transports it, to the other party.</p>\\n\"\n  syntax:\n    content: 'public sealed class KeyAgreeRecipientInfo : RecipientInfo'\n    content.vb: >-\n      Public NotInheritable Class KeyAgreeRecipientInfo\n          Inherits RecipientInfo\n  seealso:\n  - type: System.Security.Cryptography.Pkcs.KeyTransRecipientInfo\n    commentId: T:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.Pkcs.RecipientInfo\n  inheritedMembers:\n  - System.Security.Cryptography.Pkcs.RecipientInfo.Type\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: KeyAgreeRecipientInfo\n- uid: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Date\n  commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Date\n  id: Date\n  parent: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo\n  langs:\n  - csharp\n  - vb\n  name: Date\n  fullName: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Date\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Date\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 113\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Date\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property retrieves the date and time of the start of the key agreement protocol by the originator.</p>\\n\"\n  syntax:\n    content: public DateTime Date { get; }\n    content.vb: Public ReadOnly Property Date As Date\n    parameters: []\n    return:\n      type: System.DateTime\n      description: \"\\n<p>The date and time of the start of the key agreement protocol by the originator.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The recipient identifier type is not a subject key identifier.</p>\\n\"\n  seealso:\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.EncryptedKey\n    commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.EncryptedKey\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.KeyEncryptionAlgorithm\n    commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.KeyEncryptionAlgorithm\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OriginatorIdentifierOrKey\n    commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OriginatorIdentifierOrKey\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OtherKeyAttribute\n    commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OtherKeyAttribute\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.RecipientIdentifier\n    commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.RecipientIdentifier\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Version\n    commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Version\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: KeyAgreeRecipientInfo.Date\n- uid: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.EncryptedKey\n  commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.EncryptedKey\n  id: EncryptedKey\n  parent: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo\n  langs:\n  - csharp\n  - vb\n  name: EncryptedKey\n  fullName: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.EncryptedKey\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: EncryptedKey\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 114\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.EncryptedKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property retrieves the encrypted recipient keying material.</p>\\n\"\n  syntax:\n    content: public override byte[] EncryptedKey { get; }\n    content.vb: Public Overrides ReadOnly Property EncryptedKey As Byte()\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: \"\\n<p>An array of byte values that contain the encrypted recipient keying material.</p>\\n\"\n  overridden: System.Security.Cryptography.Pkcs.RecipientInfo.EncryptedKey\n  seealso:\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Date\n    commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Date\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.KeyEncryptionAlgorithm\n    commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.KeyEncryptionAlgorithm\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OriginatorIdentifierOrKey\n    commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OriginatorIdentifierOrKey\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OtherKeyAttribute\n    commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OtherKeyAttribute\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.RecipientIdentifier\n    commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.RecipientIdentifier\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Version\n    commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Version\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: KeyAgreeRecipientInfo.EncryptedKey\n- uid: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.KeyEncryptionAlgorithm\n  commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.KeyEncryptionAlgorithm\n  id: KeyEncryptionAlgorithm\n  parent: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo\n  langs:\n  - csharp\n  - vb\n  name: KeyEncryptionAlgorithm\n  fullName: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.KeyEncryptionAlgorithm\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: KeyEncryptionAlgorithm\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 115\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.KeyEncryptionAlgorithm\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property retrieves the algorithm used to perform the key agreement.</p>\\n\"\n  syntax:\n    content: public override AlgorithmIdentifier KeyEncryptionAlgorithm { get; }\n    content.vb: Public Overrides ReadOnly Property KeyEncryptionAlgorithm As AlgorithmIdentifier\n    parameters: []\n    return:\n      type: System.Security.Cryptography.Pkcs.AlgorithmIdentifier\n      description: \"\\n<p>The value of the algorithm used to perform the key agreement.</p>\\n\"\n  overridden: System.Security.Cryptography.Pkcs.RecipientInfo.KeyEncryptionAlgorithm\n  seealso:\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Date\n    commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Date\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.EncryptedKey\n    commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.EncryptedKey\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OriginatorIdentifierOrKey\n    commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OriginatorIdentifierOrKey\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OtherKeyAttribute\n    commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OtherKeyAttribute\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.RecipientIdentifier\n    commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.RecipientIdentifier\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Version\n    commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Version\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: KeyAgreeRecipientInfo.KeyEncryptionAlgorithm\n- uid: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OriginatorIdentifierOrKey\n  commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OriginatorIdentifierOrKey\n  id: OriginatorIdentifierOrKey\n  parent: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo\n  langs:\n  - csharp\n  - vb\n  name: OriginatorIdentifierOrKey\n  fullName: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OriginatorIdentifierOrKey\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: OriginatorIdentifierOrKey\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 116\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OriginatorIdentifierOrKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property retrieves information about the originator of the key agreement for key agreement algorithms that warrant it.</p>\\n\"\n  syntax:\n    content: public SubjectIdentifierOrKey OriginatorIdentifierOrKey { get; }\n    content.vb: Public ReadOnly Property OriginatorIdentifierOrKey As SubjectIdentifierOrKey\n    parameters: []\n    return:\n      type: System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey\n      description: \"\\n<p>An object that contains information about the originator of the key agreement.</p>\\n\"\n  seealso:\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Date\n    commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Date\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.EncryptedKey\n    commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.EncryptedKey\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.KeyEncryptionAlgorithm\n    commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.KeyEncryptionAlgorithm\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OtherKeyAttribute\n    commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OtherKeyAttribute\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.RecipientIdentifier\n    commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.RecipientIdentifier\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Version\n    commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Version\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: KeyAgreeRecipientInfo.OriginatorIdentifierOrKey\n- uid: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OtherKeyAttribute\n  commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OtherKeyAttribute\n  id: OtherKeyAttribute\n  parent: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo\n  langs:\n  - csharp\n  - vb\n  name: OtherKeyAttribute\n  fullName: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OtherKeyAttribute\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: OtherKeyAttribute\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 117\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OtherKeyAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property retrieves attributes of the keying material.</p>\\n\"\n  syntax:\n    content: public CryptographicAttributeObject OtherKeyAttribute { get; }\n    content.vb: Public ReadOnly Property OtherKeyAttribute As CryptographicAttributeObject\n    parameters: []\n    return:\n      type: System.Security.Cryptography.CryptographicAttributeObject\n      description: \"\\n<p>The attributes of the keying material.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The recipient identifier type is not a subject key identifier.</p>\\n\"\n  seealso:\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Date\n    commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Date\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.EncryptedKey\n    commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.EncryptedKey\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.KeyEncryptionAlgorithm\n    commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.KeyEncryptionAlgorithm\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OriginatorIdentifierOrKey\n    commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OriginatorIdentifierOrKey\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.RecipientIdentifier\n    commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.RecipientIdentifier\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Version\n    commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Version\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: KeyAgreeRecipientInfo.OtherKeyAttribute\n- uid: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.RecipientIdentifier\n  commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.RecipientIdentifier\n  id: RecipientIdentifier\n  parent: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo\n  langs:\n  - csharp\n  - vb\n  name: RecipientIdentifier\n  fullName: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.RecipientIdentifier\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RecipientIdentifier\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 118\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.RecipientIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property retrieves the identifier of the recipient.</p>\\n\"\n  syntax:\n    content: public override SubjectIdentifier RecipientIdentifier { get; }\n    content.vb: Public Overrides ReadOnly Property RecipientIdentifier As SubjectIdentifier\n    parameters: []\n    return:\n      type: System.Security.Cryptography.Pkcs.SubjectIdentifier\n      description: \"\\n<p>The identifier of the recipient.</p>\\n\"\n  overridden: System.Security.Cryptography.Pkcs.RecipientInfo.RecipientIdentifier\n  seealso:\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Date\n    commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Date\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.EncryptedKey\n    commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.EncryptedKey\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.KeyEncryptionAlgorithm\n    commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.KeyEncryptionAlgorithm\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OriginatorIdentifierOrKey\n    commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OriginatorIdentifierOrKey\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OtherKeyAttribute\n    commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OtherKeyAttribute\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Version\n    commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Version\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: KeyAgreeRecipientInfo.RecipientIdentifier\n- uid: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Version\n  commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Version\n  id: Version\n  parent: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo\n  langs:\n  - csharp\n  - vb\n  name: Version\n  fullName: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Version\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Version\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 119\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Version\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property retrieves the version of the key agreement recipient. This is automatically set for  objects in this class, and the value  implies that the recipient is taking part in a key agreement algorithm.</p>\\n\"\n  syntax:\n    content: public override int Version { get; }\n    content.vb: Public Overrides ReadOnly Property Version As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The version of the <xref href=\\\"System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  overridden: System.Security.Cryptography.Pkcs.RecipientInfo.Version\n  seealso:\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Date\n    commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Date\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.EncryptedKey\n    commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.EncryptedKey\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.KeyEncryptionAlgorithm\n    commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.KeyEncryptionAlgorithm\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OriginatorIdentifierOrKey\n    commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OriginatorIdentifierOrKey\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OtherKeyAttribute\n    commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OtherKeyAttribute\n  - type: System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.RecipientIdentifier\n    commentId: P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.RecipientIdentifier\n  - type: System.Security.Cryptography.Pkcs.SubjectIdentifier\n    commentId: T:System.Security.Cryptography.Pkcs.SubjectIdentifier\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: KeyAgreeRecipientInfo.Version\nreferences:\n- uid: System.Security.Cryptography.Pkcs\n  isExternal: false\n  name: System.Security.Cryptography.Pkcs\n  fullName: System.Security.Cryptography.Pkcs\n  commentId: N:System.Security.Cryptography.Pkcs\n  nameWithType: System.Security.Cryptography.Pkcs\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Security.Cryptography.Pkcs.RecipientInfo\n  parent: System.Security.Cryptography.Pkcs\n  isExternal: false\n  name: RecipientInfo\n  fullName: System.Security.Cryptography.Pkcs.RecipientInfo\n  commentId: T:System.Security.Cryptography.Pkcs.RecipientInfo\n  nameWithType: RecipientInfo\n- uid: System.Security.Cryptography.Pkcs.RecipientInfo.Type\n  parent: System.Security.Cryptography.Pkcs.RecipientInfo\n  isExternal: false\n  name: Type\n  fullName: System.Security.Cryptography.Pkcs.RecipientInfo.Type\n  commentId: P:System.Security.Cryptography.Pkcs.RecipientInfo.Type\n  nameWithType: RecipientInfo.Type\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  fullName: System.DateTime\n  commentId: T:System.DateTime\n  nameWithType: DateTime\n- uid: System.Security.Cryptography.Pkcs.RecipientInfo.EncryptedKey\n  parent: System.Security.Cryptography.Pkcs.RecipientInfo\n  isExternal: false\n  name: EncryptedKey\n  fullName: System.Security.Cryptography.Pkcs.RecipientInfo.EncryptedKey\n  commentId: P:System.Security.Cryptography.Pkcs.RecipientInfo.EncryptedKey\n  nameWithType: RecipientInfo.EncryptedKey\n- uid: System.Byte[]\n  name: Byte[]\n  fullName: System.Byte[]\n  fullname.vb: System.Byte()\n  name.vb: Byte()\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Byte[]\n  nameWithType.vb: Byte()\n- uid: System.Security.Cryptography.Pkcs.RecipientInfo.KeyEncryptionAlgorithm\n  parent: System.Security.Cryptography.Pkcs.RecipientInfo\n  isExternal: false\n  name: KeyEncryptionAlgorithm\n  fullName: System.Security.Cryptography.Pkcs.RecipientInfo.KeyEncryptionAlgorithm\n  commentId: P:System.Security.Cryptography.Pkcs.RecipientInfo.KeyEncryptionAlgorithm\n  nameWithType: RecipientInfo.KeyEncryptionAlgorithm\n- uid: System.Security.Cryptography.Pkcs.AlgorithmIdentifier\n  parent: System.Security.Cryptography.Pkcs\n  isExternal: false\n  name: AlgorithmIdentifier\n  fullName: System.Security.Cryptography.Pkcs.AlgorithmIdentifier\n  commentId: T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier\n  nameWithType: AlgorithmIdentifier\n- uid: System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey\n  parent: System.Security.Cryptography.Pkcs\n  isExternal: false\n  name: SubjectIdentifierOrKey\n  fullName: System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey\n  commentId: T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey\n  nameWithType: SubjectIdentifierOrKey\n- uid: System.Security.Cryptography.CryptographicAttributeObject\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicAttributeObject\n  fullName: System.Security.Cryptography.CryptographicAttributeObject\n  commentId: T:System.Security.Cryptography.CryptographicAttributeObject\n  nameWithType: CryptographicAttributeObject\n- uid: System.Security.Cryptography\n  isExternal: false\n  name: System.Security.Cryptography\n  fullName: System.Security.Cryptography\n  commentId: N:System.Security.Cryptography\n  nameWithType: System.Security.Cryptography\n- uid: System.Security.Cryptography.Pkcs.RecipientInfo.RecipientIdentifier\n  parent: System.Security.Cryptography.Pkcs.RecipientInfo\n  isExternal: false\n  name: RecipientIdentifier\n  fullName: System.Security.Cryptography.Pkcs.RecipientInfo.RecipientIdentifier\n  commentId: P:System.Security.Cryptography.Pkcs.RecipientInfo.RecipientIdentifier\n  nameWithType: RecipientInfo.RecipientIdentifier\n- uid: System.Security.Cryptography.Pkcs.SubjectIdentifier\n  parent: System.Security.Cryptography.Pkcs\n  isExternal: false\n  name: SubjectIdentifier\n  fullName: System.Security.Cryptography.Pkcs.SubjectIdentifier\n  commentId: T:System.Security.Cryptography.Pkcs.SubjectIdentifier\n  nameWithType: SubjectIdentifier\n- uid: System.Security.Cryptography.Pkcs.RecipientInfo.Version\n  parent: System.Security.Cryptography.Pkcs.RecipientInfo\n  isExternal: false\n  name: Version\n  fullName: System.Security.Cryptography.Pkcs.RecipientInfo.Version\n  commentId: P:System.Security.Cryptography.Pkcs.RecipientInfo.Version\n  nameWithType: RecipientInfo.Version\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n"}