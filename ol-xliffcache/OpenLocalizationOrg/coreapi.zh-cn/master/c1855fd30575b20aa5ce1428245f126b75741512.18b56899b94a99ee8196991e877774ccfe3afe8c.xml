{"nodes":[{"pos":[805,826],"content":"BinaryOperationBinder","needQuote":true,"nodes":[{"content":"BinaryOperationBinder","pos":[0,21]}]},{"pos":[3252,3289],"content":"BinaryOperationBinder(ExpressionType)","needQuote":true,"nodes":[{"content":"BinaryOperationBinder(ExpressionType)","pos":[0,37]}]},{"content":"\\n&lt;p&gt;The binary operation kind.&lt;/p&gt;\\n","pos":[4163,4200],"source":"\\n<p>The binary operation kind.</p>\\n"},{"pos":[4556,4565],"content":"Operation","needQuote":true,"nodes":[{"content":"Operation","pos":[0,9]}]},{"pos":[5774,5784],"content":"ReturnType","needQuote":true,"nodes":[{"content":"ReturnType","pos":[0,10]}]},{"content":"\\n&lt;p&gt;The result type of the operation.&lt;/p&gt;\\n","pos":[6513,6557],"source":"\\n<p>The result type of the operation.</p>\\n"},{"pos":[7214,7258],"content":"Bind(DynamicMetaObject, DynamicMetaObject[])","needQuote":true,"nodes":[{"content":"Bind(DynamicMetaObject, DynamicMetaObject[])","pos":[0,44]}]},{"content":"\\n&lt;p&gt;The target of the dynamic operation.&lt;/p&gt;\\n","pos":[8192,8239],"source":"\\n<p>The target of the dynamic operation.</p>\\n"},{"content":"\\n&lt;p&gt;An array of arguments of the dynamic operation.&lt;/p&gt;\\n","pos":[8323,8381],"source":"\\n<p>An array of arguments of the dynamic operation.</p>\\n"},{"pos":[9660,9721],"content":"FallbackBinaryOperation(DynamicMetaObject, DynamicMetaObject)","needQuote":true,"nodes":[{"content":"FallbackBinaryOperation(DynamicMetaObject, DynamicMetaObject)","pos":[0,61]}]},{"content":"\\n&lt;p&gt;The target of the dynamic binary operation.&lt;/p&gt;\\n","pos":[10723,10777],"source":"\\n<p>The target of the dynamic binary operation.</p>\\n"},{"content":"\\n&lt;p&gt;The right hand side operand of the dynamic binary operation.&lt;/p&gt;\\n","pos":[10858,10929],"source":"\\n<p>The right hand side operand of the dynamic binary operation.</p>\\n"},{"pos":[11871,11951],"content":"FallbackBinaryOperation(DynamicMetaObject, DynamicMetaObject, DynamicMetaObject)","needQuote":true,"nodes":[{"content":"FallbackBinaryOperation(DynamicMetaObject, DynamicMetaObject, DynamicMetaObject)","pos":[0,80]}]},{"content":"\\n&lt;p&gt;The target of the dynamic binary operation.&lt;/p&gt;\\n","pos":[13120,13174],"source":"\\n<p>The target of the dynamic binary operation.</p>\\n"},{"content":"\\n&lt;p&gt;The right hand side operand of the dynamic binary operation.&lt;/p&gt;\\n","pos":[13255,13326],"source":"\\n<p>The right hand side operand of the dynamic binary operation.</p>\\n"},{"content":"\\n&lt;p&gt;The binding result if the binding fails, or null.&lt;/p&gt;\\n","pos":[13419,13479],"source":"\\n<p>The binding result if the binding fails, or null.</p>\\n"},{"pos":[13976,13990],"content":"System.Dynamic","needQuote":true,"nodes":[{"content":"System.Dynamic","pos":[0,14]}]},{"pos":[14145,14151],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14354,14368],"content":"CallSiteBinder","needQuote":true,"nodes":[{"content":"CallSiteBinder","pos":[0,14]}]},{"pos":[14620,14643],"content":"DynamicMetaObjectBinder","needQuote":true,"nodes":[{"content":"DynamicMetaObjectBinder","pos":[0,23]}]},{"pos":[15064,15132],"content":"Bind(Object[], ReadOnlyCollection<ParameterExpression>, LabelTarget)","needQuote":true,"nodes":[{"content":"Bind(Object[], ReadOnlyCollection&lt;ParameterExpression&gt;, LabelTarget)","pos":[0,68],"source":"Bind(Object[], ReadOnlyCollection<ParameterExpression>, LabelTarget)"}]},{"pos":[15860,15864],"content":"Bind","needQuote":true,"nodes":[{"content":"Bind","pos":[0,4]}]},{"pos":[15933,15934],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15984,15990],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[16051,16053]},{"content":",","pos":[16085,16086]},{"pos":[16179,16197],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"pos":[16293,16294],"content":"<","needQuote":true,"nodes":[]},{"pos":[16374,16393],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[16516,16517]},{"pos":[16594,16605],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[16687,16688],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16927,16931],"content":"Bind","needQuote":true,"nodes":[{"content":"Bind","pos":[0,4]}]},{"pos":[17000,17001],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17051,17057],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17117,17119],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[17148,17149]},{"pos":[17242,17260],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"content":"(Of","pos":[17357,17360]},{"pos":[17447,17466],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[17556,17557],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[17585,17586]},{"pos":[17663,17674],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[17756,17757],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18403,18448],"content":"Defer(DynamicMetaObject, DynamicMetaObject[])","needQuote":true,"nodes":[{"content":"Defer(DynamicMetaObject, DynamicMetaObject[])","pos":[0,45]}]},{"pos":[18911,18916],"content":"Defer","needQuote":true,"nodes":[{"content":"Defer","pos":[0,5]}]},{"pos":[18986,18987],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19056,19073],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"content":",","pos":[19132,19133]},{"pos":[19207,19224],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"content":"[]","pos":[19283,19285]},{"pos":[19316,19317],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19478,19483],"content":"Defer","needQuote":true,"nodes":[{"content":"Defer","pos":[0,5]}]},{"pos":[19553,19554],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19623,19640],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"content":",","pos":[19699,19700]},{"pos":[19774,19791],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"pos":[19849,19851],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[19879,19880],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20366,20392],"content":"Defer(DynamicMetaObject[])","needQuote":true,"nodes":[{"content":"Defer(DynamicMetaObject[])","pos":[0,26]}]},{"pos":[20735,20740],"content":"Defer","needQuote":true,"nodes":[{"content":"Defer","pos":[0,5]}]},{"pos":[20810,20811],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20880,20897],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"content":"[]","pos":[20956,20958]},{"pos":[20989,20990],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21118,21123],"content":"Defer","needQuote":true,"nodes":[{"content":"Defer","pos":[0,5]}]},{"pos":[21193,21194],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21263,21280],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"pos":[21338,21340],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[21368,21369],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21774,21799],"content":"GetUpdateExpression(Type)","needQuote":true,"nodes":[{"content":"GetUpdateExpression(Type)","pos":[0,25]}]},{"pos":[21990,22009],"content":"GetUpdateExpression","needQuote":true,"nodes":[{"content":"GetUpdateExpression","pos":[0,19]}]},{"pos":[22093,22094],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22142,22146],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[22204,22205],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22324,22343],"content":"GetUpdateExpression","needQuote":true,"nodes":[{"content":"GetUpdateExpression","pos":[0,19]}]},{"pos":[22427,22428],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22476,22480],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[22538,22539],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22860,22871],"content":"UpdateLabel","needQuote":true,"nodes":[{"content":"UpdateLabel","pos":[0,11]}]},{"pos":[23398,23436],"content":"BindDelegate<T>(CallSite<T>, Object[])","needQuote":true,"nodes":[{"content":"BindDelegate&lt;T&gt;(CallSite&lt;T&gt;, Object[])","pos":[0,38],"source":"BindDelegate<T>(CallSite<T>, Object[])"}]},{"pos":[23936,23951],"content":"BindDelegate<T>","needQuote":true,"nodes":[{"content":"BindDelegate&lt;T&gt;","pos":[0,15],"source":"BindDelegate<T>"}]},{"pos":[24039,24040],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24119,24127],"content":"CallSite","needQuote":true,"nodes":[{"content":"CallSite","pos":[0,8]}]},{"pos":[24193,24194],"content":"<","needQuote":true,"nodes":[]},{"pos":[24221,24222],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[24282,24283]},{"pos":[24338,24344],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[24405,24407]},{"pos":[24438,24439],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24612,24630],"content":"BindDelegate(Of T)","needQuote":true,"nodes":[{"content":"BindDelegate(Of T)","pos":[0,18]}]},{"pos":[24721,24722],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24801,24809],"content":"CallSite","needQuote":true,"nodes":[{"content":"CallSite","pos":[0,8]}]},{"content":"(Of","pos":[24876,24879]},{"pos":[24913,24914],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[24941,24942],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[24970,24971]},{"pos":[25026,25032],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[25092,25094],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[25122,25123],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25650,25667],"content":"CacheTarget<T>(T)","needQuote":true,"nodes":[{"content":"CacheTarget&lt;T&gt;(T)","pos":[0,17],"source":"CacheTarget<T>(T)"}]},{"pos":[25961,25975],"content":"CacheTarget<T>","needQuote":true,"nodes":[{"content":"CacheTarget&lt;T&gt;","pos":[0,14],"source":"CacheTarget<T>"}]},{"pos":[26062,26063],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26090,26091],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[26118,26119],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26233,26250],"content":"CacheTarget(Of T)","needQuote":true,"nodes":[{"content":"CacheTarget(Of T)","pos":[0,17]}]},{"pos":[26340,26341],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26368,26369],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[26396,26397],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26681,26691],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[26786,26794],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[26863,26864],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26891,26892],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26962,26970],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[27039,27040],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27067,27068],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27251,27265],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[27384,27390],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[27457,27458],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27508,27514],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[27574,27575],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27658,27664],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[27731,27732],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27782,27788],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[27848,27849],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28063,28085],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[28233,28239],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[28306,28307],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28357,28363],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[28424,28425]},{"pos":[28480,28486],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[28546,28547],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28644,28650],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[28717,28718],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28768,28774],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[28835,28836]},{"pos":[28891,28897],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[28957,28958],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29203,29234],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[29400,29415],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[29491,29492],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29542,29548],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[29609,29610]},{"pos":[29665,29671],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[29731,29732],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29838,29853],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[29929,29930],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29980,29986],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[30047,30048]},{"pos":[30103,30109],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[30169,30170],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30400,30413],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[30514,30525],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[30597,30598],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30625,30626],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30699,30710],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[30782,30783],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30810,30811],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30986,30995],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[31088,31095],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[31163,31164],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31191,31192],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31261,31268],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[31336,31337],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31364,31365],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31540,31557],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[31666,31681],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[31757,31758],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31785,31786],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31863,31878],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[31954,31955],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31982,31983],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32128,32134],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[32266,32297],"content":"System.Runtime.CompilerServices","needQuote":true,"nodes":[{"content":"System.Runtime.CompilerServices","pos":[0,31]}]},{"pos":[32597,32635],"content":"BindDelegate<T>(CallSite<T>, Object[])","needQuote":true,"nodes":[{"content":"BindDelegate&lt;T&gt;(CallSite&lt;T&gt;, Object[])","pos":[0,38],"source":"BindDelegate<T>(CallSite<T>, Object[])"}]},{"pos":[33135,33150],"content":"BindDelegate<T>","needQuote":true,"nodes":[{"content":"BindDelegate&lt;T&gt;","pos":[0,15],"source":"BindDelegate<T>"}]},{"pos":[33238,33239],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33318,33326],"content":"CallSite","needQuote":true,"nodes":[{"content":"CallSite","pos":[0,8]}]},{"pos":[33392,33393],"content":"<","needQuote":true,"nodes":[]},{"pos":[33420,33421],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[33481,33482]},{"pos":[33537,33543],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[33604,33606]},{"pos":[33637,33638],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33811,33829],"content":"BindDelegate(Of T)","needQuote":true,"nodes":[{"content":"BindDelegate(Of T)","pos":[0,18]}]},{"pos":[33920,33921],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34000,34008],"content":"CallSite","needQuote":true,"nodes":[{"content":"CallSite","pos":[0,8]}]},{"content":"(Of","pos":[34075,34078]},{"pos":[34112,34113],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[34140,34141],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[34169,34170]},{"pos":[34225,34231],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[34291,34293],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[34321,34322],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34731,34748],"content":"CacheTarget<T>(T)","needQuote":true,"nodes":[{"content":"CacheTarget&lt;T&gt;(T)","pos":[0,17],"source":"CacheTarget<T>(T)"}]},{"pos":[35042,35056],"content":"CacheTarget<T>","needQuote":true,"nodes":[{"content":"CacheTarget&lt;T&gt;","pos":[0,14],"source":"CacheTarget<T>"}]},{"pos":[35143,35144],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35171,35172],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[35199,35200],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35314,35331],"content":"CacheTarget(Of T)","needQuote":true,"nodes":[{"content":"CacheTarget(Of T)","pos":[0,17]}]},{"pos":[35421,35422],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35449,35450],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[35477,35478],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35789,35803],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"pos":[35999,36022],"content":"System.Linq.Expressions","needQuote":true,"nodes":[{"content":"System.Linq.Expressions","pos":[0,23]}]},{"pos":[36272,36282],"content":"ReturnType","needQuote":true,"nodes":[{"content":"ReturnType","pos":[0,10]}]},{"pos":[36525,36529],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[36799,36843],"content":"Bind(DynamicMetaObject, DynamicMetaObject[])","needQuote":true,"nodes":[{"content":"Bind(DynamicMetaObject, DynamicMetaObject[])","pos":[0,44]}]},{"pos":[37302,37306],"content":"Bind","needQuote":true,"nodes":[{"content":"Bind","pos":[0,4]}]},{"pos":[37375,37376],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37445,37462],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"content":",","pos":[37521,37522]},{"pos":[37596,37613],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"content":"[]","pos":[37672,37674]},{"pos":[37705,37706],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37866,37870],"content":"Bind","needQuote":true,"nodes":[{"content":"Bind","pos":[0,4]}]},{"pos":[37939,37940],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38009,38026],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"content":",","pos":[38085,38086]},{"pos":[38160,38177],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"pos":[38235,38237],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[38265,38266],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38677,38694],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"pos":[38872,38891],"content":"DynamicMetaObject[]","needQuote":true,"nodes":[{"content":"DynamicMetaObject[]","pos":[0,19]}]},{"pos":[39087,39104],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"content":"[]","pos":[39163,39165]},{"pos":[39249,39266],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"pos":[39324,39326],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]}],"content":"items:\n- uid: System.Dynamic.BinaryOperationBinder\n  commentId: T:System.Dynamic.BinaryOperationBinder\n  id: BinaryOperationBinder\n  parent: System.Dynamic\n  children:\n  - System.Dynamic.BinaryOperationBinder.#ctor(System.Linq.Expressions.ExpressionType)\n  - System.Dynamic.BinaryOperationBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  - System.Dynamic.BinaryOperationBinder.FallbackBinaryOperation(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject)\n  - System.Dynamic.BinaryOperationBinder.FallbackBinaryOperation(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject)\n  - System.Dynamic.BinaryOperationBinder.Operation\n  - System.Dynamic.BinaryOperationBinder.ReturnType\n  langs:\n  - csharp\n  - vb\n  name: BinaryOperationBinder\n  fullName: System.Dynamic.BinaryOperationBinder\n  type: Class\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/src/System/Dynamic/BinaryOperationBinder.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: BinaryOperationBinder\n    path: src/System.Dynamic.Runtime/src/System/Dynamic/BinaryOperationBinder.cs\n    startLine: 12\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Dynamic\n  summary: \"\\n<p>Represents the binary dynamic operation at the call site, providing the binding semantic and the details about the operation.</p>\\n\"\n  syntax:\n    content: 'public abstract class BinaryOperationBinder : DynamicMetaObjectBinder'\n    content.vb: >-\n      Public MustInherit Class BinaryOperationBinder\n          Inherits DynamicMetaObjectBinder\n  inheritance:\n  - System.Object\n  - System.Runtime.CompilerServices.CallSiteBinder\n  - System.Dynamic.DynamicMetaObjectBinder\n  inheritedMembers:\n  - System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)\n  - System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  - System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject[])\n  - System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression(System.Type)\n  - System.Runtime.CompilerServices.CallSiteBinder.UpdateLabel\n  - System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{{T}},System.Object[])\n  - System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1({T})\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: BinaryOperationBinder\n- uid: System.Dynamic.BinaryOperationBinder.#ctor(System.Linq.Expressions.ExpressionType)\n  commentId: M:System.Dynamic.BinaryOperationBinder.#ctor(System.Linq.Expressions.ExpressionType)\n  id: '#ctor(System.Linq.Expressions.ExpressionType)'\n  parent: System.Dynamic.BinaryOperationBinder\n  langs:\n  - csharp\n  - vb\n  name: BinaryOperationBinder(ExpressionType)\n  fullName: System.Dynamic.BinaryOperationBinder.BinaryOperationBinder(System.Linq.Expressions.ExpressionType)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs\n    startLine: 12\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Dynamic\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Dynamic.BinaryOperationBinder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: protected BinaryOperationBinder(ExpressionType operation)\n    content.vb: Protected Sub New(operation As ExpressionType)\n    parameters:\n    - id: operation\n      type: System.Linq.Expressions.ExpressionType\n      description: \"\\n<p>The binary operation kind.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: BinaryOperationBinder.BinaryOperationBinder(ExpressionType)\n- uid: System.Dynamic.BinaryOperationBinder.Operation\n  commentId: P:System.Dynamic.BinaryOperationBinder.Operation\n  id: Operation\n  parent: System.Dynamic.BinaryOperationBinder\n  langs:\n  - csharp\n  - vb\n  name: Operation\n  fullName: System.Dynamic.BinaryOperationBinder.Operation\n  type: Property\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/src/System/Dynamic/BinaryOperationBinder.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Operation\n    path: src/System.Dynamic.Runtime/src/System/Dynamic/BinaryOperationBinder.cs\n    startLine: 37\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Dynamic\n  summary: \"\\n<p>The binary operation kind.</p>\\n\"\n  syntax:\n    content: public ExpressionType Operation { get; }\n    content.vb: Public ReadOnly Property Operation As ExpressionType\n    parameters: []\n    return:\n      type: ExpressionType\n      description: \"\\n<p>The <xref href=\\\"System.Linq.Expressions.ExpressionType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object representing the kind of binary operation.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: BinaryOperationBinder.Operation\n- uid: System.Dynamic.BinaryOperationBinder.ReturnType\n  commentId: P:System.Dynamic.BinaryOperationBinder.ReturnType\n  id: ReturnType\n  parent: System.Dynamic.BinaryOperationBinder\n  langs:\n  - csharp\n  - vb\n  name: ReturnType\n  fullName: System.Dynamic.BinaryOperationBinder.ReturnType\n  type: Property\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/src/System/Dynamic/BinaryOperationBinder.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReturnType\n    path: src/System.Dynamic.Runtime/src/System/Dynamic/BinaryOperationBinder.cs\n    startLine: 29\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Dynamic\n  summary: \"\\n<p>The result type of the operation.</p>\\n\"\n  syntax:\n    content: public override sealed Type ReturnType { get; }\n    content.vb: Public NotOverridable Overrides ReadOnly Property ReturnType As Type\n    parameters: []\n    return:\n      type: System.Type\n      description: \"\\n<p>The result type of the operation.</p>\\n\"\n  overridden: System.Dynamic.DynamicMetaObjectBinder.ReturnType\n  modifiers.csharp:\n  - public\n  - override\n  - sealed\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - NotOverridable\n  - ReadOnly\n  nameWithType: BinaryOperationBinder.ReturnType\n- uid: System.Dynamic.BinaryOperationBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  commentId: M:System.Dynamic.BinaryOperationBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  id: Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  parent: System.Dynamic.BinaryOperationBinder\n  langs:\n  - csharp\n  - vb\n  name: Bind(DynamicMetaObject, DynamicMetaObject[])\n  fullName: System.Dynamic.BinaryOperationBinder.Bind(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject[])\n  type: Method\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/src/System/Dynamic/BinaryOperationBinder.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Bind\n    path: src/System.Dynamic.Runtime/src/System/Dynamic/BinaryOperationBinder.cs\n    startLine: 71\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Dynamic\n  summary: \"\\n<p>Performs the binding of the dynamic binary operation.</p>\\n\"\n  syntax:\n    content: public override sealed DynamicMetaObject Bind(DynamicMetaObject target, DynamicMetaObject[] args)\n    content.vb: Public NotOverridable Overrides Function Bind(target As DynamicMetaObject, args As DynamicMetaObject()) As DynamicMetaObject\n    parameters:\n    - id: target\n      type: System.Dynamic.DynamicMetaObject\n      description: \"\\n<p>The target of the dynamic operation.</p>\\n\"\n    - id: args\n      type: System.Dynamic.DynamicMetaObject[]\n      description: \"\\n<p>An array of arguments of the dynamic operation.</p>\\n\"\n    return:\n      type: System.Dynamic.DynamicMetaObject\n      description: \"\\n<p>The <xref href=\\\"System.Dynamic.DynamicMetaObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the result of the binding.</p>\\n\"\n  overridden: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  modifiers.csharp:\n  - public\n  - override\n  - sealed\n  modifiers.vb:\n  - Public\n  - Overrides\n  - NotOverridable\n  fullName.vb: System.Dynamic.BinaryOperationBinder.Bind(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject())\n  name.vb: Bind(DynamicMetaObject, DynamicMetaObject())\n  nameWithType: BinaryOperationBinder.Bind(DynamicMetaObject, DynamicMetaObject[])\n  nameWithType.vb: BinaryOperationBinder.Bind(DynamicMetaObject, DynamicMetaObject())\n- uid: System.Dynamic.BinaryOperationBinder.FallbackBinaryOperation(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject)\n  commentId: M:System.Dynamic.BinaryOperationBinder.FallbackBinaryOperation(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject)\n  id: FallbackBinaryOperation(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject)\n  parent: System.Dynamic.BinaryOperationBinder\n  langs:\n  - csharp\n  - vb\n  name: FallbackBinaryOperation(DynamicMetaObject, DynamicMetaObject)\n  fullName: System.Dynamic.BinaryOperationBinder.FallbackBinaryOperation(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject)\n  type: Method\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/src/System/Dynamic/BinaryOperationBinder.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: FallbackBinaryOperation\n    path: src/System.Dynamic.Runtime/src/System/Dynamic/BinaryOperationBinder.cs\n    startLine: 51\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Dynamic\n  summary: \"\\n<p>Performs the binding of the binary dynamic operation if the target dynamic object cannot bind.</p>\\n\"\n  syntax:\n    content: public DynamicMetaObject FallbackBinaryOperation(DynamicMetaObject target, DynamicMetaObject arg)\n    content.vb: Public Function FallbackBinaryOperation(target As DynamicMetaObject, arg As DynamicMetaObject) As DynamicMetaObject\n    parameters:\n    - id: target\n      type: System.Dynamic.DynamicMetaObject\n      description: \"\\n<p>The target of the dynamic binary operation.</p>\\n\"\n    - id: arg\n      type: System.Dynamic.DynamicMetaObject\n      description: \"\\n<p>The right hand side operand of the dynamic binary operation.</p>\\n\"\n    return:\n      type: System.Dynamic.DynamicMetaObject\n      description: \"\\n<p>The <xref href=\\\"System.Dynamic.DynamicMetaObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the result of the binding.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: BinaryOperationBinder.FallbackBinaryOperation(DynamicMetaObject, DynamicMetaObject)\n- uid: System.Dynamic.BinaryOperationBinder.FallbackBinaryOperation(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject)\n  commentId: M:System.Dynamic.BinaryOperationBinder.FallbackBinaryOperation(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject)\n  id: FallbackBinaryOperation(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject)\n  parent: System.Dynamic.BinaryOperationBinder\n  langs:\n  - csharp\n  - vb\n  name: FallbackBinaryOperation(DynamicMetaObject, DynamicMetaObject, DynamicMetaObject)\n  fullName: System.Dynamic.BinaryOperationBinder.FallbackBinaryOperation(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject)\n  type: Method\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/src/System/Dynamic/BinaryOperationBinder.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: FallbackBinaryOperation\n    path: src/System.Dynamic.Runtime/src/System/Dynamic/BinaryOperationBinder.cs\n    startLine: 63\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Dynamic\n  summary: \"\\n<p>When overridden in the derived class, performs the binding of the binary dynamic operation if the target dynamic object cannot bind.</p>\\n\"\n  syntax:\n    content: public abstract DynamicMetaObject FallbackBinaryOperation(DynamicMetaObject target, DynamicMetaObject arg, DynamicMetaObject errorSuggestion)\n    content.vb: Public MustOverride Function FallbackBinaryOperation(target As DynamicMetaObject, arg As DynamicMetaObject, errorSuggestion As DynamicMetaObject) As DynamicMetaObject\n    parameters:\n    - id: target\n      type: System.Dynamic.DynamicMetaObject\n      description: \"\\n<p>The target of the dynamic binary operation.</p>\\n\"\n    - id: arg\n      type: System.Dynamic.DynamicMetaObject\n      description: \"\\n<p>The right hand side operand of the dynamic binary operation.</p>\\n\"\n    - id: errorSuggestion\n      type: System.Dynamic.DynamicMetaObject\n      description: \"\\n<p>The binding result if the binding fails, or null.</p>\\n\"\n    return:\n      type: System.Dynamic.DynamicMetaObject\n      description: \"\\n<p>The <xref href=\\\"System.Dynamic.DynamicMetaObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the result of the binding.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: BinaryOperationBinder.FallbackBinaryOperation(DynamicMetaObject, DynamicMetaObject, DynamicMetaObject)\nreferences:\n- uid: System.Dynamic\n  isExternal: false\n  name: System.Dynamic\n  fullName: System.Dynamic\n  nameWithType: System.Dynamic\n  commentId: N:System.Dynamic\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Runtime.CompilerServices.CallSiteBinder\n  parent: System.Runtime.CompilerServices\n  isExternal: false\n  name: CallSiteBinder\n  fullName: System.Runtime.CompilerServices.CallSiteBinder\n  nameWithType: CallSiteBinder\n  commentId: T:System.Runtime.CompilerServices.CallSiteBinder\n- uid: System.Dynamic.DynamicMetaObjectBinder\n  parent: System.Dynamic\n  isExternal: false\n  name: DynamicMetaObjectBinder\n  fullName: System.Dynamic.DynamicMetaObjectBinder\n  nameWithType: DynamicMetaObjectBinder\n  commentId: T:System.Dynamic.DynamicMetaObjectBinder\n- uid: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)\n  parent: System.Dynamic.DynamicMetaObjectBinder\n  isExternal: true\n  name: Bind(Object[], ReadOnlyCollection<ParameterExpression>, LabelTarget)\n  fullName: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object[], System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.ParameterExpression>, System.Linq.Expressions.LabelTarget)\n  fullname.vb: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object(), System.Collections.ObjectModel.ReadOnlyCollection(Of System.Linq.Expressions.ParameterExpression), System.Linq.Expressions.LabelTarget)\n  name.vb: Bind(Object(), ReadOnlyCollection(Of ParameterExpression), LabelTarget)\n  spec.csharp:\n  - uid: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)\n    name: Bind\n    fullName: System.Dynamic.DynamicMetaObjectBinder.Bind\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)\n    name: Bind\n    fullName: System.Dynamic.DynamicMetaObjectBinder.Bind\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: DynamicMetaObjectBinder.Bind(Object[], ReadOnlyCollection<ParameterExpression>, LabelTarget)\n  nameWithType.vb: DynamicMetaObjectBinder.Bind(Object(), ReadOnlyCollection(Of ParameterExpression), LabelTarget)\n  commentId: M:System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)\n- uid: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  parent: System.Dynamic.DynamicMetaObjectBinder\n  isExternal: false\n  name: Defer(DynamicMetaObject, DynamicMetaObject[])\n  fullName: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject[])\n  fullname.vb: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject())\n  name.vb: Defer(DynamicMetaObject, DynamicMetaObject())\n  spec.csharp:\n  - uid: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n    name: Defer\n    fullName: System.Dynamic.DynamicMetaObjectBinder.Defer\n  - name: (\n    fullName: (\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: ', '\n    fullName: ', '\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n    name: Defer\n    fullName: System.Dynamic.DynamicMetaObjectBinder.Defer\n  - name: (\n    fullName: (\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: ', '\n    fullName: ', '\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: DynamicMetaObjectBinder.Defer(DynamicMetaObject, DynamicMetaObject[])\n  nameWithType.vb: DynamicMetaObjectBinder.Defer(DynamicMetaObject, DynamicMetaObject())\n  commentId: M:System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n- uid: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject[])\n  parent: System.Dynamic.DynamicMetaObjectBinder\n  isExternal: false\n  name: Defer(DynamicMetaObject[])\n  fullName: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject[])\n  fullname.vb: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject())\n  name.vb: Defer(DynamicMetaObject())\n  spec.csharp:\n  - uid: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject[])\n    name: Defer\n    fullName: System.Dynamic.DynamicMetaObjectBinder.Defer\n  - name: (\n    fullName: (\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject[])\n    name: Defer\n    fullName: System.Dynamic.DynamicMetaObjectBinder.Defer\n  - name: (\n    fullName: (\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: DynamicMetaObjectBinder.Defer(DynamicMetaObject[])\n  nameWithType.vb: DynamicMetaObjectBinder.Defer(DynamicMetaObject())\n  commentId: M:System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject[])\n- uid: System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression(System.Type)\n  parent: System.Dynamic.DynamicMetaObjectBinder\n  isExternal: true\n  name: GetUpdateExpression(Type)\n  fullName: System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression(System.Type)\n  spec.csharp:\n  - uid: System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression(System.Type)\n    name: GetUpdateExpression\n    fullName: System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression(System.Type)\n    name: GetUpdateExpression\n    fullName: System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: DynamicMetaObjectBinder.GetUpdateExpression(Type)\n  commentId: M:System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression(System.Type)\n- uid: System.Runtime.CompilerServices.CallSiteBinder.UpdateLabel\n  parent: System.Runtime.CompilerServices.CallSiteBinder\n  isExternal: false\n  name: UpdateLabel\n  fullName: System.Runtime.CompilerServices.CallSiteBinder.UpdateLabel\n  nameWithType: CallSiteBinder.UpdateLabel\n  commentId: P:System.Runtime.CompilerServices.CallSiteBinder.UpdateLabel\n- uid: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{{T}},System.Object[])\n  parent: System.Runtime.CompilerServices.CallSiteBinder\n  definition: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n  name: BindDelegate<T>(CallSite<T>, Object[])\n  fullName: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate<T>(System.Runtime.CompilerServices.CallSite<T>, System.Object[])\n  fullname.vb: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate(Of T)(System.Runtime.CompilerServices.CallSite(Of T), System.Object())\n  name.vb: BindDelegate(Of T)(CallSite(Of T), Object())\n  spec.csharp:\n  - uid: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n    name: BindDelegate<T>\n    fullName: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate<T>\n  - name: (\n    fullName: (\n  - uid: System.Runtime.CompilerServices.CallSite`1\n    name: CallSite\n    fullName: System.Runtime.CompilerServices.CallSite\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n    name: BindDelegate(Of T)\n    fullName: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Runtime.CompilerServices.CallSite`1\n    name: CallSite\n    fullName: System.Runtime.CompilerServices.CallSite\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: CallSiteBinder.BindDelegate<T>(CallSite<T>, Object[])\n  nameWithType.vb: CallSiteBinder.BindDelegate(Of T)(CallSite(Of T), Object())\n  commentId: M:System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n- uid: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1({T})\n  parent: System.Runtime.CompilerServices.CallSiteBinder\n  definition: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)\n  name: CacheTarget<T>(T)\n  fullName: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget<T>(T)\n  fullname.vb: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget(Of T)(T)\n  name.vb: CacheTarget(Of T)(T)\n  spec.csharp:\n  - uid: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)\n    name: CacheTarget<T>\n    fullName: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget<T>\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)\n    name: CacheTarget(Of T)\n    fullName: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget(Of T)\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: CallSiteBinder.CacheTarget<T>(T)\n  nameWithType.vb: CallSiteBinder.CacheTarget(Of T)(T)\n  commentId: M:System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Runtime.CompilerServices\n  isExternal: false\n  name: System.Runtime.CompilerServices\n  fullName: System.Runtime.CompilerServices\n  nameWithType: System.Runtime.CompilerServices\n  commentId: N:System.Runtime.CompilerServices\n- uid: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n  isExternal: true\n  name: BindDelegate<T>(CallSite<T>, Object[])\n  fullName: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate<T>(System.Runtime.CompilerServices.CallSite<T>, System.Object[])\n  fullname.vb: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate(Of T)(System.Runtime.CompilerServices.CallSite(Of T), System.Object())\n  name.vb: BindDelegate(Of T)(CallSite(Of T), Object())\n  spec.csharp:\n  - uid: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n    name: BindDelegate<T>\n    fullName: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate<T>\n  - name: (\n    fullName: (\n  - uid: System.Runtime.CompilerServices.CallSite`1\n    name: CallSite\n    fullName: System.Runtime.CompilerServices.CallSite\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n    name: BindDelegate(Of T)\n    fullName: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Runtime.CompilerServices.CallSite`1\n    name: CallSite\n    fullName: System.Runtime.CompilerServices.CallSite\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: CallSiteBinder.BindDelegate<T>(CallSite<T>, Object[])\n  nameWithType.vb: CallSiteBinder.BindDelegate(Of T)(CallSite(Of T), Object())\n  commentId: M:System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n- uid: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)\n  isExternal: false\n  name: CacheTarget<T>(T)\n  fullName: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget<T>(T)\n  fullname.vb: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget(Of T)(T)\n  name.vb: CacheTarget(Of T)(T)\n  spec.csharp:\n  - uid: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)\n    name: CacheTarget<T>\n    fullName: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget<T>\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)\n    name: CacheTarget(Of T)\n    fullName: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget(Of T)\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: CallSiteBinder.CacheTarget<T>(T)\n  nameWithType.vb: CallSiteBinder.CacheTarget(Of T)(T)\n  commentId: M:System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)\n- uid: System.Linq.Expressions.ExpressionType\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: ExpressionType\n  fullName: System.Linq.Expressions.ExpressionType\n  nameWithType: ExpressionType\n  commentId: T:System.Linq.Expressions.ExpressionType\n- uid: System.Linq.Expressions\n  isExternal: false\n  name: System.Linq.Expressions\n  fullName: System.Linq.Expressions\n  nameWithType: System.Linq.Expressions\n  commentId: N:System.Linq.Expressions\n- uid: System.Dynamic.DynamicMetaObjectBinder.ReturnType\n  parent: System.Dynamic.DynamicMetaObjectBinder\n  isExternal: false\n  name: ReturnType\n  fullName: System.Dynamic.DynamicMetaObjectBinder.ReturnType\n  nameWithType: DynamicMetaObjectBinder.ReturnType\n  commentId: P:System.Dynamic.DynamicMetaObjectBinder.ReturnType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  nameWithType: Type\n  commentId: T:System.Type\n- uid: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  parent: System.Dynamic.DynamicMetaObjectBinder\n  isExternal: false\n  name: Bind(DynamicMetaObject, DynamicMetaObject[])\n  fullName: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject[])\n  fullname.vb: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject())\n  name.vb: Bind(DynamicMetaObject, DynamicMetaObject())\n  spec.csharp:\n  - uid: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n    name: Bind\n    fullName: System.Dynamic.DynamicMetaObjectBinder.Bind\n  - name: (\n    fullName: (\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: ', '\n    fullName: ', '\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n    name: Bind\n    fullName: System.Dynamic.DynamicMetaObjectBinder.Bind\n  - name: (\n    fullName: (\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: ', '\n    fullName: ', '\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: DynamicMetaObjectBinder.Bind(DynamicMetaObject, DynamicMetaObject[])\n  nameWithType.vb: DynamicMetaObjectBinder.Bind(DynamicMetaObject, DynamicMetaObject())\n  commentId: M:System.Dynamic.DynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n- uid: System.Dynamic.DynamicMetaObject\n  parent: System.Dynamic\n  isExternal: false\n  name: DynamicMetaObject\n  fullName: System.Dynamic.DynamicMetaObject\n  nameWithType: DynamicMetaObject\n  commentId: T:System.Dynamic.DynamicMetaObject\n- uid: System.Dynamic.DynamicMetaObject[]\n  name: DynamicMetaObject[]\n  fullName: System.Dynamic.DynamicMetaObject[]\n  fullname.vb: System.Dynamic.DynamicMetaObject()\n  name.vb: DynamicMetaObject()\n  spec.csharp:\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: ()\n    fullName: ()\n  nameWithType: DynamicMetaObject[]\n  nameWithType.vb: DynamicMetaObject()\n"}