{"nodes":[{"pos":[1948,1966],"content":"ConcurrentStack<T>","needQuote":true,"nodes":[{"content":"ConcurrentStack&lt;T&gt;","pos":[0,18],"source":"ConcurrentStack<T>"}]},{"content":"\\n&lt;p&gt;The type of the elements contained in the stack.&lt;/p&gt;\\n","pos":[3353,3412],"source":"\\n<p>The type of the elements contained in the stack.</p>\\n"},{"pos":[21348,21365],"content":"ConcurrentStack()","needQuote":true,"nodes":[{"content":"ConcurrentStack()","pos":[0,17]}]},{"pos":[22711,22742],"content":"ConcurrentStack(IEnumerable<T>)","needQuote":true,"nodes":[{"content":"ConcurrentStack(IEnumerable&lt;T&gt;)","pos":[0,31],"source":"ConcurrentStack(IEnumerable<T>)"}]},{"content":"\\n&lt;p&gt;The &lt;em&gt;collection&lt;/em&gt; argument is null.&lt;/p&gt;\\n","pos":[24025,24077],"source":"\\n<p>The <em>collection</em> argument is null.</p>\\n"},{"pos":[24690,24695],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[26271,26278],"content":"IsEmpty","needQuote":true,"nodes":[{"content":"IsEmpty","pos":[0,7]}]},{"pos":[27885,27911],"content":"ICollection.IsSynchronized","needQuote":true,"nodes":[{"content":"ICollection.IsSynchronized","pos":[0,26]}]},{"pos":[30042,30062],"content":"ICollection.SyncRoot","needQuote":true,"nodes":[{"content":"ICollection.SyncRoot","pos":[0,20]}]},{"content":"\\n&lt;p&gt;Returns null (Nothing in Visual Basic).&lt;/p&gt;\\n","pos":[31058,31108],"source":"\\n<p>Returns null (Nothing in Visual Basic).</p>\\n"},{"content":"\\n&lt;p&gt;The SyncRoot property is not supported&lt;/p&gt;\\n","pos":[31227,31276],"source":"\\n<p>The SyncRoot property is not supported</p>\\n"},{"pos":[31923,31930],"content":"Clear()","needQuote":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[33144,33162],"content":"CopyTo(T[], Int32)","needQuote":true,"nodes":[{"content":"CopyTo(T[], Int32)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The zero-based index in &lt;em&gt;array&lt;/em&gt; at which copying begins.&lt;/p&gt;\\n","pos":[34574,34648],"source":"\\n<p>The zero-based index in <em>array</em> at which copying begins.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;array&lt;/em&gt; is a null reference (Nothing in Visual Basic).&lt;/p&gt;\\n","pos":[34767,34841],"source":"\\n<p>\\n<em>array</em> is a null reference (Nothing in Visual Basic).</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;index&lt;/em&gt; is less than zero.&lt;/p&gt;\\n","pos":[34958,35004],"source":"\\n<p>\\n<em>index</em> is less than zero.</p>\\n"},{"pos":[36114,36129],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[37710,37717],"content":"Push(T)","needQuote":true,"nodes":[{"content":"Push(T)","pos":[0,7]}]},{"pos":[39221,39235],"content":"PushRange(T[])","needQuote":true,"nodes":[{"content":"PushRange(T[])","pos":[0,14]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;items&lt;/em&gt; is a null reference (Nothing in Visual Basic).&lt;/p&gt;\\n","pos":[40335,40409],"source":"\\n<p>\\n<em>items</em> is a null reference (Nothing in Visual Basic).</p>\\n"},{"pos":[41026,41054],"content":"PushRange(T[], Int32, Int32)","needQuote":true,"nodes":[{"content":"PushRange(T[], Int32, Int32)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;items&lt;/em&gt; is a null reference (Nothing in Visual Basic).&lt;/p&gt;\\n","pos":[42774,42848],"source":"\\n<p>\\n<em>items</em> is a null reference (Nothing in Visual Basic).</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;startIndex&lt;/em&gt; or &lt;em&gt;count&lt;/em&gt; is negative.","pos":[42965,43022],"source":"\\n<p>\\n<em>startIndex</em> or <em>count</em> is negative."},{"content":"Or &lt;em&gt;startIndex&lt;/em&gt; is greater than or equal to the length of &lt;em&gt;items&lt;/em&gt;.&lt;/p&gt;\\n","pos":[43023,43109],"source":" Or <em>startIndex</em> is greater than or equal to the length of <em>items</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;startIndex&lt;/em&gt; + &lt;em&gt;count&lt;/em&gt; is greater than the length of &lt;em&gt;items&lt;/em&gt;.&lt;/p&gt;\\n","pos":[43206,43301],"source":"\\n<p>\\n<em>startIndex</em> + <em>count</em> is greater than the length of <em>items</em>.</p>\\n"},{"pos":[44092,44132],"content":"IProducerConsumerCollection<T>.TryAdd(T)","needQuote":true,"nodes":[{"content":"IProducerConsumerCollection&lt;T&gt;.TryAdd(T)","pos":[0,40],"source":"IProducerConsumerCollection<T>.TryAdd(T)"}]},{"content":"\\n&lt;p&gt;true if the object was added successfully; otherwise, false.&lt;/p&gt;\\n","pos":[45499,45570],"source":"\\n<p>true if the object was added successfully; otherwise, false.</p>\\n"},{"pos":[46526,46571],"content":"IProducerConsumerCollection<T>.TryTake(out T)","needQuote":true,"nodes":[{"content":"IProducerConsumerCollection&lt;T&gt;.TryTake(out T)","pos":[0,45],"source":"IProducerConsumerCollection<T>.TryTake(out T)"}]},{"content":"\\n&lt;p&gt;When this method returns, if the operation was successful, &lt;em&gt;item&lt;/em&gt; contains the object removed.","pos":[47675,47781],"source":"\\n<p>When this method returns, if the operation was successful, <em>item</em> contains the object removed."},{"content":"If no object was available to be removed, the value is unspecified.&lt;/p&gt;\\n","pos":[47782,47855],"source":" If no object was available to be removed, the value is unspecified.</p>\\n"},{"content":"\\n&lt;p&gt;true if an element was removed and returned succesfully; otherwise, false.&lt;/p&gt;\\n","pos":[47916,48001],"source":"\\n<p>true if an element was removed and returned succesfully; otherwise, false.</p>\\n"},{"pos":[48958,48990],"content":"ICollection.CopyTo(Array, Int32)","needQuote":true,"nodes":[{"content":"ICollection.CopyTo(Array, Int32)","pos":[0,32]}]},{"content":"\\n&lt;p&gt;The zero-based index in &lt;em&gt;array&lt;/em&gt; at which copying begins.&lt;/p&gt;\\n","pos":[50572,50646],"source":"\\n<p>The zero-based index in <em>array</em> at which copying begins.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;array&lt;/em&gt; is a null reference (Nothing in Visual Basic).&lt;/p&gt;\\n","pos":[50765,50839],"source":"\\n<p>\\n<em>array</em> is a null reference (Nothing in Visual Basic).</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;index&lt;/em&gt; is less than zero.&lt;/p&gt;\\n","pos":[50956,51002],"source":"\\n<p>\\n<em>index</em> is less than zero.</p>\\n"},{"pos":[52530,52557],"content":"IEnumerable.GetEnumerator()","needQuote":true,"nodes":[{"content":"IEnumerable.GetEnumerator()","pos":[0,27]}]},{"pos":[54218,54227],"content":"ToArray()","needQuote":true,"nodes":[{"content":"ToArray()","pos":[0,9]}]},{"pos":[55768,55782],"content":"TryPeek(out T)","needQuote":true,"nodes":[{"content":"TryPeek(out T)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;true if and object was returned successfully; otherwise, false.&lt;/p&gt;\\n","pos":[56955,57029],"source":"\\n<p>true if and object was returned successfully; otherwise, false.</p>\\n"},{"pos":[57562,57575],"content":"TryPop(out T)","needQuote":true,"nodes":[{"content":"TryPop(out T)","pos":[0,13]}]},{"content":"\\n&lt;p&gt;When this method returns, if the operation was successful, &lt;em&gt;result&lt;/em&gt; contains the object removed.","pos":[58423,58531],"source":"\\n<p>When this method returns, if the operation was successful, <em>result</em> contains the object removed."},{"content":"If no object was available to be removed, the value is unspecified.&lt;/p&gt;\\n","pos":[58532,58605],"source":" If no object was available to be removed, the value is unspecified.</p>\\n"},{"pos":[59427,59443],"content":"TryPopRange(T[])","needQuote":true,"nodes":[{"content":"TryPopRange(T[])","pos":[0,16]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;items&lt;/em&gt; is a null argument (Nothing in Visual Basic).&lt;/p&gt;\\n","pos":[60964,61037],"source":"\\n<p>\\n<em>items</em> is a null argument (Nothing in Visual Basic).</p>\\n"},{"pos":[61668,61698],"content":"TryPopRange(T[], Int32, Int32)","needQuote":true,"nodes":[{"content":"TryPopRange(T[], Int32, Int32)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;The number of objects successfully popped from the top of the stack and inserted in &lt;em&gt;items&lt;/em&gt;.&lt;/p&gt;\\n","pos":[63535,63645],"source":"\\n<p>The number of objects successfully popped from the top of the stack and inserted in <em>items</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;items&lt;/em&gt; is a null reference (Nothing in Visual Basic).&lt;/p&gt;\\n","pos":[63764,63838],"source":"\\n<p>\\n<em>items</em> is a null reference (Nothing in Visual Basic).</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;startIndex&lt;/em&gt; or &lt;em&gt;count&lt;/em&gt; is negative.","pos":[63955,64012],"source":"\\n<p>\\n<em>startIndex</em> or <em>count</em> is negative."},{"content":"Or &lt;em&gt;startIndex&lt;/em&gt; is greater than or equal to the length of &lt;em&gt;items&lt;/em&gt;.&lt;/p&gt;\\n","pos":[64013,64099],"source":" Or <em>startIndex</em> is greater than or equal to the length of <em>items</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;startIndex&lt;/em&gt; + &lt;em&gt;count&lt;/em&gt; is greater than the length of &lt;em&gt;items&lt;/em&gt;.&lt;/p&gt;\\n","pos":[64196,64291],"source":"\\n<p>\\n<em>startIndex</em> + <em>count</em> is greater than the length of <em>items</em>.</p>\\n"},{"pos":[64720,64749],"content":"System.Collections.Concurrent","needQuote":true,"nodes":[{"content":"System.Collections.Concurrent","pos":[0,29]}]},{"pos":[64949,64955],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[65226,65256],"content":"IProducerConsumerCollection<T>","needQuote":true,"nodes":[{"content":"IProducerConsumerCollection&lt;T&gt;","pos":[0,30],"source":"IProducerConsumerCollection<T>"}]},{"pos":[65548,65575],"content":"IProducerConsumerCollection","needQuote":true,"nodes":[{"content":"IProducerConsumerCollection","pos":[0,27]}]},{"pos":[65658,65659],"content":"<","needQuote":true,"nodes":[]},{"pos":[65686,65687],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[65826,65853],"content":"IProducerConsumerCollection","needQuote":true,"nodes":[{"content":"IProducerConsumerCollection","pos":[0,27]}]},{"content":"(Of","pos":[65937,65940]},{"pos":[65974,65975],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[66002,66003],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66364,66386],"content":"IReadOnlyCollection<T>","needQuote":true,"nodes":[{"content":"IReadOnlyCollection&lt;T&gt;","pos":[0,22],"source":"IReadOnlyCollection<T>"}]},{"pos":[66637,66656],"content":"IReadOnlyCollection","needQuote":true,"nodes":[{"content":"IReadOnlyCollection","pos":[0,19]}]},{"pos":[66728,66729],"content":"<","needQuote":true,"nodes":[]},{"pos":[66756,66757],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[66885,66904],"content":"IReadOnlyCollection","needQuote":true,"nodes":[{"content":"IReadOnlyCollection","pos":[0,19]}]},{"content":"(Of","pos":[66977,66980]},{"pos":[67014,67015],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[67042,67043],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67361,67375],"content":"IEnumerable<T>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;T&gt;","pos":[0,14],"source":"IEnumerable<T>"}]},{"pos":[67594,67605],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[67669,67670],"content":"<","needQuote":true,"nodes":[]},{"pos":[67697,67698],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[67818,67829],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[67894,67897]},{"pos":[67931,67932],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[67959,67960],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68198,68209],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[68422,68433],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[68632,68642],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[68737,68745],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[68814,68815],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68842,68843],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68913,68921],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[68990,68991],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69018,69019],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69202,69216],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[69335,69341],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[69408,69409],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69459,69465],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[69525,69526],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69609,69615],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[69682,69683],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69733,69739],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[69799,69800],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70014,70036],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[70184,70190],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[70257,70258],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70308,70314],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[70375,70376]},{"pos":[70431,70437],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[70497,70498],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70595,70601],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[70668,70669],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70719,70725],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[70786,70787]},{"pos":[70842,70848],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[70908,70909],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71154,71185],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[71351,71366],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[71442,71443],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71493,71499],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[71560,71561]},{"pos":[71616,71622],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[71682,71683],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71789,71804],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[71880,71881],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71931,71937],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[71998,71999]},{"pos":[72054,72060],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[72120,72121],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72351,72364],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[72465,72476],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[72548,72549],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72576,72577],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72650,72661],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[72733,72734],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72761,72762],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72937,72946],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[73039,73046],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[73114,73115],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73142,73143],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73212,73219],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[73287,73288],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73315,73316],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73491,73508],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[73617,73632],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[73708,73709],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73736,73737],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73814,73829],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[73905,73906],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73933,73934],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74229,74242],"content":"AsQueryable()","needQuote":true,"nodes":[{"content":"AsQueryable()","pos":[0,13]}]},{"pos":[74359,74370],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[74429,74430],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74457,74458],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74539,74550],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[74609,74610],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74637,74638],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74999,75015],"content":"AsQueryable<T>()","needQuote":true,"nodes":[{"content":"AsQueryable&lt;T&gt;()","pos":[0,16],"source":"AsQueryable<T>()"}]},{"pos":[75226,75240],"content":"AsQueryable<T>","needQuote":true,"nodes":[{"content":"AsQueryable&lt;T&gt;","pos":[0,14],"source":"AsQueryable<T>"}]},{"pos":[75302,75303],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75330,75331],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75415,75432],"content":"AsQueryable(Of T)","needQuote":true,"nodes":[{"content":"AsQueryable(Of T)","pos":[0,17]}]},{"pos":[75497,75498],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75525,75526],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75949,75961],"content":"AsParallel()","needQuote":true,"nodes":[{"content":"AsParallel()","pos":[0,12]}]},{"pos":[76094,76104],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[76171,76172],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76199,76200],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76289,76299],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[76366,76367],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76394,76395],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76797,76812],"content":"AsParallel<T>()","needQuote":true,"nodes":[{"content":"AsParallel&lt;T&gt;()","pos":[0,15],"source":"AsParallel<T>()"}]},{"pos":[77046,77059],"content":"AsParallel<T>","needQuote":true,"nodes":[{"content":"AsParallel&lt;T&gt;","pos":[0,13],"source":"AsParallel<T>"}]},{"pos":[77129,77130],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77157,77158],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77250,77266],"content":"AsParallel(Of T)","needQuote":true,"nodes":[{"content":"AsParallel(Of T)","pos":[0,16]}]},{"pos":[77339,77340],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77367,77368],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77871,77898],"content":"Aggregate<T>(Func<T, T, T>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;T&gt;(Func&lt;T, T, T&gt;)","pos":[0,27],"source":"Aggregate<T>(Func<T, T, T>)"}]},{"pos":[78189,78201],"content":"Aggregate<T>","needQuote":true,"nodes":[{"content":"Aggregate&lt;T&gt;","pos":[0,12],"source":"Aggregate<T>"}]},{"pos":[78262,78263],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78313,78317],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[78375,78376],"content":"<","needQuote":true,"nodes":[]},{"pos":[78403,78404],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[78432,78433]},{"pos":[78465,78466],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[78494,78495]},{"pos":[78527,78528],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[78587,78588],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78697,78712],"content":"Aggregate(Of T)","needQuote":true,"nodes":[{"content":"Aggregate(Of T)","pos":[0,15]}]},{"pos":[78776,78777],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78827,78831],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[78890,78893]},{"pos":[78927,78928],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[78956,78957]},{"pos":[78989,78990],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[79018,79019]},{"pos":[79051,79052],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[79079,79080],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79107,79108],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79676,79749],"content":"Aggregate<T, TAccumulate>(TAccumulate, Func<TAccumulate, T, TAccumulate>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;T, TAccumulate&gt;(TAccumulate, Func&lt;TAccumulate, T, TAccumulate&gt;)","pos":[0,73],"source":"Aggregate<T, TAccumulate>(TAccumulate, Func<TAccumulate, T, TAccumulate>)"}]},{"pos":[80182,80207],"content":"Aggregate<T, TAccumulate>","needQuote":true,"nodes":[{"content":"Aggregate&lt;T, TAccumulate&gt;","pos":[0,25],"source":"Aggregate<T, TAccumulate>"}]},{"pos":[80281,80282],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80309,80320],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[80358,80359]},{"pos":[80414,80418],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[80476,80477],"content":"<","needQuote":true,"nodes":[]},{"pos":[80504,80515],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[80553,80554]},{"pos":[80586,80587],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[80615,80616]},{"pos":[80648,80659],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[80728,80729],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80842,80870],"content":"Aggregate(Of T, TAccumulate)","needQuote":true,"nodes":[{"content":"Aggregate(Of T, TAccumulate)","pos":[0,28]}]},{"pos":[80947,80948],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80975,80986],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[81024,81025]},{"pos":[81080,81084],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[81143,81146]},{"pos":[81180,81191],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[81229,81230]},{"pos":[81262,81263],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[81291,81292]},{"pos":[81324,81335],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[81372,81373],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81400,81401],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82123,82233],"content":"Aggregate<T, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, T, TAccumulate>, Func<TAccumulate, TResult>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;T, TAccumulate, TResult&gt;(TAccumulate, Func&lt;TAccumulate, T, TAccumulate&gt;, Func&lt;TAccumulate, TResult&gt;)","pos":[0,110],"source":"Aggregate<T, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, T, TAccumulate>, Func<TAccumulate, TResult>)"}]},{"pos":[82818,82852],"content":"Aggregate<T, TAccumulate, TResult>","needQuote":true,"nodes":[{"content":"Aggregate&lt;T, TAccumulate, TResult&gt;","pos":[0,34],"source":"Aggregate<T, TAccumulate, TResult>"}]},{"pos":[82935,82936],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82963,82974],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[83012,83013]},{"pos":[83068,83072],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[83130,83131],"content":"<","needQuote":true,"nodes":[]},{"pos":[83158,83169],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[83207,83208]},{"pos":[83240,83241],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[83269,83270]},{"pos":[83302,83313],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[83383,83384]},{"pos":[83439,83443],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[83501,83502],"content":"<","needQuote":true,"nodes":[]},{"pos":[83529,83540],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[83578,83579]},{"pos":[83611,83618],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[83683,83684],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83818,83855],"content":"Aggregate(Of T, TAccumulate, TResult)","needQuote":true,"nodes":[{"content":"Aggregate(Of T, TAccumulate, TResult)","pos":[0,37]}]},{"pos":[83941,83942],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83969,83980],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[84018,84019]},{"pos":[84074,84078],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[84137,84140]},{"pos":[84174,84185],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[84223,84224]},{"pos":[84256,84257],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[84285,84286]},{"pos":[84318,84329],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[84366,84367],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[84395,84396]},{"pos":[84451,84455],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[84514,84517]},{"pos":[84551,84562],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[84600,84601]},{"pos":[84633,84640],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[84673,84674],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[84701,84702],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85428,85452],"content":"All<T>(Func<T, Boolean>)","needQuote":true,"nodes":[{"content":"All&lt;T&gt;(Func&lt;T, Boolean&gt;)","pos":[0,24],"source":"All<T>(Func<T, Boolean>)"}]},{"pos":[85749,85755],"content":"All<T>","needQuote":true,"nodes":[{"content":"All&lt;T&gt;","pos":[0,6],"source":"All<T>"}]},{"pos":[85810,85811],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85861,85865],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[85923,85924],"content":"<","needQuote":true,"nodes":[]},{"pos":[85951,85952],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[85980,85981]},{"pos":[86037,86044],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[86137,86138],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86248,86257],"content":"All(Of T)","needQuote":true,"nodes":[{"content":"All(Of T)","pos":[0,9]}]},{"pos":[86315,86316],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86366,86370],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[86429,86432]},{"pos":[86466,86467],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[86495,86496]},{"pos":[86552,86559],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[86620,86621],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86648,86649],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87111,87119],"content":"Any<T>()","needQuote":true,"nodes":[{"content":"Any&lt;T&gt;()","pos":[0,8],"source":"Any<T>()"}]},{"pos":[87301,87307],"content":"Any<T>","needQuote":true,"nodes":[{"content":"Any&lt;T&gt;","pos":[0,6],"source":"Any<T>"}]},{"pos":[87362,87363],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87390,87391],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87468,87477],"content":"Any(Of T)","needQuote":true,"nodes":[{"content":"Any(Of T)","pos":[0,9]}]},{"pos":[87535,87536],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87563,87564],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88024,88048],"content":"Any<T>(Func<T, Boolean>)","needQuote":true,"nodes":[{"content":"Any&lt;T&gt;(Func&lt;T, Boolean&gt;)","pos":[0,24],"source":"Any<T>(Func<T, Boolean>)"}]},{"pos":[88345,88351],"content":"Any<T>","needQuote":true,"nodes":[{"content":"Any&lt;T&gt;","pos":[0,6],"source":"Any<T>"}]},{"pos":[88406,88407],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88457,88461],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[88519,88520],"content":"<","needQuote":true,"nodes":[]},{"pos":[88547,88548],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[88576,88577]},{"pos":[88633,88640],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[88733,88734],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88844,88853],"content":"Any(Of T)","needQuote":true,"nodes":[{"content":"Any(Of T)","pos":[0,9]}]},{"pos":[88911,88912],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88962,88966],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[89025,89028]},{"pos":[89062,89063],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[89091,89092]},{"pos":[89148,89155],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[89216,89217],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89244,89245],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89725,89742],"content":"AsEnumerable<T>()","needQuote":true,"nodes":[{"content":"AsEnumerable&lt;T&gt;()","pos":[0,17],"source":"AsEnumerable<T>()"}]},{"pos":[89960,89975],"content":"AsEnumerable<T>","needQuote":true,"nodes":[{"content":"AsEnumerable&lt;T&gt;","pos":[0,15],"source":"AsEnumerable<T>"}]},{"pos":[90039,90040],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90067,90068],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90154,90172],"content":"AsEnumerable(Of T)","needQuote":true,"nodes":[{"content":"AsEnumerable(Of T)","pos":[0,18]}]},{"pos":[90239,90240],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90267,90268],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90763,90791],"content":"Average<T>(Func<T, Decimal>)","needQuote":true,"nodes":[{"content":"Average&lt;T&gt;(Func&lt;T, Decimal&gt;)","pos":[0,28],"source":"Average<T>(Func<T, Decimal>)"}]},{"pos":[91104,91114],"content":"Average<T>","needQuote":true,"nodes":[{"content":"Average&lt;T&gt;","pos":[0,10],"source":"Average<T>"}]},{"pos":[91173,91174],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91224,91228],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[91286,91287],"content":"<","needQuote":true,"nodes":[]},{"pos":[91314,91315],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[91343,91344]},{"pos":[91400,91407],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[91500,91501],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91615,91628],"content":"Average(Of T)","needQuote":true,"nodes":[{"content":"Average(Of T)","pos":[0,13]}]},{"pos":[91690,91691],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91741,91745],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[91804,91807]},{"pos":[91841,91842],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[91870,91871]},{"pos":[91927,91934],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[91995,91996],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92023,92024],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92569,92596],"content":"Average<T>(Func<T, Double>)","needQuote":true,"nodes":[{"content":"Average&lt;T&gt;(Func&lt;T, Double&gt;)","pos":[0,27],"source":"Average<T>(Func<T, Double>)"}]},{"pos":[92905,92915],"content":"Average<T>","needQuote":true,"nodes":[{"content":"Average&lt;T&gt;","pos":[0,10],"source":"Average<T>"}]},{"pos":[92974,92975],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93025,93029],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[93087,93088],"content":"<","needQuote":true,"nodes":[]},{"pos":[93115,93116],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[93144,93145]},{"pos":[93200,93206],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[93298,93299],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93412,93425],"content":"Average(Of T)","needQuote":true,"nodes":[{"content":"Average(Of T)","pos":[0,13]}]},{"pos":[93487,93488],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93538,93542],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[93601,93604]},{"pos":[93638,93639],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[93667,93668]},{"pos":[93723,93729],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[93789,93790],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93817,93818],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94358,94384],"content":"Average<T>(Func<T, Int32>)","needQuote":true,"nodes":[{"content":"Average&lt;T&gt;(Func&lt;T, Int32&gt;)","pos":[0,26],"source":"Average<T>(Func<T, Int32>)"}]},{"pos":[94689,94699],"content":"Average<T>","needQuote":true,"nodes":[{"content":"Average&lt;T&gt;","pos":[0,10],"source":"Average<T>"}]},{"pos":[94758,94759],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94809,94813],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[94871,94872],"content":"<","needQuote":true,"nodes":[]},{"pos":[94899,94900],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[94928,94929]},{"pos":[94983,94988],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[95079,95080],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95192,95205],"content":"Average(Of T)","needQuote":true,"nodes":[{"content":"Average(Of T)","pos":[0,13]}]},{"pos":[95267,95268],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95318,95322],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[95381,95384]},{"pos":[95418,95419],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[95447,95448]},{"pos":[95502,95507],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[95566,95567],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95594,95595],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96132,96158],"content":"Average<T>(Func<T, Int64>)","needQuote":true,"nodes":[{"content":"Average&lt;T&gt;(Func&lt;T, Int64&gt;)","pos":[0,26],"source":"Average<T>(Func<T, Int64>)"}]},{"pos":[96463,96473],"content":"Average<T>","needQuote":true,"nodes":[{"content":"Average&lt;T&gt;","pos":[0,10],"source":"Average<T>"}]},{"pos":[96532,96533],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96583,96587],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[96645,96646],"content":"<","needQuote":true,"nodes":[]},{"pos":[96673,96674],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[96702,96703]},{"pos":[96757,96762],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[96853,96854],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96966,96979],"content":"Average(Of T)","needQuote":true,"nodes":[{"content":"Average(Of T)","pos":[0,13]}]},{"pos":[97041,97042],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[97092,97096],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[97155,97158]},{"pos":[97192,97193],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[97221,97222]},{"pos":[97276,97281],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[97340,97341],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97368,97369],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97944,97982],"content":"Average<T>(Func<T, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Average&lt;T&gt;(Func&lt;T, Nullable&lt;Decimal&gt;&gt;)","pos":[0,38],"source":"Average<T>(Func<T, Nullable<Decimal>>)"}]},{"pos":[98362,98372],"content":"Average<T>","needQuote":true,"nodes":[{"content":"Average&lt;T&gt;","pos":[0,10],"source":"Average<T>"}]},{"pos":[98431,98432],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[98482,98486],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[98544,98545],"content":"<","needQuote":true,"nodes":[]},{"pos":[98572,98573],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[98601,98602]},{"pos":[98661,98669],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[98731,98732],"content":"<","needQuote":true,"nodes":[]},{"pos":[98783,98790],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[98915,98916],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[99047,99060],"content":"Average(Of T)","needQuote":true,"nodes":[{"content":"Average(Of T)","pos":[0,13]}]},{"pos":[99122,99123],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[99173,99177],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[99236,99239]},{"pos":[99273,99274],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[99302,99303]},{"pos":[99362,99370],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[99433,99436]},{"pos":[99494,99501],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[99562,99563],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[99590,99591],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[99618,99619],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[100238,100275],"content":"Average<T>(Func<T, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Average&lt;T&gt;(Func&lt;T, Nullable&lt;Double&gt;&gt;)","pos":[0,37],"source":"Average<T>(Func<T, Nullable<Double>>)"}]},{"pos":[100651,100661],"content":"Average<T>","needQuote":true,"nodes":[{"content":"Average&lt;T&gt;","pos":[0,10],"source":"Average<T>"}]},{"pos":[100720,100721],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[100771,100775],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[100833,100834],"content":"<","needQuote":true,"nodes":[]},{"pos":[100861,100862],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[100890,100891]},{"pos":[100950,100958],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[101020,101021],"content":"<","needQuote":true,"nodes":[]},{"pos":[101071,101077],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[101201,101202],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[101332,101345],"content":"Average(Of T)","needQuote":true,"nodes":[{"content":"Average(Of T)","pos":[0,13]}]},{"pos":[101407,101408],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[101458,101462],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[101521,101524]},{"pos":[101558,101559],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[101587,101588]},{"pos":[101647,101655],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[101718,101721]},{"pos":[101778,101784],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[101844,101845],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[101872,101873],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[101900,101901],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[102515,102551],"content":"Average<T>(Func<T, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Average&lt;T&gt;(Func&lt;T, Nullable&lt;Int32&gt;&gt;)","pos":[0,36],"source":"Average<T>(Func<T, Nullable<Int32>>)"}]},{"pos":[102923,102933],"content":"Average<T>","needQuote":true,"nodes":[{"content":"Average&lt;T&gt;","pos":[0,10],"source":"Average<T>"}]},{"pos":[102992,102993],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[103043,103047],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[103105,103106],"content":"<","needQuote":true,"nodes":[]},{"pos":[103133,103134],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[103162,103163]},{"pos":[103222,103230],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[103292,103293],"content":"<","needQuote":true,"nodes":[]},{"pos":[103342,103347],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[103470,103471],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[103600,103613],"content":"Average(Of T)","needQuote":true,"nodes":[{"content":"Average(Of T)","pos":[0,13]}]},{"pos":[103675,103676],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[103726,103730],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[103789,103792]},{"pos":[103826,103827],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[103855,103856]},{"pos":[103915,103923],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[103986,103989]},{"pos":[104045,104050],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[104109,104110],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[104137,104138],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[104165,104166],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[104777,104813],"content":"Average<T>(Func<T, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Average&lt;T&gt;(Func&lt;T, Nullable&lt;Int64&gt;&gt;)","pos":[0,36],"source":"Average<T>(Func<T, Nullable<Int64>>)"}]},{"pos":[105185,105195],"content":"Average<T>","needQuote":true,"nodes":[{"content":"Average&lt;T&gt;","pos":[0,10],"source":"Average<T>"}]},{"pos":[105254,105255],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[105305,105309],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[105367,105368],"content":"<","needQuote":true,"nodes":[]},{"pos":[105395,105396],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[105424,105425]},{"pos":[105484,105492],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[105554,105555],"content":"<","needQuote":true,"nodes":[]},{"pos":[105604,105609],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[105732,105733],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[105862,105875],"content":"Average(Of T)","needQuote":true,"nodes":[{"content":"Average(Of T)","pos":[0,13]}]},{"pos":[105937,105938],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[105988,105992],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[106051,106054]},{"pos":[106088,106089],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[106117,106118]},{"pos":[106177,106185],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[106248,106251]},{"pos":[106307,106312],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[106371,106372],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[106399,106400],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[106427,106428],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[107041,107078],"content":"Average<T>(Func<T, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Average&lt;T&gt;(Func&lt;T, Nullable&lt;Single&gt;&gt;)","pos":[0,37],"source":"Average<T>(Func<T, Nullable<Single>>)"}]},{"pos":[107454,107464],"content":"Average<T>","needQuote":true,"nodes":[{"content":"Average&lt;T&gt;","pos":[0,10],"source":"Average<T>"}]},{"pos":[107523,107524],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[107574,107578],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[107636,107637],"content":"<","needQuote":true,"nodes":[]},{"pos":[107664,107665],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[107693,107694]},{"pos":[107753,107761],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[107823,107824],"content":"<","needQuote":true,"nodes":[]},{"pos":[107874,107880],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[108004,108005],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[108135,108148],"content":"Average(Of T)","needQuote":true,"nodes":[{"content":"Average(Of T)","pos":[0,13]}]},{"pos":[108210,108211],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[108261,108265],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[108324,108327]},{"pos":[108361,108362],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[108390,108391]},{"pos":[108450,108458],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[108521,108524]},{"pos":[108581,108587],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[108647,108648],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[108675,108676],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[108703,108704],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[109286,109313],"content":"Average<T>(Func<T, Single>)","needQuote":true,"nodes":[{"content":"Average&lt;T&gt;(Func&lt;T, Single&gt;)","pos":[0,27],"source":"Average<T>(Func<T, Single>)"}]},{"pos":[109622,109632],"content":"Average<T>","needQuote":true,"nodes":[{"content":"Average&lt;T&gt;","pos":[0,10],"source":"Average<T>"}]},{"pos":[109691,109692],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[109742,109746],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[109804,109805],"content":"<","needQuote":true,"nodes":[]},{"pos":[109832,109833],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[109861,109862]},{"pos":[109917,109923],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[110015,110016],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[110129,110142],"content":"Average(Of T)","needQuote":true,"nodes":[{"content":"Average(Of T)","pos":[0,13]}]},{"pos":[110204,110205],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[110255,110259],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[110318,110321]},{"pos":[110355,110356],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[110384,110385]},{"pos":[110440,110446],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[110506,110507],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[110534,110535],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[110983,110998],"content":"Cast<TResult>()","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;()","pos":[0,15],"source":"Cast<TResult>()"}]},{"pos":[111202,111215],"content":"Cast<TResult>","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;","pos":[0,13],"source":"Cast<TResult>"}]},{"pos":[111277,111278],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[111305,111306],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[111384,111400],"content":"Cast(Of TResult)","needQuote":true,"nodes":[{"content":"Cast(Of TResult)","pos":[0,16]}]},{"pos":[111465,111466],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[111493,111494],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[111986,112011],"content":"Concat<T>(IEnumerable<T>)","needQuote":true,"nodes":[{"content":"Concat&lt;T&gt;(IEnumerable&lt;T&gt;)","pos":[0,25],"source":"Concat<T>(IEnumerable<T>)"}]},{"pos":[112352,112361],"content":"Concat<T>","needQuote":true,"nodes":[{"content":"Concat&lt;T&gt;","pos":[0,9],"source":"Concat<T>"}]},{"pos":[112419,112420],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[112497,112508],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[112593,112594],"content":"<","needQuote":true,"nodes":[]},{"pos":[112621,112622],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[112681,112682],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[112807,112819],"content":"Concat(Of T)","needQuote":true,"nodes":[{"content":"Concat(Of T)","pos":[0,12]}]},{"pos":[112880,112881],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[112958,112969],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[113055,113058]},{"pos":[113092,113093],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[113120,113121],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[113148,113149],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[113643,113655],"content":"Append<T>(T)","needQuote":true,"nodes":[{"content":"Append&lt;T&gt;(T)","pos":[0,12],"source":"Append<T>(T)"}]},{"pos":[113857,113866],"content":"Append<T>","needQuote":true,"nodes":[{"content":"Append&lt;T&gt;","pos":[0,9],"source":"Append<T>"}]},{"pos":[113924,113925],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[113952,113953],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[113980,113981],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[114066,114078],"content":"Append(Of T)","needQuote":true,"nodes":[{"content":"Append(Of T)","pos":[0,12]}]},{"pos":[114139,114140],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[114167,114168],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[114195,114196],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[114623,114636],"content":"Prepend<T>(T)","needQuote":true,"nodes":[{"content":"Prepend&lt;T&gt;(T)","pos":[0,13],"source":"Prepend<T>(T)"}]},{"pos":[114842,114852],"content":"Prepend<T>","needQuote":true,"nodes":[{"content":"Prepend&lt;T&gt;","pos":[0,10],"source":"Prepend<T>"}]},{"pos":[114911,114912],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[114939,114940],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[114967,114968],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[115054,115067],"content":"Prepend(Of T)","needQuote":true,"nodes":[{"content":"Prepend(Of T)","pos":[0,13]}]},{"pos":[115129,115130],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[115157,115158],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[115185,115186],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[115618,115632],"content":"Contains<T>(T)","needQuote":true,"nodes":[{"content":"Contains&lt;T&gt;(T)","pos":[0,14],"source":"Contains<T>(T)"}]},{"pos":[115842,115853],"content":"Contains<T>","needQuote":true,"nodes":[{"content":"Contains&lt;T&gt;","pos":[0,11],"source":"Contains<T>"}]},{"pos":[115913,115914],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[115941,115942],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[115969,115970],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[116057,116071],"content":"Contains(Of T)","needQuote":true,"nodes":[{"content":"Contains(Of T)","pos":[0,14]}]},{"pos":[116134,116135],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[116162,116163],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[116190,116191],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[116726,116762],"content":"Contains<T>(T, IEqualityComparer<T>)","needQuote":true,"nodes":[{"content":"Contains&lt;T&gt;(T, IEqualityComparer&lt;T&gt;)","pos":[0,36],"source":"Contains<T>(T, IEqualityComparer<T>)"}]},{"pos":[117148,117159],"content":"Contains<T>","needQuote":true,"nodes":[{"content":"Contains&lt;T&gt;","pos":[0,11],"source":"Contains<T>"}]},{"pos":[117219,117220],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[117247,117248],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[117276,117277]},{"pos":[117365,117382],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[117473,117474],"content":"<","needQuote":true,"nodes":[]},{"pos":[117501,117502],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[117561,117562],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[117699,117713],"content":"Contains(Of T)","needQuote":true,"nodes":[{"content":"Contains(Of T)","pos":[0,14]}]},{"pos":[117776,117777],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[117804,117805],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[117833,117834]},{"pos":[117922,117939],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[118031,118034]},{"pos":[118068,118069],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[118096,118097],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[118124,118125],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[118642,118652],"content":"Count<T>()","needQuote":true,"nodes":[{"content":"Count&lt;T&gt;()","pos":[0,10],"source":"Count<T>()"}]},{"pos":[118842,118850],"content":"Count<T>","needQuote":true,"nodes":[{"content":"Count&lt;T&gt;","pos":[0,8],"source":"Count<T>"}]},{"pos":[118907,118908],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[118935,118936],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[119015,119026],"content":"Count(Of T)","needQuote":true,"nodes":[{"content":"Count(Of T)","pos":[0,11]}]},{"pos":[119086,119087],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[119114,119115],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[119585,119611],"content":"Count<T>(Func<T, Boolean>)","needQuote":true,"nodes":[{"content":"Count&lt;T&gt;(Func&lt;T, Boolean&gt;)","pos":[0,26],"source":"Count<T>(Func<T, Boolean>)"}]},{"pos":[119916,119924],"content":"Count<T>","needQuote":true,"nodes":[{"content":"Count&lt;T&gt;","pos":[0,8],"source":"Count<T>"}]},{"pos":[119981,119982],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[120032,120036],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[120094,120095],"content":"<","needQuote":true,"nodes":[]},{"pos":[120122,120123],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[120151,120152]},{"pos":[120208,120215],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[120308,120309],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[120421,120432],"content":"Count(Of T)","needQuote":true,"nodes":[{"content":"Count(Of T)","pos":[0,11]}]},{"pos":[120492,120493],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[120543,120547],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[120606,120609]},{"pos":[120643,120644],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[120672,120673]},{"pos":[120729,120736],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[120797,120798],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[120825,120826],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[121316,121335],"content":"DefaultIfEmpty<T>()","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;T&gt;()","pos":[0,19],"source":"DefaultIfEmpty<T>()"}]},{"pos":[121561,121578],"content":"DefaultIfEmpty<T>","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;T&gt;","pos":[0,17],"source":"DefaultIfEmpty<T>"}]},{"pos":[121644,121645],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[121672,121673],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[121761,121781],"content":"DefaultIfEmpty(Of T)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty(Of T)","pos":[0,20]}]},{"pos":[121850,121851],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[121878,121879],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[122338,122358],"content":"DefaultIfEmpty<T>(T)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;T&gt;(T)","pos":[0,20],"source":"DefaultIfEmpty<T>(T)"}]},{"pos":[122592,122609],"content":"DefaultIfEmpty<T>","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;T&gt;","pos":[0,17],"source":"DefaultIfEmpty<T>"}]},{"pos":[122675,122676],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[122703,122704],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[122731,122732],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[122825,122845],"content":"DefaultIfEmpty(Of T)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty(Of T)","pos":[0,20]}]},{"pos":[122914,122915],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[122942,122943],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[122970,122971],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[123415,123428],"content":"Distinct<T>()","needQuote":true,"nodes":[{"content":"Distinct&lt;T&gt;()","pos":[0,13],"source":"Distinct<T>()"}]},{"pos":[123630,123641],"content":"Distinct<T>","needQuote":true,"nodes":[{"content":"Distinct&lt;T&gt;","pos":[0,11],"source":"Distinct<T>"}]},{"pos":[123701,123702],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[123729,123730],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[123812,123826],"content":"Distinct(Of T)","needQuote":true,"nodes":[{"content":"Distinct(Of T)","pos":[0,14]}]},{"pos":[123889,123890],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[123917,123918],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[124439,124472],"content":"Distinct<T>(IEqualityComparer<T>)","needQuote":true,"nodes":[{"content":"Distinct&lt;T&gt;(IEqualityComparer&lt;T&gt;)","pos":[0,33],"source":"Distinct<T>(IEqualityComparer<T>)"}]},{"pos":[124845,124856],"content":"Distinct<T>","needQuote":true,"nodes":[{"content":"Distinct&lt;T&gt;","pos":[0,11],"source":"Distinct<T>"}]},{"pos":[124916,124917],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[125000,125017],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[125108,125109],"content":"<","needQuote":true,"nodes":[]},{"pos":[125136,125137],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[125196,125197],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[125330,125344],"content":"Distinct(Of T)","needQuote":true,"nodes":[{"content":"Distinct(Of T)","pos":[0,14]}]},{"pos":[125407,125408],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[125491,125508],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[125600,125603]},{"pos":[125637,125638],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[125665,125666],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[125693,125694],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[126236,126255],"content":"ElementAt<T>(Int32)","needQuote":true,"nodes":[{"content":"ElementAt&lt;T&gt;(Int32)","pos":[0,19],"source":"ElementAt<T>(Int32)"}]},{"pos":[126504,126516],"content":"ElementAt<T>","needQuote":true,"nodes":[{"content":"ElementAt&lt;T&gt;","pos":[0,12],"source":"ElementAt<T>"}]},{"pos":[126577,126578],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[126627,126632],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[126691,126692],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[126789,126804],"content":"ElementAt(Of T)","needQuote":true,"nodes":[{"content":"ElementAt(Of T)","pos":[0,15]}]},{"pos":[126868,126869],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[126918,126923],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[126982,126983],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[127476,127504],"content":"ElementAtOrDefault<T>(Int32)","needQuote":true,"nodes":[{"content":"ElementAtOrDefault&lt;T&gt;(Int32)","pos":[0,28],"source":"ElementAtOrDefault<T>(Int32)"}]},{"pos":[127789,127810],"content":"ElementAtOrDefault<T>","needQuote":true,"nodes":[{"content":"ElementAtOrDefault&lt;T&gt;","pos":[0,21],"source":"ElementAtOrDefault<T>"}]},{"pos":[127880,127881],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[127930,127935],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[127994,127995],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[128101,128125],"content":"ElementAtOrDefault(Of T)","needQuote":true,"nodes":[{"content":"ElementAtOrDefault(Of T)","pos":[0,24]}]},{"pos":[128198,128199],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[128248,128253],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[128312,128313],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[128871,128896],"content":"Except<T>(IEnumerable<T>)","needQuote":true,"nodes":[{"content":"Except&lt;T&gt;(IEnumerable&lt;T&gt;)","pos":[0,25],"source":"Except<T>(IEnumerable<T>)"}]},{"pos":[129237,129246],"content":"Except<T>","needQuote":true,"nodes":[{"content":"Except&lt;T&gt;","pos":[0,9],"source":"Except<T>"}]},{"pos":[129304,129305],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[129382,129393],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[129478,129479],"content":"<","needQuote":true,"nodes":[]},{"pos":[129506,129507],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[129566,129567],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[129692,129704],"content":"Except(Of T)","needQuote":true,"nodes":[{"content":"Except(Of T)","pos":[0,12]}]},{"pos":[129765,129766],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[129843,129854],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[129940,129943]},{"pos":[129977,129978],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[130005,130006],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[130033,130034],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[130708,130755],"content":"Except<T>(IEnumerable<T>, IEqualityComparer<T>)","needQuote":true,"nodes":[{"content":"Except&lt;T&gt;(IEnumerable&lt;T&gt;, IEqualityComparer&lt;T&gt;)","pos":[0,47],"source":"Except<T>(IEnumerable<T>, IEqualityComparer<T>)"}]},{"pos":[131272,131281],"content":"Except<T>","needQuote":true,"nodes":[{"content":"Except&lt;T&gt;","pos":[0,9],"source":"Except<T>"}]},{"pos":[131339,131340],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[131417,131428],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[131513,131514],"content":"<","needQuote":true,"nodes":[]},{"pos":[131541,131542],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[131602,131603]},{"pos":[131691,131708],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[131799,131800],"content":"<","needQuote":true,"nodes":[]},{"pos":[131827,131828],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[131887,131888],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[132063,132075],"content":"Except(Of T)","needQuote":true,"nodes":[{"content":"Except(Of T)","pos":[0,12]}]},{"pos":[132136,132137],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[132214,132225],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[132311,132314]},{"pos":[132348,132349],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[132376,132377],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[132405,132406]},{"pos":[132494,132511],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[132603,132606]},{"pos":[132640,132641],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[132668,132669],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[132696,132697],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[133277,133287],"content":"First<T>()","needQuote":true,"nodes":[{"content":"First&lt;T&gt;()","pos":[0,10],"source":"First<T>()"}]},{"pos":[133477,133485],"content":"First<T>","needQuote":true,"nodes":[{"content":"First&lt;T&gt;","pos":[0,8],"source":"First<T>"}]},{"pos":[133542,133543],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[133570,133571],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[133650,133661],"content":"First(Of T)","needQuote":true,"nodes":[{"content":"First(Of T)","pos":[0,11]}]},{"pos":[133721,133722],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[133749,133750],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[134220,134246],"content":"First<T>(Func<T, Boolean>)","needQuote":true,"nodes":[{"content":"First&lt;T&gt;(Func&lt;T, Boolean&gt;)","pos":[0,26],"source":"First<T>(Func<T, Boolean>)"}]},{"pos":[134551,134559],"content":"First<T>","needQuote":true,"nodes":[{"content":"First&lt;T&gt;","pos":[0,8],"source":"First<T>"}]},{"pos":[134616,134617],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[134667,134671],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[134729,134730],"content":"<","needQuote":true,"nodes":[]},{"pos":[134757,134758],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[134786,134787]},{"pos":[134843,134850],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[134943,134944],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[135056,135067],"content":"First(Of T)","needQuote":true,"nodes":[{"content":"First(Of T)","pos":[0,11]}]},{"pos":[135127,135128],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[135178,135182],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[135241,135244]},{"pos":[135278,135279],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[135307,135308]},{"pos":[135364,135371],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[135432,135433],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[135460,135461],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[135951,135970],"content":"FirstOrDefault<T>()","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;T&gt;()","pos":[0,19],"source":"FirstOrDefault<T>()"}]},{"pos":[136196,136213],"content":"FirstOrDefault<T>","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;T&gt;","pos":[0,17],"source":"FirstOrDefault<T>"}]},{"pos":[136279,136280],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[136307,136308],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[136396,136416],"content":"FirstOrDefault(Of T)","needQuote":true,"nodes":[{"content":"FirstOrDefault(Of T)","pos":[0,20]}]},{"pos":[136485,136486],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[136513,136514],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[137029,137064],"content":"FirstOrDefault<T>(Func<T, Boolean>)","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;T&gt;(Func&lt;T, Boolean&gt;)","pos":[0,35],"source":"FirstOrDefault<T>(Func<T, Boolean>)"}]},{"pos":[137405,137422],"content":"FirstOrDefault<T>","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;T&gt;","pos":[0,17],"source":"FirstOrDefault<T>"}]},{"pos":[137488,137489],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[137539,137543],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[137601,137602],"content":"<","needQuote":true,"nodes":[]},{"pos":[137629,137630],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[137658,137659]},{"pos":[137715,137722],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[137815,137816],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[137937,137957],"content":"FirstOrDefault(Of T)","needQuote":true,"nodes":[{"content":"FirstOrDefault(Of T)","pos":[0,20]}]},{"pos":[138026,138027],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[138077,138081],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[138140,138143]},{"pos":[138177,138178],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[138206,138207]},{"pos":[138263,138270],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[138331,138332],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[138359,138360],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[138909,138940],"content":"GroupBy<T, TKey>(Func<T, TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;T, TKey&gt;(Func&lt;T, TKey&gt;)","pos":[0,31],"source":"GroupBy<T, TKey>(Func<T, TKey>)"}]},{"pos":[139237,139253],"content":"GroupBy<T, TKey>","needQuote":true,"nodes":[{"content":"GroupBy&lt;T, TKey&gt;","pos":[0,16],"source":"GroupBy<T, TKey>"}]},{"pos":[139318,139319],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[139369,139373],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[139431,139432],"content":"<","needQuote":true,"nodes":[]},{"pos":[139459,139460],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[139488,139489]},{"pos":[139521,139525],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[139587,139588],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[139691,139710],"content":"GroupBy(Of T, TKey)","needQuote":true,"nodes":[{"content":"GroupBy(Of T, TKey)","pos":[0,19]}]},{"pos":[139778,139779],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[139829,139833],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[139892,139895]},{"pos":[139929,139930],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[139958,139959]},{"pos":[139991,139995],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[140025,140026],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[140053,140054],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[140680,140736],"content":"GroupBy<T, TKey>(Func<T, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;T, TKey&gt;(Func&lt;T, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,56],"source":"GroupBy<T, TKey>(Func<T, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[141218,141234],"content":"GroupBy<T, TKey>","needQuote":true,"nodes":[{"content":"GroupBy&lt;T, TKey&gt;","pos":[0,16],"source":"GroupBy<T, TKey>"}]},{"pos":[141299,141300],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[141350,141354],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[141412,141413],"content":"<","needQuote":true,"nodes":[]},{"pos":[141440,141441],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[141469,141470]},{"pos":[141502,141506],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[141569,141570]},{"pos":[141658,141675],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[141766,141767],"content":"<","needQuote":true,"nodes":[]},{"pos":[141794,141798],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[141860,141861],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[142014,142033],"content":"GroupBy(Of T, TKey)","needQuote":true,"nodes":[{"content":"GroupBy(Of T, TKey)","pos":[0,19]}]},{"pos":[142101,142102],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[142152,142156],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[142215,142218]},{"pos":[142252,142253],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[142281,142282]},{"pos":[142314,142318],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[142348,142349],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[142377,142378]},{"pos":[142466,142483],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[142575,142578]},{"pos":[142612,142616],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[142646,142647],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[142674,142675],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[143350,143410],"content":"GroupBy<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;T, TKey, TElement&gt;(Func&lt;T, TKey&gt;, Func&lt;T, TElement&gt;)","pos":[0,60],"source":"GroupBy<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>)"}]},{"pos":[143835,143861],"content":"GroupBy<T, TKey, TElement>","needQuote":true,"nodes":[{"content":"GroupBy&lt;T, TKey, TElement&gt;","pos":[0,26],"source":"GroupBy<T, TKey, TElement>"}]},{"pos":[143936,143937],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[143987,143991],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[144049,144050],"content":"<","needQuote":true,"nodes":[]},{"pos":[144077,144078],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[144106,144107]},{"pos":[144139,144143],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[144206,144207]},{"pos":[144262,144266],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[144324,144325],"content":"<","needQuote":true,"nodes":[]},{"pos":[144352,144353],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[144381,144382]},{"pos":[144414,144422],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[144488,144489],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[144613,144642],"content":"GroupBy(Of T, TKey, TElement)","needQuote":true,"nodes":[{"content":"GroupBy(Of T, TKey, TElement)","pos":[0,29]}]},{"pos":[144720,144721],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[144771,144775],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[144834,144837]},{"pos":[144871,144872],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[144900,144901]},{"pos":[144933,144937],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[144967,144968],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[144996,144997]},{"pos":[145052,145056],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[145115,145118]},{"pos":[145152,145153],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[145181,145182]},{"pos":[145214,145222],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[145256,145257],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[145284,145285],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[146042,146127],"content":"GroupBy<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;T, TKey, TElement&gt;(Func&lt;T, TKey&gt;, Func&lt;T, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,85],"source":"GroupBy<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[146737,146763],"content":"GroupBy<T, TKey, TElement>","needQuote":true,"nodes":[{"content":"GroupBy&lt;T, TKey, TElement&gt;","pos":[0,26],"source":"GroupBy<T, TKey, TElement>"}]},{"pos":[146838,146839],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[146889,146893],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[146951,146952],"content":"<","needQuote":true,"nodes":[]},{"pos":[146979,146980],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[147008,147009]},{"pos":[147041,147045],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[147108,147109]},{"pos":[147164,147168],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[147226,147227],"content":"<","needQuote":true,"nodes":[]},{"pos":[147254,147255],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[147283,147284]},{"pos":[147316,147324],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[147391,147392]},{"pos":[147480,147497],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[147588,147589],"content":"<","needQuote":true,"nodes":[]},{"pos":[147616,147620],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[147682,147683],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[147857,147886],"content":"GroupBy(Of T, TKey, TElement)","needQuote":true,"nodes":[{"content":"GroupBy(Of T, TKey, TElement)","pos":[0,29]}]},{"pos":[147964,147965],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[148015,148019],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[148078,148081]},{"pos":[148115,148116],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[148144,148145]},{"pos":[148177,148181],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[148211,148212],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[148240,148241]},{"pos":[148296,148300],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[148359,148362]},{"pos":[148396,148397],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[148425,148426]},{"pos":[148458,148466],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[148500,148501],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[148529,148530]},{"pos":[148618,148635],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[148727,148730]},{"pos":[148764,148768],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[148798,148799],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[148826,148827],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[149674,149751],"content":"GroupBy<T, TKey, TResult>(Func<T, TKey>, Func<TKey, IEnumerable<T>, TResult>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;T, TKey, TResult&gt;(Func&lt;T, TKey&gt;, Func&lt;TKey, IEnumerable&lt;T&gt;, TResult&gt;)","pos":[0,77],"source":"GroupBy<T, TKey, TResult>(Func<T, TKey>, Func<TKey, IEnumerable<T>, TResult>)"}]},{"pos":[150331,150356],"content":"GroupBy<T, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;T, TKey, TResult&gt;","pos":[0,25],"source":"GroupBy<T, TKey, TResult>"}]},{"pos":[150430,150431],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[150481,150485],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[150543,150544],"content":"<","needQuote":true,"nodes":[]},{"pos":[150571,150572],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[150600,150601]},{"pos":[150633,150637],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[150700,150701]},{"pos":[150756,150760],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[150818,150819],"content":"<","needQuote":true,"nodes":[]},{"pos":[150846,150850],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[150881,150882]},{"pos":[150964,150975],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[151060,151061],"content":"<","needQuote":true,"nodes":[]},{"pos":[151088,151089],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[151149,151150]},{"pos":[151182,151189],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[151254,151255],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[151423,151451],"content":"GroupBy(Of T, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of T, TKey, TResult)","pos":[0,28]}]},{"pos":[151528,151529],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[151579,151583],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[151642,151645]},{"pos":[151679,151680],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[151708,151709]},{"pos":[151741,151745],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[151775,151776],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[151804,151805]},{"pos":[151860,151864],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[151923,151926]},{"pos":[151960,151964],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[151995,151996]},{"pos":[152078,152089],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[152175,152178]},{"pos":[152212,152213],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[152240,152241],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[152269,152270]},{"pos":[152302,152309],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[152342,152343],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[152370,152371],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[153299,153401],"content":"GroupBy<T, TKey, TResult>(Func<T, TKey>, Func<TKey, IEnumerable<T>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;T, TKey, TResult&gt;(Func&lt;T, TKey&gt;, Func&lt;TKey, IEnumerable&lt;T&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,102],"source":"GroupBy<T, TKey, TResult>(Func<T, TKey>, Func<TKey, IEnumerable<T>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[154166,154191],"content":"GroupBy<T, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;T, TKey, TResult&gt;","pos":[0,25],"source":"GroupBy<T, TKey, TResult>"}]},{"pos":[154265,154266],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[154316,154320],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[154378,154379],"content":"<","needQuote":true,"nodes":[]},{"pos":[154406,154407],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[154435,154436]},{"pos":[154468,154472],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[154535,154536]},{"pos":[154591,154595],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[154653,154654],"content":"<","needQuote":true,"nodes":[]},{"pos":[154681,154685],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[154716,154717]},{"pos":[154799,154810],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[154895,154896],"content":"<","needQuote":true,"nodes":[]},{"pos":[154923,154924],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[154984,154985]},{"pos":[155017,155024],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[155090,155091]},{"pos":[155179,155196],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[155287,155288],"content":"<","needQuote":true,"nodes":[]},{"pos":[155315,155319],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[155381,155382],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[155600,155628],"content":"GroupBy(Of T, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of T, TKey, TResult)","pos":[0,28]}]},{"pos":[155705,155706],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[155756,155760],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[155819,155822]},{"pos":[155856,155857],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[155885,155886]},{"pos":[155918,155922],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[155952,155953],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[155981,155982]},{"pos":[156037,156041],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[156100,156103]},{"pos":[156137,156141],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[156172,156173]},{"pos":[156255,156266],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[156352,156355]},{"pos":[156389,156390],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[156417,156418],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[156446,156447]},{"pos":[156479,156486],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[156519,156520],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[156548,156549]},{"pos":[156637,156654],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[156746,156749]},{"pos":[156783,156787],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[156817,156818],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[156845,156846],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[157830,157943],"content":"GroupBy<T, TKey, TElement, TResult>(Func<T, TKey>, Func<T, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;T, TKey, TElement, TResult&gt;(Func&lt;T, TKey&gt;, Func&lt;T, TElement&gt;, Func&lt;TKey, IEnumerable&lt;TElement&gt;, TResult&gt;)","pos":[0,113],"source":"GroupBy<T, TKey, TElement, TResult>(Func<T, TKey>, Func<T, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)"}]},{"pos":[158672,158707],"content":"GroupBy<T, TKey, TElement, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;T, TKey, TElement, TResult&gt;","pos":[0,35],"source":"GroupBy<T, TKey, TElement, TResult>"}]},{"pos":[158791,158792],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[158842,158846],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[158904,158905],"content":"<","needQuote":true,"nodes":[]},{"pos":[158932,158933],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[158961,158962]},{"pos":[158994,158998],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[159061,159062]},{"pos":[159117,159121],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[159179,159180],"content":"<","needQuote":true,"nodes":[]},{"pos":[159207,159208],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[159236,159237]},{"pos":[159269,159277],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[159344,159345]},{"pos":[159400,159404],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[159462,159463],"content":"<","needQuote":true,"nodes":[]},{"pos":[159490,159494],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[159525,159526]},{"pos":[159608,159619],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[159704,159705],"content":"<","needQuote":true,"nodes":[]},{"pos":[159732,159740],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[159807,159808]},{"pos":[159840,159847],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[159912,159913],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[160102,160140],"content":"GroupBy(Of T, TKey, TElement, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of T, TKey, TElement, TResult)","pos":[0,38]}]},{"pos":[160227,160228],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[160278,160282],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[160341,160344]},{"pos":[160378,160379],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[160407,160408]},{"pos":[160440,160444],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[160474,160475],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[160503,160504]},{"pos":[160559,160563],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[160622,160625]},{"pos":[160659,160660],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[160688,160689]},{"pos":[160721,160729],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[160763,160764],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[160792,160793]},{"pos":[160848,160852],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[160911,160914]},{"pos":[160948,160952],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[160983,160984]},{"pos":[161066,161077],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[161163,161166]},{"pos":[161200,161208],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[161242,161243],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[161271,161272]},{"pos":[161304,161311],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[161344,161345],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[161372,161373],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[162453,162591],"content":"GroupBy<T, TKey, TElement, TResult>(Func<T, TKey>, Func<T, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;T, TKey, TElement, TResult&gt;(Func&lt;T, TKey&gt;, Func&lt;T, TElement&gt;, Func&lt;TKey, IEnumerable&lt;TElement&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,138],"source":"GroupBy<T, TKey, TElement, TResult>(Func<T, TKey>, Func<T, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[163505,163540],"content":"GroupBy<T, TKey, TElement, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;T, TKey, TElement, TResult&gt;","pos":[0,35],"source":"GroupBy<T, TKey, TElement, TResult>"}]},{"pos":[163624,163625],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[163675,163679],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[163737,163738],"content":"<","needQuote":true,"nodes":[]},{"pos":[163765,163766],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[163794,163795]},{"pos":[163827,163831],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[163894,163895]},{"pos":[163950,163954],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[164012,164013],"content":"<","needQuote":true,"nodes":[]},{"pos":[164040,164041],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[164069,164070]},{"pos":[164102,164110],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[164177,164178]},{"pos":[164233,164237],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[164295,164296],"content":"<","needQuote":true,"nodes":[]},{"pos":[164323,164327],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[164358,164359]},{"pos":[164441,164452],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[164537,164538],"content":"<","needQuote":true,"nodes":[]},{"pos":[164565,164573],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[164640,164641]},{"pos":[164673,164680],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[164746,164747]},{"pos":[164835,164852],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[164943,164944],"content":"<","needQuote":true,"nodes":[]},{"pos":[164971,164975],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[165037,165038],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[165277,165315],"content":"GroupBy(Of T, TKey, TElement, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of T, TKey, TElement, TResult)","pos":[0,38]}]},{"pos":[165402,165403],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[165453,165457],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[165516,165519]},{"pos":[165553,165554],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[165582,165583]},{"pos":[165615,165619],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[165649,165650],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[165678,165679]},{"pos":[165734,165738],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[165797,165800]},{"pos":[165834,165835],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[165863,165864]},{"pos":[165896,165904],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[165938,165939],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[165967,165968]},{"pos":[166023,166027],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[166086,166089]},{"pos":[166123,166127],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[166158,166159]},{"pos":[166241,166252],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[166338,166341]},{"pos":[166375,166383],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[166417,166418],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[166446,166447]},{"pos":[166479,166486],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[166519,166520],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[166548,166549]},{"pos":[166637,166654],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[166746,166749]},{"pos":[166783,166787],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[166817,166818],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[166845,166846],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[168019,168149],"content":"GroupJoin<T, TInner, TKey, TResult>(IEnumerable<TInner>, Func<T, TKey>, Func<TInner, TKey>, Func<T, IEnumerable<TInner>, TResult>)","needQuote":true,"nodes":[{"content":"GroupJoin&lt;T, TInner, TKey, TResult&gt;(IEnumerable&lt;TInner&gt;, Func&lt;T, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;T, IEnumerable&lt;TInner&gt;, TResult&gt;)","pos":[0,130],"source":"GroupJoin<T, TInner, TKey, TResult>(IEnumerable<TInner>, Func<T, TKey>, Func<TInner, TKey>, Func<T, IEnumerable<TInner>, TResult>)"}]},{"pos":[169035,169070],"content":"GroupJoin<T, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupJoin&lt;T, TInner, TKey, TResult&gt;","pos":[0,35],"source":"GroupJoin<T, TInner, TKey, TResult>"}]},{"pos":[169154,169155],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[169232,169243],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[169328,169329],"content":"<","needQuote":true,"nodes":[]},{"pos":[169356,169362],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[169427,169428]},{"pos":[169483,169487],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[169545,169546],"content":"<","needQuote":true,"nodes":[]},{"pos":[169573,169574],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[169602,169603]},{"pos":[169635,169639],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[169702,169703]},{"pos":[169758,169762],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[169820,169821],"content":"<","needQuote":true,"nodes":[]},{"pos":[169848,169854],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[169887,169888]},{"pos":[169920,169924],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[169987,169988]},{"pos":[170043,170047],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[170105,170106],"content":"<","needQuote":true,"nodes":[]},{"pos":[170133,170134],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[170162,170163]},{"pos":[170245,170256],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[170341,170342],"content":"<","needQuote":true,"nodes":[]},{"pos":[170369,170375],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[170440,170441]},{"pos":[170473,170480],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[170545,170546],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[170781,170819],"content":"GroupJoin(Of T, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupJoin(Of T, TInner, TKey, TResult)","pos":[0,38]}]},{"pos":[170906,170907],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[170984,170995],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[171081,171084]},{"pos":[171118,171124],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[171156,171157],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[171185,171186]},{"pos":[171241,171245],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[171304,171307]},{"pos":[171341,171342],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[171370,171371]},{"pos":[171403,171407],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[171437,171438],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[171466,171467]},{"pos":[171522,171526],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[171585,171588]},{"pos":[171622,171628],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[171661,171662]},{"pos":[171694,171698],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[171728,171729],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[171757,171758]},{"pos":[171813,171817],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[171876,171879]},{"pos":[171913,171914],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[171942,171943]},{"pos":[172025,172036],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[172122,172125]},{"pos":[172159,172165],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[172197,172198],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[172226,172227]},{"pos":[172259,172266],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[172299,172300],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[172327,172328],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[173584,173739],"content":"GroupJoin<T, TInner, TKey, TResult>(IEnumerable<TInner>, Func<T, TKey>, Func<TInner, TKey>, Func<T, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupJoin&lt;T, TInner, TKey, TResult&gt;(IEnumerable&lt;TInner&gt;, Func&lt;T, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;T, IEnumerable&lt;TInner&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,155],"source":"GroupJoin<T, TInner, TKey, TResult>(IEnumerable<TInner>, Func<T, TKey>, Func<TInner, TKey>, Func<T, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[174810,174845],"content":"GroupJoin<T, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupJoin&lt;T, TInner, TKey, TResult&gt;","pos":[0,35],"source":"GroupJoin<T, TInner, TKey, TResult>"}]},{"pos":[174929,174930],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[175007,175018],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[175103,175104],"content":"<","needQuote":true,"nodes":[]},{"pos":[175131,175137],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[175202,175203]},{"pos":[175258,175262],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[175320,175321],"content":"<","needQuote":true,"nodes":[]},{"pos":[175348,175349],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[175377,175378]},{"pos":[175410,175414],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[175477,175478]},{"pos":[175533,175537],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[175595,175596],"content":"<","needQuote":true,"nodes":[]},{"pos":[175623,175629],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[175662,175663]},{"pos":[175695,175699],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[175762,175763]},{"pos":[175818,175822],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[175880,175881],"content":"<","needQuote":true,"nodes":[]},{"pos":[175908,175909],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[175937,175938]},{"pos":[176020,176031],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[176116,176117],"content":"<","needQuote":true,"nodes":[]},{"pos":[176144,176150],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[176215,176216]},{"pos":[176248,176255],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[176321,176322]},{"pos":[176410,176427],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[176518,176519],"content":"<","needQuote":true,"nodes":[]},{"pos":[176546,176550],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[176612,176613],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[176898,176936],"content":"GroupJoin(Of T, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupJoin(Of T, TInner, TKey, TResult)","pos":[0,38]}]},{"pos":[177023,177024],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[177101,177112],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[177198,177201]},{"pos":[177235,177241],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[177273,177274],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[177302,177303]},{"pos":[177358,177362],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[177421,177424]},{"pos":[177458,177459],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[177487,177488]},{"pos":[177520,177524],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[177554,177555],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[177583,177584]},{"pos":[177639,177643],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[177702,177705]},{"pos":[177739,177745],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[177778,177779]},{"pos":[177811,177815],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[177845,177846],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[177874,177875]},{"pos":[177930,177934],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[177993,177996]},{"pos":[178030,178031],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[178059,178060]},{"pos":[178142,178153],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[178239,178242]},{"pos":[178276,178282],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[178314,178315],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[178343,178344]},{"pos":[178376,178383],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[178416,178417],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[178445,178446]},{"pos":[178534,178551],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[178643,178646]},{"pos":[178680,178684],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[178714,178715],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[178742,178743],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[179758,179786],"content":"Intersect<T>(IEnumerable<T>)","needQuote":true,"nodes":[{"content":"Intersect&lt;T&gt;(IEnumerable&lt;T&gt;)","pos":[0,28],"source":"Intersect<T>(IEnumerable<T>)"}]},{"pos":[180139,180151],"content":"Intersect<T>","needQuote":true,"nodes":[{"content":"Intersect&lt;T&gt;","pos":[0,12],"source":"Intersect<T>"}]},{"pos":[180212,180213],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[180290,180301],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[180386,180387],"content":"<","needQuote":true,"nodes":[]},{"pos":[180414,180415],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[180474,180475],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[180603,180618],"content":"Intersect(Of T)","needQuote":true,"nodes":[{"content":"Intersect(Of T)","pos":[0,15]}]},{"pos":[180682,180683],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[180760,180771],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[180857,180860]},{"pos":[180894,180895],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[180922,180923],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[180950,180951],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[181640,181690],"content":"Intersect<T>(IEnumerable<T>, IEqualityComparer<T>)","needQuote":true,"nodes":[{"content":"Intersect&lt;T&gt;(IEnumerable&lt;T&gt;, IEqualityComparer&lt;T&gt;)","pos":[0,50],"source":"Intersect<T>(IEnumerable<T>, IEqualityComparer<T>)"}]},{"pos":[182219,182231],"content":"Intersect<T>","needQuote":true,"nodes":[{"content":"Intersect&lt;T&gt;","pos":[0,12],"source":"Intersect<T>"}]},{"pos":[182292,182293],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[182370,182381],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[182466,182467],"content":"<","needQuote":true,"nodes":[]},{"pos":[182494,182495],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[182555,182556]},{"pos":[182644,182661],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[182752,182753],"content":"<","needQuote":true,"nodes":[]},{"pos":[182780,182781],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[182840,182841],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[183019,183034],"content":"Intersect(Of T)","needQuote":true,"nodes":[{"content":"Intersect(Of T)","pos":[0,15]}]},{"pos":[183098,183099],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[183176,183187],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[183273,183276]},{"pos":[183310,183311],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[183338,183339],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[183367,183368]},{"pos":[183456,183473],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[183565,183568]},{"pos":[183602,183603],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[183630,183631],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[183658,183659],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[184496,184608],"content":"Join<T, TInner, TKey, TResult>(IEnumerable<TInner>, Func<T, TKey>, Func<TInner, TKey>, Func<T, TInner, TResult>)","needQuote":true,"nodes":[{"content":"Join&lt;T, TInner, TKey, TResult&gt;(IEnumerable&lt;TInner&gt;, Func&lt;T, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;T, TInner, TResult&gt;)","pos":[0,112],"source":"Join<T, TInner, TKey, TResult>(IEnumerable<TInner>, Func<T, TKey>, Func<TInner, TKey>, Func<T, TInner, TResult>)"}]},{"pos":[185335,185365],"content":"Join<T, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"Join&lt;T, TInner, TKey, TResult&gt;","pos":[0,30],"source":"Join<T, TInner, TKey, TResult>"}]},{"pos":[185444,185445],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[185522,185533],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[185618,185619],"content":"<","needQuote":true,"nodes":[]},{"pos":[185646,185652],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[185717,185718]},{"pos":[185773,185777],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[185835,185836],"content":"<","needQuote":true,"nodes":[]},{"pos":[185863,185864],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[185892,185893]},{"pos":[185925,185929],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[185992,185993]},{"pos":[186048,186052],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[186110,186111],"content":"<","needQuote":true,"nodes":[]},{"pos":[186138,186144],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[186177,186178]},{"pos":[186210,186214],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[186277,186278]},{"pos":[186333,186337],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[186395,186396],"content":"<","needQuote":true,"nodes":[]},{"pos":[186423,186424],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[186452,186453]},{"pos":[186485,186491],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[186524,186525]},{"pos":[186557,186564],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[186629,186630],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[186820,186853],"content":"Join(Of T, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"Join(Of T, TInner, TKey, TResult)","pos":[0,33]}]},{"pos":[186935,186936],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[187013,187024],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[187110,187113]},{"pos":[187147,187153],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[187185,187186],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[187214,187215]},{"pos":[187270,187274],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[187333,187336]},{"pos":[187370,187371],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[187399,187400]},{"pos":[187432,187436],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[187466,187467],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[187495,187496]},{"pos":[187551,187555],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[187614,187617]},{"pos":[187651,187657],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[187690,187691]},{"pos":[187723,187727],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[187757,187758],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[187786,187787]},{"pos":[187842,187846],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[187905,187908]},{"pos":[187942,187943],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[187971,187972]},{"pos":[188004,188010],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[188043,188044]},{"pos":[188076,188083],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[188116,188117],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[188144,188145],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[189227,189364],"content":"Join<T, TInner, TKey, TResult>(IEnumerable<TInner>, Func<T, TKey>, Func<TInner, TKey>, Func<T, TInner, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"Join&lt;T, TInner, TKey, TResult&gt;(IEnumerable&lt;TInner&gt;, Func&lt;T, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;T, TInner, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,137],"source":"Join<T, TInner, TKey, TResult>(IEnumerable<TInner>, Func<T, TKey>, Func<TInner, TKey>, Func<T, TInner, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[190276,190306],"content":"Join<T, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"Join&lt;T, TInner, TKey, TResult&gt;","pos":[0,30],"source":"Join<T, TInner, TKey, TResult>"}]},{"pos":[190385,190386],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[190463,190474],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[190559,190560],"content":"<","needQuote":true,"nodes":[]},{"pos":[190587,190593],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[190658,190659]},{"pos":[190714,190718],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[190776,190777],"content":"<","needQuote":true,"nodes":[]},{"pos":[190804,190805],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[190833,190834]},{"pos":[190866,190870],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[190933,190934]},{"pos":[190989,190993],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[191051,191052],"content":"<","needQuote":true,"nodes":[]},{"pos":[191079,191085],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[191118,191119]},{"pos":[191151,191155],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[191218,191219]},{"pos":[191274,191278],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[191336,191337],"content":"<","needQuote":true,"nodes":[]},{"pos":[191364,191365],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[191393,191394]},{"pos":[191426,191432],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[191465,191466]},{"pos":[191498,191505],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[191571,191572]},{"pos":[191660,191677],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[191768,191769],"content":"<","needQuote":true,"nodes":[]},{"pos":[191796,191800],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[191862,191863],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[192103,192136],"content":"Join(Of T, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"Join(Of T, TInner, TKey, TResult)","pos":[0,33]}]},{"pos":[192218,192219],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[192296,192307],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[192393,192396]},{"pos":[192430,192436],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[192468,192469],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[192497,192498]},{"pos":[192553,192557],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[192616,192619]},{"pos":[192653,192654],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[192682,192683]},{"pos":[192715,192719],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[192749,192750],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[192778,192779]},{"pos":[192834,192838],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[192897,192900]},{"pos":[192934,192940],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[192973,192974]},{"pos":[193006,193010],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[193040,193041],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[193069,193070]},{"pos":[193125,193129],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[193188,193191]},{"pos":[193225,193226],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[193254,193255]},{"pos":[193287,193293],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[193326,193327]},{"pos":[193359,193366],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[193399,193400],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[193428,193429]},{"pos":[193517,193534],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[193626,193629]},{"pos":[193663,193667],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[193697,193698],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[193725,193726],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[194558,194567],"content":"Last<T>()","needQuote":true,"nodes":[{"content":"Last&lt;T&gt;()","pos":[0,9],"source":"Last<T>()"}]},{"pos":[194753,194760],"content":"Last<T>","needQuote":true,"nodes":[{"content":"Last&lt;T&gt;","pos":[0,7],"source":"Last<T>"}]},{"pos":[194816,194817],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[194844,194845],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[194923,194933],"content":"Last(Of T)","needQuote":true,"nodes":[{"content":"Last(Of T)","pos":[0,10]}]},{"pos":[194992,194993],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[195020,195021],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[195486,195511],"content":"Last<T>(Func<T, Boolean>)","needQuote":true,"nodes":[{"content":"Last&lt;T&gt;(Func&lt;T, Boolean&gt;)","pos":[0,25],"source":"Last<T>(Func<T, Boolean>)"}]},{"pos":[195812,195819],"content":"Last<T>","needQuote":true,"nodes":[{"content":"Last&lt;T&gt;","pos":[0,7],"source":"Last<T>"}]},{"pos":[195875,195876],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[195926,195930],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[195988,195989],"content":"<","needQuote":true,"nodes":[]},{"pos":[196016,196017],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[196045,196046]},{"pos":[196102,196109],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[196202,196203],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[196314,196324],"content":"Last(Of T)","needQuote":true,"nodes":[{"content":"Last(Of T)","pos":[0,10]}]},{"pos":[196383,196384],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[196434,196438],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[196497,196500]},{"pos":[196534,196535],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[196563,196564]},{"pos":[196620,196627],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[196688,196689],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[196716,196717],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[197202,197220],"content":"LastOrDefault<T>()","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;T&gt;()","pos":[0,18],"source":"LastOrDefault<T>()"}]},{"pos":[197442,197458],"content":"LastOrDefault<T>","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;T&gt;","pos":[0,16],"source":"LastOrDefault<T>"}]},{"pos":[197523,197524],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[197551,197552],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[197639,197658],"content":"LastOrDefault(Of T)","needQuote":true,"nodes":[{"content":"LastOrDefault(Of T)","pos":[0,19]}]},{"pos":[197726,197727],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[197754,197755],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[198265,198299],"content":"LastOrDefault<T>(Func<T, Boolean>)","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;T&gt;(Func&lt;T, Boolean&gt;)","pos":[0,34],"source":"LastOrDefault<T>(Func<T, Boolean>)"}]},{"pos":[198636,198652],"content":"LastOrDefault<T>","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;T&gt;","pos":[0,16],"source":"LastOrDefault<T>"}]},{"pos":[198717,198718],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[198768,198772],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[198830,198831],"content":"<","needQuote":true,"nodes":[]},{"pos":[198858,198859],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[198887,198888]},{"pos":[198944,198951],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[199044,199045],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[199165,199184],"content":"LastOrDefault(Of T)","needQuote":true,"nodes":[{"content":"LastOrDefault(Of T)","pos":[0,19]}]},{"pos":[199252,199253],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[199303,199307],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[199366,199369]},{"pos":[199403,199404],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[199432,199433]},{"pos":[199489,199496],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[199557,199558],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[199585,199586],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[200090,200104],"content":"LongCount<T>()","needQuote":true,"nodes":[{"content":"LongCount&lt;T&gt;()","pos":[0,14],"source":"LongCount<T>()"}]},{"pos":[200310,200322],"content":"LongCount<T>","needQuote":true,"nodes":[{"content":"LongCount&lt;T&gt;","pos":[0,12],"source":"LongCount<T>"}]},{"pos":[200383,200384],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[200411,200412],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[200495,200510],"content":"LongCount(Of T)","needQuote":true,"nodes":[{"content":"LongCount(Of T)","pos":[0,15]}]},{"pos":[200574,200575],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[200602,200603],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[201093,201123],"content":"LongCount<T>(Func<T, Boolean>)","needQuote":true,"nodes":[{"content":"LongCount&lt;T&gt;(Func&lt;T, Boolean&gt;)","pos":[0,30],"source":"LongCount<T>(Func<T, Boolean>)"}]},{"pos":[201444,201456],"content":"LongCount<T>","needQuote":true,"nodes":[{"content":"LongCount&lt;T&gt;","pos":[0,12],"source":"LongCount<T>"}]},{"pos":[201517,201518],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[201568,201572],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[201630,201631],"content":"<","needQuote":true,"nodes":[]},{"pos":[201658,201659],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[201687,201688]},{"pos":[201744,201751],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[201844,201845],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[201961,201976],"content":"LongCount(Of T)","needQuote":true,"nodes":[{"content":"LongCount(Of T)","pos":[0,15]}]},{"pos":[202040,202041],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[202091,202095],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[202154,202157]},{"pos":[202191,202192],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[202220,202221]},{"pos":[202277,202284],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[202345,202346],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[202373,202374],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[202854,202862],"content":"Max<T>()","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;()","pos":[0,8],"source":"Max<T>()"}]},{"pos":[203044,203050],"content":"Max<T>","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;","pos":[0,6],"source":"Max<T>"}]},{"pos":[203105,203106],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[203133,203134],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[203211,203220],"content":"Max(Of T)","needQuote":true,"nodes":[{"content":"Max(Of T)","pos":[0,9]}]},{"pos":[203278,203279],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[203306,203307],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[203767,203791],"content":"Max<T>(Func<T, Decimal>)","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;(Func&lt;T, Decimal&gt;)","pos":[0,24],"source":"Max<T>(Func<T, Decimal>)"}]},{"pos":[204088,204094],"content":"Max<T>","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;","pos":[0,6],"source":"Max<T>"}]},{"pos":[204149,204150],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[204200,204204],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[204262,204263],"content":"<","needQuote":true,"nodes":[]},{"pos":[204290,204291],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[204319,204320]},{"pos":[204376,204383],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[204476,204477],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[204587,204596],"content":"Max(Of T)","needQuote":true,"nodes":[{"content":"Max(Of T)","pos":[0,9]}]},{"pos":[204654,204655],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[204705,204709],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[204768,204771]},{"pos":[204805,204806],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[204834,204835]},{"pos":[204891,204898],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[204959,204960],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[204987,204988],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[205513,205536],"content":"Max<T>(Func<T, Double>)","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;(Func&lt;T, Double&gt;)","pos":[0,23],"source":"Max<T>(Func<T, Double>)"}]},{"pos":[205829,205835],"content":"Max<T>","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;","pos":[0,6],"source":"Max<T>"}]},{"pos":[205890,205891],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[205941,205945],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[206003,206004],"content":"<","needQuote":true,"nodes":[]},{"pos":[206031,206032],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[206060,206061]},{"pos":[206116,206122],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[206214,206215],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[206324,206333],"content":"Max(Of T)","needQuote":true,"nodes":[{"content":"Max(Of T)","pos":[0,9]}]},{"pos":[206391,206392],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[206442,206446],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[206505,206508]},{"pos":[206542,206543],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[206571,206572]},{"pos":[206627,206633],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[206693,206694],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[206721,206722],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[207242,207264],"content":"Max<T>(Func<T, Int32>)","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;(Func&lt;T, Int32&gt;)","pos":[0,22],"source":"Max<T>(Func<T, Int32>)"}]},{"pos":[207553,207559],"content":"Max<T>","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;","pos":[0,6],"source":"Max<T>"}]},{"pos":[207614,207615],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[207665,207669],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[207727,207728],"content":"<","needQuote":true,"nodes":[]},{"pos":[207755,207756],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[207784,207785]},{"pos":[207839,207844],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[207935,207936],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[208044,208053],"content":"Max(Of T)","needQuote":true,"nodes":[{"content":"Max(Of T)","pos":[0,9]}]},{"pos":[208111,208112],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[208162,208166],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[208225,208228]},{"pos":[208262,208263],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[208291,208292]},{"pos":[208346,208351],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[208410,208411],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[208438,208439],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[208956,208978],"content":"Max<T>(Func<T, Int64>)","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;(Func&lt;T, Int64&gt;)","pos":[0,22],"source":"Max<T>(Func<T, Int64>)"}]},{"pos":[209267,209273],"content":"Max<T>","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;","pos":[0,6],"source":"Max<T>"}]},{"pos":[209328,209329],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[209379,209383],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[209441,209442],"content":"<","needQuote":true,"nodes":[]},{"pos":[209469,209470],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[209498,209499]},{"pos":[209553,209558],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[209649,209650],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[209758,209767],"content":"Max(Of T)","needQuote":true,"nodes":[{"content":"Max(Of T)","pos":[0,9]}]},{"pos":[209825,209826],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[209876,209880],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[209939,209942]},{"pos":[209976,209977],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[210005,210006]},{"pos":[210060,210065],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[210124,210125],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[210152,210153],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[210708,210742],"content":"Max<T>(Func<T, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;(Func&lt;T, Nullable&lt;Decimal&gt;&gt;)","pos":[0,34],"source":"Max<T>(Func<T, Nullable<Decimal>>)"}]},{"pos":[211106,211112],"content":"Max<T>","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;","pos":[0,6],"source":"Max<T>"}]},{"pos":[211167,211168],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[211218,211222],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[211280,211281],"content":"<","needQuote":true,"nodes":[]},{"pos":[211308,211309],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[211337,211338]},{"pos":[211397,211405],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[211467,211468],"content":"<","needQuote":true,"nodes":[]},{"pos":[211519,211526],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[211651,211652],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[211779,211788],"content":"Max(Of T)","needQuote":true,"nodes":[{"content":"Max(Of T)","pos":[0,9]}]},{"pos":[211846,211847],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[211897,211901],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[211960,211963]},{"pos":[211997,211998],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[212026,212027]},{"pos":[212086,212094],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[212157,212160]},{"pos":[212218,212225],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[212286,212287],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[212314,212315],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[212342,212343],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[212942,212975],"content":"Max<T>(Func<T, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;(Func&lt;T, Nullable&lt;Double&gt;&gt;)","pos":[0,33],"source":"Max<T>(Func<T, Nullable<Double>>)"}]},{"pos":[213335,213341],"content":"Max<T>","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;","pos":[0,6],"source":"Max<T>"}]},{"pos":[213396,213397],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[213447,213451],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[213509,213510],"content":"<","needQuote":true,"nodes":[]},{"pos":[213537,213538],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[213566,213567]},{"pos":[213626,213634],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[213696,213697],"content":"<","needQuote":true,"nodes":[]},{"pos":[213747,213753],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[213877,213878],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[214004,214013],"content":"Max(Of T)","needQuote":true,"nodes":[{"content":"Max(Of T)","pos":[0,9]}]},{"pos":[214071,214072],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[214122,214126],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[214185,214188]},{"pos":[214222,214223],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[214251,214252]},{"pos":[214311,214319],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[214382,214385]},{"pos":[214442,214448],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[214508,214509],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[214536,214537],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[214564,214565],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[215159,215191],"content":"Max<T>(Func<T, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;(Func&lt;T, Nullable&lt;Int32&gt;&gt;)","pos":[0,32],"source":"Max<T>(Func<T, Nullable<Int32>>)"}]},{"pos":[215547,215553],"content":"Max<T>","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;","pos":[0,6],"source":"Max<T>"}]},{"pos":[215608,215609],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[215659,215663],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[215721,215722],"content":"<","needQuote":true,"nodes":[]},{"pos":[215749,215750],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[215778,215779]},{"pos":[215838,215846],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[215908,215909],"content":"<","needQuote":true,"nodes":[]},{"pos":[215958,215963],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[216086,216087],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[216212,216221],"content":"Max(Of T)","needQuote":true,"nodes":[{"content":"Max(Of T)","pos":[0,9]}]},{"pos":[216279,216280],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[216330,216334],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[216393,216396]},{"pos":[216430,216431],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[216459,216460]},{"pos":[216519,216527],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[216590,216593]},{"pos":[216649,216654],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[216713,216714],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[216741,216742],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[216769,216770],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[217361,217393],"content":"Max<T>(Func<T, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;(Func&lt;T, Nullable&lt;Int64&gt;&gt;)","pos":[0,32],"source":"Max<T>(Func<T, Nullable<Int64>>)"}]},{"pos":[217749,217755],"content":"Max<T>","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;","pos":[0,6],"source":"Max<T>"}]},{"pos":[217810,217811],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[217861,217865],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[217923,217924],"content":"<","needQuote":true,"nodes":[]},{"pos":[217951,217952],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[217980,217981]},{"pos":[218040,218048],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[218110,218111],"content":"<","needQuote":true,"nodes":[]},{"pos":[218160,218165],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[218288,218289],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[218414,218423],"content":"Max(Of T)","needQuote":true,"nodes":[{"content":"Max(Of T)","pos":[0,9]}]},{"pos":[218481,218482],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[218532,218536],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[218595,218598]},{"pos":[218632,218633],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[218661,218662]},{"pos":[218721,218729],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[218792,218795]},{"pos":[218851,218856],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[218915,218916],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[218943,218944],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[218971,218972],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[219565,219598],"content":"Max<T>(Func<T, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;(Func&lt;T, Nullable&lt;Single&gt;&gt;)","pos":[0,33],"source":"Max<T>(Func<T, Nullable<Single>>)"}]},{"pos":[219958,219964],"content":"Max<T>","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;","pos":[0,6],"source":"Max<T>"}]},{"pos":[220019,220020],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[220070,220074],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[220132,220133],"content":"<","needQuote":true,"nodes":[]},{"pos":[220160,220161],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[220189,220190]},{"pos":[220249,220257],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[220319,220320],"content":"<","needQuote":true,"nodes":[]},{"pos":[220370,220376],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[220500,220501],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[220627,220636],"content":"Max(Of T)","needQuote":true,"nodes":[{"content":"Max(Of T)","pos":[0,9]}]},{"pos":[220694,220695],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[220745,220749],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[220808,220811]},{"pos":[220845,220846],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[220874,220875]},{"pos":[220934,220942],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[221005,221008]},{"pos":[221065,221071],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[221131,221132],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[221159,221160],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[221187,221188],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[221750,221773],"content":"Max<T>(Func<T, Single>)","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;(Func&lt;T, Single&gt;)","pos":[0,23],"source":"Max<T>(Func<T, Single>)"}]},{"pos":[222066,222072],"content":"Max<T>","needQuote":true,"nodes":[{"content":"Max&lt;T&gt;","pos":[0,6],"source":"Max<T>"}]},{"pos":[222127,222128],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[222178,222182],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[222240,222241],"content":"<","needQuote":true,"nodes":[]},{"pos":[222268,222269],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[222297,222298]},{"pos":[222353,222359],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[222451,222452],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[222561,222570],"content":"Max(Of T)","needQuote":true,"nodes":[{"content":"Max(Of T)","pos":[0,9]}]},{"pos":[222628,222629],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[222679,222683],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[222742,222745]},{"pos":[222779,222780],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[222808,222809]},{"pos":[222864,222870],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[222930,222931],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[222958,222959],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[223467,223500],"content":"Max<T, TResult>(Func<T, TResult>)","needQuote":true,"nodes":[{"content":"Max&lt;T, TResult&gt;(Func&lt;T, TResult&gt;)","pos":[0,33],"source":"Max<T, TResult>(Func<T, TResult>)"}]},{"pos":[223799,223814],"content":"Max<T, TResult>","needQuote":true,"nodes":[{"content":"Max&lt;T, TResult&gt;","pos":[0,15],"source":"Max<T, TResult>"}]},{"pos":[223878,223879],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[223929,223933],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[223991,223992],"content":"<","needQuote":true,"nodes":[]},{"pos":[224019,224020],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[224048,224049]},{"pos":[224081,224088],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[224153,224154],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[224253,224271],"content":"Max(Of T, TResult)","needQuote":true,"nodes":[{"content":"Max(Of T, TResult)","pos":[0,18]}]},{"pos":[224338,224339],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[224389,224393],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[224452,224455]},{"pos":[224489,224490],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[224518,224519]},{"pos":[224551,224558],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[224591,224592],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[224619,224620],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[225089,225097],"content":"Min<T>()","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;()","pos":[0,8],"source":"Min<T>()"}]},{"pos":[225279,225285],"content":"Min<T>","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;","pos":[0,6],"source":"Min<T>"}]},{"pos":[225340,225341],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[225368,225369],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[225446,225455],"content":"Min(Of T)","needQuote":true,"nodes":[{"content":"Min(Of T)","pos":[0,9]}]},{"pos":[225513,225514],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[225541,225542],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[226002,226026],"content":"Min<T>(Func<T, Decimal>)","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;(Func&lt;T, Decimal&gt;)","pos":[0,24],"source":"Min<T>(Func<T, Decimal>)"}]},{"pos":[226323,226329],"content":"Min<T>","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;","pos":[0,6],"source":"Min<T>"}]},{"pos":[226384,226385],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[226435,226439],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[226497,226498],"content":"<","needQuote":true,"nodes":[]},{"pos":[226525,226526],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[226554,226555]},{"pos":[226611,226618],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[226711,226712],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[226822,226831],"content":"Min(Of T)","needQuote":true,"nodes":[{"content":"Min(Of T)","pos":[0,9]}]},{"pos":[226889,226890],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[226940,226944],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[227003,227006]},{"pos":[227040,227041],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[227069,227070]},{"pos":[227126,227133],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[227194,227195],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[227222,227223],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[227748,227771],"content":"Min<T>(Func<T, Double>)","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;(Func&lt;T, Double&gt;)","pos":[0,23],"source":"Min<T>(Func<T, Double>)"}]},{"pos":[228064,228070],"content":"Min<T>","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;","pos":[0,6],"source":"Min<T>"}]},{"pos":[228125,228126],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[228176,228180],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[228238,228239],"content":"<","needQuote":true,"nodes":[]},{"pos":[228266,228267],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[228295,228296]},{"pos":[228351,228357],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[228449,228450],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[228559,228568],"content":"Min(Of T)","needQuote":true,"nodes":[{"content":"Min(Of T)","pos":[0,9]}]},{"pos":[228626,228627],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[228677,228681],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[228740,228743]},{"pos":[228777,228778],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[228806,228807]},{"pos":[228862,228868],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[228928,228929],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[228956,228957],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[229477,229499],"content":"Min<T>(Func<T, Int32>)","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;(Func&lt;T, Int32&gt;)","pos":[0,22],"source":"Min<T>(Func<T, Int32>)"}]},{"pos":[229788,229794],"content":"Min<T>","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;","pos":[0,6],"source":"Min<T>"}]},{"pos":[229849,229850],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[229900,229904],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[229962,229963],"content":"<","needQuote":true,"nodes":[]},{"pos":[229990,229991],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[230019,230020]},{"pos":[230074,230079],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[230170,230171],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[230279,230288],"content":"Min(Of T)","needQuote":true,"nodes":[{"content":"Min(Of T)","pos":[0,9]}]},{"pos":[230346,230347],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[230397,230401],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[230460,230463]},{"pos":[230497,230498],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[230526,230527]},{"pos":[230581,230586],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[230645,230646],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[230673,230674],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[231191,231213],"content":"Min<T>(Func<T, Int64>)","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;(Func&lt;T, Int64&gt;)","pos":[0,22],"source":"Min<T>(Func<T, Int64>)"}]},{"pos":[231502,231508],"content":"Min<T>","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;","pos":[0,6],"source":"Min<T>"}]},{"pos":[231563,231564],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[231614,231618],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[231676,231677],"content":"<","needQuote":true,"nodes":[]},{"pos":[231704,231705],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[231733,231734]},{"pos":[231788,231793],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[231884,231885],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[231993,232002],"content":"Min(Of T)","needQuote":true,"nodes":[{"content":"Min(Of T)","pos":[0,9]}]},{"pos":[232060,232061],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[232111,232115],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[232174,232177]},{"pos":[232211,232212],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[232240,232241]},{"pos":[232295,232300],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[232359,232360],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[232387,232388],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[232943,232977],"content":"Min<T>(Func<T, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;(Func&lt;T, Nullable&lt;Decimal&gt;&gt;)","pos":[0,34],"source":"Min<T>(Func<T, Nullable<Decimal>>)"}]},{"pos":[233341,233347],"content":"Min<T>","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;","pos":[0,6],"source":"Min<T>"}]},{"pos":[233402,233403],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[233453,233457],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[233515,233516],"content":"<","needQuote":true,"nodes":[]},{"pos":[233543,233544],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[233572,233573]},{"pos":[233632,233640],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[233702,233703],"content":"<","needQuote":true,"nodes":[]},{"pos":[233754,233761],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[233886,233887],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[234014,234023],"content":"Min(Of T)","needQuote":true,"nodes":[{"content":"Min(Of T)","pos":[0,9]}]},{"pos":[234081,234082],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[234132,234136],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[234195,234198]},{"pos":[234232,234233],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[234261,234262]},{"pos":[234321,234329],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[234392,234395]},{"pos":[234453,234460],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[234521,234522],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[234549,234550],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[234577,234578],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[235177,235210],"content":"Min<T>(Func<T, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;(Func&lt;T, Nullable&lt;Double&gt;&gt;)","pos":[0,33],"source":"Min<T>(Func<T, Nullable<Double>>)"}]},{"pos":[235570,235576],"content":"Min<T>","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;","pos":[0,6],"source":"Min<T>"}]},{"pos":[235631,235632],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[235682,235686],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[235744,235745],"content":"<","needQuote":true,"nodes":[]},{"pos":[235772,235773],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[235801,235802]},{"pos":[235861,235869],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[235931,235932],"content":"<","needQuote":true,"nodes":[]},{"pos":[235982,235988],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[236112,236113],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[236239,236248],"content":"Min(Of T)","needQuote":true,"nodes":[{"content":"Min(Of T)","pos":[0,9]}]},{"pos":[236306,236307],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[236357,236361],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[236420,236423]},{"pos":[236457,236458],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[236486,236487]},{"pos":[236546,236554],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[236617,236620]},{"pos":[236677,236683],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[236743,236744],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[236771,236772],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[236799,236800],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[237394,237426],"content":"Min<T>(Func<T, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;(Func&lt;T, Nullable&lt;Int32&gt;&gt;)","pos":[0,32],"source":"Min<T>(Func<T, Nullable<Int32>>)"}]},{"pos":[237782,237788],"content":"Min<T>","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;","pos":[0,6],"source":"Min<T>"}]},{"pos":[237843,237844],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[237894,237898],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[237956,237957],"content":"<","needQuote":true,"nodes":[]},{"pos":[237984,237985],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[238013,238014]},{"pos":[238073,238081],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[238143,238144],"content":"<","needQuote":true,"nodes":[]},{"pos":[238193,238198],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[238321,238322],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[238447,238456],"content":"Min(Of T)","needQuote":true,"nodes":[{"content":"Min(Of T)","pos":[0,9]}]},{"pos":[238514,238515],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[238565,238569],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[238628,238631]},{"pos":[238665,238666],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[238694,238695]},{"pos":[238754,238762],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[238825,238828]},{"pos":[238884,238889],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[238948,238949],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[238976,238977],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[239004,239005],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[239596,239628],"content":"Min<T>(Func<T, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;(Func&lt;T, Nullable&lt;Int64&gt;&gt;)","pos":[0,32],"source":"Min<T>(Func<T, Nullable<Int64>>)"}]},{"pos":[239984,239990],"content":"Min<T>","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;","pos":[0,6],"source":"Min<T>"}]},{"pos":[240045,240046],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[240096,240100],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[240158,240159],"content":"<","needQuote":true,"nodes":[]},{"pos":[240186,240187],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[240215,240216]},{"pos":[240275,240283],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[240345,240346],"content":"<","needQuote":true,"nodes":[]},{"pos":[240395,240400],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[240523,240524],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[240649,240658],"content":"Min(Of T)","needQuote":true,"nodes":[{"content":"Min(Of T)","pos":[0,9]}]},{"pos":[240716,240717],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[240767,240771],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[240830,240833]},{"pos":[240867,240868],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[240896,240897]},{"pos":[240956,240964],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[241027,241030]},{"pos":[241086,241091],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[241150,241151],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[241178,241179],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[241206,241207],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[241800,241833],"content":"Min<T>(Func<T, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;(Func&lt;T, Nullable&lt;Single&gt;&gt;)","pos":[0,33],"source":"Min<T>(Func<T, Nullable<Single>>)"}]},{"pos":[242193,242199],"content":"Min<T>","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;","pos":[0,6],"source":"Min<T>"}]},{"pos":[242254,242255],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[242305,242309],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[242367,242368],"content":"<","needQuote":true,"nodes":[]},{"pos":[242395,242396],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[242424,242425]},{"pos":[242484,242492],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[242554,242555],"content":"<","needQuote":true,"nodes":[]},{"pos":[242605,242611],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[242735,242736],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[242862,242871],"content":"Min(Of T)","needQuote":true,"nodes":[{"content":"Min(Of T)","pos":[0,9]}]},{"pos":[242929,242930],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[242980,242984],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[243043,243046]},{"pos":[243080,243081],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[243109,243110]},{"pos":[243169,243177],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[243240,243243]},{"pos":[243300,243306],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[243366,243367],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[243394,243395],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[243422,243423],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[243985,244008],"content":"Min<T>(Func<T, Single>)","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;(Func&lt;T, Single&gt;)","pos":[0,23],"source":"Min<T>(Func<T, Single>)"}]},{"pos":[244301,244307],"content":"Min<T>","needQuote":true,"nodes":[{"content":"Min&lt;T&gt;","pos":[0,6],"source":"Min<T>"}]},{"pos":[244362,244363],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[244413,244417],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[244475,244476],"content":"<","needQuote":true,"nodes":[]},{"pos":[244503,244504],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[244532,244533]},{"pos":[244588,244594],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[244686,244687],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[244796,244805],"content":"Min(Of T)","needQuote":true,"nodes":[{"content":"Min(Of T)","pos":[0,9]}]},{"pos":[244863,244864],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[244914,244918],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[244977,244980]},{"pos":[245014,245015],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[245043,245044]},{"pos":[245099,245105],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[245165,245166],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[245193,245194],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[245702,245735],"content":"Min<T, TResult>(Func<T, TResult>)","needQuote":true,"nodes":[{"content":"Min&lt;T, TResult&gt;(Func&lt;T, TResult&gt;)","pos":[0,33],"source":"Min<T, TResult>(Func<T, TResult>)"}]},{"pos":[246034,246049],"content":"Min<T, TResult>","needQuote":true,"nodes":[{"content":"Min&lt;T, TResult&gt;","pos":[0,15],"source":"Min<T, TResult>"}]},{"pos":[246113,246114],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[246164,246168],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[246226,246227],"content":"<","needQuote":true,"nodes":[]},{"pos":[246254,246255],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[246283,246284]},{"pos":[246316,246323],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[246388,246389],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[246488,246506],"content":"Min(Of T, TResult)","needQuote":true,"nodes":[{"content":"Min(Of T, TResult)","pos":[0,18]}]},{"pos":[246573,246574],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[246624,246628],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[246687,246690]},{"pos":[246724,246725],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[246753,246754]},{"pos":[246786,246793],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[246826,246827],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[246854,246855],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[247305,247322],"content":"OfType<TResult>()","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;()","pos":[0,17],"source":"OfType<TResult>()"}]},{"pos":[247534,247549],"content":"OfType<TResult>","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;","pos":[0,15],"source":"OfType<TResult>"}]},{"pos":[247613,247614],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[247641,247642],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[247722,247740],"content":"OfType(Of TResult)","needQuote":true,"nodes":[{"content":"OfType(Of TResult)","pos":[0,18]}]},{"pos":[247807,247808],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[247835,247836],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[248293,248324],"content":"OrderBy<T, TKey>(Func<T, TKey>)","needQuote":true,"nodes":[{"content":"OrderBy&lt;T, TKey&gt;(Func&lt;T, TKey&gt;)","pos":[0,31],"source":"OrderBy<T, TKey>(Func<T, TKey>)"}]},{"pos":[248621,248637],"content":"OrderBy<T, TKey>","needQuote":true,"nodes":[{"content":"OrderBy&lt;T, TKey&gt;","pos":[0,16],"source":"OrderBy<T, TKey>"}]},{"pos":[248702,248703],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[248753,248757],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[248815,248816],"content":"<","needQuote":true,"nodes":[]},{"pos":[248843,248844],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[248872,248873]},{"pos":[248905,248909],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[248971,248972],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[249075,249094],"content":"OrderBy(Of T, TKey)","needQuote":true,"nodes":[{"content":"OrderBy(Of T, TKey)","pos":[0,19]}]},{"pos":[249162,249163],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[249213,249217],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[249276,249279]},{"pos":[249313,249314],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[249342,249343]},{"pos":[249375,249379],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[249409,249410],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[249437,249438],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[250048,250096],"content":"OrderBy<T, TKey>(Func<T, TKey>, IComparer<TKey>)","needQuote":true,"nodes":[{"content":"OrderBy&lt;T, TKey&gt;(Func&lt;T, TKey&gt;, IComparer&lt;TKey&gt;)","pos":[0,48],"source":"OrderBy<T, TKey>(Func<T, TKey>, IComparer<TKey>)"}]},{"pos":[250546,250562],"content":"OrderBy<T, TKey>","needQuote":true,"nodes":[{"content":"OrderBy&lt;T, TKey&gt;","pos":[0,16],"source":"OrderBy<T, TKey>"}]},{"pos":[250627,250628],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[250678,250682],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[250740,250741],"content":"<","needQuote":true,"nodes":[]},{"pos":[250768,250769],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[250797,250798]},{"pos":[250830,250834],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[250897,250898]},{"pos":[250978,250987],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[251070,251071],"content":"<","needQuote":true,"nodes":[]},{"pos":[251098,251102],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[251164,251165],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[251310,251329],"content":"OrderBy(Of T, TKey)","needQuote":true,"nodes":[{"content":"OrderBy(Of T, TKey)","pos":[0,19]}]},{"pos":[251397,251398],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[251448,251452],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[251511,251514]},{"pos":[251548,251549],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[251577,251578]},{"pos":[251610,251614],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[251644,251645],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[251673,251674]},{"pos":[251754,251763],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"content":"(Of","pos":[251847,251850]},{"pos":[251884,251888],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[251918,251919],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[251946,251947],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[252569,252610],"content":"OrderByDescending<T, TKey>(Func<T, TKey>)","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;T, TKey&gt;(Func&lt;T, TKey&gt;)","pos":[0,41],"source":"OrderByDescending<T, TKey>(Func<T, TKey>)"}]},{"pos":[252947,252973],"content":"OrderByDescending<T, TKey>","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;T, TKey&gt;","pos":[0,26],"source":"OrderByDescending<T, TKey>"}]},{"pos":[253048,253049],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[253099,253103],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[253161,253162],"content":"<","needQuote":true,"nodes":[]},{"pos":[253189,253190],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[253218,253219]},{"pos":[253251,253255],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[253317,253318],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[253431,253460],"content":"OrderByDescending(Of T, TKey)","needQuote":true,"nodes":[{"content":"OrderByDescending(Of T, TKey)","pos":[0,29]}]},{"pos":[253538,253539],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[253589,253593],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[253652,253655]},{"pos":[253689,253690],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[253718,253719]},{"pos":[253751,253755],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[253785,253786],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[253813,253814],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[254474,254532],"content":"OrderByDescending<T, TKey>(Func<T, TKey>, IComparer<TKey>)","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;T, TKey&gt;(Func&lt;T, TKey&gt;, IComparer&lt;TKey&gt;)","pos":[0,58],"source":"OrderByDescending<T, TKey>(Func<T, TKey>, IComparer<TKey>)"}]},{"pos":[255022,255048],"content":"OrderByDescending<T, TKey>","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;T, TKey&gt;","pos":[0,26],"source":"OrderByDescending<T, TKey>"}]},{"pos":[255123,255124],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[255174,255178],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[255236,255237],"content":"<","needQuote":true,"nodes":[]},{"pos":[255264,255265],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[255293,255294]},{"pos":[255326,255330],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[255393,255394]},{"pos":[255474,255483],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[255566,255567],"content":"<","needQuote":true,"nodes":[]},{"pos":[255594,255598],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[255660,255661],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[255816,255845],"content":"OrderByDescending(Of T, TKey)","needQuote":true,"nodes":[{"content":"OrderByDescending(Of T, TKey)","pos":[0,29]}]},{"pos":[255923,255924],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[255974,255978],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[256037,256040]},{"pos":[256074,256075],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[256103,256104]},{"pos":[256136,256140],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[256170,256171],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[256199,256200]},{"pos":[256280,256289],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"content":"(Of","pos":[256373,256376]},{"pos":[256410,256414],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[256444,256445],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[256472,256473],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[257059,257071],"content":"Reverse<T>()","needQuote":true,"nodes":[{"content":"Reverse&lt;T&gt;()","pos":[0,12],"source":"Reverse<T>()"}]},{"pos":[257269,257279],"content":"Reverse<T>","needQuote":true,"nodes":[{"content":"Reverse&lt;T&gt;","pos":[0,10],"source":"Reverse<T>"}]},{"pos":[257338,257339],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[257366,257367],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[257448,257461],"content":"Reverse(Of T)","needQuote":true,"nodes":[{"content":"Reverse(Of T)","pos":[0,13]}]},{"pos":[257523,257524],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[257551,257552],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[258014,258050],"content":"Select<T, TResult>(Func<T, TResult>)","needQuote":true,"nodes":[{"content":"Select&lt;T, TResult&gt;(Func&lt;T, TResult&gt;)","pos":[0,36],"source":"Select<T, TResult>(Func<T, TResult>)"}]},{"pos":[258361,258379],"content":"Select<T, TResult>","needQuote":true,"nodes":[{"content":"Select&lt;T, TResult&gt;","pos":[0,18],"source":"Select<T, TResult>"}]},{"pos":[258446,258447],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[258497,258501],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[258559,258560],"content":"<","needQuote":true,"nodes":[]},{"pos":[258587,258588],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[258616,258617]},{"pos":[258649,258656],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[258721,258722],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[258824,258845],"content":"Select(Of T, TResult)","needQuote":true,"nodes":[{"content":"Select(Of T, TResult)","pos":[0,21]}]},{"pos":[258915,258916],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[258966,258970],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[259029,259032]},{"pos":[259066,259067],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[259095,259096]},{"pos":[259128,259135],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[259168,259169],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[259196,259197],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[259756,259799],"content":"Select<T, TResult>(Func<T, Int32, TResult>)","needQuote":true,"nodes":[{"content":"Select&lt;T, TResult&gt;(Func&lt;T, Int32, TResult&gt;)","pos":[0,43],"source":"Select<T, TResult>(Func<T, Int32, TResult>)"}]},{"pos":[260158,260176],"content":"Select<T, TResult>","needQuote":true,"nodes":[{"content":"Select&lt;T, TResult&gt;","pos":[0,18],"source":"Select<T, TResult>"}]},{"pos":[260243,260244],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[260294,260298],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[260356,260357],"content":"<","needQuote":true,"nodes":[]},{"pos":[260384,260385],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[260413,260414]},{"pos":[260468,260473],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[260533,260534]},{"pos":[260566,260573],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[260638,260639],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[260754,260775],"content":"Select(Of T, TResult)","needQuote":true,"nodes":[{"content":"Select(Of T, TResult)","pos":[0,21]}]},{"pos":[260845,260846],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[260896,260900],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[260959,260962]},{"pos":[260996,260997],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[261025,261026]},{"pos":[261080,261085],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[261145,261146]},{"pos":[261178,261185],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[261218,261219],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[261246,261247],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[261895,261948],"content":"SelectMany<T, TResult>(Func<T, IEnumerable<TResult>>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;T, TResult&gt;(Func&lt;T, IEnumerable&lt;TResult&gt;&gt;)","pos":[0,53],"source":"SelectMany<T, TResult>(Func<T, IEnumerable<TResult>>)"}]},{"pos":[262414,262436],"content":"SelectMany<T, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;T, TResult&gt;","pos":[0,22],"source":"SelectMany<T, TResult>"}]},{"pos":[262507,262508],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[262558,262562],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[262620,262621],"content":"<","needQuote":true,"nodes":[]},{"pos":[262648,262649],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[262677,262678]},{"pos":[262760,262771],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[262856,262857],"content":"<","needQuote":true,"nodes":[]},{"pos":[262884,262891],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[262988,262989],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[263135,263160],"content":"SelectMany(Of T, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of T, TResult)","pos":[0,25]}]},{"pos":[263234,263235],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[263285,263289],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[263348,263351]},{"pos":[263385,263386],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[263414,263415]},{"pos":[263497,263508],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[263594,263597]},{"pos":[263631,263638],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[263671,263672],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[263699,263700],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[263727,263728],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[264456,264516],"content":"SelectMany<T, TResult>(Func<T, Int32, IEnumerable<TResult>>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;T, TResult&gt;(Func&lt;T, Int32, IEnumerable&lt;TResult&gt;&gt;)","pos":[0,60],"source":"SelectMany<T, TResult>(Func<T, Int32, IEnumerable<TResult>>)"}]},{"pos":[265030,265052],"content":"SelectMany<T, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;T, TResult&gt;","pos":[0,22],"source":"SelectMany<T, TResult>"}]},{"pos":[265123,265124],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[265174,265178],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[265236,265237],"content":"<","needQuote":true,"nodes":[]},{"pos":[265264,265265],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[265293,265294]},{"pos":[265348,265353],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[265413,265414]},{"pos":[265496,265507],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[265592,265593],"content":"<","needQuote":true,"nodes":[]},{"pos":[265620,265627],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[265724,265725],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[265884,265909],"content":"SelectMany(Of T, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of T, TResult)","pos":[0,25]}]},{"pos":[265983,265984],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[266034,266038],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[266097,266100]},{"pos":[266134,266135],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[266163,266164]},{"pos":[266218,266223],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[266283,266284]},{"pos":[266366,266377],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[266463,266466]},{"pos":[266500,266507],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[266540,266541],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[266568,266569],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[266596,266597],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[267396,267497],"content":"SelectMany<T, TCollection, TResult>(Func<T, IEnumerable<TCollection>>, Func<T, TCollection, TResult>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;T, TCollection, TResult&gt;(Func&lt;T, IEnumerable&lt;TCollection&gt;&gt;, Func&lt;T, TCollection, TResult&gt;)","pos":[0,101],"source":"SelectMany<T, TCollection, TResult>(Func<T, IEnumerable<TCollection>>, Func<T, TCollection, TResult>)"}]},{"pos":[268152,268187],"content":"SelectMany<T, TCollection, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;T, TCollection, TResult&gt;","pos":[0,35],"source":"SelectMany<T, TCollection, TResult>"}]},{"pos":[268271,268272],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[268322,268326],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[268384,268385],"content":"<","needQuote":true,"nodes":[]},{"pos":[268412,268413],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[268441,268442]},{"pos":[268524,268535],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[268620,268621],"content":"<","needQuote":true,"nodes":[]},{"pos":[268648,268659],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[268761,268762]},{"pos":[268817,268821],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[268879,268880],"content":"<","needQuote":true,"nodes":[]},{"pos":[268907,268908],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[268936,268937]},{"pos":[268969,268980],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[269018,269019]},{"pos":[269051,269058],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[269123,269124],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[269295,269333],"content":"SelectMany(Of T, TCollection, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of T, TCollection, TResult)","pos":[0,38]}]},{"pos":[269420,269421],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[269471,269475],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[269534,269537]},{"pos":[269571,269572],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[269600,269601]},{"pos":[269683,269694],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[269780,269783]},{"pos":[269817,269828],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"pos":[269865,269866],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[269893,269894],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[269922,269923]},{"pos":[269978,269982],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[270041,270044]},{"pos":[270078,270079],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[270107,270108]},{"pos":[270140,270151],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[270189,270190]},{"pos":[270222,270229],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[270262,270263],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[270290,270291],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[271213,271321],"content":"SelectMany<T, TCollection, TResult>(Func<T, Int32, IEnumerable<TCollection>>, Func<T, TCollection, TResult>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;T, TCollection, TResult&gt;(Func&lt;T, Int32, IEnumerable&lt;TCollection&gt;&gt;, Func&lt;T, TCollection, TResult&gt;)","pos":[0,108],"source":"SelectMany<T, TCollection, TResult>(Func<T, Int32, IEnumerable<TCollection>>, Func<T, TCollection, TResult>)"}]},{"pos":[272024,272059],"content":"SelectMany<T, TCollection, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;T, TCollection, TResult&gt;","pos":[0,35],"source":"SelectMany<T, TCollection, TResult>"}]},{"pos":[272143,272144],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[272194,272198],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[272256,272257],"content":"<","needQuote":true,"nodes":[]},{"pos":[272284,272285],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[272313,272314]},{"pos":[272368,272373],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[272433,272434]},{"pos":[272516,272527],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[272612,272613],"content":"<","needQuote":true,"nodes":[]},{"pos":[272640,272651],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[272753,272754]},{"pos":[272809,272813],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[272871,272872],"content":"<","needQuote":true,"nodes":[]},{"pos":[272899,272900],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[272928,272929]},{"pos":[272961,272972],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[273010,273011]},{"pos":[273043,273050],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[273115,273116],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[273300,273338],"content":"SelectMany(Of T, TCollection, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of T, TCollection, TResult)","pos":[0,38]}]},{"pos":[273425,273426],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[273476,273480],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[273539,273542]},{"pos":[273576,273577],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[273605,273606]},{"pos":[273660,273665],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[273725,273726]},{"pos":[273808,273819],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[273905,273908]},{"pos":[273942,273953],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"pos":[273990,273991],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[274018,274019],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[274047,274048]},{"pos":[274103,274107],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[274166,274169]},{"pos":[274203,274204],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[274232,274233]},{"pos":[274265,274276],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[274314,274315]},{"pos":[274347,274354],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[274387,274388],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[274415,274416],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[275235,275267],"content":"SequenceEqual<T>(IEnumerable<T>)","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;T&gt;(IEnumerable&lt;T&gt;)","pos":[0,32],"source":"SequenceEqual<T>(IEnumerable<T>)"}]},{"pos":[275636,275652],"content":"SequenceEqual<T>","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;T&gt;","pos":[0,16],"source":"SequenceEqual<T>"}]},{"pos":[275717,275718],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[275795,275806],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[275891,275892],"content":"<","needQuote":true,"nodes":[]},{"pos":[275919,275920],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[275979,275980],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[276112,276131],"content":"SequenceEqual(Of T)","needQuote":true,"nodes":[{"content":"SequenceEqual(Of T)","pos":[0,19]}]},{"pos":[276199,276200],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[276277,276288],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[276374,276377]},{"pos":[276411,276412],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[276439,276440],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[276467,276468],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[277177,277231],"content":"SequenceEqual<T>(IEnumerable<T>, IEqualityComparer<T>)","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;T&gt;(IEnumerable&lt;T&gt;, IEqualityComparer&lt;T&gt;)","pos":[0,54],"source":"SequenceEqual<T>(IEnumerable<T>, IEqualityComparer<T>)"}]},{"pos":[277776,277792],"content":"SequenceEqual<T>","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;T&gt;","pos":[0,16],"source":"SequenceEqual<T>"}]},{"pos":[277857,277858],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[277935,277946],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[278031,278032],"content":"<","needQuote":true,"nodes":[]},{"pos":[278059,278060],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[278120,278121]},{"pos":[278209,278226],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[278317,278318],"content":"<","needQuote":true,"nodes":[]},{"pos":[278345,278346],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[278405,278406],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[278588,278607],"content":"SequenceEqual(Of T)","needQuote":true,"nodes":[{"content":"SequenceEqual(Of T)","pos":[0,19]}]},{"pos":[278675,278676],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[278753,278764],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[278850,278853]},{"pos":[278887,278888],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[278915,278916],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[278944,278945]},{"pos":[279033,279050],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[279142,279145]},{"pos":[279179,279180],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[279207,279208],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[279235,279236],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[279839,279850],"content":"Single<T>()","needQuote":true,"nodes":[{"content":"Single&lt;T&gt;()","pos":[0,11],"source":"Single<T>()"}]},{"pos":[280044,280053],"content":"Single<T>","needQuote":true,"nodes":[{"content":"Single&lt;T&gt;","pos":[0,9],"source":"Single<T>"}]},{"pos":[280111,280112],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[280139,280140],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[280220,280232],"content":"Single(Of T)","needQuote":true,"nodes":[{"content":"Single(Of T)","pos":[0,12]}]},{"pos":[280293,280294],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[280321,280322],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[280797,280824],"content":"Single<T>(Func<T, Boolean>)","needQuote":true,"nodes":[{"content":"Single&lt;T&gt;(Func&lt;T, Boolean&gt;)","pos":[0,27],"source":"Single<T>(Func<T, Boolean>)"}]},{"pos":[281133,281142],"content":"Single<T>","needQuote":true,"nodes":[{"content":"Single&lt;T&gt;","pos":[0,9],"source":"Single<T>"}]},{"pos":[281200,281201],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[281251,281255],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[281313,281314],"content":"<","needQuote":true,"nodes":[]},{"pos":[281341,281342],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[281370,281371]},{"pos":[281427,281434],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[281527,281528],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[281641,281653],"content":"Single(Of T)","needQuote":true,"nodes":[{"content":"Single(Of T)","pos":[0,12]}]},{"pos":[281714,281715],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[281765,281769],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[281828,281831]},{"pos":[281865,281866],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[281894,281895]},{"pos":[281951,281958],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[282019,282020],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[282047,282048],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[282543,282563],"content":"SingleOrDefault<T>()","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;T&gt;()","pos":[0,20],"source":"SingleOrDefault<T>()"}]},{"pos":[282793,282811],"content":"SingleOrDefault<T>","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;T&gt;","pos":[0,18],"source":"SingleOrDefault<T>"}]},{"pos":[282878,282879],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[282906,282907],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[282996,283017],"content":"SingleOrDefault(Of T)","needQuote":true,"nodes":[{"content":"SingleOrDefault(Of T)","pos":[0,21]}]},{"pos":[283087,283088],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[283115,283116],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[283636,283672],"content":"SingleOrDefault<T>(Func<T, Boolean>)","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;T&gt;(Func&lt;T, Boolean&gt;)","pos":[0,36],"source":"SingleOrDefault<T>(Func<T, Boolean>)"}]},{"pos":[284017,284035],"content":"SingleOrDefault<T>","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;T&gt;","pos":[0,18],"source":"SingleOrDefault<T>"}]},{"pos":[284102,284103],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[284153,284157],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[284215,284216],"content":"<","needQuote":true,"nodes":[]},{"pos":[284243,284244],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[284272,284273]},{"pos":[284329,284336],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[284429,284430],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[284552,284573],"content":"SingleOrDefault(Of T)","needQuote":true,"nodes":[{"content":"SingleOrDefault(Of T)","pos":[0,21]}]},{"pos":[284643,284644],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[284694,284698],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[284757,284760]},{"pos":[284794,284795],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[284823,284824]},{"pos":[284880,284887],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[284948,284949],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[284976,284977],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[285504,285518],"content":"Skip<T>(Int32)","needQuote":true,"nodes":[{"content":"Skip&lt;T&gt;(Int32)","pos":[0,14],"source":"Skip<T>(Int32)"}]},{"pos":[285747,285754],"content":"Skip<T>","needQuote":true,"nodes":[{"content":"Skip&lt;T&gt;","pos":[0,7],"source":"Skip<T>"}]},{"pos":[285810,285811],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[285860,285865],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[285924,285925],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[286017,286027],"content":"Skip(Of T)","needQuote":true,"nodes":[{"content":"Skip(Of T)","pos":[0,10]}]},{"pos":[286086,286087],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[286136,286141],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[286200,286201],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[286699,286729],"content":"SkipWhile<T>(Func<T, Boolean>)","needQuote":true,"nodes":[{"content":"SkipWhile&lt;T&gt;(Func&lt;T, Boolean&gt;)","pos":[0,30],"source":"SkipWhile<T>(Func<T, Boolean>)"}]},{"pos":[287050,287062],"content":"SkipWhile<T>","needQuote":true,"nodes":[{"content":"SkipWhile&lt;T&gt;","pos":[0,12],"source":"SkipWhile<T>"}]},{"pos":[287123,287124],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[287174,287178],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[287236,287237],"content":"<","needQuote":true,"nodes":[]},{"pos":[287264,287265],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[287293,287294]},{"pos":[287350,287357],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[287450,287451],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[287567,287582],"content":"SkipWhile(Of T)","needQuote":true,"nodes":[{"content":"SkipWhile(Of T)","pos":[0,15]}]},{"pos":[287646,287647],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[287697,287701],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[287760,287763]},{"pos":[287797,287798],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[287826,287827]},{"pos":[287883,287890],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[287951,287952],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[287979,287980],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[288563,288600],"content":"SkipWhile<T>(Func<T, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"SkipWhile&lt;T&gt;(Func&lt;T, Int32, Boolean&gt;)","pos":[0,37],"source":"SkipWhile<T>(Func<T, Int32, Boolean>)"}]},{"pos":[288969,288981],"content":"SkipWhile<T>","needQuote":true,"nodes":[{"content":"SkipWhile&lt;T&gt;","pos":[0,12],"source":"SkipWhile<T>"}]},{"pos":[289042,289043],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[289093,289097],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[289155,289156],"content":"<","needQuote":true,"nodes":[]},{"pos":[289183,289184],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[289212,289213]},{"pos":[289267,289272],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[289332,289333]},{"pos":[289389,289396],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[289489,289490],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[289619,289634],"content":"SkipWhile(Of T)","needQuote":true,"nodes":[{"content":"SkipWhile(Of T)","pos":[0,15]}]},{"pos":[289698,289699],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[289749,289753],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[289812,289815]},{"pos":[289849,289850],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[289878,289879]},{"pos":[289933,289938],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[289998,289999]},{"pos":[290055,290062],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[290123,290124],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[290151,290152],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[290724,290748],"content":"Sum<T>(Func<T, Decimal>)","needQuote":true,"nodes":[{"content":"Sum&lt;T&gt;(Func&lt;T, Decimal&gt;)","pos":[0,24],"source":"Sum<T>(Func<T, Decimal>)"}]},{"pos":[291045,291051],"content":"Sum<T>","needQuote":true,"nodes":[{"content":"Sum&lt;T&gt;","pos":[0,6],"source":"Sum<T>"}]},{"pos":[291106,291107],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[291157,291161],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[291219,291220],"content":"<","needQuote":true,"nodes":[]},{"pos":[291247,291248],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[291276,291277]},{"pos":[291333,291340],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[291433,291434],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[291544,291553],"content":"Sum(Of T)","needQuote":true,"nodes":[{"content":"Sum(Of T)","pos":[0,9]}]},{"pos":[291611,291612],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[291662,291666],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[291725,291728]},{"pos":[291762,291763],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[291791,291792]},{"pos":[291848,291855],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[291916,291917],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[291944,291945],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[292470,292493],"content":"Sum<T>(Func<T, Double>)","needQuote":true,"nodes":[{"content":"Sum&lt;T&gt;(Func&lt;T, Double&gt;)","pos":[0,23],"source":"Sum<T>(Func<T, Double>)"}]},{"pos":[292786,292792],"content":"Sum<T>","needQuote":true,"nodes":[{"content":"Sum&lt;T&gt;","pos":[0,6],"source":"Sum<T>"}]},{"pos":[292847,292848],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[292898,292902],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[292960,292961],"content":"<","needQuote":true,"nodes":[]},{"pos":[292988,292989],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[293017,293018]},{"pos":[293073,293079],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[293171,293172],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[293281,293290],"content":"Sum(Of T)","needQuote":true,"nodes":[{"content":"Sum(Of T)","pos":[0,9]}]},{"pos":[293348,293349],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[293399,293403],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[293462,293465]},{"pos":[293499,293500],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[293528,293529]},{"pos":[293584,293590],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[293650,293651],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[293678,293679],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[294199,294221],"content":"Sum<T>(Func<T, Int32>)","needQuote":true,"nodes":[{"content":"Sum&lt;T&gt;(Func&lt;T, Int32&gt;)","pos":[0,22],"source":"Sum<T>(Func<T, Int32>)"}]},{"pos":[294510,294516],"content":"Sum<T>","needQuote":true,"nodes":[{"content":"Sum&lt;T&gt;","pos":[0,6],"source":"Sum<T>"}]},{"pos":[294571,294572],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[294622,294626],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[294684,294685],"content":"<","needQuote":true,"nodes":[]},{"pos":[294712,294713],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[294741,294742]},{"pos":[294796,294801],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[294892,294893],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[295001,295010],"content":"Sum(Of T)","needQuote":true,"nodes":[{"content":"Sum(Of T)","pos":[0,9]}]},{"pos":[295068,295069],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[295119,295123],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[295182,295185]},{"pos":[295219,295220],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[295248,295249]},{"pos":[295303,295308],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[295367,295368],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[295395,295396],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[295913,295935],"content":"Sum<T>(Func<T, Int64>)","needQuote":true,"nodes":[{"content":"Sum&lt;T&gt;(Func&lt;T, Int64&gt;)","pos":[0,22],"source":"Sum<T>(Func<T, Int64>)"}]},{"pos":[296224,296230],"content":"Sum<T>","needQuote":true,"nodes":[{"content":"Sum&lt;T&gt;","pos":[0,6],"source":"Sum<T>"}]},{"pos":[296285,296286],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[296336,296340],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[296398,296399],"content":"<","needQuote":true,"nodes":[]},{"pos":[296426,296427],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[296455,296456]},{"pos":[296510,296515],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[296606,296607],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[296715,296724],"content":"Sum(Of T)","needQuote":true,"nodes":[{"content":"Sum(Of T)","pos":[0,9]}]},{"pos":[296782,296783],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[296833,296837],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[296896,296899]},{"pos":[296933,296934],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[296962,296963]},{"pos":[297017,297022],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[297081,297082],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[297109,297110],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[297665,297699],"content":"Sum<T>(Func<T, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Sum&lt;T&gt;(Func&lt;T, Nullable&lt;Decimal&gt;&gt;)","pos":[0,34],"source":"Sum<T>(Func<T, Nullable<Decimal>>)"}]},{"pos":[298063,298069],"content":"Sum<T>","needQuote":true,"nodes":[{"content":"Sum&lt;T&gt;","pos":[0,6],"source":"Sum<T>"}]},{"pos":[298124,298125],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[298175,298179],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[298237,298238],"content":"<","needQuote":true,"nodes":[]},{"pos":[298265,298266],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[298294,298295]},{"pos":[298354,298362],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[298424,298425],"content":"<","needQuote":true,"nodes":[]},{"pos":[298476,298483],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[298608,298609],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[298736,298745],"content":"Sum(Of T)","needQuote":true,"nodes":[{"content":"Sum(Of T)","pos":[0,9]}]},{"pos":[298803,298804],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[298854,298858],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[298917,298920]},{"pos":[298954,298955],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[298983,298984]},{"pos":[299043,299051],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[299114,299117]},{"pos":[299175,299182],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[299243,299244],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[299271,299272],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[299299,299300],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[299899,299932],"content":"Sum<T>(Func<T, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Sum&lt;T&gt;(Func&lt;T, Nullable&lt;Double&gt;&gt;)","pos":[0,33],"source":"Sum<T>(Func<T, Nullable<Double>>)"}]},{"pos":[300292,300298],"content":"Sum<T>","needQuote":true,"nodes":[{"content":"Sum&lt;T&gt;","pos":[0,6],"source":"Sum<T>"}]},{"pos":[300353,300354],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[300404,300408],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[300466,300467],"content":"<","needQuote":true,"nodes":[]},{"pos":[300494,300495],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[300523,300524]},{"pos":[300583,300591],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[300653,300654],"content":"<","needQuote":true,"nodes":[]},{"pos":[300704,300710],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[300834,300835],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[300961,300970],"content":"Sum(Of T)","needQuote":true,"nodes":[{"content":"Sum(Of T)","pos":[0,9]}]},{"pos":[301028,301029],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[301079,301083],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[301142,301145]},{"pos":[301179,301180],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[301208,301209]},{"pos":[301268,301276],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[301339,301342]},{"pos":[301399,301405],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[301465,301466],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[301493,301494],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[301521,301522],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[302116,302148],"content":"Sum<T>(Func<T, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Sum&lt;T&gt;(Func&lt;T, Nullable&lt;Int32&gt;&gt;)","pos":[0,32],"source":"Sum<T>(Func<T, Nullable<Int32>>)"}]},{"pos":[302504,302510],"content":"Sum<T>","needQuote":true,"nodes":[{"content":"Sum&lt;T&gt;","pos":[0,6],"source":"Sum<T>"}]},{"pos":[302565,302566],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[302616,302620],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[302678,302679],"content":"<","needQuote":true,"nodes":[]},{"pos":[302706,302707],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[302735,302736]},{"pos":[302795,302803],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[302865,302866],"content":"<","needQuote":true,"nodes":[]},{"pos":[302915,302920],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[303043,303044],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[303169,303178],"content":"Sum(Of T)","needQuote":true,"nodes":[{"content":"Sum(Of T)","pos":[0,9]}]},{"pos":[303236,303237],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[303287,303291],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[303350,303353]},{"pos":[303387,303388],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[303416,303417]},{"pos":[303476,303484],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[303547,303550]},{"pos":[303606,303611],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[303670,303671],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[303698,303699],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[303726,303727],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[304318,304350],"content":"Sum<T>(Func<T, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Sum&lt;T&gt;(Func&lt;T, Nullable&lt;Int64&gt;&gt;)","pos":[0,32],"source":"Sum<T>(Func<T, Nullable<Int64>>)"}]},{"pos":[304706,304712],"content":"Sum<T>","needQuote":true,"nodes":[{"content":"Sum&lt;T&gt;","pos":[0,6],"source":"Sum<T>"}]},{"pos":[304767,304768],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[304818,304822],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[304880,304881],"content":"<","needQuote":true,"nodes":[]},{"pos":[304908,304909],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[304937,304938]},{"pos":[304997,305005],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[305067,305068],"content":"<","needQuote":true,"nodes":[]},{"pos":[305117,305122],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[305245,305246],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[305371,305380],"content":"Sum(Of T)","needQuote":true,"nodes":[{"content":"Sum(Of T)","pos":[0,9]}]},{"pos":[305438,305439],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[305489,305493],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[305552,305555]},{"pos":[305589,305590],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[305618,305619]},{"pos":[305678,305686],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[305749,305752]},{"pos":[305808,305813],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[305872,305873],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[305900,305901],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[305928,305929],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[306522,306555],"content":"Sum<T>(Func<T, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Sum&lt;T&gt;(Func&lt;T, Nullable&lt;Single&gt;&gt;)","pos":[0,33],"source":"Sum<T>(Func<T, Nullable<Single>>)"}]},{"pos":[306915,306921],"content":"Sum<T>","needQuote":true,"nodes":[{"content":"Sum&lt;T&gt;","pos":[0,6],"source":"Sum<T>"}]},{"pos":[306976,306977],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[307027,307031],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[307089,307090],"content":"<","needQuote":true,"nodes":[]},{"pos":[307117,307118],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[307146,307147]},{"pos":[307206,307214],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[307276,307277],"content":"<","needQuote":true,"nodes":[]},{"pos":[307327,307333],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[307457,307458],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[307584,307593],"content":"Sum(Of T)","needQuote":true,"nodes":[{"content":"Sum(Of T)","pos":[0,9]}]},{"pos":[307651,307652],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[307702,307706],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[307765,307768]},{"pos":[307802,307803],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[307831,307832]},{"pos":[307891,307899],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[307962,307965]},{"pos":[308022,308028],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[308088,308089],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[308116,308117],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[308144,308145],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[308707,308730],"content":"Sum<T>(Func<T, Single>)","needQuote":true,"nodes":[{"content":"Sum&lt;T&gt;(Func&lt;T, Single&gt;)","pos":[0,23],"source":"Sum<T>(Func<T, Single>)"}]},{"pos":[309023,309029],"content":"Sum<T>","needQuote":true,"nodes":[{"content":"Sum&lt;T&gt;","pos":[0,6],"source":"Sum<T>"}]},{"pos":[309084,309085],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[309135,309139],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[309197,309198],"content":"<","needQuote":true,"nodes":[]},{"pos":[309225,309226],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[309254,309255]},{"pos":[309310,309316],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[309408,309409],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[309518,309527],"content":"Sum(Of T)","needQuote":true,"nodes":[{"content":"Sum(Of T)","pos":[0,9]}]},{"pos":[309585,309586],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[309636,309640],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[309699,309702]},{"pos":[309736,309737],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[309765,309766]},{"pos":[309821,309827],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[309887,309888],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[309915,309916],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[310404,310418],"content":"Take<T>(Int32)","needQuote":true,"nodes":[{"content":"Take&lt;T&gt;(Int32)","pos":[0,14],"source":"Take<T>(Int32)"}]},{"pos":[310647,310654],"content":"Take<T>","needQuote":true,"nodes":[{"content":"Take&lt;T&gt;","pos":[0,7],"source":"Take<T>"}]},{"pos":[310710,310711],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[310760,310765],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[310824,310825],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[310917,310927],"content":"Take(Of T)","needQuote":true,"nodes":[{"content":"Take(Of T)","pos":[0,10]}]},{"pos":[310986,310987],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[311036,311041],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[311100,311101],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[311599,311629],"content":"TakeWhile<T>(Func<T, Boolean>)","needQuote":true,"nodes":[{"content":"TakeWhile&lt;T&gt;(Func&lt;T, Boolean&gt;)","pos":[0,30],"source":"TakeWhile<T>(Func<T, Boolean>)"}]},{"pos":[311950,311962],"content":"TakeWhile<T>","needQuote":true,"nodes":[{"content":"TakeWhile&lt;T&gt;","pos":[0,12],"source":"TakeWhile<T>"}]},{"pos":[312023,312024],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[312074,312078],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[312136,312137],"content":"<","needQuote":true,"nodes":[]},{"pos":[312164,312165],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[312193,312194]},{"pos":[312250,312257],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[312350,312351],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[312467,312482],"content":"TakeWhile(Of T)","needQuote":true,"nodes":[{"content":"TakeWhile(Of T)","pos":[0,15]}]},{"pos":[312546,312547],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[312597,312601],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[312660,312663]},{"pos":[312697,312698],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[312726,312727]},{"pos":[312783,312790],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[312851,312852],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[312879,312880],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[313463,313500],"content":"TakeWhile<T>(Func<T, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"TakeWhile&lt;T&gt;(Func&lt;T, Int32, Boolean&gt;)","pos":[0,37],"source":"TakeWhile<T>(Func<T, Int32, Boolean>)"}]},{"pos":[313869,313881],"content":"TakeWhile<T>","needQuote":true,"nodes":[{"content":"TakeWhile&lt;T&gt;","pos":[0,12],"source":"TakeWhile<T>"}]},{"pos":[313942,313943],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[313993,313997],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[314055,314056],"content":"<","needQuote":true,"nodes":[]},{"pos":[314083,314084],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[314112,314113]},{"pos":[314167,314172],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[314232,314233]},{"pos":[314289,314296],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[314389,314390],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[314519,314534],"content":"TakeWhile(Of T)","needQuote":true,"nodes":[{"content":"TakeWhile(Of T)","pos":[0,15]}]},{"pos":[314598,314599],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[314649,314653],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[314712,314715]},{"pos":[314749,314750],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[314778,314779]},{"pos":[314833,314838],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[314898,314899]},{"pos":[314955,314962],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[315023,315024],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[315051,315052],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[315567,315579],"content":"ToArray<T>()","needQuote":true,"nodes":[{"content":"ToArray&lt;T&gt;()","pos":[0,12],"source":"ToArray<T>()"}]},{"pos":[315777,315787],"content":"ToArray<T>","needQuote":true,"nodes":[{"content":"ToArray&lt;T&gt;","pos":[0,10],"source":"ToArray<T>"}]},{"pos":[315846,315847],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[315874,315875],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[315956,315969],"content":"ToArray(Of T)","needQuote":true,"nodes":[{"content":"ToArray(Of T)","pos":[0,13]}]},{"pos":[316031,316032],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[316059,316060],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[316531,316567],"content":"ToDictionary<T, TKey>(Func<T, TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;T, TKey&gt;(Func&lt;T, TKey&gt;)","pos":[0,36],"source":"ToDictionary<T, TKey>(Func<T, TKey>)"}]},{"pos":[316884,316905],"content":"ToDictionary<T, TKey>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;T, TKey&gt;","pos":[0,21],"source":"ToDictionary<T, TKey>"}]},{"pos":[316975,316976],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[317026,317030],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[317088,317089],"content":"<","needQuote":true,"nodes":[]},{"pos":[317116,317117],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[317145,317146]},{"pos":[317178,317182],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[317244,317245],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[317353,317377],"content":"ToDictionary(Of T, TKey)","needQuote":true,"nodes":[{"content":"ToDictionary(Of T, TKey)","pos":[0,24]}]},{"pos":[317450,317451],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[317501,317505],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[317564,317567]},{"pos":[317601,317602],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[317630,317631]},{"pos":[317663,317667],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[317697,317698],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[317725,317726],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[318377,318438],"content":"ToDictionary<T, TKey>(Func<T, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;T, TKey&gt;(Func&lt;T, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,61],"source":"ToDictionary<T, TKey>(Func<T, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[318940,318961],"content":"ToDictionary<T, TKey>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;T, TKey&gt;","pos":[0,21],"source":"ToDictionary<T, TKey>"}]},{"pos":[319031,319032],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[319082,319086],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[319144,319145],"content":"<","needQuote":true,"nodes":[]},{"pos":[319172,319173],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[319201,319202]},{"pos":[319234,319238],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[319301,319302]},{"pos":[319390,319407],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[319498,319499],"content":"<","needQuote":true,"nodes":[]},{"pos":[319526,319530],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[319592,319593],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[319751,319775],"content":"ToDictionary(Of T, TKey)","needQuote":true,"nodes":[{"content":"ToDictionary(Of T, TKey)","pos":[0,24]}]},{"pos":[319848,319849],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[319899,319903],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[319962,319965]},{"pos":[319999,320000],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[320028,320029]},{"pos":[320061,320065],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[320095,320096],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[320124,320125]},{"pos":[320213,320230],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[320322,320325]},{"pos":[320359,320363],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[320393,320394],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[320421,320422],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[321122,321187],"content":"ToDictionary<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;T, TKey, TElement&gt;(Func&lt;T, TKey&gt;, Func&lt;T, TElement&gt;)","pos":[0,65],"source":"ToDictionary<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>)"}]},{"pos":[321632,321663],"content":"ToDictionary<T, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;T, TKey, TElement&gt;","pos":[0,31],"source":"ToDictionary<T, TKey, TElement>"}]},{"pos":[321743,321744],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[321794,321798],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[321856,321857],"content":"<","needQuote":true,"nodes":[]},{"pos":[321884,321885],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[321913,321914]},{"pos":[321946,321950],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[322013,322014]},{"pos":[322069,322073],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[322131,322132],"content":"<","needQuote":true,"nodes":[]},{"pos":[322159,322160],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[322188,322189]},{"pos":[322221,322229],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[322295,322296],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[322425,322459],"content":"ToDictionary(Of T, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToDictionary(Of T, TKey, TElement)","pos":[0,34]}]},{"pos":[322542,322543],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[322593,322597],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[322656,322659]},{"pos":[322693,322694],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[322722,322723]},{"pos":[322755,322759],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[322789,322790],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[322818,322819]},{"pos":[322874,322878],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[322937,322940]},{"pos":[322974,322975],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[323003,323004]},{"pos":[323036,323044],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[323078,323079],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[323106,323107],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[323889,323979],"content":"ToDictionary<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;T, TKey, TElement&gt;(Func&lt;T, TKey&gt;, Func&lt;T, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,90],"source":"ToDictionary<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[324609,324640],"content":"ToDictionary<T, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;T, TKey, TElement&gt;","pos":[0,31],"source":"ToDictionary<T, TKey, TElement>"}]},{"pos":[324720,324721],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[324771,324775],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[324833,324834],"content":"<","needQuote":true,"nodes":[]},{"pos":[324861,324862],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[324890,324891]},{"pos":[324923,324927],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[324990,324991]},{"pos":[325046,325050],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[325108,325109],"content":"<","needQuote":true,"nodes":[]},{"pos":[325136,325137],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[325165,325166]},{"pos":[325198,325206],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[325273,325274]},{"pos":[325362,325379],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[325470,325471],"content":"<","needQuote":true,"nodes":[]},{"pos":[325498,325502],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[325564,325565],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[325744,325778],"content":"ToDictionary(Of T, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToDictionary(Of T, TKey, TElement)","pos":[0,34]}]},{"pos":[325861,325862],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[325912,325916],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[325975,325978]},{"pos":[326012,326013],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[326041,326042]},{"pos":[326074,326078],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[326108,326109],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[326137,326138]},{"pos":[326193,326197],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[326256,326259]},{"pos":[326293,326294],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[326322,326323]},{"pos":[326355,326363],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[326397,326398],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[326426,326427]},{"pos":[326515,326532],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[326624,326627]},{"pos":[326661,326665],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[326695,326696],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[326723,326724],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[327399,327410],"content":"ToList<T>()","needQuote":true,"nodes":[{"content":"ToList&lt;T&gt;()","pos":[0,11],"source":"ToList<T>()"}]},{"pos":[327604,327613],"content":"ToList<T>","needQuote":true,"nodes":[{"content":"ToList&lt;T&gt;","pos":[0,9],"source":"ToList<T>"}]},{"pos":[327671,327672],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[327699,327700],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[327780,327792],"content":"ToList(Of T)","needQuote":true,"nodes":[{"content":"ToList(Of T)","pos":[0,12]}]},{"pos":[327853,327854],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[327881,327882],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[328342,328374],"content":"ToLookup<T, TKey>(Func<T, TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;T, TKey&gt;(Func&lt;T, TKey&gt;)","pos":[0,32],"source":"ToLookup<T, TKey>(Func<T, TKey>)"}]},{"pos":[328675,328692],"content":"ToLookup<T, TKey>","needQuote":true,"nodes":[{"content":"ToLookup&lt;T, TKey&gt;","pos":[0,17],"source":"ToLookup<T, TKey>"}]},{"pos":[328758,328759],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[328809,328813],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[328871,328872],"content":"<","needQuote":true,"nodes":[]},{"pos":[328899,328900],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[328928,328929]},{"pos":[328961,328965],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[329027,329028],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[329132,329152],"content":"ToLookup(Of T, TKey)","needQuote":true,"nodes":[{"content":"ToLookup(Of T, TKey)","pos":[0,20]}]},{"pos":[329221,329222],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[329272,329276],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[329335,329338]},{"pos":[329372,329373],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[329401,329402]},{"pos":[329434,329438],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[329468,329469],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[329496,329497],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[330128,330185],"content":"ToLookup<T, TKey>(Func<T, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;T, TKey&gt;(Func&lt;T, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,57],"source":"ToLookup<T, TKey>(Func<T, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[330671,330688],"content":"ToLookup<T, TKey>","needQuote":true,"nodes":[{"content":"ToLookup&lt;T, TKey&gt;","pos":[0,17],"source":"ToLookup<T, TKey>"}]},{"pos":[330754,330755],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[330805,330809],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[330867,330868],"content":"<","needQuote":true,"nodes":[]},{"pos":[330895,330896],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[330924,330925]},{"pos":[330957,330961],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[331024,331025]},{"pos":[331113,331130],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[331221,331222],"content":"<","needQuote":true,"nodes":[]},{"pos":[331249,331253],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[331315,331316],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[331470,331490],"content":"ToLookup(Of T, TKey)","needQuote":true,"nodes":[{"content":"ToLookup(Of T, TKey)","pos":[0,20]}]},{"pos":[331559,331560],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[331610,331614],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[331673,331676]},{"pos":[331710,331711],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[331739,331740]},{"pos":[331772,331776],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[331806,331807],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[331835,331836]},{"pos":[331924,331941],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[332033,332036]},{"pos":[332070,332074],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[332104,332105],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[332132,332133],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[332813,332874],"content":"ToLookup<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;T, TKey, TElement&gt;(Func&lt;T, TKey&gt;, Func&lt;T, TElement&gt;)","pos":[0,61],"source":"ToLookup<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>)"}]},{"pos":[333303,333330],"content":"ToLookup<T, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToLookup&lt;T, TKey, TElement&gt;","pos":[0,27],"source":"ToLookup<T, TKey, TElement>"}]},{"pos":[333406,333407],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[333457,333461],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[333519,333520],"content":"<","needQuote":true,"nodes":[]},{"pos":[333547,333548],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[333576,333577]},{"pos":[333609,333613],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[333676,333677]},{"pos":[333732,333736],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[333794,333795],"content":"<","needQuote":true,"nodes":[]},{"pos":[333822,333823],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[333851,333852]},{"pos":[333884,333892],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[333958,333959],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[334084,334114],"content":"ToLookup(Of T, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToLookup(Of T, TKey, TElement)","pos":[0,30]}]},{"pos":[334193,334194],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[334244,334248],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[334307,334310]},{"pos":[334344,334345],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[334373,334374]},{"pos":[334406,334410],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[334440,334441],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[334469,334470]},{"pos":[334525,334529],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[334588,334591]},{"pos":[334625,334626],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[334654,334655]},{"pos":[334687,334695],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[334729,334730],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[334757,334758],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[335520,335606],"content":"ToLookup<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;T, TKey, TElement&gt;(Func&lt;T, TKey&gt;, Func&lt;T, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,86],"source":"ToLookup<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[336220,336247],"content":"ToLookup<T, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToLookup&lt;T, TKey, TElement&gt;","pos":[0,27],"source":"ToLookup<T, TKey, TElement>"}]},{"pos":[336323,336324],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[336374,336378],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[336436,336437],"content":"<","needQuote":true,"nodes":[]},{"pos":[336464,336465],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[336493,336494]},{"pos":[336526,336530],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[336593,336594]},{"pos":[336649,336653],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[336711,336712],"content":"<","needQuote":true,"nodes":[]},{"pos":[336739,336740],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[336768,336769]},{"pos":[336801,336809],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[336876,336877]},{"pos":[336965,336982],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[337073,337074],"content":"<","needQuote":true,"nodes":[]},{"pos":[337101,337105],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[337167,337168],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[337343,337373],"content":"ToLookup(Of T, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToLookup(Of T, TKey, TElement)","pos":[0,30]}]},{"pos":[337452,337453],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[337503,337507],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[337566,337569]},{"pos":[337603,337604],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[337632,337633]},{"pos":[337665,337669],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[337699,337700],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[337728,337729]},{"pos":[337784,337788],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[337847,337850]},{"pos":[337884,337885],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[337913,337914]},{"pos":[337946,337954],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[337988,337989],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[338017,338018]},{"pos":[338106,338123],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[338215,338218]},{"pos":[338252,338256],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[338286,338287],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[338314,338315],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[339065,339089],"content":"Union<T>(IEnumerable<T>)","needQuote":true,"nodes":[{"content":"Union&lt;T&gt;(IEnumerable&lt;T&gt;)","pos":[0,24],"source":"Union<T>(IEnumerable<T>)"}]},{"pos":[339426,339434],"content":"Union<T>","needQuote":true,"nodes":[{"content":"Union&lt;T&gt;","pos":[0,8],"source":"Union<T>"}]},{"pos":[339491,339492],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[339569,339580],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[339665,339666],"content":"<","needQuote":true,"nodes":[]},{"pos":[339693,339694],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[339753,339754],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[339878,339889],"content":"Union(Of T)","needQuote":true,"nodes":[{"content":"Union(Of T)","pos":[0,11]}]},{"pos":[339949,339950],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[340027,340038],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[340124,340127]},{"pos":[340161,340162],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[340189,340190],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[340217,340218],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[340887,340933],"content":"Union<T>(IEnumerable<T>, IEqualityComparer<T>)","needQuote":true,"nodes":[{"content":"Union&lt;T&gt;(IEnumerable&lt;T&gt;, IEqualityComparer&lt;T&gt;)","pos":[0,46],"source":"Union<T>(IEnumerable<T>, IEqualityComparer<T>)"}]},{"pos":[341446,341454],"content":"Union<T>","needQuote":true,"nodes":[{"content":"Union&lt;T&gt;","pos":[0,8],"source":"Union<T>"}]},{"pos":[341511,341512],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[341589,341600],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[341685,341686],"content":"<","needQuote":true,"nodes":[]},{"pos":[341713,341714],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[341774,341775]},{"pos":[341863,341880],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[341971,341972],"content":"<","needQuote":true,"nodes":[]},{"pos":[341999,342000],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[342059,342060],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[342234,342245],"content":"Union(Of T)","needQuote":true,"nodes":[{"content":"Union(Of T)","pos":[0,11]}]},{"pos":[342305,342306],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[342383,342394],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[342480,342483]},{"pos":[342517,342518],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[342545,342546],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[342574,342575]},{"pos":[342663,342680],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[342772,342775]},{"pos":[342809,342810],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[342837,342838],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[342865,342866],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[343508,343534],"content":"Where<T>(Func<T, Boolean>)","needQuote":true,"nodes":[{"content":"Where&lt;T&gt;(Func&lt;T, Boolean&gt;)","pos":[0,26],"source":"Where<T>(Func<T, Boolean>)"}]},{"pos":[343839,343847],"content":"Where<T>","needQuote":true,"nodes":[{"content":"Where&lt;T&gt;","pos":[0,8],"source":"Where<T>"}]},{"pos":[343904,343905],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[343955,343959],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[344017,344018],"content":"<","needQuote":true,"nodes":[]},{"pos":[344045,344046],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[344074,344075]},{"pos":[344131,344138],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[344231,344232],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[344344,344355],"content":"Where(Of T)","needQuote":true,"nodes":[{"content":"Where(Of T)","pos":[0,11]}]},{"pos":[344415,344416],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[344466,344470],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[344529,344532]},{"pos":[344566,344567],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[344595,344596]},{"pos":[344652,344659],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[344720,344721],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[344748,344749],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[345312,345345],"content":"Where<T>(Func<T, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"Where&lt;T&gt;(Func&lt;T, Int32, Boolean&gt;)","pos":[0,33],"source":"Where<T>(Func<T, Int32, Boolean>)"}]},{"pos":[345698,345706],"content":"Where<T>","needQuote":true,"nodes":[{"content":"Where&lt;T&gt;","pos":[0,8],"source":"Where<T>"}]},{"pos":[345763,345764],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[345814,345818],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[345876,345877],"content":"<","needQuote":true,"nodes":[]},{"pos":[345904,345905],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[345933,345934]},{"pos":[345988,345993],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[346053,346054]},{"pos":[346110,346117],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[346210,346211],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[346336,346347],"content":"Where(Of T)","needQuote":true,"nodes":[{"content":"Where(Of T)","pos":[0,11]}]},{"pos":[346407,346408],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[346458,346462],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[346521,346524]},{"pos":[346558,346559],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[346587,346588]},{"pos":[346642,346647],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[346707,346708]},{"pos":[346764,346771],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[346832,346833],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[346860,346861],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[347513,347586],"content":"Zip<T, TSecond, TResult>(IEnumerable<TSecond>, Func<T, TSecond, TResult>)","needQuote":true,"nodes":[{"content":"Zip&lt;T, TSecond, TResult&gt;(IEnumerable&lt;TSecond&gt;, Func&lt;T, TSecond, TResult&gt;)","pos":[0,73],"source":"Zip<T, TSecond, TResult>(IEnumerable<TSecond>, Func<T, TSecond, TResult>)"}]},{"pos":[348113,348137],"content":"Zip<T, TSecond, TResult>","needQuote":true,"nodes":[{"content":"Zip&lt;T, TSecond, TResult&gt;","pos":[0,24],"source":"Zip<T, TSecond, TResult>"}]},{"pos":[348210,348211],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[348288,348299],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[348384,348385],"content":"<","needQuote":true,"nodes":[]},{"pos":[348412,348419],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[348485,348486]},{"pos":[348541,348545],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[348603,348604],"content":"<","needQuote":true,"nodes":[]},{"pos":[348631,348632],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[348660,348661]},{"pos":[348693,348700],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[348734,348735]},{"pos":[348767,348774],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[348839,348840],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[348987,349014],"content":"Zip(Of T, TSecond, TResult)","needQuote":true,"nodes":[{"content":"Zip(Of T, TSecond, TResult)","pos":[0,27]}]},{"pos":[349090,349091],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[349168,349179],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[349265,349268]},{"pos":[349302,349309],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"pos":[349342,349343],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[349371,349372]},{"pos":[349427,349431],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[349490,349493]},{"pos":[349527,349528],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[349556,349557]},{"pos":[349589,349596],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[349630,349631]},{"pos":[349663,349670],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[349703,349704],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[349731,349732],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[350164,350170],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[350330,350360],"content":"IProducerConsumerCollection<T>","needQuote":true,"nodes":[{"content":"IProducerConsumerCollection&lt;T&gt;","pos":[0,30],"source":"IProducerConsumerCollection<T>"}]},{"pos":[350652,350679],"content":"IProducerConsumerCollection","needQuote":true,"nodes":[{"content":"IProducerConsumerCollection","pos":[0,27]}]},{"pos":[350762,350763],"content":"<","needQuote":true,"nodes":[]},{"pos":[350790,350791],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[350930,350957],"content":"IProducerConsumerCollection","needQuote":true,"nodes":[{"content":"IProducerConsumerCollection","pos":[0,27]}]},{"content":"(Of","pos":[351041,351044]},{"pos":[351078,351079],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[351106,351107],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[351383,351405],"content":"IReadOnlyCollection<T>","needQuote":true,"nodes":[{"content":"IReadOnlyCollection&lt;T&gt;","pos":[0,22],"source":"IReadOnlyCollection<T>"}]},{"pos":[351656,351675],"content":"IReadOnlyCollection","needQuote":true,"nodes":[{"content":"IReadOnlyCollection","pos":[0,19]}]},{"pos":[351747,351748],"content":"<","needQuote":true,"nodes":[]},{"pos":[351775,351776],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[351904,351923],"content":"IReadOnlyCollection","needQuote":true,"nodes":[{"content":"IReadOnlyCollection","pos":[0,19]}]},{"content":"(Of","pos":[351996,351999]},{"pos":[352033,352034],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[352061,352062],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[352289,352315],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]},{"pos":[352516,352530],"content":"IEnumerable<T>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;T&gt;","pos":[0,14],"source":"IEnumerable<T>"}]},{"pos":[352749,352760],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[352824,352825],"content":"<","needQuote":true,"nodes":[]},{"pos":[352852,352853],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[352973,352984],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[353049,353052]},{"pos":[353086,353087],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[353114,353115],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[353310,353328],"content":"System.Collections","needQuote":true,"nodes":[{"content":"System.Collections","pos":[0,18]}]},{"pos":[353529,353553],"content":"AsQueryable(IEnumerable)","needQuote":true,"nodes":[{"content":"AsQueryable(IEnumerable)","pos":[0,24]}]},{"pos":[353732,353743],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[353802,353803],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[353870,353881],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[353958,353959],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[354072,354083],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[354142,354143],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[354210,354221],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[354298,354299],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[354527,354536],"content":"Queryable","needQuote":true,"nodes":[{"content":"Queryable","pos":[0,9]}]},{"pos":[354750,354794],"content":"AsQueryable<TElement>(IEnumerable<TElement>)","needQuote":true,"nodes":[{"content":"AsQueryable&lt;TElement&gt;(IEnumerable&lt;TElement&gt;)","pos":[0,44],"source":"AsQueryable<TElement>(IEnumerable<TElement>)"}]},{"pos":[355194,355215],"content":"AsQueryable<TElement>","needQuote":true,"nodes":[{"content":"AsQueryable&lt;TElement&gt;","pos":[0,21],"source":"AsQueryable<TElement>"}]},{"pos":[355284,355285],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[355362,355373],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[355458,355459],"content":"<","needQuote":true,"nodes":[]},{"pos":[355486,355494],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[355560,355561],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[355690,355714],"content":"AsQueryable(Of TElement)","needQuote":true,"nodes":[{"content":"AsQueryable(Of TElement)","pos":[0,24]}]},{"pos":[355786,355787],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[355864,355875],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[355961,355964]},{"pos":[355998,356006],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[356040,356041],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[356068,356069],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[356442,356465],"content":"AsParallel(IEnumerable)","needQuote":true,"nodes":[{"content":"AsParallel(IEnumerable)","pos":[0,23]}]},{"pos":[356660,356670],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[356737,356738],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[356805,356816],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[356893,356894],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[357015,357025],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[357092,357093],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[357160,357171],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[357248,357249],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[357502,357520],"content":"ParallelEnumerable","needQuote":true,"nodes":[{"content":"ParallelEnumerable","pos":[0,18]}]},{"pos":[357769,357810],"content":"AsParallel<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"AsParallel&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,41],"source":"AsParallel<TSource>(IEnumerable<TSource>)"}]},{"pos":[358227,358246],"content":"AsParallel<TSource>","needQuote":true,"nodes":[{"content":"AsParallel&lt;TSource&gt;","pos":[0,19],"source":"AsParallel<TSource>"}]},{"pos":[358322,358323],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[358400,358411],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[358496,358497],"content":"<","needQuote":true,"nodes":[]},{"pos":[358524,358531],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[358596,358597],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[358734,358756],"content":"AsParallel(Of TSource)","needQuote":true,"nodes":[{"content":"AsParallel(Of TSource)","pos":[0,22]}]},{"pos":[358835,358836],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[358913,358924],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[359010,359013]},{"pos":[359047,359054],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[359087,359088],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[359115,359116],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[359541,359614],"content":"Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TSource, TSource&gt;)","pos":[0,73],"source":"Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)"}]},{"pos":[360147,360165],"content":"Aggregate<TSource>","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource&gt;","pos":[0,18],"source":"Aggregate<TSource>"}]},{"pos":[360232,360233],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[360310,360321],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[360406,360407],"content":"<","needQuote":true,"nodes":[]},{"pos":[360434,360441],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[360507,360508]},{"pos":[360563,360567],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[360625,360626],"content":"<","needQuote":true,"nodes":[]},{"pos":[360653,360660],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[360694,360695]},{"pos":[360727,360734],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[360768,360769]},{"pos":[360801,360808],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[360873,360874],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[361027,361048],"content":"Aggregate(Of TSource)","needQuote":true,"nodes":[{"content":"Aggregate(Of TSource)","pos":[0,21]}]},{"pos":[361118,361119],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[361196,361207],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[361293,361296]},{"pos":[361330,361337],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[361370,361371],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[361399,361400]},{"pos":[361455,361459],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[361518,361521]},{"pos":[361555,361562],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[361596,361597]},{"pos":[361629,361636],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[361670,361671]},{"pos":[361703,361710],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[361743,361744],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[361771,361772],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[362204,362214],"content":"Enumerable","needQuote":true,"nodes":[{"content":"Enumerable","pos":[0,10]}]},{"pos":[362459,362566],"content":"Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource, TAccumulate&gt;(IEnumerable&lt;TSource&gt;, TAccumulate, Func&lt;TAccumulate, TSource, TAccumulate&gt;)","pos":[0,107],"source":"Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)"}]},{"pos":[363205,363236],"content":"Aggregate<TSource, TAccumulate>","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource, TAccumulate&gt;","pos":[0,31],"source":"Aggregate<TSource, TAccumulate>"}]},{"pos":[363316,363317],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[363394,363405],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[363490,363491],"content":"<","needQuote":true,"nodes":[]},{"pos":[363518,363525],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[363591,363592]},{"pos":[363624,363635],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[363673,363674]},{"pos":[363729,363733],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[363791,363792],"content":"<","needQuote":true,"nodes":[]},{"pos":[363819,363830],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[363868,363869]},{"pos":[363901,363908],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[363942,363943]},{"pos":[363975,363986],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[364055,364056],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[364213,364247],"content":"Aggregate(Of TSource, TAccumulate)","needQuote":true,"nodes":[{"content":"Aggregate(Of TSource, TAccumulate)","pos":[0,34]}]},{"pos":[364330,364331],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[364408,364419],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[364505,364508]},{"pos":[364542,364549],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[364582,364583],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[364611,364612]},{"pos":[364644,364655],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[364693,364694]},{"pos":[364749,364753],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[364812,364815]},{"pos":[364849,364860],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[364898,364899]},{"pos":[364931,364938],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[364972,364973]},{"pos":[365005,365016],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[365053,365054],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[365081,365082],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[365671,365815],"content":"Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource, TAccumulate, TResult&gt;(IEnumerable&lt;TSource&gt;, TAccumulate, Func&lt;TAccumulate, TSource, TAccumulate&gt;, Func&lt;TAccumulate, TResult&gt;)","pos":[0,144],"source":"Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)"}]},{"pos":[366606,366646],"content":"Aggregate<TSource, TAccumulate, TResult>","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource, TAccumulate, TResult&gt;","pos":[0,40],"source":"Aggregate<TSource, TAccumulate, TResult>"}]},{"pos":[366735,366736],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[366813,366824],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[366909,366910],"content":"<","needQuote":true,"nodes":[]},{"pos":[366937,366944],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[367010,367011]},{"pos":[367043,367054],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[367092,367093]},{"pos":[367148,367152],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[367210,367211],"content":"<","needQuote":true,"nodes":[]},{"pos":[367238,367249],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[367287,367288]},{"pos":[367320,367327],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[367361,367362]},{"pos":[367394,367405],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[367475,367476]},{"pos":[367531,367535],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[367593,367594],"content":"<","needQuote":true,"nodes":[]},{"pos":[367621,367632],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[367670,367671]},{"pos":[367703,367710],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[367775,367776],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[367954,367997],"content":"Aggregate(Of TSource, TAccumulate, TResult)","needQuote":true,"nodes":[{"content":"Aggregate(Of TSource, TAccumulate, TResult)","pos":[0,43]}]},{"pos":[368089,368090],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[368167,368178],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[368264,368267]},{"pos":[368301,368308],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[368341,368342],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[368370,368371]},{"pos":[368403,368414],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[368452,368453]},{"pos":[368508,368512],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[368571,368574]},{"pos":[368608,368619],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[368657,368658]},{"pos":[368690,368697],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[368731,368732]},{"pos":[368764,368775],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[368812,368813],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[368841,368842]},{"pos":[368897,368901],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[368960,368963]},{"pos":[368997,369008],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[369046,369047]},{"pos":[369079,369086],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[369119,369120],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[369147,369148],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[369811,369869],"content":"All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"All&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,58],"source":"All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[370372,370384],"content":"All<TSource>","needQuote":true,"nodes":[{"content":"All&lt;TSource&gt;","pos":[0,12],"source":"All<TSource>"}]},{"pos":[370445,370446],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[370523,370534],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[370619,370620],"content":"<","needQuote":true,"nodes":[]},{"pos":[370647,370654],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[370720,370721]},{"pos":[370776,370780],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[370838,370839],"content":"<","needQuote":true,"nodes":[]},{"pos":[370866,370873],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[370907,370908]},{"pos":[370964,370971],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[371064,371065],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[371219,371234],"content":"All(Of TSource)","needQuote":true,"nodes":[{"content":"All(Of TSource)","pos":[0,15]}]},{"pos":[371298,371299],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[371376,371387],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[371473,371476]},{"pos":[371510,371517],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[371550,371551],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[371579,371580]},{"pos":[371635,371639],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[371698,371701]},{"pos":[371735,371742],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[371776,371777]},{"pos":[371833,371840],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[371901,371902],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[371929,371930],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[372362,372396],"content":"Any<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Any&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,34],"source":"Any<TSource>(IEnumerable<TSource>)"}]},{"pos":[372761,372773],"content":"Any<TSource>","needQuote":true,"nodes":[{"content":"Any&lt;TSource&gt;","pos":[0,12],"source":"Any<TSource>"}]},{"pos":[372834,372835],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[372912,372923],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[373008,373009],"content":"<","needQuote":true,"nodes":[]},{"pos":[373036,373043],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[373108,373109],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[373231,373246],"content":"Any(Of TSource)","needQuote":true,"nodes":[{"content":"Any(Of TSource)","pos":[0,15]}]},{"pos":[373310,373311],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[373388,373399],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[373485,373488]},{"pos":[373522,373529],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[373562,373563],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[373590,373591],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[373972,374030],"content":"Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Any&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,58],"source":"Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[374533,374545],"content":"Any<TSource>","needQuote":true,"nodes":[{"content":"Any&lt;TSource&gt;","pos":[0,12],"source":"Any<TSource>"}]},{"pos":[374606,374607],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[374684,374695],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[374780,374781],"content":"<","needQuote":true,"nodes":[]},{"pos":[374808,374815],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[374881,374882]},{"pos":[374937,374941],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[374999,375000],"content":"<","needQuote":true,"nodes":[]},{"pos":[375027,375034],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[375068,375069]},{"pos":[375125,375132],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[375225,375226],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[375380,375395],"content":"Any(Of TSource)","needQuote":true,"nodes":[{"content":"Any(Of TSource)","pos":[0,15]}]},{"pos":[375459,375460],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[375537,375548],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[375634,375637]},{"pos":[375671,375678],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[375711,375712],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[375740,375741]},{"pos":[375796,375800],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[375859,375862]},{"pos":[375896,375903],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[375937,375938]},{"pos":[375994,376001],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[376062,376063],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[376090,376091],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[376532,376575],"content":"AsEnumerable<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"AsEnumerable&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,43],"source":"AsEnumerable<TSource>(IEnumerable<TSource>)"}]},{"pos":[376976,376997],"content":"AsEnumerable<TSource>","needQuote":true,"nodes":[{"content":"AsEnumerable&lt;TSource&gt;","pos":[0,21],"source":"AsEnumerable<TSource>"}]},{"pos":[377067,377068],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[377145,377156],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[377241,377242],"content":"<","needQuote":true,"nodes":[]},{"pos":[377269,377276],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[377341,377342],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[377473,377497],"content":"AsEnumerable(Of TSource)","needQuote":true,"nodes":[{"content":"AsEnumerable(Of TSource)","pos":[0,24]}]},{"pos":[377570,377571],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[377648,377659],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[377745,377748]},{"pos":[377782,377789],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[377822,377823],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[377850,377851],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[378263,378325],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Decimal&gt;)","pos":[0,62],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)"}]},{"pos":[378844,378860],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[378925,378926],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[379003,379014],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[379099,379100],"content":"<","needQuote":true,"nodes":[]},{"pos":[379127,379134],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[379200,379201]},{"pos":[379256,379260],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[379318,379319],"content":"<","needQuote":true,"nodes":[]},{"pos":[379346,379353],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[379387,379388]},{"pos":[379444,379451],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[379544,379545],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[379703,379722],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[379790,379791],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[379868,379879],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[379965,379968]},{"pos":[380002,380009],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[380042,380043],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[380071,380072]},{"pos":[380127,380131],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[380190,380193]},{"pos":[380227,380234],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[380268,380269]},{"pos":[380325,380332],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[380393,380394],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[380421,380422],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[380901,380962],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Double&gt;)","pos":[0,61],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)"}]},{"pos":[381477,381493],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[381558,381559],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[381636,381647],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[381732,381733],"content":"<","needQuote":true,"nodes":[]},{"pos":[381760,381767],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[381833,381834]},{"pos":[381889,381893],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[381951,381952],"content":"<","needQuote":true,"nodes":[]},{"pos":[381979,381986],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[382020,382021]},{"pos":[382076,382082],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[382174,382175],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[382332,382351],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[382419,382420],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[382497,382508],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[382594,382597]},{"pos":[382631,382638],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[382671,382672],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[382700,382701]},{"pos":[382756,382760],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[382819,382822]},{"pos":[382856,382863],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[382897,382898]},{"pos":[382953,382959],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[383019,383020],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[383047,383048],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[383523,383583],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32&gt;)","pos":[0,60],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)"}]},{"pos":[384094,384110],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[384175,384176],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[384253,384264],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[384349,384350],"content":"<","needQuote":true,"nodes":[]},{"pos":[384377,384384],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[384450,384451]},{"pos":[384506,384510],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[384568,384569],"content":"<","needQuote":true,"nodes":[]},{"pos":[384596,384603],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[384637,384638]},{"pos":[384692,384697],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[384788,384789],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[384945,384964],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[385032,385033],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[385110,385121],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[385207,385210]},{"pos":[385244,385251],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[385284,385285],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[385313,385314]},{"pos":[385369,385373],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[385432,385435]},{"pos":[385469,385476],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[385510,385511]},{"pos":[385565,385570],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[385629,385630],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[385657,385658],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[386130,386190],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int64&gt;)","pos":[0,60],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)"}]},{"pos":[386701,386717],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[386782,386783],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[386860,386871],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[386956,386957],"content":"<","needQuote":true,"nodes":[]},{"pos":[386984,386991],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[387057,387058]},{"pos":[387113,387117],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[387175,387176],"content":"<","needQuote":true,"nodes":[]},{"pos":[387203,387210],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[387244,387245]},{"pos":[387299,387304],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[387395,387396],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[387552,387571],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[387639,387640],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[387717,387728],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[387814,387817]},{"pos":[387851,387858],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[387891,387892],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[387920,387921]},{"pos":[387976,387980],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[388039,388042]},{"pos":[388076,388083],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[388117,388118]},{"pos":[388172,388177],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[388236,388237],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[388264,388265],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[388756,388828],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Decimal&gt;&gt;)","pos":[0,72],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)"}]},{"pos":[389414,389430],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[389495,389496],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[389573,389584],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[389669,389670],"content":"<","needQuote":true,"nodes":[]},{"pos":[389697,389704],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[389770,389771]},{"pos":[389826,389830],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[389888,389889],"content":"<","needQuote":true,"nodes":[]},{"pos":[389916,389923],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[389957,389958]},{"pos":[390017,390025],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[390087,390088],"content":"<","needQuote":true,"nodes":[]},{"pos":[390139,390146],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[390271,390272],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[390447,390466],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[390534,390535],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[390612,390623],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[390709,390712]},{"pos":[390746,390753],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[390786,390787],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[390815,390816]},{"pos":[390871,390875],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[390934,390937]},{"pos":[390971,390978],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[391012,391013]},{"pos":[391072,391080],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[391143,391146]},{"pos":[391204,391211],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[391272,391273],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[391300,391301],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[391328,391329],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[391865,391936],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Double&gt;&gt;)","pos":[0,71],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)"}]},{"pos":[392518,392534],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[392599,392600],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[392677,392688],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[392773,392774],"content":"<","needQuote":true,"nodes":[]},{"pos":[392801,392808],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[392874,392875]},{"pos":[392930,392934],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[392992,392993],"content":"<","needQuote":true,"nodes":[]},{"pos":[393020,393027],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[393061,393062]},{"pos":[393121,393129],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[393191,393192],"content":"<","needQuote":true,"nodes":[]},{"pos":[393242,393248],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[393372,393373],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[393547,393566],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[393634,393635],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[393712,393723],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[393809,393812]},{"pos":[393846,393853],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[393886,393887],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[393915,393916]},{"pos":[393971,393975],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[394034,394037]},{"pos":[394071,394078],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[394112,394113]},{"pos":[394172,394180],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[394243,394246]},{"pos":[394303,394309],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[394369,394370],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[394397,394398],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[394425,394426],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[394958,395028],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int32&gt;&gt;)","pos":[0,70],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)"}]},{"pos":[395606,395622],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[395687,395688],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[395765,395776],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[395861,395862],"content":"<","needQuote":true,"nodes":[]},{"pos":[395889,395896],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[395962,395963]},{"pos":[396018,396022],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[396080,396081],"content":"<","needQuote":true,"nodes":[]},{"pos":[396108,396115],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[396149,396150]},{"pos":[396209,396217],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[396279,396280],"content":"<","needQuote":true,"nodes":[]},{"pos":[396329,396334],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[396457,396458],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[396631,396650],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[396718,396719],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[396796,396807],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[396893,396896]},{"pos":[396930,396937],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[396970,396971],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[396999,397000]},{"pos":[397055,397059],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[397118,397121]},{"pos":[397155,397162],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[397196,397197]},{"pos":[397256,397264],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[397327,397330]},{"pos":[397386,397391],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[397450,397451],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[397478,397479],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[397506,397507],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[398036,398106],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int64&gt;&gt;)","pos":[0,70],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)"}]},{"pos":[398684,398700],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[398765,398766],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[398843,398854],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[398939,398940],"content":"<","needQuote":true,"nodes":[]},{"pos":[398967,398974],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[399040,399041]},{"pos":[399096,399100],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[399158,399159],"content":"<","needQuote":true,"nodes":[]},{"pos":[399186,399193],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[399227,399228]},{"pos":[399287,399295],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[399357,399358],"content":"<","needQuote":true,"nodes":[]},{"pos":[399407,399412],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[399535,399536],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[399709,399728],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[399796,399797],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[399874,399885],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[399971,399974]},{"pos":[400008,400015],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[400048,400049],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[400077,400078]},{"pos":[400133,400137],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[400196,400199]},{"pos":[400233,400240],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[400274,400275]},{"pos":[400334,400342],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[400405,400408]},{"pos":[400464,400469],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[400528,400529],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[400556,400557],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[400584,400585],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[401115,401186],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Single&gt;&gt;)","pos":[0,71],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)"}]},{"pos":[401768,401784],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[401849,401850],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[401927,401938],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[402023,402024],"content":"<","needQuote":true,"nodes":[]},{"pos":[402051,402058],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[402124,402125]},{"pos":[402180,402184],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[402242,402243],"content":"<","needQuote":true,"nodes":[]},{"pos":[402270,402277],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[402311,402312]},{"pos":[402371,402379],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[402441,402442],"content":"<","needQuote":true,"nodes":[]},{"pos":[402492,402498],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[402622,402623],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[402797,402816],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[402884,402885],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[402962,402973],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[403059,403062]},{"pos":[403096,403103],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[403136,403137],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[403165,403166]},{"pos":[403221,403225],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[403284,403287]},{"pos":[403321,403328],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[403362,403363]},{"pos":[403422,403430],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[403493,403496]},{"pos":[403553,403559],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[403619,403620],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[403647,403648],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[403675,403676],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[404192,404253],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Single&gt;)","pos":[0,61],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)"}]},{"pos":[404768,404784],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[404849,404850],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[404927,404938],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[405023,405024],"content":"<","needQuote":true,"nodes":[]},{"pos":[405051,405058],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[405124,405125]},{"pos":[405180,405184],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[405242,405243],"content":"<","needQuote":true,"nodes":[]},{"pos":[405270,405277],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[405311,405312]},{"pos":[405367,405373],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[405465,405466],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[405623,405642],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[405710,405711],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[405788,405799],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[405885,405888]},{"pos":[405922,405929],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[405962,405963],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[405991,405992]},{"pos":[406047,406051],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[406110,406113]},{"pos":[406147,406154],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[406188,406189]},{"pos":[406244,406250],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[406310,406311],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[406338,406339],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[406768,406794],"content":"Cast<TResult>(IEnumerable)","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;(IEnumerable)","pos":[0,26],"source":"Cast<TResult>(IEnumerable)"}]},{"pos":[407101,407114],"content":"Cast<TResult>","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;","pos":[0,13],"source":"Cast<TResult>"}]},{"pos":[407176,407177],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[407244,407255],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[407332,407333],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[407443,407459],"content":"Cast(Of TResult)","needQuote":true,"nodes":[{"content":"Cast(Of TResult)","pos":[0,16]}]},{"pos":[407524,407525],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[407592,407603],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[407680,407681],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[408046,408105],"content":"Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Concat&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,59],"source":"Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[408652,408667],"content":"Concat<TSource>","needQuote":true,"nodes":[{"content":"Concat&lt;TSource&gt;","pos":[0,15],"source":"Concat<TSource>"}]},{"pos":[408731,408732],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[408809,408820],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[408905,408906],"content":"<","needQuote":true,"nodes":[]},{"pos":[408933,408940],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[409006,409007]},{"pos":[409089,409100],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[409185,409186],"content":"<","needQuote":true,"nodes":[]},{"pos":[409213,409220],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[409285,409286],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[409455,409473],"content":"Concat(Of TSource)","needQuote":true,"nodes":[{"content":"Concat(Of TSource)","pos":[0,18]}]},{"pos":[409540,409541],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[409618,409629],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[409715,409718]},{"pos":[409752,409759],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[409792,409793],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[409821,409822]},{"pos":[409904,409915],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[410001,410004]},{"pos":[410038,410045],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[410078,410079],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[410106,410107],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[410563,410609],"content":"Append<TSource>(IEnumerable<TSource>, TSource)","needQuote":true,"nodes":[{"content":"Append&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource)","pos":[0,46],"source":"Append<TSource>(IEnumerable<TSource>, TSource)"}]},{"pos":[411017,411032],"content":"Append<TSource>","needQuote":true,"nodes":[{"content":"Append&lt;TSource&gt;","pos":[0,15],"source":"Append<TSource>"}]},{"pos":[411096,411097],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[411174,411185],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[411270,411271],"content":"<","needQuote":true,"nodes":[]},{"pos":[411298,411305],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[411371,411372]},{"pos":[411404,411411],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[411444,411445],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[411574,411592],"content":"Append(Of TSource)","needQuote":true,"nodes":[{"content":"Append(Of TSource)","pos":[0,18]}]},{"pos":[411659,411660],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[411737,411748],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[411834,411837]},{"pos":[411871,411878],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[411911,411912],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[411940,411941]},{"pos":[411973,411980],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[412013,412014],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[412402,412449],"content":"Prepend<TSource>(IEnumerable<TSource>, TSource)","needQuote":true,"nodes":[{"content":"Prepend&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource)","pos":[0,47],"source":"Prepend<TSource>(IEnumerable<TSource>, TSource)"}]},{"pos":[412861,412877],"content":"Prepend<TSource>","needQuote":true,"nodes":[{"content":"Prepend&lt;TSource&gt;","pos":[0,16],"source":"Prepend<TSource>"}]},{"pos":[412942,412943],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[413020,413031],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[413116,413117],"content":"<","needQuote":true,"nodes":[]},{"pos":[413144,413151],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[413217,413218]},{"pos":[413250,413257],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[413290,413291],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[413421,413440],"content":"Prepend(Of TSource)","needQuote":true,"nodes":[{"content":"Prepend(Of TSource)","pos":[0,19]}]},{"pos":[413508,413509],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[413586,413597],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[413683,413686]},{"pos":[413720,413727],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[413760,413761],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[413789,413790]},{"pos":[413822,413829],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[413862,413863],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[414255,414303],"content":"Contains<TSource>(IEnumerable<TSource>, TSource)","needQuote":true,"nodes":[{"content":"Contains&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource)","pos":[0,48],"source":"Contains<TSource>(IEnumerable<TSource>, TSource)"}]},{"pos":[414719,414736],"content":"Contains<TSource>","needQuote":true,"nodes":[{"content":"Contains&lt;TSource&gt;","pos":[0,17],"source":"Contains<TSource>"}]},{"pos":[414802,414803],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[414880,414891],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[414976,414977],"content":"<","needQuote":true,"nodes":[]},{"pos":[415004,415011],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[415077,415078]},{"pos":[415110,415117],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[415150,415151],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[415282,415302],"content":"Contains(Of TSource)","needQuote":true,"nodes":[{"content":"Contains(Of TSource)","pos":[0,20]}]},{"pos":[415371,415372],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[415449,415460],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[415546,415549]},{"pos":[415583,415590],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[415623,415624],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[415652,415653]},{"pos":[415685,415692],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[415725,415726],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[416171,416247],"content":"Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Contains&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource, IEqualityComparer&lt;TSource&gt;)","pos":[0,76],"source":"Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)"}]},{"pos":[416857,416874],"content":"Contains<TSource>","needQuote":true,"nodes":[{"content":"Contains&lt;TSource&gt;","pos":[0,17],"source":"Contains<TSource>"}]},{"pos":[416940,416941],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[417018,417029],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[417114,417115],"content":"<","needQuote":true,"nodes":[]},{"pos":[417142,417149],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[417215,417216]},{"pos":[417248,417255],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[417289,417290]},{"pos":[417378,417395],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[417486,417487],"content":"<","needQuote":true,"nodes":[]},{"pos":[417514,417521],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[417586,417587],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[417768,417788],"content":"Contains(Of TSource)","needQuote":true,"nodes":[{"content":"Contains(Of TSource)","pos":[0,20]}]},{"pos":[417857,417858],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[417935,417946],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[418032,418035]},{"pos":[418069,418076],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[418109,418110],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[418138,418139]},{"pos":[418171,418178],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[418212,418213]},{"pos":[418301,418318],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[418410,418413]},{"pos":[418447,418454],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[418487,418488],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[418515,418516],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[419013,419049],"content":"Count<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Count&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,36],"source":"Count<TSource>(IEnumerable<TSource>)"}]},{"pos":[419422,419436],"content":"Count<TSource>","needQuote":true,"nodes":[{"content":"Count&lt;TSource&gt;","pos":[0,14],"source":"Count<TSource>"}]},{"pos":[419499,419500],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[419577,419588],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[419673,419674],"content":"<","needQuote":true,"nodes":[]},{"pos":[419701,419708],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[419773,419774],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[419898,419915],"content":"Count(Of TSource)","needQuote":true,"nodes":[{"content":"Count(Of TSource)","pos":[0,17]}]},{"pos":[419981,419982],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[420059,420070],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[420156,420159]},{"pos":[420193,420200],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[420233,420234],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[420261,420262],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[420651,420711],"content":"Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Count&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,60],"source":"Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[421222,421236],"content":"Count<TSource>","needQuote":true,"nodes":[{"content":"Count&lt;TSource&gt;","pos":[0,14],"source":"Count<TSource>"}]},{"pos":[421299,421300],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[421377,421388],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[421473,421474],"content":"<","needQuote":true,"nodes":[]},{"pos":[421501,421508],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[421574,421575]},{"pos":[421630,421634],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[421692,421693],"content":"<","needQuote":true,"nodes":[]},{"pos":[421720,421727],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[421761,421762]},{"pos":[421818,421825],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[421918,421919],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[422075,422092],"content":"Count(Of TSource)","needQuote":true,"nodes":[{"content":"Count(Of TSource)","pos":[0,17]}]},{"pos":[422158,422159],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[422236,422247],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[422333,422336]},{"pos":[422370,422377],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[422410,422411],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[422439,422440]},{"pos":[422495,422499],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[422558,422561]},{"pos":[422595,422602],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[422636,422637]},{"pos":[422693,422700],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[422761,422762],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[422789,422790],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[423239,423284],"content":"DefaultIfEmpty<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,45],"source":"DefaultIfEmpty<TSource>(IEnumerable<TSource>)"}]},{"pos":[423693,423716],"content":"DefaultIfEmpty<TSource>","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;TSource&gt;","pos":[0,23],"source":"DefaultIfEmpty<TSource>"}]},{"pos":[423788,423789],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[423866,423877],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[423962,423963],"content":"<","needQuote":true,"nodes":[]},{"pos":[423990,423997],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[424062,424063],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[424196,424222],"content":"DefaultIfEmpty(Of TSource)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty(Of TSource)","pos":[0,26]}]},{"pos":[424297,424298],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[424375,424386],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[424472,424475]},{"pos":[424509,424516],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[424549,424550],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[424577,424578],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[424975,425029],"content":"DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource)","pos":[0,54],"source":"DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)"}]},{"pos":[425469,425492],"content":"DefaultIfEmpty<TSource>","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;TSource&gt;","pos":[0,23],"source":"DefaultIfEmpty<TSource>"}]},{"pos":[425564,425565],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[425642,425653],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[425738,425739],"content":"<","needQuote":true,"nodes":[]},{"pos":[425766,425773],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[425839,425840]},{"pos":[425872,425879],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[425912,425913],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[426050,426076],"content":"DefaultIfEmpty(Of TSource)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty(Of TSource)","pos":[0,26]}]},{"pos":[426151,426152],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[426229,426240],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[426326,426329]},{"pos":[426363,426370],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[426403,426404],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[426432,426433]},{"pos":[426465,426472],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[426505,426506],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[426915,426954],"content":"Distinct<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Distinct&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,39],"source":"Distinct<TSource>(IEnumerable<TSource>)"}]},{"pos":[427339,427356],"content":"Distinct<TSource>","needQuote":true,"nodes":[{"content":"Distinct&lt;TSource&gt;","pos":[0,17],"source":"Distinct<TSource>"}]},{"pos":[427422,427423],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[427500,427511],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[427596,427597],"content":"<","needQuote":true,"nodes":[]},{"pos":[427624,427631],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[427696,427697],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[427824,427844],"content":"Distinct(Of TSource)","needQuote":true,"nodes":[{"content":"Distinct(Of TSource)","pos":[0,20]}]},{"pos":[427913,427914],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[427991,428002],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[428088,428091]},{"pos":[428125,428132],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[428165,428166],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[428193,428194],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[428613,428680],"content":"Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Distinct&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,67],"source":"Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[429259,429276],"content":"Distinct<TSource>","needQuote":true,"nodes":[{"content":"Distinct&lt;TSource&gt;","pos":[0,17],"source":"Distinct<TSource>"}]},{"pos":[429342,429343],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[429420,429431],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[429516,429517],"content":"<","needQuote":true,"nodes":[]},{"pos":[429544,429551],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[429617,429618]},{"pos":[429706,429723],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[429814,429815],"content":"<","needQuote":true,"nodes":[]},{"pos":[429842,429849],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[429914,429915],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[430092,430112],"content":"Distinct(Of TSource)","needQuote":true,"nodes":[{"content":"Distinct(Of TSource)","pos":[0,20]}]},{"pos":[430181,430182],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[430259,430270],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[430356,430359]},{"pos":[430393,430400],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[430433,430434],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[430462,430463]},{"pos":[430551,430568],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[430660,430663]},{"pos":[430697,430704],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[430737,430738],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[430765,430766],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[431258,431305],"content":"ElementAt<TSource>(IEnumerable<TSource>, Int32)","needQuote":true,"nodes":[{"content":"ElementAt&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Int32)","pos":[0,47],"source":"ElementAt<TSource>(IEnumerable<TSource>, Int32)"}]},{"pos":[431742,431760],"content":"ElementAt<TSource>","needQuote":true,"nodes":[{"content":"ElementAt&lt;TSource&gt;","pos":[0,18],"source":"ElementAt<TSource>"}]},{"pos":[431827,431828],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[431905,431916],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[432001,432002],"content":"<","needQuote":true,"nodes":[]},{"pos":[432029,432036],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[432102,432103]},{"pos":[432157,432162],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[432221,432222],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[432363,432384],"content":"ElementAt(Of TSource)","needQuote":true,"nodes":[{"content":"ElementAt(Of TSource)","pos":[0,21]}]},{"pos":[432454,432455],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[432532,432543],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[432629,432632]},{"pos":[432666,432673],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[432706,432707],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[432735,432736]},{"pos":[432790,432795],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[432854,432855],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[433277,433333],"content":"ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)","needQuote":true,"nodes":[{"content":"ElementAtOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Int32)","pos":[0,56],"source":"ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)"}]},{"pos":[433806,433833],"content":"ElementAtOrDefault<TSource>","needQuote":true,"nodes":[{"content":"ElementAtOrDefault&lt;TSource&gt;","pos":[0,27],"source":"ElementAtOrDefault<TSource>"}]},{"pos":[433909,433910],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[433987,433998],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[434083,434084],"content":"<","needQuote":true,"nodes":[]},{"pos":[434111,434118],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[434184,434185]},{"pos":[434239,434244],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[434303,434304],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[434454,434484],"content":"ElementAtOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"ElementAtOrDefault(Of TSource)","pos":[0,30]}]},{"pos":[434563,434564],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[434641,434652],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[434738,434741]},{"pos":[434775,434782],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[434815,434816],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[434844,434845]},{"pos":[434899,434904],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[434963,434964],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[435432,435491],"content":"Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Except&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,59],"source":"Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[436038,436053],"content":"Except<TSource>","needQuote":true,"nodes":[{"content":"Except&lt;TSource&gt;","pos":[0,15],"source":"Except<TSource>"}]},{"pos":[436117,436118],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[436195,436206],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[436291,436292],"content":"<","needQuote":true,"nodes":[]},{"pos":[436319,436326],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[436392,436393]},{"pos":[436475,436486],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[436571,436572],"content":"<","needQuote":true,"nodes":[]},{"pos":[436599,436606],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[436671,436672],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[436841,436859],"content":"Except(Of TSource)","needQuote":true,"nodes":[{"content":"Except(Of TSource)","pos":[0,18]}]},{"pos":[436926,436927],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[437004,437015],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[437101,437104]},{"pos":[437138,437145],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[437178,437179],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[437207,437208]},{"pos":[437290,437301],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[437387,437390]},{"pos":[437424,437431],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[437464,437465],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[437492,437493],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[438039,438126],"content":"Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Except&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,87],"source":"Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[438867,438882],"content":"Except<TSource>","needQuote":true,"nodes":[{"content":"Except&lt;TSource&gt;","pos":[0,15],"source":"Except<TSource>"}]},{"pos":[438946,438947],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[439024,439035],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[439120,439121],"content":"<","needQuote":true,"nodes":[]},{"pos":[439148,439155],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[439221,439222]},{"pos":[439304,439315],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[439400,439401],"content":"<","needQuote":true,"nodes":[]},{"pos":[439428,439435],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[439501,439502]},{"pos":[439590,439607],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[439698,439699],"content":"<","needQuote":true,"nodes":[]},{"pos":[439726,439733],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[439798,439799],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[440018,440036],"content":"Except(Of TSource)","needQuote":true,"nodes":[{"content":"Except(Of TSource)","pos":[0,18]}]},{"pos":[440103,440104],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[440181,440192],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[440278,440281]},{"pos":[440315,440322],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[440355,440356],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[440384,440385]},{"pos":[440467,440478],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[440564,440567]},{"pos":[440601,440608],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[440641,440642],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[440670,440671]},{"pos":[440759,440776],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[440868,440871]},{"pos":[440905,440912],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[440945,440946],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[440973,440974],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[441534,441570],"content":"First<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"First&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,36],"source":"First<TSource>(IEnumerable<TSource>)"}]},{"pos":[441943,441957],"content":"First<TSource>","needQuote":true,"nodes":[{"content":"First&lt;TSource&gt;","pos":[0,14],"source":"First<TSource>"}]},{"pos":[442020,442021],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[442098,442109],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[442194,442195],"content":"<","needQuote":true,"nodes":[]},{"pos":[442222,442229],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[442294,442295],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[442419,442436],"content":"First(Of TSource)","needQuote":true,"nodes":[{"content":"First(Of TSource)","pos":[0,17]}]},{"pos":[442502,442503],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[442580,442591],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[442677,442680]},{"pos":[442714,442721],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[442754,442755],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[442782,442783],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[443172,443232],"content":"First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"First&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,60],"source":"First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[443743,443757],"content":"First<TSource>","needQuote":true,"nodes":[{"content":"First&lt;TSource&gt;","pos":[0,14],"source":"First<TSource>"}]},{"pos":[443820,443821],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[443898,443909],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[443994,443995],"content":"<","needQuote":true,"nodes":[]},{"pos":[444022,444029],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[444095,444096]},{"pos":[444151,444155],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[444213,444214],"content":"<","needQuote":true,"nodes":[]},{"pos":[444241,444248],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[444282,444283]},{"pos":[444339,444346],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[444439,444440],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[444596,444613],"content":"First(Of TSource)","needQuote":true,"nodes":[{"content":"First(Of TSource)","pos":[0,17]}]},{"pos":[444679,444680],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[444757,444768],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[444854,444857]},{"pos":[444891,444898],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[444931,444932],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[444960,444961]},{"pos":[445016,445020],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[445079,445082]},{"pos":[445116,445123],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[445157,445158]},{"pos":[445214,445221],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[445282,445283],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[445310,445311],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[445760,445805],"content":"FirstOrDefault<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,45],"source":"FirstOrDefault<TSource>(IEnumerable<TSource>)"}]},{"pos":[446214,446237],"content":"FirstOrDefault<TSource>","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;TSource&gt;","pos":[0,23],"source":"FirstOrDefault<TSource>"}]},{"pos":[446309,446310],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[446387,446398],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[446483,446484],"content":"<","needQuote":true,"nodes":[]},{"pos":[446511,446518],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[446583,446584],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[446717,446743],"content":"FirstOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"FirstOrDefault(Of TSource)","pos":[0,26]}]},{"pos":[446818,446819],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[446896,446907],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[446993,446996]},{"pos":[447030,447037],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[447070,447071],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[447098,447099],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[447524,447593],"content":"FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,69],"source":"FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[448140,448163],"content":"FirstOrDefault<TSource>","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;TSource&gt;","pos":[0,23],"source":"FirstOrDefault<TSource>"}]},{"pos":[448235,448236],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[448313,448324],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[448409,448410],"content":"<","needQuote":true,"nodes":[]},{"pos":[448437,448444],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[448510,448511]},{"pos":[448566,448570],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[448628,448629],"content":"<","needQuote":true,"nodes":[]},{"pos":[448656,448663],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[448697,448698]},{"pos":[448754,448761],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[448854,448855],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[449020,449046],"content":"FirstOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"FirstOrDefault(Of TSource)","pos":[0,26]}]},{"pos":[449121,449122],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[449199,449210],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[449296,449299]},{"pos":[449333,449340],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[449373,449374],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[449402,449403]},{"pos":[449458,449462],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[449521,449524]},{"pos":[449558,449565],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[449599,449600]},{"pos":[449656,449663],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[449724,449725],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[449752,449753],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[450243,450308],"content":"GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,65],"source":"GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[450811,450833],"content":"GroupBy<TSource, TKey>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey&gt;","pos":[0,22],"source":"GroupBy<TSource, TKey>"}]},{"pos":[450904,450905],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[450982,450993],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[451078,451079],"content":"<","needQuote":true,"nodes":[]},{"pos":[451106,451113],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[451179,451180]},{"pos":[451235,451239],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[451297,451298],"content":"<","needQuote":true,"nodes":[]},{"pos":[451325,451332],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[451366,451367]},{"pos":[451399,451403],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[451465,451466],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[451613,451638],"content":"GroupBy(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey)","pos":[0,25]}]},{"pos":[451712,451713],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[451790,451801],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[451887,451890]},{"pos":[451924,451931],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[451964,451965],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[451993,451994]},{"pos":[452049,452053],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[452112,452115]},{"pos":[452149,452156],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[452190,452191]},{"pos":[452223,452227],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[452257,452258],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[452285,452286],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[452800,452890],"content":"GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,90],"source":"GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[453578,453600],"content":"GroupBy<TSource, TKey>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey&gt;","pos":[0,22],"source":"GroupBy<TSource, TKey>"}]},{"pos":[453671,453672],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[453749,453760],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[453845,453846],"content":"<","needQuote":true,"nodes":[]},{"pos":[453873,453880],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[453946,453947]},{"pos":[454002,454006],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[454064,454065],"content":"<","needQuote":true,"nodes":[]},{"pos":[454092,454099],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[454133,454134]},{"pos":[454166,454170],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[454233,454234]},{"pos":[454322,454339],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[454430,454431],"content":"<","needQuote":true,"nodes":[]},{"pos":[454458,454462],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[454524,454525],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[454722,454747],"content":"GroupBy(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey)","pos":[0,25]}]},{"pos":[454821,454822],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[454899,454910],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[454996,454999]},{"pos":[455033,455040],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[455073,455074],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[455102,455103]},{"pos":[455158,455162],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[455221,455224]},{"pos":[455258,455265],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[455299,455300]},{"pos":[455332,455336],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[455366,455367],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[455395,455396]},{"pos":[455484,455501],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[455593,455596]},{"pos":[455630,455634],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[455664,455665],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[455692,455693],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[456281,456381],"content":"GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;)","pos":[0,100],"source":"GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)"}]},{"pos":[457030,457062],"content":"GroupBy<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement&gt;","pos":[0,32],"source":"GroupBy<TSource, TKey, TElement>"}]},{"pos":[457143,457144],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[457221,457232],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[457317,457318],"content":"<","needQuote":true,"nodes":[]},{"pos":[457345,457352],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[457418,457419]},{"pos":[457474,457478],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[457536,457537],"content":"<","needQuote":true,"nodes":[]},{"pos":[457564,457571],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[457605,457606]},{"pos":[457638,457642],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[457705,457706]},{"pos":[457761,457765],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[457823,457824],"content":"<","needQuote":true,"nodes":[]},{"pos":[457851,457858],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[457892,457893]},{"pos":[457925,457933],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[457999,458000],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[458168,458203],"content":"GroupBy(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TElement)","pos":[0,35]}]},{"pos":[458287,458288],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[458365,458376],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[458462,458465]},{"pos":[458499,458506],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[458539,458540],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[458568,458569]},{"pos":[458624,458628],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[458687,458690]},{"pos":[458724,458731],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[458765,458766]},{"pos":[458798,458802],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[458832,458833],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[458861,458862]},{"pos":[458917,458921],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[458980,458983]},{"pos":[459017,459024],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[459058,459059]},{"pos":[459091,459099],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[459133,459134],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[459161,459162],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[459791,459916],"content":"GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,125],"source":"GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[460750,460782],"content":"GroupBy<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement&gt;","pos":[0,32],"source":"GroupBy<TSource, TKey, TElement>"}]},{"pos":[460863,460864],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[460941,460952],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[461037,461038],"content":"<","needQuote":true,"nodes":[]},{"pos":[461065,461072],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[461138,461139]},{"pos":[461194,461198],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[461256,461257],"content":"<","needQuote":true,"nodes":[]},{"pos":[461284,461291],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[461325,461326]},{"pos":[461358,461362],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[461425,461426]},{"pos":[461481,461485],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[461543,461544],"content":"<","needQuote":true,"nodes":[]},{"pos":[461571,461578],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[461612,461613]},{"pos":[461645,461653],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[461720,461721]},{"pos":[461809,461826],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[461917,461918],"content":"<","needQuote":true,"nodes":[]},{"pos":[461945,461949],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[462011,462012],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[462230,462265],"content":"GroupBy(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TElement)","pos":[0,35]}]},{"pos":[462349,462350],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[462427,462438],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[462524,462527]},{"pos":[462561,462568],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[462601,462602],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[462630,462631]},{"pos":[462686,462690],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[462749,462752]},{"pos":[462786,462793],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[462827,462828]},{"pos":[462860,462864],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[462894,462895],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[462923,462924]},{"pos":[462979,462983],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[463042,463045]},{"pos":[463079,463086],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[463120,463121]},{"pos":[463153,463161],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[463195,463196],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[463224,463225]},{"pos":[463313,463330],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[463422,463425]},{"pos":[463459,463463],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[463493,463494],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[463521,463522],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[464248,464365],"content":"GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TKey, IEnumerable&lt;TSource&gt;, TResult&gt;)","pos":[0,117],"source":"GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)"}]},{"pos":[465169,465200],"content":"GroupBy<TSource, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TResult&gt;","pos":[0,31],"source":"GroupBy<TSource, TKey, TResult>"}]},{"pos":[465280,465281],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[465358,465369],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[465454,465455],"content":"<","needQuote":true,"nodes":[]},{"pos":[465482,465489],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[465555,465556]},{"pos":[465611,465615],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[465673,465674],"content":"<","needQuote":true,"nodes":[]},{"pos":[465701,465708],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[465742,465743]},{"pos":[465775,465779],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[465842,465843]},{"pos":[465898,465902],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[465960,465961],"content":"<","needQuote":true,"nodes":[]},{"pos":[465988,465992],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[466023,466024]},{"pos":[466106,466117],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[466202,466203],"content":"<","needQuote":true,"nodes":[]},{"pos":[466230,466237],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[466303,466304]},{"pos":[466336,466343],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[466408,466409],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[466621,466655],"content":"GroupBy(Of TSource, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TResult)","pos":[0,34]}]},{"pos":[466738,466739],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[466816,466827],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[466913,466916]},{"pos":[466950,466957],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[466990,466991],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[467019,467020]},{"pos":[467075,467079],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[467138,467141]},{"pos":[467175,467182],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[467216,467217]},{"pos":[467249,467253],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[467283,467284],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[467312,467313]},{"pos":[467368,467372],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[467431,467434]},{"pos":[467468,467472],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[467503,467504]},{"pos":[467586,467597],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[467683,467686]},{"pos":[467720,467727],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[467760,467761],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[467789,467790]},{"pos":[467822,467829],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[467862,467863],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[467890,467891],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[468645,468787],"content":"GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TKey, IEnumerable&lt;TSource&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,142],"source":"GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[469776,469807],"content":"GroupBy<TSource, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TResult&gt;","pos":[0,31],"source":"GroupBy<TSource, TKey, TResult>"}]},{"pos":[469887,469888],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[469965,469976],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[470061,470062],"content":"<","needQuote":true,"nodes":[]},{"pos":[470089,470096],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[470162,470163]},{"pos":[470218,470222],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[470280,470281],"content":"<","needQuote":true,"nodes":[]},{"pos":[470308,470315],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[470349,470350]},{"pos":[470382,470386],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[470449,470450]},{"pos":[470505,470509],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[470567,470568],"content":"<","needQuote":true,"nodes":[]},{"pos":[470595,470599],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[470630,470631]},{"pos":[470713,470724],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[470809,470810],"content":"<","needQuote":true,"nodes":[]},{"pos":[470837,470844],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[470910,470911]},{"pos":[470943,470950],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[471016,471017]},{"pos":[471105,471122],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[471213,471214],"content":"<","needQuote":true,"nodes":[]},{"pos":[471241,471245],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[471307,471308],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[471570,471604],"content":"GroupBy(Of TSource, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TResult)","pos":[0,34]}]},{"pos":[471687,471688],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[471765,471776],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[471862,471865]},{"pos":[471899,471906],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[471939,471940],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[471968,471969]},{"pos":[472024,472028],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[472087,472090]},{"pos":[472124,472131],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[472165,472166]},{"pos":[472198,472202],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[472232,472233],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[472261,472262]},{"pos":[472317,472321],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[472380,472383]},{"pos":[472417,472421],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[472452,472453]},{"pos":[472535,472546],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[472632,472635]},{"pos":[472669,472676],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[472709,472710],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[472738,472739]},{"pos":[472771,472778],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[472811,472812],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[472840,472841]},{"pos":[472929,472946],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[473038,473041]},{"pos":[473075,473079],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[473109,473110],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[473137,473138],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[473966,474119],"content":"GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, Func&lt;TKey, IEnumerable&lt;TElement&gt;, TResult&gt;)","pos":[0,153],"source":"GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)"}]},{"pos":[475072,475113],"content":"GroupBy<TSource, TKey, TElement, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement, TResult&gt;","pos":[0,41],"source":"GroupBy<TSource, TKey, TElement, TResult>"}]},{"pos":[475203,475204],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[475281,475292],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[475377,475378],"content":"<","needQuote":true,"nodes":[]},{"pos":[475405,475412],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[475478,475479]},{"pos":[475534,475538],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[475596,475597],"content":"<","needQuote":true,"nodes":[]},{"pos":[475624,475631],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[475665,475666]},{"pos":[475698,475702],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[475765,475766]},{"pos":[475821,475825],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[475883,475884],"content":"<","needQuote":true,"nodes":[]},{"pos":[475911,475918],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[475952,475953]},{"pos":[475985,475993],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[476060,476061]},{"pos":[476116,476120],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[476178,476179],"content":"<","needQuote":true,"nodes":[]},{"pos":[476206,476210],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[476241,476242]},{"pos":[476324,476335],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[476420,476421],"content":"<","needQuote":true,"nodes":[]},{"pos":[476448,476456],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[476523,476524]},{"pos":[476556,476563],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[476628,476629],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[476862,476906],"content":"GroupBy(Of TSource, TKey, TElement, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TElement, TResult)","pos":[0,44]}]},{"pos":[476999,477000],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[477077,477088],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[477174,477177]},{"pos":[477211,477218],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[477251,477252],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[477280,477281]},{"pos":[477336,477340],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[477399,477402]},{"pos":[477436,477443],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[477477,477478]},{"pos":[477510,477514],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[477544,477545],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[477573,477574]},{"pos":[477629,477633],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[477692,477695]},{"pos":[477729,477736],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[477770,477771]},{"pos":[477803,477811],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[477845,477846],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[477874,477875]},{"pos":[477930,477934],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[477993,477996]},{"pos":[478030,478034],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[478065,478066]},{"pos":[478148,478159],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[478245,478248]},{"pos":[478282,478290],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[478324,478325],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[478353,478354]},{"pos":[478386,478393],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[478426,478427],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[478454,478455],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[479326,479504],"content":"GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, Func&lt;TKey, IEnumerable&lt;TElement&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,178],"source":"GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[480642,480683],"content":"GroupBy<TSource, TKey, TElement, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement, TResult&gt;","pos":[0,41],"source":"GroupBy<TSource, TKey, TElement, TResult>"}]},{"pos":[480773,480774],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[480851,480862],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[480947,480948],"content":"<","needQuote":true,"nodes":[]},{"pos":[480975,480982],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[481048,481049]},{"pos":[481104,481108],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[481166,481167],"content":"<","needQuote":true,"nodes":[]},{"pos":[481194,481201],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[481235,481236]},{"pos":[481268,481272],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[481335,481336]},{"pos":[481391,481395],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[481453,481454],"content":"<","needQuote":true,"nodes":[]},{"pos":[481481,481488],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[481522,481523]},{"pos":[481555,481563],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[481630,481631]},{"pos":[481686,481690],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[481748,481749],"content":"<","needQuote":true,"nodes":[]},{"pos":[481776,481780],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[481811,481812]},{"pos":[481894,481905],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[481990,481991],"content":"<","needQuote":true,"nodes":[]},{"pos":[482018,482026],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[482093,482094]},{"pos":[482126,482133],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[482199,482200]},{"pos":[482288,482305],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[482396,482397],"content":"<","needQuote":true,"nodes":[]},{"pos":[482424,482428],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[482490,482491],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[482774,482818],"content":"GroupBy(Of TSource, TKey, TElement, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TElement, TResult)","pos":[0,44]}]},{"pos":[482911,482912],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[482989,483000],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[483086,483089]},{"pos":[483123,483130],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[483163,483164],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[483192,483193]},{"pos":[483248,483252],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[483311,483314]},{"pos":[483348,483355],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[483389,483390]},{"pos":[483422,483426],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[483456,483457],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[483485,483486]},{"pos":[483541,483545],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[483604,483607]},{"pos":[483641,483648],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[483682,483683]},{"pos":[483715,483723],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[483757,483758],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[483786,483787]},{"pos":[483842,483846],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[483905,483908]},{"pos":[483942,483946],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[483977,483978]},{"pos":[484060,484071],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[484157,484160]},{"pos":[484194,484202],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[484236,484237],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[484265,484266]},{"pos":[484298,484305],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[484338,484339],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[484367,484368]},{"pos":[484456,484473],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[484565,484568]},{"pos":[484602,484606],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[484636,484637],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[484664,484665],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[485635,485801],"content":"GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)","needQuote":true,"nodes":[{"content":"GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;(IEnumerable&lt;TOuter&gt;, IEnumerable&lt;TInner&gt;, Func&lt;TOuter, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;TOuter, IEnumerable&lt;TInner&gt;, TResult&gt;)","pos":[0,166],"source":"GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)"}]},{"pos":[486899,486939],"content":"GroupJoin<TOuter, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;","pos":[0,40],"source":"GroupJoin<TOuter, TInner, TKey, TResult>"}]},{"pos":[487028,487029],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[487106,487117],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[487202,487203],"content":"<","needQuote":true,"nodes":[]},{"pos":[487230,487236],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[487301,487302]},{"pos":[487384,487395],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[487480,487481],"content":"<","needQuote":true,"nodes":[]},{"pos":[487508,487514],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[487579,487580]},{"pos":[487635,487639],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[487697,487698],"content":"<","needQuote":true,"nodes":[]},{"pos":[487725,487731],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[487764,487765]},{"pos":[487797,487801],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[487864,487865]},{"pos":[487920,487924],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[487982,487983],"content":"<","needQuote":true,"nodes":[]},{"pos":[488010,488016],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[488049,488050]},{"pos":[488082,488086],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[488149,488150]},{"pos":[488205,488209],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[488267,488268],"content":"<","needQuote":true,"nodes":[]},{"pos":[488295,488301],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[488334,488335]},{"pos":[488417,488428],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[488513,488514],"content":"<","needQuote":true,"nodes":[]},{"pos":[488541,488547],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[488612,488613]},{"pos":[488645,488652],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[488717,488718],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[488997,489040],"content":"GroupJoin(Of TOuter, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupJoin(Of TOuter, TInner, TKey, TResult)","pos":[0,43]}]},{"pos":[489132,489133],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[489210,489221],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[489307,489310]},{"pos":[489344,489350],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"pos":[489382,489383],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[489411,489412]},{"pos":[489494,489505],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[489591,489594]},{"pos":[489628,489634],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[489666,489667],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[489695,489696]},{"pos":[489751,489755],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[489814,489817]},{"pos":[489851,489857],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[489890,489891]},{"pos":[489923,489927],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[489957,489958],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[489986,489987]},{"pos":[490042,490046],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[490105,490108]},{"pos":[490142,490148],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[490181,490182]},{"pos":[490214,490218],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[490248,490249],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[490277,490278]},{"pos":[490333,490337],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[490396,490399]},{"pos":[490433,490439],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[490472,490473]},{"pos":[490555,490566],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[490652,490655]},{"pos":[490689,490695],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[490727,490728],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[490756,490757]},{"pos":[490789,490796],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[490829,490830],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[490857,490858],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[491850,492041],"content":"GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;(IEnumerable&lt;TOuter&gt;, IEnumerable&lt;TInner&gt;, Func&lt;TOuter, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;TOuter, IEnumerable&lt;TInner&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,191],"source":"GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[493324,493364],"content":"GroupJoin<TOuter, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;","pos":[0,40],"source":"GroupJoin<TOuter, TInner, TKey, TResult>"}]},{"pos":[493453,493454],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[493531,493542],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[493627,493628],"content":"<","needQuote":true,"nodes":[]},{"pos":[493655,493661],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[493726,493727]},{"pos":[493809,493820],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[493905,493906],"content":"<","needQuote":true,"nodes":[]},{"pos":[493933,493939],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[494004,494005]},{"pos":[494060,494064],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[494122,494123],"content":"<","needQuote":true,"nodes":[]},{"pos":[494150,494156],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[494189,494190]},{"pos":[494222,494226],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[494289,494290]},{"pos":[494345,494349],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[494407,494408],"content":"<","needQuote":true,"nodes":[]},{"pos":[494435,494441],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[494474,494475]},{"pos":[494507,494511],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[494574,494575]},{"pos":[494630,494634],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[494692,494693],"content":"<","needQuote":true,"nodes":[]},{"pos":[494720,494726],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[494759,494760]},{"pos":[494842,494853],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[494938,494939],"content":"<","needQuote":true,"nodes":[]},{"pos":[494966,494972],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[495037,495038]},{"pos":[495070,495077],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[495143,495144]},{"pos":[495232,495249],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[495340,495341],"content":"<","needQuote":true,"nodes":[]},{"pos":[495368,495372],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[495434,495435],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[495764,495807],"content":"GroupJoin(Of TOuter, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupJoin(Of TOuter, TInner, TKey, TResult)","pos":[0,43]}]},{"pos":[495899,495900],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[495977,495988],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[496074,496077]},{"pos":[496111,496117],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"pos":[496149,496150],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[496178,496179]},{"pos":[496261,496272],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[496358,496361]},{"pos":[496395,496401],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[496433,496434],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[496462,496463]},{"pos":[496518,496522],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[496581,496584]},{"pos":[496618,496624],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[496657,496658]},{"pos":[496690,496694],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[496724,496725],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[496753,496754]},{"pos":[496809,496813],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[496872,496875]},{"pos":[496909,496915],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[496948,496949]},{"pos":[496981,496985],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[497015,497016],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[497044,497045]},{"pos":[497100,497104],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[497163,497166]},{"pos":[497200,497206],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[497239,497240]},{"pos":[497322,497333],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[497419,497422]},{"pos":[497456,497462],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[497494,497495],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[497523,497524]},{"pos":[497556,497563],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[497596,497597],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[497625,497626]},{"pos":[497714,497731],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[497823,497826]},{"pos":[497860,497864],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[497894,497895],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[497922,497923],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[498861,498923],"content":"Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Intersect&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,62],"source":"Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[499482,499500],"content":"Intersect<TSource>","needQuote":true,"nodes":[{"content":"Intersect&lt;TSource&gt;","pos":[0,18],"source":"Intersect<TSource>"}]},{"pos":[499567,499568],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[499645,499656],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[499741,499742],"content":"<","needQuote":true,"nodes":[]},{"pos":[499769,499776],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[499842,499843]},{"pos":[499925,499936],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[500021,500022],"content":"<","needQuote":true,"nodes":[]},{"pos":[500049,500056],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[500121,500122],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[500294,500315],"content":"Intersect(Of TSource)","needQuote":true,"nodes":[{"content":"Intersect(Of TSource)","pos":[0,21]}]},{"pos":[500385,500386],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[500463,500474],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[500560,500563]},{"pos":[500597,500604],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[500637,500638],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[500666,500667]},{"pos":[500749,500760],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[500846,500849]},{"pos":[500883,500890],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[500923,500924],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[500951,500952],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[501510,501600],"content":"Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Intersect&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,90],"source":"Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[502353,502371],"content":"Intersect<TSource>","needQuote":true,"nodes":[{"content":"Intersect&lt;TSource&gt;","pos":[0,18],"source":"Intersect<TSource>"}]},{"pos":[502438,502439],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[502516,502527],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[502612,502613],"content":"<","needQuote":true,"nodes":[]},{"pos":[502640,502647],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[502713,502714]},{"pos":[502796,502807],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[502892,502893],"content":"<","needQuote":true,"nodes":[]},{"pos":[502920,502927],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[502993,502994]},{"pos":[503082,503099],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[503190,503191],"content":"<","needQuote":true,"nodes":[]},{"pos":[503218,503225],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[503290,503291],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[503513,503534],"content":"Intersect(Of TSource)","needQuote":true,"nodes":[{"content":"Intersect(Of TSource)","pos":[0,21]}]},{"pos":[503604,503605],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[503682,503693],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[503779,503782]},{"pos":[503816,503823],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[503856,503857],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[503885,503886]},{"pos":[503968,503979],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[504065,504068]},{"pos":[504102,504109],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[504142,504143],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[504171,504172]},{"pos":[504260,504277],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[504369,504372]},{"pos":[504406,504413],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[504446,504447],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[504474,504475],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[505154,505302],"content":"Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)","needQuote":true,"nodes":[{"content":"Join&lt;TOuter, TInner, TKey, TResult&gt;(IEnumerable&lt;TOuter&gt;, IEnumerable&lt;TInner&gt;, Func&lt;TOuter, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;TOuter, TInner, TResult&gt;)","pos":[0,148],"source":"Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)"}]},{"pos":[506241,506276],"content":"Join<TOuter, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"Join&lt;TOuter, TInner, TKey, TResult&gt;","pos":[0,35],"source":"Join<TOuter, TInner, TKey, TResult>"}]},{"pos":[506360,506361],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[506438,506449],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[506534,506535],"content":"<","needQuote":true,"nodes":[]},{"pos":[506562,506568],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[506633,506634]},{"pos":[506716,506727],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[506812,506813],"content":"<","needQuote":true,"nodes":[]},{"pos":[506840,506846],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[506911,506912]},{"pos":[506967,506971],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[507029,507030],"content":"<","needQuote":true,"nodes":[]},{"pos":[507057,507063],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[507096,507097]},{"pos":[507129,507133],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[507196,507197]},{"pos":[507252,507256],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[507314,507315],"content":"<","needQuote":true,"nodes":[]},{"pos":[507342,507348],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[507381,507382]},{"pos":[507414,507418],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[507481,507482]},{"pos":[507537,507541],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[507599,507600],"content":"<","needQuote":true,"nodes":[]},{"pos":[507627,507633],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[507666,507667]},{"pos":[507699,507705],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[507738,507739]},{"pos":[507771,507778],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[507843,507844],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[508078,508116],"content":"Join(Of TOuter, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"Join(Of TOuter, TInner, TKey, TResult)","pos":[0,38]}]},{"pos":[508203,508204],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[508281,508292],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[508378,508381]},{"pos":[508415,508421],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"pos":[508453,508454],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[508482,508483]},{"pos":[508565,508576],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[508662,508665]},{"pos":[508699,508705],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[508737,508738],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[508766,508767]},{"pos":[508822,508826],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[508885,508888]},{"pos":[508922,508928],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[508961,508962]},{"pos":[508994,508998],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[509028,509029],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[509057,509058]},{"pos":[509113,509117],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[509176,509179]},{"pos":[509213,509219],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[509252,509253]},{"pos":[509285,509289],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[509319,509320],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[509348,509349]},{"pos":[509404,509408],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[509467,509470]},{"pos":[509504,509510],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[509543,509544]},{"pos":[509576,509582],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[509615,509616]},{"pos":[509648,509655],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[509688,509689],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[509716,509717],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[510580,510753],"content":"Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"Join&lt;TOuter, TInner, TKey, TResult&gt;(IEnumerable&lt;TOuter&gt;, IEnumerable&lt;TInner&gt;, Func&lt;TOuter, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;TOuter, TInner, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,173],"source":"Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[511877,511912],"content":"Join<TOuter, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"Join&lt;TOuter, TInner, TKey, TResult&gt;","pos":[0,35],"source":"Join<TOuter, TInner, TKey, TResult>"}]},{"pos":[511996,511997],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[512074,512085],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[512170,512171],"content":"<","needQuote":true,"nodes":[]},{"pos":[512198,512204],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[512269,512270]},{"pos":[512352,512363],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[512448,512449],"content":"<","needQuote":true,"nodes":[]},{"pos":[512476,512482],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[512547,512548]},{"pos":[512603,512607],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[512665,512666],"content":"<","needQuote":true,"nodes":[]},{"pos":[512693,512699],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[512732,512733]},{"pos":[512765,512769],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[512832,512833]},{"pos":[512888,512892],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[512950,512951],"content":"<","needQuote":true,"nodes":[]},{"pos":[512978,512984],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[513017,513018]},{"pos":[513050,513054],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[513117,513118]},{"pos":[513173,513177],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[513235,513236],"content":"<","needQuote":true,"nodes":[]},{"pos":[513263,513269],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[513302,513303]},{"pos":[513335,513341],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[513374,513375]},{"pos":[513407,513414],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[513480,513481]},{"pos":[513569,513586],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[513677,513678],"content":"<","needQuote":true,"nodes":[]},{"pos":[513705,513709],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[513771,513772],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[514056,514094],"content":"Join(Of TOuter, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"Join(Of TOuter, TInner, TKey, TResult)","pos":[0,38]}]},{"pos":[514181,514182],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[514259,514270],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[514356,514359]},{"pos":[514393,514399],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"pos":[514431,514432],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[514460,514461]},{"pos":[514543,514554],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[514640,514643]},{"pos":[514677,514683],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[514715,514716],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[514744,514745]},{"pos":[514800,514804],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[514863,514866]},{"pos":[514900,514906],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[514939,514940]},{"pos":[514972,514976],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[515006,515007],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[515035,515036]},{"pos":[515091,515095],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[515154,515157]},{"pos":[515191,515197],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[515230,515231]},{"pos":[515263,515267],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[515297,515298],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[515326,515327]},{"pos":[515382,515386],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[515445,515448]},{"pos":[515482,515488],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[515521,515522]},{"pos":[515554,515560],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[515593,515594]},{"pos":[515626,515633],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[515666,515667],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[515695,515696]},{"pos":[515784,515801],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[515893,515896]},{"pos":[515930,515934],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[515964,515965],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[515992,515993],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[516798,516833],"content":"Last<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Last&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,35],"source":"Last<TSource>(IEnumerable<TSource>)"}]},{"pos":[517202,517215],"content":"Last<TSource>","needQuote":true,"nodes":[{"content":"Last&lt;TSource&gt;","pos":[0,13],"source":"Last<TSource>"}]},{"pos":[517277,517278],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[517355,517366],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[517451,517452],"content":"<","needQuote":true,"nodes":[]},{"pos":[517479,517486],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[517551,517552],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[517675,517691],"content":"Last(Of TSource)","needQuote":true,"nodes":[{"content":"Last(Of TSource)","pos":[0,16]}]},{"pos":[517756,517757],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[517834,517845],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[517931,517934]},{"pos":[517968,517975],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[518008,518009],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[518036,518037],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[518422,518481],"content":"Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Last&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,59],"source":"Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[518988,519001],"content":"Last<TSource>","needQuote":true,"nodes":[{"content":"Last&lt;TSource&gt;","pos":[0,13],"source":"Last<TSource>"}]},{"pos":[519063,519064],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[519141,519152],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[519237,519238],"content":"<","needQuote":true,"nodes":[]},{"pos":[519265,519272],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[519338,519339]},{"pos":[519394,519398],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[519456,519457],"content":"<","needQuote":true,"nodes":[]},{"pos":[519484,519491],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[519525,519526]},{"pos":[519582,519589],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[519682,519683],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[519838,519854],"content":"Last(Of TSource)","needQuote":true,"nodes":[{"content":"Last(Of TSource)","pos":[0,16]}]},{"pos":[519919,519920],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[519997,520008],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[520094,520097]},{"pos":[520131,520138],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[520171,520172],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[520200,520201]},{"pos":[520256,520260],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[520319,520322]},{"pos":[520356,520363],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[520397,520398]},{"pos":[520454,520461],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[520522,520523],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[520550,520551],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[520996,521040],"content":"LastOrDefault<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,44],"source":"LastOrDefault<TSource>(IEnumerable<TSource>)"}]},{"pos":[521445,521467],"content":"LastOrDefault<TSource>","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;TSource&gt;","pos":[0,22],"source":"LastOrDefault<TSource>"}]},{"pos":[521538,521539],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[521616,521627],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[521712,521713],"content":"<","needQuote":true,"nodes":[]},{"pos":[521740,521747],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[521812,521813],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[521945,521970],"content":"LastOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"LastOrDefault(Of TSource)","pos":[0,25]}]},{"pos":[522044,522045],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[522122,522133],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[522219,522222]},{"pos":[522256,522263],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[522296,522297],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[522324,522325],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[522746,522814],"content":"LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,68],"source":"LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[523357,523379],"content":"LastOrDefault<TSource>","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;TSource&gt;","pos":[0,22],"source":"LastOrDefault<TSource>"}]},{"pos":[523450,523451],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[523528,523539],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[523624,523625],"content":"<","needQuote":true,"nodes":[]},{"pos":[523652,523659],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[523725,523726]},{"pos":[523781,523785],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[523843,523844],"content":"<","needQuote":true,"nodes":[]},{"pos":[523871,523878],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[523912,523913]},{"pos":[523969,523976],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[524069,524070],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[524234,524259],"content":"LastOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"LastOrDefault(Of TSource)","pos":[0,25]}]},{"pos":[524333,524334],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[524411,524422],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[524508,524511]},{"pos":[524545,524552],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[524585,524586],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[524614,524615]},{"pos":[524670,524674],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[524733,524736]},{"pos":[524770,524777],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[524811,524812]},{"pos":[524868,524875],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[524936,524937],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[524964,524965],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[525433,525473],"content":"LongCount<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"LongCount&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,40],"source":"LongCount<TSource>(IEnumerable<TSource>)"}]},{"pos":[525862,525880],"content":"LongCount<TSource>","needQuote":true,"nodes":[{"content":"LongCount&lt;TSource&gt;","pos":[0,18],"source":"LongCount<TSource>"}]},{"pos":[525947,525948],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[526025,526036],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[526121,526122],"content":"<","needQuote":true,"nodes":[]},{"pos":[526149,526156],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[526221,526222],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[526350,526371],"content":"LongCount(Of TSource)","needQuote":true,"nodes":[{"content":"LongCount(Of TSource)","pos":[0,21]}]},{"pos":[526441,526442],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[526519,526530],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[526616,526619]},{"pos":[526653,526660],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[526693,526694],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[526721,526722],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[527127,527191],"content":"LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"LongCount&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,64],"source":"LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[527718,527736],"content":"LongCount<TSource>","needQuote":true,"nodes":[{"content":"LongCount&lt;TSource&gt;","pos":[0,18],"source":"LongCount<TSource>"}]},{"pos":[527803,527804],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[527881,527892],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[527977,527978],"content":"<","needQuote":true,"nodes":[]},{"pos":[528005,528012],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[528078,528079]},{"pos":[528134,528138],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[528196,528197],"content":"<","needQuote":true,"nodes":[]},{"pos":[528224,528231],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[528265,528266]},{"pos":[528322,528329],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[528422,528423],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[528583,528604],"content":"LongCount(Of TSource)","needQuote":true,"nodes":[{"content":"LongCount(Of TSource)","pos":[0,21]}]},{"pos":[528674,528675],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[528752,528763],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[528849,528852]},{"pos":[528886,528893],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[528926,528927],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[528955,528956]},{"pos":[529011,529015],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[529074,529077]},{"pos":[529111,529118],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[529152,529153]},{"pos":[529209,529216],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[529277,529278],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[529305,529306],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[529756,529790],"content":"Max<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,34],"source":"Max<TSource>(IEnumerable<TSource>)"}]},{"pos":[530155,530167],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[530228,530229],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[530306,530317],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[530402,530403],"content":"<","needQuote":true,"nodes":[]},{"pos":[530430,530437],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[530502,530503],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[530625,530640],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[530704,530705],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[530782,530793],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[530879,530882]},{"pos":[530916,530923],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[530956,530957],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[530984,530985],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[531366,531424],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Decimal&gt;)","pos":[0,58],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)"}]},{"pos":[531927,531939],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[532000,532001],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[532078,532089],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[532174,532175],"content":"<","needQuote":true,"nodes":[]},{"pos":[532202,532209],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[532275,532276]},{"pos":[532331,532335],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[532393,532394],"content":"<","needQuote":true,"nodes":[]},{"pos":[532421,532428],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[532462,532463]},{"pos":[532519,532526],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[532619,532620],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[532774,532789],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[532853,532854],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[532931,532942],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[533028,533031]},{"pos":[533065,533072],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[533105,533106],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[533134,533135]},{"pos":[533190,533194],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[533253,533256]},{"pos":[533290,533297],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[533331,533332]},{"pos":[533388,533395],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[533456,533457],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[533484,533485],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[533948,534005],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Double&gt;)","pos":[0,57],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)"}]},{"pos":[534504,534516],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[534577,534578],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[534655,534666],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[534751,534752],"content":"<","needQuote":true,"nodes":[]},{"pos":[534779,534786],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[534852,534853]},{"pos":[534908,534912],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[534970,534971],"content":"<","needQuote":true,"nodes":[]},{"pos":[534998,535005],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[535039,535040]},{"pos":[535095,535101],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[535193,535194],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[535347,535362],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[535426,535427],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[535504,535515],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[535601,535604]},{"pos":[535638,535645],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[535678,535679],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[535707,535708]},{"pos":[535763,535767],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[535826,535829]},{"pos":[535863,535870],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[535904,535905]},{"pos":[535960,535966],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[536026,536027],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[536054,536055],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[536514,536570],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32&gt;)","pos":[0,56],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)"}]},{"pos":[537065,537077],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[537138,537139],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[537216,537227],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[537312,537313],"content":"<","needQuote":true,"nodes":[]},{"pos":[537340,537347],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[537413,537414]},{"pos":[537469,537473],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[537531,537532],"content":"<","needQuote":true,"nodes":[]},{"pos":[537559,537566],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[537600,537601]},{"pos":[537655,537660],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[537751,537752],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[537904,537919],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[537983,537984],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[538061,538072],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[538158,538161]},{"pos":[538195,538202],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[538235,538236],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[538264,538265]},{"pos":[538320,538324],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[538383,538386]},{"pos":[538420,538427],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[538461,538462]},{"pos":[538516,538521],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[538580,538581],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[538608,538609],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[539065,539121],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int64&gt;)","pos":[0,56],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)"}]},{"pos":[539616,539628],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[539689,539690],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[539767,539778],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[539863,539864],"content":"<","needQuote":true,"nodes":[]},{"pos":[539891,539898],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[539964,539965]},{"pos":[540020,540024],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[540082,540083],"content":"<","needQuote":true,"nodes":[]},{"pos":[540110,540117],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[540151,540152]},{"pos":[540206,540211],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[540302,540303],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[540455,540470],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[540534,540535],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[540612,540623],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[540709,540712]},{"pos":[540746,540753],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[540786,540787],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[540815,540816]},{"pos":[540871,540875],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[540934,540937]},{"pos":[540971,540978],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[541012,541013]},{"pos":[541067,541072],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[541131,541132],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[541159,541160],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[541635,541703],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Decimal&gt;&gt;)","pos":[0,68],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)"}]},{"pos":[542273,542285],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[542346,542347],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[542424,542435],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[542520,542521],"content":"<","needQuote":true,"nodes":[]},{"pos":[542548,542555],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[542621,542622]},{"pos":[542677,542681],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[542739,542740],"content":"<","needQuote":true,"nodes":[]},{"pos":[542767,542774],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[542808,542809]},{"pos":[542868,542876],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[542938,542939],"content":"<","needQuote":true,"nodes":[]},{"pos":[542990,542997],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[543122,543123],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[543294,543309],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[543373,543374],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[543451,543462],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[543548,543551]},{"pos":[543585,543592],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[543625,543626],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[543654,543655]},{"pos":[543710,543714],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[543773,543776]},{"pos":[543810,543817],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[543851,543852]},{"pos":[543911,543919],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[543982,543985]},{"pos":[544043,544050],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[544111,544112],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[544139,544140],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[544167,544168],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[544688,544755],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Double&gt;&gt;)","pos":[0,67],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)"}]},{"pos":[545321,545333],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[545394,545395],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[545472,545483],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[545568,545569],"content":"<","needQuote":true,"nodes":[]},{"pos":[545596,545603],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[545669,545670]},{"pos":[545725,545729],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[545787,545788],"content":"<","needQuote":true,"nodes":[]},{"pos":[545815,545822],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[545856,545857]},{"pos":[545916,545924],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[545986,545987],"content":"<","needQuote":true,"nodes":[]},{"pos":[546037,546043],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[546167,546168],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[546338,546353],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[546417,546418],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[546495,546506],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[546592,546595]},{"pos":[546629,546636],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[546669,546670],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[546698,546699]},{"pos":[546754,546758],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[546817,546820]},{"pos":[546854,546861],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[546895,546896]},{"pos":[546955,546963],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[547026,547029]},{"pos":[547086,547092],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[547152,547153],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[547180,547181],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[547208,547209],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[547725,547791],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int32&gt;&gt;)","pos":[0,66],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)"}]},{"pos":[548353,548365],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[548426,548427],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[548504,548515],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[548600,548601],"content":"<","needQuote":true,"nodes":[]},{"pos":[548628,548635],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[548701,548702]},{"pos":[548757,548761],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[548819,548820],"content":"<","needQuote":true,"nodes":[]},{"pos":[548847,548854],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[548888,548889]},{"pos":[548948,548956],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[549018,549019],"content":"<","needQuote":true,"nodes":[]},{"pos":[549068,549073],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[549196,549197],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[549366,549381],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[549445,549446],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[549523,549534],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[549620,549623]},{"pos":[549657,549664],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[549697,549698],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[549726,549727]},{"pos":[549782,549786],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[549845,549848]},{"pos":[549882,549889],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[549923,549924]},{"pos":[549983,549991],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[550054,550057]},{"pos":[550113,550118],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[550177,550178],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[550205,550206],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[550233,550234],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[550747,550813],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int64&gt;&gt;)","pos":[0,66],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)"}]},{"pos":[551375,551387],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[551448,551449],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[551526,551537],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[551622,551623],"content":"<","needQuote":true,"nodes":[]},{"pos":[551650,551657],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[551723,551724]},{"pos":[551779,551783],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[551841,551842],"content":"<","needQuote":true,"nodes":[]},{"pos":[551869,551876],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[551910,551911]},{"pos":[551970,551978],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[552040,552041],"content":"<","needQuote":true,"nodes":[]},{"pos":[552090,552095],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[552218,552219],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[552388,552403],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[552467,552468],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[552545,552556],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[552642,552645]},{"pos":[552679,552686],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[552719,552720],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[552748,552749]},{"pos":[552804,552808],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[552867,552870]},{"pos":[552904,552911],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[552945,552946]},{"pos":[553005,553013],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[553076,553079]},{"pos":[553135,553140],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[553199,553200],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[553227,553228],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[553255,553256],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[553770,553837],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Single&gt;&gt;)","pos":[0,67],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)"}]},{"pos":[554403,554415],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[554476,554477],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[554554,554565],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[554650,554651],"content":"<","needQuote":true,"nodes":[]},{"pos":[554678,554685],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[554751,554752]},{"pos":[554807,554811],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[554869,554870],"content":"<","needQuote":true,"nodes":[]},{"pos":[554897,554904],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[554938,554939]},{"pos":[554998,555006],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[555068,555069],"content":"<","needQuote":true,"nodes":[]},{"pos":[555119,555125],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[555249,555250],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[555420,555435],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[555499,555500],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[555577,555588],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[555674,555677]},{"pos":[555711,555718],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[555751,555752],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[555780,555781]},{"pos":[555836,555840],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[555899,555902]},{"pos":[555936,555943],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[555977,555978]},{"pos":[556037,556045],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[556108,556111]},{"pos":[556168,556174],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[556234,556235],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[556262,556263],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[556290,556291],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[556791,556848],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Single&gt;)","pos":[0,57],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)"}]},{"pos":[557347,557359],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[557420,557421],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[557498,557509],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[557594,557595],"content":"<","needQuote":true,"nodes":[]},{"pos":[557622,557629],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[557695,557696]},{"pos":[557751,557755],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[557813,557814],"content":"<","needQuote":true,"nodes":[]},{"pos":[557841,557848],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[557882,557883]},{"pos":[557938,557944],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[558036,558037],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[558190,558205],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[558269,558270],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[558347,558358],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[558444,558447]},{"pos":[558481,558488],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[558521,558522],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[558550,558551]},{"pos":[558606,558610],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[558669,558672]},{"pos":[558706,558713],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[558747,558748]},{"pos":[558803,558809],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[558869,558870],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[558897,558898],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[559348,559415],"content":"Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TResult&gt;)","pos":[0,67],"source":"Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)"}]},{"pos":[559920,559941],"content":"Max<TSource, TResult>","needQuote":true,"nodes":[{"content":"Max&lt;TSource, TResult&gt;","pos":[0,21],"source":"Max<TSource, TResult>"}]},{"pos":[560011,560012],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[560089,560100],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[560185,560186],"content":"<","needQuote":true,"nodes":[]},{"pos":[560213,560220],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[560286,560287]},{"pos":[560342,560346],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[560404,560405],"content":"<","needQuote":true,"nodes":[]},{"pos":[560432,560439],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[560473,560474]},{"pos":[560506,560513],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[560578,560579],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[560722,560746],"content":"Max(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"Max(Of TSource, TResult)","pos":[0,24]}]},{"pos":[560819,560820],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[560897,560908],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[560994,560997]},{"pos":[561031,561038],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[561071,561072],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[561100,561101]},{"pos":[561156,561160],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[561219,561222]},{"pos":[561256,561263],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[561297,561298]},{"pos":[561330,561337],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[561370,561371],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[561398,561399],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[561838,561872],"content":"Min<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,34],"source":"Min<TSource>(IEnumerable<TSource>)"}]},{"pos":[562237,562249],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[562310,562311],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[562388,562399],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[562484,562485],"content":"<","needQuote":true,"nodes":[]},{"pos":[562512,562519],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[562584,562585],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[562707,562722],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[562786,562787],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[562864,562875],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[562961,562964]},{"pos":[562998,563005],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[563038,563039],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[563066,563067],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[563448,563506],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Decimal&gt;)","pos":[0,58],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)"}]},{"pos":[564009,564021],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[564082,564083],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[564160,564171],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[564256,564257],"content":"<","needQuote":true,"nodes":[]},{"pos":[564284,564291],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[564357,564358]},{"pos":[564413,564417],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[564475,564476],"content":"<","needQuote":true,"nodes":[]},{"pos":[564503,564510],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[564544,564545]},{"pos":[564601,564608],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[564701,564702],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[564856,564871],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[564935,564936],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[565013,565024],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[565110,565113]},{"pos":[565147,565154],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[565187,565188],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[565216,565217]},{"pos":[565272,565276],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[565335,565338]},{"pos":[565372,565379],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[565413,565414]},{"pos":[565470,565477],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[565538,565539],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[565566,565567],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[566030,566087],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Double&gt;)","pos":[0,57],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)"}]},{"pos":[566586,566598],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[566659,566660],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[566737,566748],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[566833,566834],"content":"<","needQuote":true,"nodes":[]},{"pos":[566861,566868],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[566934,566935]},{"pos":[566990,566994],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[567052,567053],"content":"<","needQuote":true,"nodes":[]},{"pos":[567080,567087],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[567121,567122]},{"pos":[567177,567183],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[567275,567276],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[567429,567444],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[567508,567509],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[567586,567597],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[567683,567686]},{"pos":[567720,567727],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[567760,567761],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[567789,567790]},{"pos":[567845,567849],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[567908,567911]},{"pos":[567945,567952],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[567986,567987]},{"pos":[568042,568048],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[568108,568109],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[568136,568137],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[568596,568652],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32&gt;)","pos":[0,56],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)"}]},{"pos":[569147,569159],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[569220,569221],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[569298,569309],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[569394,569395],"content":"<","needQuote":true,"nodes":[]},{"pos":[569422,569429],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[569495,569496]},{"pos":[569551,569555],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[569613,569614],"content":"<","needQuote":true,"nodes":[]},{"pos":[569641,569648],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[569682,569683]},{"pos":[569737,569742],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[569833,569834],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[569986,570001],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[570065,570066],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[570143,570154],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[570240,570243]},{"pos":[570277,570284],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[570317,570318],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[570346,570347]},{"pos":[570402,570406],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[570465,570468]},{"pos":[570502,570509],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[570543,570544]},{"pos":[570598,570603],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[570662,570663],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[570690,570691],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[571147,571203],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int64&gt;)","pos":[0,56],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)"}]},{"pos":[571698,571710],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[571771,571772],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[571849,571860],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[571945,571946],"content":"<","needQuote":true,"nodes":[]},{"pos":[571973,571980],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[572046,572047]},{"pos":[572102,572106],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[572164,572165],"content":"<","needQuote":true,"nodes":[]},{"pos":[572192,572199],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[572233,572234]},{"pos":[572288,572293],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[572384,572385],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[572537,572552],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[572616,572617],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[572694,572705],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[572791,572794]},{"pos":[572828,572835],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[572868,572869],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[572897,572898]},{"pos":[572953,572957],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[573016,573019]},{"pos":[573053,573060],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[573094,573095]},{"pos":[573149,573154],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[573213,573214],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[573241,573242],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[573717,573785],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Decimal&gt;&gt;)","pos":[0,68],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)"}]},{"pos":[574355,574367],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[574428,574429],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[574506,574517],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[574602,574603],"content":"<","needQuote":true,"nodes":[]},{"pos":[574630,574637],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[574703,574704]},{"pos":[574759,574763],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[574821,574822],"content":"<","needQuote":true,"nodes":[]},{"pos":[574849,574856],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[574890,574891]},{"pos":[574950,574958],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[575020,575021],"content":"<","needQuote":true,"nodes":[]},{"pos":[575072,575079],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[575204,575205],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[575376,575391],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[575455,575456],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[575533,575544],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[575630,575633]},{"pos":[575667,575674],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[575707,575708],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[575736,575737]},{"pos":[575792,575796],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[575855,575858]},{"pos":[575892,575899],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[575933,575934]},{"pos":[575993,576001],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[576064,576067]},{"pos":[576125,576132],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[576193,576194],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[576221,576222],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[576249,576250],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[576770,576837],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Double&gt;&gt;)","pos":[0,67],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)"}]},{"pos":[577403,577415],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[577476,577477],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[577554,577565],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[577650,577651],"content":"<","needQuote":true,"nodes":[]},{"pos":[577678,577685],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[577751,577752]},{"pos":[577807,577811],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[577869,577870],"content":"<","needQuote":true,"nodes":[]},{"pos":[577897,577904],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[577938,577939]},{"pos":[577998,578006],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[578068,578069],"content":"<","needQuote":true,"nodes":[]},{"pos":[578119,578125],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[578249,578250],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[578420,578435],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[578499,578500],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[578577,578588],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[578674,578677]},{"pos":[578711,578718],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[578751,578752],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[578780,578781]},{"pos":[578836,578840],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[578899,578902]},{"pos":[578936,578943],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[578977,578978]},{"pos":[579037,579045],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[579108,579111]},{"pos":[579168,579174],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[579234,579235],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[579262,579263],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[579290,579291],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[579807,579873],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int32&gt;&gt;)","pos":[0,66],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)"}]},{"pos":[580435,580447],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[580508,580509],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[580586,580597],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[580682,580683],"content":"<","needQuote":true,"nodes":[]},{"pos":[580710,580717],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[580783,580784]},{"pos":[580839,580843],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[580901,580902],"content":"<","needQuote":true,"nodes":[]},{"pos":[580929,580936],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[580970,580971]},{"pos":[581030,581038],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[581100,581101],"content":"<","needQuote":true,"nodes":[]},{"pos":[581150,581155],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[581278,581279],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[581448,581463],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[581527,581528],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[581605,581616],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[581702,581705]},{"pos":[581739,581746],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[581779,581780],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[581808,581809]},{"pos":[581864,581868],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[581927,581930]},{"pos":[581964,581971],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[582005,582006]},{"pos":[582065,582073],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[582136,582139]},{"pos":[582195,582200],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[582259,582260],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[582287,582288],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[582315,582316],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[582829,582895],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int64&gt;&gt;)","pos":[0,66],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)"}]},{"pos":[583457,583469],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[583530,583531],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[583608,583619],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[583704,583705],"content":"<","needQuote":true,"nodes":[]},{"pos":[583732,583739],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[583805,583806]},{"pos":[583861,583865],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[583923,583924],"content":"<","needQuote":true,"nodes":[]},{"pos":[583951,583958],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[583992,583993]},{"pos":[584052,584060],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[584122,584123],"content":"<","needQuote":true,"nodes":[]},{"pos":[584172,584177],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[584300,584301],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[584470,584485],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[584549,584550],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[584627,584638],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[584724,584727]},{"pos":[584761,584768],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[584801,584802],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[584830,584831]},{"pos":[584886,584890],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[584949,584952]},{"pos":[584986,584993],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[585027,585028]},{"pos":[585087,585095],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[585158,585161]},{"pos":[585217,585222],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[585281,585282],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[585309,585310],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[585337,585338],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[585852,585919],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Single&gt;&gt;)","pos":[0,67],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)"}]},{"pos":[586485,586497],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[586558,586559],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[586636,586647],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[586732,586733],"content":"<","needQuote":true,"nodes":[]},{"pos":[586760,586767],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[586833,586834]},{"pos":[586889,586893],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[586951,586952],"content":"<","needQuote":true,"nodes":[]},{"pos":[586979,586986],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[587020,587021]},{"pos":[587080,587088],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[587150,587151],"content":"<","needQuote":true,"nodes":[]},{"pos":[587201,587207],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[587331,587332],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[587502,587517],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[587581,587582],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[587659,587670],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[587756,587759]},{"pos":[587793,587800],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[587833,587834],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[587862,587863]},{"pos":[587918,587922],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[587981,587984]},{"pos":[588018,588025],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[588059,588060]},{"pos":[588119,588127],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[588190,588193]},{"pos":[588250,588256],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[588316,588317],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[588344,588345],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[588372,588373],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[588873,588930],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Single&gt;)","pos":[0,57],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)"}]},{"pos":[589429,589441],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[589502,589503],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[589580,589591],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[589676,589677],"content":"<","needQuote":true,"nodes":[]},{"pos":[589704,589711],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[589777,589778]},{"pos":[589833,589837],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[589895,589896],"content":"<","needQuote":true,"nodes":[]},{"pos":[589923,589930],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[589964,589965]},{"pos":[590020,590026],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[590118,590119],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[590272,590287],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[590351,590352],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[590429,590440],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[590526,590529]},{"pos":[590563,590570],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[590603,590604],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[590632,590633]},{"pos":[590688,590692],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[590751,590754]},{"pos":[590788,590795],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[590829,590830]},{"pos":[590885,590891],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[590951,590952],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[590979,590980],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[591430,591497],"content":"Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TResult&gt;)","pos":[0,67],"source":"Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)"}]},{"pos":[592002,592023],"content":"Min<TSource, TResult>","needQuote":true,"nodes":[{"content":"Min&lt;TSource, TResult&gt;","pos":[0,21],"source":"Min<TSource, TResult>"}]},{"pos":[592093,592094],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[592171,592182],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[592267,592268],"content":"<","needQuote":true,"nodes":[]},{"pos":[592295,592302],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[592368,592369]},{"pos":[592424,592428],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[592486,592487],"content":"<","needQuote":true,"nodes":[]},{"pos":[592514,592521],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[592555,592556]},{"pos":[592588,592595],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[592660,592661],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[592804,592828],"content":"Min(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"Min(Of TSource, TResult)","pos":[0,24]}]},{"pos":[592901,592902],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[592979,592990],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[593076,593079]},{"pos":[593113,593120],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[593153,593154],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[593182,593183]},{"pos":[593238,593242],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[593301,593304]},{"pos":[593338,593345],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[593379,593380]},{"pos":[593412,593419],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[593452,593453],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[593480,593481],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[593910,593938],"content":"OfType<TResult>(IEnumerable)","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;(IEnumerable)","pos":[0,28],"source":"OfType<TResult>(IEnumerable)"}]},{"pos":[594253,594268],"content":"OfType<TResult>","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;","pos":[0,15],"source":"OfType<TResult>"}]},{"pos":[594332,594333],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[594400,594411],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[594488,594489],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[594601,594619],"content":"OfType(Of TResult)","needQuote":true,"nodes":[{"content":"OfType(Of TResult)","pos":[0,18]}]},{"pos":[594686,594687],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[594754,594765],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[594842,594843],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[595192,595257],"content":"OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"OrderBy&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,65],"source":"OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[595760,595782],"content":"OrderBy<TSource, TKey>","needQuote":true,"nodes":[{"content":"OrderBy&lt;TSource, TKey&gt;","pos":[0,22],"source":"OrderBy<TSource, TKey>"}]},{"pos":[595853,595854],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[595931,595942],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[596027,596028],"content":"<","needQuote":true,"nodes":[]},{"pos":[596055,596062],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[596128,596129]},{"pos":[596184,596188],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[596246,596247],"content":"<","needQuote":true,"nodes":[]},{"pos":[596274,596281],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[596315,596316]},{"pos":[596348,596352],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[596414,596415],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[596562,596587],"content":"OrderBy(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"OrderBy(Of TSource, TKey)","pos":[0,25]}]},{"pos":[596661,596662],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[596739,596750],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[596836,596839]},{"pos":[596873,596880],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[596913,596914],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[596942,596943]},{"pos":[596998,597002],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[597061,597064]},{"pos":[597098,597105],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[597139,597140]},{"pos":[597172,597176],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[597206,597207],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[597234,597235],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[597741,597823],"content":"OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)","needQuote":true,"nodes":[{"content":"OrderBy&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IComparer&lt;TKey&gt;)","pos":[0,82],"source":"OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)"}]},{"pos":[598479,598501],"content":"OrderBy<TSource, TKey>","needQuote":true,"nodes":[{"content":"OrderBy&lt;TSource, TKey&gt;","pos":[0,22],"source":"OrderBy<TSource, TKey>"}]},{"pos":[598572,598573],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[598650,598661],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[598746,598747],"content":"<","needQuote":true,"nodes":[]},{"pos":[598774,598781],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[598847,598848]},{"pos":[598903,598907],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[598965,598966],"content":"<","needQuote":true,"nodes":[]},{"pos":[598993,599000],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[599034,599035]},{"pos":[599067,599071],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[599134,599135]},{"pos":[599215,599224],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[599307,599308],"content":"<","needQuote":true,"nodes":[]},{"pos":[599335,599339],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[599401,599402],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[599591,599616],"content":"OrderBy(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"OrderBy(Of TSource, TKey)","pos":[0,25]}]},{"pos":[599690,599691],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[599768,599779],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[599865,599868]},{"pos":[599902,599909],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[599942,599943],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[599971,599972]},{"pos":[600027,600031],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[600090,600093]},{"pos":[600127,600134],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[600168,600169]},{"pos":[600201,600205],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[600235,600236],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[600264,600265]},{"pos":[600345,600354],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"content":"(Of","pos":[600438,600441]},{"pos":[600475,600479],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[600509,600510],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[600537,600538],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[601091,601166],"content":"OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,75],"source":"OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[601709,601741],"content":"OrderByDescending<TSource, TKey>","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;TSource, TKey&gt;","pos":[0,32],"source":"OrderByDescending<TSource, TKey>"}]},{"pos":[601822,601823],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[601900,601911],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[601996,601997],"content":"<","needQuote":true,"nodes":[]},{"pos":[602024,602031],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[602097,602098]},{"pos":[602153,602157],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[602215,602216],"content":"<","needQuote":true,"nodes":[]},{"pos":[602243,602250],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[602284,602285]},{"pos":[602317,602321],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[602383,602384],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[602541,602576],"content":"OrderByDescending(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"OrderByDescending(Of TSource, TKey)","pos":[0,35]}]},{"pos":[602660,602661],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[602738,602749],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[602835,602838]},{"pos":[602872,602879],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[602912,602913],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[602941,602942]},{"pos":[602997,603001],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[603060,603063]},{"pos":[603097,603104],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[603138,603139]},{"pos":[603171,603175],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[603205,603206],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[603233,603234],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[603780,603872],"content":"OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IComparer&lt;TKey&gt;)","pos":[0,92],"source":"OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)"}]},{"pos":[604568,604600],"content":"OrderByDescending<TSource, TKey>","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;TSource, TKey&gt;","pos":[0,32],"source":"OrderByDescending<TSource, TKey>"}]},{"pos":[604681,604682],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[604759,604770],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[604855,604856],"content":"<","needQuote":true,"nodes":[]},{"pos":[604883,604890],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[604956,604957]},{"pos":[605012,605016],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[605074,605075],"content":"<","needQuote":true,"nodes":[]},{"pos":[605102,605109],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[605143,605144]},{"pos":[605176,605180],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[605243,605244]},{"pos":[605324,605333],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[605416,605417],"content":"<","needQuote":true,"nodes":[]},{"pos":[605444,605448],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[605510,605511],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[605710,605745],"content":"OrderByDescending(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"OrderByDescending(Of TSource, TKey)","pos":[0,35]}]},{"pos":[605829,605830],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[605907,605918],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[606004,606007]},{"pos":[606041,606048],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[606081,606082],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[606110,606111]},{"pos":[606166,606170],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[606229,606232]},{"pos":[606266,606273],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[606307,606308]},{"pos":[606340,606344],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[606374,606375],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[606403,606404]},{"pos":[606484,606493],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"content":"(Of","pos":[606577,606580]},{"pos":[606614,606618],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[606648,606649],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[606676,606677],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[607229,607267],"content":"Reverse<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Reverse&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,38],"source":"Reverse<TSource>(IEnumerable<TSource>)"}]},{"pos":[607648,607664],"content":"Reverse<TSource>","needQuote":true,"nodes":[{"content":"Reverse&lt;TSource&gt;","pos":[0,16],"source":"Reverse<TSource>"}]},{"pos":[607729,607730],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[607807,607818],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[607903,607904],"content":"<","needQuote":true,"nodes":[]},{"pos":[607931,607938],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[608003,608004],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[608130,608149],"content":"Reverse(Of TSource)","needQuote":true,"nodes":[{"content":"Reverse(Of TSource)","pos":[0,19]}]},{"pos":[608217,608218],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[608295,608306],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[608392,608395]},{"pos":[608429,608436],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[608469,608470],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[608497,608498],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[608883,608953],"content":"Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)","needQuote":true,"nodes":[{"content":"Select&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TResult&gt;)","pos":[0,70],"source":"Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)"}]},{"pos":[609470,609494],"content":"Select<TSource, TResult>","needQuote":true,"nodes":[{"content":"Select&lt;TSource, TResult&gt;","pos":[0,24],"source":"Select<TSource, TResult>"}]},{"pos":[609567,609568],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[609645,609656],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[609741,609742],"content":"<","needQuote":true,"nodes":[]},{"pos":[609769,609776],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[609842,609843]},{"pos":[609898,609902],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[609960,609961],"content":"<","needQuote":true,"nodes":[]},{"pos":[609988,609995],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[610029,610030]},{"pos":[610062,610069],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[610134,610135],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[610281,610308],"content":"Select(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"Select(Of TSource, TResult)","pos":[0,27]}]},{"pos":[610384,610385],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[610462,610473],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[610559,610562]},{"pos":[610596,610603],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[610636,610637],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[610665,610666]},{"pos":[610721,610725],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[610784,610787]},{"pos":[610821,610828],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[610862,610863]},{"pos":[610895,610902],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[610935,610936],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[610963,610964],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[611449,611526],"content":"Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)","needQuote":true,"nodes":[{"content":"Select&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, TResult&gt;)","pos":[0,77],"source":"Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)"}]},{"pos":[612091,612115],"content":"Select<TSource, TResult>","needQuote":true,"nodes":[{"content":"Select&lt;TSource, TResult&gt;","pos":[0,24],"source":"Select<TSource, TResult>"}]},{"pos":[612188,612189],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[612266,612277],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[612362,612363],"content":"<","needQuote":true,"nodes":[]},{"pos":[612390,612397],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[612463,612464]},{"pos":[612519,612523],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[612581,612582],"content":"<","needQuote":true,"nodes":[]},{"pos":[612609,612616],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[612650,612651]},{"pos":[612705,612710],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[612770,612771]},{"pos":[612803,612810],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[612875,612876],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[613035,613062],"content":"Select(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"Select(Of TSource, TResult)","pos":[0,27]}]},{"pos":[613138,613139],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[613216,613227],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[613313,613316]},{"pos":[613350,613357],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[613390,613391],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[613419,613420]},{"pos":[613475,613479],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[613538,613541]},{"pos":[613575,613582],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[613616,613617]},{"pos":[613671,613676],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[613736,613737]},{"pos":[613769,613776],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[613809,613810],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[613837,613838],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[614381,614468],"content":"SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, IEnumerable&lt;TResult&gt;&gt;)","pos":[0,87],"source":"SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)"}]},{"pos":[615140,615168],"content":"SelectMany<TSource, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TResult&gt;","pos":[0,28],"source":"SelectMany<TSource, TResult>"}]},{"pos":[615245,615246],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[615323,615334],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[615419,615420],"content":"<","needQuote":true,"nodes":[]},{"pos":[615447,615454],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[615520,615521]},{"pos":[615576,615580],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[615638,615639],"content":"<","needQuote":true,"nodes":[]},{"pos":[615666,615673],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[615707,615708]},{"pos":[615790,615801],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[615886,615887],"content":"<","needQuote":true,"nodes":[]},{"pos":[615914,615921],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[616018,616019],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[616209,616240],"content":"SelectMany(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of TSource, TResult)","pos":[0,31]}]},{"pos":[616320,616321],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[616398,616409],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[616495,616498]},{"pos":[616532,616539],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[616572,616573],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[616601,616602]},{"pos":[616657,616661],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[616720,616723]},{"pos":[616757,616764],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[616798,616799]},{"pos":[616881,616892],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[616978,616981]},{"pos":[617015,617022],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[617055,617056],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[617083,617084],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[617111,617112],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[617722,617816],"content":"SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, IEnumerable&lt;TResult&gt;&gt;)","pos":[0,94],"source":"SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)"}]},{"pos":[618536,618564],"content":"SelectMany<TSource, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TResult&gt;","pos":[0,28],"source":"SelectMany<TSource, TResult>"}]},{"pos":[618641,618642],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[618719,618730],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[618815,618816],"content":"<","needQuote":true,"nodes":[]},{"pos":[618843,618850],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[618916,618917]},{"pos":[618972,618976],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[619034,619035],"content":"<","needQuote":true,"nodes":[]},{"pos":[619062,619069],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[619103,619104]},{"pos":[619158,619163],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[619223,619224]},{"pos":[619306,619317],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[619402,619403],"content":"<","needQuote":true,"nodes":[]},{"pos":[619430,619437],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[619534,619535],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[619738,619769],"content":"SelectMany(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of TSource, TResult)","pos":[0,31]}]},{"pos":[619849,619850],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[619927,619938],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[620024,620027]},{"pos":[620061,620068],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[620101,620102],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[620130,620131]},{"pos":[620186,620190],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[620249,620252]},{"pos":[620286,620293],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[620327,620328]},{"pos":[620382,620387],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[620447,620448]},{"pos":[620530,620541],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[620627,620630]},{"pos":[620664,620671],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[620704,620705],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[620732,620733],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[620760,620761],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[621410,621551],"content":"SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TCollection, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, IEnumerable&lt;TCollection&gt;&gt;, Func&lt;TSource, TCollection, TResult&gt;)","pos":[0,141],"source":"SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)"}]},{"pos":[622430,622471],"content":"SelectMany<TSource, TCollection, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TCollection, TResult&gt;","pos":[0,41],"source":"SelectMany<TSource, TCollection, TResult>"}]},{"pos":[622561,622562],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[622639,622650],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[622735,622736],"content":"<","needQuote":true,"nodes":[]},{"pos":[622763,622770],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[622836,622837]},{"pos":[622892,622896],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[622954,622955],"content":"<","needQuote":true,"nodes":[]},{"pos":[622982,622989],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[623023,623024]},{"pos":[623106,623117],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[623202,623203],"content":"<","needQuote":true,"nodes":[]},{"pos":[623230,623241],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[623343,623344]},{"pos":[623399,623403],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[623461,623462],"content":"<","needQuote":true,"nodes":[]},{"pos":[623489,623496],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[623530,623531]},{"pos":[623563,623574],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[623612,623613]},{"pos":[623645,623652],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[623717,623718],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[623933,623977],"content":"SelectMany(Of TSource, TCollection, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of TSource, TCollection, TResult)","pos":[0,44]}]},{"pos":[624070,624071],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[624148,624159],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[624245,624248]},{"pos":[624282,624289],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[624322,624323],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[624351,624352]},{"pos":[624407,624411],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[624470,624473]},{"pos":[624507,624514],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[624548,624549]},{"pos":[624631,624642],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[624728,624731]},{"pos":[624765,624776],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"pos":[624813,624814],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[624841,624842],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[624870,624871]},{"pos":[624926,624930],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[624989,624992]},{"pos":[625026,625033],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[625067,625068]},{"pos":[625100,625111],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[625149,625150]},{"pos":[625182,625189],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[625222,625223],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[625250,625251],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[626022,626170],"content":"SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TCollection, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, IEnumerable&lt;TCollection&gt;&gt;, Func&lt;TSource, TCollection, TResult&gt;)","pos":[0,148],"source":"SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)"}]},{"pos":[627097,627138],"content":"SelectMany<TSource, TCollection, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TCollection, TResult&gt;","pos":[0,41],"source":"SelectMany<TSource, TCollection, TResult>"}]},{"pos":[627228,627229],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[627306,627317],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[627402,627403],"content":"<","needQuote":true,"nodes":[]},{"pos":[627430,627437],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[627503,627504]},{"pos":[627559,627563],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[627621,627622],"content":"<","needQuote":true,"nodes":[]},{"pos":[627649,627656],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[627690,627691]},{"pos":[627745,627750],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[627810,627811]},{"pos":[627893,627904],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[627989,627990],"content":"<","needQuote":true,"nodes":[]},{"pos":[628017,628028],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[628130,628131]},{"pos":[628186,628190],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[628248,628249],"content":"<","needQuote":true,"nodes":[]},{"pos":[628276,628283],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[628317,628318]},{"pos":[628350,628361],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[628399,628400]},{"pos":[628432,628439],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[628504,628505],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[628733,628777],"content":"SelectMany(Of TSource, TCollection, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of TSource, TCollection, TResult)","pos":[0,44]}]},{"pos":[628870,628871],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[628948,628959],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[629045,629048]},{"pos":[629082,629089],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[629122,629123],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[629151,629152]},{"pos":[629207,629211],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[629270,629273]},{"pos":[629307,629314],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[629348,629349]},{"pos":[629403,629408],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[629468,629469]},{"pos":[629551,629562],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[629648,629651]},{"pos":[629685,629696],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"pos":[629733,629734],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[629761,629762],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[629790,629791]},{"pos":[629846,629850],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[629909,629912]},{"pos":[629946,629953],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[629987,629988]},{"pos":[630020,630031],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[630069,630070]},{"pos":[630102,630109],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[630142,630143],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[630170,630171],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[630917,630983],"content":"SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,66],"source":"SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[631558,631580],"content":"SequenceEqual<TSource>","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;TSource&gt;","pos":[0,22],"source":"SequenceEqual<TSource>"}]},{"pos":[631651,631652],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[631729,631740],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[631825,631826],"content":"<","needQuote":true,"nodes":[]},{"pos":[631853,631860],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[631926,631927]},{"pos":[632009,632020],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[632105,632106],"content":"<","needQuote":true,"nodes":[]},{"pos":[632133,632140],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[632205,632206],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[632382,632407],"content":"SequenceEqual(Of TSource)","needQuote":true,"nodes":[{"content":"SequenceEqual(Of TSource)","pos":[0,25]}]},{"pos":[632481,632482],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[632559,632570],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[632656,632659]},{"pos":[632693,632700],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[632733,632734],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[632762,632763]},{"pos":[632845,632856],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[632942,632945]},{"pos":[632979,632986],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[633019,633020],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[633047,633048],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[633622,633716],"content":"SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,94],"source":"SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[634485,634507],"content":"SequenceEqual<TSource>","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;TSource&gt;","pos":[0,22],"source":"SequenceEqual<TSource>"}]},{"pos":[634578,634579],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[634656,634667],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[634752,634753],"content":"<","needQuote":true,"nodes":[]},{"pos":[634780,634787],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[634853,634854]},{"pos":[634936,634947],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[635032,635033],"content":"<","needQuote":true,"nodes":[]},{"pos":[635060,635067],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[635133,635134]},{"pos":[635222,635239],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[635330,635331],"content":"<","needQuote":true,"nodes":[]},{"pos":[635358,635365],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[635430,635431],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[635657,635682],"content":"SequenceEqual(Of TSource)","needQuote":true,"nodes":[{"content":"SequenceEqual(Of TSource)","pos":[0,25]}]},{"pos":[635756,635757],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[635834,635845],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[635931,635934]},{"pos":[635968,635975],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[636008,636009],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[636037,636038]},{"pos":[636120,636131],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[636217,636220]},{"pos":[636254,636261],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[636294,636295],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[636323,636324]},{"pos":[636412,636429],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[636521,636524]},{"pos":[636558,636565],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[636598,636599],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[636626,636627],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[637209,637246],"content":"Single<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Single&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,37],"source":"Single<TSource>(IEnumerable<TSource>)"}]},{"pos":[637623,637638],"content":"Single<TSource>","needQuote":true,"nodes":[{"content":"Single&lt;TSource&gt;","pos":[0,15],"source":"Single<TSource>"}]},{"pos":[637702,637703],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[637780,637791],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[637876,637877],"content":"<","needQuote":true,"nodes":[]},{"pos":[637904,637911],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[637976,637977],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[638102,638120],"content":"Single(Of TSource)","needQuote":true,"nodes":[{"content":"Single(Of TSource)","pos":[0,18]}]},{"pos":[638187,638188],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[638265,638276],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[638362,638365]},{"pos":[638399,638406],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[638439,638440],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[638467,638468],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[638861,638922],"content":"Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Single&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,61],"source":"Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[639437,639452],"content":"Single<TSource>","needQuote":true,"nodes":[{"content":"Single&lt;TSource&gt;","pos":[0,15],"source":"Single<TSource>"}]},{"pos":[639516,639517],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[639594,639605],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[639690,639691],"content":"<","needQuote":true,"nodes":[]},{"pos":[639718,639725],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[639791,639792]},{"pos":[639847,639851],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[639909,639910],"content":"<","needQuote":true,"nodes":[]},{"pos":[639937,639944],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[639978,639979]},{"pos":[640035,640042],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[640135,640136],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[640293,640311],"content":"Single(Of TSource)","needQuote":true,"nodes":[{"content":"Single(Of TSource)","pos":[0,18]}]},{"pos":[640378,640379],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[640456,640467],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[640553,640556]},{"pos":[640590,640597],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[640630,640631],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[640659,640660]},{"pos":[640715,640719],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[640778,640781]},{"pos":[640815,640822],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[640856,640857]},{"pos":[640913,640920],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[640981,640982],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[641009,641010],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[641463,641509],"content":"SingleOrDefault<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,46],"source":"SingleOrDefault<TSource>(IEnumerable<TSource>)"}]},{"pos":[641922,641946],"content":"SingleOrDefault<TSource>","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;TSource&gt;","pos":[0,24],"source":"SingleOrDefault<TSource>"}]},{"pos":[642019,642020],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[642097,642108],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[642193,642194],"content":"<","needQuote":true,"nodes":[]},{"pos":[642221,642228],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[642293,642294],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[642428,642455],"content":"SingleOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"SingleOrDefault(Of TSource)","pos":[0,27]}]},{"pos":[642531,642532],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[642609,642620],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[642706,642709]},{"pos":[642743,642750],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[642783,642784],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[642811,642812],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[643241,643311],"content":"SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,70],"source":"SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[643862,643886],"content":"SingleOrDefault<TSource>","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;TSource&gt;","pos":[0,24],"source":"SingleOrDefault<TSource>"}]},{"pos":[643959,643960],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[644037,644048],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[644133,644134],"content":"<","needQuote":true,"nodes":[]},{"pos":[644161,644168],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[644234,644235]},{"pos":[644290,644294],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[644352,644353],"content":"<","needQuote":true,"nodes":[]},{"pos":[644380,644387],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[644421,644422]},{"pos":[644478,644485],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[644578,644579],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[644745,644772],"content":"SingleOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"SingleOrDefault(Of TSource)","pos":[0,27]}]},{"pos":[644848,644849],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[644926,644937],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[645023,645026]},{"pos":[645060,645067],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[645100,645101],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[645129,645130]},{"pos":[645185,645189],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[645248,645251]},{"pos":[645285,645292],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[645326,645327]},{"pos":[645383,645390],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[645451,645452],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[645479,645480],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[645962,646004],"content":"Skip<TSource>(IEnumerable<TSource>, Int32)","needQuote":true,"nodes":[{"content":"Skip&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Int32)","pos":[0,42],"source":"Skip<TSource>(IEnumerable<TSource>, Int32)"}]},{"pos":[646421,646434],"content":"Skip<TSource>","needQuote":true,"nodes":[{"content":"Skip&lt;TSource&gt;","pos":[0,13],"source":"Skip<TSource>"}]},{"pos":[646496,646497],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[646574,646585],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[646670,646671],"content":"<","needQuote":true,"nodes":[]},{"pos":[646698,646705],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[646771,646772]},{"pos":[646826,646831],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[646890,646891],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[647027,647043],"content":"Skip(Of TSource)","needQuote":true,"nodes":[{"content":"Skip(Of TSource)","pos":[0,16]}]},{"pos":[647108,647109],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[647186,647197],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[647283,647286]},{"pos":[647320,647327],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[647360,647361],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[647389,647390]},{"pos":[647444,647449],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[647508,647509],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[647926,647990],"content":"SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"SkipWhile&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,64],"source":"SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[648517,648535],"content":"SkipWhile<TSource>","needQuote":true,"nodes":[{"content":"SkipWhile&lt;TSource&gt;","pos":[0,18],"source":"SkipWhile<TSource>"}]},{"pos":[648602,648603],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[648680,648691],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[648776,648777],"content":"<","needQuote":true,"nodes":[]},{"pos":[648804,648811],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[648877,648878]},{"pos":[648933,648937],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[648995,648996],"content":"<","needQuote":true,"nodes":[]},{"pos":[649023,649030],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[649064,649065]},{"pos":[649121,649128],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[649221,649222],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[649382,649403],"content":"SkipWhile(Of TSource)","needQuote":true,"nodes":[{"content":"SkipWhile(Of TSource)","pos":[0,21]}]},{"pos":[649473,649474],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[649551,649562],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[649648,649651]},{"pos":[649685,649692],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[649725,649726],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[649754,649755]},{"pos":[649810,649814],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[649873,649876]},{"pos":[649910,649917],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[649951,649952]},{"pos":[650008,650015],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[650076,650077],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[650104,650105],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[650606,650677],"content":"SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"SkipWhile&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, Boolean&gt;)","pos":[0,71],"source":"SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)"}]},{"pos":[651252,651270],"content":"SkipWhile<TSource>","needQuote":true,"nodes":[{"content":"SkipWhile&lt;TSource&gt;","pos":[0,18],"source":"SkipWhile<TSource>"}]},{"pos":[651337,651338],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[651415,651426],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[651511,651512],"content":"<","needQuote":true,"nodes":[]},{"pos":[651539,651546],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[651612,651613]},{"pos":[651668,651672],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[651730,651731],"content":"<","needQuote":true,"nodes":[]},{"pos":[651758,651765],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[651799,651800]},{"pos":[651854,651859],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[651919,651920]},{"pos":[651976,651983],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[652076,652077],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[652250,652271],"content":"SkipWhile(Of TSource)","needQuote":true,"nodes":[{"content":"SkipWhile(Of TSource)","pos":[0,21]}]},{"pos":[652341,652342],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[652419,652430],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[652516,652519]},{"pos":[652553,652560],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[652593,652594],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[652622,652623]},{"pos":[652678,652682],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[652741,652744]},{"pos":[652778,652785],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[652819,652820]},{"pos":[652874,652879],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[652939,652940]},{"pos":[652996,653003],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[653064,653065],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[653092,653093],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[653602,653660],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Decimal&gt;)","pos":[0,58],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)"}]},{"pos":[654163,654175],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[654236,654237],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[654314,654325],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[654410,654411],"content":"<","needQuote":true,"nodes":[]},{"pos":[654438,654445],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[654511,654512]},{"pos":[654567,654571],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[654629,654630],"content":"<","needQuote":true,"nodes":[]},{"pos":[654657,654664],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[654698,654699]},{"pos":[654755,654762],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[654855,654856],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[655010,655025],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[655089,655090],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[655167,655178],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[655264,655267]},{"pos":[655301,655308],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[655341,655342],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[655370,655371]},{"pos":[655426,655430],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[655489,655492]},{"pos":[655526,655533],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[655567,655568]},{"pos":[655624,655631],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[655692,655693],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[655720,655721],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[656184,656241],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Double&gt;)","pos":[0,57],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)"}]},{"pos":[656740,656752],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[656813,656814],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[656891,656902],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[656987,656988],"content":"<","needQuote":true,"nodes":[]},{"pos":[657015,657022],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[657088,657089]},{"pos":[657144,657148],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[657206,657207],"content":"<","needQuote":true,"nodes":[]},{"pos":[657234,657241],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[657275,657276]},{"pos":[657331,657337],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[657429,657430],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[657583,657598],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[657662,657663],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[657740,657751],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[657837,657840]},{"pos":[657874,657881],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[657914,657915],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[657943,657944]},{"pos":[657999,658003],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[658062,658065]},{"pos":[658099,658106],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[658140,658141]},{"pos":[658196,658202],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[658262,658263],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[658290,658291],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[658750,658806],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32&gt;)","pos":[0,56],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)"}]},{"pos":[659301,659313],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[659374,659375],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[659452,659463],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[659548,659549],"content":"<","needQuote":true,"nodes":[]},{"pos":[659576,659583],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[659649,659650]},{"pos":[659705,659709],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[659767,659768],"content":"<","needQuote":true,"nodes":[]},{"pos":[659795,659802],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[659836,659837]},{"pos":[659891,659896],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[659987,659988],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[660140,660155],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[660219,660220],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[660297,660308],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[660394,660397]},{"pos":[660431,660438],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[660471,660472],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[660500,660501]},{"pos":[660556,660560],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[660619,660622]},{"pos":[660656,660663],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[660697,660698]},{"pos":[660752,660757],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[660816,660817],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[660844,660845],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[661301,661357],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int64&gt;)","pos":[0,56],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)"}]},{"pos":[661852,661864],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[661925,661926],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[662003,662014],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[662099,662100],"content":"<","needQuote":true,"nodes":[]},{"pos":[662127,662134],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[662200,662201]},{"pos":[662256,662260],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[662318,662319],"content":"<","needQuote":true,"nodes":[]},{"pos":[662346,662353],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[662387,662388]},{"pos":[662442,662447],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[662538,662539],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[662691,662706],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[662770,662771],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[662848,662859],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[662945,662948]},{"pos":[662982,662989],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[663022,663023],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[663051,663052]},{"pos":[663107,663111],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[663170,663173]},{"pos":[663207,663214],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[663248,663249]},{"pos":[663303,663308],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[663367,663368],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[663395,663396],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[663871,663939],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Decimal&gt;&gt;)","pos":[0,68],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)"}]},{"pos":[664509,664521],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[664582,664583],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[664660,664671],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[664756,664757],"content":"<","needQuote":true,"nodes":[]},{"pos":[664784,664791],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[664857,664858]},{"pos":[664913,664917],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[664975,664976],"content":"<","needQuote":true,"nodes":[]},{"pos":[665003,665010],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[665044,665045]},{"pos":[665104,665112],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[665174,665175],"content":"<","needQuote":true,"nodes":[]},{"pos":[665226,665233],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[665358,665359],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[665530,665545],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[665609,665610],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[665687,665698],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[665784,665787]},{"pos":[665821,665828],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[665861,665862],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[665890,665891]},{"pos":[665946,665950],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[666009,666012]},{"pos":[666046,666053],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[666087,666088]},{"pos":[666147,666155],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[666218,666221]},{"pos":[666279,666286],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[666347,666348],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[666375,666376],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[666403,666404],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[666924,666991],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Double&gt;&gt;)","pos":[0,67],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)"}]},{"pos":[667557,667569],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[667630,667631],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[667708,667719],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[667804,667805],"content":"<","needQuote":true,"nodes":[]},{"pos":[667832,667839],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[667905,667906]},{"pos":[667961,667965],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[668023,668024],"content":"<","needQuote":true,"nodes":[]},{"pos":[668051,668058],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[668092,668093]},{"pos":[668152,668160],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[668222,668223],"content":"<","needQuote":true,"nodes":[]},{"pos":[668273,668279],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[668403,668404],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[668574,668589],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[668653,668654],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[668731,668742],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[668828,668831]},{"pos":[668865,668872],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[668905,668906],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[668934,668935]},{"pos":[668990,668994],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[669053,669056]},{"pos":[669090,669097],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[669131,669132]},{"pos":[669191,669199],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[669262,669265]},{"pos":[669322,669328],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[669388,669389],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[669416,669417],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[669444,669445],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[669961,670027],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int32&gt;&gt;)","pos":[0,66],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)"}]},{"pos":[670589,670601],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[670662,670663],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[670740,670751],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[670836,670837],"content":"<","needQuote":true,"nodes":[]},{"pos":[670864,670871],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[670937,670938]},{"pos":[670993,670997],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[671055,671056],"content":"<","needQuote":true,"nodes":[]},{"pos":[671083,671090],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[671124,671125]},{"pos":[671184,671192],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[671254,671255],"content":"<","needQuote":true,"nodes":[]},{"pos":[671304,671309],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[671432,671433],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[671602,671617],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[671681,671682],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[671759,671770],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[671856,671859]},{"pos":[671893,671900],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[671933,671934],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[671962,671963]},{"pos":[672018,672022],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[672081,672084]},{"pos":[672118,672125],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[672159,672160]},{"pos":[672219,672227],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[672290,672293]},{"pos":[672349,672354],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[672413,672414],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[672441,672442],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[672469,672470],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[672983,673049],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int64&gt;&gt;)","pos":[0,66],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)"}]},{"pos":[673611,673623],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[673684,673685],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[673762,673773],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[673858,673859],"content":"<","needQuote":true,"nodes":[]},{"pos":[673886,673893],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[673959,673960]},{"pos":[674015,674019],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[674077,674078],"content":"<","needQuote":true,"nodes":[]},{"pos":[674105,674112],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[674146,674147]},{"pos":[674206,674214],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[674276,674277],"content":"<","needQuote":true,"nodes":[]},{"pos":[674326,674331],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[674454,674455],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[674624,674639],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[674703,674704],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[674781,674792],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[674878,674881]},{"pos":[674915,674922],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[674955,674956],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[674984,674985]},{"pos":[675040,675044],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[675103,675106]},{"pos":[675140,675147],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[675181,675182]},{"pos":[675241,675249],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[675312,675315]},{"pos":[675371,675376],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[675435,675436],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[675463,675464],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[675491,675492],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[676006,676073],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Single&gt;&gt;)","pos":[0,67],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)"}]},{"pos":[676639,676651],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[676712,676713],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[676790,676801],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[676886,676887],"content":"<","needQuote":true,"nodes":[]},{"pos":[676914,676921],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[676987,676988]},{"pos":[677043,677047],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[677105,677106],"content":"<","needQuote":true,"nodes":[]},{"pos":[677133,677140],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[677174,677175]},{"pos":[677234,677242],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[677304,677305],"content":"<","needQuote":true,"nodes":[]},{"pos":[677355,677361],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[677485,677486],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[677656,677671],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[677735,677736],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[677813,677824],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[677910,677913]},{"pos":[677947,677954],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[677987,677988],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[678016,678017]},{"pos":[678072,678076],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[678135,678138]},{"pos":[678172,678179],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[678213,678214]},{"pos":[678273,678281],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[678344,678347]},{"pos":[678404,678410],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[678470,678471],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[678498,678499],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[678526,678527],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[679027,679084],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Single&gt;)","pos":[0,57],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)"}]},{"pos":[679583,679595],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[679656,679657],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[679734,679745],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[679830,679831],"content":"<","needQuote":true,"nodes":[]},{"pos":[679858,679865],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[679931,679932]},{"pos":[679987,679991],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[680049,680050],"content":"<","needQuote":true,"nodes":[]},{"pos":[680077,680084],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[680118,680119]},{"pos":[680174,680180],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[680272,680273],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[680426,680441],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[680505,680506],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[680583,680594],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[680680,680683]},{"pos":[680717,680724],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[680757,680758],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[680786,680787]},{"pos":[680842,680846],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[680905,680908]},{"pos":[680942,680949],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[680983,680984]},{"pos":[681039,681045],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[681105,681106],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[681133,681134],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[681577,681619],"content":"Take<TSource>(IEnumerable<TSource>, Int32)","needQuote":true,"nodes":[{"content":"Take&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Int32)","pos":[0,42],"source":"Take<TSource>(IEnumerable<TSource>, Int32)"}]},{"pos":[682036,682049],"content":"Take<TSource>","needQuote":true,"nodes":[{"content":"Take&lt;TSource&gt;","pos":[0,13],"source":"Take<TSource>"}]},{"pos":[682111,682112],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[682189,682200],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[682285,682286],"content":"<","needQuote":true,"nodes":[]},{"pos":[682313,682320],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[682386,682387]},{"pos":[682441,682446],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[682505,682506],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[682642,682658],"content":"Take(Of TSource)","needQuote":true,"nodes":[{"content":"Take(Of TSource)","pos":[0,16]}]},{"pos":[682723,682724],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[682801,682812],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[682898,682901]},{"pos":[682935,682942],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[682975,682976],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[683004,683005]},{"pos":[683059,683064],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[683123,683124],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[683541,683605],"content":"TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"TakeWhile&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,64],"source":"TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[684132,684150],"content":"TakeWhile<TSource>","needQuote":true,"nodes":[{"content":"TakeWhile&lt;TSource&gt;","pos":[0,18],"source":"TakeWhile<TSource>"}]},{"pos":[684217,684218],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[684295,684306],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[684391,684392],"content":"<","needQuote":true,"nodes":[]},{"pos":[684419,684426],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[684492,684493]},{"pos":[684548,684552],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[684610,684611],"content":"<","needQuote":true,"nodes":[]},{"pos":[684638,684645],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[684679,684680]},{"pos":[684736,684743],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[684836,684837],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[684997,685018],"content":"TakeWhile(Of TSource)","needQuote":true,"nodes":[{"content":"TakeWhile(Of TSource)","pos":[0,21]}]},{"pos":[685088,685089],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[685166,685177],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[685263,685266]},{"pos":[685300,685307],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[685340,685341],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[685369,685370]},{"pos":[685425,685429],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[685488,685491]},{"pos":[685525,685532],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[685566,685567]},{"pos":[685623,685630],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[685691,685692],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[685719,685720],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[686221,686292],"content":"TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"TakeWhile&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, Boolean&gt;)","pos":[0,71],"source":"TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)"}]},{"pos":[686867,686885],"content":"TakeWhile<TSource>","needQuote":true,"nodes":[{"content":"TakeWhile&lt;TSource&gt;","pos":[0,18],"source":"TakeWhile<TSource>"}]},{"pos":[686952,686953],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[687030,687041],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[687126,687127],"content":"<","needQuote":true,"nodes":[]},{"pos":[687154,687161],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[687227,687228]},{"pos":[687283,687287],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[687345,687346],"content":"<","needQuote":true,"nodes":[]},{"pos":[687373,687380],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[687414,687415]},{"pos":[687469,687474],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[687534,687535]},{"pos":[687591,687598],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[687691,687692],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[687865,687886],"content":"TakeWhile(Of TSource)","needQuote":true,"nodes":[{"content":"TakeWhile(Of TSource)","pos":[0,21]}]},{"pos":[687956,687957],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[688034,688045],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[688131,688134]},{"pos":[688168,688175],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[688208,688209],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[688237,688238]},{"pos":[688293,688297],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[688356,688359]},{"pos":[688393,688400],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[688434,688435]},{"pos":[688489,688494],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[688554,688555]},{"pos":[688611,688618],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[688679,688680],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[688707,688708],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[689189,689227],"content":"ToArray<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"ToArray&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,38],"source":"ToArray<TSource>(IEnumerable<TSource>)"}]},{"pos":[689608,689624],"content":"ToArray<TSource>","needQuote":true,"nodes":[{"content":"ToArray&lt;TSource&gt;","pos":[0,16],"source":"ToArray<TSource>"}]},{"pos":[689689,689690],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[689767,689778],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[689863,689864],"content":"<","needQuote":true,"nodes":[]},{"pos":[689891,689898],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[689963,689964],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[690090,690109],"content":"ToArray(Of TSource)","needQuote":true,"nodes":[{"content":"ToArray(Of TSource)","pos":[0,19]}]},{"pos":[690177,690178],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[690255,690266],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[690352,690355]},{"pos":[690389,690396],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[690429,690430],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[690457,690458],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[690849,690919],"content":"ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,70],"source":"ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[691442,691469],"content":"ToDictionary<TSource, TKey>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey&gt;","pos":[0,27],"source":"ToDictionary<TSource, TKey>"}]},{"pos":[691545,691546],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[691623,691634],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[691719,691720],"content":"<","needQuote":true,"nodes":[]},{"pos":[691747,691754],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[691820,691821]},{"pos":[691876,691880],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[691938,691939],"content":"<","needQuote":true,"nodes":[]},{"pos":[691966,691973],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[692007,692008]},{"pos":[692040,692044],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[692106,692107],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[692259,692289],"content":"ToDictionary(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"ToDictionary(Of TSource, TKey)","pos":[0,30]}]},{"pos":[692368,692369],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[692446,692457],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[692543,692546]},{"pos":[692580,692587],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[692620,692621],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[692649,692650]},{"pos":[692705,692709],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[692768,692771]},{"pos":[692805,692812],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[692846,692847]},{"pos":[692879,692883],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[692913,692914],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[692941,692942],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[693476,693571],"content":"ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,95],"source":"ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[694279,694306],"content":"ToDictionary<TSource, TKey>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey&gt;","pos":[0,27],"source":"ToDictionary<TSource, TKey>"}]},{"pos":[694382,694383],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[694460,694471],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[694556,694557],"content":"<","needQuote":true,"nodes":[]},{"pos":[694584,694591],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[694657,694658]},{"pos":[694713,694717],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[694775,694776],"content":"<","needQuote":true,"nodes":[]},{"pos":[694803,694810],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[694844,694845]},{"pos":[694877,694881],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[694944,694945]},{"pos":[695033,695050],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[695141,695142],"content":"<","needQuote":true,"nodes":[]},{"pos":[695169,695173],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[695235,695236],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[695438,695468],"content":"ToDictionary(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"ToDictionary(Of TSource, TKey)","pos":[0,30]}]},{"pos":[695547,695548],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[695625,695636],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[695722,695725]},{"pos":[695759,695766],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[695799,695800],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[695828,695829]},{"pos":[695884,695888],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[695947,695950]},{"pos":[695984,695991],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[696025,696026]},{"pos":[696058,696062],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[696092,696093],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[696121,696122]},{"pos":[696210,696227],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[696319,696322]},{"pos":[696356,696360],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[696390,696391],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[696418,696419],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[697027,697132],"content":"ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;)","pos":[0,105],"source":"ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)"}]},{"pos":[697801,697838],"content":"ToDictionary<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey, TElement&gt;","pos":[0,37],"source":"ToDictionary<TSource, TKey, TElement>"}]},{"pos":[697924,697925],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[698002,698013],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[698098,698099],"content":"<","needQuote":true,"nodes":[]},{"pos":[698126,698133],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[698199,698200]},{"pos":[698255,698259],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[698317,698318],"content":"<","needQuote":true,"nodes":[]},{"pos":[698345,698352],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[698386,698387]},{"pos":[698419,698423],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[698486,698487]},{"pos":[698542,698546],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[698604,698605],"content":"<","needQuote":true,"nodes":[]},{"pos":[698632,698639],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[698673,698674]},{"pos":[698706,698714],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[698780,698781],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[698954,698994],"content":"ToDictionary(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToDictionary(Of TSource, TKey, TElement)","pos":[0,40]}]},{"pos":[699083,699084],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[699161,699172],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[699258,699261]},{"pos":[699295,699302],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[699335,699336],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[699364,699365]},{"pos":[699420,699424],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[699483,699486]},{"pos":[699520,699527],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[699561,699562]},{"pos":[699594,699598],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[699628,699629],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[699657,699658]},{"pos":[699713,699717],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[699776,699779]},{"pos":[699813,699820],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[699854,699855]},{"pos":[699887,699895],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[699929,699930],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[699957,699958],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[700607,700737],"content":"ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,130],"source":"ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[701591,701628],"content":"ToDictionary<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey, TElement&gt;","pos":[0,37],"source":"ToDictionary<TSource, TKey, TElement>"}]},{"pos":[701714,701715],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[701792,701803],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[701888,701889],"content":"<","needQuote":true,"nodes":[]},{"pos":[701916,701923],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[701989,701990]},{"pos":[702045,702049],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[702107,702108],"content":"<","needQuote":true,"nodes":[]},{"pos":[702135,702142],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[702176,702177]},{"pos":[702209,702213],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[702276,702277]},{"pos":[702332,702336],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[702394,702395],"content":"<","needQuote":true,"nodes":[]},{"pos":[702422,702429],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[702463,702464]},{"pos":[702496,702504],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[702571,702572]},{"pos":[702660,702677],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[702768,702769],"content":"<","needQuote":true,"nodes":[]},{"pos":[702796,702800],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[702862,702863],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[703086,703126],"content":"ToDictionary(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToDictionary(Of TSource, TKey, TElement)","pos":[0,40]}]},{"pos":[703215,703216],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[703293,703304],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[703390,703393]},{"pos":[703427,703434],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[703467,703468],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[703496,703497]},{"pos":[703552,703556],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[703615,703618]},{"pos":[703652,703659],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[703693,703694]},{"pos":[703726,703730],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[703760,703761],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[703789,703790]},{"pos":[703845,703849],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[703908,703911]},{"pos":[703945,703952],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[703986,703987]},{"pos":[704019,704027],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[704061,704062],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[704090,704091]},{"pos":[704179,704196],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[704288,704291]},{"pos":[704325,704329],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[704359,704360],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[704387,704388],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[705042,705079],"content":"ToList<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"ToList&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,37],"source":"ToList<TSource>(IEnumerable<TSource>)"}]},{"pos":[705456,705471],"content":"ToList<TSource>","needQuote":true,"nodes":[{"content":"ToList&lt;TSource&gt;","pos":[0,15],"source":"ToList<TSource>"}]},{"pos":[705535,705536],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[705613,705624],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[705709,705710],"content":"<","needQuote":true,"nodes":[]},{"pos":[705737,705744],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[705809,705810],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[705935,705953],"content":"ToList(Of TSource)","needQuote":true,"nodes":[{"content":"ToList(Of TSource)","pos":[0,18]}]},{"pos":[706020,706021],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[706098,706109],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[706195,706198]},{"pos":[706232,706239],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[706272,706273],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[706300,706301],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[706685,706751],"content":"ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,66],"source":"ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[707258,707281],"content":"ToLookup<TSource, TKey>","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey&gt;","pos":[0,23],"source":"ToLookup<TSource, TKey>"}]},{"pos":[707353,707354],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[707431,707442],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[707527,707528],"content":"<","needQuote":true,"nodes":[]},{"pos":[707555,707562],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[707628,707629]},{"pos":[707684,707688],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[707746,707747],"content":"<","needQuote":true,"nodes":[]},{"pos":[707774,707781],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[707815,707816]},{"pos":[707848,707852],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[707914,707915],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[708063,708089],"content":"ToLookup(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"ToLookup(Of TSource, TKey)","pos":[0,26]}]},{"pos":[708164,708165],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[708242,708253],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[708339,708342]},{"pos":[708376,708383],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[708416,708417],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[708445,708446]},{"pos":[708501,708505],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[708564,708567]},{"pos":[708601,708608],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[708642,708643]},{"pos":[708675,708679],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[708709,708710],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[708737,708738],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[709256,709347],"content":"ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,91],"source":"ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[710039,710062],"content":"ToLookup<TSource, TKey>","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey&gt;","pos":[0,23],"source":"ToLookup<TSource, TKey>"}]},{"pos":[710134,710135],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[710212,710223],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[710308,710309],"content":"<","needQuote":true,"nodes":[]},{"pos":[710336,710343],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[710409,710410]},{"pos":[710465,710469],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[710527,710528],"content":"<","needQuote":true,"nodes":[]},{"pos":[710555,710562],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[710596,710597]},{"pos":[710629,710633],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[710696,710697]},{"pos":[710785,710802],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[710893,710894],"content":"<","needQuote":true,"nodes":[]},{"pos":[710921,710925],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[710987,710988],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[711186,711212],"content":"ToLookup(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"ToLookup(Of TSource, TKey)","pos":[0,26]}]},{"pos":[711287,711288],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[711365,711376],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[711462,711465]},{"pos":[711499,711506],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[711539,711540],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[711568,711569]},{"pos":[711624,711628],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[711687,711690]},{"pos":[711724,711731],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[711765,711766]},{"pos":[711798,711802],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[711832,711833],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[711861,711862]},{"pos":[711950,711967],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[712059,712062]},{"pos":[712096,712100],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[712130,712131],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[712158,712159],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[712751,712852],"content":"ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;)","pos":[0,101],"source":"ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)"}]},{"pos":[713505,713538],"content":"ToLookup<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey, TElement&gt;","pos":[0,33],"source":"ToLookup<TSource, TKey, TElement>"}]},{"pos":[713620,713621],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[713698,713709],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[713794,713795],"content":"<","needQuote":true,"nodes":[]},{"pos":[713822,713829],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[713895,713896]},{"pos":[713951,713955],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[714013,714014],"content":"<","needQuote":true,"nodes":[]},{"pos":[714041,714048],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[714082,714083]},{"pos":[714115,714119],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[714182,714183]},{"pos":[714238,714242],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[714300,714301],"content":"<","needQuote":true,"nodes":[]},{"pos":[714328,714335],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[714369,714370]},{"pos":[714402,714410],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[714476,714477],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[714646,714682],"content":"ToLookup(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToLookup(Of TSource, TKey, TElement)","pos":[0,36]}]},{"pos":[714767,714768],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[714845,714856],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[714942,714945]},{"pos":[714979,714986],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[715019,715020],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[715048,715049]},{"pos":[715104,715108],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[715167,715170]},{"pos":[715204,715211],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[715245,715246]},{"pos":[715278,715282],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[715312,715313],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[715341,715342]},{"pos":[715397,715401],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[715460,715463]},{"pos":[715497,715504],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[715538,715539]},{"pos":[715571,715579],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[715613,715614],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[715641,715642],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[716275,716401],"content":"ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,126],"source":"ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[717239,717272],"content":"ToLookup<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey, TElement&gt;","pos":[0,33],"source":"ToLookup<TSource, TKey, TElement>"}]},{"pos":[717354,717355],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[717432,717443],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[717528,717529],"content":"<","needQuote":true,"nodes":[]},{"pos":[717556,717563],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[717629,717630]},{"pos":[717685,717689],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[717747,717748],"content":"<","needQuote":true,"nodes":[]},{"pos":[717775,717782],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[717816,717817]},{"pos":[717849,717853],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[717916,717917]},{"pos":[717972,717976],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[718034,718035],"content":"<","needQuote":true,"nodes":[]},{"pos":[718062,718069],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[718103,718104]},{"pos":[718136,718144],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[718211,718212]},{"pos":[718300,718317],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[718408,718409],"content":"<","needQuote":true,"nodes":[]},{"pos":[718436,718440],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[718502,718503],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[718722,718758],"content":"ToLookup(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToLookup(Of TSource, TKey, TElement)","pos":[0,36]}]},{"pos":[718843,718844],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[718921,718932],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[719018,719021]},{"pos":[719055,719062],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[719095,719096],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[719124,719125]},{"pos":[719180,719184],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[719243,719246]},{"pos":[719280,719287],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[719321,719322]},{"pos":[719354,719358],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[719388,719389],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[719417,719418]},{"pos":[719473,719477],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[719536,719539]},{"pos":[719573,719580],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[719614,719615]},{"pos":[719647,719655],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[719689,719690],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[719718,719719]},{"pos":[719807,719824],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[719916,719919]},{"pos":[719953,719957],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[719987,719988],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[720015,720016],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[720701,720759],"content":"Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Union&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,58],"source":"Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[721302,721316],"content":"Union<TSource>","needQuote":true,"nodes":[{"content":"Union&lt;TSource&gt;","pos":[0,14],"source":"Union<TSource>"}]},{"pos":[721379,721380],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[721457,721468],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[721553,721554],"content":"<","needQuote":true,"nodes":[]},{"pos":[721581,721588],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[721654,721655]},{"pos":[721737,721748],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[721833,721834],"content":"<","needQuote":true,"nodes":[]},{"pos":[721861,721868],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[721933,721934],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[722102,722119],"content":"Union(Of TSource)","needQuote":true,"nodes":[{"content":"Union(Of TSource)","pos":[0,17]}]},{"pos":[722185,722186],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[722263,722274],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[722360,722363]},{"pos":[722397,722404],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[722437,722438],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[722466,722467]},{"pos":[722549,722560],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[722646,722649]},{"pos":[722683,722690],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[722723,722724],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[722751,722752],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[723294,723380],"content":"Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Union&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,86],"source":"Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[724117,724131],"content":"Union<TSource>","needQuote":true,"nodes":[{"content":"Union&lt;TSource&gt;","pos":[0,14],"source":"Union<TSource>"}]},{"pos":[724194,724195],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[724272,724283],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[724368,724369],"content":"<","needQuote":true,"nodes":[]},{"pos":[724396,724403],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[724469,724470]},{"pos":[724552,724563],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[724648,724649],"content":"<","needQuote":true,"nodes":[]},{"pos":[724676,724683],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[724749,724750]},{"pos":[724838,724855],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[724946,724947],"content":"<","needQuote":true,"nodes":[]},{"pos":[724974,724981],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[725046,725047],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[725265,725282],"content":"Union(Of TSource)","needQuote":true,"nodes":[{"content":"Union(Of TSource)","pos":[0,17]}]},{"pos":[725348,725349],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[725426,725437],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[725523,725526]},{"pos":[725560,725567],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[725600,725601],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[725629,725630]},{"pos":[725712,725723],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[725809,725812]},{"pos":[725846,725853],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[725886,725887],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[725915,725916]},{"pos":[726004,726021],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[726113,726116]},{"pos":[726150,726157],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[726190,726191],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[726218,726219],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[726808,726868],"content":"Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Where&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,60],"source":"Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[727379,727393],"content":"Where<TSource>","needQuote":true,"nodes":[{"content":"Where&lt;TSource&gt;","pos":[0,14],"source":"Where<TSource>"}]},{"pos":[727456,727457],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[727534,727545],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[727630,727631],"content":"<","needQuote":true,"nodes":[]},{"pos":[727658,727665],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[727731,727732]},{"pos":[727787,727791],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[727849,727850],"content":"<","needQuote":true,"nodes":[]},{"pos":[727877,727884],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[727918,727919]},{"pos":[727975,727982],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[728075,728076],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[728232,728249],"content":"Where(Of TSource)","needQuote":true,"nodes":[{"content":"Where(Of TSource)","pos":[0,17]}]},{"pos":[728315,728316],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[728393,728404],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[728490,728493]},{"pos":[728527,728534],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[728567,728568],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[728596,728597]},{"pos":[728652,728656],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[728715,728718]},{"pos":[728752,728759],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[728793,728794]},{"pos":[728850,728857],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[728918,728919],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[728946,728947],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[729432,729499],"content":"Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"Where&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, Boolean&gt;)","pos":[0,67],"source":"Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)"}]},{"pos":[730058,730072],"content":"Where<TSource>","needQuote":true,"nodes":[{"content":"Where&lt;TSource&gt;","pos":[0,14],"source":"Where<TSource>"}]},{"pos":[730135,730136],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[730213,730224],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[730309,730310],"content":"<","needQuote":true,"nodes":[]},{"pos":[730337,730344],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[730410,730411]},{"pos":[730466,730470],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[730528,730529],"content":"<","needQuote":true,"nodes":[]},{"pos":[730556,730563],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[730597,730598]},{"pos":[730652,730657],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[730717,730718]},{"pos":[730774,730781],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[730874,730875],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[731044,731061],"content":"Where(Of TSource)","needQuote":true,"nodes":[{"content":"Where(Of TSource)","pos":[0,17]}]},{"pos":[731127,731128],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[731205,731216],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[731302,731305]},{"pos":[731339,731346],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[731379,731380],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[731408,731409]},{"pos":[731464,731468],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[731527,731530]},{"pos":[731564,731571],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[731605,731606]},{"pos":[731660,731665],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[731725,731726]},{"pos":[731782,731789],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[731850,731851],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[731878,731879],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[732413,732517],"content":"Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)","needQuote":true,"nodes":[{"content":"Zip&lt;TFirst, TSecond, TResult&gt;(IEnumerable&lt;TFirst&gt;, IEnumerable&lt;TSecond&gt;, Func&lt;TFirst, TSecond, TResult&gt;)","pos":[0,104],"source":"Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)"}]},{"pos":[733241,733270],"content":"Zip<TFirst, TSecond, TResult>","needQuote":true,"nodes":[{"content":"Zip&lt;TFirst, TSecond, TResult&gt;","pos":[0,29],"source":"Zip<TFirst, TSecond, TResult>"}]},{"pos":[733348,733349],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[733426,733437],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[733522,733523],"content":"<","needQuote":true,"nodes":[]},{"pos":[733550,733556],"content":"TFirst","needQuote":true,"nodes":[{"content":"TFirst","pos":[0,6]}]},{"content":",","pos":[733621,733622]},{"pos":[733704,733715],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[733800,733801],"content":"<","needQuote":true,"nodes":[]},{"pos":[733828,733835],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[733901,733902]},{"pos":[733957,733961],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[734019,734020],"content":"<","needQuote":true,"nodes":[]},{"pos":[734047,734053],"content":"TFirst","needQuote":true,"nodes":[{"content":"TFirst","pos":[0,6]}]},{"content":",","pos":[734086,734087]},{"pos":[734119,734126],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[734160,734161]},{"pos":[734193,734200],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[734265,734266],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[734457,734489],"content":"Zip(Of TFirst, TSecond, TResult)","needQuote":true,"nodes":[{"content":"Zip(Of TFirst, TSecond, TResult)","pos":[0,32]}]},{"pos":[734570,734571],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[734648,734659],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[734745,734748]},{"pos":[734782,734788],"content":"TFirst","needQuote":true,"nodes":[{"content":"TFirst","pos":[0,6]}]},{"pos":[734820,734821],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[734849,734850]},{"pos":[734932,734943],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[735029,735032]},{"pos":[735066,735073],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"pos":[735106,735107],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[735135,735136]},{"pos":[735191,735195],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[735254,735257]},{"pos":[735291,735297],"content":"TFirst","needQuote":true,"nodes":[{"content":"TFirst","pos":[0,6]}]},{"content":",","pos":[735330,735331]},{"pos":[735363,735370],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[735404,735405]},{"pos":[735437,735444],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[735477,735478],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[735505,735506],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[736008,736019],"content":"System.Linq","needQuote":true,"nodes":[{"content":"System.Linq","pos":[0,11]}]},{"pos":[736303,736308],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[736732,736737],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[736938,736943],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[737109,737114],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[737490,737497],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[737701,737715],"content":"IsSynchronized","needQuote":true,"nodes":[{"content":"IsSynchronized","pos":[0,14]}]},{"pos":[737994,738002],"content":"SyncRoot","needQuote":true,"nodes":[{"content":"SyncRoot","pos":[0,8]}]},{"pos":[738425,738443],"content":"CopyTo(T[], Int32)","needQuote":true,"nodes":[{"content":"CopyTo(T[], Int32)","pos":[0,18]}]},{"pos":[738798,738804],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[738897,738898],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[738925,738926],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":"[]","pos":[738954,738956]},{"content":",","pos":[738988,738989]},{"pos":[739043,739048],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[739107,739108],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[739241,739247],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[739343,739344],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[739371,739372],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[739399,739401],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[739430,739431]},{"pos":[739485,739490],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[739549,739550],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[739831,739834],"content":"T[]","needQuote":true,"nodes":[{"content":"T[]","pos":[0,3]}]},{"pos":[739910,739911],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":"[]","pos":[739939,739941]},{"pos":[739983,739984],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[740011,740013],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[740194,740212],"content":"CopyTo(T[], Int32)","needQuote":true,"nodes":[{"content":"CopyTo(T[], Int32)","pos":[0,18]}]},{"pos":[740567,740573],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[740666,740667],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[740694,740695],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":"[]","pos":[740723,740725]},{"content":",","pos":[740757,740758]},{"pos":[740812,740817],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[740876,740877],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[741010,741016],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[741112,741113],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[741140,741141],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[741168,741170],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[741199,741200]},{"pos":[741254,741259],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[741318,741319],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[741771,741786],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[742022,742035],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[742116,742117],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[742144,742145],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[742247,742260],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[742344,742345],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[742372,742373],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[742713,742727],"content":"IEnumerator<T>","needQuote":true,"nodes":[{"content":"IEnumerator&lt;T&gt;","pos":[0,14],"source":"IEnumerator<T>"}]},{"pos":[742946,742957],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[743021,743022],"content":"<","needQuote":true,"nodes":[]},{"pos":[743049,743050],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[743170,743181],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"content":"(Of","pos":[743246,743249]},{"pos":[743283,743284],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[743311,743312],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[743545,743560],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[743796,743809],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[743890,743891],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[743918,743919],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[744021,744034],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[744118,744119],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[744146,744147],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[744410,744424],"content":"IEnumerator<T>","needQuote":true,"nodes":[{"content":"IEnumerator&lt;T&gt;","pos":[0,14],"source":"IEnumerator<T>"}]},{"pos":[744643,744654],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[744718,744719],"content":"<","needQuote":true,"nodes":[]},{"pos":[744746,744747],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[744867,744878],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"content":"(Of","pos":[744943,744946]},{"pos":[744980,744981],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[745008,745009],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[745187,745188],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[745277,745278],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[745559,745568],"content":"TryAdd(T)","needQuote":true,"nodes":[{"content":"TryAdd(T)","pos":[0,9]}]},{"pos":[745846,745852],"content":"TryAdd","needQuote":true,"nodes":[{"content":"TryAdd","pos":[0,6]}]},{"pos":[745945,745946],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[745973,745974],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[746001,746002],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[746120,746126],"content":"TryAdd","needQuote":true,"nodes":[{"content":"TryAdd","pos":[0,6]}]},{"pos":[746222,746223],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[746250,746251],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[746278,746279],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[746610,746619],"content":"TryAdd(T)","needQuote":true,"nodes":[{"content":"TryAdd(T)","pos":[0,9]}]},{"pos":[746897,746903],"content":"TryAdd","needQuote":true,"nodes":[{"content":"TryAdd","pos":[0,6]}]},{"pos":[746996,746997],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[747024,747025],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[747052,747053],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[747171,747177],"content":"TryAdd","needQuote":true,"nodes":[{"content":"TryAdd","pos":[0,6]}]},{"pos":[747273,747274],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[747301,747302],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[747329,747330],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[747805,747815],"content":"TryTake(T)","needQuote":true,"nodes":[{"content":"TryTake(T)","pos":[0,10]}]},{"pos":[748097,748104],"content":"TryTake","needQuote":true,"nodes":[{"content":"TryTake","pos":[0,7]}]},{"pos":[748198,748199],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[748226,748227],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[748254,748255],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[748375,748382],"content":"TryTake","needQuote":true,"nodes":[{"content":"TryTake","pos":[0,7]}]},{"pos":[748479,748480],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[748507,748508],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[748535,748536],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[748873,748883],"content":"TryTake(T)","needQuote":true,"nodes":[{"content":"TryTake(T)","pos":[0,10]}]},{"pos":[749165,749172],"content":"TryTake","needQuote":true,"nodes":[{"content":"TryTake","pos":[0,7]}]},{"pos":[749266,749267],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[749294,749295],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[749322,749323],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[749443,749450],"content":"TryTake","needQuote":true,"nodes":[{"content":"TryTake","pos":[0,7]}]},{"pos":[749547,749548],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[749575,749576],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[749603,749604],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[749971,749991],"content":"CopyTo(Array, Int32)","needQuote":true,"nodes":[{"content":"CopyTo(Array, Int32)","pos":[0,20]}]},{"pos":[750169,750175],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[750238,750239],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[750288,750293],"content":"Array","needQuote":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"content":",","pos":[750332,750333]},{"pos":[750387,750392],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[750451,750452],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[750564,750570],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[750633,750634],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[750683,750688],"content":"Array","needQuote":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"content":",","pos":[750727,750728]},{"pos":[750782,750787],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[750846,750847],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[751058,751063],"content":"Array","needQuote":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[751260,751275],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[751414,751427],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[751497,751498],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[751525,751526],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[751618,751631],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[751701,751702],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[751729,751730],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[751946,751957],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[752316,752325],"content":"ToArray()","needQuote":true,"nodes":[{"content":"ToArray()","pos":[0,9]}]},{"pos":[752600,752607],"content":"ToArray","needQuote":true,"nodes":[{"content":"ToArray","pos":[0,7]}]},{"pos":[752701,752702],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[752729,752730],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[752845,752852],"content":"ToArray","needQuote":true,"nodes":[{"content":"ToArray","pos":[0,7]}]},{"pos":[752949,752950],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[752977,752978],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[753303,753312],"content":"ToArray()","needQuote":true,"nodes":[{"content":"ToArray()","pos":[0,9]}]},{"pos":[753587,753594],"content":"ToArray","needQuote":true,"nodes":[{"content":"ToArray","pos":[0,7]}]},{"pos":[753688,753689],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[753716,753717],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[753832,753839],"content":"ToArray","needQuote":true,"nodes":[{"content":"ToArray","pos":[0,7]}]},{"pos":[753936,753937],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[753964,753965],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[754249,754270],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[754475,754496],"content":"NotSupportedException","needQuote":true,"nodes":[{"content":"NotSupportedException","pos":[0,21]}]},{"pos":[754690,754717],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]},{"pos":[754936,754953],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]}],"content":"items:\n- uid: System.Collections.Concurrent.ConcurrentStack`1\n  commentId: T:System.Collections.Concurrent.ConcurrentStack`1\n  id: ConcurrentStack`1\n  parent: System.Collections.Concurrent\n  children:\n  - System.Collections.Concurrent.ConcurrentStack`1.#ctor\n  - System.Collections.Concurrent.ConcurrentStack`1.#ctor(System.Collections.Generic.IEnumerable{`0})\n  - System.Collections.Concurrent.ConcurrentStack`1.Clear\n  - System.Collections.Concurrent.ConcurrentStack`1.CopyTo(`0[],System.Int32)\n  - System.Collections.Concurrent.ConcurrentStack`1.Count\n  - System.Collections.Concurrent.ConcurrentStack`1.GetEnumerator\n  - System.Collections.Concurrent.ConcurrentStack`1.IsEmpty\n  - System.Collections.Concurrent.ConcurrentStack`1.Push(`0)\n  - System.Collections.Concurrent.ConcurrentStack`1.PushRange(`0[])\n  - System.Collections.Concurrent.ConcurrentStack`1.PushRange(`0[],System.Int32,System.Int32)\n  - System.Collections.Concurrent.ConcurrentStack`1.System#Collections#Concurrent#IProducerConsumerCollection{T}#TryAdd(`0)\n  - System.Collections.Concurrent.ConcurrentStack`1.System#Collections#Concurrent#IProducerConsumerCollection{T}#TryTake(`0@)\n  - System.Collections.Concurrent.ConcurrentStack`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Collections.Concurrent.ConcurrentStack`1.System#Collections#ICollection#IsSynchronized\n  - System.Collections.Concurrent.ConcurrentStack`1.System#Collections#ICollection#SyncRoot\n  - System.Collections.Concurrent.ConcurrentStack`1.System#Collections#IEnumerable#GetEnumerator\n  - System.Collections.Concurrent.ConcurrentStack`1.ToArray\n  - System.Collections.Concurrent.ConcurrentStack`1.TryPeek(`0@)\n  - System.Collections.Concurrent.ConcurrentStack`1.TryPop(`0@)\n  - System.Collections.Concurrent.ConcurrentStack`1.TryPopRange(`0[])\n  - System.Collections.Concurrent.ConcurrentStack`1.TryPopRange(`0[],System.Int32,System.Int32)\n  langs:\n  - csharp\n  - vb\n  name: ConcurrentStack<T>\n  fullName: System.Collections.Concurrent.ConcurrentStack<T>\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ConcurrentStack\n    path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n    startLine: 45\n  assemblies:\n  - System.Collections.Concurrent\n  namespace: System.Collections.Concurrent\n  summary: \"\\n<p>Represents a thread-safe last in-first out (LIFO) collection.</p>\\n\"\n  syntax:\n    content: >-\n      [DebuggerDisplay(\"Count = {Count}\")]\n\n      [DebuggerTypeProxy(typeof (SystemCollectionsConcurrent_ProducerConsumerCollectionDebugView<>))]\n\n      [HostProtection(Synchronization = true, ExternalThreading = true)]\n\n      public class ConcurrentStack<T> : IProducerConsumerCollection<T>, ICollection, IReadOnlyCollection<T>, IEnumerable<T>, IEnumerable\n    content.vb: >-\n      <DebuggerDisplay(\"Count = {Count}\")>\n\n      <DebuggerTypeProxy(GetType(SystemCollectionsConcurrent_ProducerConsumerCollectionDebugView(Of )))>\n\n      <HostProtection(Synchronization:=True, ExternalThreading:=True)>\n\n      Public Class ConcurrentStack(Of T)\n          Implements IProducerConsumerCollection(Of T), ICollection, IReadOnlyCollection(Of T), IEnumerable(Of T), IEnumerable\n    typeParameters:\n    - id: T\n      description: \"\\n<p>The type of the elements contained in the stack.</p>\\n\"\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Concurrent.IProducerConsumerCollection{{T}}\n  - System.Collections.Generic.IReadOnlyCollection{{T}}\n  - System.Collections.Generic.IEnumerable{{T}}\n  - System.Collections.ICollection\n  - System.Collections.IEnumerable\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  fullName.vb: System.Collections.Concurrent.ConcurrentStack(Of T)\n  name.vb: ConcurrentStack(Of T)\n  nameWithType: ConcurrentStack<T>\n  extensionMethods:\n  - System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Queryable.AsQueryable``1\n  - System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.ParallelEnumerable.AsParallel``1\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Aggregate``1(System.Func{{T},{T},{T}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Aggregate``2({TAccumulate},System.Func{{TAccumulate},{T},{TAccumulate}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Aggregate``3({TAccumulate},System.Func{{TAccumulate},{T},{TAccumulate}},System.Func{{TAccumulate},{TResult}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.All``1(System.Func{{T},System.Boolean})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Any``1\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Any``1(System.Func{{T},System.Boolean})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.AsEnumerable``1\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Decimal})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Double})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Int32})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Int64})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Nullable{System.Decimal}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Nullable{System.Double}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Nullable{System.Int32}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Nullable{System.Int64}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Nullable{System.Single}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Single})\n  - System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{{T}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Append``1({T})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Prepend``1({T})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Contains``1({T})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Contains``1({T},System.Collections.Generic.IEqualityComparer{{T}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Count``1\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Count``1(System.Func{{T},System.Boolean})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.DefaultIfEmpty``1\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.DefaultIfEmpty``1({T})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Distinct``1\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{{T}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ElementAt``1(System.Int32)\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{{T}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IEqualityComparer{{T}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.First``1\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.First``1(System.Func{{T},System.Boolean})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.FirstOrDefault``1\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.FirstOrDefault``1(System.Func{{T},System.Boolean})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``2(System.Func{{T},{TKey}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``2(System.Func{{T},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``3(System.Func{{T},{TKey}},System.Func{{T},{TElement}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``3(System.Func{{T},{TKey}},System.Func{{T},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``3(System.Func{{T},{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{T}},{TResult}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``3(System.Func{{T},{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{T}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``4(System.Func{{T},{TKey}},System.Func{{T},{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``4(System.Func{{T},{TKey}},System.Func{{T},{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{{T},{TKey}},System.Func{{TInner},{TKey}},System.Func{{T},System.Collections.Generic.IEnumerable{{TInner}},{TResult}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{{T},{TKey}},System.Func{{TInner},{TKey}},System.Func{{T},System.Collections.Generic.IEnumerable{{TInner}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{{T}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IEqualityComparer{{T}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{{T},{TKey}},System.Func{{TInner},{TKey}},System.Func{{T},{TInner},{TResult}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{{T},{TKey}},System.Func{{TInner},{TKey}},System.Func{{T},{TInner},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Last``1\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Last``1(System.Func{{T},System.Boolean})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.LastOrDefault``1\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.LastOrDefault``1(System.Func{{T},System.Boolean})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.LongCount``1\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.LongCount``1(System.Func{{T},System.Boolean})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Decimal})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Double})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Int32})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Int64})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Nullable{System.Decimal}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Nullable{System.Double}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Nullable{System.Int32}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Nullable{System.Int64}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Nullable{System.Single}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Single})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``2(System.Func{{T},{TResult}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Decimal})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Double})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Int32})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Int64})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Nullable{System.Decimal}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Nullable{System.Double}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Nullable{System.Int32}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Nullable{System.Int64}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Nullable{System.Single}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Single})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``2(System.Func{{T},{TResult}})\n  - System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.OrderBy``2(System.Func{{T},{TKey}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.OrderBy``2(System.Func{{T},{TKey}},System.Collections.Generic.IComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.OrderByDescending``2(System.Func{{T},{TKey}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.OrderByDescending``2(System.Func{{T},{TKey}},System.Collections.Generic.IComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Reverse``1\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Select``2(System.Func{{T},{TResult}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Select``2(System.Func{{T},System.Int32,{TResult}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SelectMany``2(System.Func{{T},System.Collections.Generic.IEnumerable{{TResult}}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SelectMany``2(System.Func{{T},System.Int32,System.Collections.Generic.IEnumerable{{TResult}}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SelectMany``3(System.Func{{T},System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{{T},{TCollection},{TResult}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SelectMany``3(System.Func{{T},System.Int32,System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{{T},{TCollection},{TResult}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{{T}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IEqualityComparer{{T}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Single``1\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Single``1(System.Func{{T},System.Boolean})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SingleOrDefault``1\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SingleOrDefault``1(System.Func{{T},System.Boolean})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Skip``1(System.Int32)\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SkipWhile``1(System.Func{{T},System.Boolean})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SkipWhile``1(System.Func{{T},System.Int32,System.Boolean})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Decimal})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Double})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Int32})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Int64})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Nullable{System.Decimal}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Nullable{System.Double}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Nullable{System.Int32}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Nullable{System.Int64}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Nullable{System.Single}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Single})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Take``1(System.Int32)\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.TakeWhile``1(System.Func{{T},System.Boolean})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.TakeWhile``1(System.Func{{T},System.Int32,System.Boolean})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToArray``1\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToDictionary``2(System.Func{{T},{TKey}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToDictionary``2(System.Func{{T},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToDictionary``3(System.Func{{T},{TKey}},System.Func{{T},{TElement}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToDictionary``3(System.Func{{T},{TKey}},System.Func{{T},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToList``1\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToLookup``2(System.Func{{T},{TKey}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToLookup``2(System.Func{{T},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToLookup``3(System.Func{{T},{TKey}},System.Func{{T},{TElement}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToLookup``3(System.Func{{T},{TKey}},System.Func{{T},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{{T}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IEqualityComparer{{T}})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Where``1(System.Func{{T},System.Boolean})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Where``1(System.Func{{T},System.Int32,System.Boolean})\n  - System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{{TSecond}},System.Func{{T},{TSecond},{TResult}})\n  nameWithType.vb: ConcurrentStack(Of T)\n- uid: System.Collections.Concurrent.ConcurrentStack`1.#ctor\n  commentId: M:System.Collections.Concurrent.ConcurrentStack`1.#ctor\n  id: '#ctor'\n  parent: System.Collections.Concurrent.ConcurrentStack`1\n  langs:\n  - csharp\n  - vb\n  name: ConcurrentStack()\n  fullName: System.Collections.Concurrent.ConcurrentStack<T>.ConcurrentStack()\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n    startLine: 87\n  assemblies:\n  - System.Collections.Concurrent\n  namespace: System.Collections.Concurrent\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Collections.Concurrent.ConcurrentStack`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public ConcurrentStack()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Concurrent.ConcurrentStack(Of T).ConcurrentStack()\n  nameWithType: ConcurrentStack<T>.ConcurrentStack()\n  nameWithType.vb: ConcurrentStack(Of T).ConcurrentStack()\n- uid: System.Collections.Concurrent.ConcurrentStack`1.#ctor(System.Collections.Generic.IEnumerable{`0})\n  commentId: M:System.Collections.Concurrent.ConcurrentStack`1.#ctor(System.Collections.Generic.IEnumerable{`0})\n  id: '#ctor(System.Collections.Generic.IEnumerable{`0})'\n  parent: System.Collections.Concurrent.ConcurrentStack`1\n  langs:\n  - csharp\n  - vb\n  name: ConcurrentStack(IEnumerable<T>)\n  fullName: System.Collections.Concurrent.ConcurrentStack<T>.ConcurrentStack(System.Collections.Generic.IEnumerable<T>)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n    startLine: 99\n  assemblies:\n  - System.Collections.Concurrent\n  namespace: System.Collections.Concurrent\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Collections.Concurrent.ConcurrentStack`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class that contains elements copied from the specified collection</p>\\n\"\n  syntax:\n    content: public ConcurrentStack(IEnumerable<T> collection)\n    content.vb: Public Sub New(collection As IEnumerable(Of T))\n    parameters:\n    - id: collection\n      type: System.Collections.Generic.IEnumerable{{T}}\n      description: \"\\n<p>The collection whose elements are copied to the new <xref href=\\\"System.Collections.Concurrent.ConcurrentStack`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>collection</em> argument is null.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Concurrent.ConcurrentStack(Of T).ConcurrentStack(System.Collections.Generic.IEnumerable(Of T))\n  name.vb: ConcurrentStack(IEnumerable(Of T))\n  nameWithType: ConcurrentStack<T>.ConcurrentStack(IEnumerable<T>)\n  nameWithType.vb: ConcurrentStack(Of T).ConcurrentStack(IEnumerable(Of T))\n- uid: System.Collections.Concurrent.ConcurrentStack`1.Count\n  commentId: P:System.Collections.Concurrent.ConcurrentStack`1.Count\n  id: Count\n  parent: System.Collections.Concurrent.ConcurrentStack`1\n  langs:\n  - csharp\n  - vb\n  name: Count\n  fullName: System.Collections.Concurrent.ConcurrentStack<T>.Count\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Count\n    path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n    startLine: 199\n  assemblies:\n  - System.Collections.Concurrent\n  namespace: System.Collections.Concurrent\n  summary: \"\\n<p>Gets the number of elements contained in the <xref href=\\\"System.Collections.Concurrent.ConcurrentStack`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public int Count { get; }\n    content.vb: Public ReadOnly Property Count As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of elements contained in the <xref href=\\\"System.Collections.Concurrent.ConcurrentStack`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.Collections.Generic.IReadOnlyCollection{{T}}.Count\n  - System.Collections.ICollection.Count\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Collections.Concurrent.ConcurrentStack(Of T).Count\n  nameWithType: ConcurrentStack<T>.Count\n  nameWithType.vb: ConcurrentStack(Of T).Count\n- uid: System.Collections.Concurrent.ConcurrentStack`1.IsEmpty\n  commentId: P:System.Collections.Concurrent.ConcurrentStack`1.IsEmpty\n  id: IsEmpty\n  parent: System.Collections.Concurrent.ConcurrentStack`1\n  langs:\n  - csharp\n  - vb\n  name: IsEmpty\n  fullName: System.Collections.Concurrent.ConcurrentStack<T>.IsEmpty\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IsEmpty\n    path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n    startLine: 181\n  assemblies:\n  - System.Collections.Concurrent\n  namespace: System.Collections.Concurrent\n  summary: \"\\n<p>Gets a value that indicates whether the <xref href=\\\"System.Collections.Concurrent.ConcurrentStack`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is empty.</p>\\n\"\n  syntax:\n    content: public bool IsEmpty { get; }\n    content.vb: Public ReadOnly Property IsEmpty As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>true if the <xref href=\\\"System.Collections.Concurrent.ConcurrentStack`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is empty; otherwise, false.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Collections.Concurrent.ConcurrentStack(Of T).IsEmpty\n  nameWithType: ConcurrentStack<T>.IsEmpty\n  nameWithType.vb: ConcurrentStack(Of T).IsEmpty\n- uid: System.Collections.Concurrent.ConcurrentStack`1.System#Collections#ICollection#IsSynchronized\n  commentId: P:System.Collections.Concurrent.ConcurrentStack`1.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Collections.Concurrent.ConcurrentStack`1\n  langs:\n  - csharp\n  - vb\n  name: ICollection.IsSynchronized\n  fullName: System.Collections.Concurrent.ConcurrentStack<T>.System.Collections.ICollection.IsSynchronized\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.Collections.ICollection.IsSynchronized\n    path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n    startLine: 231\n  assemblies:\n  - System.Collections.Concurrent\n  namespace: System.Collections.Concurrent\n  summary: \"\\n<p>Gets a value indicating whether access to the <xref href=\\\"System.Collections.ICollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is synchronized with the SyncRoot.</p>\\n\"\n  syntax:\n    content: bool ICollection.IsSynchronized { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.IsSynchronized As Boolean Implements ICollection.IsSynchronized\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>true if access to the <xref href=\\\"System.Collections.ICollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is synchronized with the SyncRoot; otherwise, false. For <xref href=\\\"System.Collections.Concurrent.ConcurrentStack`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, this property always returns false.</p>\\n\"\n  implements:\n  - System.Collections.ICollection.IsSynchronized\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  fullName.vb: System.Collections.Concurrent.ConcurrentStack(Of T).System.Collections.ICollection.IsSynchronized\n  name.vb: System.Collections.ICollection.IsSynchronized\n  nameWithType: ConcurrentStack<T>.ICollection.IsSynchronized\n  nameWithType.vb: ConcurrentStack(Of T).System.Collections.ICollection.IsSynchronized\n- uid: System.Collections.Concurrent.ConcurrentStack`1.System#Collections#ICollection#SyncRoot\n  commentId: P:System.Collections.Concurrent.ConcurrentStack`1.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Collections.Concurrent.ConcurrentStack`1\n  langs:\n  - csharp\n  - vb\n  name: ICollection.SyncRoot\n  fullName: System.Collections.Concurrent.ConcurrentStack<T>.System.Collections.ICollection.SyncRoot\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.Collections.ICollection.SyncRoot\n    path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n    startLine: 245\n  assemblies:\n  - System.Collections.Concurrent\n  namespace: System.Collections.Concurrent\n  summary: \"\\n<p>Gets an object that can be used to synchronize access to the <xref href=\\\"System.Collections.ICollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. This property is not supported.</p>\\n\"\n  syntax:\n    content: object ICollection.SyncRoot { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.SyncRoot As Object Implements ICollection.SyncRoot\n    parameters: []\n    return:\n      type: System.Object\n      description: \"\\n<p>Returns null (Nothing in Visual Basic).</p>\\n\"\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The SyncRoot property is not supported</p>\\n\"\n  implements:\n  - System.Collections.ICollection.SyncRoot\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  fullName.vb: System.Collections.Concurrent.ConcurrentStack(Of T).System.Collections.ICollection.SyncRoot\n  name.vb: System.Collections.ICollection.SyncRoot\n  nameWithType: ConcurrentStack<T>.ICollection.SyncRoot\n  nameWithType.vb: ConcurrentStack(Of T).System.Collections.ICollection.SyncRoot\n- uid: System.Collections.Concurrent.ConcurrentStack`1.Clear\n  commentId: M:System.Collections.Concurrent.ConcurrentStack`1.Clear\n  id: Clear\n  parent: System.Collections.Concurrent.ConcurrentStack`1\n  langs:\n  - csharp\n  - vb\n  name: Clear()\n  fullName: System.Collections.Concurrent.ConcurrentStack<T>.Clear()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Clear\n    path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n    startLine: 256\n  assemblies:\n  - System.Collections.Concurrent\n  namespace: System.Collections.Concurrent\n  summary: \"\\n<p>Removes all objects from the <xref href=\\\"System.Collections.Concurrent.ConcurrentStack`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void Clear()\n    content.vb: Public Sub Clear\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Concurrent.ConcurrentStack(Of T).Clear()\n  nameWithType: ConcurrentStack<T>.Clear()\n  nameWithType.vb: ConcurrentStack(Of T).Clear()\n- uid: System.Collections.Concurrent.ConcurrentStack`1.CopyTo(`0[],System.Int32)\n  commentId: M:System.Collections.Concurrent.ConcurrentStack`1.CopyTo(`0[],System.Int32)\n  id: CopyTo(`0[],System.Int32)\n  parent: System.Collections.Concurrent.ConcurrentStack`1\n  langs:\n  - csharp\n  - vb\n  name: CopyTo(T[], Int32)\n  fullName: System.Collections.Concurrent.ConcurrentStack<T>.CopyTo(T[], System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CopyTo\n    path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n    startLine: 325\n  assemblies:\n  - System.Collections.Concurrent\n  namespace: System.Collections.Concurrent\n  summary: \"\\n<p>Copies the <xref href=\\\"System.Collections.Concurrent.ConcurrentStack`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> elements to an existing one-dimensional <xref href=\\\"System.Array\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, starting at the specified array index.</p>\\n\"\n  syntax:\n    content: public void CopyTo(T[] array, int index)\n    content.vb: Public Sub CopyTo(array As T(), index As Integer)\n    parameters:\n    - id: array\n      type: '{T}[]'\n      description: \"\\n<p>The one-dimensional <xref href=\\\"System.Array\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is the destination of the elements copied from the <xref href=\\\"System.Collections.Concurrent.ConcurrentStack`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. The <xref href=\\\"System.Array\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> must have zero-based indexing.</p>\\n\"\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The zero-based index in <em>array</em> at which copying begins.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>array</em> is a null reference (Nothing in Visual Basic).</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>index</em> is less than zero.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>index</em> is equal to or greater than the length of the <em>array</em> -or- The number of elements in the source <xref href=\\\"System.Collections.Concurrent.ConcurrentStack`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is greater than the available space from <em>index</em> to the end of the destination <em>array</em>.</p>\\n<p></p>\\n\"\n  implements:\n  - System.Collections.Concurrent.IProducerConsumerCollection{{T}}.CopyTo({T}[],System.Int32)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Concurrent.ConcurrentStack(Of T).CopyTo(T(), System.Int32)\n  name.vb: CopyTo(T(), Int32)\n  nameWithType: ConcurrentStack<T>.CopyTo(T[], Int32)\n  nameWithType.vb: ConcurrentStack(Of T).CopyTo(T(), Int32)\n- uid: System.Collections.Concurrent.ConcurrentStack`1.GetEnumerator\n  commentId: M:System.Collections.Concurrent.ConcurrentStack`1.GetEnumerator\n  id: GetEnumerator\n  parent: System.Collections.Concurrent.ConcurrentStack`1\n  langs:\n  - csharp\n  - vb\n  name: GetEnumerator()\n  fullName: System.Collections.Concurrent.ConcurrentStack<T>.GetEnumerator()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetEnumerator\n    path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n    startLine: 800\n  assemblies:\n  - System.Collections.Concurrent\n  namespace: System.Collections.Concurrent\n  summary: \"\\n<p>Returns an enumerator that iterates through the <xref href=\\\"System.Collections.Concurrent.ConcurrentStack`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public IEnumerator<T> GetEnumerator()\n    content.vb: Public Function GetEnumerator As IEnumerator(Of T)\n    return:\n      type: System.Collections.Generic.IEnumerator{{T}}\n      description: \"\\n<p>An enumerator for the <xref href=\\\"System.Collections.Concurrent.ConcurrentStack`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.Collections.Generic.IEnumerable{{T}}.GetEnumerator\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Concurrent.ConcurrentStack(Of T).GetEnumerator()\n  nameWithType: ConcurrentStack<T>.GetEnumerator()\n  nameWithType.vb: ConcurrentStack(Of T).GetEnumerator()\n- uid: System.Collections.Concurrent.ConcurrentStack`1.Push(`0)\n  commentId: M:System.Collections.Concurrent.ConcurrentStack`1.Push(`0)\n  id: Push(`0)\n  parent: System.Collections.Concurrent.ConcurrentStack`1\n  langs:\n  - csharp\n  - vb\n  name: Push(T)\n  fullName: System.Collections.Concurrent.ConcurrentStack<T>.Push(T)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Push\n    path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n    startLine: 346\n  assemblies:\n  - System.Collections.Concurrent\n  namespace: System.Collections.Concurrent\n  summary: \"\\n<p>Inserts an object at the top of the <xref href=\\\"System.Collections.Concurrent.ConcurrentStack`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void Push(T item)\n    content.vb: Public Sub Push(item As T)\n    parameters:\n    - id: item\n      type: '{T}'\n      description: \"\\n<p>The object to push onto the <xref href=\\\"System.Collections.Concurrent.ConcurrentStack`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. The value can be a null reference (Nothing in Visual Basic) for reference types.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Concurrent.ConcurrentStack(Of T).Push(T)\n  nameWithType: ConcurrentStack<T>.Push(T)\n  nameWithType.vb: ConcurrentStack(Of T).Push(T)\n- uid: System.Collections.Concurrent.ConcurrentStack`1.PushRange(`0[])\n  commentId: M:System.Collections.Concurrent.ConcurrentStack`1.PushRange(`0[])\n  id: PushRange(`0[])\n  parent: System.Collections.Concurrent.ConcurrentStack`1\n  langs:\n  - csharp\n  - vb\n  name: PushRange(T[])\n  fullName: System.Collections.Concurrent.ConcurrentStack<T>.PushRange(T[])\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: PushRange\n    path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n    startLine: 377\n  assemblies:\n  - System.Collections.Concurrent\n  namespace: System.Collections.Concurrent\n  summary: \"\\n<p>Inserts multiple objects at the top of the <xref href=\\\"System.Collections.Concurrent.ConcurrentStack`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> atomically.</p>\\n\"\n  syntax:\n    content: public void PushRange(T[] items)\n    content.vb: Public Sub PushRange(items As T())\n    parameters:\n    - id: items\n      type: '{T}[]'\n      description: \"\\n<p>The objects to push onto the <xref href=\\\"System.Collections.Concurrent.ConcurrentStack`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>items</em> is a null reference (Nothing in Visual Basic).</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Concurrent.ConcurrentStack(Of T).PushRange(T())\n  name.vb: PushRange(T())\n  nameWithType: ConcurrentStack<T>.PushRange(T[])\n  nameWithType.vb: ConcurrentStack(Of T).PushRange(T())\n- uid: System.Collections.Concurrent.ConcurrentStack`1.PushRange(`0[],System.Int32,System.Int32)\n  commentId: M:System.Collections.Concurrent.ConcurrentStack`1.PushRange(`0[],System.Int32,System.Int32)\n  id: PushRange(`0[],System.Int32,System.Int32)\n  parent: System.Collections.Concurrent.ConcurrentStack`1\n  langs:\n  - csharp\n  - vb\n  name: PushRange(T[], Int32, Int32)\n  fullName: System.Collections.Concurrent.ConcurrentStack<T>.PushRange(T[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: PushRange\n    path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n    startLine: 408\n  assemblies:\n  - System.Collections.Concurrent\n  namespace: System.Collections.Concurrent\n  summary: \"\\n<p>Inserts multiple objects at the top of the <xref href=\\\"System.Collections.Concurrent.ConcurrentStack`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> atomically.</p>\\n\"\n  syntax:\n    content: public void PushRange(T[] items, int startIndex, int count)\n    content.vb: Public Sub PushRange(items As T(), startIndex As Integer, count As Integer)\n    parameters:\n    - id: items\n      type: '{T}[]'\n      description: \"\\n<p>The objects to push onto the <xref href=\\\"System.Collections.Concurrent.ConcurrentStack`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: startIndex\n      type: System.Int32\n      description: \"\\n<p>The zero-based offset in <em>items</em> at which to begin inserting elements onto the top of the <xref href=\\\"System.Collections.Concurrent.ConcurrentStack`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>The number of elements to be inserted onto the top of the <xref href=\\\"System.Collections.Concurrent.ConcurrentStack`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>items</em> is a null reference (Nothing in Visual Basic).</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>startIndex</em> or <em>count</em> is negative. Or <em>startIndex</em> is greater than or equal to the length of <em>items</em>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>startIndex</em> + <em>count</em> is greater than the length of <em>items</em>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Concurrent.ConcurrentStack(Of T).PushRange(T(), System.Int32, System.Int32)\n  name.vb: PushRange(T(), Int32, Int32)\n  nameWithType: ConcurrentStack<T>.PushRange(T[], Int32, Int32)\n  nameWithType.vb: ConcurrentStack(Of T).PushRange(T(), Int32, Int32)\n- uid: System.Collections.Concurrent.ConcurrentStack`1.System#Collections#Concurrent#IProducerConsumerCollection{T}#TryAdd(`0)\n  commentId: M:System.Collections.Concurrent.ConcurrentStack`1.System#Collections#Concurrent#IProducerConsumerCollection{T}#TryAdd(`0)\n  id: System#Collections#Concurrent#IProducerConsumerCollection{T}#TryAdd(`0)\n  isEii: true\n  parent: System.Collections.Concurrent.ConcurrentStack`1\n  langs:\n  - csharp\n  - vb\n  name: IProducerConsumerCollection<T>.TryAdd(T)\n  fullName: System.Collections.Concurrent.ConcurrentStack<T>.System.Collections.Concurrent.IProducerConsumerCollection<T>.TryAdd(T)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.Collections.Concurrent.IProducerConsumerCollection<T>.TryAdd\n    path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n    startLine: 502\n  assemblies:\n  - System.Collections.Concurrent\n  namespace: System.Collections.Concurrent\n  summary: \"\\n<p>Attempts to add an object to the <xref href=\\\"System.Collections.Concurrent.IProducerConsumerCollection`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: bool IProducerConsumerCollection<T>.TryAdd(T item)\n    content.vb: Function System.Collections.Concurrent.IProducerConsumerCollection<T>.TryAdd(item As T) As Boolean Implements IProducerConsumerCollection(Of T).TryAdd\n    parameters:\n    - id: item\n      type: '{T}'\n      description: \"\\n<p>The object to add to the <xref href=\\\"System.Collections.Concurrent.IProducerConsumerCollection`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. The value can be a null reference (Nothing in Visual Basic) for reference types.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>true if the object was added successfully; otherwise, false.</p>\\n\"\n  implements:\n  - System.Collections.Concurrent.IProducerConsumerCollection{{T}}.TryAdd({T})\n  fullName.vb: System.Collections.Concurrent.ConcurrentStack(Of T).System.Collections.Concurrent.IProducerConsumerCollection<T>.TryAdd(T)\n  name.vb: System.Collections.Concurrent.IProducerConsumerCollection<T>.TryAdd(T)\n  nameWithType: ConcurrentStack<T>.IProducerConsumerCollection<T>.TryAdd(T)\n  nameWithType.vb: ConcurrentStack(Of T).System.Collections.Concurrent.IProducerConsumerCollection<T>.TryAdd(T)\n- uid: System.Collections.Concurrent.ConcurrentStack`1.System#Collections#Concurrent#IProducerConsumerCollection{T}#TryTake(`0@)\n  commentId: M:System.Collections.Concurrent.ConcurrentStack`1.System#Collections#Concurrent#IProducerConsumerCollection{T}#TryTake(`0@)\n  id: System#Collections#Concurrent#IProducerConsumerCollection{T}#TryTake(`0@)\n  isEii: true\n  parent: System.Collections.Concurrent.ConcurrentStack`1\n  langs:\n  - csharp\n  - vb\n  name: IProducerConsumerCollection<T>.TryTake(out T)\n  fullName: System.Collections.Concurrent.ConcurrentStack<T>.System.Collections.Concurrent.IProducerConsumerCollection<T>.TryTake(out T)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.Collections.Concurrent.IProducerConsumerCollection<T>.TryTake\n    path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n    startLine: 756\n  assemblies:\n  - System.Collections.Concurrent\n  namespace: System.Collections.Concurrent\n  summary: \"\\n<p>Attempts to remove and return an object from the <xref href=\\\"System.Collections.Concurrent.IProducerConsumerCollection`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: bool IProducerConsumerCollection<T>.TryTake(out T item)\n    content.vb: Function System.Collections.Concurrent.IProducerConsumerCollection<T>.TryTake(ByRef item As T) As Boolean Implements IProducerConsumerCollection(Of T).TryTake\n    parameters:\n    - id: item\n      type: '{T}'\n      description: \"\\n<p>When this method returns, if the operation was successful, <em>item</em> contains the object removed. If no object was available to be removed, the value is unspecified.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>true if an element was removed and returned succesfully; otherwise, false.</p>\\n\"\n  implements:\n  - System.Collections.Concurrent.IProducerConsumerCollection{{T}}.TryTake({T}@)\n  fullName.vb: System.Collections.Concurrent.ConcurrentStack(Of T).System.Collections.Concurrent.IProducerConsumerCollection<T>.TryTake(ByRef T)\n  name.vb: System.Collections.Concurrent.IProducerConsumerCollection<T>.TryTake(ByRef T)\n  nameWithType: ConcurrentStack<T>.IProducerConsumerCollection<T>.TryTake(out T)\n  nameWithType.vb: ConcurrentStack(Of T).System.Collections.Concurrent.IProducerConsumerCollection<T>.TryTake(ByRef T)\n- uid: System.Collections.Concurrent.ConcurrentStack`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  commentId: M:System.Collections.Concurrent.ConcurrentStack`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Collections.Concurrent.ConcurrentStack`1\n  langs:\n  - csharp\n  - vb\n  name: ICollection.CopyTo(Array, Int32)\n  fullName: System.Collections.Concurrent.ConcurrentStack<T>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.Collections.ICollection.CopyTo\n    path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n    startLine: 290\n  assemblies:\n  - System.Collections.Concurrent\n  namespace: System.Collections.Concurrent\n  summary: \"\\n<p>Copies the elements of the <xref href=\\\"System.Collections.ICollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to an <xref href=\\\"System.Array\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, starting at a particular <xref href=\\\"System.Array\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> index.</p>\\n\"\n  syntax:\n    content: void ICollection.CopyTo(Array array, int index)\n    content.vb: Sub System.Collections.ICollection.CopyTo(array As Array, index As Integer) Implements ICollection.CopyTo\n    parameters:\n    - id: array\n      type: System.Array\n      description: \"\\n<p>The one-dimensional <xref href=\\\"System.Array\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is the destination of the elements copied from the <xref href=\\\"System.Collections.Concurrent.ConcurrentStack`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. The <xref href=\\\"System.Array\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> must have zero-based indexing.</p>\\n\"\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The zero-based index in <em>array</em> at which copying begins.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>array</em> is a null reference (Nothing in Visual Basic).</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>index</em> is less than zero.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>array</em> is multidimensional. -or- <em>array</em> does not have zero-based indexing. -or- <em>index</em> is equal to or greater than the length of the <em>array</em> -or- The number of elements in the source <xref href=\\\"System.Collections.ICollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is greater than the available space from <em>index</em> to the end of the destination <em>array</em>. -or- The type of the source <xref href=\\\"System.Collections.ICollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> cannot be cast automatically to the type of the destination <em>array</em>.</p>\\n<p></p>\\n\"\n  implements:\n  - System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n  fullName.vb: System.Collections.Concurrent.ConcurrentStack(Of T).System.Collections.ICollection.CopyTo(System.Array, System.Int32)\n  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)\n  nameWithType: ConcurrentStack<T>.ICollection.CopyTo(Array, Int32)\n  nameWithType.vb: ConcurrentStack(Of T).System.Collections.ICollection.CopyTo(Array, Int32)\n- uid: System.Collections.Concurrent.ConcurrentStack`1.System#Collections#IEnumerable#GetEnumerator\n  commentId: M:System.Collections.Concurrent.ConcurrentStack`1.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Collections.Concurrent.ConcurrentStack`1\n  langs:\n  - csharp\n  - vb\n  name: IEnumerable.GetEnumerator()\n  fullName: System.Collections.Concurrent.ConcurrentStack<T>.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.Collections.IEnumerable.GetEnumerator\n    path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n    startLine: 834\n  assemblies:\n  - System.Collections.Concurrent\n  namespace: System.Collections.Concurrent\n  summary: \"\\n<p>Returns an enumerator that iterates through a collection.</p>\\n\"\n  syntax:\n    content: IEnumerator IEnumerable.GetEnumerator()\n    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator\n    return:\n      type: System.Collections.IEnumerator\n      description: \"\\n<p>An <xref href=\\\"System.Collections.IEnumerator\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that can be used to iterate through the collection.</p>\\n\"\n  implements:\n  - System.Collections.IEnumerable.GetEnumerator\n  fullName.vb: System.Collections.Concurrent.ConcurrentStack(Of T).System.Collections.IEnumerable.GetEnumerator()\n  name.vb: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: ConcurrentStack<T>.IEnumerable.GetEnumerator()\n  nameWithType.vb: ConcurrentStack(Of T).System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.Concurrent.ConcurrentStack`1.ToArray\n  commentId: M:System.Collections.Concurrent.ConcurrentStack`1.ToArray\n  id: ToArray\n  parent: System.Collections.Concurrent.ConcurrentStack`1\n  langs:\n  - csharp\n  - vb\n  name: ToArray()\n  fullName: System.Collections.Concurrent.ConcurrentStack<T>.ToArray()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToArray\n    path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n    startLine: 766\n  assemblies:\n  - System.Collections.Concurrent\n  namespace: System.Collections.Concurrent\n  summary: \"\\n<p>Copies the items stored in the <xref href=\\\"System.Collections.Concurrent.ConcurrentStack`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to a new array.</p>\\n\"\n  syntax:\n    content: public T[] ToArray()\n    content.vb: Public Function ToArray As T()\n    return:\n      type: '{T}[]'\n      description: \"\\n<p>A new array containing a snapshot of elements copied from the <xref href=\\\"System.Collections.Concurrent.ConcurrentStack`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.Collections.Concurrent.IProducerConsumerCollection{{T}}.ToArray\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Concurrent.ConcurrentStack(Of T).ToArray()\n  nameWithType: ConcurrentStack<T>.ToArray()\n  nameWithType.vb: ConcurrentStack(Of T).ToArray()\n- uid: System.Collections.Concurrent.ConcurrentStack`1.TryPeek(`0@)\n  commentId: M:System.Collections.Concurrent.ConcurrentStack`1.TryPeek(`0@)\n  id: TryPeek(`0@)\n  parent: System.Collections.Concurrent.ConcurrentStack`1\n  langs:\n  - csharp\n  - vb\n  name: TryPeek(out T)\n  fullName: System.Collections.Concurrent.ConcurrentStack<T>.TryPeek(out T)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TryPeek\n    path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n    startLine: 516\n  assemblies:\n  - System.Collections.Concurrent\n  namespace: System.Collections.Concurrent\n  summary: \"\\n<p>Attempts to return an object from the top of the <xref href=\\\"System.Collections.Concurrent.ConcurrentStack`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> without removing it.</p>\\n\"\n  syntax:\n    content: public bool TryPeek(out T result)\n    content.vb: Public Function TryPeek(ByRef result As T) As Boolean\n    parameters:\n    - id: result\n      type: '{T}'\n      description: \"\\n<p>When this method returns, <em>result</em> contains an object from the top of the <xref href=\\\"System.Collections.Concurrent.ConcurrentStack`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>or an unspecified value if the operation failed.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>true if and object was returned successfully; otherwise, false.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Concurrent.ConcurrentStack(Of T).TryPeek(ByRef T)\n  name.vb: TryPeek(ByRef T)\n  nameWithType: ConcurrentStack<T>.TryPeek(out T)\n  nameWithType.vb: ConcurrentStack(Of T).TryPeek(ByRef T)\n- uid: System.Collections.Concurrent.ConcurrentStack`1.TryPop(`0@)\n  commentId: M:System.Collections.Concurrent.ConcurrentStack`1.TryPop(`0@)\n  id: TryPop(`0@)\n  parent: System.Collections.Concurrent.ConcurrentStack`1\n  langs:\n  - csharp\n  - vb\n  name: TryPop(out T)\n  fullName: System.Collections.Concurrent.ConcurrentStack<T>.TryPop(out T)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TryPop\n    path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n    startLine: 543\n  assemblies:\n  - System.Collections.Concurrent\n  namespace: System.Collections.Concurrent\n  summary: \"\\n<p>Attempts to pop and return the object at the top of the <xref href=\\\"System.Collections.Concurrent.ConcurrentStack`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public bool TryPop(out T result)\n    content.vb: Public Function TryPop(ByRef result As T) As Boolean\n    parameters:\n    - id: result\n      type: '{T}'\n      description: \"\\n<p>When this method returns, if the operation was successful, <em>result</em> contains the object removed. If no object was available to be removed, the value is unspecified.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>true if an element was removed and returned from the top of the <xref href=\\\"System.Collections.Concurrent.ConcurrentStack`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> successfully; otherwise, false.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Concurrent.ConcurrentStack(Of T).TryPop(ByRef T)\n  name.vb: TryPop(ByRef T)\n  nameWithType: ConcurrentStack<T>.TryPop(out T)\n  nameWithType.vb: ConcurrentStack(Of T).TryPop(ByRef T)\n- uid: System.Collections.Concurrent.ConcurrentStack`1.TryPopRange(`0[])\n  commentId: M:System.Collections.Concurrent.ConcurrentStack`1.TryPopRange(`0[])\n  id: TryPopRange(`0[])\n  parent: System.Collections.Concurrent.ConcurrentStack`1\n  langs:\n  - csharp\n  - vb\n  name: TryPopRange(T[])\n  fullName: System.Collections.Concurrent.ConcurrentStack<T>.TryPopRange(T[])\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TryPopRange\n    path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n    startLine: 582\n  assemblies:\n  - System.Collections.Concurrent\n  namespace: System.Collections.Concurrent\n  summary: \"\\n<p>Attempts to pop and return multiple objects from the top of the <xref href=\\\"System.Collections.Concurrent.ConcurrentStack`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> atomically.</p>\\n\"\n  syntax:\n    content: public int TryPopRange(T[] items)\n    content.vb: Public Function TryPopRange(items As T()) As Integer\n    parameters:\n    - id: items\n      type: '{T}[]'\n      description: \"\\n<p>The <xref href=\\\"System.Array\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to which objects popped from the top of the <xref href=\\\"System.Collections.Concurrent.ConcurrentStack`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will be added.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of objects successfully popped from the top of the <xref href=\\\"System.Collections.Concurrent.ConcurrentStack`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and inserted in <em>items</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>items</em> is a null argument (Nothing in Visual Basic).</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Concurrent.ConcurrentStack(Of T).TryPopRange(T())\n  name.vb: TryPopRange(T())\n  nameWithType: ConcurrentStack<T>.TryPopRange(T[])\n  nameWithType.vb: ConcurrentStack(Of T).TryPopRange(T())\n- uid: System.Collections.Concurrent.ConcurrentStack`1.TryPopRange(`0[],System.Int32,System.Int32)\n  commentId: M:System.Collections.Concurrent.ConcurrentStack`1.TryPopRange(`0[],System.Int32,System.Int32)\n  id: TryPopRange(`0[],System.Int32,System.Int32)\n  parent: System.Collections.Concurrent.ConcurrentStack`1\n  langs:\n  - csharp\n  - vb\n  name: TryPopRange(T[], Int32, Int32)\n  fullName: System.Collections.Concurrent.ConcurrentStack<T>.TryPopRange(T[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TryPopRange\n    path: src/mscorlib/src/System/Collections/Concurrent/ConcurrentStack.cs\n    startLine: 620\n  assemblies:\n  - System.Collections.Concurrent\n  namespace: System.Collections.Concurrent\n  summary: \"\\n<p>Attempts to pop and return multiple objects from the top of the <xref href=\\\"System.Collections.Concurrent.ConcurrentStack`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> atomically.</p>\\n\"\n  syntax:\n    content: public int TryPopRange(T[] items, int startIndex, int count)\n    content.vb: Public Function TryPopRange(items As T(), startIndex As Integer, count As Integer) As Integer\n    parameters:\n    - id: items\n      type: '{T}[]'\n      description: \"\\n<p>The <xref href=\\\"System.Array\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to which objects popped from the top of the <xref href=\\\"System.Collections.Concurrent.ConcurrentStack`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will be added.</p>\\n\"\n    - id: startIndex\n      type: System.Int32\n      description: \"\\n<p>The zero-based offset in <em>items</em> at which to begin inserting elements from the top of the <xref href=\\\"System.Collections.Concurrent.ConcurrentStack`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>The number of elements to be popped from top of the <xref href=\\\"System.Collections.Concurrent.ConcurrentStack`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and inserted into <em>items</em>.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of objects successfully popped from the top of the stack and inserted in <em>items</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>items</em> is a null reference (Nothing in Visual Basic).</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>startIndex</em> or <em>count</em> is negative. Or <em>startIndex</em> is greater than or equal to the length of <em>items</em>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>startIndex</em> + <em>count</em> is greater than the length of <em>items</em>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Concurrent.ConcurrentStack(Of T).TryPopRange(T(), System.Int32, System.Int32)\n  name.vb: TryPopRange(T(), Int32, Int32)\n  nameWithType: ConcurrentStack<T>.TryPopRange(T[], Int32, Int32)\n  nameWithType.vb: ConcurrentStack(Of T).TryPopRange(T(), Int32, Int32)\nreferences:\n- uid: System.Collections.Concurrent\n  isExternal: false\n  name: System.Collections.Concurrent\n  fullName: System.Collections.Concurrent\n  nameWithType: System.Collections.Concurrent\n  commentId: N:System.Collections.Concurrent\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Collections.Concurrent.IProducerConsumerCollection{{T}}\n  parent: System.Collections.Concurrent\n  definition: System.Collections.Concurrent.IProducerConsumerCollection`1\n  name: IProducerConsumerCollection<T>\n  fullName: System.Collections.Concurrent.IProducerConsumerCollection<T>\n  fullname.vb: System.Collections.Concurrent.IProducerConsumerCollection(Of T)\n  name.vb: IProducerConsumerCollection(Of T)\n  spec.csharp:\n  - uid: System.Collections.Concurrent.IProducerConsumerCollection`1\n    name: IProducerConsumerCollection\n    fullName: System.Collections.Concurrent.IProducerConsumerCollection\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Concurrent.IProducerConsumerCollection`1\n    name: IProducerConsumerCollection\n    fullName: System.Collections.Concurrent.IProducerConsumerCollection\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IProducerConsumerCollection<T>\n  nameWithType.vb: IProducerConsumerCollection(Of T)\n  commentId: T:System.Collections.Concurrent.IProducerConsumerCollection{`0}\n- uid: System.Collections.Generic.IReadOnlyCollection{{T}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IReadOnlyCollection`1\n  name: IReadOnlyCollection<T>\n  fullName: System.Collections.Generic.IReadOnlyCollection<T>\n  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of T)\n  name.vb: IReadOnlyCollection(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IReadOnlyCollection`1\n    name: IReadOnlyCollection\n    fullName: System.Collections.Generic.IReadOnlyCollection\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IReadOnlyCollection`1\n    name: IReadOnlyCollection\n    fullName: System.Collections.Generic.IReadOnlyCollection\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IReadOnlyCollection<T>\n  nameWithType.vb: IReadOnlyCollection(Of T)\n  commentId: T:System.Collections.Generic.IReadOnlyCollection{`0}\n- uid: System.Collections.Generic.IEnumerable{{T}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of T)\n  name.vb: IEnumerable(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<T>\n  nameWithType.vb: IEnumerable(Of T)\n  commentId: T:System.Collections.Generic.IEnumerable{`0}\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: false\n  name: ICollection\n  fullName: System.Collections.ICollection\n  nameWithType: ICollection\n  commentId: T:System.Collections.ICollection\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerable\n  fullName: System.Collections.IEnumerable\n  nameWithType: IEnumerable\n  commentId: T:System.Collections.IEnumerable\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable\n  parent: System.Linq.Queryable\n  definition: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  name: AsQueryable()\n  fullName: System.Linq.Queryable.AsQueryable()\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Queryable.AsQueryable()\n  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Queryable.AsQueryable``1\n  parent: System.Linq.Queryable\n  definition: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  name: AsQueryable<T>()\n  fullName: System.Linq.Queryable.AsQueryable<T>()\n  fullname.vb: System.Linq.Queryable.AsQueryable(Of T)()\n  name.vb: AsQueryable(Of T)()\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable``1\n    name: AsQueryable<T>\n    fullName: System.Linq.Queryable.AsQueryable<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable``1\n    name: AsQueryable(Of T)\n    fullName: System.Linq.Queryable.AsQueryable(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Queryable.AsQueryable<T>()\n  nameWithType.vb: Queryable.AsQueryable(Of T)()\n  commentId: M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel\n  parent: System.Linq.ParallelEnumerable\n  definition: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  name: AsParallel()\n  fullName: System.Linq.ParallelEnumerable.AsParallel()\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ParallelEnumerable.AsParallel()\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.ParallelEnumerable.AsParallel``1\n  parent: System.Linq.ParallelEnumerable\n  definition: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  name: AsParallel<T>()\n  fullName: System.Linq.ParallelEnumerable.AsParallel<T>()\n  fullname.vb: System.Linq.ParallelEnumerable.AsParallel(Of T)()\n  name.vb: AsParallel(Of T)()\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel``1\n    name: AsParallel<T>\n    fullName: System.Linq.ParallelEnumerable.AsParallel<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel``1\n    name: AsParallel(Of T)\n    fullName: System.Linq.ParallelEnumerable.AsParallel(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ParallelEnumerable.AsParallel<T>()\n  nameWithType.vb: ParallelEnumerable.AsParallel(Of T)()\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Aggregate``1(System.Func{{T},{T},{T}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  name: Aggregate<T>(Func<T, T, T>)\n  fullName: System.Linq.Enumerable.Aggregate<T>(System.Func<T, T, T>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of T)(System.Func(Of T, T, T))\n  name.vb: Aggregate(Of T)(Func(Of T, T, T))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``1(System.Func{``0,``0,``0})\n    name: Aggregate<T>\n    fullName: System.Linq.Enumerable.Aggregate<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``1(System.Func{``0,``0,``0})\n    name: Aggregate(Of T)\n    fullName: System.Linq.Enumerable.Aggregate(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Aggregate<T>(Func<T, T, T>)\n  nameWithType.vb: Enumerable.Aggregate(Of T)(Func(Of T, T, T))\n  commentId: M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Aggregate``2({TAccumulate},System.Func{{TAccumulate},{T},{TAccumulate}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  name: Aggregate<T, TAccumulate>(TAccumulate, Func<TAccumulate, T, TAccumulate>)\n  fullName: System.Linq.Enumerable.Aggregate<T, TAccumulate>(TAccumulate, System.Func<TAccumulate, T, TAccumulate>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of T, TAccumulate)(TAccumulate, System.Func(Of TAccumulate, T, TAccumulate))\n  name.vb: Aggregate(Of T, TAccumulate)(TAccumulate, Func(Of TAccumulate, T, TAccumulate))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``2(``1,System.Func{``1,``0,``1})\n    name: Aggregate<T, TAccumulate>\n    fullName: System.Linq.Enumerable.Aggregate<T, TAccumulate>\n  - name: (\n    fullName: (\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``2(``1,System.Func{``1,``0,``1})\n    name: Aggregate(Of T, TAccumulate)\n    fullName: System.Linq.Enumerable.Aggregate(Of T, TAccumulate)\n  - name: (\n    fullName: (\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Aggregate<T, TAccumulate>(TAccumulate, Func<TAccumulate, T, TAccumulate>)\n  nameWithType.vb: Enumerable.Aggregate(Of T, TAccumulate)(TAccumulate, Func(Of TAccumulate, T, TAccumulate))\n  commentId: M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Aggregate``3({TAccumulate},System.Func{{TAccumulate},{T},{TAccumulate}},System.Func{{TAccumulate},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  name: Aggregate<T, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, T, TAccumulate>, Func<TAccumulate, TResult>)\n  fullName: System.Linq.Enumerable.Aggregate<T, TAccumulate, TResult>(TAccumulate, System.Func<TAccumulate, T, TAccumulate>, System.Func<TAccumulate, TResult>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of T, TAccumulate, TResult)(TAccumulate, System.Func(Of TAccumulate, T, TAccumulate), System.Func(Of TAccumulate, TResult))\n  name.vb: Aggregate(Of T, TAccumulate, TResult)(TAccumulate, Func(Of TAccumulate, T, TAccumulate), Func(Of TAccumulate, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``3(``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n    name: Aggregate<T, TAccumulate, TResult>\n    fullName: System.Linq.Enumerable.Aggregate<T, TAccumulate, TResult>\n  - name: (\n    fullName: (\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``3(``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n    name: Aggregate(Of T, TAccumulate, TResult)\n    fullName: System.Linq.Enumerable.Aggregate(Of T, TAccumulate, TResult)\n  - name: (\n    fullName: (\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Aggregate<T, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, T, TAccumulate>, Func<TAccumulate, TResult>)\n  nameWithType.vb: Enumerable.Aggregate(Of T, TAccumulate, TResult)(TAccumulate, Func(Of TAccumulate, T, TAccumulate), Func(Of TAccumulate, TResult))\n  commentId: M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.All``1(System.Func{{T},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: All<T>(Func<T, Boolean>)\n  fullName: System.Linq.Enumerable.All<T>(System.Func<T, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.All(Of T)(System.Func(Of T, System.Boolean))\n  name.vb: All(Of T)(Func(Of T, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.All``1(System.Func{``0,System.Boolean})\n    name: All<T>\n    fullName: System.Linq.Enumerable.All<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.All``1(System.Func{``0,System.Boolean})\n    name: All(Of T)\n    fullName: System.Linq.Enumerable.All(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.All<T>(Func<T, Boolean>)\n  nameWithType.vb: Enumerable.All(Of T)(Func(Of T, Boolean))\n  commentId: M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Any``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  name: Any<T>()\n  fullName: System.Linq.Enumerable.Any<T>()\n  fullname.vb: System.Linq.Enumerable.Any(Of T)()\n  name.vb: Any(Of T)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Any``1\n    name: Any<T>\n    fullName: System.Linq.Enumerable.Any<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Any``1\n    name: Any(Of T)\n    fullName: System.Linq.Enumerable.Any(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Any<T>()\n  nameWithType.vb: Enumerable.Any(Of T)()\n  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Any``1(System.Func{{T},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Any<T>(Func<T, Boolean>)\n  fullName: System.Linq.Enumerable.Any<T>(System.Func<T, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Any(Of T)(System.Func(Of T, System.Boolean))\n  name.vb: Any(Of T)(Func(Of T, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Any``1(System.Func{``0,System.Boolean})\n    name: Any<T>\n    fullName: System.Linq.Enumerable.Any<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Any``1(System.Func{``0,System.Boolean})\n    name: Any(Of T)\n    fullName: System.Linq.Enumerable.Any(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Any<T>(Func<T, Boolean>)\n  nameWithType.vb: Enumerable.Any(Of T)(Func(Of T, Boolean))\n  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.AsEnumerable``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  name: AsEnumerable<T>()\n  fullName: System.Linq.Enumerable.AsEnumerable<T>()\n  fullname.vb: System.Linq.Enumerable.AsEnumerable(Of T)()\n  name.vb: AsEnumerable(Of T)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.AsEnumerable``1\n    name: AsEnumerable<T>\n    fullName: System.Linq.Enumerable.AsEnumerable<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.AsEnumerable``1\n    name: AsEnumerable(Of T)\n    fullName: System.Linq.Enumerable.AsEnumerable(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.AsEnumerable<T>()\n  nameWithType.vb: Enumerable.AsEnumerable(Of T)()\n  commentId: M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Decimal})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  name: Average<T>(Func<T, Decimal>)\n  fullName: System.Linq.Enumerable.Average<T>(System.Func<T, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Average(Of T)(System.Func(Of T, System.Decimal))\n  name.vb: Average(Of T)(Func(Of T, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Decimal})\n    name: Average<T>\n    fullName: System.Linq.Enumerable.Average<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Decimal})\n    name: Average(Of T)\n    fullName: System.Linq.Enumerable.Average(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<T>(Func<T, Decimal>)\n  nameWithType.vb: Enumerable.Average(Of T)(Func(Of T, Decimal))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Double})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  name: Average<T>(Func<T, Double>)\n  fullName: System.Linq.Enumerable.Average<T>(System.Func<T, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Average(Of T)(System.Func(Of T, System.Double))\n  name.vb: Average(Of T)(Func(Of T, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Double})\n    name: Average<T>\n    fullName: System.Linq.Enumerable.Average<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Double})\n    name: Average(Of T)\n    fullName: System.Linq.Enumerable.Average(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<T>(Func<T, Double>)\n  nameWithType.vb: Enumerable.Average(Of T)(Func(Of T, Double))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Int32})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  name: Average<T>(Func<T, Int32>)\n  fullName: System.Linq.Enumerable.Average<T>(System.Func<T, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Average(Of T)(System.Func(Of T, System.Int32))\n  name.vb: Average(Of T)(Func(Of T, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int32})\n    name: Average<T>\n    fullName: System.Linq.Enumerable.Average<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int32})\n    name: Average(Of T)\n    fullName: System.Linq.Enumerable.Average(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<T>(Func<T, Int32>)\n  nameWithType.vb: Enumerable.Average(Of T)(Func(Of T, Int32))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Int64})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  name: Average<T>(Func<T, Int64>)\n  fullName: System.Linq.Enumerable.Average<T>(System.Func<T, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Average(Of T)(System.Func(Of T, System.Int64))\n  name.vb: Average(Of T)(Func(Of T, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int64})\n    name: Average<T>\n    fullName: System.Linq.Enumerable.Average<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int64})\n    name: Average(Of T)\n    fullName: System.Linq.Enumerable.Average(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<T>(Func<T, Int64>)\n  nameWithType.vb: Enumerable.Average(Of T)(Func(Of T, Int64))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  name: Average<T>(Func<T, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Average<T>(System.Func<T, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of T)(System.Func(Of T, System.Nullable(Of System.Decimal)))\n  name.vb: Average(Of T)(Func(Of T, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Average<T>\n    fullName: System.Linq.Enumerable.Average<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Average(Of T)\n    fullName: System.Linq.Enumerable.Average(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<T>(Func<T, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Average(Of T)(Func(Of T, Nullable(Of Decimal)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  name: Average<T>(Func<T, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Average<T>(System.Func<T, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of T)(System.Func(Of T, System.Nullable(Of System.Double)))\n  name.vb: Average(Of T)(Func(Of T, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Average<T>\n    fullName: System.Linq.Enumerable.Average<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Average(Of T)\n    fullName: System.Linq.Enumerable.Average(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<T>(Func<T, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Average(Of T)(Func(Of T, Nullable(Of Double)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  name: Average<T>(Func<T, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Average<T>(System.Func<T, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of T)(System.Func(Of T, System.Nullable(Of System.Int32)))\n  name.vb: Average(Of T)(Func(Of T, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Average<T>\n    fullName: System.Linq.Enumerable.Average<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Average(Of T)\n    fullName: System.Linq.Enumerable.Average(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<T>(Func<T, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Average(Of T)(Func(Of T, Nullable(Of Int32)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  name: Average<T>(Func<T, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Average<T>(System.Func<T, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of T)(System.Func(Of T, System.Nullable(Of System.Int64)))\n  name.vb: Average(Of T)(Func(Of T, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Average<T>\n    fullName: System.Linq.Enumerable.Average<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Average(Of T)\n    fullName: System.Linq.Enumerable.Average(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<T>(Func<T, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Average(Of T)(Func(Of T, Nullable(Of Int64)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  name: Average<T>(Func<T, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Average<T>(System.Func<T, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of T)(System.Func(Of T, System.Nullable(Of System.Single)))\n  name.vb: Average(Of T)(Func(Of T, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Average<T>\n    fullName: System.Linq.Enumerable.Average<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Average(Of T)\n    fullName: System.Linq.Enumerable.Average(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<T>(Func<T, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Average(Of T)(Func(Of T, Nullable(Of Single)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Average``1(System.Func{{T},System.Single})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  name: Average<T>(Func<T, Single>)\n  fullName: System.Linq.Enumerable.Average<T>(System.Func<T, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Average(Of T)(System.Func(Of T, System.Single))\n  name.vb: Average(Of T)(Func(Of T, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Single})\n    name: Average<T>\n    fullName: System.Linq.Enumerable.Average<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Single})\n    name: Average(Of T)\n    fullName: System.Linq.Enumerable.Average(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<T>(Func<T, Single>)\n  nameWithType.vb: Enumerable.Average(Of T)(Func(Of T, Single))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n- uid: System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  name: Cast<TResult>()\n  fullName: System.Linq.Enumerable.Cast<TResult>()\n  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)()\n  name.vb: Cast(Of TResult)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Cast``1\n    name: Cast<TResult>\n    fullName: System.Linq.Enumerable.Cast<TResult>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Cast``1\n    name: Cast(Of TResult)\n    fullName: System.Linq.Enumerable.Cast(Of TResult)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Cast<TResult>()\n  nameWithType.vb: Enumerable.Cast(Of TResult)()\n  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{{T}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: Concat<T>(IEnumerable<T>)\n  fullName: System.Linq.Enumerable.Concat<T>(System.Collections.Generic.IEnumerable<T>)\n  fullname.vb: System.Linq.Enumerable.Concat(Of T)(System.Collections.Generic.IEnumerable(Of T))\n  name.vb: Concat(Of T)(IEnumerable(Of T))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0})\n    name: Concat<T>\n    fullName: System.Linq.Enumerable.Concat<T>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0})\n    name: Concat(Of T)\n    fullName: System.Linq.Enumerable.Concat(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Concat<T>(IEnumerable<T>)\n  nameWithType.vb: Enumerable.Concat(Of T)(IEnumerable(Of T))\n  commentId: M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Append``1({T})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  name: Append<T>(T)\n  fullName: System.Linq.Enumerable.Append<T>(T)\n  fullname.vb: System.Linq.Enumerable.Append(Of T)(T)\n  name.vb: Append(Of T)(T)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Append``1(``0)\n    name: Append<T>\n    fullName: System.Linq.Enumerable.Append<T>\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Append``1(``0)\n    name: Append(Of T)\n    fullName: System.Linq.Enumerable.Append(Of T)\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Append<T>(T)\n  nameWithType.vb: Enumerable.Append(Of T)(T)\n  commentId: M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Prepend``1({T})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  name: Prepend<T>(T)\n  fullName: System.Linq.Enumerable.Prepend<T>(T)\n  fullname.vb: System.Linq.Enumerable.Prepend(Of T)(T)\n  name.vb: Prepend(Of T)(T)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Prepend``1(``0)\n    name: Prepend<T>\n    fullName: System.Linq.Enumerable.Prepend<T>\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Prepend``1(``0)\n    name: Prepend(Of T)\n    fullName: System.Linq.Enumerable.Prepend(Of T)\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Prepend<T>(T)\n  nameWithType.vb: Enumerable.Prepend(Of T)(T)\n  commentId: M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Contains``1({T})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  name: Contains<T>(T)\n  fullName: System.Linq.Enumerable.Contains<T>(T)\n  fullname.vb: System.Linq.Enumerable.Contains(Of T)(T)\n  name.vb: Contains(Of T)(T)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Contains``1(``0)\n    name: Contains<T>\n    fullName: System.Linq.Enumerable.Contains<T>\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Contains``1(``0)\n    name: Contains(Of T)\n    fullName: System.Linq.Enumerable.Contains(Of T)\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Contains<T>(T)\n  nameWithType.vb: Enumerable.Contains(Of T)(T)\n  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Contains``1({T},System.Collections.Generic.IEqualityComparer{{T}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  name: Contains<T>(T, IEqualityComparer<T>)\n  fullName: System.Linq.Enumerable.Contains<T>(T, System.Collections.Generic.IEqualityComparer<T>)\n  fullname.vb: System.Linq.Enumerable.Contains(Of T)(T, System.Collections.Generic.IEqualityComparer(Of T))\n  name.vb: Contains(Of T)(T, IEqualityComparer(Of T))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Contains``1(``0,System.Collections.Generic.IEqualityComparer{``0})\n    name: Contains<T>\n    fullName: System.Linq.Enumerable.Contains<T>\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Contains``1(``0,System.Collections.Generic.IEqualityComparer{``0})\n    name: Contains(Of T)\n    fullName: System.Linq.Enumerable.Contains(Of T)\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Contains<T>(T, IEqualityComparer<T>)\n  nameWithType.vb: Enumerable.Contains(Of T)(T, IEqualityComparer(Of T))\n  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Count``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  name: Count<T>()\n  fullName: System.Linq.Enumerable.Count<T>()\n  fullname.vb: System.Linq.Enumerable.Count(Of T)()\n  name.vb: Count(Of T)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Count``1\n    name: Count<T>\n    fullName: System.Linq.Enumerable.Count<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Count``1\n    name: Count(Of T)\n    fullName: System.Linq.Enumerable.Count(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Count<T>()\n  nameWithType.vb: Enumerable.Count(Of T)()\n  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Count``1(System.Func{{T},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Count<T>(Func<T, Boolean>)\n  fullName: System.Linq.Enumerable.Count<T>(System.Func<T, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Count(Of T)(System.Func(Of T, System.Boolean))\n  name.vb: Count(Of T)(Func(Of T, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Count``1(System.Func{``0,System.Boolean})\n    name: Count<T>\n    fullName: System.Linq.Enumerable.Count<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Count``1(System.Func{``0,System.Boolean})\n    name: Count(Of T)\n    fullName: System.Linq.Enumerable.Count(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Count<T>(Func<T, Boolean>)\n  nameWithType.vb: Enumerable.Count(Of T)(Func(Of T, Boolean))\n  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.DefaultIfEmpty``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  name: DefaultIfEmpty<T>()\n  fullName: System.Linq.Enumerable.DefaultIfEmpty<T>()\n  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of T)()\n  name.vb: DefaultIfEmpty(Of T)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1\n    name: DefaultIfEmpty<T>\n    fullName: System.Linq.Enumerable.DefaultIfEmpty<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1\n    name: DefaultIfEmpty(Of T)\n    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.DefaultIfEmpty<T>()\n  nameWithType.vb: Enumerable.DefaultIfEmpty(Of T)()\n  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.DefaultIfEmpty``1({T})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  name: DefaultIfEmpty<T>(T)\n  fullName: System.Linq.Enumerable.DefaultIfEmpty<T>(T)\n  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of T)(T)\n  name.vb: DefaultIfEmpty(Of T)(T)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(``0)\n    name: DefaultIfEmpty<T>\n    fullName: System.Linq.Enumerable.DefaultIfEmpty<T>\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(``0)\n    name: DefaultIfEmpty(Of T)\n    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of T)\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.DefaultIfEmpty<T>(T)\n  nameWithType.vb: Enumerable.DefaultIfEmpty(Of T)(T)\n  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Distinct``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  name: Distinct<T>()\n  fullName: System.Linq.Enumerable.Distinct<T>()\n  fullname.vb: System.Linq.Enumerable.Distinct(Of T)()\n  name.vb: Distinct(Of T)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Distinct``1\n    name: Distinct<T>\n    fullName: System.Linq.Enumerable.Distinct<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Distinct``1\n    name: Distinct(Of T)\n    fullName: System.Linq.Enumerable.Distinct(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Distinct<T>()\n  nameWithType.vb: Enumerable.Distinct(Of T)()\n  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{{T}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: Distinct<T>(IEqualityComparer<T>)\n  fullName: System.Linq.Enumerable.Distinct<T>(System.Collections.Generic.IEqualityComparer<T>)\n  fullname.vb: System.Linq.Enumerable.Distinct(Of T)(System.Collections.Generic.IEqualityComparer(Of T))\n  name.vb: Distinct(Of T)(IEqualityComparer(Of T))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{``0})\n    name: Distinct<T>\n    fullName: System.Linq.Enumerable.Distinct<T>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{``0})\n    name: Distinct(Of T)\n    fullName: System.Linq.Enumerable.Distinct(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Distinct<T>(IEqualityComparer<T>)\n  nameWithType.vb: Enumerable.Distinct(Of T)(IEqualityComparer(Of T))\n  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ElementAt``1(System.Int32)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  name: ElementAt<T>(Int32)\n  fullName: System.Linq.Enumerable.ElementAt<T>(System.Int32)\n  fullname.vb: System.Linq.Enumerable.ElementAt(Of T)(System.Int32)\n  name.vb: ElementAt(Of T)(Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ElementAt``1(System.Int32)\n    name: ElementAt<T>\n    fullName: System.Linq.Enumerable.ElementAt<T>\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ElementAt``1(System.Int32)\n    name: ElementAt(Of T)\n    fullName: System.Linq.Enumerable.ElementAt(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ElementAt<T>(Int32)\n  nameWithType.vb: Enumerable.ElementAt(Of T)(Int32)\n  commentId: M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  name: ElementAtOrDefault<T>(Int32)\n  fullName: System.Linq.Enumerable.ElementAtOrDefault<T>(System.Int32)\n  fullname.vb: System.Linq.Enumerable.ElementAtOrDefault(Of T)(System.Int32)\n  name.vb: ElementAtOrDefault(Of T)(Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)\n    name: ElementAtOrDefault<T>\n    fullName: System.Linq.Enumerable.ElementAtOrDefault<T>\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)\n    name: ElementAtOrDefault(Of T)\n    fullName: System.Linq.Enumerable.ElementAtOrDefault(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ElementAtOrDefault<T>(Int32)\n  nameWithType.vb: Enumerable.ElementAtOrDefault(Of T)(Int32)\n  commentId: M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{{T}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: Except<T>(IEnumerable<T>)\n  fullName: System.Linq.Enumerable.Except<T>(System.Collections.Generic.IEnumerable<T>)\n  fullname.vb: System.Linq.Enumerable.Except(Of T)(System.Collections.Generic.IEnumerable(Of T))\n  name.vb: Except(Of T)(IEnumerable(Of T))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0})\n    name: Except<T>\n    fullName: System.Linq.Enumerable.Except<T>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0})\n    name: Except(Of T)\n    fullName: System.Linq.Enumerable.Except(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Except<T>(IEnumerable<T>)\n  nameWithType.vb: Enumerable.Except(Of T)(IEnumerable(Of T))\n  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IEqualityComparer{{T}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: Except<T>(IEnumerable<T>, IEqualityComparer<T>)\n  fullName: System.Linq.Enumerable.Except<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)\n  fullname.vb: System.Linq.Enumerable.Except(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T))\n  name.vb: Except(Of T)(IEnumerable(Of T), IEqualityComparer(Of T))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Except<T>\n    fullName: System.Linq.Enumerable.Except<T>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Except(Of T)\n    fullName: System.Linq.Enumerable.Except(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Except<T>(IEnumerable<T>, IEqualityComparer<T>)\n  nameWithType.vb: Enumerable.Except(Of T)(IEnumerable(Of T), IEqualityComparer(Of T))\n  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.First``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  name: First<T>()\n  fullName: System.Linq.Enumerable.First<T>()\n  fullname.vb: System.Linq.Enumerable.First(Of T)()\n  name.vb: First(Of T)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.First``1\n    name: First<T>\n    fullName: System.Linq.Enumerable.First<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.First``1\n    name: First(Of T)\n    fullName: System.Linq.Enumerable.First(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.First<T>()\n  nameWithType.vb: Enumerable.First(Of T)()\n  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.First``1(System.Func{{T},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: First<T>(Func<T, Boolean>)\n  fullName: System.Linq.Enumerable.First<T>(System.Func<T, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.First(Of T)(System.Func(Of T, System.Boolean))\n  name.vb: First(Of T)(Func(Of T, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.First``1(System.Func{``0,System.Boolean})\n    name: First<T>\n    fullName: System.Linq.Enumerable.First<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.First``1(System.Func{``0,System.Boolean})\n    name: First(Of T)\n    fullName: System.Linq.Enumerable.First(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.First<T>(Func<T, Boolean>)\n  nameWithType.vb: Enumerable.First(Of T)(Func(Of T, Boolean))\n  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.FirstOrDefault``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  name: FirstOrDefault<T>()\n  fullName: System.Linq.Enumerable.FirstOrDefault<T>()\n  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of T)()\n  name.vb: FirstOrDefault(Of T)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1\n    name: FirstOrDefault<T>\n    fullName: System.Linq.Enumerable.FirstOrDefault<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1\n    name: FirstOrDefault(Of T)\n    fullName: System.Linq.Enumerable.FirstOrDefault(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.FirstOrDefault<T>()\n  nameWithType.vb: Enumerable.FirstOrDefault(Of T)()\n  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.FirstOrDefault``1(System.Func{{T},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: FirstOrDefault<T>(Func<T, Boolean>)\n  fullName: System.Linq.Enumerable.FirstOrDefault<T>(System.Func<T, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of T)(System.Func(Of T, System.Boolean))\n  name.vb: FirstOrDefault(Of T)(Func(Of T, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Func{``0,System.Boolean})\n    name: FirstOrDefault<T>\n    fullName: System.Linq.Enumerable.FirstOrDefault<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Func{``0,System.Boolean})\n    name: FirstOrDefault(Of T)\n    fullName: System.Linq.Enumerable.FirstOrDefault(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.FirstOrDefault<T>(Func<T, Boolean>)\n  nameWithType.vb: Enumerable.FirstOrDefault(Of T)(Func(Of T, Boolean))\n  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``2(System.Func{{T},{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: GroupBy<T, TKey>(Func<T, TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<T, TKey>(System.Func<T, TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of T, TKey)(System.Func(Of T, TKey))\n  name.vb: GroupBy(Of T, TKey)(Func(Of T, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1})\n    name: GroupBy<T, TKey>\n    fullName: System.Linq.Enumerable.GroupBy<T, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1})\n    name: GroupBy(Of T, TKey)\n    fullName: System.Linq.Enumerable.GroupBy(Of T, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<T, TKey>(Func<T, TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of T, TKey)(Func(Of T, TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``2(System.Func{{T},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  name: GroupBy<T, TKey>(Func<T, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<T, TKey>(System.Func<T, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of T, TKey)(System.Func(Of T, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of T, TKey)(Func(Of T, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<T, TKey>\n    fullName: System.Linq.Enumerable.GroupBy<T, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of T, TKey)\n    fullName: System.Linq.Enumerable.GroupBy(Of T, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<T, TKey>(Func<T, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of T, TKey)(Func(Of T, TKey), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``3(System.Func{{T},{TKey}},System.Func{{T},{TElement}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  name: GroupBy<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>)\n  fullName: System.Linq.Enumerable.GroupBy<T, TKey, TElement>(System.Func<T, TKey>, System.Func<T, TElement>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of T, TKey, TElement)(System.Func(Of T, TKey), System.Func(Of T, TElement))\n  name.vb: GroupBy(Of T, TKey, TElement)(Func(Of T, TKey), Func(Of T, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: GroupBy<T, TKey, TElement>\n    fullName: System.Linq.Enumerable.GroupBy<T, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: GroupBy(Of T, TKey, TElement)\n    fullName: System.Linq.Enumerable.GroupBy(Of T, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>)\n  nameWithType.vb: Enumerable.GroupBy(Of T, TKey, TElement)(Func(Of T, TKey), Func(Of T, TElement))\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``3(System.Func{{T},{TKey}},System.Func{{T},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  name: GroupBy<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<T, TKey, TElement>(System.Func<T, TKey>, System.Func<T, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of T, TKey, TElement)(System.Func(Of T, TKey), System.Func(Of T, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of T, TKey, TElement)(Func(Of T, TKey), Func(Of T, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<T, TKey, TElement>\n    fullName: System.Linq.Enumerable.GroupBy<T, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of T, TKey, TElement)\n    fullName: System.Linq.Enumerable.GroupBy(Of T, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of T, TKey, TElement)(Func(Of T, TKey), Func(Of T, TElement), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``3(System.Func{{T},{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{T}},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  name: GroupBy<T, TKey, TResult>(Func<T, TKey>, Func<TKey, IEnumerable<T>, TResult>)\n  fullName: System.Linq.Enumerable.GroupBy<T, TKey, TResult>(System.Func<T, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<T>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of T, TKey, TResult)(System.Func(Of T, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of T), TResult))\n  name.vb: GroupBy(Of T, TKey, TResult)(Func(Of T, TKey), Func(Of TKey, IEnumerable(Of T), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n    name: GroupBy<T, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<T, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n    name: GroupBy(Of T, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of T, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<T, TKey, TResult>(Func<T, TKey>, Func<TKey, IEnumerable<T>, TResult>)\n  nameWithType.vb: Enumerable.GroupBy(Of T, TKey, TResult)(Func(Of T, TKey), Func(Of TKey, IEnumerable(Of T), TResult))\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``3(System.Func{{T},{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{T}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  name: GroupBy<T, TKey, TResult>(Func<T, TKey>, Func<TKey, IEnumerable<T>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<T, TKey, TResult>(System.Func<T, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<T>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of T, TKey, TResult)(System.Func(Of T, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of T), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of T, TKey, TResult)(Func(Of T, TKey), Func(Of TKey, IEnumerable(Of T), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<T, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<T, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of T, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of T, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<T, TKey, TResult>(Func<T, TKey>, Func<TKey, IEnumerable<T>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of T, TKey, TResult)(Func(Of T, TKey), Func(Of TKey, IEnumerable(Of T), TResult), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``4(System.Func{{T},{TKey}},System.Func{{T},{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  name: GroupBy<T, TKey, TElement, TResult>(Func<T, TKey>, Func<T, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)\n  fullName: System.Linq.Enumerable.GroupBy<T, TKey, TElement, TResult>(System.Func<T, TKey>, System.Func<T, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of T, TKey, TElement, TResult)(System.Func(Of T, TKey), System.Func(Of T, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult))\n  name.vb: GroupBy(Of T, TKey, TElement, TResult)(Func(Of T, TKey), Func(Of T, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n    name: GroupBy<T, TKey, TElement, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<T, TKey, TElement, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n    name: GroupBy(Of T, TKey, TElement, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of T, TKey, TElement, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<T, TKey, TElement, TResult>(Func<T, TKey>, Func<T, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)\n  nameWithType.vb: Enumerable.GroupBy(Of T, TKey, TElement, TResult)(Func(Of T, TKey), Func(Of T, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))\n  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupBy``4(System.Func{{T},{TKey}},System.Func{{T},{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  name: GroupBy<T, TKey, TElement, TResult>(Func<T, TKey>, Func<T, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<T, TKey, TElement, TResult>(System.Func<T, TKey>, System.Func<T, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of T, TKey, TElement, TResult)(System.Func(Of T, TKey), System.Func(Of T, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of T, TKey, TElement, TResult)(Func(Of T, TKey), Func(Of T, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<T, TKey, TElement, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<T, TKey, TElement, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of T, TKey, TElement, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of T, TKey, TElement, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<T, TKey, TElement, TResult>(Func<T, TKey>, Func<T, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of T, TKey, TElement, TResult)(Func(Of T, TKey), Func(Of T, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{{T},{TKey}},System.Func{{TInner},{TKey}},System.Func{{T},System.Collections.Generic.IEnumerable{{TInner}},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  name: GroupJoin<T, TInner, TKey, TResult>(IEnumerable<TInner>, Func<T, TKey>, Func<TInner, TKey>, Func<T, IEnumerable<TInner>, TResult>)\n  fullName: System.Linq.Enumerable.GroupJoin<T, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<T, TKey>, System.Func<TInner, TKey>, System.Func<T, System.Collections.Generic.IEnumerable<TInner>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupJoin(Of T, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of T, TKey), System.Func(Of TInner, TKey), System.Func(Of T, System.Collections.Generic.IEnumerable(Of TInner), TResult))\n  name.vb: GroupJoin(Of T, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, IEnumerable(Of TInner), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n    name: GroupJoin<T, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupJoin<T, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n    name: GroupJoin(Of T, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupJoin(Of T, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupJoin<T, TInner, TKey, TResult>(IEnumerable<TInner>, Func<T, TKey>, Func<TInner, TKey>, Func<T, IEnumerable<TInner>, TResult>)\n  nameWithType.vb: Enumerable.GroupJoin(Of T, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, IEnumerable(Of TInner), TResult))\n  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{{T},{TKey}},System.Func{{TInner},{TKey}},System.Func{{T},System.Collections.Generic.IEnumerable{{TInner}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  name: GroupJoin<T, TInner, TKey, TResult>(IEnumerable<TInner>, Func<T, TKey>, Func<TInner, TKey>, Func<T, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupJoin<T, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<T, TKey>, System.Func<TInner, TKey>, System.Func<T, System.Collections.Generic.IEnumerable<TInner>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupJoin(Of T, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of T, TKey), System.Func(Of TInner, TKey), System.Func(Of T, System.Collections.Generic.IEnumerable(Of TInner), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupJoin(Of T, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: GroupJoin<T, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupJoin<T, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: GroupJoin(Of T, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupJoin(Of T, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupJoin<T, TInner, TKey, TResult>(IEnumerable<TInner>, Func<T, TKey>, Func<TInner, TKey>, Func<T, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupJoin(Of T, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{{T}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: Intersect<T>(IEnumerable<T>)\n  fullName: System.Linq.Enumerable.Intersect<T>(System.Collections.Generic.IEnumerable<T>)\n  fullname.vb: System.Linq.Enumerable.Intersect(Of T)(System.Collections.Generic.IEnumerable(Of T))\n  name.vb: Intersect(Of T)(IEnumerable(Of T))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0})\n    name: Intersect<T>\n    fullName: System.Linq.Enumerable.Intersect<T>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0})\n    name: Intersect(Of T)\n    fullName: System.Linq.Enumerable.Intersect(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Intersect<T>(IEnumerable<T>)\n  nameWithType.vb: Enumerable.Intersect(Of T)(IEnumerable(Of T))\n  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IEqualityComparer{{T}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: Intersect<T>(IEnumerable<T>, IEqualityComparer<T>)\n  fullName: System.Linq.Enumerable.Intersect<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)\n  fullname.vb: System.Linq.Enumerable.Intersect(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T))\n  name.vb: Intersect(Of T)(IEnumerable(Of T), IEqualityComparer(Of T))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Intersect<T>\n    fullName: System.Linq.Enumerable.Intersect<T>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Intersect(Of T)\n    fullName: System.Linq.Enumerable.Intersect(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Intersect<T>(IEnumerable<T>, IEqualityComparer<T>)\n  nameWithType.vb: Enumerable.Intersect(Of T)(IEnumerable(Of T), IEqualityComparer(Of T))\n  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{{T},{TKey}},System.Func{{TInner},{TKey}},System.Func{{T},{TInner},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  name: Join<T, TInner, TKey, TResult>(IEnumerable<TInner>, Func<T, TKey>, Func<TInner, TKey>, Func<T, TInner, TResult>)\n  fullName: System.Linq.Enumerable.Join<T, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<T, TKey>, System.Func<TInner, TKey>, System.Func<T, TInner, TResult>)\n  fullname.vb: System.Linq.Enumerable.Join(Of T, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of T, TKey), System.Func(Of TInner, TKey), System.Func(Of T, TInner, TResult))\n  name.vb: Join(Of T, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, TInner, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n    name: Join<T, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.Join<T, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n    name: Join(Of T, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.Join(Of T, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Join<T, TInner, TKey, TResult>(IEnumerable<TInner>, Func<T, TKey>, Func<TInner, TKey>, Func<T, TInner, TResult>)\n  nameWithType.vb: Enumerable.Join(Of T, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, TInner, TResult))\n  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{{T},{TKey}},System.Func{{TInner},{TKey}},System.Func{{T},{TInner},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  name: Join<T, TInner, TKey, TResult>(IEnumerable<TInner>, Func<T, TKey>, Func<TInner, TKey>, Func<T, TInner, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.Join<T, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<T, TKey>, System.Func<TInner, TKey>, System.Func<T, TInner, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.Join(Of T, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of T, TKey), System.Func(Of TInner, TKey), System.Func(Of T, TInner, TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: Join(Of T, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, TInner, TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: Join<T, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.Join<T, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: Join(Of T, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.Join(Of T, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Join<T, TInner, TKey, TResult>(IEnumerable<TInner>, Func<T, TKey>, Func<TInner, TKey>, Func<T, TInner, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.Join(Of T, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, TInner, TResult), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Last``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  name: Last<T>()\n  fullName: System.Linq.Enumerable.Last<T>()\n  fullname.vb: System.Linq.Enumerable.Last(Of T)()\n  name.vb: Last(Of T)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Last``1\n    name: Last<T>\n    fullName: System.Linq.Enumerable.Last<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Last``1\n    name: Last(Of T)\n    fullName: System.Linq.Enumerable.Last(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Last<T>()\n  nameWithType.vb: Enumerable.Last(Of T)()\n  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Last``1(System.Func{{T},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Last<T>(Func<T, Boolean>)\n  fullName: System.Linq.Enumerable.Last<T>(System.Func<T, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Last(Of T)(System.Func(Of T, System.Boolean))\n  name.vb: Last(Of T)(Func(Of T, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Last``1(System.Func{``0,System.Boolean})\n    name: Last<T>\n    fullName: System.Linq.Enumerable.Last<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Last``1(System.Func{``0,System.Boolean})\n    name: Last(Of T)\n    fullName: System.Linq.Enumerable.Last(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Last<T>(Func<T, Boolean>)\n  nameWithType.vb: Enumerable.Last(Of T)(Func(Of T, Boolean))\n  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.LastOrDefault``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  name: LastOrDefault<T>()\n  fullName: System.Linq.Enumerable.LastOrDefault<T>()\n  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of T)()\n  name.vb: LastOrDefault(Of T)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LastOrDefault``1\n    name: LastOrDefault<T>\n    fullName: System.Linq.Enumerable.LastOrDefault<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LastOrDefault``1\n    name: LastOrDefault(Of T)\n    fullName: System.Linq.Enumerable.LastOrDefault(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.LastOrDefault<T>()\n  nameWithType.vb: Enumerable.LastOrDefault(Of T)()\n  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.LastOrDefault``1(System.Func{{T},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: LastOrDefault<T>(Func<T, Boolean>)\n  fullName: System.Linq.Enumerable.LastOrDefault<T>(System.Func<T, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of T)(System.Func(Of T, System.Boolean))\n  name.vb: LastOrDefault(Of T)(Func(Of T, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Func{``0,System.Boolean})\n    name: LastOrDefault<T>\n    fullName: System.Linq.Enumerable.LastOrDefault<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Func{``0,System.Boolean})\n    name: LastOrDefault(Of T)\n    fullName: System.Linq.Enumerable.LastOrDefault(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.LastOrDefault<T>(Func<T, Boolean>)\n  nameWithType.vb: Enumerable.LastOrDefault(Of T)(Func(Of T, Boolean))\n  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.LongCount``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  name: LongCount<T>()\n  fullName: System.Linq.Enumerable.LongCount<T>()\n  fullname.vb: System.Linq.Enumerable.LongCount(Of T)()\n  name.vb: LongCount(Of T)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LongCount``1\n    name: LongCount<T>\n    fullName: System.Linq.Enumerable.LongCount<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LongCount``1\n    name: LongCount(Of T)\n    fullName: System.Linq.Enumerable.LongCount(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.LongCount<T>()\n  nameWithType.vb: Enumerable.LongCount(Of T)()\n  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.LongCount``1(System.Func{{T},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: LongCount<T>(Func<T, Boolean>)\n  fullName: System.Linq.Enumerable.LongCount<T>(System.Func<T, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.LongCount(Of T)(System.Func(Of T, System.Boolean))\n  name.vb: LongCount(Of T)(Func(Of T, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Func{``0,System.Boolean})\n    name: LongCount<T>\n    fullName: System.Linq.Enumerable.LongCount<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Func{``0,System.Boolean})\n    name: LongCount(Of T)\n    fullName: System.Linq.Enumerable.LongCount(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.LongCount<T>(Func<T, Boolean>)\n  nameWithType.vb: Enumerable.LongCount(Of T)(Func(Of T, Boolean))\n  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  name: Max<T>()\n  fullName: System.Linq.Enumerable.Max<T>()\n  fullname.vb: System.Linq.Enumerable.Max(Of T)()\n  name.vb: Max(Of T)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1\n    name: Max<T>\n    fullName: System.Linq.Enumerable.Max<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1\n    name: Max(Of T)\n    fullName: System.Linq.Enumerable.Max(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<T>()\n  nameWithType.vb: Enumerable.Max(Of T)()\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Decimal})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  name: Max<T>(Func<T, Decimal>)\n  fullName: System.Linq.Enumerable.Max<T>(System.Func<T, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Max(Of T)(System.Func(Of T, System.Decimal))\n  name.vb: Max(Of T)(Func(Of T, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Decimal})\n    name: Max<T>\n    fullName: System.Linq.Enumerable.Max<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Decimal})\n    name: Max(Of T)\n    fullName: System.Linq.Enumerable.Max(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<T>(Func<T, Decimal>)\n  nameWithType.vb: Enumerable.Max(Of T)(Func(Of T, Decimal))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Double})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  name: Max<T>(Func<T, Double>)\n  fullName: System.Linq.Enumerable.Max<T>(System.Func<T, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Max(Of T)(System.Func(Of T, System.Double))\n  name.vb: Max(Of T)(Func(Of T, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Double})\n    name: Max<T>\n    fullName: System.Linq.Enumerable.Max<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Double})\n    name: Max(Of T)\n    fullName: System.Linq.Enumerable.Max(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<T>(Func<T, Double>)\n  nameWithType.vb: Enumerable.Max(Of T)(Func(Of T, Double))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Int32})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  name: Max<T>(Func<T, Int32>)\n  fullName: System.Linq.Enumerable.Max<T>(System.Func<T, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Max(Of T)(System.Func(Of T, System.Int32))\n  name.vb: Max(Of T)(Func(Of T, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int32})\n    name: Max<T>\n    fullName: System.Linq.Enumerable.Max<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int32})\n    name: Max(Of T)\n    fullName: System.Linq.Enumerable.Max(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<T>(Func<T, Int32>)\n  nameWithType.vb: Enumerable.Max(Of T)(Func(Of T, Int32))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Int64})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  name: Max<T>(Func<T, Int64>)\n  fullName: System.Linq.Enumerable.Max<T>(System.Func<T, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Max(Of T)(System.Func(Of T, System.Int64))\n  name.vb: Max(Of T)(Func(Of T, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int64})\n    name: Max<T>\n    fullName: System.Linq.Enumerable.Max<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int64})\n    name: Max(Of T)\n    fullName: System.Linq.Enumerable.Max(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<T>(Func<T, Int64>)\n  nameWithType.vb: Enumerable.Max(Of T)(Func(Of T, Int64))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  name: Max<T>(Func<T, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Max<T>(System.Func<T, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of T)(System.Func(Of T, System.Nullable(Of System.Decimal)))\n  name.vb: Max(Of T)(Func(Of T, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Max<T>\n    fullName: System.Linq.Enumerable.Max<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Max(Of T)\n    fullName: System.Linq.Enumerable.Max(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<T>(Func<T, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Max(Of T)(Func(Of T, Nullable(Of Decimal)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  name: Max<T>(Func<T, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Max<T>(System.Func<T, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of T)(System.Func(Of T, System.Nullable(Of System.Double)))\n  name.vb: Max(Of T)(Func(Of T, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Max<T>\n    fullName: System.Linq.Enumerable.Max<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Max(Of T)\n    fullName: System.Linq.Enumerable.Max(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<T>(Func<T, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Max(Of T)(Func(Of T, Nullable(Of Double)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  name: Max<T>(Func<T, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Max<T>(System.Func<T, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of T)(System.Func(Of T, System.Nullable(Of System.Int32)))\n  name.vb: Max(Of T)(Func(Of T, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Max<T>\n    fullName: System.Linq.Enumerable.Max<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Max(Of T)\n    fullName: System.Linq.Enumerable.Max(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<T>(Func<T, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Max(Of T)(Func(Of T, Nullable(Of Int32)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  name: Max<T>(Func<T, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Max<T>(System.Func<T, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of T)(System.Func(Of T, System.Nullable(Of System.Int64)))\n  name.vb: Max(Of T)(Func(Of T, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Max<T>\n    fullName: System.Linq.Enumerable.Max<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Max(Of T)\n    fullName: System.Linq.Enumerable.Max(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<T>(Func<T, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Max(Of T)(Func(Of T, Nullable(Of Int64)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  name: Max<T>(Func<T, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Max<T>(System.Func<T, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of T)(System.Func(Of T, System.Nullable(Of System.Single)))\n  name.vb: Max(Of T)(Func(Of T, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Max<T>\n    fullName: System.Linq.Enumerable.Max<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Max(Of T)\n    fullName: System.Linq.Enumerable.Max(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<T>(Func<T, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Max(Of T)(Func(Of T, Nullable(Of Single)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``1(System.Func{{T},System.Single})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  name: Max<T>(Func<T, Single>)\n  fullName: System.Linq.Enumerable.Max<T>(System.Func<T, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Max(Of T)(System.Func(Of T, System.Single))\n  name.vb: Max(Of T)(Func(Of T, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Single})\n    name: Max<T>\n    fullName: System.Linq.Enumerable.Max<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Single})\n    name: Max(Of T)\n    fullName: System.Linq.Enumerable.Max(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<T>(Func<T, Single>)\n  nameWithType.vb: Enumerable.Max(Of T)(Func(Of T, Single))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Max``2(System.Func{{T},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: Max<T, TResult>(Func<T, TResult>)\n  fullName: System.Linq.Enumerable.Max<T, TResult>(System.Func<T, TResult>)\n  fullname.vb: System.Linq.Enumerable.Max(Of T, TResult)(System.Func(Of T, TResult))\n  name.vb: Max(Of T, TResult)(Func(Of T, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``2(System.Func{``0,``1})\n    name: Max<T, TResult>\n    fullName: System.Linq.Enumerable.Max<T, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``2(System.Func{``0,``1})\n    name: Max(Of T, TResult)\n    fullName: System.Linq.Enumerable.Max(Of T, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<T, TResult>(Func<T, TResult>)\n  nameWithType.vb: Enumerable.Max(Of T, TResult)(Func(Of T, TResult))\n  commentId: M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  name: Min<T>()\n  fullName: System.Linq.Enumerable.Min<T>()\n  fullname.vb: System.Linq.Enumerable.Min(Of T)()\n  name.vb: Min(Of T)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1\n    name: Min<T>\n    fullName: System.Linq.Enumerable.Min<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1\n    name: Min(Of T)\n    fullName: System.Linq.Enumerable.Min(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<T>()\n  nameWithType.vb: Enumerable.Min(Of T)()\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Decimal})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  name: Min<T>(Func<T, Decimal>)\n  fullName: System.Linq.Enumerable.Min<T>(System.Func<T, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Min(Of T)(System.Func(Of T, System.Decimal))\n  name.vb: Min(Of T)(Func(Of T, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Decimal})\n    name: Min<T>\n    fullName: System.Linq.Enumerable.Min<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Decimal})\n    name: Min(Of T)\n    fullName: System.Linq.Enumerable.Min(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<T>(Func<T, Decimal>)\n  nameWithType.vb: Enumerable.Min(Of T)(Func(Of T, Decimal))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Double})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  name: Min<T>(Func<T, Double>)\n  fullName: System.Linq.Enumerable.Min<T>(System.Func<T, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Min(Of T)(System.Func(Of T, System.Double))\n  name.vb: Min(Of T)(Func(Of T, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Double})\n    name: Min<T>\n    fullName: System.Linq.Enumerable.Min<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Double})\n    name: Min(Of T)\n    fullName: System.Linq.Enumerable.Min(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<T>(Func<T, Double>)\n  nameWithType.vb: Enumerable.Min(Of T)(Func(Of T, Double))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Int32})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  name: Min<T>(Func<T, Int32>)\n  fullName: System.Linq.Enumerable.Min<T>(System.Func<T, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Min(Of T)(System.Func(Of T, System.Int32))\n  name.vb: Min(Of T)(Func(Of T, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int32})\n    name: Min<T>\n    fullName: System.Linq.Enumerable.Min<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int32})\n    name: Min(Of T)\n    fullName: System.Linq.Enumerable.Min(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<T>(Func<T, Int32>)\n  nameWithType.vb: Enumerable.Min(Of T)(Func(Of T, Int32))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Int64})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  name: Min<T>(Func<T, Int64>)\n  fullName: System.Linq.Enumerable.Min<T>(System.Func<T, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Min(Of T)(System.Func(Of T, System.Int64))\n  name.vb: Min(Of T)(Func(Of T, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int64})\n    name: Min<T>\n    fullName: System.Linq.Enumerable.Min<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int64})\n    name: Min(Of T)\n    fullName: System.Linq.Enumerable.Min(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<T>(Func<T, Int64>)\n  nameWithType.vb: Enumerable.Min(Of T)(Func(Of T, Int64))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  name: Min<T>(Func<T, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Min<T>(System.Func<T, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of T)(System.Func(Of T, System.Nullable(Of System.Decimal)))\n  name.vb: Min(Of T)(Func(Of T, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Min<T>\n    fullName: System.Linq.Enumerable.Min<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Min(Of T)\n    fullName: System.Linq.Enumerable.Min(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<T>(Func<T, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Min(Of T)(Func(Of T, Nullable(Of Decimal)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  name: Min<T>(Func<T, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Min<T>(System.Func<T, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of T)(System.Func(Of T, System.Nullable(Of System.Double)))\n  name.vb: Min(Of T)(Func(Of T, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Min<T>\n    fullName: System.Linq.Enumerable.Min<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Min(Of T)\n    fullName: System.Linq.Enumerable.Min(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<T>(Func<T, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Min(Of T)(Func(Of T, Nullable(Of Double)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  name: Min<T>(Func<T, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Min<T>(System.Func<T, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of T)(System.Func(Of T, System.Nullable(Of System.Int32)))\n  name.vb: Min(Of T)(Func(Of T, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Min<T>\n    fullName: System.Linq.Enumerable.Min<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Min(Of T)\n    fullName: System.Linq.Enumerable.Min(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<T>(Func<T, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Min(Of T)(Func(Of T, Nullable(Of Int32)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  name: Min<T>(Func<T, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Min<T>(System.Func<T, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of T)(System.Func(Of T, System.Nullable(Of System.Int64)))\n  name.vb: Min(Of T)(Func(Of T, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Min<T>\n    fullName: System.Linq.Enumerable.Min<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Min(Of T)\n    fullName: System.Linq.Enumerable.Min(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<T>(Func<T, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Min(Of T)(Func(Of T, Nullable(Of Int64)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  name: Min<T>(Func<T, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Min<T>(System.Func<T, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of T)(System.Func(Of T, System.Nullable(Of System.Single)))\n  name.vb: Min(Of T)(Func(Of T, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Min<T>\n    fullName: System.Linq.Enumerable.Min<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Min(Of T)\n    fullName: System.Linq.Enumerable.Min(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<T>(Func<T, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Min(Of T)(Func(Of T, Nullable(Of Single)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``1(System.Func{{T},System.Single})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  name: Min<T>(Func<T, Single>)\n  fullName: System.Linq.Enumerable.Min<T>(System.Func<T, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Min(Of T)(System.Func(Of T, System.Single))\n  name.vb: Min(Of T)(Func(Of T, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Single})\n    name: Min<T>\n    fullName: System.Linq.Enumerable.Min<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Single})\n    name: Min(Of T)\n    fullName: System.Linq.Enumerable.Min(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<T>(Func<T, Single>)\n  nameWithType.vb: Enumerable.Min(Of T)(Func(Of T, Single))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Min``2(System.Func{{T},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: Min<T, TResult>(Func<T, TResult>)\n  fullName: System.Linq.Enumerable.Min<T, TResult>(System.Func<T, TResult>)\n  fullname.vb: System.Linq.Enumerable.Min(Of T, TResult)(System.Func(Of T, TResult))\n  name.vb: Min(Of T, TResult)(Func(Of T, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``2(System.Func{``0,``1})\n    name: Min<T, TResult>\n    fullName: System.Linq.Enumerable.Min<T, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``2(System.Func{``0,``1})\n    name: Min(Of T, TResult)\n    fullName: System.Linq.Enumerable.Min(Of T, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<T, TResult>(Func<T, TResult>)\n  nameWithType.vb: Enumerable.Min(Of T, TResult)(Func(Of T, TResult))\n  commentId: M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  name: OfType<TResult>()\n  fullName: System.Linq.Enumerable.OfType<TResult>()\n  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)()\n  name.vb: OfType(Of TResult)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OfType``1\n    name: OfType<TResult>\n    fullName: System.Linq.Enumerable.OfType<TResult>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OfType``1\n    name: OfType(Of TResult)\n    fullName: System.Linq.Enumerable.OfType(Of TResult)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OfType<TResult>()\n  nameWithType.vb: Enumerable.OfType(Of TResult)()\n  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.OrderBy``2(System.Func{{T},{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: OrderBy<T, TKey>(Func<T, TKey>)\n  fullName: System.Linq.Enumerable.OrderBy<T, TKey>(System.Func<T, TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderBy(Of T, TKey)(System.Func(Of T, TKey))\n  name.vb: OrderBy(Of T, TKey)(Func(Of T, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1})\n    name: OrderBy<T, TKey>\n    fullName: System.Linq.Enumerable.OrderBy<T, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1})\n    name: OrderBy(Of T, TKey)\n    fullName: System.Linq.Enumerable.OrderBy(Of T, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OrderBy<T, TKey>(Func<T, TKey>)\n  nameWithType.vb: Enumerable.OrderBy(Of T, TKey)(Func(Of T, TKey))\n  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.OrderBy``2(System.Func{{T},{TKey}},System.Collections.Generic.IComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  name: OrderBy<T, TKey>(Func<T, TKey>, IComparer<TKey>)\n  fullName: System.Linq.Enumerable.OrderBy<T, TKey>(System.Func<T, TKey>, System.Collections.Generic.IComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderBy(Of T, TKey)(System.Func(Of T, TKey), System.Collections.Generic.IComparer(Of TKey))\n  name.vb: OrderBy(Of T, TKey)(Func(Of T, TKey), IComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderBy<T, TKey>\n    fullName: System.Linq.Enumerable.OrderBy<T, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderBy(Of T, TKey)\n    fullName: System.Linq.Enumerable.OrderBy(Of T, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OrderBy<T, TKey>(Func<T, TKey>, IComparer<TKey>)\n  nameWithType.vb: Enumerable.OrderBy(Of T, TKey)(Func(Of T, TKey), IComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.OrderByDescending``2(System.Func{{T},{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: OrderByDescending<T, TKey>(Func<T, TKey>)\n  fullName: System.Linq.Enumerable.OrderByDescending<T, TKey>(System.Func<T, TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of T, TKey)(System.Func(Of T, TKey))\n  name.vb: OrderByDescending(Of T, TKey)(Func(Of T, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1})\n    name: OrderByDescending<T, TKey>\n    fullName: System.Linq.Enumerable.OrderByDescending<T, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1})\n    name: OrderByDescending(Of T, TKey)\n    fullName: System.Linq.Enumerable.OrderByDescending(Of T, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OrderByDescending<T, TKey>(Func<T, TKey>)\n  nameWithType.vb: Enumerable.OrderByDescending(Of T, TKey)(Func(Of T, TKey))\n  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.OrderByDescending``2(System.Func{{T},{TKey}},System.Collections.Generic.IComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  name: OrderByDescending<T, TKey>(Func<T, TKey>, IComparer<TKey>)\n  fullName: System.Linq.Enumerable.OrderByDescending<T, TKey>(System.Func<T, TKey>, System.Collections.Generic.IComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of T, TKey)(System.Func(Of T, TKey), System.Collections.Generic.IComparer(Of TKey))\n  name.vb: OrderByDescending(Of T, TKey)(Func(Of T, TKey), IComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderByDescending<T, TKey>\n    fullName: System.Linq.Enumerable.OrderByDescending<T, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderByDescending(Of T, TKey)\n    fullName: System.Linq.Enumerable.OrderByDescending(Of T, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OrderByDescending<T, TKey>(Func<T, TKey>, IComparer<TKey>)\n  nameWithType.vb: Enumerable.OrderByDescending(Of T, TKey)(Func(Of T, TKey), IComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Reverse``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  name: Reverse<T>()\n  fullName: System.Linq.Enumerable.Reverse<T>()\n  fullname.vb: System.Linq.Enumerable.Reverse(Of T)()\n  name.vb: Reverse(Of T)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Reverse``1\n    name: Reverse<T>\n    fullName: System.Linq.Enumerable.Reverse<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Reverse``1\n    name: Reverse(Of T)\n    fullName: System.Linq.Enumerable.Reverse(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Reverse<T>()\n  nameWithType.vb: Enumerable.Reverse(Of T)()\n  commentId: M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Select``2(System.Func{{T},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: Select<T, TResult>(Func<T, TResult>)\n  fullName: System.Linq.Enumerable.Select<T, TResult>(System.Func<T, TResult>)\n  fullname.vb: System.Linq.Enumerable.Select(Of T, TResult)(System.Func(Of T, TResult))\n  name.vb: Select(Of T, TResult)(Func(Of T, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,``1})\n    name: Select<T, TResult>\n    fullName: System.Linq.Enumerable.Select<T, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,``1})\n    name: Select(Of T, TResult)\n    fullName: System.Linq.Enumerable.Select(Of T, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Select<T, TResult>(Func<T, TResult>)\n  nameWithType.vb: Enumerable.Select(Of T, TResult)(Func(Of T, TResult))\n  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Select``2(System.Func{{T},System.Int32,{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  name: Select<T, TResult>(Func<T, Int32, TResult>)\n  fullName: System.Linq.Enumerable.Select<T, TResult>(System.Func<T, System.Int32, TResult>)\n  fullname.vb: System.Linq.Enumerable.Select(Of T, TResult)(System.Func(Of T, System.Int32, TResult))\n  name.vb: Select(Of T, TResult)(Func(Of T, Int32, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,System.Int32,``1})\n    name: Select<T, TResult>\n    fullName: System.Linq.Enumerable.Select<T, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,System.Int32,``1})\n    name: Select(Of T, TResult)\n    fullName: System.Linq.Enumerable.Select(Of T, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Select<T, TResult>(Func<T, Int32, TResult>)\n  nameWithType.vb: Enumerable.Select(Of T, TResult)(Func(Of T, Int32, TResult))\n  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SelectMany``2(System.Func{{T},System.Collections.Generic.IEnumerable{{TResult}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  name: SelectMany<T, TResult>(Func<T, IEnumerable<TResult>>)\n  fullName: System.Linq.Enumerable.SelectMany<T, TResult>(System.Func<T, System.Collections.Generic.IEnumerable<TResult>>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of T, TResult)(System.Func(Of T, System.Collections.Generic.IEnumerable(Of TResult)))\n  name.vb: SelectMany(Of T, TResult)(Func(Of T, IEnumerable(Of TResult)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany<T, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<T, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany(Of T, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of T, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SelectMany<T, TResult>(Func<T, IEnumerable<TResult>>)\n  nameWithType.vb: Enumerable.SelectMany(Of T, TResult)(Func(Of T, IEnumerable(Of TResult)))\n  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SelectMany``2(System.Func{{T},System.Int32,System.Collections.Generic.IEnumerable{{TResult}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  name: SelectMany<T, TResult>(Func<T, Int32, IEnumerable<TResult>>)\n  fullName: System.Linq.Enumerable.SelectMany<T, TResult>(System.Func<T, System.Int32, System.Collections.Generic.IEnumerable<TResult>>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of T, TResult)(System.Func(Of T, System.Int32, System.Collections.Generic.IEnumerable(Of TResult)))\n  name.vb: SelectMany(Of T, TResult)(Func(Of T, Int32, IEnumerable(Of TResult)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany<T, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<T, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany(Of T, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of T, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SelectMany<T, TResult>(Func<T, Int32, IEnumerable<TResult>>)\n  nameWithType.vb: Enumerable.SelectMany(Of T, TResult)(Func(Of T, Int32, IEnumerable(Of TResult)))\n  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SelectMany``3(System.Func{{T},System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{{T},{TCollection},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  name: SelectMany<T, TCollection, TResult>(Func<T, IEnumerable<TCollection>>, Func<T, TCollection, TResult>)\n  fullName: System.Linq.Enumerable.SelectMany<T, TCollection, TResult>(System.Func<T, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<T, TCollection, TResult>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of T, TCollection, TResult)(System.Func(Of T, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of T, TCollection, TResult))\n  name.vb: SelectMany(Of T, TCollection, TResult)(Func(Of T, IEnumerable(Of TCollection)), Func(Of T, TCollection, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany<T, TCollection, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<T, TCollection, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TCollection\n    fullName: TCollection\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany(Of T, TCollection, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of T, TCollection, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TCollection\n    fullName: TCollection\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SelectMany<T, TCollection, TResult>(Func<T, IEnumerable<TCollection>>, Func<T, TCollection, TResult>)\n  nameWithType.vb: Enumerable.SelectMany(Of T, TCollection, TResult)(Func(Of T, IEnumerable(Of TCollection)), Func(Of T, TCollection, TResult))\n  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SelectMany``3(System.Func{{T},System.Int32,System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{{T},{TCollection},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  name: SelectMany<T, TCollection, TResult>(Func<T, Int32, IEnumerable<TCollection>>, Func<T, TCollection, TResult>)\n  fullName: System.Linq.Enumerable.SelectMany<T, TCollection, TResult>(System.Func<T, System.Int32, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<T, TCollection, TResult>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of T, TCollection, TResult)(System.Func(Of T, System.Int32, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of T, TCollection, TResult))\n  name.vb: SelectMany(Of T, TCollection, TResult)(Func(Of T, Int32, IEnumerable(Of TCollection)), Func(Of T, TCollection, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany<T, TCollection, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<T, TCollection, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TCollection\n    fullName: TCollection\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany(Of T, TCollection, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of T, TCollection, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TCollection\n    fullName: TCollection\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SelectMany<T, TCollection, TResult>(Func<T, Int32, IEnumerable<TCollection>>, Func<T, TCollection, TResult>)\n  nameWithType.vb: Enumerable.SelectMany(Of T, TCollection, TResult)(Func(Of T, Int32, IEnumerable(Of TCollection)), Func(Of T, TCollection, TResult))\n  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{{T}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: SequenceEqual<T>(IEnumerable<T>)\n  fullName: System.Linq.Enumerable.SequenceEqual<T>(System.Collections.Generic.IEnumerable<T>)\n  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of T)(System.Collections.Generic.IEnumerable(Of T))\n  name.vb: SequenceEqual(Of T)(IEnumerable(Of T))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0})\n    name: SequenceEqual<T>\n    fullName: System.Linq.Enumerable.SequenceEqual<T>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0})\n    name: SequenceEqual(Of T)\n    fullName: System.Linq.Enumerable.SequenceEqual(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SequenceEqual<T>(IEnumerable<T>)\n  nameWithType.vb: Enumerable.SequenceEqual(Of T)(IEnumerable(Of T))\n  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IEqualityComparer{{T}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: SequenceEqual<T>(IEnumerable<T>, IEqualityComparer<T>)\n  fullName: System.Linq.Enumerable.SequenceEqual<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)\n  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T))\n  name.vb: SequenceEqual(Of T)(IEnumerable(Of T), IEqualityComparer(Of T))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: SequenceEqual<T>\n    fullName: System.Linq.Enumerable.SequenceEqual<T>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: SequenceEqual(Of T)\n    fullName: System.Linq.Enumerable.SequenceEqual(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SequenceEqual<T>(IEnumerable<T>, IEqualityComparer<T>)\n  nameWithType.vb: Enumerable.SequenceEqual(Of T)(IEnumerable(Of T), IEqualityComparer(Of T))\n  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Single``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  name: Single<T>()\n  fullName: System.Linq.Enumerable.Single<T>()\n  fullname.vb: System.Linq.Enumerable.Single(Of T)()\n  name.vb: Single(Of T)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Single``1\n    name: Single<T>\n    fullName: System.Linq.Enumerable.Single<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Single``1\n    name: Single(Of T)\n    fullName: System.Linq.Enumerable.Single(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Single<T>()\n  nameWithType.vb: Enumerable.Single(Of T)()\n  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Single``1(System.Func{{T},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Single<T>(Func<T, Boolean>)\n  fullName: System.Linq.Enumerable.Single<T>(System.Func<T, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Single(Of T)(System.Func(Of T, System.Boolean))\n  name.vb: Single(Of T)(Func(Of T, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Single``1(System.Func{``0,System.Boolean})\n    name: Single<T>\n    fullName: System.Linq.Enumerable.Single<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Single``1(System.Func{``0,System.Boolean})\n    name: Single(Of T)\n    fullName: System.Linq.Enumerable.Single(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Single<T>(Func<T, Boolean>)\n  nameWithType.vb: Enumerable.Single(Of T)(Func(Of T, Boolean))\n  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SingleOrDefault``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  name: SingleOrDefault<T>()\n  fullName: System.Linq.Enumerable.SingleOrDefault<T>()\n  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of T)()\n  name.vb: SingleOrDefault(Of T)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1\n    name: SingleOrDefault<T>\n    fullName: System.Linq.Enumerable.SingleOrDefault<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1\n    name: SingleOrDefault(Of T)\n    fullName: System.Linq.Enumerable.SingleOrDefault(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SingleOrDefault<T>()\n  nameWithType.vb: Enumerable.SingleOrDefault(Of T)()\n  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SingleOrDefault``1(System.Func{{T},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: SingleOrDefault<T>(Func<T, Boolean>)\n  fullName: System.Linq.Enumerable.SingleOrDefault<T>(System.Func<T, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of T)(System.Func(Of T, System.Boolean))\n  name.vb: SingleOrDefault(Of T)(Func(Of T, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Func{``0,System.Boolean})\n    name: SingleOrDefault<T>\n    fullName: System.Linq.Enumerable.SingleOrDefault<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Func{``0,System.Boolean})\n    name: SingleOrDefault(Of T)\n    fullName: System.Linq.Enumerable.SingleOrDefault(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SingleOrDefault<T>(Func<T, Boolean>)\n  nameWithType.vb: Enumerable.SingleOrDefault(Of T)(Func(Of T, Boolean))\n  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Skip``1(System.Int32)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  name: Skip<T>(Int32)\n  fullName: System.Linq.Enumerable.Skip<T>(System.Int32)\n  fullname.vb: System.Linq.Enumerable.Skip(Of T)(System.Int32)\n  name.vb: Skip(Of T)(Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Skip``1(System.Int32)\n    name: Skip<T>\n    fullName: System.Linq.Enumerable.Skip<T>\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Skip``1(System.Int32)\n    name: Skip(Of T)\n    fullName: System.Linq.Enumerable.Skip(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Skip<T>(Int32)\n  nameWithType.vb: Enumerable.Skip(Of T)(Int32)\n  commentId: M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SkipWhile``1(System.Func{{T},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: SkipWhile<T>(Func<T, Boolean>)\n  fullName: System.Linq.Enumerable.SkipWhile<T>(System.Func<T, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SkipWhile(Of T)(System.Func(Of T, System.Boolean))\n  name.vb: SkipWhile(Of T)(Func(Of T, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Boolean})\n    name: SkipWhile<T>\n    fullName: System.Linq.Enumerable.SkipWhile<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Boolean})\n    name: SkipWhile(Of T)\n    fullName: System.Linq.Enumerable.SkipWhile(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SkipWhile<T>(Func<T, Boolean>)\n  nameWithType.vb: Enumerable.SkipWhile(Of T)(Func(Of T, Boolean))\n  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.SkipWhile``1(System.Func{{T},System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  name: SkipWhile<T>(Func<T, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.SkipWhile<T>(System.Func<T, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SkipWhile(Of T)(System.Func(Of T, System.Int32, System.Boolean))\n  name.vb: SkipWhile(Of T)(Func(Of T, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Int32,System.Boolean})\n    name: SkipWhile<T>\n    fullName: System.Linq.Enumerable.SkipWhile<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Int32,System.Boolean})\n    name: SkipWhile(Of T)\n    fullName: System.Linq.Enumerable.SkipWhile(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SkipWhile<T>(Func<T, Int32, Boolean>)\n  nameWithType.vb: Enumerable.SkipWhile(Of T)(Func(Of T, Int32, Boolean))\n  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Decimal})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  name: Sum<T>(Func<T, Decimal>)\n  fullName: System.Linq.Enumerable.Sum<T>(System.Func<T, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of T)(System.Func(Of T, System.Decimal))\n  name.vb: Sum(Of T)(Func(Of T, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Decimal})\n    name: Sum<T>\n    fullName: System.Linq.Enumerable.Sum<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Decimal})\n    name: Sum(Of T)\n    fullName: System.Linq.Enumerable.Sum(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<T>(Func<T, Decimal>)\n  nameWithType.vb: Enumerable.Sum(Of T)(Func(Of T, Decimal))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Double})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  name: Sum<T>(Func<T, Double>)\n  fullName: System.Linq.Enumerable.Sum<T>(System.Func<T, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of T)(System.Func(Of T, System.Double))\n  name.vb: Sum(Of T)(Func(Of T, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Double})\n    name: Sum<T>\n    fullName: System.Linq.Enumerable.Sum<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Double})\n    name: Sum(Of T)\n    fullName: System.Linq.Enumerable.Sum(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<T>(Func<T, Double>)\n  nameWithType.vb: Enumerable.Sum(Of T)(Func(Of T, Double))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Int32})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  name: Sum<T>(Func<T, Int32>)\n  fullName: System.Linq.Enumerable.Sum<T>(System.Func<T, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of T)(System.Func(Of T, System.Int32))\n  name.vb: Sum(Of T)(Func(Of T, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int32})\n    name: Sum<T>\n    fullName: System.Linq.Enumerable.Sum<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int32})\n    name: Sum(Of T)\n    fullName: System.Linq.Enumerable.Sum(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<T>(Func<T, Int32>)\n  nameWithType.vb: Enumerable.Sum(Of T)(Func(Of T, Int32))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Int64})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  name: Sum<T>(Func<T, Int64>)\n  fullName: System.Linq.Enumerable.Sum<T>(System.Func<T, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of T)(System.Func(Of T, System.Int64))\n  name.vb: Sum(Of T)(Func(Of T, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int64})\n    name: Sum<T>\n    fullName: System.Linq.Enumerable.Sum<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int64})\n    name: Sum(Of T)\n    fullName: System.Linq.Enumerable.Sum(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<T>(Func<T, Int64>)\n  nameWithType.vb: Enumerable.Sum(Of T)(Func(Of T, Int64))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  name: Sum<T>(Func<T, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Sum<T>(System.Func<T, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of T)(System.Func(Of T, System.Nullable(Of System.Decimal)))\n  name.vb: Sum(Of T)(Func(Of T, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Sum<T>\n    fullName: System.Linq.Enumerable.Sum<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Sum(Of T)\n    fullName: System.Linq.Enumerable.Sum(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<T>(Func<T, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Sum(Of T)(Func(Of T, Nullable(Of Decimal)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  name: Sum<T>(Func<T, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Sum<T>(System.Func<T, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of T)(System.Func(Of T, System.Nullable(Of System.Double)))\n  name.vb: Sum(Of T)(Func(Of T, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Sum<T>\n    fullName: System.Linq.Enumerable.Sum<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Sum(Of T)\n    fullName: System.Linq.Enumerable.Sum(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<T>(Func<T, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Sum(Of T)(Func(Of T, Nullable(Of Double)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  name: Sum<T>(Func<T, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Sum<T>(System.Func<T, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of T)(System.Func(Of T, System.Nullable(Of System.Int32)))\n  name.vb: Sum(Of T)(Func(Of T, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Sum<T>\n    fullName: System.Linq.Enumerable.Sum<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Sum(Of T)\n    fullName: System.Linq.Enumerable.Sum(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<T>(Func<T, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Sum(Of T)(Func(Of T, Nullable(Of Int32)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  name: Sum<T>(Func<T, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Sum<T>(System.Func<T, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of T)(System.Func(Of T, System.Nullable(Of System.Int64)))\n  name.vb: Sum(Of T)(Func(Of T, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Sum<T>\n    fullName: System.Linq.Enumerable.Sum<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Sum(Of T)\n    fullName: System.Linq.Enumerable.Sum(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<T>(Func<T, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Sum(Of T)(Func(Of T, Nullable(Of Int64)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  name: Sum<T>(Func<T, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Sum<T>(System.Func<T, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of T)(System.Func(Of T, System.Nullable(Of System.Single)))\n  name.vb: Sum(Of T)(Func(Of T, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Sum<T>\n    fullName: System.Linq.Enumerable.Sum<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Sum(Of T)\n    fullName: System.Linq.Enumerable.Sum(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<T>(Func<T, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Sum(Of T)(Func(Of T, Nullable(Of Single)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Sum``1(System.Func{{T},System.Single})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  name: Sum<T>(Func<T, Single>)\n  fullName: System.Linq.Enumerable.Sum<T>(System.Func<T, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of T)(System.Func(Of T, System.Single))\n  name.vb: Sum(Of T)(Func(Of T, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Single})\n    name: Sum<T>\n    fullName: System.Linq.Enumerable.Sum<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Single})\n    name: Sum(Of T)\n    fullName: System.Linq.Enumerable.Sum(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<T>(Func<T, Single>)\n  nameWithType.vb: Enumerable.Sum(Of T)(Func(Of T, Single))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Take``1(System.Int32)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  name: Take<T>(Int32)\n  fullName: System.Linq.Enumerable.Take<T>(System.Int32)\n  fullname.vb: System.Linq.Enumerable.Take(Of T)(System.Int32)\n  name.vb: Take(Of T)(Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Take``1(System.Int32)\n    name: Take<T>\n    fullName: System.Linq.Enumerable.Take<T>\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Take``1(System.Int32)\n    name: Take(Of T)\n    fullName: System.Linq.Enumerable.Take(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Take<T>(Int32)\n  nameWithType.vb: Enumerable.Take(Of T)(Int32)\n  commentId: M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.TakeWhile``1(System.Func{{T},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: TakeWhile<T>(Func<T, Boolean>)\n  fullName: System.Linq.Enumerable.TakeWhile<T>(System.Func<T, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.TakeWhile(Of T)(System.Func(Of T, System.Boolean))\n  name.vb: TakeWhile(Of T)(Func(Of T, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Boolean})\n    name: TakeWhile<T>\n    fullName: System.Linq.Enumerable.TakeWhile<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Boolean})\n    name: TakeWhile(Of T)\n    fullName: System.Linq.Enumerable.TakeWhile(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.TakeWhile<T>(Func<T, Boolean>)\n  nameWithType.vb: Enumerable.TakeWhile(Of T)(Func(Of T, Boolean))\n  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.TakeWhile``1(System.Func{{T},System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  name: TakeWhile<T>(Func<T, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.TakeWhile<T>(System.Func<T, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.TakeWhile(Of T)(System.Func(Of T, System.Int32, System.Boolean))\n  name.vb: TakeWhile(Of T)(Func(Of T, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Int32,System.Boolean})\n    name: TakeWhile<T>\n    fullName: System.Linq.Enumerable.TakeWhile<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Int32,System.Boolean})\n    name: TakeWhile(Of T)\n    fullName: System.Linq.Enumerable.TakeWhile(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.TakeWhile<T>(Func<T, Int32, Boolean>)\n  nameWithType.vb: Enumerable.TakeWhile(Of T)(Func(Of T, Int32, Boolean))\n  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToArray``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  name: ToArray<T>()\n  fullName: System.Linq.Enumerable.ToArray<T>()\n  fullname.vb: System.Linq.Enumerable.ToArray(Of T)()\n  name.vb: ToArray(Of T)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToArray``1\n    name: ToArray<T>\n    fullName: System.Linq.Enumerable.ToArray<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToArray``1\n    name: ToArray(Of T)\n    fullName: System.Linq.Enumerable.ToArray(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToArray<T>()\n  nameWithType.vb: Enumerable.ToArray(Of T)()\n  commentId: M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToDictionary``2(System.Func{{T},{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: ToDictionary<T, TKey>(Func<T, TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<T, TKey>(System.Func<T, TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of T, TKey)(System.Func(Of T, TKey))\n  name.vb: ToDictionary(Of T, TKey)(Func(Of T, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1})\n    name: ToDictionary<T, TKey>\n    fullName: System.Linq.Enumerable.ToDictionary<T, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1})\n    name: ToDictionary(Of T, TKey)\n    fullName: System.Linq.Enumerable.ToDictionary(Of T, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToDictionary<T, TKey>(Func<T, TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of T, TKey)(Func(Of T, TKey))\n  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToDictionary``2(System.Func{{T},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  name: ToDictionary<T, TKey>(Func<T, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<T, TKey>(System.Func<T, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of T, TKey)(System.Func(Of T, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToDictionary(Of T, TKey)(Func(Of T, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary<T, TKey>\n    fullName: System.Linq.Enumerable.ToDictionary<T, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary(Of T, TKey)\n    fullName: System.Linq.Enumerable.ToDictionary(Of T, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToDictionary<T, TKey>(Func<T, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of T, TKey)(Func(Of T, TKey), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToDictionary``3(System.Func{{T},{TKey}},System.Func{{T},{TElement}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  name: ToDictionary<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>)\n  fullName: System.Linq.Enumerable.ToDictionary<T, TKey, TElement>(System.Func<T, TKey>, System.Func<T, TElement>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of T, TKey, TElement)(System.Func(Of T, TKey), System.Func(Of T, TElement))\n  name.vb: ToDictionary(Of T, TKey, TElement)(Func(Of T, TKey), Func(Of T, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: ToDictionary<T, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToDictionary<T, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: ToDictionary(Of T, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToDictionary(Of T, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToDictionary<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>)\n  nameWithType.vb: Enumerable.ToDictionary(Of T, TKey, TElement)(Func(Of T, TKey), Func(Of T, TElement))\n  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToDictionary``3(System.Func{{T},{TKey}},System.Func{{T},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  name: ToDictionary<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<T, TKey, TElement>(System.Func<T, TKey>, System.Func<T, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of T, TKey, TElement)(System.Func(Of T, TKey), System.Func(Of T, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToDictionary(Of T, TKey, TElement)(Func(Of T, TKey), Func(Of T, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary<T, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToDictionary<T, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary(Of T, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToDictionary(Of T, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToDictionary<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of T, TKey, TElement)(Func(Of T, TKey), Func(Of T, TElement), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToList``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  name: ToList<T>()\n  fullName: System.Linq.Enumerable.ToList<T>()\n  fullname.vb: System.Linq.Enumerable.ToList(Of T)()\n  name.vb: ToList(Of T)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToList``1\n    name: ToList<T>\n    fullName: System.Linq.Enumerable.ToList<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToList``1\n    name: ToList(Of T)\n    fullName: System.Linq.Enumerable.ToList(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToList<T>()\n  nameWithType.vb: Enumerable.ToList(Of T)()\n  commentId: M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToLookup``2(System.Func{{T},{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: ToLookup<T, TKey>(Func<T, TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<T, TKey>(System.Func<T, TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of T, TKey)(System.Func(Of T, TKey))\n  name.vb: ToLookup(Of T, TKey)(Func(Of T, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1})\n    name: ToLookup<T, TKey>\n    fullName: System.Linq.Enumerable.ToLookup<T, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1})\n    name: ToLookup(Of T, TKey)\n    fullName: System.Linq.Enumerable.ToLookup(Of T, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToLookup<T, TKey>(Func<T, TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of T, TKey)(Func(Of T, TKey))\n  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToLookup``2(System.Func{{T},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  name: ToLookup<T, TKey>(Func<T, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<T, TKey>(System.Func<T, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of T, TKey)(System.Func(Of T, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToLookup(Of T, TKey)(Func(Of T, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup<T, TKey>\n    fullName: System.Linq.Enumerable.ToLookup<T, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup(Of T, TKey)\n    fullName: System.Linq.Enumerable.ToLookup(Of T, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToLookup<T, TKey>(Func<T, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of T, TKey)(Func(Of T, TKey), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToLookup``3(System.Func{{T},{TKey}},System.Func{{T},{TElement}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  name: ToLookup<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>)\n  fullName: System.Linq.Enumerable.ToLookup<T, TKey, TElement>(System.Func<T, TKey>, System.Func<T, TElement>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of T, TKey, TElement)(System.Func(Of T, TKey), System.Func(Of T, TElement))\n  name.vb: ToLookup(Of T, TKey, TElement)(Func(Of T, TKey), Func(Of T, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: ToLookup<T, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToLookup<T, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: ToLookup(Of T, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToLookup(Of T, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToLookup<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>)\n  nameWithType.vb: Enumerable.ToLookup(Of T, TKey, TElement)(Func(Of T, TKey), Func(Of T, TElement))\n  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.ToLookup``3(System.Func{{T},{TKey}},System.Func{{T},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  name: ToLookup<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<T, TKey, TElement>(System.Func<T, TKey>, System.Func<T, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of T, TKey, TElement)(System.Func(Of T, TKey), System.Func(Of T, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToLookup(Of T, TKey, TElement)(Func(Of T, TKey), Func(Of T, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup<T, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToLookup<T, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup(Of T, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToLookup(Of T, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToLookup<T, TKey, TElement>(Func<T, TKey>, Func<T, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of T, TKey, TElement)(Func(Of T, TKey), Func(Of T, TElement), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{{T}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: Union<T>(IEnumerable<T>)\n  fullName: System.Linq.Enumerable.Union<T>(System.Collections.Generic.IEnumerable<T>)\n  fullname.vb: System.Linq.Enumerable.Union(Of T)(System.Collections.Generic.IEnumerable(Of T))\n  name.vb: Union(Of T)(IEnumerable(Of T))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0})\n    name: Union<T>\n    fullName: System.Linq.Enumerable.Union<T>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0})\n    name: Union(Of T)\n    fullName: System.Linq.Enumerable.Union(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Union<T>(IEnumerable<T>)\n  nameWithType.vb: Enumerable.Union(Of T)(IEnumerable(Of T))\n  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{{T}},System.Collections.Generic.IEqualityComparer{{T}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: Union<T>(IEnumerable<T>, IEqualityComparer<T>)\n  fullName: System.Linq.Enumerable.Union<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)\n  fullname.vb: System.Linq.Enumerable.Union(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T))\n  name.vb: Union(Of T)(IEnumerable(Of T), IEqualityComparer(Of T))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Union<T>\n    fullName: System.Linq.Enumerable.Union<T>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Union(Of T)\n    fullName: System.Linq.Enumerable.Union(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Union<T>(IEnumerable<T>, IEqualityComparer<T>)\n  nameWithType.vb: Enumerable.Union(Of T)(IEnumerable(Of T), IEqualityComparer(Of T))\n  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Where``1(System.Func{{T},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Where<T>(Func<T, Boolean>)\n  fullName: System.Linq.Enumerable.Where<T>(System.Func<T, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Where(Of T)(System.Func(Of T, System.Boolean))\n  name.vb: Where(Of T)(Func(Of T, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Boolean})\n    name: Where<T>\n    fullName: System.Linq.Enumerable.Where<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Boolean})\n    name: Where(Of T)\n    fullName: System.Linq.Enumerable.Where(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Where<T>(Func<T, Boolean>)\n  nameWithType.vb: Enumerable.Where(Of T)(Func(Of T, Boolean))\n  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Where``1(System.Func{{T},System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  name: Where<T>(Func<T, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.Where<T>(System.Func<T, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Where(Of T)(System.Func(Of T, System.Int32, System.Boolean))\n  name.vb: Where(Of T)(Func(Of T, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Int32,System.Boolean})\n    name: Where<T>\n    fullName: System.Linq.Enumerable.Where<T>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Int32,System.Boolean})\n    name: Where(Of T)\n    fullName: System.Linq.Enumerable.Where(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Where<T>(Func<T, Int32, Boolean>)\n  nameWithType.vb: Enumerable.Where(Of T)(Func(Of T, Int32, Boolean))\n  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{`0}.System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{{TSecond}},System.Func{{T},{TSecond},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  name: Zip<T, TSecond, TResult>(IEnumerable<TSecond>, Func<T, TSecond, TResult>)\n  fullName: System.Linq.Enumerable.Zip<T, TSecond, TResult>(System.Collections.Generic.IEnumerable<TSecond>, System.Func<T, TSecond, TResult>)\n  fullname.vb: System.Linq.Enumerable.Zip(Of T, TSecond, TResult)(System.Collections.Generic.IEnumerable(Of TSecond), System.Func(Of T, TSecond, TResult))\n  name.vb: Zip(Of T, TSecond, TResult)(IEnumerable(Of TSecond), Func(Of T, TSecond, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n    name: Zip<T, TSecond, TResult>\n    fullName: System.Linq.Enumerable.Zip<T, TSecond, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSecond\n    fullName: TSecond\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TSecond\n    fullName: TSecond\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n    name: Zip(Of T, TSecond, TResult)\n    fullName: System.Linq.Enumerable.Zip(Of T, TSecond, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSecond\n    fullName: TSecond\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TSecond\n    fullName: TSecond\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Zip<T, TSecond, TResult>(IEnumerable<TSecond>, Func<T, TSecond, TResult>)\n  nameWithType.vb: Enumerable.Zip(Of T, TSecond, TResult)(IEnumerable(Of TSecond), Func(Of T, TSecond, TResult))\n  commentId: M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Collections.Concurrent.IProducerConsumerCollection`1\n  isExternal: false\n  name: IProducerConsumerCollection<T>\n  fullName: System.Collections.Concurrent.IProducerConsumerCollection<T>\n  fullname.vb: System.Collections.Concurrent.IProducerConsumerCollection(Of T)\n  name.vb: IProducerConsumerCollection(Of T)\n  spec.csharp:\n  - uid: System.Collections.Concurrent.IProducerConsumerCollection`1\n    name: IProducerConsumerCollection\n    fullName: System.Collections.Concurrent.IProducerConsumerCollection\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Concurrent.IProducerConsumerCollection`1\n    name: IProducerConsumerCollection\n    fullName: System.Collections.Concurrent.IProducerConsumerCollection\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IProducerConsumerCollection<T>\n  nameWithType.vb: IProducerConsumerCollection(Of T)\n  commentId: T:System.Collections.Concurrent.IProducerConsumerCollection`1\n- uid: System.Collections.Generic.IReadOnlyCollection`1\n  isExternal: false\n  name: IReadOnlyCollection<T>\n  fullName: System.Collections.Generic.IReadOnlyCollection<T>\n  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of T)\n  name.vb: IReadOnlyCollection(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IReadOnlyCollection`1\n    name: IReadOnlyCollection\n    fullName: System.Collections.Generic.IReadOnlyCollection\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IReadOnlyCollection`1\n    name: IReadOnlyCollection\n    fullName: System.Collections.Generic.IReadOnlyCollection\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IReadOnlyCollection<T>\n  nameWithType.vb: IReadOnlyCollection(Of T)\n  commentId: T:System.Collections.Generic.IReadOnlyCollection`1\n- uid: System.Collections.Generic\n  isExternal: false\n  name: System.Collections.Generic\n  fullName: System.Collections.Generic\n  nameWithType: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n- uid: System.Collections.Generic.IEnumerable`1\n  isExternal: false\n  name: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of T)\n  name.vb: IEnumerable(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<T>\n  nameWithType.vb: IEnumerable(Of T)\n  commentId: T:System.Collections.Generic.IEnumerable`1\n- uid: System.Collections\n  isExternal: false\n  name: System.Collections\n  fullName: System.Collections\n  nameWithType: System.Collections\n  commentId: N:System.Collections\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  isExternal: true\n  name: AsQueryable(IEnumerable)\n  fullName: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n- uid: System.Linq.Queryable\n  parent: System.Linq\n  isExternal: false\n  name: Queryable\n  fullName: System.Linq.Queryable\n  nameWithType: Queryable\n  commentId: T:System.Linq.Queryable\n- uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: AsQueryable<TElement>(IEnumerable<TElement>)\n  fullName: System.Linq.Queryable.AsQueryable<TElement>(System.Collections.Generic.IEnumerable<TElement>)\n  fullname.vb: System.Linq.Queryable.AsQueryable(Of TElement)(System.Collections.Generic.IEnumerable(Of TElement))\n  name.vb: AsQueryable(Of TElement)(IEnumerable(Of TElement))\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsQueryable<TElement>\n    fullName: System.Linq.Queryable.AsQueryable<TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsQueryable(Of TElement)\n    fullName: System.Linq.Queryable.AsQueryable(Of TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)\n  nameWithType.vb: Queryable.AsQueryable(Of TElement)(IEnumerable(Of TElement))\n  commentId: M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  isExternal: true\n  name: AsParallel(IEnumerable)\n  fullName: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n- uid: System.Linq.ParallelEnumerable\n  parent: System.Linq\n  isExternal: false\n  name: ParallelEnumerable\n  fullName: System.Linq.ParallelEnumerable\n  nameWithType: ParallelEnumerable\n  commentId: T:System.Linq.ParallelEnumerable\n- uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: AsParallel<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.ParallelEnumerable.AsParallel<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.ParallelEnumerable.AsParallel(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: AsParallel(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsParallel<TSource>\n    fullName: System.Linq.ParallelEnumerable.AsParallel<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsParallel(Of TSource)\n    fullName: System.Linq.ParallelEnumerable.AsParallel(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: ParallelEnumerable.AsParallel(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  isExternal: true\n  name: Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)\n  fullName: System.Linq.Enumerable.Aggregate<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TSource>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TSource, TSource))\n  name.vb: Aggregate(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, TSource, TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n    name: Aggregate<TSource>\n    fullName: System.Linq.Enumerable.Aggregate<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n    name: Aggregate(Of TSource)\n    fullName: System.Linq.Enumerable.Aggregate(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)\n  nameWithType.vb: Enumerable.Aggregate(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, TSource, TSource))\n  commentId: M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n- uid: System.Linq.Enumerable\n  parent: System.Linq\n  isExternal: false\n  name: Enumerable\n  fullName: System.Linq.Enumerable\n  nameWithType: Enumerable\n  commentId: T:System.Linq.Enumerable\n- uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  isExternal: true\n  name: Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)\n  fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate>(System.Collections.Generic.IEnumerable<TSource>, TAccumulate, System.Func<TAccumulate, TSource, TAccumulate>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate)(System.Collections.Generic.IEnumerable(Of TSource), TAccumulate, System.Func(Of TAccumulate, TSource, TAccumulate))\n  name.vb: Aggregate(Of TSource, TAccumulate)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n    name: Aggregate<TSource, TAccumulate>\n    fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n    name: Aggregate(Of TSource, TAccumulate)\n    fullName: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)\n  nameWithType.vb: Enumerable.Aggregate(Of TSource, TAccumulate)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate))\n  commentId: M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n- uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  isExternal: true\n  name: Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)\n  fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate, TResult>(System.Collections.Generic.IEnumerable<TSource>, TAccumulate, System.Func<TAccumulate, TSource, TAccumulate>, System.Func<TAccumulate, TResult>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate, TResult)(System.Collections.Generic.IEnumerable(Of TSource), TAccumulate, System.Func(Of TAccumulate, TSource, TAccumulate), System.Func(Of TAccumulate, TResult))\n  name.vb: Aggregate(Of TSource, TAccumulate, TResult)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate), Func(Of TAccumulate, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n    name: Aggregate<TSource, TAccumulate, TResult>\n    fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n    name: Aggregate(Of TSource, TAccumulate, TResult)\n    fullName: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)\n  nameWithType.vb: Enumerable.Aggregate(Of TSource, TAccumulate, TResult)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate), Func(Of TAccumulate, TResult))\n  commentId: M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n- uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.All<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.All(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: All(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: All<TSource>\n    fullName: System.Linq.Enumerable.All<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: All(Of TSource)\n    fullName: System.Linq.Enumerable.All(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.All(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Any<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Any<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Any(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Any(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n    name: Any<TSource>\n    fullName: System.Linq.Enumerable.Any<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n    name: Any(Of TSource)\n    fullName: System.Linq.Enumerable.Any(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Any(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Any<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Any(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Any(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Any<TSource>\n    fullName: System.Linq.Enumerable.Any<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Any(Of TSource)\n    fullName: System.Linq.Enumerable.Any(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Any(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: AsEnumerable<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.AsEnumerable<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.AsEnumerable(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: AsEnumerable(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsEnumerable<TSource>\n    fullName: System.Linq.Enumerable.AsEnumerable<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsEnumerable(Of TSource)\n    fullName: System.Linq.Enumerable.AsEnumerable(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.AsEnumerable(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  isExternal: true\n  name: Cast<TResult>(IEnumerable)\n  fullName: System.Linq.Enumerable.Cast<TResult>(System.Collections.IEnumerable)\n  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)(System.Collections.IEnumerable)\n  name.vb: Cast(Of TResult)(IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n    name: Cast<TResult>\n    fullName: System.Linq.Enumerable.Cast<TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n    name: Cast(Of TResult)\n    fullName: System.Linq.Enumerable.Cast(Of TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  nameWithType.vb: Enumerable.Cast(Of TResult)(IEnumerable)\n  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n- uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Concat(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Concat(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Concat<TSource>\n    fullName: System.Linq.Enumerable.Concat<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Concat(Of TSource)\n    fullName: System.Linq.Enumerable.Concat(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Concat(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  isExternal: true\n  name: Append<TSource>(IEnumerable<TSource>, TSource)\n  fullName: System.Linq.Enumerable.Append<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)\n  fullname.vb: System.Linq.Enumerable.Append(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)\n  name.vb: Append(Of TSource)(IEnumerable(Of TSource), TSource)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Append<TSource>\n    fullName: System.Linq.Enumerable.Append<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Append(Of TSource)\n    fullName: System.Linq.Enumerable.Append(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType.vb: Enumerable.Append(Of TSource)(IEnumerable(Of TSource), TSource)\n  commentId: M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n- uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  isExternal: true\n  name: Prepend<TSource>(IEnumerable<TSource>, TSource)\n  fullName: System.Linq.Enumerable.Prepend<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)\n  fullname.vb: System.Linq.Enumerable.Prepend(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)\n  name.vb: Prepend(Of TSource)(IEnumerable(Of TSource), TSource)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Prepend<TSource>\n    fullName: System.Linq.Enumerable.Prepend<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Prepend(Of TSource)\n    fullName: System.Linq.Enumerable.Prepend(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType.vb: Enumerable.Prepend(Of TSource)(IEnumerable(Of TSource), TSource)\n  commentId: M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  isExternal: true\n  name: Contains<TSource>(IEnumerable<TSource>, TSource)\n  fullName: System.Linq.Enumerable.Contains<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)\n  fullname.vb: System.Linq.Enumerable.Contains(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)\n  name.vb: Contains(Of TSource)(IEnumerable(Of TSource), TSource)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Contains<TSource>\n    fullName: System.Linq.Enumerable.Contains<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Contains(Of TSource)\n    fullName: System.Linq.Enumerable.Contains(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType.vb: Enumerable.Contains(Of TSource)(IEnumerable(Of TSource), TSource)\n  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Contains<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Contains(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource, System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Contains(Of TSource)(IEnumerable(Of TSource), TSource, IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n    name: Contains<TSource>\n    fullName: System.Linq.Enumerable.Contains<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n    name: Contains(Of TSource)\n    fullName: System.Linq.Enumerable.Contains(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Contains(Of TSource)(IEnumerable(Of TSource), TSource, IEqualityComparer(Of TSource))\n  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Count<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Count<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Count(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Count(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n    name: Count<TSource>\n    fullName: System.Linq.Enumerable.Count<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n    name: Count(Of TSource)\n    fullName: System.Linq.Enumerable.Count(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Count(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Count<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Count(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Count(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Count<TSource>\n    fullName: System.Linq.Enumerable.Count<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Count(Of TSource)\n    fullName: System.Linq.Enumerable.Count(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Count(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n    name: DefaultIfEmpty<TSource>\n    fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n    name: DefaultIfEmpty(Of TSource)\n    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  isExternal: true\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)\n  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)\n  name.vb: DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource), TSource)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: DefaultIfEmpty<TSource>\n    fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: DefaultIfEmpty(Of TSource)\n    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType.vb: Enumerable.DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource), TSource)\n  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Distinct<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Distinct<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Distinct(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Distinct(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n    name: Distinct<TSource>\n    fullName: System.Linq.Enumerable.Distinct<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n    name: Distinct(Of TSource)\n    fullName: System.Linq.Enumerable.Distinct(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Distinct(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Distinct<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Distinct(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Distinct(Of TSource)(IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Distinct<TSource>\n    fullName: System.Linq.Enumerable.Distinct<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Distinct(Of TSource)\n    fullName: System.Linq.Enumerable.Distinct(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Distinct(Of TSource)(IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  isExternal: true\n  name: ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  fullName: System.Linq.Enumerable.ElementAt<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)\n  fullname.vb: System.Linq.Enumerable.ElementAt(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)\n  name.vb: ElementAt(Of TSource)(IEnumerable(Of TSource), Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: ElementAt<TSource>\n    fullName: System.Linq.Enumerable.ElementAt<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: ElementAt(Of TSource)\n    fullName: System.Linq.Enumerable.ElementAt(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType.vb: Enumerable.ElementAt(Of TSource)(IEnumerable(Of TSource), Int32)\n  commentId: M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n- uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  isExternal: true\n  name: ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  fullName: System.Linq.Enumerable.ElementAtOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)\n  fullname.vb: System.Linq.Enumerable.ElementAtOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)\n  name.vb: ElementAtOrDefault(Of TSource)(IEnumerable(Of TSource), Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: ElementAtOrDefault<TSource>\n    fullName: System.Linq.Enumerable.ElementAtOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: ElementAtOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.ElementAtOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType.vb: Enumerable.ElementAtOrDefault(Of TSource)(IEnumerable(Of TSource), Int32)\n  commentId: M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Except<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Except(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Except<TSource>\n    fullName: System.Linq.Enumerable.Except<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Except(Of TSource)\n    fullName: System.Linq.Enumerable.Except(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Except<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Except(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Except<TSource>\n    fullName: System.Linq.Enumerable.Except<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Except(Of TSource)\n    fullName: System.Linq.Enumerable.Except(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: First<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.First<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.First(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: First(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n    name: First<TSource>\n    fullName: System.Linq.Enumerable.First<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n    name: First(Of TSource)\n    fullName: System.Linq.Enumerable.First(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.First(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.First<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.First(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: First(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: First<TSource>\n    fullName: System.Linq.Enumerable.First<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: First(Of TSource)\n    fullName: System.Linq.Enumerable.First(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.First(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.FirstOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: FirstOrDefault(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: FirstOrDefault<TSource>\n    fullName: System.Linq.Enumerable.FirstOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: FirstOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.FirstOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.FirstOrDefault(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.FirstOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: FirstOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: FirstOrDefault<TSource>\n    fullName: System.Linq.Enumerable.FirstOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: FirstOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.FirstOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.FirstOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: GroupBy<TSource, TKey>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: GroupBy(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<TSource, TKey>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))\n  name.vb: GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: GroupBy<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: GroupBy(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<TSource>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TSource), TResult))\n  name.vb: GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n    name: GroupBy<TSource, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n    name: GroupBy(Of TSource, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult))\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<TSource>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TSource), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<TSource, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of TSource, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult))\n  name.vb: GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n    name: GroupBy<TSource, TKey, TElement, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n    name: GroupBy(Of TSource, TKey, TElement, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))\n  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<TSource, TKey, TElement, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of TSource, TKey, TElement, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  isExternal: true\n  name: GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)\n  fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, System.Collections.Generic.IEnumerable<TInner>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, System.Collections.Generic.IEnumerable(Of TInner), TResult))\n  name.vb: GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n    name: GroupJoin<TOuter, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n    name: GroupJoin(Of TOuter, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)\n  nameWithType.vb: Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult))\n  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  isExternal: true\n  name: GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, System.Collections.Generic.IEnumerable<TInner>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, System.Collections.Generic.IEnumerable(Of TInner), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: GroupJoin<TOuter, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: GroupJoin(Of TOuter, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Intersect<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Intersect(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Intersect<TSource>\n    fullName: System.Linq.Enumerable.Intersect<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Intersect(Of TSource)\n    fullName: System.Linq.Enumerable.Intersect(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Intersect<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Intersect(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Intersect<TSource>\n    fullName: System.Linq.Enumerable.Intersect<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Intersect(Of TSource)\n    fullName: System.Linq.Enumerable.Intersect(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  isExternal: true\n  name: Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)\n  fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, TInner, TResult>)\n  fullname.vb: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, TInner, TResult))\n  name.vb: Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n    name: Join<TOuter, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n    name: Join(Of TOuter, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)\n  nameWithType.vb: Enumerable.Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult))\n  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  isExternal: true\n  name: Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, TInner, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, TInner, TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: Join<TOuter, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: Join(Of TOuter, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Last<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Last<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Last(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Last(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n    name: Last<TSource>\n    fullName: System.Linq.Enumerable.Last<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n    name: Last(Of TSource)\n    fullName: System.Linq.Enumerable.Last(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Last(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Last<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Last(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Last(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Last<TSource>\n    fullName: System.Linq.Enumerable.Last<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Last(Of TSource)\n    fullName: System.Linq.Enumerable.Last(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Last(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: LastOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.LastOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: LastOrDefault(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: LastOrDefault<TSource>\n    fullName: System.Linq.Enumerable.LastOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: LastOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.LastOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.LastOrDefault(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.LastOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: LastOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: LastOrDefault<TSource>\n    fullName: System.Linq.Enumerable.LastOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: LastOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.LastOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.LastOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: LongCount<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.LongCount<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.LongCount(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: LongCount(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n    name: LongCount<TSource>\n    fullName: System.Linq.Enumerable.LongCount<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n    name: LongCount(Of TSource)\n    fullName: System.Linq.Enumerable.LongCount(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.LongCount(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.LongCount<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.LongCount(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: LongCount(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: LongCount<TSource>\n    fullName: System.Linq.Enumerable.LongCount<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: LongCount(Of TSource)\n    fullName: System.Linq.Enumerable.LongCount(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.LongCount(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n- uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  fullName: System.Linq.Enumerable.Max<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))\n  name.vb: Max(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Max<TSource, TResult>\n    fullName: System.Linq.Enumerable.Max<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Max(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.Max(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  nameWithType.vb: Enumerable.Max(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n  commentId: M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n- uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  fullName: System.Linq.Enumerable.Min<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))\n  name.vb: Min(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Min<TSource, TResult>\n    fullName: System.Linq.Enumerable.Min<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Min(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.Min(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  nameWithType.vb: Enumerable.Min(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n  commentId: M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  isExternal: true\n  name: OfType<TResult>(IEnumerable)\n  fullName: System.Linq.Enumerable.OfType<TResult>(System.Collections.IEnumerable)\n  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)(System.Collections.IEnumerable)\n  name.vb: OfType(Of TResult)(IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n    name: OfType<TResult>\n    fullName: System.Linq.Enumerable.OfType<TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n    name: OfType(Of TResult)\n    fullName: System.Linq.Enumerable.OfType(Of TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  nameWithType.vb: Enumerable.OfType(Of TResult)(IEnumerable)\n  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: OrderBy<TSource, TKey>\n    fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: OrderBy(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.OrderBy(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  isExternal: true\n  name: OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)\n  fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IComparer(Of TKey))\n  name.vb: OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderBy<TSource, TKey>\n    fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderBy(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.OrderBy(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)\n  nameWithType.vb: Enumerable.OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: OrderByDescending<TSource, TKey>\n    fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: OrderByDescending(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  isExternal: true\n  name: OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)\n  fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IComparer(Of TKey))\n  name.vb: OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderByDescending<TSource, TKey>\n    fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderByDescending(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)\n  nameWithType.vb: Enumerable.OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n- uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Reverse<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Reverse<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Reverse(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Reverse(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n    name: Reverse<TSource>\n    fullName: System.Linq.Enumerable.Reverse<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n    name: Reverse(Of TSource)\n    fullName: System.Linq.Enumerable.Reverse(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Reverse<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Reverse(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  fullName: System.Linq.Enumerable.Select<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)\n  fullname.vb: System.Linq.Enumerable.Select(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))\n  name.vb: Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Select<TSource, TResult>\n    fullName: System.Linq.Enumerable.Select<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Select(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.Select(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  nameWithType.vb: Enumerable.Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  isExternal: true\n  name: Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)\n  fullName: System.Linq.Enumerable.Select<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, TResult>)\n  fullname.vb: System.Linq.Enumerable.Select(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, TResult))\n  name.vb: Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n    name: Select<TSource, TResult>\n    fullName: System.Linq.Enumerable.Select<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n    name: Select(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.Select(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)\n  nameWithType.vb: Enumerable.Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, TResult))\n  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  isExternal: true\n  name: SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)\n  fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Collections.Generic.IEnumerable(Of TResult)))\n  name.vb: SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TResult)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany<TSource, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)\n  nameWithType.vb: Enumerable.SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TResult)))\n  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  isExternal: true\n  name: SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)\n  fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Collections.Generic.IEnumerable<TResult>>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Collections.Generic.IEnumerable(Of TResult)))\n  name.vb: SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TResult)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany<TSource, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)\n  nameWithType.vb: Enumerable.SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TResult)))\n  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  isExternal: true\n  name: SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)\n  fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<TSource, TCollection, TResult>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of TSource, TCollection, TResult))\n  name.vb: SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany<TSource, TCollection, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TCollection\n    fullName: TCollection\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany(Of TSource, TCollection, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TCollection\n    fullName: TCollection\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)\n  nameWithType.vb: Enumerable.SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))\n  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  isExternal: true\n  name: SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)\n  fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<TSource, TCollection, TResult>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of TSource, TCollection, TResult))\n  name.vb: SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany<TSource, TCollection, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TCollection\n    fullName: TCollection\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany(Of TSource, TCollection, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TCollection\n    fullName: TCollection\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)\n  nameWithType.vb: Enumerable.SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))\n  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.SequenceEqual<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: SequenceEqual<TSource>\n    fullName: System.Linq.Enumerable.SequenceEqual<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: SequenceEqual(Of TSource)\n    fullName: System.Linq.Enumerable.SequenceEqual(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.SequenceEqual<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: SequenceEqual<TSource>\n    fullName: System.Linq.Enumerable.SequenceEqual<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: SequenceEqual(Of TSource)\n    fullName: System.Linq.Enumerable.SequenceEqual(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Single<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Single<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Single(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Single(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n    name: Single<TSource>\n    fullName: System.Linq.Enumerable.Single<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n    name: Single(Of TSource)\n    fullName: System.Linq.Enumerable.Single(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Single(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Single<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Single(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Single(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Single<TSource>\n    fullName: System.Linq.Enumerable.Single<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Single(Of TSource)\n    fullName: System.Linq.Enumerable.Single(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Single(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.SingleOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: SingleOrDefault(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: SingleOrDefault<TSource>\n    fullName: System.Linq.Enumerable.SingleOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: SingleOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.SingleOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.SingleOrDefault(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.SingleOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: SingleOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: SingleOrDefault<TSource>\n    fullName: System.Linq.Enumerable.SingleOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: SingleOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.SingleOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.SingleOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  isExternal: true\n  name: Skip<TSource>(IEnumerable<TSource>, Int32)\n  fullName: System.Linq.Enumerable.Skip<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)\n  fullname.vb: System.Linq.Enumerable.Skip(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)\n  name.vb: Skip(Of TSource)(IEnumerable(Of TSource), Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: Skip<TSource>\n    fullName: System.Linq.Enumerable.Skip<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: Skip(Of TSource)\n    fullName: System.Linq.Enumerable.Skip(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType.vb: Enumerable.Skip(Of TSource)(IEnumerable(Of TSource), Int32)\n  commentId: M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.SkipWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SkipWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: SkipWhile<TSource>\n    fullName: System.Linq.Enumerable.SkipWhile<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: SkipWhile(Of TSource)\n    fullName: System.Linq.Enumerable.SkipWhile(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  isExternal: true\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.SkipWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SkipWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))\n  name.vb: SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: SkipWhile<TSource>\n    fullName: System.Linq.Enumerable.SkipWhile<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: SkipWhile(Of TSource)\n    fullName: System.Linq.Enumerable.SkipWhile(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  nameWithType.vb: Enumerable.SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n- uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  isExternal: true\n  name: Take<TSource>(IEnumerable<TSource>, Int32)\n  fullName: System.Linq.Enumerable.Take<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)\n  fullname.vb: System.Linq.Enumerable.Take(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)\n  name.vb: Take(Of TSource)(IEnumerable(Of TSource), Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: Take<TSource>\n    fullName: System.Linq.Enumerable.Take<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: Take(Of TSource)\n    fullName: System.Linq.Enumerable.Take(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType.vb: Enumerable.Take(Of TSource)(IEnumerable(Of TSource), Int32)\n  commentId: M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.TakeWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.TakeWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: TakeWhile<TSource>\n    fullName: System.Linq.Enumerable.TakeWhile<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: TakeWhile(Of TSource)\n    fullName: System.Linq.Enumerable.TakeWhile(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  isExternal: true\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.TakeWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.TakeWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))\n  name.vb: TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: TakeWhile<TSource>\n    fullName: System.Linq.Enumerable.TakeWhile<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: TakeWhile(Of TSource)\n    fullName: System.Linq.Enumerable.TakeWhile(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  nameWithType.vb: Enumerable.TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n- uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: ToArray<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.ToArray<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.ToArray(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: ToArray(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n    name: ToArray<TSource>\n    fullName: System.Linq.Enumerable.ToArray<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n    name: ToArray(Of TSource)\n    fullName: System.Linq.Enumerable.ToArray(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToArray<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.ToArray(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: ToDictionary<TSource, TKey>\n    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: ToDictionary(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary<TSource, TKey>\n    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  isExternal: true\n  name: ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))\n  name.vb: ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: ToDictionary<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: ToDictionary(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: ToList<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.ToList<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.ToList(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: ToList(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n    name: ToList<TSource>\n    fullName: System.Linq.Enumerable.ToList<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n    name: ToList(Of TSource)\n    fullName: System.Linq.Enumerable.ToList(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToList<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.ToList(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: ToLookup<TSource, TKey>\n    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: ToLookup(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup<TSource, TKey>\n    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  isExternal: true\n  name: ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))\n  name.vb: ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: ToLookup<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: ToLookup(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Union(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Union<TSource>\n    fullName: System.Linq.Enumerable.Union<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Union(Of TSource)\n    fullName: System.Linq.Enumerable.Union(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Union(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Union<TSource>\n    fullName: System.Linq.Enumerable.Union<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Union(Of TSource)\n    fullName: System.Linq.Enumerable.Union(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Where<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Where(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Where<TSource>\n    fullName: System.Linq.Enumerable.Where<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Where(Of TSource)\n    fullName: System.Linq.Enumerable.Where(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  isExternal: true\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.Where<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Where(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))\n  name.vb: Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: Where<TSource>\n    fullName: System.Linq.Enumerable.Where<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: Where(Of TSource)\n    fullName: System.Linq.Enumerable.Where(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  nameWithType.vb: Enumerable.Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n- uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  isExternal: true\n  name: Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)\n  fullName: System.Linq.Enumerable.Zip<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)\n  fullname.vb: System.Linq.Enumerable.Zip(Of TFirst, TSecond, TResult)(System.Collections.Generic.IEnumerable(Of TFirst), System.Collections.Generic.IEnumerable(Of TSecond), System.Func(Of TFirst, TSecond, TResult))\n  name.vb: Zip(Of TFirst, TSecond, TResult)(IEnumerable(Of TFirst), IEnumerable(Of TSecond), Func(Of TFirst, TSecond, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n    name: Zip<TFirst, TSecond, TResult>\n    fullName: System.Linq.Enumerable.Zip<TFirst, TSecond, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TFirst\n    fullName: TFirst\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSecond\n    fullName: TSecond\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TFirst\n    fullName: TFirst\n  - name: ', '\n    fullName: ', '\n  - name: TSecond\n    fullName: TSecond\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n    name: Zip(Of TFirst, TSecond, TResult)\n    fullName: System.Linq.Enumerable.Zip(Of TFirst, TSecond, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TFirst\n    fullName: TFirst\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSecond\n    fullName: TSecond\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TFirst\n    fullName: TFirst\n  - name: ', '\n    fullName: ', '\n  - name: TSecond\n    fullName: TSecond\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)\n  nameWithType.vb: Enumerable.Zip(Of TFirst, TSecond, TResult)(IEnumerable(Of TFirst), IEnumerable(Of TSecond), Func(Of TFirst, TSecond, TResult))\n  commentId: M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n- uid: System.Linq\n  isExternal: false\n  name: System.Linq\n  fullName: System.Linq\n  nameWithType: System.Linq\n  commentId: N:System.Linq\n- uid: System.Collections.Generic.IReadOnlyCollection{{T}}.Count\n  parent: System.Collections.Generic.IReadOnlyCollection{{T}}\n  definition: System.Collections.Generic.IReadOnlyCollection`1.Count\n  name: Count\n  fullName: System.Collections.Generic.IReadOnlyCollection<T>.Count\n  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of T).Count\n  nameWithType: IReadOnlyCollection<T>.Count\n  nameWithType.vb: IReadOnlyCollection(Of T).Count\n  commentId: P:System.Collections.Generic.IReadOnlyCollection{`0}.Count\n- uid: System.Collections.ICollection.Count\n  parent: System.Collections.ICollection\n  isExternal: false\n  name: Count\n  fullName: System.Collections.ICollection.Count\n  nameWithType: ICollection.Count\n  commentId: P:System.Collections.ICollection.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Collections.Generic.IReadOnlyCollection`1.Count\n  isExternal: false\n  name: Count\n  fullName: System.Collections.Generic.IReadOnlyCollection<T>.Count\n  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of T).Count\n  nameWithType: IReadOnlyCollection<T>.Count\n  nameWithType.vb: IReadOnlyCollection(Of T).Count\n  commentId: P:System.Collections.Generic.IReadOnlyCollection`1.Count\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Collections.ICollection.IsSynchronized\n  parent: System.Collections.ICollection\n  isExternal: false\n  name: IsSynchronized\n  fullName: System.Collections.ICollection.IsSynchronized\n  nameWithType: ICollection.IsSynchronized\n  commentId: P:System.Collections.ICollection.IsSynchronized\n- uid: System.Collections.ICollection.SyncRoot\n  parent: System.Collections.ICollection\n  isExternal: false\n  name: SyncRoot\n  fullName: System.Collections.ICollection.SyncRoot\n  nameWithType: ICollection.SyncRoot\n  commentId: P:System.Collections.ICollection.SyncRoot\n- uid: System.Collections.Concurrent.IProducerConsumerCollection{{T}}.CopyTo({T}[],System.Int32)\n  parent: System.Collections.Concurrent.IProducerConsumerCollection{{T}}\n  definition: System.Collections.Concurrent.IProducerConsumerCollection`1.CopyTo(`0[],System.Int32)\n  name: CopyTo(T[], Int32)\n  fullName: System.Collections.Concurrent.IProducerConsumerCollection<T>.CopyTo(T[], System.Int32)\n  fullname.vb: System.Collections.Concurrent.IProducerConsumerCollection(Of T).CopyTo(T(), System.Int32)\n  name.vb: CopyTo(T(), Int32)\n  spec.csharp:\n  - uid: System.Collections.Concurrent.IProducerConsumerCollection`1.CopyTo(`0[],System.Int32)\n    name: CopyTo\n    fullName: System.Collections.Concurrent.IProducerConsumerCollection<T>.CopyTo\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Concurrent.IProducerConsumerCollection`1.CopyTo(`0[],System.Int32)\n    name: CopyTo\n    fullName: System.Collections.Concurrent.IProducerConsumerCollection(Of T).CopyTo\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IProducerConsumerCollection<T>.CopyTo(T[], Int32)\n  nameWithType.vb: IProducerConsumerCollection(Of T).CopyTo(T(), Int32)\n  commentId: M:System.Collections.Concurrent.IProducerConsumerCollection{`0}.CopyTo(`0[],System.Int32)\n- uid: '{T}[]'\n  name: T[]\n  fullName: T[]\n  fullname.vb: T()\n  name.vb: T()\n  spec.csharp:\n  - name: T\n    fullName: T\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - name: T\n    fullName: T\n  - name: ()\n    fullName: ()\n  nameWithType: T[]\n  nameWithType.vb: T()\n- uid: System.Collections.Concurrent.IProducerConsumerCollection`1.CopyTo(`0[],System.Int32)\n  isExternal: true\n  name: CopyTo(T[], Int32)\n  fullName: System.Collections.Concurrent.IProducerConsumerCollection<T>.CopyTo(T[], System.Int32)\n  fullname.vb: System.Collections.Concurrent.IProducerConsumerCollection(Of T).CopyTo(T(), System.Int32)\n  name.vb: CopyTo(T(), Int32)\n  spec.csharp:\n  - uid: System.Collections.Concurrent.IProducerConsumerCollection`1.CopyTo(`0[],System.Int32)\n    name: CopyTo\n    fullName: System.Collections.Concurrent.IProducerConsumerCollection<T>.CopyTo\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Concurrent.IProducerConsumerCollection`1.CopyTo(`0[],System.Int32)\n    name: CopyTo\n    fullName: System.Collections.Concurrent.IProducerConsumerCollection(Of T).CopyTo\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IProducerConsumerCollection<T>.CopyTo(T[], Int32)\n  nameWithType.vb: IProducerConsumerCollection(Of T).CopyTo(T(), Int32)\n  commentId: M:System.Collections.Concurrent.IProducerConsumerCollection`1.CopyTo(`0[],System.Int32)\n- uid: System.Collections.Generic.IEnumerable{{T}}.GetEnumerator\n  parent: System.Collections.Generic.IEnumerable{{T}}\n  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator\n  name: GetEnumerator()\n  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()\n  fullname.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<T>.GetEnumerator()\n  nameWithType.vb: IEnumerable(Of T).GetEnumerator()\n  commentId: M:System.Collections.Generic.IEnumerable{`0}.GetEnumerator\n- uid: System.Collections.Generic.IEnumerator{{T}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerator`1\n  name: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n  fullname.vb: System.Collections.Generic.IEnumerator(Of T)\n  name.vb: IEnumerator(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IEnumerator<T>\n  nameWithType.vb: IEnumerator(Of T)\n  commentId: T:System.Collections.Generic.IEnumerator{`0}\n- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n  isExternal: false\n  name: GetEnumerator()\n  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()\n  fullname.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<T>.GetEnumerator()\n  nameWithType.vb: IEnumerable(Of T).GetEnumerator()\n  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator\n- uid: System.Collections.Generic.IEnumerator`1\n  isExternal: false\n  name: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n  fullname.vb: System.Collections.Generic.IEnumerator(Of T)\n  name.vb: IEnumerator(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IEnumerator<T>\n  nameWithType.vb: IEnumerator(Of T)\n  commentId: T:System.Collections.Generic.IEnumerator`1\n- uid: '{T}'\n  definition: T\n  name: T\n  fullName: T\n  nameWithType: T\n  commentId: '!:T'\n- uid: T\n  isExternal: false\n  name: T\n  fullName: T\n  nameWithType: T\n- uid: System.Collections.Concurrent.IProducerConsumerCollection{{T}}.TryAdd({T})\n  parent: System.Collections.Concurrent.IProducerConsumerCollection{{T}}\n  definition: System.Collections.Concurrent.IProducerConsumerCollection`1.TryAdd(`0)\n  name: TryAdd(T)\n  fullName: System.Collections.Concurrent.IProducerConsumerCollection<T>.TryAdd(T)\n  fullname.vb: System.Collections.Concurrent.IProducerConsumerCollection(Of T).TryAdd(T)\n  spec.csharp:\n  - uid: System.Collections.Concurrent.IProducerConsumerCollection`1.TryAdd(`0)\n    name: TryAdd\n    fullName: System.Collections.Concurrent.IProducerConsumerCollection<T>.TryAdd\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Concurrent.IProducerConsumerCollection`1.TryAdd(`0)\n    name: TryAdd\n    fullName: System.Collections.Concurrent.IProducerConsumerCollection(Of T).TryAdd\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IProducerConsumerCollection<T>.TryAdd(T)\n  nameWithType.vb: IProducerConsumerCollection(Of T).TryAdd(T)\n  commentId: M:System.Collections.Concurrent.IProducerConsumerCollection{`0}.TryAdd(`0)\n- uid: System.Collections.Concurrent.IProducerConsumerCollection`1.TryAdd(`0)\n  isExternal: false\n  name: TryAdd(T)\n  fullName: System.Collections.Concurrent.IProducerConsumerCollection<T>.TryAdd(T)\n  fullname.vb: System.Collections.Concurrent.IProducerConsumerCollection(Of T).TryAdd(T)\n  spec.csharp:\n  - uid: System.Collections.Concurrent.IProducerConsumerCollection`1.TryAdd(`0)\n    name: TryAdd\n    fullName: System.Collections.Concurrent.IProducerConsumerCollection<T>.TryAdd\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Concurrent.IProducerConsumerCollection`1.TryAdd(`0)\n    name: TryAdd\n    fullName: System.Collections.Concurrent.IProducerConsumerCollection(Of T).TryAdd\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IProducerConsumerCollection<T>.TryAdd(T)\n  nameWithType.vb: IProducerConsumerCollection(Of T).TryAdd(T)\n  commentId: M:System.Collections.Concurrent.IProducerConsumerCollection`1.TryAdd(`0)\n- uid: System.Collections.Concurrent.IProducerConsumerCollection{{T}}.TryTake({T}@)\n  parent: System.Collections.Concurrent.IProducerConsumerCollection{{T}}\n  definition: System.Collections.Concurrent.IProducerConsumerCollection`1.TryTake(`0@)\n  name: TryTake(T)\n  fullName: System.Collections.Concurrent.IProducerConsumerCollection<T>.TryTake(T)\n  fullname.vb: System.Collections.Concurrent.IProducerConsumerCollection(Of T).TryTake(T)\n  spec.csharp:\n  - uid: System.Collections.Concurrent.IProducerConsumerCollection`1.TryTake(`0@)\n    name: TryTake\n    fullName: System.Collections.Concurrent.IProducerConsumerCollection<T>.TryTake\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Concurrent.IProducerConsumerCollection`1.TryTake(`0@)\n    name: TryTake\n    fullName: System.Collections.Concurrent.IProducerConsumerCollection(Of T).TryTake\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IProducerConsumerCollection<T>.TryTake(T)\n  nameWithType.vb: IProducerConsumerCollection(Of T).TryTake(T)\n  commentId: M:System.Collections.Concurrent.IProducerConsumerCollection{`0}.TryTake(`0@)\n- uid: System.Collections.Concurrent.IProducerConsumerCollection`1.TryTake(`0@)\n  isExternal: false\n  name: TryTake(T)\n  fullName: System.Collections.Concurrent.IProducerConsumerCollection<T>.TryTake(T)\n  fullname.vb: System.Collections.Concurrent.IProducerConsumerCollection(Of T).TryTake(T)\n  spec.csharp:\n  - uid: System.Collections.Concurrent.IProducerConsumerCollection`1.TryTake(`0@)\n    name: TryTake\n    fullName: System.Collections.Concurrent.IProducerConsumerCollection<T>.TryTake\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Concurrent.IProducerConsumerCollection`1.TryTake(`0@)\n    name: TryTake\n    fullName: System.Collections.Concurrent.IProducerConsumerCollection(Of T).TryTake\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IProducerConsumerCollection<T>.TryTake(T)\n  nameWithType.vb: IProducerConsumerCollection(Of T).TryTake(T)\n  commentId: M:System.Collections.Concurrent.IProducerConsumerCollection`1.TryTake(`0@)\n- uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n  parent: System.Collections.ICollection\n  isExternal: true\n  name: CopyTo(Array, Int32)\n  fullName: System.Collections.ICollection.CopyTo(System.Array, System.Int32)\n  spec.csharp:\n  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n    name: CopyTo\n    fullName: System.Collections.ICollection.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.Array\n    name: Array\n    fullName: System.Array\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n    name: CopyTo\n    fullName: System.Collections.ICollection.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.Array\n    name: Array\n    fullName: System.Array\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ICollection.CopyTo(Array, Int32)\n  commentId: M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  fullName: System.Array\n  nameWithType: Array\n  commentId: T:System.Array\n- uid: System.Collections.IEnumerable.GetEnumerator\n  parent: System.Collections.IEnumerable\n  isExternal: false\n  name: GetEnumerator()\n  fullName: System.Collections.IEnumerable.GetEnumerator()\n  spec.csharp:\n  - uid: System.Collections.IEnumerable.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.IEnumerable.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IEnumerable.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.IEnumerable.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable.GetEnumerator()\n  commentId: M:System.Collections.IEnumerable.GetEnumerator\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  fullName: System.Collections.IEnumerator\n  nameWithType: IEnumerator\n  commentId: T:System.Collections.IEnumerator\n- uid: System.Collections.Concurrent.IProducerConsumerCollection{{T}}.ToArray\n  parent: System.Collections.Concurrent.IProducerConsumerCollection{{T}}\n  definition: System.Collections.Concurrent.IProducerConsumerCollection`1.ToArray\n  name: ToArray()\n  fullName: System.Collections.Concurrent.IProducerConsumerCollection<T>.ToArray()\n  fullname.vb: System.Collections.Concurrent.IProducerConsumerCollection(Of T).ToArray()\n  spec.csharp:\n  - uid: System.Collections.Concurrent.IProducerConsumerCollection`1.ToArray\n    name: ToArray\n    fullName: System.Collections.Concurrent.IProducerConsumerCollection<T>.ToArray\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Concurrent.IProducerConsumerCollection`1.ToArray\n    name: ToArray\n    fullName: System.Collections.Concurrent.IProducerConsumerCollection(Of T).ToArray\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IProducerConsumerCollection<T>.ToArray()\n  nameWithType.vb: IProducerConsumerCollection(Of T).ToArray()\n  commentId: M:System.Collections.Concurrent.IProducerConsumerCollection{`0}.ToArray\n- uid: System.Collections.Concurrent.IProducerConsumerCollection`1.ToArray\n  isExternal: false\n  name: ToArray()\n  fullName: System.Collections.Concurrent.IProducerConsumerCollection<T>.ToArray()\n  fullname.vb: System.Collections.Concurrent.IProducerConsumerCollection(Of T).ToArray()\n  spec.csharp:\n  - uid: System.Collections.Concurrent.IProducerConsumerCollection`1.ToArray\n    name: ToArray\n    fullName: System.Collections.Concurrent.IProducerConsumerCollection<T>.ToArray\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Concurrent.IProducerConsumerCollection`1.ToArray\n    name: ToArray\n    fullName: System.Collections.Concurrent.IProducerConsumerCollection(Of T).ToArray\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IProducerConsumerCollection<T>.ToArray()\n  nameWithType.vb: IProducerConsumerCollection(Of T).ToArray()\n  commentId: M:System.Collections.Concurrent.IProducerConsumerCollection`1.ToArray\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  fullName: System.NotSupportedException\n  nameWithType: NotSupportedException\n  commentId: T:System.NotSupportedException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n"}