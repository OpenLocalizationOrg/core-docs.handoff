{"nodes":[{"pos":[355,378],"content":"NotImplementedException","needQuote":true,"nodes":[{"content":"NotImplementedException","pos":[0,23]}]},{"pos":[2473,2498],"content":"NotImplementedException()","needQuote":true,"nodes":[{"content":"NotImplementedException()","pos":[0,25]}]},{"pos":[3512,3543],"content":"NotImplementedException(String)","needQuote":true,"nodes":[{"content":"NotImplementedException(String)","pos":[0,31]}]},{"content":"\\n&lt;p&gt;The error message that explains the reason for the exception.","pos":[4335,4401],"source":"\\n<p>The error message that explains the reason for the exception."},{"content":"&lt;/p&gt;\\n","pos":[4402,4408],"source":" </p>\\n"},{"pos":[4822,4864],"content":"NotImplementedException(String, Exception)","needQuote":true,"nodes":[{"content":"NotImplementedException(String, Exception)","pos":[0,42]}]},{"content":"\\n&lt;p&gt;The error message that explains the reason for the exception.","pos":[5786,5852],"source":"\\n<p>The error message that explains the reason for the exception."},{"content":"&lt;/p&gt;\\n","pos":[5853,5859],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The exception that is the cause of the current exception.","pos":[5926,5988],"source":"\\n<p>The exception that is the cause of the current exception."},{"content":"If the &lt;em&gt;inner&lt;/em&gt; parameter is not &lt;strong&gt;null&lt;/strong&gt;, the current exception is raised in a &lt;strong&gt;catch&lt;/strong&gt; block that handles the inner exception.","pos":[5989,6150],"source":" If the <em>inner</em> parameter is not <strong>null</strong>, the current exception is raised in a <strong>catch</strong> block that handles the inner exception."},{"content":"&lt;/p&gt;\\n","pos":[6151,6157],"source":" </p>\\n"},{"pos":[6354,6360],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[6491,6497],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6645,6654],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[6826,6830],"content":"Data","needQuote":true,"nodes":[{"content":"Data","pos":[0,4]}]},{"pos":[7021,7029],"content":"HelpLink","needQuote":true,"nodes":[{"content":"HelpLink","pos":[0,8]}]},{"pos":[7231,7238],"content":"HResult","needQuote":true,"nodes":[{"content":"HResult","pos":[0,7]}]},{"pos":[7444,7458],"content":"InnerException","needQuote":true,"nodes":[{"content":"InnerException","pos":[0,14]}]},{"pos":[7678,7685],"content":"Message","needQuote":true,"nodes":[{"content":"Message","pos":[0,7]}]},{"pos":[7883,7889],"content":"Source","needQuote":true,"nodes":[{"content":"Source","pos":[0,6]}]},{"pos":[8088,8098],"content":"StackTrace","needQuote":true,"nodes":[{"content":"StackTrace","pos":[0,10]}]},{"pos":[8315,8333],"content":"GetBaseException()","needQuote":true,"nodes":[{"content":"GetBaseException()","pos":[0,18]}]},{"pos":[8450,8466],"content":"GetBaseException","needQuote":true,"nodes":[{"content":"GetBaseException","pos":[0,16]}]},{"pos":[8525,8526],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8553,8554],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8635,8651],"content":"GetBaseException","needQuote":true,"nodes":[{"content":"GetBaseException","pos":[0,16]}]},{"pos":[8710,8711],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8738,8739],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8938,8948],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[9049,9057],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[9108,9109],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9136,9137],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9210,9218],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[9269,9270],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9297,9298],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9487,9501],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[9620,9626],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9693,9694],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9744,9750],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9810,9811],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9894,9900],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9967,9968],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10018,10024],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10084,10085],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10299,10321],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[10469,10475],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[10542,10543],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10593,10599],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10660,10661]},{"pos":[10716,10722],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10782,10783],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10880,10886],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[10953,10954],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11004,11010],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11071,11072]},{"pos":[11127,11133],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11193,11194],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11439,11470],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[11636,11651],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[11727,11728],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11778,11784],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11845,11846]},{"pos":[11901,11907],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11967,11968],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12074,12089],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[12165,12166],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12216,12222],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12283,12284]},{"pos":[12339,12345],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12405,12406],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12636,12649],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[12750,12761],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[12833,12834],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12861,12862],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12935,12946],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[13018,13019],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13046,13047],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13222,13231],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[13324,13331],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[13399,13400],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13427,13428],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13497,13504],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[13572,13573],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13600,13601],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13776,13793],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[13902,13917],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[13993,13994],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14021,14022],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14099,14114],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[14190,14191],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14218,14219],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14388,14394],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"items:\n- uid: System.NotImplementedException\n  commentId: T:System.NotImplementedException\n  id: NotImplementedException\n  parent: System\n  children:\n  - System.NotImplementedException.#ctor\n  - System.NotImplementedException.#ctor(System.String)\n  - System.NotImplementedException.#ctor(System.String,System.Exception)\n  langs:\n  - csharp\n  - vb\n  name: NotImplementedException\n  fullName: System.NotImplementedException\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/NotImplementedException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: NotImplementedException\n    path: src/mscorlib/src/System/NotImplementedException.cs\n    startLine: 19\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>The exception that is thrown when a requested method or operation is not implemented.</p>\\n\"\n  syntax:\n    content: >-\n      [ComVisible(true)]\n\n      [Serializable]\n\n      public class NotImplementedException : SystemException, ISerializable, _Exception\n    content.vb: >-\n      <ComVisible(True)>\n\n      <Serializable>\n\n      Public Class NotImplementedException\n          Inherits SystemException\n          Implements ISerializable, _Exception\n  seealso:\n  - type: System.Exception\n    commentId: T:System.Exception\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n  see:\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n  inheritance:\n  - System.Object\n  - System.Exception\n  inheritedMembers:\n  - System.Exception.Data\n  - System.Exception.HelpLink\n  - System.Exception.HResult\n  - System.Exception.InnerException\n  - System.Exception.Message\n  - System.Exception.Source\n  - System.Exception.StackTrace\n  - System.Exception.GetBaseException\n  - System.Exception.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: NotImplementedException\n- uid: System.NotImplementedException.#ctor\n  commentId: M:System.NotImplementedException.#ctor\n  id: '#ctor'\n  parent: System.NotImplementedException\n  langs:\n  - csharp\n  - vb\n  name: NotImplementedException()\n  fullName: System.NotImplementedException.NotImplementedException()\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/NotImplementedException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/NotImplementedException.cs\n    startLine: 23\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.NotImplementedException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with default properties.</p>\\n\"\n  syntax:\n    content: public NotImplementedException()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: NotImplementedException.NotImplementedException()\n- uid: System.NotImplementedException.#ctor(System.String)\n  commentId: M:System.NotImplementedException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.NotImplementedException\n  langs:\n  - csharp\n  - vb\n  name: NotImplementedException(String)\n  fullName: System.NotImplementedException.NotImplementedException(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/NotImplementedException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/NotImplementedException.cs\n    startLine: 27\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.NotImplementedException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified error message.</p>\\n\"\n  syntax:\n    content: public NotImplementedException(string message)\n    content.vb: Public Sub New(message As String)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>The error message that explains the reason for the exception. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: NotImplementedException.NotImplementedException(String)\n- uid: System.NotImplementedException.#ctor(System.String,System.Exception)\n  commentId: M:System.NotImplementedException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.NotImplementedException\n  langs:\n  - csharp\n  - vb\n  name: NotImplementedException(String, Exception)\n  fullName: System.NotImplementedException.NotImplementedException(System.String, System.Exception)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/NotImplementedException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/NotImplementedException.cs\n    startLine: 31\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.NotImplementedException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.</p>\\n\"\n  syntax:\n    content: public NotImplementedException(string message, Exception inner)\n    content.vb: Public Sub New(message As String, inner As Exception)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>The error message that explains the reason for the exception. </p>\\n\"\n    - id: inner\n      type: System.Exception\n      description: \"\\n<p>The exception that is the cause of the current exception. If the <em>inner</em> parameter is not <strong>null</strong>, the current exception is raised in a <strong>catch</strong> block that handles the inner exception. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: NotImplementedException.NotImplementedException(String, Exception)\nreferences:\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  fullName: System.Exception\n  nameWithType: Exception\n  commentId: T:System.Exception\n- uid: System.Exception.Data\n  parent: System.Exception\n  isExternal: false\n  name: Data\n  fullName: System.Exception.Data\n  nameWithType: Exception.Data\n  commentId: P:System.Exception.Data\n- uid: System.Exception.HelpLink\n  parent: System.Exception\n  isExternal: false\n  name: HelpLink\n  fullName: System.Exception.HelpLink\n  nameWithType: Exception.HelpLink\n  commentId: P:System.Exception.HelpLink\n- uid: System.Exception.HResult\n  parent: System.Exception\n  isExternal: false\n  name: HResult\n  fullName: System.Exception.HResult\n  nameWithType: Exception.HResult\n  commentId: P:System.Exception.HResult\n- uid: System.Exception.InnerException\n  parent: System.Exception\n  isExternal: false\n  name: InnerException\n  fullName: System.Exception.InnerException\n  nameWithType: Exception.InnerException\n  commentId: P:System.Exception.InnerException\n- uid: System.Exception.Message\n  parent: System.Exception\n  isExternal: false\n  name: Message\n  fullName: System.Exception.Message\n  nameWithType: Exception.Message\n  commentId: P:System.Exception.Message\n- uid: System.Exception.Source\n  parent: System.Exception\n  isExternal: false\n  name: Source\n  fullName: System.Exception.Source\n  nameWithType: Exception.Source\n  commentId: P:System.Exception.Source\n- uid: System.Exception.StackTrace\n  parent: System.Exception\n  isExternal: false\n  name: StackTrace\n  fullName: System.Exception.StackTrace\n  nameWithType: Exception.StackTrace\n  commentId: P:System.Exception.StackTrace\n- uid: System.Exception.GetBaseException\n  parent: System.Exception\n  isExternal: false\n  name: GetBaseException()\n  fullName: System.Exception.GetBaseException()\n  spec.csharp:\n  - uid: System.Exception.GetBaseException\n    name: GetBaseException\n    fullName: System.Exception.GetBaseException\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.GetBaseException\n    name: GetBaseException\n    fullName: System.Exception.GetBaseException\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Exception.GetBaseException()\n  commentId: M:System.Exception.GetBaseException\n- uid: System.Exception.ToString\n  parent: System.Exception\n  isExternal: false\n  name: ToString()\n  fullName: System.Exception.ToString()\n  spec.csharp:\n  - uid: System.Exception.ToString\n    name: ToString\n    fullName: System.Exception.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.ToString\n    name: ToString\n    fullName: System.Exception.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Exception.ToString()\n  commentId: M:System.Exception.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n"}