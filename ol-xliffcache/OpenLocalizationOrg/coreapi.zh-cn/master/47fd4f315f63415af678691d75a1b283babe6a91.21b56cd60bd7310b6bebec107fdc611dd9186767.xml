{"nodes":[{"pos":[425,435],"content":"SocketType","needQuote":true,"nodes":[{"content":"SocketType","pos":[0,10]}]},{"pos":[1634,1639],"content":"Dgram","needQuote":true,"nodes":[{"content":"Dgram","pos":[0,5]}]},{"pos":[3313,3316],"content":"Raw","needQuote":true,"nodes":[{"content":"Raw","pos":[0,3]}]},{"pos":[4773,4776],"content":"Rdm","needQuote":true,"nodes":[{"content":"Rdm","pos":[0,3]}]},{"pos":[6174,6183],"content":"Seqpacket","needQuote":true,"nodes":[{"content":"Seqpacket","pos":[0,9]}]},{"pos":[7496,7502],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[9020,9027],"content":"Unknown","needQuote":true,"nodes":[{"content":"Unknown","pos":[0,7]}]},{"pos":[9752,9770],"content":"System.Net.Sockets","needQuote":true,"nodes":[{"content":"System.Net.Sockets","pos":[0,18]}]},{"pos":[9965,9975],"content":"SocketType","needQuote":true,"nodes":[{"content":"SocketType","pos":[0,10]}]}],"content":"items:\n- uid: System.Net.Sockets.SocketType\n  commentId: T:System.Net.Sockets.SocketType\n  id: SocketType\n  parent: System.Net.Sockets\n  children:\n  - System.Net.Sockets.SocketType.Dgram\n  - System.Net.Sockets.SocketType.Raw\n  - System.Net.Sockets.SocketType.Rdm\n  - System.Net.Sockets.SocketType.Seqpacket\n  - System.Net.Sockets.SocketType.Stream\n  - System.Net.Sockets.SocketType.Unknown\n  langs:\n  - csharp\n  - vb\n  name: SocketType\n  fullName: System.Net.Sockets.SocketType\n  type: Enum\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SocketType\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 407\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Specifies the type of socket that an instance of the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class represents.</p>\\n\"\n  syntax:\n    content: public enum SocketType\n    content.vb: Public Enum SocketType\n  seealso:\n  - type: System.Net.Sockets.AddressFamily\n    commentId: T:System.Net.Sockets.AddressFamily\n  - type: System.Net.Sockets.ProtocolType\n    commentId: T:System.Net.Sockets.ProtocolType\n  - type: System.Net.Sockets.Socket\n    commentId: T:System.Net.Sockets.Socket\n  modifiers.csharp:\n  - public\n  - enum\n  modifiers.vb:\n  - Public\n  - Enum\n  nameWithType: SocketType\n- uid: System.Net.Sockets.SocketType.Dgram\n  commentId: F:System.Net.Sockets.SocketType.Dgram\n  id: Dgram\n  parent: System.Net.Sockets.SocketType\n  langs:\n  - csharp\n  - vb\n  name: Dgram\n  fullName: System.Net.Sockets.SocketType.Dgram\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Dgram\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 409\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Supports datagrams, which are connectionless, unreliable messages of a fixed (typically small) maximum length. Messages might be lost or duplicated and might arrive out of order. A <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of type <xref href=\\\"System.Net.Sockets.SocketType.Dgram\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> requires no connection prior to sending and receiving data, and can communicate with multiple peers. <xref href=\\\"System.Net.Sockets.SocketType.Dgram\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> uses the Datagram Protocol (<xref href=\\\"System.Net.Sockets.ProtocolType.Udp\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>) and the <xref href=\\\"System.Net.Sockets.AddressFamily.InterNetwork\\\" data-throw-if-not-resolved=\\\"false\\\"></xref><xref href=\\\"System.Net.Sockets.AddressFamily\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: Dgram = 2\n    return:\n      type: System.Net.Sockets.SocketType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketType.Dgram\n- uid: System.Net.Sockets.SocketType.Raw\n  commentId: F:System.Net.Sockets.SocketType.Raw\n  id: Raw\n  parent: System.Net.Sockets.SocketType\n  langs:\n  - csharp\n  - vb\n  name: Raw\n  fullName: System.Net.Sockets.SocketType.Raw\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Raw\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 410\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Supports access to the underlying transport protocol. Using the <xref href=\\\"System.Net.Sockets.SocketType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref><xref href=\\\"System.Net.Sockets.SocketType.Raw\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, you can communicate using protocols like Internet Control Message Protocol (<xref href=\\\"System.Net.Sockets.ProtocolType.Icmp\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>) and Internet Group Management Protocol (<xref href=\\\"System.Net.Sockets.ProtocolType.Igmp\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>). Your application must provide a complete IP header when sending. Received datagrams return with the IP header and options intact.</p>\\n\"\n  syntax:\n    content: Raw = 3\n    return:\n      type: System.Net.Sockets.SocketType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketType.Raw\n- uid: System.Net.Sockets.SocketType.Rdm\n  commentId: F:System.Net.Sockets.SocketType.Rdm\n  id: Rdm\n  parent: System.Net.Sockets.SocketType\n  langs:\n  - csharp\n  - vb\n  name: Rdm\n  fullName: System.Net.Sockets.SocketType.Rdm\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Rdm\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 411\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Supports connectionless, message-oriented, reliably delivered messages, and preserves message boundaries in data. Rdm (Reliably Delivered Messages) messages arrive unduplicated and in order. Furthermore, the sender is notified if messages are lost. If you initialize a <strong>Socket</strong> using <xref href=\\\"System.Net.Sockets.SocketType.Rdm\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, you do not require a remote host connection before sending and receiving data. With <xref href=\\\"System.Net.Sockets.SocketType.Rdm\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, you can communicate with multiple peers.</p>\\n\"\n  syntax:\n    content: Rdm = 4\n    return:\n      type: System.Net.Sockets.SocketType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketType.Rdm\n- uid: System.Net.Sockets.SocketType.Seqpacket\n  commentId: F:System.Net.Sockets.SocketType.Seqpacket\n  id: Seqpacket\n  parent: System.Net.Sockets.SocketType\n  langs:\n  - csharp\n  - vb\n  name: Seqpacket\n  fullName: System.Net.Sockets.SocketType.Seqpacket\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Seqpacket\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 412\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Provides connection-oriented and reliable two-way transfer of ordered byte streams across a network. <xref href=\\\"System.Net.Sockets.SocketType.Seqpacket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> does not duplicate data, and it preserves boundaries within the data stream. A <strong>Socket</strong> of type <xref href=\\\"System.Net.Sockets.SocketType.Seqpacket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> communicates with a single peer and requires a remote host connection before communication can begin.</p>\\n\"\n  syntax:\n    content: Seqpacket = 5\n    return:\n      type: System.Net.Sockets.SocketType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketType.Seqpacket\n- uid: System.Net.Sockets.SocketType.Stream\n  commentId: F:System.Net.Sockets.SocketType.Stream\n  id: Stream\n  parent: System.Net.Sockets.SocketType\n  langs:\n  - csharp\n  - vb\n  name: Stream\n  fullName: System.Net.Sockets.SocketType.Stream\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Stream\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 413\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Supports reliable, two-way, connection-based byte streams without the duplication of data and without preservation of boundaries. A <strong>Socket</strong> of this type communicates with a single peer and requires a remote host connection before communication can begin. <xref href=\\\"System.Net.Sockets.SocketType.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> uses the Transmission Control Protocol (<xref href=\\\"System.Net.Sockets.ProtocolType.Tcp\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>) <xref href=\\\"System.Net.Sockets.ProtocolType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and the <strong>InterNetwork</strong><xref href=\\\"System.Net.Sockets.AddressFamily\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: Stream = 1\n    return:\n      type: System.Net.Sockets.SocketType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketType.Stream\n- uid: System.Net.Sockets.SocketType.Unknown\n  commentId: F:System.Net.Sockets.SocketType.Unknown\n  id: Unknown\n  parent: System.Net.Sockets.SocketType\n  langs:\n  - csharp\n  - vb\n  name: Unknown\n  fullName: System.Net.Sockets.SocketType.Unknown\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Unknown\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 414\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Specifies an unknown <strong>Socket</strong> type.</p>\\n\"\n  syntax:\n    content: Unknown = -1\n    return:\n      type: System.Net.Sockets.SocketType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketType.Unknown\nreferences:\n- uid: System.Net.Sockets\n  isExternal: false\n  name: System.Net.Sockets\n  fullName: System.Net.Sockets\n  commentId: N:System.Net.Sockets\n  nameWithType: System.Net.Sockets\n- uid: System.Net.Sockets.SocketType\n  parent: System.Net.Sockets\n  isExternal: false\n  name: SocketType\n  fullName: System.Net.Sockets.SocketType\n  commentId: T:System.Net.Sockets.SocketType\n  nameWithType: SocketType\n"}