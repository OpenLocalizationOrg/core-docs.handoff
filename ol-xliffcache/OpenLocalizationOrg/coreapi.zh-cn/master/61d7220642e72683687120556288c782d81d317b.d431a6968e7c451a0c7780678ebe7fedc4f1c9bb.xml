{"nodes":[{"pos":[473,493],"content":"FixedBufferAttribute","needQuote":true,"nodes":[{"content":"FixedBufferAttribute","pos":[0,20]}]},{"pos":[2077,2086],"content":"Inherited","needQuote":true,"nodes":[{"content":"Inherited","pos":[0,9]}]},{"pos":[2608,2641],"content":"FixedBufferAttribute(Type, Int32)","needQuote":true,"nodes":[{"content":"FixedBufferAttribute(Type, Int32)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;The type of the elements contained in the buffer.&lt;/p&gt;\\n","pos":[3559,3619],"source":"\\n<p>The type of the elements contained in the buffer.</p>\\n"},{"content":"\\n&lt;p&gt;The number of elements in the buffer.&lt;/p&gt;\\n","pos":[3683,3731],"source":"\\n<p>The number of elements in the buffer.</p>\\n"},{"pos":[4130,4141],"content":"ElementType","needQuote":true,"nodes":[{"content":"ElementType","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The type of the elements.&lt;/p&gt;\\n","pos":[4891,4927],"source":"\\n<p>The type of the elements.</p>\\n"},{"pos":[5310,5316],"content":"Length","needQuote":true,"nodes":[{"content":"Length","pos":[0,6]}]},{"content":"\\n&lt;p&gt;The number of elements in the fixed buffer.&lt;/p&gt;\\n","pos":[6037,6091],"source":"\\n<p>The number of elements in the fixed buffer.</p>\\n"},{"pos":[6295,6326],"content":"System.Runtime.CompilerServices","needQuote":true,"nodes":[{"content":"System.Runtime.CompilerServices","pos":[0,31]}]},{"pos":[6532,6538],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6686,6695],"content":"Attribute","needQuote":true,"nodes":[{"content":"Attribute","pos":[0,9]}]},{"pos":[6883,6897],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[7022,7028],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7077,7078],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7128,7134],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7194,7195],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7281,7287],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7336,7337],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7387,7393],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7453,7454],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7657,7670],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[7777,7788],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[7842,7843],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7870,7871],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7947,7958],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[8012,8013],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8040,8041],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8223,8233],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[8328,8336],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[8405,8406],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8433,8434],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8504,8512],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[8581,8582],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8609,8610],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8807,8829],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[8977,8983],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9050,9051],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9101,9107],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9168,9169]},{"pos":[9224,9230],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9290,9291],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9388,9394],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9461,9462],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9512,9518],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9579,9580]},{"pos":[9635,9641],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9701,9702],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9947,9978],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[10144,10159],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[10235,10236],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10286,10292],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10353,10354]},{"pos":[10409,10415],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10475,10476],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10582,10597],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[10673,10674],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10724,10730],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10791,10792]},{"pos":[10847,10853],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10913,10914],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11140,11149],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[11242,11249],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[11317,11318],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11345,11346],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11415,11422],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[11490,11491],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11518,11519],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11694,11711],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[11820,11835],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[11911,11912],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11939,11940],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12017,12032],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[12108,12109],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12136,12137],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12282,12288],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[12417,12421],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[12559,12564],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"items:\n- uid: System.Runtime.CompilerServices.FixedBufferAttribute\n  commentId: T:System.Runtime.CompilerServices.FixedBufferAttribute\n  id: FixedBufferAttribute\n  parent: System.Runtime.CompilerServices\n  children:\n  - System.Runtime.CompilerServices.FixedBufferAttribute.#ctor(System.Type,System.Int32)\n  - System.Runtime.CompilerServices.FixedBufferAttribute.ElementType\n  - System.Runtime.CompilerServices.FixedBufferAttribute.Length\n  langs:\n  - csharp\n  - vb\n  name: FixedBufferAttribute\n  fullName: System.Runtime.CompilerServices.FixedBufferAttribute\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/FixedBufferAttribute.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: FixedBufferAttribute\n    path: src/mscorlib/src/System/Runtime/CompilerServices/FixedBufferAttribute.cs\n    startLine: 18\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Indicates that a field should be treated as containing a fixed number of elements of the specified primitive type. This class cannot be inherited. </p>\\n\"\n  syntax:\n    content: >-\n      [AttributeUsage(AttributeTargets.Field, Inherited = false)]\n\n      public sealed class FixedBufferAttribute : Attribute, _Attribute\n    content.vb: >-\n      <AttributeUsage(AttributeTargets.Field, Inherited:=False)>\n\n      Public NotInheritable Class FixedBufferAttribute\n          Inherits Attribute\n          Implements _Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetHashCode\n  - System.Object.ToString\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  attributes:\n  - type: System.AttributeUsageAttribute\n    ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)\n    arguments:\n    - type: System.AttributeTargets\n      value: 256\n    namedArguments:\n    - name: Inherited\n      type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: FixedBufferAttribute\n- uid: System.Runtime.CompilerServices.FixedBufferAttribute.#ctor(System.Type,System.Int32)\n  commentId: M:System.Runtime.CompilerServices.FixedBufferAttribute.#ctor(System.Type,System.Int32)\n  id: '#ctor(System.Type,System.Int32)'\n  parent: System.Runtime.CompilerServices.FixedBufferAttribute\n  langs:\n  - csharp\n  - vb\n  name: FixedBufferAttribute(Type, Int32)\n  fullName: System.Runtime.CompilerServices.FixedBufferAttribute.FixedBufferAttribute(System.Type, System.Int32)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/FixedBufferAttribute.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Runtime/CompilerServices/FixedBufferAttribute.cs\n    startLine: 24\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Runtime.CompilerServices.FixedBufferAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class. </p>\\n\"\n  syntax:\n    content: public FixedBufferAttribute(Type elementType, int length)\n    content.vb: Public Sub New(elementType As Type, length As Integer)\n    parameters:\n    - id: elementType\n      type: System.Type\n      description: \"\\n<p>The type of the elements contained in the buffer.</p>\\n\"\n    - id: length\n      type: System.Int32\n      description: \"\\n<p>The number of elements in the buffer.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FixedBufferAttribute.FixedBufferAttribute(Type, Int32)\n- uid: System.Runtime.CompilerServices.FixedBufferAttribute.ElementType\n  commentId: P:System.Runtime.CompilerServices.FixedBufferAttribute.ElementType\n  id: ElementType\n  parent: System.Runtime.CompilerServices.FixedBufferAttribute\n  langs:\n  - csharp\n  - vb\n  name: ElementType\n  fullName: System.Runtime.CompilerServices.FixedBufferAttribute.ElementType\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/FixedBufferAttribute.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ElementType\n    path: src/mscorlib/src/System/Runtime/CompilerServices/FixedBufferAttribute.cs\n    startLine: 30\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Gets the type of the elements contained in the fixed buffer. </p>\\n\"\n  syntax:\n    content: public Type ElementType { get; }\n    content.vb: Public ReadOnly Property ElementType As Type\n    parameters: []\n    return:\n      type: System.Type\n      description: \"\\n<p>The type of the elements.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: FixedBufferAttribute.ElementType\n- uid: System.Runtime.CompilerServices.FixedBufferAttribute.Length\n  commentId: P:System.Runtime.CompilerServices.FixedBufferAttribute.Length\n  id: Length\n  parent: System.Runtime.CompilerServices.FixedBufferAttribute\n  langs:\n  - csharp\n  - vb\n  name: Length\n  fullName: System.Runtime.CompilerServices.FixedBufferAttribute.Length\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/FixedBufferAttribute.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Length\n    path: src/mscorlib/src/System/Runtime/CompilerServices/FixedBufferAttribute.cs\n    startLine: 36\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Gets the number of elements in the fixed buffer. </p>\\n\"\n  syntax:\n    content: public int Length { get; }\n    content.vb: Public ReadOnly Property Length As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of elements in the fixed buffer.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: FixedBufferAttribute.Length\nreferences:\n- uid: System.Runtime.CompilerServices\n  isExternal: false\n  name: System.Runtime.CompilerServices\n  fullName: System.Runtime.CompilerServices\n  nameWithType: System.Runtime.CompilerServices\n  commentId: N:System.Runtime.CompilerServices\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  fullName: System.Attribute\n  nameWithType: Attribute\n  commentId: T:System.Attribute\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Attribute.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Attribute.Equals(System.Object)\n    name: Equals\n    fullName: System.Attribute.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Attribute.Equals(System.Object)\n    name: Equals\n    fullName: System.Attribute.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Attribute.Equals(Object)\n  commentId: M:System.Attribute.Equals(System.Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.Attribute.GetHashCode()\n  spec.csharp:\n  - uid: System.Attribute.GetHashCode\n    name: GetHashCode\n    fullName: System.Attribute.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Attribute.GetHashCode\n    name: GetHashCode\n    fullName: System.Attribute.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Attribute.GetHashCode()\n  commentId: M:System.Attribute.GetHashCode\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  nameWithType: Type\n  commentId: T:System.Type\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n"}