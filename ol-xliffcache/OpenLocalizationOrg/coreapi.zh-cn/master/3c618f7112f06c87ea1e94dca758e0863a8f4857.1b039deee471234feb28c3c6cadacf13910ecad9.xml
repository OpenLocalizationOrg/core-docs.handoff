{"nodes":[{"pos":[1296,1312],"content":"XmlParserContext","needQuote":true,"nodes":[{"content":"XmlParserContext","pos":[0,16]}]},{"pos":[3087,3196],"content":"XmlParserContext(XmlNameTable, XmlNamespaceManager, String, String, String, String, String, String, XmlSpace)","needQuote":true,"nodes":[{"content":"XmlParserContext(XmlNameTable, XmlNamespaceManager, String, String, String, String, String, String, XmlSpace)","pos":[0,109]}]},{"content":"\\n&lt;p&gt;The name of the document type declaration.","pos":[5371,5418],"source":"\\n<p>The name of the document type declaration."},{"content":"&lt;/p&gt;\\n","pos":[5419,5425],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The public identifier.","pos":[5489,5516],"source":"\\n<p>The public identifier."},{"content":"&lt;/p&gt;\\n","pos":[5517,5523],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The system identifier.","pos":[5587,5614],"source":"\\n<p>The system identifier."},{"content":"&lt;/p&gt;\\n","pos":[5615,5621],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The internal DTD subset.","pos":[5694,5723],"source":"\\n<p>The internal DTD subset."},{"content":"The DTD subset is used for entity resolution, not for document validation.&lt;/p&gt;\\n","pos":[5724,5804],"source":" The DTD subset is used for entity resolution, not for document validation.</p>\\n"},{"content":"\\n&lt;p&gt;The base URI for the XML fragment (the location from which the fragment was loaded).","pos":[5870,5959],"source":"\\n<p>The base URI for the XML fragment (the location from which the fragment was loaded)."},{"content":"&lt;/p&gt;\\n","pos":[5960,5966],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;strong&gt;xml:lang&lt;/strong&gt; scope.","pos":[6032,6073],"source":"\\n<p>The <strong>xml:lang</strong> scope."},{"content":"&lt;/p&gt;\\n","pos":[6074,6080],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;nt&lt;/em&gt; is not the same &lt;strong&gt;XmlNameTable&lt;/strong&gt; used to construct &lt;em&gt;nsMgr&lt;/em&gt;.","pos":[6411,6509],"source":"\\n<p>\\n<em>nt</em> is not the same <strong>XmlNameTable</strong> used to construct <em>nsMgr</em>."},{"content":"&lt;/p&gt;\\n","pos":[6510,6516],"source":" </p>\\n"},{"pos":[7439,7558],"content":"XmlParserContext(XmlNameTable, XmlNamespaceManager, String, String, String, String, String, String, XmlSpace, Encoding)","needQuote":true,"nodes":[{"content":"XmlParserContext(XmlNameTable, XmlNamespaceManager, String, String, String, String, String, String, XmlSpace, Encoding)","pos":[0,119]}]},{"content":"\\n&lt;p&gt;The name of the document type declaration.","pos":[9796,9843],"source":"\\n<p>The name of the document type declaration."},{"content":"&lt;/p&gt;\\n","pos":[9844,9850],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The public identifier.","pos":[9914,9941],"source":"\\n<p>The public identifier."},{"content":"&lt;/p&gt;\\n","pos":[9942,9948],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The system identifier.","pos":[10012,10039],"source":"\\n<p>The system identifier."},{"content":"&lt;/p&gt;\\n","pos":[10040,10046],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The internal DTD subset.","pos":[10119,10148],"source":"\\n<p>The internal DTD subset."},{"content":"The DTD is used for entity resolution, not for document validation.&lt;/p&gt;\\n","pos":[10149,10222],"source":" The DTD is used for entity resolution, not for document validation.</p>\\n"},{"content":"\\n&lt;p&gt;The base URI for the XML fragment (the location from which the fragment was loaded).","pos":[10288,10377],"source":"\\n<p>The base URI for the XML fragment (the location from which the fragment was loaded)."},{"content":"&lt;/p&gt;\\n","pos":[10378,10384],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;strong&gt;xml:lang&lt;/strong&gt; scope.","pos":[10450,10491],"source":"\\n<p>The <strong>xml:lang</strong> scope."},{"content":"&lt;/p&gt;\\n","pos":[10492,10498],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;nt&lt;/em&gt; is not the same &lt;strong&gt;XmlNameTable&lt;/strong&gt; used to construct &lt;em&gt;nsMgr&lt;/em&gt;.","pos":[11033,11131],"source":"\\n<p>\\n<em>nt</em> is not the same <strong>XmlNameTable</strong> used to construct <em>nsMgr</em>."},{"content":"&lt;/p&gt;\\n","pos":[11132,11138],"source":" </p>\\n"},{"pos":[11798,11867],"content":"XmlParserContext(XmlNameTable, XmlNamespaceManager, String, XmlSpace)","needQuote":true,"nodes":[{"content":"XmlParserContext(XmlNameTable, XmlNamespaceManager, String, XmlSpace)","pos":[0,69]}]},{"content":"\\n&lt;p&gt;The &lt;strong&gt;xml:lang&lt;/strong&gt; scope.","pos":[13749,13790],"source":"\\n<p>The <strong>xml:lang</strong> scope."},{"content":"&lt;/p&gt;\\n","pos":[13791,13797],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;nt&lt;/em&gt; is not the same &lt;strong&gt;XmlNameTable&lt;/strong&gt; used to construct &lt;em&gt;nsMgr&lt;/em&gt;.","pos":[14128,14226],"source":"\\n<p>\\n<em>nt</em> is not the same <strong>XmlNameTable</strong> used to construct <em>nsMgr</em>."},{"content":"&lt;/p&gt;\\n","pos":[14227,14233],"source":" </p>\\n"},{"pos":[14906,14985],"content":"XmlParserContext(XmlNameTable, XmlNamespaceManager, String, XmlSpace, Encoding)","needQuote":true,"nodes":[{"content":"XmlParserContext(XmlNameTable, XmlNamespaceManager, String, XmlSpace, Encoding)","pos":[0,79]}]},{"content":"\\n&lt;p&gt;The &lt;strong&gt;xml:lang&lt;/strong&gt; scope.","pos":[16920,16961],"source":"\\n<p>The <strong>xml:lang</strong> scope."},{"content":"&lt;/p&gt;\\n","pos":[16962,16968],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;nt&lt;/em&gt; is not the same &lt;strong&gt;XmlNameTable&lt;/strong&gt; used to construct &lt;em&gt;nsMgr&lt;/em&gt;.","pos":[17503,17601],"source":"\\n<p>\\n<em>nt</em> is not the same <strong>XmlNameTable</strong> used to construct <em>nsMgr</em>."},{"content":"&lt;/p&gt;\\n","pos":[17602,17608],"source":" </p>\\n"},{"pos":[17962,17969],"content":"BaseURI","needQuote":true,"nodes":[{"content":"BaseURI","pos":[0,7]}]},{"content":"\\n&lt;p&gt;The base URI to use to resolve the DTD file.&lt;/p&gt;\\n","pos":[18605,18660],"source":"\\n<p>The base URI to use to resolve the DTD file.</p>\\n"},{"pos":[18970,18981],"content":"DocTypeName","needQuote":true,"nodes":[{"content":"DocTypeName","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The name of the document type declaration.&lt;/p&gt;\\n","pos":[19662,19715],"source":"\\n<p>The name of the document type declaration.</p>\\n"},{"pos":[20020,20028],"content":"Encoding","needQuote":true,"nodes":[{"content":"Encoding","pos":[0,8]}]},{"pos":[21135,21149],"content":"InternalSubset","needQuote":true,"nodes":[{"content":"InternalSubset","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The internal DTD subset.","pos":[21824,21853],"source":"\\n<p>The internal DTD subset."},{"content":"For example, this property returns everything between the square brackets &lt;code&gt;&lt;!DOCTYPE doc [...]&gt;&lt;/code&gt;.&lt;/p&gt;\\n","pos":[21854,21968],"source":" For example, this property returns everything between the square brackets <code><!DOCTYPE doc [...]></code>.</p>\\n"},{"pos":[22300,22316],"content":"NamespaceManager","needQuote":true,"nodes":[{"content":"NamespaceManager","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The &lt;strong&gt;XmlNamespaceManager&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[23113,23165],"source":"\\n<p>The <strong>XmlNamespaceManager</strong>.</p>\\n"},{"pos":[23478,23487],"content":"NameTable","needQuote":true,"nodes":[{"content":"NameTable","pos":[0,9]}]},{"content":"\\n&lt;p&gt;The &lt;strong&gt;XmlNameTable&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[24375,24420],"source":"\\n<p>The <strong>XmlNameTable</strong>.</p>\\n"},{"pos":[24723,24731],"content":"PublicId","needQuote":true,"nodes":[{"content":"PublicId","pos":[0,8]}]},{"content":"\\n&lt;p&gt;The public identifier.&lt;/p&gt;\\n","pos":[25380,25413],"source":"\\n<p>The public identifier.</p>\\n"},{"pos":[25715,25723],"content":"SystemId","needQuote":true,"nodes":[{"content":"SystemId","pos":[0,8]}]},{"content":"\\n&lt;p&gt;The system identifier.&lt;/p&gt;\\n","pos":[26372,26405],"source":"\\n<p>The system identifier.</p>\\n"},{"pos":[26704,26711],"content":"XmlLang","needQuote":true,"nodes":[{"content":"XmlLang","pos":[0,7]}]},{"content":"\\n&lt;p&gt;The current &lt;strong&gt;xml:lang&lt;/strong&gt; scope.","pos":[27378,27427],"source":"\\n<p>The current <strong>xml:lang</strong> scope."},{"content":"If there is no &lt;strong&gt;xml:lang&lt;/strong&gt; in scope, &lt;strong&gt;String.Empty&lt;/strong&gt; is returned.&lt;/p&gt;\\n","pos":[27428,27527],"source":" If there is no <strong>xml:lang</strong> in scope, <strong>String.Empty</strong> is returned.</p>\\n"},{"pos":[27828,27836],"content":"XmlSpace","needQuote":true,"nodes":[{"content":"XmlSpace","pos":[0,8]}]},{"pos":[28842,28852],"content":"System.Xml","needQuote":true,"nodes":[{"content":"System.Xml","pos":[0,10]}]},{"pos":[28995,29001],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[29161,29171],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[29266,29274],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[29343,29344],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29371,29372],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29442,29450],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[29519,29520],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29547,29548],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29731,29745],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[29864,29870],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[29937,29938],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29988,29994],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[30054,30055],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30138,30144],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[30211,30212],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30262,30268],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[30328,30329],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30543,30565],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[30713,30719],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[30786,30787],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30837,30843],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[30904,30905]},{"pos":[30960,30966],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[31026,31027],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31124,31130],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[31197,31198],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31248,31254],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[31315,31316]},{"pos":[31371,31377],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[31437,31438],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31683,31714],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[31880,31895],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[31971,31972],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32022,32028],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[32089,32090]},{"pos":[32145,32151],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[32211,32212],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32318,32333],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[32409,32410],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32460,32466],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[32527,32528]},{"pos":[32583,32589],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[32649,32650],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32880,32893],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[32994,33005],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[33077,33078],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33105,33106],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33179,33190],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[33262,33263],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33290,33291],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33466,33475],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[33568,33575],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[33643,33644],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33671,33672],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33741,33748],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[33816,33817],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33844,33845],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34020,34037],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[34146,34161],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[34237,34238],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34265,34266],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34343,34358],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[34434,34435],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34462,34463],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34608,34614],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[34759,34771],"content":"XmlNameTable","needQuote":true,"nodes":[{"content":"XmlNameTable","pos":[0,12]}]},{"pos":[34963,34982],"content":"XmlNamespaceManager","needQuote":true,"nodes":[{"content":"XmlNamespaceManager","pos":[0,19]}]},{"pos":[35174,35180],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[35335,35343],"content":"XmlSpace","needQuote":true,"nodes":[{"content":"XmlSpace","pos":[0,8]}]},{"pos":[35514,35522],"content":"Encoding","needQuote":true,"nodes":[{"content":"Encoding","pos":[0,8]}]},{"pos":[35664,35675],"content":"System.Text","needQuote":true,"nodes":[{"content":"System.Text","pos":[0,11]}]},{"pos":[35814,35826],"content":"XmlException","needQuote":true,"nodes":[{"content":"XmlException","pos":[0,12]}]}],"content":"items:\n- uid: System.Xml.XmlParserContext\n  commentId: T:System.Xml.XmlParserContext\n  id: XmlParserContext\n  parent: System.Xml\n  children:\n  - System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace)\n  - System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace,System.Text.Encoding)\n  - System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace)\n  - System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace,System.Text.Encoding)\n  - System.Xml.XmlParserContext.BaseURI\n  - System.Xml.XmlParserContext.DocTypeName\n  - System.Xml.XmlParserContext.Encoding\n  - System.Xml.XmlParserContext.InternalSubset\n  - System.Xml.XmlParserContext.NamespaceManager\n  - System.Xml.XmlParserContext.NameTable\n  - System.Xml.XmlParserContext.PublicId\n  - System.Xml.XmlParserContext.SystemId\n  - System.Xml.XmlParserContext.XmlLang\n  - System.Xml.XmlParserContext.XmlSpace\n  langs:\n  - csharp\n  - vb\n  name: XmlParserContext\n  fullName: System.Xml.XmlParserContext\n  type: Class\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: XmlParserContext\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 196\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Provides all the context information required by the <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to parse an XML fragment.</p>\\n\"\n  syntax:\n    content: public class XmlParserContext\n    content.vb: Public Class XmlParserContext\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: XmlParserContext\n- uid: System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace)\n  commentId: M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace)\n  id: '#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace)'\n  parent: System.Xml.XmlParserContext\n  langs:\n  - csharp\n  - vb\n  name: XmlParserContext(XmlNameTable, XmlNamespaceManager, String, String, String, String, String, String, XmlSpace)\n  fullName: System.Xml.XmlParserContext.XmlParserContext(System.Xml.XmlNameTable, System.Xml.XmlNamespaceManager, System.String, System.String, System.String, System.String, System.String, System.String, System.Xml.XmlSpace)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 198\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Initializes a new instance of the <strong>XmlParserContext</strong> class with the specified <xref href=\\\"System.Xml.XmlNameTable\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Xml.XmlNamespaceManager\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, base URI, <strong>xml:lang</strong>, <strong>xml:space</strong>, and document type values.</p>\\n\"\n  syntax:\n    content: public XmlParserContext(XmlNameTable nt, XmlNamespaceManager nsMgr, string docTypeName, string pubId, string sysId, string internalSubset, string baseURI, string xmlLang, XmlSpace xmlSpace)\n    content.vb: Public Sub New(nt As XmlNameTable, nsMgr As XmlNamespaceManager, docTypeName As String, pubId As String, sysId As String, internalSubset As String, baseURI As String, xmlLang As String, xmlSpace As XmlSpace)\n    parameters:\n    - id: nt\n      type: System.Xml.XmlNameTable\n      description: \"\\n<p>The <xref href=\\\"System.Xml.XmlNameTable\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to use to atomize strings. If this is <strong>null</strong>, the name table used to construct the <em>nsMgr</em> is used instead. For more information about atomized strings, see <xref href=\\\"System.Xml.XmlNameTable\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n    - id: nsMgr\n      type: System.Xml.XmlNamespaceManager\n      description: \"\\n<p>The <xref href=\\\"System.Xml.XmlNamespaceManager\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to use for looking up namespace information, or <strong>null</strong>. </p>\\n\"\n    - id: docTypeName\n      type: System.String\n      description: \"\\n<p>The name of the document type declaration. </p>\\n\"\n    - id: pubId\n      type: System.String\n      description: \"\\n<p>The public identifier. </p>\\n\"\n    - id: sysId\n      type: System.String\n      description: \"\\n<p>The system identifier. </p>\\n\"\n    - id: internalSubset\n      type: System.String\n      description: \"\\n<p>The internal DTD subset. The DTD subset is used for entity resolution, not for document validation.</p>\\n\"\n    - id: baseURI\n      type: System.String\n      description: \"\\n<p>The base URI for the XML fragment (the location from which the fragment was loaded). </p>\\n\"\n    - id: xmlLang\n      type: System.String\n      description: \"\\n<p>The <strong>xml:lang</strong> scope. </p>\\n\"\n    - id: xmlSpace\n      type: System.Xml.XmlSpace\n      description: \"\\n<p>An <xref href=\\\"System.Xml.XmlSpace\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value indicating the <strong>xml:space</strong> scope. </p>\\n\"\n  exceptions:\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>\\n<em>nt</em> is not the same <strong>XmlNameTable</strong> used to construct <em>nsMgr</em>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlParserContext.XmlParserContext(XmlNameTable, XmlNamespaceManager, String, String, String, String, String, String, XmlSpace)\n- uid: System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace,System.Text.Encoding)\n  commentId: M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace,System.Text.Encoding)\n  id: '#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace,System.Text.Encoding)'\n  parent: System.Xml.XmlParserContext\n  langs:\n  - csharp\n  - vb\n  name: XmlParserContext(XmlNameTable, XmlNamespaceManager, String, String, String, String, String, String, XmlSpace, Encoding)\n  fullName: System.Xml.XmlParserContext.XmlParserContext(System.Xml.XmlNameTable, System.Xml.XmlNamespaceManager, System.String, System.String, System.String, System.String, System.String, System.String, System.Xml.XmlSpace, System.Text.Encoding)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 199\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Initializes a new instance of the <strong>XmlParserContext</strong> class with the specified <xref href=\\\"System.Xml.XmlNameTable\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Xml.XmlNamespaceManager\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, base URI, <strong>xml:lang</strong>, <strong>xml:space</strong>, encoding, and document type values.</p>\\n\"\n  syntax:\n    content: public XmlParserContext(XmlNameTable nt, XmlNamespaceManager nsMgr, string docTypeName, string pubId, string sysId, string internalSubset, string baseURI, string xmlLang, XmlSpace xmlSpace, Encoding enc)\n    content.vb: Public Sub New(nt As XmlNameTable, nsMgr As XmlNamespaceManager, docTypeName As String, pubId As String, sysId As String, internalSubset As String, baseURI As String, xmlLang As String, xmlSpace As XmlSpace, enc As Encoding)\n    parameters:\n    - id: nt\n      type: System.Xml.XmlNameTable\n      description: \"\\n<p>The <xref href=\\\"System.Xml.XmlNameTable\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to use to atomize strings. If this is <strong>null</strong>, the name table used to construct the <em>nsMgr</em> is used instead. For more information about atomized strings, see <xref href=\\\"System.Xml.XmlNameTable\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n    - id: nsMgr\n      type: System.Xml.XmlNamespaceManager\n      description: \"\\n<p>The <xref href=\\\"System.Xml.XmlNamespaceManager\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to use for looking up namespace information, or <strong>null</strong>. </p>\\n\"\n    - id: docTypeName\n      type: System.String\n      description: \"\\n<p>The name of the document type declaration. </p>\\n\"\n    - id: pubId\n      type: System.String\n      description: \"\\n<p>The public identifier. </p>\\n\"\n    - id: sysId\n      type: System.String\n      description: \"\\n<p>The system identifier. </p>\\n\"\n    - id: internalSubset\n      type: System.String\n      description: \"\\n<p>The internal DTD subset. The DTD is used for entity resolution, not for document validation.</p>\\n\"\n    - id: baseURI\n      type: System.String\n      description: \"\\n<p>The base URI for the XML fragment (the location from which the fragment was loaded). </p>\\n\"\n    - id: xmlLang\n      type: System.String\n      description: \"\\n<p>The <strong>xml:lang</strong> scope. </p>\\n\"\n    - id: xmlSpace\n      type: System.Xml.XmlSpace\n      description: \"\\n<p>An <xref href=\\\"System.Xml.XmlSpace\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value indicating the <strong>xml:space</strong> scope. </p>\\n\"\n    - id: enc\n      type: System.Text.Encoding\n      description: \"\\n<p>An <xref href=\\\"System.Text.Encoding\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object indicating the encoding setting. </p>\\n\"\n  exceptions:\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>\\n<em>nt</em> is not the same <strong>XmlNameTable</strong> used to construct <em>nsMgr</em>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlParserContext.XmlParserContext(XmlNameTable, XmlNamespaceManager, String, String, String, String, String, String, XmlSpace, Encoding)\n- uid: System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace)\n  commentId: M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace)\n  id: '#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace)'\n  parent: System.Xml.XmlParserContext\n  langs:\n  - csharp\n  - vb\n  name: XmlParserContext(XmlNameTable, XmlNamespaceManager, String, XmlSpace)\n  fullName: System.Xml.XmlParserContext.XmlParserContext(System.Xml.XmlNameTable, System.Xml.XmlNamespaceManager, System.String, System.Xml.XmlSpace)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 200\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Initializes a new instance of the <strong>XmlParserContext</strong> class with the specified <xref href=\\\"System.Xml.XmlNameTable\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Xml.XmlNamespaceManager\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <strong>xml:lang</strong>, and <strong>xml:space</strong> values.</p>\\n\"\n  syntax:\n    content: public XmlParserContext(XmlNameTable nt, XmlNamespaceManager nsMgr, string xmlLang, XmlSpace xmlSpace)\n    content.vb: Public Sub New(nt As XmlNameTable, nsMgr As XmlNamespaceManager, xmlLang As String, xmlSpace As XmlSpace)\n    parameters:\n    - id: nt\n      type: System.Xml.XmlNameTable\n      description: \"\\n<p>The <xref href=\\\"System.Xml.XmlNameTable\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to use to atomize strings. If this is <strong>null</strong>, the name table used to construct the <em>nsMgr</em> is used instead. For more information about atomized strings, see <xref href=\\\"System.Xml.XmlNameTable\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n    - id: nsMgr\n      type: System.Xml.XmlNamespaceManager\n      description: \"\\n<p>The <xref href=\\\"System.Xml.XmlNamespaceManager\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to use for looking up namespace information, or <strong>null</strong>. </p>\\n\"\n    - id: xmlLang\n      type: System.String\n      description: \"\\n<p>The <strong>xml:lang</strong> scope. </p>\\n\"\n    - id: xmlSpace\n      type: System.Xml.XmlSpace\n      description: \"\\n<p>An <xref href=\\\"System.Xml.XmlSpace\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value indicating the <strong>xml:space</strong> scope. </p>\\n\"\n  exceptions:\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>\\n<em>nt</em> is not the same <strong>XmlNameTable</strong> used to construct <em>nsMgr</em>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlParserContext.XmlParserContext(XmlNameTable, XmlNamespaceManager, String, XmlSpace)\n- uid: System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace,System.Text.Encoding)\n  commentId: M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace,System.Text.Encoding)\n  id: '#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace,System.Text.Encoding)'\n  parent: System.Xml.XmlParserContext\n  langs:\n  - csharp\n  - vb\n  name: XmlParserContext(XmlNameTable, XmlNamespaceManager, String, XmlSpace, Encoding)\n  fullName: System.Xml.XmlParserContext.XmlParserContext(System.Xml.XmlNameTable, System.Xml.XmlNamespaceManager, System.String, System.Xml.XmlSpace, System.Text.Encoding)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 201\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Initializes a new instance of the <strong>XmlParserContext</strong> class with the specified <xref href=\\\"System.Xml.XmlNameTable\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Xml.XmlNamespaceManager\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <strong>xml:lang</strong>, <strong>xml:space</strong>, and encoding.</p>\\n\"\n  syntax:\n    content: public XmlParserContext(XmlNameTable nt, XmlNamespaceManager nsMgr, string xmlLang, XmlSpace xmlSpace, Encoding enc)\n    content.vb: Public Sub New(nt As XmlNameTable, nsMgr As XmlNamespaceManager, xmlLang As String, xmlSpace As XmlSpace, enc As Encoding)\n    parameters:\n    - id: nt\n      type: System.Xml.XmlNameTable\n      description: \"\\n<p>The <xref href=\\\"System.Xml.XmlNameTable\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to use to atomize strings. If this is <strong>null</strong>, the name table used to construct the <em>nsMgr</em> is used instead. For more information on atomized strings, see <xref href=\\\"System.Xml.XmlNameTable\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n    - id: nsMgr\n      type: System.Xml.XmlNamespaceManager\n      description: \"\\n<p>The <xref href=\\\"System.Xml.XmlNamespaceManager\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to use for looking up namespace information, or <strong>null</strong>. </p>\\n\"\n    - id: xmlLang\n      type: System.String\n      description: \"\\n<p>The <strong>xml:lang</strong> scope. </p>\\n\"\n    - id: xmlSpace\n      type: System.Xml.XmlSpace\n      description: \"\\n<p>An <xref href=\\\"System.Xml.XmlSpace\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value indicating the <strong>xml:space</strong> scope. </p>\\n\"\n    - id: enc\n      type: System.Text.Encoding\n      description: \"\\n<p>An <xref href=\\\"System.Text.Encoding\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object indicating the encoding setting. </p>\\n\"\n  exceptions:\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>\\n<em>nt</em> is not the same <strong>XmlNameTable</strong> used to construct <em>nsMgr</em>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlParserContext.XmlParserContext(XmlNameTable, XmlNamespaceManager, String, XmlSpace, Encoding)\n- uid: System.Xml.XmlParserContext.BaseURI\n  commentId: P:System.Xml.XmlParserContext.BaseURI\n  id: BaseURI\n  parent: System.Xml.XmlParserContext\n  langs:\n  - csharp\n  - vb\n  name: BaseURI\n  fullName: System.Xml.XmlParserContext.BaseURI\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: BaseURI\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 202\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Gets or sets the base URI.</p>\\n\"\n  syntax:\n    content: public string BaseURI { get; set; }\n    content.vb: Public Property BaseURI As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The base URI to use to resolve the DTD file.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: XmlParserContext.BaseURI\n- uid: System.Xml.XmlParserContext.DocTypeName\n  commentId: P:System.Xml.XmlParserContext.DocTypeName\n  id: DocTypeName\n  parent: System.Xml.XmlParserContext\n  langs:\n  - csharp\n  - vb\n  name: DocTypeName\n  fullName: System.Xml.XmlParserContext.DocTypeName\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DocTypeName\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 203\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Gets or sets the name of the document type declaration.</p>\\n\"\n  syntax:\n    content: public string DocTypeName { get; set; }\n    content.vb: Public Property DocTypeName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The name of the document type declaration.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: XmlParserContext.DocTypeName\n- uid: System.Xml.XmlParserContext.Encoding\n  commentId: P:System.Xml.XmlParserContext.Encoding\n  id: Encoding\n  parent: System.Xml.XmlParserContext\n  langs:\n  - csharp\n  - vb\n  name: Encoding\n  fullName: System.Xml.XmlParserContext.Encoding\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Encoding\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 204\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Gets or sets the encoding type.</p>\\n\"\n  syntax:\n    content: public Encoding Encoding { get; set; }\n    content.vb: Public Property Encoding As Encoding\n    parameters: []\n    return:\n      type: System.Text.Encoding\n      description: \"\\n<p>An <xref href=\\\"System.Text.Encoding\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object indicating the encoding type.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: XmlParserContext.Encoding\n- uid: System.Xml.XmlParserContext.InternalSubset\n  commentId: P:System.Xml.XmlParserContext.InternalSubset\n  id: InternalSubset\n  parent: System.Xml.XmlParserContext\n  langs:\n  - csharp\n  - vb\n  name: InternalSubset\n  fullName: System.Xml.XmlParserContext.InternalSubset\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: InternalSubset\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 205\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Gets or sets the internal DTD subset.</p>\\n\"\n  syntax:\n    content: public string InternalSubset { get; set; }\n    content.vb: Public Property InternalSubset As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The internal DTD subset. For example, this property returns everything between the square brackets <code><!DOCTYPE doc [...]></code>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: XmlParserContext.InternalSubset\n- uid: System.Xml.XmlParserContext.NamespaceManager\n  commentId: P:System.Xml.XmlParserContext.NamespaceManager\n  id: NamespaceManager\n  parent: System.Xml.XmlParserContext\n  langs:\n  - csharp\n  - vb\n  name: NamespaceManager\n  fullName: System.Xml.XmlParserContext.NamespaceManager\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NamespaceManager\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 206\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Gets or sets the <xref href=\\\"System.Xml.XmlNamespaceManager\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public XmlNamespaceManager NamespaceManager { get; set; }\n    content.vb: Public Property NamespaceManager As XmlNamespaceManager\n    parameters: []\n    return:\n      type: System.Xml.XmlNamespaceManager\n      description: \"\\n<p>The <strong>XmlNamespaceManager</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: XmlParserContext.NamespaceManager\n- uid: System.Xml.XmlParserContext.NameTable\n  commentId: P:System.Xml.XmlParserContext.NameTable\n  id: NameTable\n  parent: System.Xml.XmlParserContext\n  langs:\n  - csharp\n  - vb\n  name: NameTable\n  fullName: System.Xml.XmlParserContext.NameTable\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NameTable\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 207\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Xml.XmlNameTable\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used to atomize strings. For more information on atomized strings, see <xref href=\\\"System.Xml.XmlNameTable\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public XmlNameTable NameTable { get; set; }\n    content.vb: Public Property NameTable As XmlNameTable\n    parameters: []\n    return:\n      type: System.Xml.XmlNameTable\n      description: \"\\n<p>The <strong>XmlNameTable</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: XmlParserContext.NameTable\n- uid: System.Xml.XmlParserContext.PublicId\n  commentId: P:System.Xml.XmlParserContext.PublicId\n  id: PublicId\n  parent: System.Xml.XmlParserContext\n  langs:\n  - csharp\n  - vb\n  name: PublicId\n  fullName: System.Xml.XmlParserContext.PublicId\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PublicId\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 208\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Gets or sets the public identifier.</p>\\n\"\n  syntax:\n    content: public string PublicId { get; set; }\n    content.vb: Public Property PublicId As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The public identifier.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: XmlParserContext.PublicId\n- uid: System.Xml.XmlParserContext.SystemId\n  commentId: P:System.Xml.XmlParserContext.SystemId\n  id: SystemId\n  parent: System.Xml.XmlParserContext\n  langs:\n  - csharp\n  - vb\n  name: SystemId\n  fullName: System.Xml.XmlParserContext.SystemId\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SystemId\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 209\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Gets or sets the system identifier.</p>\\n\"\n  syntax:\n    content: public string SystemId { get; set; }\n    content.vb: Public Property SystemId As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The system identifier.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: XmlParserContext.SystemId\n- uid: System.Xml.XmlParserContext.XmlLang\n  commentId: P:System.Xml.XmlParserContext.XmlLang\n  id: XmlLang\n  parent: System.Xml.XmlParserContext\n  langs:\n  - csharp\n  - vb\n  name: XmlLang\n  fullName: System.Xml.XmlParserContext.XmlLang\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: XmlLang\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 210\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Gets or sets the current <strong>xml:lang</strong> scope.</p>\\n\"\n  syntax:\n    content: public string XmlLang { get; set; }\n    content.vb: Public Property XmlLang As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The current <strong>xml:lang</strong> scope. If there is no <strong>xml:lang</strong> in scope, <strong>String.Empty</strong> is returned.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: XmlParserContext.XmlLang\n- uid: System.Xml.XmlParserContext.XmlSpace\n  commentId: P:System.Xml.XmlParserContext.XmlSpace\n  id: XmlSpace\n  parent: System.Xml.XmlParserContext\n  langs:\n  - csharp\n  - vb\n  name: XmlSpace\n  fullName: System.Xml.XmlParserContext.XmlSpace\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: XmlSpace\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 211\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Gets or sets the current <strong>xml:space</strong> scope.</p>\\n\"\n  syntax:\n    content: public XmlSpace XmlSpace { get; set; }\n    content.vb: Public Property XmlSpace As XmlSpace\n    parameters: []\n    return:\n      type: System.Xml.XmlSpace\n      description: \"\\n<p>An <xref href=\\\"System.Xml.XmlSpace\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value indicating the <strong>xml:space</strong> scope.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: XmlParserContext.XmlSpace\nreferences:\n- uid: System.Xml\n  isExternal: false\n  name: System.Xml\n  fullName: System.Xml\n  commentId: N:System.Xml\n  nameWithType: System.Xml\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Xml.XmlNameTable\n  parent: System.Xml\n  isExternal: false\n  name: XmlNameTable\n  fullName: System.Xml.XmlNameTable\n  commentId: T:System.Xml.XmlNameTable\n  nameWithType: XmlNameTable\n- uid: System.Xml.XmlNamespaceManager\n  parent: System.Xml\n  isExternal: false\n  name: XmlNamespaceManager\n  fullName: System.Xml.XmlNamespaceManager\n  commentId: T:System.Xml.XmlNamespaceManager\n  nameWithType: XmlNamespaceManager\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Xml.XmlSpace\n  parent: System.Xml\n  isExternal: false\n  name: XmlSpace\n  fullName: System.Xml.XmlSpace\n  commentId: T:System.Xml.XmlSpace\n  nameWithType: XmlSpace\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  fullName: System.Text.Encoding\n  commentId: T:System.Text.Encoding\n  nameWithType: Encoding\n- uid: System.Text\n  isExternal: false\n  name: System.Text\n  fullName: System.Text\n  commentId: N:System.Text\n  nameWithType: System.Text\n- uid: System.Xml.XmlException\n  isExternal: false\n  name: XmlException\n  fullName: System.Xml.XmlException\n  commentId: T:System.Xml.XmlException\n  nameWithType: XmlException\n"}