{"nodes":[{"pos":[639,659],"content":"RangeItemHeaderValue","needQuote":true,"nodes":[{"content":"RangeItemHeaderValue","pos":[0,20]}]},{"pos":[1986,2040],"content":"RangeItemHeaderValue(Nullable<Int64>, Nullable<Int64>)","needQuote":true,"nodes":[{"content":"RangeItemHeaderValue(Nullable&lt;Int64&gt;, Nullable&lt;Int64&gt;)","pos":[0,54],"source":"RangeItemHeaderValue(Nullable<Int64>, Nullable<Int64>)"}]},{"content":"\\n&lt;p&gt;The position at which to start sending data.&lt;/p&gt;\\n","pos":[2902,2957],"source":"\\n<p>The position at which to start sending data.</p>\\n"},{"content":"\\n&lt;p&gt;The position at which to stop sending data.&lt;/p&gt;\\n","pos":[3034,3088],"source":"\\n<p>The position at which to stop sending data.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;from&lt;/em&gt; is greater than &lt;em&gt;to&lt;/em&gt;&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;from&lt;/em&gt; or &lt;em&gt;to&lt;/em&gt; is less than 0.","pos":[3219,3336],"source":"\\n<p>\\n<em>from</em> is greater than <em>to</em></p>\\n<p>-or- </p>\\n<p>\\n<em>from</em> or <em>to</em> is less than 0."},{"content":"&lt;/p&gt;\\n","pos":[3337,3343],"source":" </p>\\n"},{"pos":[4040,4044],"content":"From","needQuote":true,"nodes":[{"content":"From","pos":[0,4]}]},{"pos":[5185,5187],"content":"To","needQuote":true,"nodes":[{"content":"To","pos":[0,2]}]},{"pos":[6375,6389],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The object to compare with the current object.&lt;/p&gt;\\n","pos":[7271,7328],"source":"\\n<p>The object to compare with the current object.</p>\\n"},{"pos":[8106,8119],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[9414,9424],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[10562,10585],"content":"System.Net.Http.Headers","needQuote":true,"nodes":[{"content":"System.Net.Http.Headers","pos":[0,23]}]},{"pos":[10767,10773],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10960,10982],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[11130,11136],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[11203,11204],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11254,11260],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11321,11322]},{"pos":[11377,11383],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11443,11444],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11541,11547],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[11614,11615],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11665,11671],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11732,11733]},{"pos":[11788,11794],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11854,11855],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12100,12131],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[12297,12312],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[12388,12389],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12439,12445],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12506,12507]},{"pos":[12562,12568],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12628,12629],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12735,12750],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[12826,12827],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12877,12883],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12944,12945]},{"pos":[13000,13006],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13066,13067],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13293,13302],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[13395,13402],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[13470,13471],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13498,13499],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13568,13575],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[13643,13644],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13671,13672],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13847,13864],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[13973,13988],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[14064,14065],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14092,14093],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14170,14185],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[14261,14262],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14289,14290],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14435,14441],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[14600,14615],"content":"Nullable<Int64>","needQuote":true,"nodes":[{"content":"Nullable&lt;Int64&gt;","pos":[0,15],"source":"Nullable<Int64>"}]},{"pos":[14788,14796],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[14858,14859],"content":"<","needQuote":true,"nodes":[]},{"pos":[14908,14913],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[15042,15050],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[15113,15116]},{"pos":[15172,15177],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[15236,15237],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15439,15450],"content":"Nullable<T>","needQuote":true,"nodes":[{"content":"Nullable&lt;T&gt;","pos":[0,11],"source":"Nullable<T>"}]},{"pos":[15597,15605],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[15646,15647],"content":"<","needQuote":true,"nodes":[]},{"pos":[15674,15675],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[15772,15780],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[15822,15825]},{"pos":[15859,15860],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[15887,15888],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16094,16108],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[16227,16233],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16300,16301],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16351,16357],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16417,16418],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16501,16507],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16574,16575],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16625,16631],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16691,16692],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16865,16872],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[17038,17051],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[17152,17163],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[17235,17236],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17263,17264],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17337,17348],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[17420,17421],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17448,17449],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17609,17614],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[17771,17781],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[17876,17884],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[17953,17954],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17981,17982],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18052,18060],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[18129,18130],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18157,18158],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18313,18319],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[18468,18495],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]}],"content":"items:\n- uid: System.Net.Http.Headers.RangeItemHeaderValue\n  commentId: T:System.Net.Http.Headers.RangeItemHeaderValue\n  id: RangeItemHeaderValue\n  parent: System.Net.Http.Headers\n  children:\n  - System.Net.Http.Headers.RangeItemHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})\n  - System.Net.Http.Headers.RangeItemHeaderValue.Equals(System.Object)\n  - System.Net.Http.Headers.RangeItemHeaderValue.From\n  - System.Net.Http.Headers.RangeItemHeaderValue.GetHashCode\n  - System.Net.Http.Headers.RangeItemHeaderValue.To\n  - System.Net.Http.Headers.RangeItemHeaderValue.ToString\n  langs:\n  - csharp\n  - vb\n  name: RangeItemHeaderValue\n  fullName: System.Net.Http.Headers.RangeItemHeaderValue\n  type: Class\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RangeItemHeaderValue\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 532\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Represents a byte range in a Range header value.</p>\\n\"\n  syntax:\n    content: public class RangeItemHeaderValue\n    content.vb: Public Class RangeItemHeaderValue\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: RangeItemHeaderValue\n- uid: System.Net.Http.Headers.RangeItemHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})\n  commentId: M:System.Net.Http.Headers.RangeItemHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})\n  id: '#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})'\n  parent: System.Net.Http.Headers.RangeItemHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: RangeItemHeaderValue(Nullable<Int64>, Nullable<Int64>)\n  fullName: System.Net.Http.Headers.RangeItemHeaderValue.RangeItemHeaderValue(System.Nullable<System.Int64>, System.Nullable<System.Int64>)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 534\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.Http.Headers.RangeItemHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public RangeItemHeaderValue(long ? from, long ? to)\n    content.vb: Public Sub New(from As Long?, to As Long?)\n    parameters:\n    - id: from\n      type: System.Nullable{System.Int64}\n      description: \"\\n<p>The position at which to start sending data.</p>\\n\"\n    - id: to\n      type: System.Nullable{System.Int64}\n      description: \"\\n<p>The position at which to stop sending data.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>from</em> is greater than <em>to</em></p>\\n<p>-or- </p>\\n<p>\\n<em>from</em> or <em>to</em> is less than 0. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Net.Http.Headers.RangeItemHeaderValue.RangeItemHeaderValue(System.Nullable(Of System.Int64), System.Nullable(Of System.Int64))\n  name.vb: RangeItemHeaderValue(Nullable(Of Int64), Nullable(Of Int64))\n  nameWithType: RangeItemHeaderValue.RangeItemHeaderValue(Nullable<Int64>, Nullable<Int64>)\n  nameWithType.vb: RangeItemHeaderValue.RangeItemHeaderValue(Nullable(Of Int64), Nullable(Of Int64))\n- uid: System.Net.Http.Headers.RangeItemHeaderValue.From\n  commentId: P:System.Net.Http.Headers.RangeItemHeaderValue.From\n  id: From\n  parent: System.Net.Http.Headers.RangeItemHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: From\n  fullName: System.Net.Http.Headers.RangeItemHeaderValue.From\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: From\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 535\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Gets the position at which to start sending data.</p>\\n\"\n  syntax:\n    content: public long ? From { get; }\n    content.vb: Public ReadOnly Property From As Long?\n    parameters: []\n    return:\n      type: System.Nullable{System.Int64}\n      description: \"\\n<p>Returns <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The position at which to start sending data.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: RangeItemHeaderValue.From\n- uid: System.Net.Http.Headers.RangeItemHeaderValue.To\n  commentId: P:System.Net.Http.Headers.RangeItemHeaderValue.To\n  id: To\n  parent: System.Net.Http.Headers.RangeItemHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: To\n  fullName: System.Net.Http.Headers.RangeItemHeaderValue.To\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: To\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 536\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Gets the position at which to stop sending data. </p>\\n\"\n  syntax:\n    content: public long ? To { get; }\n    content.vb: Public ReadOnly Property To As Long?\n    parameters: []\n    return:\n      type: System.Nullable{System.Int64}\n      description: \"\\n<p>Returns <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The position at which to stop sending data. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: RangeItemHeaderValue.To\n- uid: System.Net.Http.Headers.RangeItemHeaderValue.Equals(System.Object)\n  commentId: M:System.Net.Http.Headers.RangeItemHeaderValue.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Net.Http.Headers.RangeItemHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  fullName: System.Net.Http.Headers.RangeItemHeaderValue.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equals\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 537\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Determines whether the specified <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is equal to the current <xref href=\\\"System.Net.Http.Headers.RangeItemHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override bool Equals(object obj)\n    content.vb: Public Overrides Function Equals(obj As Object) As Boolean\n    parameters:\n    - id: obj\n      type: System.Object\n      description: \"\\n<p>The object to compare with the current object.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Returns <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>\\n<strong>true</strong> if the specified <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is equal to the current object; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.Object.Equals(System.Object)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: RangeItemHeaderValue.Equals(Object)\n- uid: System.Net.Http.Headers.RangeItemHeaderValue.GetHashCode\n  commentId: M:System.Net.Http.Headers.RangeItemHeaderValue.GetHashCode\n  id: GetHashCode\n  parent: System.Net.Http.Headers.RangeItemHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  fullName: System.Net.Http.Headers.RangeItemHeaderValue.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetHashCode\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 538\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Serves as a hash function for an <xref href=\\\"System.Net.Http.Headers.RangeItemHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override int GetHashCode()\n    content.vb: Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>Returns <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>A hash code for the current object.</p>\\n\"\n  overridden: System.Object.GetHashCode\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: RangeItemHeaderValue.GetHashCode()\n- uid: System.Net.Http.Headers.RangeItemHeaderValue.ToString\n  commentId: M:System.Net.Http.Headers.RangeItemHeaderValue.ToString\n  id: ToString\n  parent: System.Net.Http.Headers.RangeItemHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.Net.Http.Headers.RangeItemHeaderValue.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToString\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 539\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Returns a string that represents the current <xref href=\\\"System.Net.Http.Headers.RangeItemHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override string ToString()\n    content.vb: Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>Returns <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>A string that represents the current object.</p>\\n\"\n  overridden: System.Object.ToString\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: RangeItemHeaderValue.ToString()\nreferences:\n- uid: System.Net.Http.Headers\n  isExternal: false\n  name: System.Net.Http.Headers\n  fullName: System.Net.Http.Headers\n  commentId: N:System.Net.Http.Headers\n  nameWithType: System.Net.Http.Headers\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Nullable{System.Int64}\n  parent: System\n  definition: System.Nullable`1\n  name: Nullable<Int64>\n  fullName: System.Nullable<System.Int64>\n  fullname.vb: System.Nullable(Of System.Int64)\n  name.vb: Nullable(Of Int64)\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: T:System.Nullable{System.Int64}\n  nameWithType: Nullable<Int64>\n  nameWithType.vb: Nullable(Of Int64)\n- uid: System.Nullable`1\n  parent: System\n  isExternal: false\n  name: Nullable<T>\n  fullName: System.Nullable<T>\n  fullname.vb: System.Nullable(Of T)\n  name.vb: Nullable(Of T)\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Nullable`1\n  nameWithType: Nullable<T>\n  nameWithType.vb: Nullable(Of T)\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n"}