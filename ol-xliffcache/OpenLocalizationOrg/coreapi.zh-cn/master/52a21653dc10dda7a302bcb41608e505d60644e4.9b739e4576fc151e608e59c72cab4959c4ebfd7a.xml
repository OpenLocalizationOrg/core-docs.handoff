{"nodes":[{"pos":[416,441],"content":"DateTimeConstantAttribute","needQuote":true,"nodes":[{"content":"DateTimeConstantAttribute","pos":[0,25]}]},{"pos":[2280,2289],"content":"Inherited","needQuote":true,"nodes":[{"content":"Inherited","pos":[0,9]}]},{"pos":[2795,2827],"content":"DateTimeConstantAttribute(Int64)","needQuote":true,"nodes":[{"content":"DateTimeConstantAttribute(Int64)","pos":[0,32]}]},{"content":"\\n&lt;p&gt;The number of 100-nanosecond ticks that represent the date and time of this instance.","pos":[3728,3818],"source":"\\n<p>The number of 100-nanosecond ticks that represent the date and time of this instance."},{"content":"&lt;/p&gt;\\n","pos":[3819,3825],"source":" </p>\\n"},{"pos":[4225,4230],"content":"Value","needQuote":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"content":"\\n&lt;p&gt;The number of 100-nanosecond ticks that represent the date and time of this instance.&lt;/p&gt;\\n","pos":[5025,5121],"source":"\\n<p>The number of 100-nanosecond ticks that represent the date and time of this instance.</p>\\n"},{"pos":[5432,5463],"content":"System.Runtime.CompilerServices","needQuote":true,"nodes":[{"content":"System.Runtime.CompilerServices","pos":[0,31]}]},{"pos":[5669,5675],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[5823,5832],"content":"Attribute","needQuote":true,"nodes":[{"content":"Attribute","pos":[0,9]}]},{"pos":[6053,6076],"content":"CustomConstantAttribute","needQuote":true,"nodes":[{"content":"CustomConstantAttribute","pos":[0,23]}]},{"pos":[6356,6370],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[6495,6501],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[6550,6551],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6601,6607],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6667,6668],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6754,6760],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[6809,6810],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6860,6866],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6926,6927],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7130,7143],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[7250,7261],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[7315,7316],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7343,7344],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7420,7431],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[7485,7486],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7513,7514],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7696,7706],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[7801,7809],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[7878,7879],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7906,7907],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7977,7985],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[8054,8055],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8082,8083],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8280,8302],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[8450,8456],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8523,8524],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8574,8580],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8641,8642]},{"pos":[8697,8703],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8763,8764],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8861,8867],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8934,8935],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8985,8991],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9052,9053]},{"pos":[9108,9114],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9174,9175],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9420,9451],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[9617,9632],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[9708,9709],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9759,9765],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9826,9827]},{"pos":[9882,9888],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9948,9949],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10055,10070],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[10146,10147],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10197,10203],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10264,10265]},{"pos":[10320,10326],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10386,10387],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10613,10622],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[10715,10722],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[10790,10791],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10818,10819],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10888,10895],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[10963,10964],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10991,10992],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11167,11184],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[11293,11308],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[11384,11385],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11412,11413],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11490,11505],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[11581,11582],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11609,11610],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11755,11761],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[11891,11896],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[12135,12140],"content":"Value","needQuote":true,"nodes":[{"content":"Value","pos":[0,5]}]}],"content":"items:\n- uid: System.Runtime.CompilerServices.DateTimeConstantAttribute\n  commentId: T:System.Runtime.CompilerServices.DateTimeConstantAttribute\n  id: DateTimeConstantAttribute\n  parent: System.Runtime.CompilerServices\n  children:\n  - System.Runtime.CompilerServices.DateTimeConstantAttribute.#ctor(System.Int64)\n  - System.Runtime.CompilerServices.DateTimeConstantAttribute.Value\n  langs:\n  - csharp\n  - vb\n  name: DateTimeConstantAttribute\n  fullName: System.Runtime.CompilerServices.DateTimeConstantAttribute\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/DateTimeConstantAttribute.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DateTimeConstantAttribute\n    path: src/mscorlib/src/System/Runtime/CompilerServices/DateTimeConstantAttribute.cs\n    startLine: 9\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Persists an 8-byte <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> constant for a field or parameter.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [AttributeUsage(AttributeTargets.Field | AttributeTargets.Parameter, Inherited = false)]\n\n      [ComVisible(true)]\n\n      public sealed class DateTimeConstantAttribute : CustomConstantAttribute, _Attribute\n    content.vb: >-\n      <Serializable>\n\n      <AttributeUsage(AttributeTargets.Field Or AttributeTargets.Parameter, Inherited:=False)>\n\n      <ComVisible(True)>\n\n      Public NotInheritable Class DateTimeConstantAttribute\n          Inherits CustomConstantAttribute\n          Implements _Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  - System.Runtime.CompilerServices.CustomConstantAttribute\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetHashCode\n  - System.Object.ToString\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  attributes:\n  - type: System.AttributeUsageAttribute\n    ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)\n    arguments:\n    - type: System.AttributeTargets\n      value: 2304\n    namedArguments:\n    - name: Inherited\n      type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: DateTimeConstantAttribute\n- uid: System.Runtime.CompilerServices.DateTimeConstantAttribute.#ctor(System.Int64)\n  commentId: M:System.Runtime.CompilerServices.DateTimeConstantAttribute.#ctor(System.Int64)\n  id: '#ctor(System.Int64)'\n  parent: System.Runtime.CompilerServices.DateTimeConstantAttribute\n  langs:\n  - csharp\n  - vb\n  name: DateTimeConstantAttribute(Int64)\n  fullName: System.Runtime.CompilerServices.DateTimeConstantAttribute.DateTimeConstantAttribute(System.Int64)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/DateTimeConstantAttribute.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Runtime/CompilerServices/DateTimeConstantAttribute.cs\n    startLine: 14\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Initializes a new instance of the <strong>DateTimeConstantAttribute</strong> class with the number of 100-nanosecond ticks that represent the date and time of this instance.</p>\\n\"\n  syntax:\n    content: public DateTimeConstantAttribute(long ticks)\n    content.vb: Public Sub New(ticks As Long)\n    parameters:\n    - id: ticks\n      type: System.Int64\n      description: \"\\n<p>The number of 100-nanosecond ticks that represent the date and time of this instance. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DateTimeConstantAttribute.DateTimeConstantAttribute(Int64)\n- uid: System.Runtime.CompilerServices.DateTimeConstantAttribute.Value\n  commentId: P:System.Runtime.CompilerServices.DateTimeConstantAttribute.Value\n  id: Value\n  parent: System.Runtime.CompilerServices.DateTimeConstantAttribute\n  langs:\n  - csharp\n  - vb\n  name: Value\n  fullName: System.Runtime.CompilerServices.DateTimeConstantAttribute.Value\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/DateTimeConstantAttribute.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Value\n    path: src/mscorlib/src/System/Runtime/CompilerServices/DateTimeConstantAttribute.cs\n    startLine: 19\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Gets the number of 100-nanosecond ticks that represent the date and time of this instance.</p>\\n\"\n  syntax:\n    content: public override object Value { get; }\n    content.vb: Public Overrides ReadOnly Property Value As Object\n    parameters: []\n    return:\n      type: System.Object\n      description: \"\\n<p>The number of 100-nanosecond ticks that represent the date and time of this instance.</p>\\n\"\n  overridden: System.Runtime.CompilerServices.CustomConstantAttribute.Value\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: DateTimeConstantAttribute.Value\nreferences:\n- uid: System.Runtime.CompilerServices\n  isExternal: false\n  name: System.Runtime.CompilerServices\n  fullName: System.Runtime.CompilerServices\n  nameWithType: System.Runtime.CompilerServices\n  commentId: N:System.Runtime.CompilerServices\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  fullName: System.Attribute\n  nameWithType: Attribute\n  commentId: T:System.Attribute\n- uid: System.Runtime.CompilerServices.CustomConstantAttribute\n  parent: System.Runtime.CompilerServices\n  isExternal: false\n  name: CustomConstantAttribute\n  fullName: System.Runtime.CompilerServices.CustomConstantAttribute\n  nameWithType: CustomConstantAttribute\n  commentId: T:System.Runtime.CompilerServices.CustomConstantAttribute\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Attribute.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Attribute.Equals(System.Object)\n    name: Equals\n    fullName: System.Attribute.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Attribute.Equals(System.Object)\n    name: Equals\n    fullName: System.Attribute.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Attribute.Equals(Object)\n  commentId: M:System.Attribute.Equals(System.Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.Attribute.GetHashCode()\n  spec.csharp:\n  - uid: System.Attribute.GetHashCode\n    name: GetHashCode\n    fullName: System.Attribute.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Attribute.GetHashCode\n    name: GetHashCode\n    fullName: System.Attribute.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Attribute.GetHashCode()\n  commentId: M:System.Attribute.GetHashCode\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  fullName: System.Int64\n  nameWithType: Int64\n  commentId: T:System.Int64\n- uid: System.Runtime.CompilerServices.CustomConstantAttribute.Value\n  parent: System.Runtime.CompilerServices.CustomConstantAttribute\n  isExternal: false\n  name: Value\n  fullName: System.Runtime.CompilerServices.CustomConstantAttribute.Value\n  nameWithType: CustomConstantAttribute.Value\n  commentId: P:System.Runtime.CompilerServices.CustomConstantAttribute.Value\n"}