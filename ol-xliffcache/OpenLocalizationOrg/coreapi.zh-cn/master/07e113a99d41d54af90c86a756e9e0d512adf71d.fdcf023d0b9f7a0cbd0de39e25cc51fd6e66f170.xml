{"nodes":[{"pos":[907,926],"content":"HttpResponseMessage","needQuote":true,"nodes":[{"content":"HttpResponseMessage","pos":[0,19]}]},{"pos":[2209,2230],"content":"HttpResponseMessage()","needQuote":true,"nodes":[{"content":"HttpResponseMessage()","pos":[0,21]}]},{"pos":[3259,3294],"content":"HttpResponseMessage(HttpStatusCode)","needQuote":true,"nodes":[{"content":"HttpResponseMessage(HttpStatusCode)","pos":[0,35]}]},{"content":"\\n&lt;p&gt;The status code of the HTTP response.&lt;/p&gt;\\n","pos":[4223,4271],"source":"\\n<p>The status code of the HTTP response.</p>\\n"},{"pos":[4608,4615],"content":"Content","needQuote":true,"nodes":[{"content":"Content","pos":[0,7]}]},{"pos":[5757,5764],"content":"Headers","needQuote":true,"nodes":[{"content":"Headers","pos":[0,7]}]},{"pos":[6991,7010],"content":"IsSuccessStatusCode","needQuote":true,"nodes":[{"content":"IsSuccessStatusCode","pos":[0,19]}]},{"pos":[8420,8432],"content":"ReasonPhrase","needQuote":true,"nodes":[{"content":"ReasonPhrase","pos":[0,12]}]},{"pos":[9622,9636],"content":"RequestMessage","needQuote":true,"nodes":[{"content":"RequestMessage","pos":[0,14]}]},{"pos":[10879,10889],"content":"StatusCode","needQuote":true,"nodes":[{"content":"StatusCode","pos":[0,10]}]},{"pos":[12041,12048],"content":"Version","needQuote":true,"nodes":[{"content":"Version","pos":[0,7]}]},{"pos":[13147,13156],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[14212,14228],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to release both managed and unmanaged resources; &lt;strong&gt;false&lt;/strong&gt; to releases only unmanaged resources.&lt;/p&gt;\\n","pos":[15054,15198],"source":"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to releases only unmanaged resources.</p>\\n"},{"pos":[15598,15623],"content":"EnsureSuccessStatusCode()","needQuote":true,"nodes":[{"content":"EnsureSuccessStatusCode()","pos":[0,25]}]},{"pos":[16993,17003],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[18012,18027],"content":"System.Net.Http","needQuote":true,"nodes":[{"content":"System.Net.Http","pos":[0,15]}]},{"pos":[18185,18191],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18341,18352],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[18540,18554],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[18673,18679],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[18746,18747],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18797,18803],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18863,18864],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18947,18953],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[19020,19021],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19071,19077],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19137,19138],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19352,19374],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[19522,19528],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[19595,19596],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19646,19652],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[19713,19714]},{"pos":[19769,19775],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19835,19836],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19933,19939],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[20006,20007],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20057,20063],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[20124,20125]},{"pos":[20180,20186],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20246,20247],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20492,20523],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[20689,20704],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[20780,20781],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20831,20837],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[20898,20899]},{"pos":[20954,20960],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21020,21021],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21127,21142],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[21218,21219],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21269,21275],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[21336,21337]},{"pos":[21392,21398],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21458,21459],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21689,21702],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[21803,21814],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[21886,21887],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21914,21915],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21988,21999],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[22071,22072],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22099,22100],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22275,22284],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[22377,22384],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[22452,22453],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22480,22481],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22550,22557],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[22625,22626],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22653,22654],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22829,22846],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[22955,22970],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[23046,23047],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23074,23075],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23152,23167],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[23243,23244],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23271,23272],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23417,23423],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[23570,23584],"content":"HttpStatusCode","needQuote":true,"nodes":[{"content":"HttpStatusCode","pos":[0,14]}]},{"pos":[23741,23751],"content":"System.Net","needQuote":true,"nodes":[{"content":"System.Net","pos":[0,10]}]},{"pos":[23917,23928],"content":"HttpContent","needQuote":true,"nodes":[{"content":"HttpContent","pos":[0,11]}]},{"pos":[24153,24172],"content":"HttpResponseHeaders","needQuote":true,"nodes":[{"content":"HttpResponseHeaders","pos":[0,19]}]},{"pos":[24383,24406],"content":"System.Net.Http.Headers","needQuote":true,"nodes":[{"content":"System.Net.Http.Headers","pos":[0,23]}]},{"pos":[24589,24596],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[24744,24750],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[24925,24943],"content":"HttpRequestMessage","needQuote":true,"nodes":[{"content":"HttpRequestMessage","pos":[0,18]}]},{"pos":[25143,25150],"content":"Version","needQuote":true,"nodes":[{"content":"Version","pos":[0,7]}]},{"pos":[25323,25332],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[25435,25442],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[25494,25495],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25522,25523],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25597,25604],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[25656,25657],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25684,25685],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25879,25898],"content":"HttpResponseMessage","needQuote":true,"nodes":[{"content":"HttpResponseMessage","pos":[0,19]}]},{"pos":[26115,26125],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[26220,26228],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[26297,26298],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26325,26326],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26396,26404],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[26473,26474],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26501,26502],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]}],"content":"items:\n- uid: System.Net.Http.HttpResponseMessage\n  commentId: T:System.Net.Http.HttpResponseMessage\n  id: HttpResponseMessage\n  parent: System.Net.Http\n  children:\n  - System.Net.Http.HttpResponseMessage.#ctor\n  - System.Net.Http.HttpResponseMessage.#ctor(System.Net.HttpStatusCode)\n  - System.Net.Http.HttpResponseMessage.Content\n  - System.Net.Http.HttpResponseMessage.Dispose\n  - System.Net.Http.HttpResponseMessage.Dispose(System.Boolean)\n  - System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode\n  - System.Net.Http.HttpResponseMessage.Headers\n  - System.Net.Http.HttpResponseMessage.IsSuccessStatusCode\n  - System.Net.Http.HttpResponseMessage.ReasonPhrase\n  - System.Net.Http.HttpResponseMessage.RequestMessage\n  - System.Net.Http.HttpResponseMessage.StatusCode\n  - System.Net.Http.HttpResponseMessage.ToString\n  - System.Net.Http.HttpResponseMessage.Version\n  langs:\n  - csharp\n  - vb\n  name: HttpResponseMessage\n  fullName: System.Net.Http.HttpResponseMessage\n  type: Class\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: HttpResponseMessage\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 182\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Represents a HTTP response message including the status code and data.</p>\\n\"\n  syntax:\n    content: 'public class HttpResponseMessage : IDisposable'\n    content.vb: >-\n      Public Class HttpResponseMessage\n          Implements IDisposable\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: HttpResponseMessage\n- uid: System.Net.Http.HttpResponseMessage.#ctor\n  commentId: M:System.Net.Http.HttpResponseMessage.#ctor\n  id: '#ctor'\n  parent: System.Net.Http.HttpResponseMessage\n  langs:\n  - csharp\n  - vb\n  name: HttpResponseMessage()\n  fullName: System.Net.Http.HttpResponseMessage.HttpResponseMessage()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 184\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.Http.HttpResponseMessage\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public HttpResponseMessage()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: HttpResponseMessage.HttpResponseMessage()\n- uid: System.Net.Http.HttpResponseMessage.#ctor(System.Net.HttpStatusCode)\n  commentId: M:System.Net.Http.HttpResponseMessage.#ctor(System.Net.HttpStatusCode)\n  id: '#ctor(System.Net.HttpStatusCode)'\n  parent: System.Net.Http.HttpResponseMessage\n  langs:\n  - csharp\n  - vb\n  name: HttpResponseMessage(HttpStatusCode)\n  fullName: System.Net.Http.HttpResponseMessage.HttpResponseMessage(System.Net.HttpStatusCode)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 185\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.Http.HttpResponseMessage\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specific <xref href=\\\"System.Net.Http.HttpResponseMessage.StatusCode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public HttpResponseMessage(HttpStatusCode statusCode)\n    content.vb: Public Sub New(statusCode As HttpStatusCode)\n    parameters:\n    - id: statusCode\n      type: System.Net.HttpStatusCode\n      description: \"\\n<p>The status code of the HTTP response.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: HttpResponseMessage.HttpResponseMessage(HttpStatusCode)\n- uid: System.Net.Http.HttpResponseMessage.Content\n  commentId: P:System.Net.Http.HttpResponseMessage.Content\n  id: Content\n  parent: System.Net.Http.HttpResponseMessage\n  langs:\n  - csharp\n  - vb\n  name: Content\n  fullName: System.Net.Http.HttpResponseMessage.Content\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Content\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 186\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Gets or sets the content of a HTTP response message. </p>\\n\"\n  syntax:\n    content: public HttpContent Content { get; set; }\n    content.vb: Public Property Content As HttpContent\n    parameters: []\n    return:\n      type: System.Net.Http.HttpContent\n      description: \"\\n<p>Returns <xref href=\\\"System.Net.Http.HttpContent\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The content of the HTTP response message.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: HttpResponseMessage.Content\n- uid: System.Net.Http.HttpResponseMessage.Headers\n  commentId: P:System.Net.Http.HttpResponseMessage.Headers\n  id: Headers\n  parent: System.Net.Http.HttpResponseMessage\n  langs:\n  - csharp\n  - vb\n  name: Headers\n  fullName: System.Net.Http.HttpResponseMessage.Headers\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Headers\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 187\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Gets the collection of HTTP response headers. </p>\\n\"\n  syntax:\n    content: public HttpResponseHeaders Headers { get; }\n    content.vb: Public ReadOnly Property Headers As HttpResponseHeaders\n    parameters: []\n    return:\n      type: System.Net.Http.Headers.HttpResponseHeaders\n      description: \"\\n<p>Returns <xref href=\\\"System.Net.Http.Headers.HttpResponseHeaders\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The collection of HTTP response headers.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: HttpResponseMessage.Headers\n- uid: System.Net.Http.HttpResponseMessage.IsSuccessStatusCode\n  commentId: P:System.Net.Http.HttpResponseMessage.IsSuccessStatusCode\n  id: IsSuccessStatusCode\n  parent: System.Net.Http.HttpResponseMessage\n  langs:\n  - csharp\n  - vb\n  name: IsSuccessStatusCode\n  fullName: System.Net.Http.HttpResponseMessage.IsSuccessStatusCode\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsSuccessStatusCode\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 188\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Gets a value that indicates if the HTTP response was successful.</p>\\n\"\n  syntax:\n    content: public bool IsSuccessStatusCode { get; }\n    content.vb: Public ReadOnly Property IsSuccessStatusCode As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Returns <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>A value that indicates if the HTTP response was successful. <strong>true</strong> if <xref href=\\\"System.Net.Http.HttpResponseMessage.StatusCode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was in the range 200-299; otherwise <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: HttpResponseMessage.IsSuccessStatusCode\n- uid: System.Net.Http.HttpResponseMessage.ReasonPhrase\n  commentId: P:System.Net.Http.HttpResponseMessage.ReasonPhrase\n  id: ReasonPhrase\n  parent: System.Net.Http.HttpResponseMessage\n  langs:\n  - csharp\n  - vb\n  name: ReasonPhrase\n  fullName: System.Net.Http.HttpResponseMessage.ReasonPhrase\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReasonPhrase\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 189\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Gets or sets the reason phrase which typically is sent by servers together with the status code. </p>\\n\"\n  syntax:\n    content: public string ReasonPhrase { get; set; }\n    content.vb: Public Property ReasonPhrase As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>Returns <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The reason phrase sent by the server.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: HttpResponseMessage.ReasonPhrase\n- uid: System.Net.Http.HttpResponseMessage.RequestMessage\n  commentId: P:System.Net.Http.HttpResponseMessage.RequestMessage\n  id: RequestMessage\n  parent: System.Net.Http.HttpResponseMessage\n  langs:\n  - csharp\n  - vb\n  name: RequestMessage\n  fullName: System.Net.Http.HttpResponseMessage.RequestMessage\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RequestMessage\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 190\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Gets or sets the request message which led to this response message.</p>\\n\"\n  syntax:\n    content: public HttpRequestMessage RequestMessage { get; set; }\n    content.vb: Public Property RequestMessage As HttpRequestMessage\n    parameters: []\n    return:\n      type: System.Net.Http.HttpRequestMessage\n      description: \"\\n<p>Returns <xref href=\\\"System.Net.Http.HttpRequestMessage\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The request message which led to this response message.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: HttpResponseMessage.RequestMessage\n- uid: System.Net.Http.HttpResponseMessage.StatusCode\n  commentId: P:System.Net.Http.HttpResponseMessage.StatusCode\n  id: StatusCode\n  parent: System.Net.Http.HttpResponseMessage\n  langs:\n  - csharp\n  - vb\n  name: StatusCode\n  fullName: System.Net.Http.HttpResponseMessage.StatusCode\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: StatusCode\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 191\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Gets or sets the status code of the HTTP response.</p>\\n\"\n  syntax:\n    content: public HttpStatusCode StatusCode { get; set; }\n    content.vb: Public Property StatusCode As HttpStatusCode\n    parameters: []\n    return:\n      type: System.Net.HttpStatusCode\n      description: \"\\n<p>Returns <xref href=\\\"System.Net.HttpStatusCode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The status code of the HTTP response.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: HttpResponseMessage.StatusCode\n- uid: System.Net.Http.HttpResponseMessage.Version\n  commentId: P:System.Net.Http.HttpResponseMessage.Version\n  id: Version\n  parent: System.Net.Http.HttpResponseMessage\n  langs:\n  - csharp\n  - vb\n  name: Version\n  fullName: System.Net.Http.HttpResponseMessage.Version\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Version\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 192\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Gets or sets the HTTP message version. </p>\\n\"\n  syntax:\n    content: public Version Version { get; set; }\n    content.vb: Public Property Version As Version\n    parameters: []\n    return:\n      type: System.Version\n      description: \"\\n<p>Returns <xref href=\\\"System.Version\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The HTTP message version. The default is 1.1. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: HttpResponseMessage.Version\n- uid: System.Net.Http.HttpResponseMessage.Dispose\n  commentId: M:System.Net.Http.HttpResponseMessage.Dispose\n  id: Dispose\n  parent: System.Net.Http.HttpResponseMessage\n  langs:\n  - csharp\n  - vb\n  name: Dispose()\n  fullName: System.Net.Http.HttpResponseMessage.Dispose()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Dispose\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 193\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Releases the unmanaged resources and disposes of unmanaged resources used by the <xref href=\\\"System.Net.Http.HttpResponseMessage\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void Dispose()\n    content.vb: Public Sub Dispose\n  implements:\n  - System.IDisposable.Dispose\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: HttpResponseMessage.Dispose()\n- uid: System.Net.Http.HttpResponseMessage.Dispose(System.Boolean)\n  commentId: M:System.Net.Http.HttpResponseMessage.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Net.Http.HttpResponseMessage\n  langs:\n  - csharp\n  - vb\n  name: Dispose(Boolean)\n  fullName: System.Net.Http.HttpResponseMessage.Dispose(System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Dispose\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 194\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Releases the unmanaged resources used by the <xref href=\\\"System.Net.Http.HttpResponseMessage\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and optionally disposes of the managed resources.</p>\\n\"\n  syntax:\n    content: protected virtual void Dispose(bool disposing)\n    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to releases only unmanaged resources.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  - virtual\n  modifiers.vb:\n  - Protected\n  - Overridable\n  nameWithType: HttpResponseMessage.Dispose(Boolean)\n- uid: System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode\n  commentId: M:System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode\n  id: EnsureSuccessStatusCode\n  parent: System.Net.Http.HttpResponseMessage\n  langs:\n  - csharp\n  - vb\n  name: EnsureSuccessStatusCode()\n  fullName: System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: EnsureSuccessStatusCode\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 195\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Throws an exception if the <xref href=\\\"System.Net.Http.HttpResponseMessage.IsSuccessStatusCode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property for the HTTP response is <strong>false</strong>.</p>\\n\"\n  syntax:\n    content: public HttpResponseMessage EnsureSuccessStatusCode()\n    content.vb: Public Function EnsureSuccessStatusCode As HttpResponseMessage\n    return:\n      type: System.Net.Http.HttpResponseMessage\n      description: \"\\n<p>Returns <xref href=\\\"System.Net.Http.HttpResponseMessage\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The HTTP response message if the call is successful.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: HttpResponseMessage.EnsureSuccessStatusCode()\n- uid: System.Net.Http.HttpResponseMessage.ToString\n  commentId: M:System.Net.Http.HttpResponseMessage.ToString\n  id: ToString\n  parent: System.Net.Http.HttpResponseMessage\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.Net.Http.HttpResponseMessage.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToString\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 196\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Returns a string that represents the current object.</p>\\n\"\n  syntax:\n    content: public override string ToString()\n    content.vb: Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>Returns <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>A string representation of the current object.</p>\\n\"\n  overridden: System.Object.ToString\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: HttpResponseMessage.ToString()\nreferences:\n- uid: System.Net.Http\n  isExternal: false\n  name: System.Net.Http\n  fullName: System.Net.Http\n  commentId: N:System.Net.Http\n  nameWithType: System.Net.Http\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  commentId: T:System.IDisposable\n  nameWithType: IDisposable\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Net.HttpStatusCode\n  parent: System.Net\n  isExternal: false\n  name: HttpStatusCode\n  fullName: System.Net.HttpStatusCode\n  commentId: T:System.Net.HttpStatusCode\n  nameWithType: HttpStatusCode\n- uid: System.Net\n  isExternal: false\n  name: System.Net\n  fullName: System.Net\n  commentId: N:System.Net\n  nameWithType: System.Net\n- uid: System.Net.Http.HttpContent\n  parent: System.Net.Http\n  isExternal: false\n  name: HttpContent\n  fullName: System.Net.Http.HttpContent\n  commentId: T:System.Net.Http.HttpContent\n  nameWithType: HttpContent\n- uid: System.Net.Http.Headers.HttpResponseHeaders\n  parent: System.Net.Http.Headers\n  isExternal: false\n  name: HttpResponseHeaders\n  fullName: System.Net.Http.Headers.HttpResponseHeaders\n  commentId: T:System.Net.Http.Headers.HttpResponseHeaders\n  nameWithType: HttpResponseHeaders\n- uid: System.Net.Http.Headers\n  isExternal: false\n  name: System.Net.Http.Headers\n  fullName: System.Net.Http.Headers\n  commentId: N:System.Net.Http.Headers\n  nameWithType: System.Net.Http.Headers\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Net.Http.HttpRequestMessage\n  parent: System.Net.Http\n  isExternal: false\n  name: HttpRequestMessage\n  fullName: System.Net.Http.HttpRequestMessage\n  commentId: T:System.Net.Http.HttpRequestMessage\n  nameWithType: HttpRequestMessage\n- uid: System.Version\n  parent: System\n  isExternal: false\n  name: Version\n  fullName: System.Version\n  commentId: T:System.Version\n  nameWithType: Version\n- uid: System.IDisposable.Dispose\n  parent: System.IDisposable\n  isExternal: false\n  name: Dispose()\n  fullName: System.IDisposable.Dispose()\n  spec.csharp:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IDisposable.Dispose\n  nameWithType: IDisposable.Dispose()\n- uid: System.Net.Http.HttpResponseMessage\n  parent: System.Net.Http\n  isExternal: false\n  name: HttpResponseMessage\n  fullName: System.Net.Http.HttpResponseMessage\n  commentId: T:System.Net.Http.HttpResponseMessage\n  nameWithType: HttpResponseMessage\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n"}