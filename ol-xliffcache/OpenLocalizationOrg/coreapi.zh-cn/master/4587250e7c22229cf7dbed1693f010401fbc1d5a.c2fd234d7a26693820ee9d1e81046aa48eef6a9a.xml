{"nodes":[{"pos":[1402,1424],"content":"XmlAttributeCollection","needQuote":true,"nodes":[{"content":"XmlAttributeCollection","pos":[0,22]}]},{"pos":[3883,3896],"content":"ItemOf[Int32]","needQuote":true,"nodes":[{"content":"ItemOf[Int32]","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The index of the attribute.","pos":[4671,4703],"source":"\\n<p>The index of the attribute."},{"content":"&lt;/p&gt;\\n","pos":[4704,4710],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The index being passed in is out of range.","pos":[5027,5074],"source":"\\n<p>The index being passed in is out of range."},{"content":"&lt;/p&gt;\\n","pos":[5075,5081],"source":" </p>\\n"},{"pos":[5959,5973],"content":"ItemOf[String]","needQuote":true,"nodes":[{"content":"ItemOf[String]","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The qualified name of the attribute.","pos":[6760,6801],"source":"\\n<p>The qualified name of the attribute."},{"content":"&lt;/p&gt;\\n","pos":[6802,6808],"source":" </p>\\n"},{"pos":[7873,7895],"content":"ItemOf[String, String]","needQuote":true,"nodes":[{"content":"ItemOf[String, String]","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The local name of the attribute.","pos":[8811,8848],"source":"\\n<p>The local name of the attribute."},{"content":"&lt;/p&gt;\\n","pos":[8849,8855],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The namespace URI of the attribute.","pos":[8926,8966],"source":"\\n<p>The namespace URI of the attribute."},{"content":"&lt;/p&gt;\\n","pos":[8967,8973],"source":" </p>\\n"},{"pos":[10118,10135],"content":"ICollection.Count","needQuote":true,"nodes":[{"content":"ICollection.Count","pos":[0,17]}]},{"content":"\\n&lt;p&gt;Returns an &lt;strong&gt;int&lt;/strong&gt; that contains the count of the attributes.&lt;/p&gt;\\n","pos":[11037,11122],"source":"\\n<p>Returns an <strong>int</strong> that contains the count of the attributes.</p>\\n"},{"pos":[11747,11773],"content":"ICollection.IsSynchronized","needQuote":true,"nodes":[{"content":"ICollection.IsSynchronized","pos":[0,26]}]},{"content":"\\n&lt;p&gt;Returns &lt;strong&gt;true&lt;/strong&gt; if the collection is synchronized.&lt;/p&gt;\\n","pos":[12732,12807],"source":"\\n<p>Returns <strong>true</strong> if the collection is synchronized.</p>\\n"},{"pos":[13450,13470],"content":"ICollection.SyncRoot","needQuote":true,"nodes":[{"content":"ICollection.SyncRoot","pos":[0,20]}]},{"pos":[15106,15126],"content":"Append(XmlAttribute)","needQuote":true,"nodes":[{"content":"Append(XmlAttribute)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The &lt;strong&gt;XmlAttribute&lt;/strong&gt; to append to the collection.&lt;/p&gt;\\n","pos":[16051,16124],"source":"\\n<p>The <strong>XmlAttribute</strong> to append to the collection.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;node&lt;/em&gt; was created from a document different from the one that created this collection.","pos":[16235,16336],"source":"\\n<p>\\n<em>node</em> was created from a document different from the one that created this collection."},{"content":"&lt;/p&gt;\\n","pos":[16337,16343],"source":" </p>\\n"},{"pos":[16779,16808],"content":"CopyTo(XmlAttribute[], Int32)","needQuote":true,"nodes":[{"content":"CopyTo(XmlAttribute[], Int32)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;The array that is the destination of the objects copied from this collection.","pos":[17660,17742],"source":"\\n<p>The array that is the destination of the objects copied from this collection."},{"content":"&lt;/p&gt;\\n","pos":[17743,17749],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The index in the array where copying begins.","pos":[17812,17861],"source":"\\n<p>The index in the array where copying begins."},{"content":"&lt;/p&gt;\\n","pos":[17862,17868],"source":" </p>\\n"},{"pos":[18565,18604],"content":"InsertAfter(XmlAttribute, XmlAttribute)","needQuote":true,"nodes":[{"content":"InsertAfter(XmlAttribute, XmlAttribute)","pos":[0,39]}]},{"content":"\\n&lt;p&gt;The &lt;strong&gt;XmlAttribute&lt;/strong&gt; to insert into the collection.&lt;/p&gt;\\n","pos":[19910,19985],"source":"\\n<p>The <strong>XmlAttribute</strong> to insert into the collection.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;newNode&lt;/em&gt; was created from a document different from the one that created this collection.","pos":[20096,20202],"source":"\\n<p>The <em>newNode</em> was created from a document different from the one that created this collection."},{"content":"Or the &lt;em&gt;refNode&lt;/em&gt; is not a member of this collection.","pos":[20203,20262],"source":" Or the <em>refNode</em> is not a member of this collection."},{"content":"&lt;/p&gt;\\n","pos":[20263,20269],"source":" </p>\\n"},{"pos":[20769,20809],"content":"InsertBefore(XmlAttribute, XmlAttribute)","needQuote":true,"nodes":[{"content":"InsertBefore(XmlAttribute, XmlAttribute)","pos":[0,40]}]},{"content":"\\n&lt;p&gt;The &lt;strong&gt;XmlAttribute&lt;/strong&gt; to insert into the collection.&lt;/p&gt;\\n","pos":[22121,22196],"source":"\\n<p>The <strong>XmlAttribute</strong> to insert into the collection.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;newNode&lt;/em&gt; was created from a document different from the one that created this collection.","pos":[22307,22413],"source":"\\n<p>The <em>newNode</em> was created from a document different from the one that created this collection."},{"content":"Or the &lt;em&gt;refNode&lt;/em&gt; is not a member of this collection.","pos":[22414,22473],"source":" Or the <em>refNode</em> is not a member of this collection."},{"content":"&lt;/p&gt;\\n","pos":[22474,22480],"source":" </p>\\n"},{"pos":[22894,22915],"content":"Prepend(XmlAttribute)","needQuote":true,"nodes":[{"content":"Prepend(XmlAttribute)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The &lt;strong&gt;XmlAttribute&lt;/strong&gt; added to the collection.&lt;/p&gt;\\n","pos":[23845,23914],"source":"\\n<p>The <strong>XmlAttribute</strong> added to the collection.</p>\\n"},{"pos":[24306,24326],"content":"Remove(XmlAttribute)","needQuote":true,"nodes":[{"content":"Remove(XmlAttribute)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The node removed or &lt;strong&gt;null&lt;/strong&gt; if it is not found in the collection.&lt;/p&gt;\\n","pos":[25236,25326],"source":"\\n<p>The node removed or <strong>null</strong> if it is not found in the collection.</p>\\n"},{"pos":[25651,25662],"content":"RemoveAll()","needQuote":true,"nodes":[{"content":"RemoveAll()","pos":[0,11]}]},{"pos":[26570,26585],"content":"RemoveAt(Int32)","needQuote":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"content":"\\n&lt;p&gt;The index of the node to remove.","pos":[27305,27342],"source":"\\n<p>The index of the node to remove."},{"content":"The first node has index 0.","pos":[27343,27370]},{"content":"&lt;/p&gt;\\n","pos":[27371,27377],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Returns &lt;strong&gt;null&lt;/strong&gt; if there is no attribute at the specified index.&lt;/p&gt;\\n","pos":[27447,27536],"source":"\\n<p>Returns <strong>null</strong> if there is no attribute at the specified index.</p>\\n"},{"pos":[27925,27946],"content":"SetNamedItem(XmlNode)","needQuote":true,"nodes":[{"content":"SetNamedItem(XmlNode)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;An attribute node to store in this collection.","pos":[28826,28877],"source":"\\n<p>An attribute node to store in this collection."},{"content":"The node will later be accessible using the name of the node.","pos":[28878,28939]},{"content":"If a node with that name is already present in the collection, it is replaced by the new one; otherwise, the node is appended to the end of the collection.","pos":[28940,29095]},{"content":"&lt;/p&gt;\\n","pos":[29096,29102],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;If the &lt;em&gt;node&lt;/em&gt; replaces an existing node with the same name, the old node is returned; otherwise, the added node is returned.&lt;/p&gt;\\n","pos":[29167,29309],"source":"\\n<p>If the <em>node</em> replaces an existing node with the same name, the old node is returned; otherwise, the added node is returned.</p>\\n"},{"pos":[30752,30784],"content":"ICollection.CopyTo(Array, Int32)","needQuote":true,"nodes":[{"content":"ICollection.CopyTo(Array, Int32)","pos":[0,32]}]},{"content":"\\n&lt;p&gt;The array that is the destination of the objects copied from this collection.","pos":[31743,31825],"source":"\\n<p>The array that is the destination of the objects copied from this collection."},{"content":"&lt;/p&gt;\\n","pos":[31826,31832],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The index in the array where copying begins.","pos":[31895,31944],"source":"\\n<p>The index in the array where copying begins."},{"content":"&lt;/p&gt;\\n","pos":[31945,31951],"source":" </p>\\n"},{"pos":[32323,32333],"content":"System.Xml","needQuote":true,"nodes":[{"content":"System.Xml","pos":[0,10]}]},{"pos":[32476,32482],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[32644,32659],"content":"XmlNamedNodeMap","needQuote":true,"nodes":[{"content":"XmlNamedNodeMap","pos":[0,15]}]},{"pos":[32868,32879],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[33092,33103],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[33326,33331],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[33576,33591],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[33722,33735],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[33801,33802],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33829,33830],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33918,33931],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[33997,33998],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34025,34026],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34273,34293],"content":"GetNamedItem(String)","needQuote":true,"nodes":[{"content":"GetNamedItem(String)","pos":[0,20]}]},{"pos":[34450,34462],"content":"GetNamedItem","needQuote":true,"nodes":[{"content":"GetNamedItem","pos":[0,12]}]},{"pos":[34527,34528],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34578,34584],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[34644,34645],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34747,34759],"content":"GetNamedItem","needQuote":true,"nodes":[{"content":"GetNamedItem","pos":[0,12]}]},{"pos":[34824,34825],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34875,34881],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[34941,34942],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35222,35250],"content":"GetNamedItem(String, String)","needQuote":true,"nodes":[{"content":"GetNamedItem(String, String)","pos":[0,28]}]},{"pos":[35436,35448],"content":"GetNamedItem","needQuote":true,"nodes":[{"content":"GetNamedItem","pos":[0,12]}]},{"pos":[35513,35514],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35564,35570],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[35631,35632]},{"pos":[35687,35693],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[35753,35754],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35870,35882],"content":"GetNamedItem","needQuote":true,"nodes":[{"content":"GetNamedItem","pos":[0,12]}]},{"pos":[35947,35948],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35998,36004],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[36065,36066]},{"pos":[36121,36127],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[36187,36188],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36467,36478],"content":"Item(Int32)","needQuote":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[36617,36621],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"pos":[36678,36679],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36728,36733],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[36792,36793],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36886,36890],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"pos":[36947,36948],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36997,37002],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[37061,37062],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37313,37336],"content":"RemoveNamedItem(String)","needQuote":true,"nodes":[{"content":"RemoveNamedItem(String)","pos":[0,23]}]},{"pos":[37499,37514],"content":"RemoveNamedItem","needQuote":true,"nodes":[{"content":"RemoveNamedItem","pos":[0,15]}]},{"pos":[37582,37583],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37633,37639],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[37699,37700],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37805,37820],"content":"RemoveNamedItem","needQuote":true,"nodes":[{"content":"RemoveNamedItem","pos":[0,15]}]},{"pos":[37888,37889],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37939,37945],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[38005,38006],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38295,38326],"content":"RemoveNamedItem(String, String)","needQuote":true,"nodes":[{"content":"RemoveNamedItem(String, String)","pos":[0,31]}]},{"pos":[38518,38533],"content":"RemoveNamedItem","needQuote":true,"nodes":[{"content":"RemoveNamedItem","pos":[0,15]}]},{"pos":[38601,38602],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38652,38658],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[38719,38720]},{"pos":[38775,38781],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[38841,38842],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38961,38976],"content":"RemoveNamedItem","needQuote":true,"nodes":[{"content":"RemoveNamedItem","pos":[0,15]}]},{"pos":[39044,39045],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39095,39101],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[39162,39163]},{"pos":[39218,39224],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[39284,39285],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39534,39544],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[39639,39647],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[39716,39717],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39744,39745],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39815,39823],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[39892,39893],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39920,39921],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40104,40118],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[40237,40243],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[40310,40311],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40361,40367],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[40427,40428],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40511,40517],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[40584,40585],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40635,40641],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[40701,40702],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40916,40938],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[41086,41092],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[41159,41160],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41210,41216],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[41277,41278]},{"pos":[41333,41339],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[41399,41400],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41497,41503],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[41570,41571],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41621,41627],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[41688,41689]},{"pos":[41744,41750],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[41810,41811],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42056,42087],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[42253,42268],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[42344,42345],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42395,42401],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[42462,42463]},{"pos":[42518,42524],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[42584,42585],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42691,42706],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[42782,42783],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42833,42839],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[42900,42901]},{"pos":[42956,42962],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[43022,43023],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43253,43266],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[43367,43378],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[43450,43451],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43478,43479],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43552,43563],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[43635,43636],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43663,43664],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43839,43848],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[43941,43948],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[44016,44017],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44044,44045],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44114,44121],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[44189,44190],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44217,44218],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44393,44410],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[44519,44534],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[44610,44611],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44638,44639],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44716,44731],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[44807,44808],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44835,44836],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45131,45144],"content":"AsQueryable()","needQuote":true,"nodes":[{"content":"AsQueryable()","pos":[0,13]}]},{"pos":[45261,45272],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[45331,45332],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45359,45360],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45441,45452],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[45511,45512],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45539,45540],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45895,45907],"content":"AsParallel()","needQuote":true,"nodes":[{"content":"AsParallel()","pos":[0,12]}]},{"pos":[46040,46050],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[46117,46118],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46145,46146],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46235,46245],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[46312,46313],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46340,46341],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46682,46697],"content":"Cast<TResult>()","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;()","pos":[0,15],"source":"Cast<TResult>()"}]},{"pos":[46901,46914],"content":"Cast<TResult>","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;","pos":[0,13],"source":"Cast<TResult>"}]},{"pos":[46976,46977],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47004,47005],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47083,47099],"content":"Cast(Of TResult)","needQuote":true,"nodes":[{"content":"Cast(Of TResult)","pos":[0,16]}]},{"pos":[47164,47165],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47192,47193],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47571,47588],"content":"OfType<TResult>()","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;()","pos":[0,17],"source":"OfType<TResult>()"}]},{"pos":[47800,47815],"content":"OfType<TResult>","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;","pos":[0,15],"source":"OfType<TResult>"}]},{"pos":[47879,47880],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47907,47908],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47988,48006],"content":"OfType(Of TResult)","needQuote":true,"nodes":[{"content":"OfType(Of TResult)","pos":[0,18]}]},{"pos":[48073,48074],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48101,48102],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[48337,48343],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[48462,48480],"content":"System.Collections","needQuote":true,"nodes":[{"content":"System.Collections","pos":[0,18]}]},{"pos":[48681,48705],"content":"AsQueryable(IEnumerable)","needQuote":true,"nodes":[{"content":"AsQueryable(IEnumerable)","pos":[0,24]}]},{"pos":[48884,48895],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[48954,48955],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[49022,49033],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[49110,49111],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[49224,49235],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[49294,49295],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[49362,49373],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[49450,49451],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[49679,49688],"content":"Queryable","needQuote":true,"nodes":[{"content":"Queryable","pos":[0,9]}]},{"pos":[49894,49917],"content":"AsParallel(IEnumerable)","needQuote":true,"nodes":[{"content":"AsParallel(IEnumerable)","pos":[0,23]}]},{"pos":[50112,50122],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[50189,50190],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[50257,50268],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[50345,50346],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[50467,50477],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[50544,50545],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[50612,50623],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[50700,50701],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[50954,50972],"content":"ParallelEnumerable","needQuote":true,"nodes":[{"content":"ParallelEnumerable","pos":[0,18]}]},{"pos":[51194,51220],"content":"Cast<TResult>(IEnumerable)","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;(IEnumerable)","pos":[0,26],"source":"Cast<TResult>(IEnumerable)"}]},{"pos":[51527,51540],"content":"Cast<TResult>","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;","pos":[0,13],"source":"Cast<TResult>"}]},{"pos":[51602,51603],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51670,51681],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[51758,51759],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51869,51885],"content":"Cast(Of TResult)","needQuote":true,"nodes":[{"content":"Cast(Of TResult)","pos":[0,16]}]},{"pos":[51950,51951],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[52018,52029],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[52106,52107],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[52396,52406],"content":"Enumerable","needQuote":true,"nodes":[{"content":"Enumerable","pos":[0,10]}]},{"pos":[52606,52634],"content":"OfType<TResult>(IEnumerable)","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;(IEnumerable)","pos":[0,28],"source":"OfType<TResult>(IEnumerable)"}]},{"pos":[52949,52964],"content":"OfType<TResult>","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;","pos":[0,15],"source":"OfType<TResult>"}]},{"pos":[53028,53029],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[53096,53107],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[53184,53185],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53297,53315],"content":"OfType(Of TResult)","needQuote":true,"nodes":[{"content":"OfType(Of TResult)","pos":[0,18]}]},{"pos":[53382,53383],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[53450,53461],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[53538,53539],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53801,53812],"content":"System.Linq","needQuote":true,"nodes":[{"content":"System.Linq","pos":[0,11]}]},{"pos":[53957,53962],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[54118,54130],"content":"XmlAttribute","needQuote":true,"nodes":[{"content":"XmlAttribute","pos":[0,12]}]},{"pos":[54301,54307],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[54499,54504],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[54762,54776],"content":"IsSynchronized","needQuote":true,"nodes":[{"content":"IsSynchronized","pos":[0,14]}]},{"pos":[55006,55013],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[55211,55219],"content":"SyncRoot","needQuote":true,"nodes":[{"content":"SyncRoot","pos":[0,8]}]},{"pos":[55405,55419],"content":"XmlAttribute[]","needQuote":true,"nodes":[{"content":"XmlAttribute[]","pos":[0,14]}]},{"pos":[55583,55595],"content":"XmlAttribute","needQuote":true,"nodes":[{"content":"XmlAttribute","pos":[0,12]}]},{"content":"[]","pos":[55645,55647]},{"pos":[55722,55734],"content":"XmlAttribute","needQuote":true,"nodes":[{"content":"XmlAttribute","pos":[0,12]}]},{"pos":[55783,55785],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[56000,56021],"content":"SetNamedItem(XmlNode)","needQuote":true,"nodes":[{"content":"SetNamedItem(XmlNode)","pos":[0,21]}]},{"pos":[56188,56200],"content":"SetNamedItem","needQuote":true,"nodes":[{"content":"SetNamedItem","pos":[0,12]}]},{"pos":[56265,56266],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[56321,56328],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[56372,56373],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[56480,56492],"content":"SetNamedItem","needQuote":true,"nodes":[{"content":"SetNamedItem","pos":[0,12]}]},{"pos":[56557,56558],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[56613,56620],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[56664,56665],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[56886,56893],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[57123,57143],"content":"CopyTo(Array, Int32)","needQuote":true,"nodes":[{"content":"CopyTo(Array, Int32)","pos":[0,20]}]},{"pos":[57321,57327],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[57390,57391],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57440,57445],"content":"Array","needQuote":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"content":",","pos":[57484,57485]},{"pos":[57539,57544],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[57603,57604],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57716,57722],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[57785,57786],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57835,57840],"content":"Array","needQuote":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"content":",","pos":[57879,57880]},{"pos":[57934,57939],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[57998,57999],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58210,58215],"content":"Array","needQuote":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[58358,58382],"content":"IndexOutOfRangeException","needQuote":true,"nodes":[{"content":"IndexOutOfRangeException","pos":[0,24]}]},{"pos":[58592,58609],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[58806,58831],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]}],"content":"items:\n- uid: System.Xml.XmlAttributeCollection\n  commentId: T:System.Xml.XmlAttributeCollection\n  id: XmlAttributeCollection\n  parent: System.Xml\n  children:\n  - System.Xml.XmlAttributeCollection.Append(System.Xml.XmlAttribute)\n  - System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)\n  - System.Xml.XmlAttributeCollection.InsertAfter(System.Xml.XmlAttribute,System.Xml.XmlAttribute)\n  - System.Xml.XmlAttributeCollection.InsertBefore(System.Xml.XmlAttribute,System.Xml.XmlAttribute)\n  - System.Xml.XmlAttributeCollection.ItemOf(System.Int32)\n  - System.Xml.XmlAttributeCollection.ItemOf(System.String)\n  - System.Xml.XmlAttributeCollection.ItemOf(System.String,System.String)\n  - System.Xml.XmlAttributeCollection.Prepend(System.Xml.XmlAttribute)\n  - System.Xml.XmlAttributeCollection.Remove(System.Xml.XmlAttribute)\n  - System.Xml.XmlAttributeCollection.RemoveAll\n  - System.Xml.XmlAttributeCollection.RemoveAt(System.Int32)\n  - System.Xml.XmlAttributeCollection.SetNamedItem(System.Xml.XmlNode)\n  - System.Xml.XmlAttributeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count\n  - System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized\n  - System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot\n  langs:\n  - csharp\n  - vb\n  name: XmlAttributeCollection\n  fullName: System.Xml.XmlAttributeCollection\n  type: Class\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: XmlAttributeCollection\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 36\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Represents a collection of attributes that can be accessed by name or index.</p>\\n\"\n  syntax:\n    content: 'public sealed class XmlAttributeCollection : XmlNamedNodeMap, ICollection, IEnumerable'\n    content.vb: >-\n      Public NotInheritable Class XmlAttributeCollection\n          Inherits XmlNamedNodeMap\n          Implements ICollection, IEnumerable\n  seealso:\n  - type: System.Xml.XmlAttribute\n    commentId: T:System.Xml.XmlAttribute\n  - type: System.Xml.XmlElement\n    commentId: T:System.Xml.XmlElement\n  inheritance:\n  - System.Object\n  - System.Xml.XmlNamedNodeMap\n  implements:\n  - System.Collections.ICollection\n  - System.Collections.IEnumerable\n  inheritedMembers:\n  - System.Xml.XmlNamedNodeMap.Count\n  - System.Xml.XmlNamedNodeMap.GetEnumerator\n  - System.Xml.XmlNamedNodeMap.GetNamedItem(System.String)\n  - System.Xml.XmlNamedNodeMap.GetNamedItem(System.String,System.String)\n  - System.Xml.XmlNamedNodeMap.Item(System.Int32)\n  - System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String)\n  - System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String,System.String)\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: XmlAttributeCollection\n  extensionMethods:\n  - System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable\n  - System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel\n  - System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1\n  - System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1\n- uid: System.Xml.XmlAttributeCollection.ItemOf(System.Int32)\n  commentId: P:System.Xml.XmlAttributeCollection.ItemOf(System.Int32)\n  id: ItemOf(System.Int32)\n  parent: System.Xml.XmlAttributeCollection\n  langs:\n  - csharp\n  - vb\n  name: ItemOf[Int32]\n  fullName: System.Xml.XmlAttributeCollection.ItemOf[System.Int32]\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: this[]\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 39\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Gets the attribute with the specified index.</p>\\n\"\n  syntax:\n    content: >-\n      [IndexerName(\"ItemOf\")]\n\n      public XmlAttribute this[int i] { get; }\n    content.vb: >-\n      <IndexerName(\"ItemOf\")>\n\n      Public ReadOnly Property ItemOf(i As Integer) As XmlAttribute\n    parameters:\n    - id: i\n      type: System.Int32\n      description: \"\\n<p>The index of the attribute. </p>\\n\"\n    return:\n      type: System.Xml.XmlAttribute\n      description: \"\\n<p>The <xref href=\\\"System.Xml.XmlAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> at the specified index.</p>\\n\"\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"\\n<p>The index being passed in is out of range. </p>\\n\"\n  seealso:\n  - type: System.Xml.XmlNamedNodeMap.Item(System.Int32)\n    commentId: M:System.Xml.XmlNamedNodeMap.Item(System.Int32)\n  attributes:\n  - type: System.Runtime.CompilerServices.IndexerNameAttribute\n    ctor: System.Runtime.CompilerServices.IndexerNameAttribute.#ctor(System.String)\n    arguments:\n    - type: System.String\n      value: ItemOf\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Xml.XmlAttributeCollection.ItemOf(System.Int32)\n  name.vb: ItemOf(Int32)\n  nameWithType: XmlAttributeCollection.ItemOf[Int32]\n  nameWithType.vb: XmlAttributeCollection.ItemOf(Int32)\n- uid: System.Xml.XmlAttributeCollection.ItemOf(System.String)\n  commentId: P:System.Xml.XmlAttributeCollection.ItemOf(System.String)\n  id: ItemOf(System.String)\n  parent: System.Xml.XmlAttributeCollection\n  langs:\n  - csharp\n  - vb\n  name: ItemOf[String]\n  fullName: System.Xml.XmlAttributeCollection.ItemOf[System.String]\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: this[]\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 41\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Gets the attribute with the specified name.</p>\\n\"\n  syntax:\n    content: >-\n      [IndexerName(\"ItemOf\")]\n\n      public XmlAttribute this[string name] { get; }\n    content.vb: >-\n      <IndexerName(\"ItemOf\")>\n\n      Public ReadOnly Property ItemOf(name As String) As XmlAttribute\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The qualified name of the attribute. </p>\\n\"\n    return:\n      type: System.Xml.XmlAttribute\n      description: \"\\n<p>The <xref href=\\\"System.Xml.XmlAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with the specified name. If the attribute does not exist, this property returns <strong>null</strong>.</p>\\n\"\n  attributes:\n  - type: System.Runtime.CompilerServices.IndexerNameAttribute\n    ctor: System.Runtime.CompilerServices.IndexerNameAttribute.#ctor(System.String)\n    arguments:\n    - type: System.String\n      value: ItemOf\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Xml.XmlAttributeCollection.ItemOf(System.String)\n  name.vb: ItemOf(String)\n  nameWithType: XmlAttributeCollection.ItemOf[String]\n  nameWithType.vb: XmlAttributeCollection.ItemOf(String)\n- uid: System.Xml.XmlAttributeCollection.ItemOf(System.String,System.String)\n  commentId: P:System.Xml.XmlAttributeCollection.ItemOf(System.String,System.String)\n  id: ItemOf(System.String,System.String)\n  parent: System.Xml.XmlAttributeCollection\n  langs:\n  - csharp\n  - vb\n  name: ItemOf[String, String]\n  fullName: System.Xml.XmlAttributeCollection.ItemOf[System.String, System.String]\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: this[]\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 43\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Gets the attribute with the specified local name and namespace Uniform Resource Identifier (URI).</p>\\n\"\n  syntax:\n    content: >-\n      [IndexerName(\"ItemOf\")]\n\n      public XmlAttribute this[string localName, string namespaceURI] { get; }\n    content.vb: >-\n      <IndexerName(\"ItemOf\")>\n\n      Public ReadOnly Property ItemOf(localName As String, namespaceURI As String) As XmlAttribute\n    parameters:\n    - id: localName\n      type: System.String\n      description: \"\\n<p>The local name of the attribute. </p>\\n\"\n    - id: namespaceURI\n      type: System.String\n      description: \"\\n<p>The namespace URI of the attribute. </p>\\n\"\n    return:\n      type: System.Xml.XmlAttribute\n      description: \"\\n<p>The <xref href=\\\"System.Xml.XmlAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with the specified local name and namespace URI. If the attribute does not exist, this property returns <strong>null</strong>.</p>\\n\"\n  attributes:\n  - type: System.Runtime.CompilerServices.IndexerNameAttribute\n    ctor: System.Runtime.CompilerServices.IndexerNameAttribute.#ctor(System.String)\n    arguments:\n    - type: System.String\n      value: ItemOf\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Xml.XmlAttributeCollection.ItemOf(System.String, System.String)\n  name.vb: ItemOf(String, String)\n  nameWithType: XmlAttributeCollection.ItemOf[String, String]\n  nameWithType.vb: XmlAttributeCollection.ItemOf(String, String)\n- uid: System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count\n  commentId: P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count\n  id: System#Collections#ICollection#Count\n  isEii: true\n  parent: System.Xml.XmlAttributeCollection\n  langs:\n  - csharp\n  - vb\n  name: ICollection.Count\n  fullName: System.Xml.XmlAttributeCollection.System.Collections.ICollection.Count\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.ICollection.Count\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 45\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: int ICollection.Count { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.Count As Integer Implements ICollection.Count\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>Returns an <strong>int</strong> that contains the count of the attributes.</p>\\n\"\n  implements:\n  - System.Collections.ICollection.Count\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  name.vb: System.Collections.ICollection.Count\n  nameWithType: XmlAttributeCollection.ICollection.Count\n  nameWithType.vb: XmlAttributeCollection.System.Collections.ICollection.Count\n- uid: System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized\n  commentId: P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Xml.XmlAttributeCollection\n  langs:\n  - csharp\n  - vb\n  name: ICollection.IsSynchronized\n  fullName: System.Xml.XmlAttributeCollection.System.Collections.ICollection.IsSynchronized\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.ICollection.IsSynchronized\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 46\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: bool ICollection.IsSynchronized { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.IsSynchronized As Boolean Implements ICollection.IsSynchronized\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Returns <strong>true</strong> if the collection is synchronized.</p>\\n\"\n  implements:\n  - System.Collections.ICollection.IsSynchronized\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  name.vb: System.Collections.ICollection.IsSynchronized\n  nameWithType: XmlAttributeCollection.ICollection.IsSynchronized\n  nameWithType.vb: XmlAttributeCollection.System.Collections.ICollection.IsSynchronized\n- uid: System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot\n  commentId: P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Xml.XmlAttributeCollection\n  langs:\n  - csharp\n  - vb\n  name: ICollection.SyncRoot\n  fullName: System.Xml.XmlAttributeCollection.System.Collections.ICollection.SyncRoot\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.ICollection.SyncRoot\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 47\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: object ICollection.SyncRoot { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.SyncRoot As Object Implements ICollection.SyncRoot\n    parameters: []\n    return:\n      type: System.Object\n      description: \"\\n<p>Returns the <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is the root of the collection.</p>\\n\"\n  implements:\n  - System.Collections.ICollection.SyncRoot\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  name.vb: System.Collections.ICollection.SyncRoot\n  nameWithType: XmlAttributeCollection.ICollection.SyncRoot\n  nameWithType.vb: XmlAttributeCollection.System.Collections.ICollection.SyncRoot\n- uid: System.Xml.XmlAttributeCollection.Append(System.Xml.XmlAttribute)\n  commentId: M:System.Xml.XmlAttributeCollection.Append(System.Xml.XmlAttribute)\n  id: Append(System.Xml.XmlAttribute)\n  parent: System.Xml.XmlAttributeCollection\n  langs:\n  - csharp\n  - vb\n  name: Append(XmlAttribute)\n  fullName: System.Xml.XmlAttributeCollection.Append(System.Xml.XmlAttribute)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Append\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 48\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Inserts the specified attribute as the last node in the collection.</p>\\n\"\n  syntax:\n    content: public XmlAttribute Append(XmlAttribute node)\n    content.vb: Public Function Append(node As XmlAttribute) As XmlAttribute\n    parameters:\n    - id: node\n      type: System.Xml.XmlAttribute\n      description: \"\\n<p>The <xref href=\\\"System.Xml.XmlAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to insert. </p>\\n\"\n    return:\n      type: System.Xml.XmlAttribute\n      description: \"\\n<p>The <strong>XmlAttribute</strong> to append to the collection.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>node</em> was created from a document different from the one that created this collection. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlAttributeCollection.Append(XmlAttribute)\n- uid: System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)\n  commentId: M:System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)\n  id: CopyTo(System.Xml.XmlAttribute[],System.Int32)\n  parent: System.Xml.XmlAttributeCollection\n  langs:\n  - csharp\n  - vb\n  name: CopyTo(XmlAttribute[], Int32)\n  fullName: System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[], System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CopyTo\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 49\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Copies all the <xref href=\\\"System.Xml.XmlAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects from this collection into the given array.</p>\\n\"\n  syntax:\n    content: public void CopyTo(XmlAttribute[] array, int index)\n    content.vb: Public Sub CopyTo(array As XmlAttribute(), index As Integer)\n    parameters:\n    - id: array\n      type: System.Xml.XmlAttribute[]\n      description: \"\\n<p>The array that is the destination of the objects copied from this collection. </p>\\n\"\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The index in the array where copying begins. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute(), System.Int32)\n  name.vb: CopyTo(XmlAttribute(), Int32)\n  nameWithType: XmlAttributeCollection.CopyTo(XmlAttribute[], Int32)\n  nameWithType.vb: XmlAttributeCollection.CopyTo(XmlAttribute(), Int32)\n- uid: System.Xml.XmlAttributeCollection.InsertAfter(System.Xml.XmlAttribute,System.Xml.XmlAttribute)\n  commentId: M:System.Xml.XmlAttributeCollection.InsertAfter(System.Xml.XmlAttribute,System.Xml.XmlAttribute)\n  id: InsertAfter(System.Xml.XmlAttribute,System.Xml.XmlAttribute)\n  parent: System.Xml.XmlAttributeCollection\n  langs:\n  - csharp\n  - vb\n  name: InsertAfter(XmlAttribute, XmlAttribute)\n  fullName: System.Xml.XmlAttributeCollection.InsertAfter(System.Xml.XmlAttribute, System.Xml.XmlAttribute)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: InsertAfter\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 50\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Inserts the specified attribute immediately after the specified reference attribute.</p>\\n\"\n  syntax:\n    content: public XmlAttribute InsertAfter(XmlAttribute newNode, XmlAttribute refNode)\n    content.vb: Public Function InsertAfter(newNode As XmlAttribute, refNode As XmlAttribute) As XmlAttribute\n    parameters:\n    - id: newNode\n      type: System.Xml.XmlAttribute\n      description: \"\\n<p>The <xref href=\\\"System.Xml.XmlAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to insert. </p>\\n\"\n    - id: refNode\n      type: System.Xml.XmlAttribute\n      description: \"\\n<p>The <xref href=\\\"System.Xml.XmlAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is the reference attribute. <em>newNode</em> is placed after the <em>refNode</em>. </p>\\n\"\n    return:\n      type: System.Xml.XmlAttribute\n      description: \"\\n<p>The <strong>XmlAttribute</strong> to insert into the collection.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The <em>newNode</em> was created from a document different from the one that created this collection. Or the <em>refNode</em> is not a member of this collection. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlAttributeCollection.InsertAfter(XmlAttribute, XmlAttribute)\n- uid: System.Xml.XmlAttributeCollection.InsertBefore(System.Xml.XmlAttribute,System.Xml.XmlAttribute)\n  commentId: M:System.Xml.XmlAttributeCollection.InsertBefore(System.Xml.XmlAttribute,System.Xml.XmlAttribute)\n  id: InsertBefore(System.Xml.XmlAttribute,System.Xml.XmlAttribute)\n  parent: System.Xml.XmlAttributeCollection\n  langs:\n  - csharp\n  - vb\n  name: InsertBefore(XmlAttribute, XmlAttribute)\n  fullName: System.Xml.XmlAttributeCollection.InsertBefore(System.Xml.XmlAttribute, System.Xml.XmlAttribute)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: InsertBefore\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 51\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Inserts the specified attribute immediately before the specified reference attribute.</p>\\n\"\n  syntax:\n    content: public XmlAttribute InsertBefore(XmlAttribute newNode, XmlAttribute refNode)\n    content.vb: Public Function InsertBefore(newNode As XmlAttribute, refNode As XmlAttribute) As XmlAttribute\n    parameters:\n    - id: newNode\n      type: System.Xml.XmlAttribute\n      description: \"\\n<p>The <xref href=\\\"System.Xml.XmlAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to insert. </p>\\n\"\n    - id: refNode\n      type: System.Xml.XmlAttribute\n      description: \"\\n<p>The <xref href=\\\"System.Xml.XmlAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is the reference attribute. <em>newNode</em> is placed before the <em>refNode</em>. </p>\\n\"\n    return:\n      type: System.Xml.XmlAttribute\n      description: \"\\n<p>The <strong>XmlAttribute</strong> to insert into the collection.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The <em>newNode</em> was created from a document different from the one that created this collection. Or the <em>refNode</em> is not a member of this collection. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlAttributeCollection.InsertBefore(XmlAttribute, XmlAttribute)\n- uid: System.Xml.XmlAttributeCollection.Prepend(System.Xml.XmlAttribute)\n  commentId: M:System.Xml.XmlAttributeCollection.Prepend(System.Xml.XmlAttribute)\n  id: Prepend(System.Xml.XmlAttribute)\n  parent: System.Xml.XmlAttributeCollection\n  langs:\n  - csharp\n  - vb\n  name: Prepend(XmlAttribute)\n  fullName: System.Xml.XmlAttributeCollection.Prepend(System.Xml.XmlAttribute)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Prepend\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 52\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Inserts the specified attribute as the first node in the collection.</p>\\n\"\n  syntax:\n    content: public XmlAttribute Prepend(XmlAttribute node)\n    content.vb: Public Function Prepend(node As XmlAttribute) As XmlAttribute\n    parameters:\n    - id: node\n      type: System.Xml.XmlAttribute\n      description: \"\\n<p>The <xref href=\\\"System.Xml.XmlAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to insert. </p>\\n\"\n    return:\n      type: System.Xml.XmlAttribute\n      description: \"\\n<p>The <strong>XmlAttribute</strong> added to the collection.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlAttributeCollection.Prepend(XmlAttribute)\n- uid: System.Xml.XmlAttributeCollection.Remove(System.Xml.XmlAttribute)\n  commentId: M:System.Xml.XmlAttributeCollection.Remove(System.Xml.XmlAttribute)\n  id: Remove(System.Xml.XmlAttribute)\n  parent: System.Xml.XmlAttributeCollection\n  langs:\n  - csharp\n  - vb\n  name: Remove(XmlAttribute)\n  fullName: System.Xml.XmlAttributeCollection.Remove(System.Xml.XmlAttribute)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Remove\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 53\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Removes the specified attribute from the collection.</p>\\n\"\n  syntax:\n    content: public XmlAttribute Remove(XmlAttribute node)\n    content.vb: Public Function Remove(node As XmlAttribute) As XmlAttribute\n    parameters:\n    - id: node\n      type: System.Xml.XmlAttribute\n      description: \"\\n<p>The <xref href=\\\"System.Xml.XmlAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to remove. </p>\\n\"\n    return:\n      type: System.Xml.XmlAttribute\n      description: \"\\n<p>The node removed or <strong>null</strong> if it is not found in the collection.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlAttributeCollection.Remove(XmlAttribute)\n- uid: System.Xml.XmlAttributeCollection.RemoveAll\n  commentId: M:System.Xml.XmlAttributeCollection.RemoveAll\n  id: RemoveAll\n  parent: System.Xml.XmlAttributeCollection\n  langs:\n  - csharp\n  - vb\n  name: RemoveAll()\n  fullName: System.Xml.XmlAttributeCollection.RemoveAll()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAll\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 54\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Removes all attributes from the collection.</p>\\n\"\n  syntax:\n    content: public void RemoveAll()\n    content.vb: Public Sub RemoveAll\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlAttributeCollection.RemoveAll()\n- uid: System.Xml.XmlAttributeCollection.RemoveAt(System.Int32)\n  commentId: M:System.Xml.XmlAttributeCollection.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.Xml.XmlAttributeCollection\n  langs:\n  - csharp\n  - vb\n  name: RemoveAt(Int32)\n  fullName: System.Xml.XmlAttributeCollection.RemoveAt(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAt\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 55\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Removes the attribute corresponding to the specified index from the collection.</p>\\n\"\n  syntax:\n    content: public XmlAttribute RemoveAt(int i)\n    content.vb: Public Function RemoveAt(i As Integer) As XmlAttribute\n    parameters:\n    - id: i\n      type: System.Int32\n      description: \"\\n<p>The index of the node to remove. The first node has index 0. </p>\\n\"\n    return:\n      type: System.Xml.XmlAttribute\n      description: \"\\n<p>Returns <strong>null</strong> if there is no attribute at the specified index.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlAttributeCollection.RemoveAt(Int32)\n- uid: System.Xml.XmlAttributeCollection.SetNamedItem(System.Xml.XmlNode)\n  commentId: M:System.Xml.XmlAttributeCollection.SetNamedItem(System.Xml.XmlNode)\n  id: SetNamedItem(System.Xml.XmlNode)\n  parent: System.Xml.XmlAttributeCollection\n  langs:\n  - csharp\n  - vb\n  name: SetNamedItem(XmlNode)\n  fullName: System.Xml.XmlAttributeCollection.SetNamedItem(System.Xml.XmlNode)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetNamedItem\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 56\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Adds a <xref href=\\\"System.Xml.XmlNode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> using its <xref href=\\\"System.Xml.XmlNode.Name\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property </p>\\n\"\n  syntax:\n    content: public override XmlNode SetNamedItem(XmlNode node)\n    content.vb: Public Overrides Function SetNamedItem(node As XmlNode) As XmlNode\n    parameters:\n    - id: node\n      type: System.Xml.XmlNode\n      description: \"\\n<p>An attribute node to store in this collection. The node will later be accessible using the name of the node. If a node with that name is already present in the collection, it is replaced by the new one; otherwise, the node is appended to the end of the collection. </p>\\n\"\n    return:\n      type: System.Xml.XmlNode\n      description: \"\\n<p>If the <em>node</em> replaces an existing node with the same name, the old node is returned; otherwise, the added node is returned.</p>\\n\"\n  overridden: System.Xml.XmlNamedNodeMap.SetNamedItem(System.Xml.XmlNode)\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>node</em> was created from a different <xref href=\\\"System.Xml.XmlDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> than the one that created this collection.</p>\\n<p>This <strong>XmlAttributeCollection</strong> is read-only. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>\\n<em>node</em> is an <xref href=\\\"System.Xml.XmlAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is already an attribute of another <xref href=\\\"System.Xml.XmlElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object. To re-use attributes in other elements, you must clone the <strong>XmlAttribute</strong> objects you want to re-use. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: XmlAttributeCollection.SetNamedItem(XmlNode)\n- uid: System.Xml.XmlAttributeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  commentId: M:System.Xml.XmlAttributeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Xml.XmlAttributeCollection\n  langs:\n  - csharp\n  - vb\n  name: ICollection.CopyTo(Array, Int32)\n  fullName: System.Xml.XmlAttributeCollection.System.Collections.ICollection.CopyTo(System.Array, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.ICollection.CopyTo\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 57\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: void ICollection.CopyTo(Array array, int index)\n    content.vb: Sub System.Collections.ICollection.CopyTo(array As Array, index As Integer) Implements ICollection.CopyTo\n    parameters:\n    - id: array\n      type: System.Array\n      description: \"\\n<p>The array that is the destination of the objects copied from this collection. </p>\\n\"\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The index in the array where copying begins. </p>\\n\"\n  implements:\n  - System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)\n  nameWithType: XmlAttributeCollection.ICollection.CopyTo(Array, Int32)\n  nameWithType.vb: XmlAttributeCollection.System.Collections.ICollection.CopyTo(Array, Int32)\nreferences:\n- uid: System.Xml\n  isExternal: false\n  name: System.Xml\n  fullName: System.Xml\n  commentId: N:System.Xml\n  nameWithType: System.Xml\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Xml.XmlNamedNodeMap\n  parent: System.Xml\n  isExternal: false\n  name: XmlNamedNodeMap\n  fullName: System.Xml.XmlNamedNodeMap\n  commentId: T:System.Xml.XmlNamedNodeMap\n  nameWithType: XmlNamedNodeMap\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: false\n  name: ICollection\n  fullName: System.Collections.ICollection\n  commentId: T:System.Collections.ICollection\n  nameWithType: ICollection\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerable\n  fullName: System.Collections.IEnumerable\n  commentId: T:System.Collections.IEnumerable\n  nameWithType: IEnumerable\n- uid: System.Xml.XmlNamedNodeMap.Count\n  parent: System.Xml.XmlNamedNodeMap\n  isExternal: false\n  name: Count\n  fullName: System.Xml.XmlNamedNodeMap.Count\n  commentId: P:System.Xml.XmlNamedNodeMap.Count\n  nameWithType: XmlNamedNodeMap.Count\n- uid: System.Xml.XmlNamedNodeMap.GetEnumerator\n  parent: System.Xml.XmlNamedNodeMap\n  isExternal: false\n  name: GetEnumerator()\n  fullName: System.Xml.XmlNamedNodeMap.GetEnumerator()\n  spec.csharp:\n  - uid: System.Xml.XmlNamedNodeMap.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Xml.XmlNamedNodeMap.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNamedNodeMap.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Xml.XmlNamedNodeMap.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNamedNodeMap.GetEnumerator\n  nameWithType: XmlNamedNodeMap.GetEnumerator()\n- uid: System.Xml.XmlNamedNodeMap.GetNamedItem(System.String)\n  parent: System.Xml.XmlNamedNodeMap\n  isExternal: true\n  name: GetNamedItem(String)\n  fullName: System.Xml.XmlNamedNodeMap.GetNamedItem(System.String)\n  spec.csharp:\n  - uid: System.Xml.XmlNamedNodeMap.GetNamedItem(System.String)\n    name: GetNamedItem\n    fullName: System.Xml.XmlNamedNodeMap.GetNamedItem\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNamedNodeMap.GetNamedItem(System.String)\n    name: GetNamedItem\n    fullName: System.Xml.XmlNamedNodeMap.GetNamedItem\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNamedNodeMap.GetNamedItem(System.String)\n  nameWithType: XmlNamedNodeMap.GetNamedItem(String)\n- uid: System.Xml.XmlNamedNodeMap.GetNamedItem(System.String,System.String)\n  parent: System.Xml.XmlNamedNodeMap\n  isExternal: true\n  name: GetNamedItem(String, String)\n  fullName: System.Xml.XmlNamedNodeMap.GetNamedItem(System.String, System.String)\n  spec.csharp:\n  - uid: System.Xml.XmlNamedNodeMap.GetNamedItem(System.String,System.String)\n    name: GetNamedItem\n    fullName: System.Xml.XmlNamedNodeMap.GetNamedItem\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNamedNodeMap.GetNamedItem(System.String,System.String)\n    name: GetNamedItem\n    fullName: System.Xml.XmlNamedNodeMap.GetNamedItem\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNamedNodeMap.GetNamedItem(System.String,System.String)\n  nameWithType: XmlNamedNodeMap.GetNamedItem(String, String)\n- uid: System.Xml.XmlNamedNodeMap.Item(System.Int32)\n  parent: System.Xml.XmlNamedNodeMap\n  isExternal: true\n  name: Item(Int32)\n  fullName: System.Xml.XmlNamedNodeMap.Item(System.Int32)\n  spec.csharp:\n  - uid: System.Xml.XmlNamedNodeMap.Item(System.Int32)\n    name: Item\n    fullName: System.Xml.XmlNamedNodeMap.Item\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNamedNodeMap.Item(System.Int32)\n    name: Item\n    fullName: System.Xml.XmlNamedNodeMap.Item\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNamedNodeMap.Item(System.Int32)\n  nameWithType: XmlNamedNodeMap.Item(Int32)\n- uid: System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String)\n  parent: System.Xml.XmlNamedNodeMap\n  isExternal: true\n  name: RemoveNamedItem(String)\n  fullName: System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String)\n  spec.csharp:\n  - uid: System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String)\n    name: RemoveNamedItem\n    fullName: System.Xml.XmlNamedNodeMap.RemoveNamedItem\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String)\n    name: RemoveNamedItem\n    fullName: System.Xml.XmlNamedNodeMap.RemoveNamedItem\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String)\n  nameWithType: XmlNamedNodeMap.RemoveNamedItem(String)\n- uid: System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String,System.String)\n  parent: System.Xml.XmlNamedNodeMap\n  isExternal: true\n  name: RemoveNamedItem(String, String)\n  fullName: System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String, System.String)\n  spec.csharp:\n  - uid: System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String,System.String)\n    name: RemoveNamedItem\n    fullName: System.Xml.XmlNamedNodeMap.RemoveNamedItem\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String,System.String)\n    name: RemoveNamedItem\n    fullName: System.Xml.XmlNamedNodeMap.RemoveNamedItem\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String,System.String)\n  nameWithType: XmlNamedNodeMap.RemoveNamedItem(String, String)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable\n  parent: System.Linq.Queryable\n  definition: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  name: AsQueryable()\n  fullName: System.Linq.Queryable.AsQueryable()\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  nameWithType: Queryable.AsQueryable()\n- uid: System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel\n  parent: System.Linq.ParallelEnumerable\n  definition: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  name: AsParallel()\n  fullName: System.Linq.ParallelEnumerable.AsParallel()\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel()\n- uid: System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  name: Cast<TResult>()\n  fullName: System.Linq.Enumerable.Cast<TResult>()\n  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)()\n  name.vb: Cast(Of TResult)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Cast``1\n    name: Cast<TResult>\n    fullName: System.Linq.Enumerable.Cast<TResult>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Cast``1\n    name: Cast(Of TResult)\n    fullName: System.Linq.Enumerable.Cast(Of TResult)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>()\n  nameWithType.vb: Enumerable.Cast(Of TResult)()\n- uid: System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  name: OfType<TResult>()\n  fullName: System.Linq.Enumerable.OfType<TResult>()\n  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)()\n  name.vb: OfType(Of TResult)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OfType``1\n    name: OfType<TResult>\n    fullName: System.Linq.Enumerable.OfType<TResult>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OfType``1\n    name: OfType(Of TResult)\n    fullName: System.Linq.Enumerable.OfType(Of TResult)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>()\n  nameWithType.vb: Enumerable.OfType(Of TResult)()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Collections\n  isExternal: false\n  name: System.Collections\n  fullName: System.Collections\n  commentId: N:System.Collections\n  nameWithType: System.Collections\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  isExternal: true\n  name: AsQueryable(IEnumerable)\n  fullName: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n- uid: System.Linq.Queryable\n  parent: System.Linq\n  isExternal: false\n  name: Queryable\n  fullName: System.Linq.Queryable\n  commentId: T:System.Linq.Queryable\n  nameWithType: Queryable\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  isExternal: true\n  name: AsParallel(IEnumerable)\n  fullName: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.ParallelEnumerable\n  parent: System.Linq\n  isExternal: false\n  name: ParallelEnumerable\n  fullName: System.Linq.ParallelEnumerable\n  commentId: T:System.Linq.ParallelEnumerable\n  nameWithType: ParallelEnumerable\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  isExternal: true\n  name: Cast<TResult>(IEnumerable)\n  fullName: System.Linq.Enumerable.Cast<TResult>(System.Collections.IEnumerable)\n  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)(System.Collections.IEnumerable)\n  name.vb: Cast(Of TResult)(IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n    name: Cast<TResult>\n    fullName: System.Linq.Enumerable.Cast<TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n    name: Cast(Of TResult)\n    fullName: System.Linq.Enumerable.Cast(Of TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  nameWithType.vb: Enumerable.Cast(Of TResult)(IEnumerable)\n- uid: System.Linq.Enumerable\n  parent: System.Linq\n  isExternal: false\n  name: Enumerable\n  fullName: System.Linq.Enumerable\n  commentId: T:System.Linq.Enumerable\n  nameWithType: Enumerable\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  isExternal: true\n  name: OfType<TResult>(IEnumerable)\n  fullName: System.Linq.Enumerable.OfType<TResult>(System.Collections.IEnumerable)\n  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)(System.Collections.IEnumerable)\n  name.vb: OfType(Of TResult)(IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n    name: OfType<TResult>\n    fullName: System.Linq.Enumerable.OfType<TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n    name: OfType(Of TResult)\n    fullName: System.Linq.Enumerable.OfType(Of TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  nameWithType.vb: Enumerable.OfType(Of TResult)(IEnumerable)\n- uid: System.Linq\n  isExternal: false\n  name: System.Linq\n  fullName: System.Linq\n  commentId: N:System.Linq\n  nameWithType: System.Linq\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.Xml.XmlAttribute\n  parent: System.Xml\n  isExternal: false\n  name: XmlAttribute\n  fullName: System.Xml.XmlAttribute\n  commentId: T:System.Xml.XmlAttribute\n  nameWithType: XmlAttribute\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Collections.ICollection.Count\n  parent: System.Collections.ICollection\n  isExternal: false\n  name: Count\n  fullName: System.Collections.ICollection.Count\n  commentId: P:System.Collections.ICollection.Count\n  nameWithType: ICollection.Count\n- uid: System.Collections.ICollection.IsSynchronized\n  parent: System.Collections.ICollection\n  isExternal: false\n  name: IsSynchronized\n  fullName: System.Collections.ICollection.IsSynchronized\n  commentId: P:System.Collections.ICollection.IsSynchronized\n  nameWithType: ICollection.IsSynchronized\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Collections.ICollection.SyncRoot\n  parent: System.Collections.ICollection\n  isExternal: false\n  name: SyncRoot\n  fullName: System.Collections.ICollection.SyncRoot\n  commentId: P:System.Collections.ICollection.SyncRoot\n  nameWithType: ICollection.SyncRoot\n- uid: System.Xml.XmlAttribute[]\n  name: XmlAttribute[]\n  fullName: System.Xml.XmlAttribute[]\n  fullname.vb: System.Xml.XmlAttribute()\n  name.vb: XmlAttribute()\n  spec.csharp:\n  - uid: System.Xml.XmlAttribute\n    name: XmlAttribute\n    fullName: System.Xml.XmlAttribute\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Xml.XmlAttribute\n    name: XmlAttribute\n    fullName: System.Xml.XmlAttribute\n  - name: ()\n    fullName: ()\n  nameWithType: XmlAttribute[]\n  nameWithType.vb: XmlAttribute()\n- uid: System.Xml.XmlNamedNodeMap.SetNamedItem(System.Xml.XmlNode)\n  parent: System.Xml.XmlNamedNodeMap\n  isExternal: false\n  name: SetNamedItem(XmlNode)\n  fullName: System.Xml.XmlNamedNodeMap.SetNamedItem(System.Xml.XmlNode)\n  spec.csharp:\n  - uid: System.Xml.XmlNamedNodeMap.SetNamedItem(System.Xml.XmlNode)\n    name: SetNamedItem\n    fullName: System.Xml.XmlNamedNodeMap.SetNamedItem\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNamedNodeMap.SetNamedItem(System.Xml.XmlNode)\n    name: SetNamedItem\n    fullName: System.Xml.XmlNamedNodeMap.SetNamedItem\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNamedNodeMap.SetNamedItem(System.Xml.XmlNode)\n  nameWithType: XmlNamedNodeMap.SetNamedItem(XmlNode)\n- uid: System.Xml.XmlNode\n  parent: System.Xml\n  isExternal: false\n  name: XmlNode\n  fullName: System.Xml.XmlNode\n  commentId: T:System.Xml.XmlNode\n  nameWithType: XmlNode\n- uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n  parent: System.Collections.ICollection\n  isExternal: true\n  name: CopyTo(Array, Int32)\n  fullName: System.Collections.ICollection.CopyTo(System.Array, System.Int32)\n  spec.csharp:\n  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n    name: CopyTo\n    fullName: System.Collections.ICollection.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.Array\n    name: Array\n    fullName: System.Array\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n    name: CopyTo\n    fullName: System.Collections.ICollection.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.Array\n    name: Array\n    fullName: System.Array\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n  nameWithType: ICollection.CopyTo(Array, Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  fullName: System.Array\n  commentId: T:System.Array\n  nameWithType: Array\n- uid: System.IndexOutOfRangeException\n  isExternal: false\n  name: IndexOutOfRangeException\n  fullName: System.IndexOutOfRangeException\n  nameWithType: IndexOutOfRangeException\n  commentId: T:System.IndexOutOfRangeException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n"}