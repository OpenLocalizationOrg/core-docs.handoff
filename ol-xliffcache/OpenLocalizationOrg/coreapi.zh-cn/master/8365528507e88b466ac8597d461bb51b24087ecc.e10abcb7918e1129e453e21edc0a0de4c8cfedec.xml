{"nodes":[{"pos":[538,558],"content":"DefaultTraceListener","needQuote":true,"nodes":[{"content":"DefaultTraceListener","pos":[0,20]}]},{"pos":[4285,4307],"content":"DefaultTraceListener()","needQuote":true,"nodes":[{"content":"DefaultTraceListener()","pos":[0,22]}]},{"pos":[6136,6148],"content":"Fail(String)","needQuote":true,"nodes":[{"content":"Fail(String)","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The message to emit or display.","pos":[6938,6974],"source":"\\n<p>The message to emit or display."},{"content":"&lt;/p&gt;\\n","pos":[6975,6981],"source":" </p>\\n"},{"pos":[8065,8085],"content":"Fail(String, String)","needQuote":true,"nodes":[{"content":"Fail(String, String)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The message to emit or display.","pos":[8945,8981],"source":"\\n<p>The message to emit or display."},{"content":"&lt;/p&gt;\\n","pos":[8982,8988],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The detailed message to emit or display.","pos":[9060,9105],"source":"\\n<p>The detailed message to emit or display."},{"content":"&lt;/p&gt;\\n","pos":[9106,9112],"source":" </p>\\n"},{"pos":[10179,10192],"content":"Write(String)","needQuote":true,"nodes":[{"content":"Write(String)","pos":[0,13]}]},{"pos":[12394,12411],"content":"WriteLine(String)","needQuote":true,"nodes":[{"content":"WriteLine(String)","pos":[0,17]}]},{"pos":[14490,14508],"content":"System.Diagnostics","needQuote":true,"nodes":[{"content":"System.Diagnostics","pos":[0,18]}]},{"pos":[14675,14681],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14857,14870],"content":"TraceListener","needQuote":true,"nodes":[{"content":"TraceListener","pos":[0,13]}]},{"pos":[15065,15076],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[15288,15294],"content":"Filter","needQuote":true,"nodes":[{"content":"Filter","pos":[0,6]}]},{"pos":[15562,15573],"content":"IndentLevel","needQuote":true,"nodes":[{"content":"IndentLevel","pos":[0,11]}]},{"pos":[15855,15865],"content":"IndentSize","needQuote":true,"nodes":[{"content":"IndentSize","pos":[0,10]}]},{"pos":[16146,16158],"content":"IsThreadSafe","needQuote":true,"nodes":[{"content":"IsThreadSafe","pos":[0,12]}]},{"pos":[16437,16441],"content":"Name","needQuote":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[16702,16712],"content":"NeedIndent","needQuote":true,"nodes":[{"content":"NeedIndent","pos":[0,10]}]},{"pos":[16999,17017],"content":"TraceOutputOptions","needQuote":true,"nodes":[{"content":"TraceOutputOptions","pos":[0,18]}]},{"pos":[17317,17326],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[17457,17464],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[17530,17531],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17558,17559],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17647,17654],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[17720,17721],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17748,17749],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17996,18012],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[18173,18180],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[18246,18247],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18298,18305],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[18366,18367],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18471,18478],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[18544,18545],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18596,18603],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[18664,18665],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18918,18925],"content":"Flush()","needQuote":true,"nodes":[{"content":"Flush()","pos":[0,7]}]},{"pos":[19052,19057],"content":"Flush","needQuote":true,"nodes":[{"content":"Flush","pos":[0,5]}]},{"pos":[19121,19122],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19149,19150],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19236,19241],"content":"Flush","needQuote":true,"nodes":[{"content":"Flush","pos":[0,5]}]},{"pos":[19305,19306],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19333,19334],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19674,19739],"content":"TraceData(TraceEventCache, String, TraceEventType, Int32, Object)","needQuote":true,"nodes":[{"content":"TraceData(TraceEventCache, String, TraceEventType, Int32, Object)","pos":[0,65]}]},{"pos":[20098,20107],"content":"TraceData","needQuote":true,"nodes":[{"content":"TraceData","pos":[0,9]}]},{"pos":[20175,20176],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20247,20262],"content":"TraceEventCache","needQuote":true,"nodes":[{"content":"TraceEventCache","pos":[0,15]}]},{"content":",","pos":[20323,20324]},{"pos":[20379,20385],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[20446,20447]},{"pos":[20522,20536],"content":"TraceEventType","needQuote":true,"nodes":[{"content":"TraceEventType","pos":[0,14]}]},{"content":",","pos":[20596,20597]},{"pos":[20651,20656],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[20716,20717]},{"pos":[20772,20778],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20838,20839],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21040,21049],"content":"TraceData","needQuote":true,"nodes":[{"content":"TraceData","pos":[0,9]}]},{"pos":[21117,21118],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21189,21204],"content":"TraceEventCache","needQuote":true,"nodes":[{"content":"TraceEventCache","pos":[0,15]}]},{"content":",","pos":[21265,21266]},{"pos":[21321,21327],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[21388,21389]},{"pos":[21464,21478],"content":"TraceEventType","needQuote":true,"nodes":[{"content":"TraceEventType","pos":[0,14]}]},{"content":",","pos":[21538,21539]},{"pos":[21593,21598],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[21658,21659]},{"pos":[21714,21720],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21780,21781],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22296,22363],"content":"TraceData(TraceEventCache, String, TraceEventType, Int32, Object[])","needQuote":true,"nodes":[{"content":"TraceData(TraceEventCache, String, TraceEventType, Int32, Object[])","pos":[0,67]}]},{"pos":[22980,22989],"content":"TraceData","needQuote":true,"nodes":[{"content":"TraceData","pos":[0,9]}]},{"pos":[23057,23058],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23129,23144],"content":"TraceEventCache","needQuote":true,"nodes":[{"content":"TraceEventCache","pos":[0,15]}]},{"content":",","pos":[23205,23206]},{"pos":[23261,23267],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[23328,23329]},{"pos":[23404,23418],"content":"TraceEventType","needQuote":true,"nodes":[{"content":"TraceEventType","pos":[0,14]}]},{"content":",","pos":[23478,23479]},{"pos":[23533,23538],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[23598,23599]},{"pos":[23654,23660],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[23721,23723]},{"pos":[23754,23755],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23958,23967],"content":"TraceData","needQuote":true,"nodes":[{"content":"TraceData","pos":[0,9]}]},{"pos":[24035,24036],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24107,24122],"content":"TraceEventCache","needQuote":true,"nodes":[{"content":"TraceEventCache","pos":[0,15]}]},{"content":",","pos":[24183,24184]},{"pos":[24239,24245],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[24306,24307]},{"pos":[24382,24396],"content":"TraceEventType","needQuote":true,"nodes":[{"content":"TraceEventType","pos":[0,14]}]},{"content":",","pos":[24456,24457]},{"pos":[24511,24516],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[24576,24577]},{"pos":[24632,24638],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24698,24700],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[24728,24729],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25334,25392],"content":"TraceEvent(TraceEventCache, String, TraceEventType, Int32)","needQuote":true,"nodes":[{"content":"TraceEvent(TraceEventCache, String, TraceEventType, Int32)","pos":[0,58]}]},{"pos":[25724,25734],"content":"TraceEvent","needQuote":true,"nodes":[{"content":"TraceEvent","pos":[0,10]}]},{"pos":[25803,25804],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25875,25890],"content":"TraceEventCache","needQuote":true,"nodes":[{"content":"TraceEventCache","pos":[0,15]}]},{"content":",","pos":[25951,25952]},{"pos":[26007,26013],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[26074,26075]},{"pos":[26150,26164],"content":"TraceEventType","needQuote":true,"nodes":[{"content":"TraceEventType","pos":[0,14]}]},{"content":",","pos":[26224,26225]},{"pos":[26279,26284],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[26343,26344],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26532,26542],"content":"TraceEvent","needQuote":true,"nodes":[{"content":"TraceEvent","pos":[0,10]}]},{"pos":[26611,26612],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26683,26698],"content":"TraceEventCache","needQuote":true,"nodes":[{"content":"TraceEventCache","pos":[0,15]}]},{"content":",","pos":[26759,26760]},{"pos":[26815,26821],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[26882,26883]},{"pos":[26958,26972],"content":"TraceEventType","needQuote":true,"nodes":[{"content":"TraceEventType","pos":[0,14]}]},{"content":",","pos":[27032,27033]},{"pos":[27087,27092],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[27151,27152],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27646,27712],"content":"TraceEvent(TraceEventCache, String, TraceEventType, Int32, String)","needQuote":true,"nodes":[{"content":"TraceEvent(TraceEventCache, String, TraceEventType, Int32, String)","pos":[0,66]}]},{"pos":[28073,28083],"content":"TraceEvent","needQuote":true,"nodes":[{"content":"TraceEvent","pos":[0,10]}]},{"pos":[28152,28153],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28224,28239],"content":"TraceEventCache","needQuote":true,"nodes":[{"content":"TraceEventCache","pos":[0,15]}]},{"content":",","pos":[28300,28301]},{"pos":[28356,28362],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[28423,28424]},{"pos":[28499,28513],"content":"TraceEventType","needQuote":true,"nodes":[{"content":"TraceEventType","pos":[0,14]}]},{"content":",","pos":[28573,28574]},{"pos":[28628,28633],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[28693,28694]},{"pos":[28749,28755],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[28815,28816],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29018,29028],"content":"TraceEvent","needQuote":true,"nodes":[{"content":"TraceEvent","pos":[0,10]}]},{"pos":[29097,29098],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29169,29184],"content":"TraceEventCache","needQuote":true,"nodes":[{"content":"TraceEventCache","pos":[0,15]}]},{"content":",","pos":[29245,29246]},{"pos":[29301,29307],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[29368,29369]},{"pos":[29444,29458],"content":"TraceEventType","needQuote":true,"nodes":[{"content":"TraceEventType","pos":[0,14]}]},{"content":",","pos":[29518,29519]},{"pos":[29573,29578],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[29638,29639]},{"pos":[29694,29700],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[29760,29761],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30293,30369],"content":"TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[])","needQuote":true,"nodes":[{"content":"TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[])","pos":[0,76]}]},{"pos":[31042,31052],"content":"TraceEvent","needQuote":true,"nodes":[{"content":"TraceEvent","pos":[0,10]}]},{"pos":[31121,31122],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31193,31208],"content":"TraceEventCache","needQuote":true,"nodes":[{"content":"TraceEventCache","pos":[0,15]}]},{"content":",","pos":[31269,31270]},{"pos":[31325,31331],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[31392,31393]},{"pos":[31468,31482],"content":"TraceEventType","needQuote":true,"nodes":[{"content":"TraceEventType","pos":[0,14]}]},{"content":",","pos":[31542,31543]},{"pos":[31597,31602],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[31662,31663]},{"pos":[31718,31724],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[31785,31786]},{"pos":[31841,31847],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[31908,31910]},{"pos":[31941,31942],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32160,32170],"content":"TraceEvent","needQuote":true,"nodes":[{"content":"TraceEvent","pos":[0,10]}]},{"pos":[32239,32240],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32311,32326],"content":"TraceEventCache","needQuote":true,"nodes":[{"content":"TraceEventCache","pos":[0,15]}]},{"content":",","pos":[32387,32388]},{"pos":[32443,32449],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[32510,32511]},{"pos":[32586,32600],"content":"TraceEventType","needQuote":true,"nodes":[{"content":"TraceEventType","pos":[0,14]}]},{"content":",","pos":[32660,32661]},{"pos":[32715,32720],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[32780,32781]},{"pos":[32836,32842],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[32903,32904]},{"pos":[32959,32965],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[33025,33027],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[33055,33056],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33607,33620],"content":"Write(Object)","needQuote":true,"nodes":[{"content":"Write(Object)","pos":[0,13]}]},{"pos":[33775,33780],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[33844,33845],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33895,33901],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[33961,33962],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34063,34068],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[34132,34133],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34183,34189],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[34249,34250],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34525,34546],"content":"Write(Object, String)","needQuote":true,"nodes":[{"content":"Write(Object, String)","pos":[0,21]}]},{"pos":[34730,34735],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[34799,34800],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34850,34856],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[34917,34918]},{"pos":[34973,34979],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[35039,35040],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35155,35160],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[35224,35225],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35275,35281],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[35342,35343]},{"pos":[35398,35404],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[35464,35465],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35762,35783],"content":"Write(String, String)","needQuote":true,"nodes":[{"content":"Write(String, String)","pos":[0,21]}]},{"pos":[35967,35972],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[36036,36037],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36087,36093],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[36154,36155]},{"pos":[36210,36216],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[36276,36277],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36392,36397],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[36461,36462],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36512,36518],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[36579,36580]},{"pos":[36635,36641],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[36701,36702],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36977,36990],"content":"WriteIndent()","needQuote":true,"nodes":[{"content":"WriteIndent()","pos":[0,13]}]},{"pos":[37129,37140],"content":"WriteIndent","needQuote":true,"nodes":[{"content":"WriteIndent","pos":[0,11]}]},{"pos":[37210,37211],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37238,37239],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37331,37342],"content":"WriteIndent","needQuote":true,"nodes":[{"content":"WriteIndent","pos":[0,11]}]},{"pos":[37412,37413],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37440,37441],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37697,37714],"content":"WriteLine(Object)","needQuote":true,"nodes":[{"content":"WriteLine(Object)","pos":[0,17]}]},{"pos":[37877,37886],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[37954,37955],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38005,38011],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[38071,38072],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38177,38186],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[38254,38255],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38305,38311],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[38371,38372],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38659,38684],"content":"WriteLine(Object, String)","needQuote":true,"nodes":[{"content":"WriteLine(Object, String)","pos":[0,25]}]},{"pos":[38876,38885],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[38953,38954],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39004,39010],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[39071,39072]},{"pos":[39127,39133],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[39193,39194],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39313,39322],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[39390,39391],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39441,39447],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[39508,39509]},{"pos":[39564,39570],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[39630,39631],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39940,39965],"content":"WriteLine(String, String)","needQuote":true,"nodes":[{"content":"WriteLine(String, String)","pos":[0,25]}]},{"pos":[40157,40166],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[40234,40235],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40285,40291],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[40352,40353]},{"pos":[40408,40414],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[40474,40475],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40594,40603],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[40671,40672],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40722,40728],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[40789,40790]},{"pos":[40845,40851],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[40911,40912],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41153,41163],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[41258,41266],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[41335,41336],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41363,41364],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41434,41442],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[41511,41512],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41539,41540],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41723,41737],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[41856,41862],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[41929,41930],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41980,41986],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[42046,42047],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42130,42136],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[42203,42204],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42254,42260],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[42320,42321],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42535,42557],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[42705,42711],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[42778,42779],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42829,42835],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[42896,42897]},{"pos":[42952,42958],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[43018,43019],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43116,43122],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[43189,43190],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43240,43246],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[43307,43308]},{"pos":[43363,43369],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[43429,43430],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43675,43706],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[43872,43887],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[43963,43964],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44014,44020],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[44081,44082]},{"pos":[44137,44143],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[44203,44204],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44310,44325],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[44401,44402],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44452,44458],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[44519,44520]},{"pos":[44575,44581],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[44641,44642],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44872,44885],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[44986,44997],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[45069,45070],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45097,45098],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45171,45182],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[45254,45255],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45282,45283],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45458,45467],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[45560,45567],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[45635,45636],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45663,45664],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45733,45740],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[45808,45809],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45836,45837],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46012,46029],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[46138,46153],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[46229,46230],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46257,46258],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46335,46350],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[46426,46427],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46454,46455],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46600,46606],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[46801,46813],"content":"Fail(String)","needQuote":true,"nodes":[{"content":"Fail(String)","pos":[0,12]}]},{"pos":[46966,46970],"content":"Fail","needQuote":true,"nodes":[{"content":"Fail","pos":[0,4]}]},{"pos":[47033,47034],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47084,47090],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[47150,47151],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47251,47255],"content":"Fail","needQuote":true,"nodes":[{"content":"Fail","pos":[0,4]}]},{"pos":[47318,47319],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47369,47375],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[47435,47436],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47630,47636],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[47859,47879],"content":"Fail(String, String)","needQuote":true,"nodes":[{"content":"Fail(String, String)","pos":[0,20]}]},{"pos":[48061,48065],"content":"Fail","needQuote":true,"nodes":[{"content":"Fail","pos":[0,4]}]},{"pos":[48128,48129],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48179,48185],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[48246,48247]},{"pos":[48302,48308],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[48368,48369],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[48483,48487],"content":"Fail","needQuote":true,"nodes":[{"content":"Fail","pos":[0,4]}]},{"pos":[48550,48551],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48601,48607],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[48668,48669]},{"pos":[48724,48730],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[48790,48791],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[49072,49085],"content":"Write(String)","needQuote":true,"nodes":[{"content":"Write(String)","pos":[0,13]}]},{"pos":[49240,49245],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[49309,49310],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[49360,49366],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[49426,49427],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[49528,49533],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[49597,49598],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[49648,49654],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[49714,49715],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[49980,49997],"content":"WriteLine(String)","needQuote":true,"nodes":[{"content":"WriteLine(String)","pos":[0,17]}]},{"pos":[50160,50169],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[50237,50238],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[50288,50294],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[50354,50355],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[50460,50469],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[50537,50538],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[50588,50594],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[50654,50655],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]}],"content":"items:\n- uid: System.Diagnostics.DefaultTraceListener\n  commentId: T:System.Diagnostics.DefaultTraceListener\n  id: DefaultTraceListener\n  parent: System.Diagnostics\n  children:\n  - System.Diagnostics.DefaultTraceListener.#ctor\n  - System.Diagnostics.DefaultTraceListener.Fail(System.String)\n  - System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)\n  - System.Diagnostics.DefaultTraceListener.Write(System.String)\n  - System.Diagnostics.DefaultTraceListener.WriteLine(System.String)\n  langs:\n  - csharp\n  - vb\n  name: DefaultTraceListener\n  fullName: System.Diagnostics.DefaultTraceListener\n  type: Class\n  source:\n    remote:\n      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/DefaultTraceListener.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DefaultTraceListener\n    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/DefaultTraceListener.cs\n    startLine: 19\n  assemblies:\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Provides the default output methods and behavior for tracing.</p>\\n\"\n  syntax:\n    content: 'public class DefaultTraceListener : TraceListener, IDisposable'\n    content.vb: >-\n      Public Class DefaultTraceListener\n          Inherits TraceListener\n          Implements IDisposable\n  seealso:\n  - type: System.Diagnostics.TraceListener\n    commentId: T:System.Diagnostics.TraceListener\n  - type: System.Diagnostics.TextWriterTraceListener\n    commentId: T:System.Diagnostics.TextWriterTraceListener\n  - type: System.Diagnostics.ConsoleTraceListener\n    commentId: T:System.Diagnostics.ConsoleTraceListener\n  - type: System.Diagnostics.Debug\n    commentId: T:System.Diagnostics.Debug\n  - type: System.Diagnostics.Trace\n    commentId: T:System.Diagnostics.Trace\n  inheritance:\n  - System.Object\n  - System.Diagnostics.TraceListener\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Diagnostics.TraceListener.Filter\n  - System.Diagnostics.TraceListener.IndentLevel\n  - System.Diagnostics.TraceListener.IndentSize\n  - System.Diagnostics.TraceListener.IsThreadSafe\n  - System.Diagnostics.TraceListener.Name\n  - System.Diagnostics.TraceListener.NeedIndent\n  - System.Diagnostics.TraceListener.TraceOutputOptions\n  - System.Diagnostics.TraceListener.Dispose\n  - System.Diagnostics.TraceListener.Dispose(System.Boolean)\n  - System.Diagnostics.TraceListener.Flush\n  - System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)\n  - System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])\n  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)\n  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)\n  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])\n  - System.Diagnostics.TraceListener.Write(System.Object)\n  - System.Diagnostics.TraceListener.Write(System.Object,System.String)\n  - System.Diagnostics.TraceListener.Write(System.String,System.String)\n  - System.Diagnostics.TraceListener.WriteIndent\n  - System.Diagnostics.TraceListener.WriteLine(System.Object)\n  - System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)\n  - System.Diagnostics.TraceListener.WriteLine(System.String,System.String)\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: DefaultTraceListener\n- uid: System.Diagnostics.DefaultTraceListener.#ctor\n  commentId: M:System.Diagnostics.DefaultTraceListener.#ctor\n  id: '#ctor'\n  parent: System.Diagnostics.DefaultTraceListener\n  langs:\n  - csharp\n  - vb\n  name: DefaultTraceListener()\n  fullName: System.Diagnostics.DefaultTraceListener.DefaultTraceListener()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/DefaultTraceListener.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/DefaultTraceListener.cs\n    startLine: 28\n  assemblies:\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Diagnostics.DefaultTraceListener\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with \\\"Default\\\" as its <xref href=\\\"System.Diagnostics.TraceListener.Name\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property value.</p>\\n\"\n  syntax:\n    content: public DefaultTraceListener()\n    content.vb: Public Sub New\n  seealso:\n  - type: System.Diagnostics.TraceListener\n    commentId: T:System.Diagnostics.TraceListener\n  - type: System.Diagnostics.DefaultTraceListener\n    commentId: T:System.Diagnostics.DefaultTraceListener\n  - type: System.Diagnostics.ConsoleTraceListener\n    commentId: T:System.Diagnostics.ConsoleTraceListener\n  - type: System.Diagnostics.TextWriterTraceListener\n    commentId: T:System.Diagnostics.TextWriterTraceListener\n  - type: System.Diagnostics.Debug\n    commentId: T:System.Diagnostics.Debug\n  - type: System.Diagnostics.Trace\n    commentId: T:System.Diagnostics.Trace\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DefaultTraceListener.DefaultTraceListener()\n- uid: System.Diagnostics.DefaultTraceListener.Fail(System.String)\n  commentId: M:System.Diagnostics.DefaultTraceListener.Fail(System.String)\n  id: Fail(System.String)\n  parent: System.Diagnostics.DefaultTraceListener\n  langs:\n  - csharp\n  - vb\n  name: Fail(String)\n  fullName: System.Diagnostics.DefaultTraceListener.Fail(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/DefaultTraceListener.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Fail\n    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/DefaultTraceListener.cs\n    startLine: 40\n  assemblies:\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Emits or displays a message and a stack trace for an assertion that always fails.</p>\\n\"\n  syntax:\n    content: public override void Fail(string message)\n    content.vb: Public Overrides Sub Fail(message As String)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>The message to emit or display. </p>\\n\"\n  overridden: System.Diagnostics.TraceListener.Fail(System.String)\n  seealso:\n  - type: System.Diagnostics.TraceListener\n    commentId: T:System.Diagnostics.TraceListener\n  - type: System.Diagnostics.DefaultTraceListener\n    commentId: T:System.Diagnostics.DefaultTraceListener\n  - type: System.Diagnostics.ConsoleTraceListener\n    commentId: T:System.Diagnostics.ConsoleTraceListener\n  - type: System.Diagnostics.TextWriterTraceListener\n    commentId: T:System.Diagnostics.TextWriterTraceListener\n  - type: System.Diagnostics.Debug\n    commentId: T:System.Diagnostics.Debug\n  - type: System.Diagnostics.Trace\n    commentId: T:System.Diagnostics.Trace\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: DefaultTraceListener.Fail(String)\n- uid: System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)\n  commentId: M:System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)\n  id: Fail(System.String,System.String)\n  parent: System.Diagnostics.DefaultTraceListener\n  langs:\n  - csharp\n  - vb\n  name: Fail(String, String)\n  fullName: System.Diagnostics.DefaultTraceListener.Fail(System.String, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/DefaultTraceListener.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Fail\n    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/DefaultTraceListener.cs\n    startLine: 51\n  assemblies:\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Emits or displays detailed messages and a stack trace for an assertion that always fails.</p>\\n\"\n  syntax:\n    content: public override void Fail(string message, string detailMessage)\n    content.vb: Public Overrides Sub Fail(message As String, detailMessage As String)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>The message to emit or display. </p>\\n\"\n    - id: detailMessage\n      type: System.String\n      description: \"\\n<p>The detailed message to emit or display. </p>\\n\"\n  overridden: System.Diagnostics.TraceListener.Fail(System.String,System.String)\n  seealso:\n  - type: System.Diagnostics.TraceListener\n    commentId: T:System.Diagnostics.TraceListener\n  - type: System.Diagnostics.DefaultTraceListener\n    commentId: T:System.Diagnostics.DefaultTraceListener\n  - type: System.Diagnostics.ConsoleTraceListener\n    commentId: T:System.Diagnostics.ConsoleTraceListener\n  - type: System.Diagnostics.TextWriterTraceListener\n    commentId: T:System.Diagnostics.TextWriterTraceListener\n  - type: System.Diagnostics.Debug\n    commentId: T:System.Diagnostics.Debug\n  - type: System.Diagnostics.Trace\n    commentId: T:System.Diagnostics.Trace\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: DefaultTraceListener.Fail(String, String)\n- uid: System.Diagnostics.DefaultTraceListener.Write(System.String)\n  commentId: M:System.Diagnostics.DefaultTraceListener.Write(System.String)\n  id: Write(System.String)\n  parent: System.Diagnostics.DefaultTraceListener\n  langs:\n  - csharp\n  - vb\n  name: Write(String)\n  fullName: System.Diagnostics.DefaultTraceListener.Write(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/DefaultTraceListener.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Write\n    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/DefaultTraceListener.cs\n    startLine: 77\n  assemblies:\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Writes the output to the <strong>OutputDebugString</strong> function and to the <xref href=\\\"System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method.</p>\\n\"\n  syntax:\n    content: public override void Write(string message)\n    content.vb: Public Overrides Sub Write(message As String)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>The message to write to <strong>OutputDebugString</strong> and <xref href=\\\"System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  overridden: System.Diagnostics.TraceListener.Write(System.String)\n  seealso:\n  - type: System.Diagnostics.TraceListener\n    commentId: T:System.Diagnostics.TraceListener\n  - type: System.Diagnostics.DefaultTraceListener\n    commentId: T:System.Diagnostics.DefaultTraceListener\n  - type: System.Diagnostics.ConsoleTraceListener\n    commentId: T:System.Diagnostics.ConsoleTraceListener\n  - type: System.Diagnostics.TextWriterTraceListener\n    commentId: T:System.Diagnostics.TextWriterTraceListener\n  - type: System.Diagnostics.Debug\n    commentId: T:System.Diagnostics.Debug\n  - type: System.Diagnostics.Trace\n    commentId: T:System.Diagnostics.Trace\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: DefaultTraceListener.Write(String)\n- uid: System.Diagnostics.DefaultTraceListener.WriteLine(System.String)\n  commentId: M:System.Diagnostics.DefaultTraceListener.WriteLine(System.String)\n  id: WriteLine(System.String)\n  parent: System.Diagnostics.DefaultTraceListener\n  langs:\n  - csharp\n  - vb\n  name: WriteLine(String)\n  fullName: System.Diagnostics.DefaultTraceListener.WriteLine(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/DefaultTraceListener.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteLine\n    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/DefaultTraceListener.cs\n    startLine: 103\n  assemblies:\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Writes the output to the <strong>OutputDebugString</strong> function and to the <xref href=\\\"System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method, followed by a carriage return and line feed (\\\\r\\\\n).</p>\\n\"\n  syntax:\n    content: public override void WriteLine(string message)\n    content.vb: Public Overrides Sub WriteLine(message As String)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>The message to write to <strong>OutputDebugString</strong> and <xref href=\\\"System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  overridden: System.Diagnostics.TraceListener.WriteLine(System.String)\n  seealso:\n  - type: System.Diagnostics.TraceListener\n    commentId: T:System.Diagnostics.TraceListener\n  - type: System.Diagnostics.DefaultTraceListener\n    commentId: T:System.Diagnostics.DefaultTraceListener\n  - type: System.Diagnostics.ConsoleTraceListener\n    commentId: T:System.Diagnostics.ConsoleTraceListener\n  - type: System.Diagnostics.TextWriterTraceListener\n    commentId: T:System.Diagnostics.TextWriterTraceListener\n  - type: System.Diagnostics.Debug\n    commentId: T:System.Diagnostics.Debug\n  - type: System.Diagnostics.Trace\n    commentId: T:System.Diagnostics.Trace\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: DefaultTraceListener.WriteLine(String)\nreferences:\n- uid: System.Diagnostics\n  isExternal: false\n  name: System.Diagnostics\n  fullName: System.Diagnostics\n  nameWithType: System.Diagnostics\n  commentId: N:System.Diagnostics\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Diagnostics.TraceListener\n  parent: System.Diagnostics\n  isExternal: false\n  name: TraceListener\n  fullName: System.Diagnostics.TraceListener\n  nameWithType: TraceListener\n  commentId: T:System.Diagnostics.TraceListener\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  nameWithType: IDisposable\n  commentId: T:System.IDisposable\n- uid: System.Diagnostics.TraceListener.Filter\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: Filter\n  fullName: System.Diagnostics.TraceListener.Filter\n  nameWithType: TraceListener.Filter\n  commentId: P:System.Diagnostics.TraceListener.Filter\n- uid: System.Diagnostics.TraceListener.IndentLevel\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: IndentLevel\n  fullName: System.Diagnostics.TraceListener.IndentLevel\n  nameWithType: TraceListener.IndentLevel\n  commentId: P:System.Diagnostics.TraceListener.IndentLevel\n- uid: System.Diagnostics.TraceListener.IndentSize\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: IndentSize\n  fullName: System.Diagnostics.TraceListener.IndentSize\n  nameWithType: TraceListener.IndentSize\n  commentId: P:System.Diagnostics.TraceListener.IndentSize\n- uid: System.Diagnostics.TraceListener.IsThreadSafe\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: IsThreadSafe\n  fullName: System.Diagnostics.TraceListener.IsThreadSafe\n  nameWithType: TraceListener.IsThreadSafe\n  commentId: P:System.Diagnostics.TraceListener.IsThreadSafe\n- uid: System.Diagnostics.TraceListener.Name\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: Name\n  fullName: System.Diagnostics.TraceListener.Name\n  nameWithType: TraceListener.Name\n  commentId: P:System.Diagnostics.TraceListener.Name\n- uid: System.Diagnostics.TraceListener.NeedIndent\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: NeedIndent\n  fullName: System.Diagnostics.TraceListener.NeedIndent\n  nameWithType: TraceListener.NeedIndent\n  commentId: P:System.Diagnostics.TraceListener.NeedIndent\n- uid: System.Diagnostics.TraceListener.TraceOutputOptions\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: TraceOutputOptions\n  fullName: System.Diagnostics.TraceListener.TraceOutputOptions\n  nameWithType: TraceListener.TraceOutputOptions\n  commentId: P:System.Diagnostics.TraceListener.TraceOutputOptions\n- uid: System.Diagnostics.TraceListener.Dispose\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: Dispose()\n  fullName: System.Diagnostics.TraceListener.Dispose()\n  spec.csharp:\n  - uid: System.Diagnostics.TraceListener.Dispose\n    name: Dispose\n    fullName: System.Diagnostics.TraceListener.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Diagnostics.TraceListener.Dispose\n    name: Dispose\n    fullName: System.Diagnostics.TraceListener.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: TraceListener.Dispose()\n  commentId: M:System.Diagnostics.TraceListener.Dispose\n- uid: System.Diagnostics.TraceListener.Dispose(System.Boolean)\n  parent: System.Diagnostics.TraceListener\n  isExternal: true\n  name: Dispose(Boolean)\n  fullName: System.Diagnostics.TraceListener.Dispose(System.Boolean)\n  spec.csharp:\n  - uid: System.Diagnostics.TraceListener.Dispose(System.Boolean)\n    name: Dispose\n    fullName: System.Diagnostics.TraceListener.Dispose\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Diagnostics.TraceListener.Dispose(System.Boolean)\n    name: Dispose\n    fullName: System.Diagnostics.TraceListener.Dispose\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TraceListener.Dispose(Boolean)\n  commentId: M:System.Diagnostics.TraceListener.Dispose(System.Boolean)\n- uid: System.Diagnostics.TraceListener.Flush\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: Flush()\n  fullName: System.Diagnostics.TraceListener.Flush()\n  spec.csharp:\n  - uid: System.Diagnostics.TraceListener.Flush\n    name: Flush\n    fullName: System.Diagnostics.TraceListener.Flush\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Diagnostics.TraceListener.Flush\n    name: Flush\n    fullName: System.Diagnostics.TraceListener.Flush\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: TraceListener.Flush()\n  commentId: M:System.Diagnostics.TraceListener.Flush\n- uid: System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)\n  parent: System.Diagnostics.TraceListener\n  isExternal: true\n  name: TraceData(TraceEventCache, String, TraceEventType, Int32, Object)\n  fullName: System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache, System.String, System.Diagnostics.TraceEventType, System.Int32, System.Object)\n  spec.csharp:\n  - uid: System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)\n    name: TraceData\n    fullName: System.Diagnostics.TraceListener.TraceData\n  - name: (\n    fullName: (\n  - uid: System.Diagnostics.TraceEventCache\n    name: TraceEventCache\n    fullName: System.Diagnostics.TraceEventCache\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Diagnostics.TraceEventType\n    name: TraceEventType\n    fullName: System.Diagnostics.TraceEventType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)\n    name: TraceData\n    fullName: System.Diagnostics.TraceListener.TraceData\n  - name: (\n    fullName: (\n  - uid: System.Diagnostics.TraceEventCache\n    name: TraceEventCache\n    fullName: System.Diagnostics.TraceEventCache\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Diagnostics.TraceEventType\n    name: TraceEventType\n    fullName: System.Diagnostics.TraceEventType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object)\n  commentId: M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)\n- uid: System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])\n  parent: System.Diagnostics.TraceListener\n  isExternal: true\n  name: TraceData(TraceEventCache, String, TraceEventType, Int32, Object[])\n  fullName: System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache, System.String, System.Diagnostics.TraceEventType, System.Int32, System.Object[])\n  fullname.vb: System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache, System.String, System.Diagnostics.TraceEventType, System.Int32, System.Object())\n  name.vb: TraceData(TraceEventCache, String, TraceEventType, Int32, Object())\n  spec.csharp:\n  - uid: System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])\n    name: TraceData\n    fullName: System.Diagnostics.TraceListener.TraceData\n  - name: (\n    fullName: (\n  - uid: System.Diagnostics.TraceEventCache\n    name: TraceEventCache\n    fullName: System.Diagnostics.TraceEventCache\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Diagnostics.TraceEventType\n    name: TraceEventType\n    fullName: System.Diagnostics.TraceEventType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])\n    name: TraceData\n    fullName: System.Diagnostics.TraceListener.TraceData\n  - name: (\n    fullName: (\n  - uid: System.Diagnostics.TraceEventCache\n    name: TraceEventCache\n    fullName: System.Diagnostics.TraceEventCache\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Diagnostics.TraceEventType\n    name: TraceEventType\n    fullName: System.Diagnostics.TraceEventType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: TraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object[])\n  nameWithType.vb: TraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object())\n  commentId: M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])\n- uid: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)\n  parent: System.Diagnostics.TraceListener\n  isExternal: true\n  name: TraceEvent(TraceEventCache, String, TraceEventType, Int32)\n  fullName: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache, System.String, System.Diagnostics.TraceEventType, System.Int32)\n  spec.csharp:\n  - uid: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)\n    name: TraceEvent\n    fullName: System.Diagnostics.TraceListener.TraceEvent\n  - name: (\n    fullName: (\n  - uid: System.Diagnostics.TraceEventCache\n    name: TraceEventCache\n    fullName: System.Diagnostics.TraceEventCache\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Diagnostics.TraceEventType\n    name: TraceEventType\n    fullName: System.Diagnostics.TraceEventType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)\n    name: TraceEvent\n    fullName: System.Diagnostics.TraceListener.TraceEvent\n  - name: (\n    fullName: (\n  - uid: System.Diagnostics.TraceEventCache\n    name: TraceEventCache\n    fullName: System.Diagnostics.TraceEventCache\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Diagnostics.TraceEventType\n    name: TraceEventType\n    fullName: System.Diagnostics.TraceEventType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32)\n  commentId: M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)\n- uid: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)\n  parent: System.Diagnostics.TraceListener\n  isExternal: true\n  name: TraceEvent(TraceEventCache, String, TraceEventType, Int32, String)\n  fullName: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache, System.String, System.Diagnostics.TraceEventType, System.Int32, System.String)\n  spec.csharp:\n  - uid: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)\n    name: TraceEvent\n    fullName: System.Diagnostics.TraceListener.TraceEvent\n  - name: (\n    fullName: (\n  - uid: System.Diagnostics.TraceEventCache\n    name: TraceEventCache\n    fullName: System.Diagnostics.TraceEventCache\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Diagnostics.TraceEventType\n    name: TraceEventType\n    fullName: System.Diagnostics.TraceEventType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)\n    name: TraceEvent\n    fullName: System.Diagnostics.TraceListener.TraceEvent\n  - name: (\n    fullName: (\n  - uid: System.Diagnostics.TraceEventCache\n    name: TraceEventCache\n    fullName: System.Diagnostics.TraceEventCache\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Diagnostics.TraceEventType\n    name: TraceEventType\n    fullName: System.Diagnostics.TraceEventType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String)\n  commentId: M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)\n- uid: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])\n  parent: System.Diagnostics.TraceListener\n  isExternal: true\n  name: TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[])\n  fullName: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache, System.String, System.Diagnostics.TraceEventType, System.Int32, System.String, System.Object[])\n  fullname.vb: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache, System.String, System.Diagnostics.TraceEventType, System.Int32, System.String, System.Object())\n  name.vb: TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object())\n  spec.csharp:\n  - uid: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])\n    name: TraceEvent\n    fullName: System.Diagnostics.TraceListener.TraceEvent\n  - name: (\n    fullName: (\n  - uid: System.Diagnostics.TraceEventCache\n    name: TraceEventCache\n    fullName: System.Diagnostics.TraceEventCache\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Diagnostics.TraceEventType\n    name: TraceEventType\n    fullName: System.Diagnostics.TraceEventType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])\n    name: TraceEvent\n    fullName: System.Diagnostics.TraceListener.TraceEvent\n  - name: (\n    fullName: (\n  - uid: System.Diagnostics.TraceEventCache\n    name: TraceEventCache\n    fullName: System.Diagnostics.TraceEventCache\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Diagnostics.TraceEventType\n    name: TraceEventType\n    fullName: System.Diagnostics.TraceEventType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: TraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[])\n  nameWithType.vb: TraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object())\n  commentId: M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])\n- uid: System.Diagnostics.TraceListener.Write(System.Object)\n  parent: System.Diagnostics.TraceListener\n  isExternal: true\n  name: Write(Object)\n  fullName: System.Diagnostics.TraceListener.Write(System.Object)\n  spec.csharp:\n  - uid: System.Diagnostics.TraceListener.Write(System.Object)\n    name: Write\n    fullName: System.Diagnostics.TraceListener.Write\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Diagnostics.TraceListener.Write(System.Object)\n    name: Write\n    fullName: System.Diagnostics.TraceListener.Write\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TraceListener.Write(Object)\n  commentId: M:System.Diagnostics.TraceListener.Write(System.Object)\n- uid: System.Diagnostics.TraceListener.Write(System.Object,System.String)\n  parent: System.Diagnostics.TraceListener\n  isExternal: true\n  name: Write(Object, String)\n  fullName: System.Diagnostics.TraceListener.Write(System.Object, System.String)\n  spec.csharp:\n  - uid: System.Diagnostics.TraceListener.Write(System.Object,System.String)\n    name: Write\n    fullName: System.Diagnostics.TraceListener.Write\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Diagnostics.TraceListener.Write(System.Object,System.String)\n    name: Write\n    fullName: System.Diagnostics.TraceListener.Write\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TraceListener.Write(Object, String)\n  commentId: M:System.Diagnostics.TraceListener.Write(System.Object,System.String)\n- uid: System.Diagnostics.TraceListener.Write(System.String,System.String)\n  parent: System.Diagnostics.TraceListener\n  isExternal: true\n  name: Write(String, String)\n  fullName: System.Diagnostics.TraceListener.Write(System.String, System.String)\n  spec.csharp:\n  - uid: System.Diagnostics.TraceListener.Write(System.String,System.String)\n    name: Write\n    fullName: System.Diagnostics.TraceListener.Write\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Diagnostics.TraceListener.Write(System.String,System.String)\n    name: Write\n    fullName: System.Diagnostics.TraceListener.Write\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TraceListener.Write(String, String)\n  commentId: M:System.Diagnostics.TraceListener.Write(System.String,System.String)\n- uid: System.Diagnostics.TraceListener.WriteIndent\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: WriteIndent()\n  fullName: System.Diagnostics.TraceListener.WriteIndent()\n  spec.csharp:\n  - uid: System.Diagnostics.TraceListener.WriteIndent\n    name: WriteIndent\n    fullName: System.Diagnostics.TraceListener.WriteIndent\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Diagnostics.TraceListener.WriteIndent\n    name: WriteIndent\n    fullName: System.Diagnostics.TraceListener.WriteIndent\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: TraceListener.WriteIndent()\n  commentId: M:System.Diagnostics.TraceListener.WriteIndent\n- uid: System.Diagnostics.TraceListener.WriteLine(System.Object)\n  parent: System.Diagnostics.TraceListener\n  isExternal: true\n  name: WriteLine(Object)\n  fullName: System.Diagnostics.TraceListener.WriteLine(System.Object)\n  spec.csharp:\n  - uid: System.Diagnostics.TraceListener.WriteLine(System.Object)\n    name: WriteLine\n    fullName: System.Diagnostics.TraceListener.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Diagnostics.TraceListener.WriteLine(System.Object)\n    name: WriteLine\n    fullName: System.Diagnostics.TraceListener.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TraceListener.WriteLine(Object)\n  commentId: M:System.Diagnostics.TraceListener.WriteLine(System.Object)\n- uid: System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)\n  parent: System.Diagnostics.TraceListener\n  isExternal: true\n  name: WriteLine(Object, String)\n  fullName: System.Diagnostics.TraceListener.WriteLine(System.Object, System.String)\n  spec.csharp:\n  - uid: System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)\n    name: WriteLine\n    fullName: System.Diagnostics.TraceListener.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)\n    name: WriteLine\n    fullName: System.Diagnostics.TraceListener.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TraceListener.WriteLine(Object, String)\n  commentId: M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)\n- uid: System.Diagnostics.TraceListener.WriteLine(System.String,System.String)\n  parent: System.Diagnostics.TraceListener\n  isExternal: true\n  name: WriteLine(String, String)\n  fullName: System.Diagnostics.TraceListener.WriteLine(System.String, System.String)\n  spec.csharp:\n  - uid: System.Diagnostics.TraceListener.WriteLine(System.String,System.String)\n    name: WriteLine\n    fullName: System.Diagnostics.TraceListener.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Diagnostics.TraceListener.WriteLine(System.String,System.String)\n    name: WriteLine\n    fullName: System.Diagnostics.TraceListener.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TraceListener.WriteLine(String, String)\n  commentId: M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Diagnostics.TraceListener.Fail(System.String)\n  parent: System.Diagnostics.TraceListener\n  isExternal: true\n  name: Fail(String)\n  fullName: System.Diagnostics.TraceListener.Fail(System.String)\n  spec.csharp:\n  - uid: System.Diagnostics.TraceListener.Fail(System.String)\n    name: Fail\n    fullName: System.Diagnostics.TraceListener.Fail\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Diagnostics.TraceListener.Fail(System.String)\n    name: Fail\n    fullName: System.Diagnostics.TraceListener.Fail\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TraceListener.Fail(String)\n  commentId: M:System.Diagnostics.TraceListener.Fail(System.String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Diagnostics.TraceListener.Fail(System.String,System.String)\n  parent: System.Diagnostics.TraceListener\n  isExternal: true\n  name: Fail(String, String)\n  fullName: System.Diagnostics.TraceListener.Fail(System.String, System.String)\n  spec.csharp:\n  - uid: System.Diagnostics.TraceListener.Fail(System.String,System.String)\n    name: Fail\n    fullName: System.Diagnostics.TraceListener.Fail\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Diagnostics.TraceListener.Fail(System.String,System.String)\n    name: Fail\n    fullName: System.Diagnostics.TraceListener.Fail\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TraceListener.Fail(String, String)\n  commentId: M:System.Diagnostics.TraceListener.Fail(System.String,System.String)\n- uid: System.Diagnostics.TraceListener.Write(System.String)\n  parent: System.Diagnostics.TraceListener\n  isExternal: true\n  name: Write(String)\n  fullName: System.Diagnostics.TraceListener.Write(System.String)\n  spec.csharp:\n  - uid: System.Diagnostics.TraceListener.Write(System.String)\n    name: Write\n    fullName: System.Diagnostics.TraceListener.Write\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Diagnostics.TraceListener.Write(System.String)\n    name: Write\n    fullName: System.Diagnostics.TraceListener.Write\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TraceListener.Write(String)\n  commentId: M:System.Diagnostics.TraceListener.Write(System.String)\n- uid: System.Diagnostics.TraceListener.WriteLine(System.String)\n  parent: System.Diagnostics.TraceListener\n  isExternal: true\n  name: WriteLine(String)\n  fullName: System.Diagnostics.TraceListener.WriteLine(System.String)\n  spec.csharp:\n  - uid: System.Diagnostics.TraceListener.WriteLine(System.String)\n    name: WriteLine\n    fullName: System.Diagnostics.TraceListener.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Diagnostics.TraceListener.WriteLine(System.String)\n    name: WriteLine\n    fullName: System.Diagnostics.TraceListener.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TraceListener.WriteLine(String)\n  commentId: M:System.Diagnostics.TraceListener.WriteLine(System.String)\n"}