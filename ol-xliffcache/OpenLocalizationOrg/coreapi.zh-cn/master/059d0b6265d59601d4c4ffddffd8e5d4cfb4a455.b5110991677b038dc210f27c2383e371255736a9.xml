{"nodes":[{"pos":[550,567],"content":"DelegatingHandler","needQuote":true,"nodes":[{"content":"DelegatingHandler","pos":[0,17]}]},{"pos":[2109,2128],"content":"DelegatingHandler()","needQuote":true,"nodes":[{"content":"DelegatingHandler()","pos":[0,19]}]},{"pos":[3173,3210],"content":"DelegatingHandler(HttpMessageHandler)","needQuote":true,"nodes":[{"content":"DelegatingHandler(HttpMessageHandler)","pos":[0,37]}]},{"content":"\\n&lt;p&gt;The inner handler which is responsible for processing the HTTP response messages.&lt;/p&gt;\\n","pos":[4071,4163],"source":"\\n<p>The inner handler which is responsible for processing the HTTP response messages.</p>\\n"},{"pos":[4515,4527],"content":"InnerHandler","needQuote":true,"nodes":[{"content":"InnerHandler","pos":[0,12]}]},{"pos":[5784,5800],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to release both managed and unmanaged resources; &lt;strong&gt;false&lt;/strong&gt; to releases only unmanaged resources.","pos":[6621,6759],"source":"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to releases only unmanaged resources."},{"content":"&lt;/p&gt;\\n","pos":[6760,6766],"source":" </p>\\n"},{"pos":[7401,7449],"content":"SendAsync(HttpRequestMessage, CancellationToken)","needQuote":true,"nodes":[{"content":"SendAsync(HttpRequestMessage, CancellationToken)","pos":[0,48]}]},{"content":"\\n&lt;p&gt;The HTTP request message to send to the server.&lt;/p&gt;\\n","pos":[8413,8471],"source":"\\n<p>The HTTP request message to send to the server.</p>\\n"},{"content":"\\n&lt;p&gt;A cancellation token to cancel operation.&lt;/p&gt;\\n","pos":[8568,8620],"source":"\\n<p>A cancellation token to cancel operation.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;request&lt;/em&gt; was &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[9155,9213],"source":"\\n<p>The <em>request</em> was <strong>null</strong>.</p>\\n"},{"pos":[9452,9467],"content":"System.Net.Http","needQuote":true,"nodes":[{"content":"System.Net.Http","pos":[0,15]}]},{"pos":[9625,9631],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9806,9824],"content":"HttpMessageHandler","needQuote":true,"nodes":[{"content":"HttpMessageHandler","pos":[0,18]}]},{"pos":[10028,10039],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[10256,10265],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[10400,10407],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[10475,10476],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10503,10504],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10594,10601],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[10669,10670],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10697,10698],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10899,10909],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[11004,11012],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[11081,11082],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11109,11110],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11180,11188],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[11257,11258],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11285,11286],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11469,11483],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[11602,11608],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[11675,11676],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11726,11732],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11792,11793],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11876,11882],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[11949,11950],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12000,12006],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12066,12067],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12281,12303],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[12451,12457],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12524,12525],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12575,12581],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12642,12643]},{"pos":[12698,12704],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12764,12765],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12862,12868],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12935,12936],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12986,12992],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[13053,13054]},{"pos":[13109,13115],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13175,13176],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13421,13452],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[13618,13633],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[13709,13710],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13760,13766],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[13827,13828]},{"pos":[13883,13889],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13949,13950],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14056,14071],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[14147,14148],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14198,14204],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14265,14266]},{"pos":[14321,14327],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14387,14388],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14618,14631],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[14732,14743],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[14815,14816],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14843,14844],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14917,14928],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[15000,15001],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15028,15029],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15204,15213],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[15306,15313],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[15381,15382],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15409,15410],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15479,15486],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[15554,15555],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15582,15583],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15758,15775],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[15884,15899],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[15975,15976],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16003,16004],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16081,16096],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[16172,16173],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16200,16201],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16346,16352],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[16555,16571],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[16736,16743],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[16811,16812],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16863,16870],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[16931,16932],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17038,17045],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[17113,17114],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17165,17172],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[17233,17234],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17444,17451],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[17728,17776],"content":"SendAsync(HttpRequestMessage, CancellationToken)","needQuote":true,"nodes":[{"content":"SendAsync(HttpRequestMessage, CancellationToken)","pos":[0,48]}]},{"pos":[18056,18065],"content":"SendAsync","needQuote":true,"nodes":[{"content":"SendAsync","pos":[0,9]}]},{"pos":[18135,18136],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18207,18225],"content":"HttpRequestMessage","needQuote":true,"nodes":[{"content":"HttpRequestMessage","pos":[0,18]}]},{"content":",","pos":[18286,18287]},{"pos":[18363,18380],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[18461,18462],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18625,18634],"content":"SendAsync","needQuote":true,"nodes":[{"content":"SendAsync","pos":[0,9]}]},{"pos":[18704,18705],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18776,18794],"content":"HttpRequestMessage","needQuote":true,"nodes":[{"content":"HttpRequestMessage","pos":[0,18]}]},{"content":",","pos":[18855,18856]},{"pos":[18932,18949],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[19030,19031],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19359,19377],"content":"HttpRequestMessage","needQuote":true,"nodes":[{"content":"HttpRequestMessage","pos":[0,18]}]},{"pos":[19607,19624],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[19913,19938],"content":"Task<HttpResponseMessage>","needQuote":true,"nodes":[{"content":"Task&lt;HttpResponseMessage&gt;","pos":[0,25],"source":"Task<HttpResponseMessage>"}]},{"pos":[20203,20207],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[20281,20282],"content":"<","needQuote":true,"nodes":[]},{"pos":[20354,20373],"content":"HttpResponseMessage","needQuote":true,"nodes":[{"content":"HttpResponseMessage","pos":[0,19]}]},{"pos":[20516,20520],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[20595,20598]},{"pos":[20677,20696],"content":"HttpResponseMessage","needQuote":true,"nodes":[{"content":"HttpResponseMessage","pos":[0,19]}]},{"pos":[20757,20758],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20997,21013],"content":"System.Threading","needQuote":true,"nodes":[{"content":"System.Threading","pos":[0,16]}]},{"pos":[21173,21186],"content":"Task<TResult>","needQuote":true,"nodes":[{"content":"Task&lt;TResult&gt;","pos":[0,13],"source":"Task<TResult>"}]},{"pos":[21383,21387],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[21440,21441],"content":"<","needQuote":true,"nodes":[]},{"pos":[21468,21475],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[21590,21594],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[21648,21651]},{"pos":[21685,21692],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[21725,21726],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21912,21934],"content":"System.Threading.Tasks","needQuote":true,"nodes":[{"content":"System.Threading.Tasks","pos":[0,22]}]},{"pos":[22111,22132],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]}],"content":"items:\n- uid: System.Net.Http.DelegatingHandler\n  commentId: T:System.Net.Http.DelegatingHandler\n  id: DelegatingHandler\n  parent: System.Net.Http\n  children:\n  - System.Net.Http.DelegatingHandler.#ctor\n  - System.Net.Http.DelegatingHandler.#ctor(System.Net.Http.HttpMessageHandler)\n  - System.Net.Http.DelegatingHandler.Dispose(System.Boolean)\n  - System.Net.Http.DelegatingHandler.InnerHandler\n  - System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  langs:\n  - csharp\n  - vb\n  name: DelegatingHandler\n  fullName: System.Net.Http.DelegatingHandler\n  type: Class\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DelegatingHandler\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 23\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>A type for HTTP handlers that delegate the processing of HTTP response messages to another handler, called the inner handler.</p>\\n\"\n  syntax:\n    content: 'public abstract class DelegatingHandler : HttpMessageHandler, IDisposable'\n    content.vb: >-\n      Public MustInherit Class DelegatingHandler\n          Inherits HttpMessageHandler\n          Implements IDisposable\n  inheritance:\n  - System.Object\n  - System.Net.Http.HttpMessageHandler\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Net.Http.HttpMessageHandler.Dispose\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: DelegatingHandler\n- uid: System.Net.Http.DelegatingHandler.#ctor\n  commentId: M:System.Net.Http.DelegatingHandler.#ctor\n  id: '#ctor'\n  parent: System.Net.Http.DelegatingHandler\n  langs:\n  - csharp\n  - vb\n  name: DelegatingHandler()\n  fullName: System.Net.Http.DelegatingHandler.DelegatingHandler()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 25\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Creates a new instance of the <xref href=\\\"System.Net.Http.DelegatingHandler\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: protected DelegatingHandler()\n    content.vb: Protected Sub New\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: DelegatingHandler.DelegatingHandler()\n- uid: System.Net.Http.DelegatingHandler.#ctor(System.Net.Http.HttpMessageHandler)\n  commentId: M:System.Net.Http.DelegatingHandler.#ctor(System.Net.Http.HttpMessageHandler)\n  id: '#ctor(System.Net.Http.HttpMessageHandler)'\n  parent: System.Net.Http.DelegatingHandler\n  langs:\n  - csharp\n  - vb\n  name: DelegatingHandler(HttpMessageHandler)\n  fullName: System.Net.Http.DelegatingHandler.DelegatingHandler(System.Net.Http.HttpMessageHandler)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 26\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Creates a new instance of the <xref href=\\\"System.Net.Http.DelegatingHandler\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specific inner handler.</p>\\n\"\n  syntax:\n    content: protected DelegatingHandler(HttpMessageHandler innerHandler)\n    content.vb: Protected Sub New(innerHandler As HttpMessageHandler)\n    parameters:\n    - id: innerHandler\n      type: System.Net.Http.HttpMessageHandler\n      description: \"\\n<p>The inner handler which is responsible for processing the HTTP response messages.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: DelegatingHandler.DelegatingHandler(HttpMessageHandler)\n- uid: System.Net.Http.DelegatingHandler.InnerHandler\n  commentId: P:System.Net.Http.DelegatingHandler.InnerHandler\n  id: InnerHandler\n  parent: System.Net.Http.DelegatingHandler\n  langs:\n  - csharp\n  - vb\n  name: InnerHandler\n  fullName: System.Net.Http.DelegatingHandler.InnerHandler\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: InnerHandler\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 27\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Gets or sets the inner handler which processes the HTTP response messages.</p>\\n\"\n  syntax:\n    content: public HttpMessageHandler InnerHandler { get; set; }\n    content.vb: Public Property InnerHandler As HttpMessageHandler\n    parameters: []\n    return:\n      type: System.Net.Http.HttpMessageHandler\n      description: \"\\n<p>Returns <xref href=\\\"System.Net.Http.HttpMessageHandler\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The inner handler for HTTP response messages.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: DelegatingHandler.InnerHandler\n- uid: System.Net.Http.DelegatingHandler.Dispose(System.Boolean)\n  commentId: M:System.Net.Http.DelegatingHandler.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Net.Http.DelegatingHandler\n  langs:\n  - csharp\n  - vb\n  name: Dispose(Boolean)\n  fullName: System.Net.Http.DelegatingHandler.Dispose(System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Dispose\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 28\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Releases the unmanaged resources used by the <xref href=\\\"System.Net.Http.DelegatingHandler\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, and optionally disposes of the managed resources.</p>\\n\"\n  syntax:\n    content: protected override void Dispose(bool disposing)\n    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to releases only unmanaged resources. </p>\\n\"\n  overridden: System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)\n  modifiers.csharp:\n  - protected\n  - override\n  modifiers.vb:\n  - Protected\n  - Overrides\n  nameWithType: DelegatingHandler.Dispose(Boolean)\n- uid: System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  commentId: M:System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  id: SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  parent: System.Net.Http.DelegatingHandler\n  langs:\n  - csharp\n  - vb\n  name: SendAsync(HttpRequestMessage, CancellationToken)\n  fullName: System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage, System.Threading.CancellationToken)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SendAsync\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 29\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Sends an HTTP request to the inner handler to send to the server as an asynchronous operation.</p>\\n\"\n  syntax:\n    content: protected override Task<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\n    content.vb: Protected Overrides Function SendAsync(request As HttpRequestMessage, cancellationToken As CancellationToken) As Task(Of HttpResponseMessage)\n    parameters:\n    - id: request\n      type: System.Net.Http.HttpRequestMessage\n      description: \"\\n<p>The HTTP request message to send to the server.</p>\\n\"\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: \"\\n<p>A cancellation token to cancel operation.</p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}\n      description: \"\\n<p>Returns <xref href=\\\"System.Threading.Tasks.Task`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n<p>The task object representing the asynchronous operation.</p>\\n\"\n  overridden: System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>request</em> was <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  - override\n  modifiers.vb:\n  - Protected\n  - Overrides\n  nameWithType: DelegatingHandler.SendAsync(HttpRequestMessage, CancellationToken)\nreferences:\n- uid: System.Net.Http\n  isExternal: false\n  name: System.Net.Http\n  fullName: System.Net.Http\n  commentId: N:System.Net.Http\n  nameWithType: System.Net.Http\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Net.Http.HttpMessageHandler\n  parent: System.Net.Http\n  isExternal: false\n  name: HttpMessageHandler\n  fullName: System.Net.Http.HttpMessageHandler\n  commentId: T:System.Net.Http.HttpMessageHandler\n  nameWithType: HttpMessageHandler\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  commentId: T:System.IDisposable\n  nameWithType: IDisposable\n- uid: System.Net.Http.HttpMessageHandler.Dispose\n  parent: System.Net.Http.HttpMessageHandler\n  isExternal: false\n  name: Dispose()\n  fullName: System.Net.Http.HttpMessageHandler.Dispose()\n  spec.csharp:\n  - uid: System.Net.Http.HttpMessageHandler.Dispose\n    name: Dispose\n    fullName: System.Net.Http.HttpMessageHandler.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Http.HttpMessageHandler.Dispose\n    name: Dispose\n    fullName: System.Net.Http.HttpMessageHandler.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Http.HttpMessageHandler.Dispose\n  nameWithType: HttpMessageHandler.Dispose()\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)\n  parent: System.Net.Http.HttpMessageHandler\n  isExternal: true\n  name: Dispose(Boolean)\n  fullName: System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)\n  spec.csharp:\n  - uid: System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)\n    name: Dispose\n    fullName: System.Net.Http.HttpMessageHandler.Dispose\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)\n    name: Dispose\n    fullName: System.Net.Http.HttpMessageHandler.Dispose\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)\n  nameWithType: HttpMessageHandler.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  parent: System.Net.Http.HttpMessageHandler\n  isExternal: true\n  name: SendAsync(HttpRequestMessage, CancellationToken)\n  fullName: System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage, System.Threading.CancellationToken)\n  spec.csharp:\n  - uid: System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n    name: SendAsync\n    fullName: System.Net.Http.HttpMessageHandler.SendAsync\n  - name: (\n    fullName: (\n  - uid: System.Net.Http.HttpRequestMessage\n    name: HttpRequestMessage\n    fullName: System.Net.Http.HttpRequestMessage\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n    name: SendAsync\n    fullName: System.Net.Http.HttpMessageHandler.SendAsync\n  - name: (\n    fullName: (\n  - uid: System.Net.Http.HttpRequestMessage\n    name: HttpRequestMessage\n    fullName: System.Net.Http.HttpRequestMessage\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  nameWithType: HttpMessageHandler.SendAsync(HttpRequestMessage, CancellationToken)\n- uid: System.Net.Http.HttpRequestMessage\n  parent: System.Net.Http\n  isExternal: false\n  name: HttpRequestMessage\n  fullName: System.Net.Http.HttpRequestMessage\n  commentId: T:System.Net.Http.HttpRequestMessage\n  nameWithType: HttpRequestMessage\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  fullName: System.Threading.CancellationToken\n  commentId: T:System.Threading.CancellationToken\n  nameWithType: CancellationToken\n- uid: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}\n  parent: System.Threading.Tasks\n  definition: System.Threading.Tasks.Task`1\n  name: Task<HttpResponseMessage>\n  fullName: System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage>\n  fullname.vb: System.Threading.Tasks.Task(Of System.Net.Http.HttpResponseMessage)\n  name.vb: Task(Of HttpResponseMessage)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.Http.HttpResponseMessage\n    name: HttpResponseMessage\n    fullName: System.Net.Http.HttpResponseMessage\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.Http.HttpResponseMessage\n    name: HttpResponseMessage\n    fullName: System.Net.Http.HttpResponseMessage\n  - name: )\n    fullName: )\n  commentId: T:System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}\n  nameWithType: Task<HttpResponseMessage>\n  nameWithType.vb: Task(Of HttpResponseMessage)\n- uid: System.Threading\n  isExternal: false\n  name: System.Threading\n  fullName: System.Threading\n  commentId: N:System.Threading\n  nameWithType: System.Threading\n- uid: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n  fullname.vb: System.Threading.Tasks.Task(Of TResult)\n  name.vb: Task(Of TResult)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  commentId: T:System.Threading.Tasks.Task`1\n  nameWithType: Task<TResult>\n  nameWithType.vb: Task(Of TResult)\n- uid: System.Threading.Tasks\n  isExternal: false\n  name: System.Threading.Tasks\n  fullName: System.Threading.Tasks\n  commentId: N:System.Threading.Tasks\n  nameWithType: System.Threading.Tasks\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n"}