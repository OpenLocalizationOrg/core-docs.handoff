{"nodes":[{"pos":[539,561],"content":"XObjectChangeEventArgs","needQuote":true,"nodes":[{"content":"XObjectChangeEventArgs","pos":[0,22]}]},{"pos":[2163,2166],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[3268,3272],"content":"Name","needQuote":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[4385,4391],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[5513,5518],"content":"Value","needQuote":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[6729,6766],"content":"XObjectChangeEventArgs(XObjectChange)","needQuote":true,"nodes":[{"content":"XObjectChangeEventArgs(XObjectChange)","pos":[0,37]}]},{"pos":[8149,8161],"content":"ObjectChange","needQuote":true,"nodes":[{"content":"ObjectChange","pos":[0,12]}]},{"pos":[9183,9198],"content":"System.Xml.Linq","needQuote":true,"nodes":[{"content":"System.Xml.Linq","pos":[0,15]}]},{"pos":[9356,9362],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9510,9519],"content":"EventArgs","needQuote":true,"nodes":[{"content":"EventArgs","pos":[0,9]}]},{"pos":[9691,9696],"content":"Empty","needQuote":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[9883,9893],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[9988,9996],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[10065,10066],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10093,10094],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10164,10172],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[10241,10242],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10269,10270],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10453,10467],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[10586,10592],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[10659,10660],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10710,10716],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10776,10777],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10860,10866],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[10933,10934],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10984,10990],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11050,11051],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11265,11287],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[11435,11441],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[11508,11509],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11559,11565],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11626,11627]},{"pos":[11682,11688],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11748,11749],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11846,11852],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[11919,11920],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11970,11976],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12037,12038]},{"pos":[12093,12099],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12159,12160],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12405,12436],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[12602,12617],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[12693,12694],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12744,12750],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12811,12812]},{"pos":[12867,12873],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12933,12934],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13040,13055],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[13131,13132],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13182,13188],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[13249,13250]},{"pos":[13305,13311],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13371,13372],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13602,13615],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[13716,13727],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[13799,13800],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13827,13828],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13901,13912],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[13984,13985],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14012,14013],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14188,14197],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[14290,14297],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[14365,14366],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14393,14394],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14463,14470],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[14538,14539],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14566,14567],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14742,14759],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[14868,14883],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[14959,14960],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14987,14988],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15065,15080],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[15156,15157],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15184,15185],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15330,15336],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[15501,15523],"content":"XObjectChangeEventArgs","needQuote":true,"nodes":[{"content":"XObjectChangeEventArgs","pos":[0,22]}]},{"pos":[15759,15772],"content":"XObjectChange","needQuote":true,"nodes":[{"content":"XObjectChange","pos":[0,13]}]}],"content":"items:\n- uid: System.Xml.Linq.XObjectChangeEventArgs\n  commentId: T:System.Xml.Linq.XObjectChangeEventArgs\n  id: XObjectChangeEventArgs\n  parent: System.Xml.Linq\n  children:\n  - System.Xml.Linq.XObjectChangeEventArgs.#ctor(System.Xml.Linq.XObjectChange)\n  - System.Xml.Linq.XObjectChangeEventArgs.Add\n  - System.Xml.Linq.XObjectChangeEventArgs.Name\n  - System.Xml.Linq.XObjectChangeEventArgs.ObjectChange\n  - System.Xml.Linq.XObjectChangeEventArgs.Remove\n  - System.Xml.Linq.XObjectChangeEventArgs.Value\n  langs:\n  - csharp\n  - vb\n  name: XObjectChangeEventArgs\n  fullName: System.Xml.Linq.XObjectChangeEventArgs\n  type: Class\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: XObjectChangeEventArgs\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 415\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Provides data for the <xref href=\\\"System.Xml.Linq.XObject.Changing\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Xml.Linq.XObject.Changed\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> events.</p>\\n\"\n  syntax:\n    content: 'public class XObjectChangeEventArgs : EventArgs'\n    content.vb: >-\n      Public Class XObjectChangeEventArgs\n          Inherits EventArgs\n  seealso:\n  - type: System.Xml.Linq.XObjectChange\n    commentId: T:System.Xml.Linq.XObjectChange\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  inheritedMembers:\n  - System.EventArgs.Empty\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: XObjectChangeEventArgs\n- uid: System.Xml.Linq.XObjectChangeEventArgs.Add\n  commentId: F:System.Xml.Linq.XObjectChangeEventArgs.Add\n  id: Add\n  parent: System.Xml.Linq.XObjectChangeEventArgs\n  langs:\n  - csharp\n  - vb\n  name: Add\n  fullName: System.Xml.Linq.XObjectChangeEventArgs.Add\n  type: Field\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Add\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 417\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Event argument for an <xref href=\\\"System.Xml.Linq.XObjectChange.Add\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> change event.</p>\\n\"\n  syntax:\n    content: public static readonly XObjectChangeEventArgs Add\n    content.vb: Public Shared ReadOnly Add As XObjectChangeEventArgs\n    return:\n      type: System.Xml.Linq.XObjectChangeEventArgs\n  modifiers.csharp:\n  - public\n  - static\n  - readonly\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: XObjectChangeEventArgs.Add\n- uid: System.Xml.Linq.XObjectChangeEventArgs.Name\n  commentId: F:System.Xml.Linq.XObjectChangeEventArgs.Name\n  id: Name\n  parent: System.Xml.Linq.XObjectChangeEventArgs\n  langs:\n  - csharp\n  - vb\n  name: Name\n  fullName: System.Xml.Linq.XObjectChangeEventArgs.Name\n  type: Field\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Name\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 418\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Event argument for a <xref href=\\\"System.Xml.Linq.XObjectChange.Name\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> change event.</p>\\n\"\n  syntax:\n    content: public static readonly XObjectChangeEventArgs Name\n    content.vb: Public Shared ReadOnly Name As XObjectChangeEventArgs\n    return:\n      type: System.Xml.Linq.XObjectChangeEventArgs\n  modifiers.csharp:\n  - public\n  - static\n  - readonly\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: XObjectChangeEventArgs.Name\n- uid: System.Xml.Linq.XObjectChangeEventArgs.Remove\n  commentId: F:System.Xml.Linq.XObjectChangeEventArgs.Remove\n  id: Remove\n  parent: System.Xml.Linq.XObjectChangeEventArgs\n  langs:\n  - csharp\n  - vb\n  name: Remove\n  fullName: System.Xml.Linq.XObjectChangeEventArgs.Remove\n  type: Field\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Remove\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 419\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Event argument for a <xref href=\\\"System.Xml.Linq.XObjectChange.Remove\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> change event.</p>\\n\"\n  syntax:\n    content: public static readonly XObjectChangeEventArgs Remove\n    content.vb: Public Shared ReadOnly Remove As XObjectChangeEventArgs\n    return:\n      type: System.Xml.Linq.XObjectChangeEventArgs\n  modifiers.csharp:\n  - public\n  - static\n  - readonly\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: XObjectChangeEventArgs.Remove\n- uid: System.Xml.Linq.XObjectChangeEventArgs.Value\n  commentId: F:System.Xml.Linq.XObjectChangeEventArgs.Value\n  id: Value\n  parent: System.Xml.Linq.XObjectChangeEventArgs\n  langs:\n  - csharp\n  - vb\n  name: Value\n  fullName: System.Xml.Linq.XObjectChangeEventArgs.Value\n  type: Field\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Value\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 420\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Event argument for a <xref href=\\\"System.Xml.Linq.XObjectChange.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> change event.</p>\\n\"\n  syntax:\n    content: public static readonly XObjectChangeEventArgs Value\n    content.vb: Public Shared ReadOnly Value As XObjectChangeEventArgs\n    return:\n      type: System.Xml.Linq.XObjectChangeEventArgs\n  modifiers.csharp:\n  - public\n  - static\n  - readonly\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: XObjectChangeEventArgs.Value\n- uid: System.Xml.Linq.XObjectChangeEventArgs.#ctor(System.Xml.Linq.XObjectChange)\n  commentId: M:System.Xml.Linq.XObjectChangeEventArgs.#ctor(System.Xml.Linq.XObjectChange)\n  id: '#ctor(System.Xml.Linq.XObjectChange)'\n  parent: System.Xml.Linq.XObjectChangeEventArgs\n  langs:\n  - csharp\n  - vb\n  name: XObjectChangeEventArgs(XObjectChange)\n  fullName: System.Xml.Linq.XObjectChangeEventArgs.XObjectChangeEventArgs(System.Xml.Linq.XObjectChange)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 421\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Xml.Linq.XObjectChangeEventArgs\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class. </p>\\n\"\n  syntax:\n    content: public XObjectChangeEventArgs(XObjectChange objectChange)\n    content.vb: Public Sub New(objectChange As XObjectChange)\n    parameters:\n    - id: objectChange\n      type: System.Xml.Linq.XObjectChange\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XObjectChange\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the event arguments for LINQ to XML events.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XObjectChangeEventArgs.XObjectChangeEventArgs(XObjectChange)\n- uid: System.Xml.Linq.XObjectChangeEventArgs.ObjectChange\n  commentId: P:System.Xml.Linq.XObjectChangeEventArgs.ObjectChange\n  id: ObjectChange\n  parent: System.Xml.Linq.XObjectChangeEventArgs\n  langs:\n  - csharp\n  - vb\n  name: ObjectChange\n  fullName: System.Xml.Linq.XObjectChangeEventArgs.ObjectChange\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ObjectChange\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 422\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Gets the type of change.</p>\\n\"\n  syntax:\n    content: public XObjectChange ObjectChange { get; }\n    content.vb: Public ReadOnly Property ObjectChange As XObjectChange\n    parameters: []\n    return:\n      type: System.Xml.Linq.XObjectChange\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XObjectChange\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the type of change.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: XObjectChangeEventArgs.ObjectChange\nreferences:\n- uid: System.Xml.Linq\n  isExternal: false\n  name: System.Xml.Linq\n  fullName: System.Xml.Linq\n  commentId: N:System.Xml.Linq\n  nameWithType: System.Xml.Linq\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  fullName: System.EventArgs\n  commentId: T:System.EventArgs\n  nameWithType: EventArgs\n- uid: System.EventArgs.Empty\n  parent: System.EventArgs\n  isExternal: true\n  name: Empty\n  fullName: System.EventArgs.Empty\n  commentId: F:System.EventArgs.Empty\n  nameWithType: EventArgs.Empty\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Xml.Linq.XObjectChangeEventArgs\n  parent: System.Xml.Linq\n  isExternal: false\n  name: XObjectChangeEventArgs\n  fullName: System.Xml.Linq.XObjectChangeEventArgs\n  commentId: T:System.Xml.Linq.XObjectChangeEventArgs\n  nameWithType: XObjectChangeEventArgs\n- uid: System.Xml.Linq.XObjectChange\n  parent: System.Xml.Linq\n  isExternal: false\n  name: XObjectChange\n  fullName: System.Xml.Linq.XObjectChange\n  commentId: T:System.Xml.Linq.XObjectChange\n  nameWithType: XObjectChange\n"}