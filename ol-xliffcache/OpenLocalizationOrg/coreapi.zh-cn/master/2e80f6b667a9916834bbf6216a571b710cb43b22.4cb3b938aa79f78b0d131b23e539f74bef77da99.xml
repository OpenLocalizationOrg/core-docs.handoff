{"nodes":[{"pos":[527,551],"content":"EditorBrowsableAttribute","needQuote":true,"nodes":[{"content":"EditorBrowsableAttribute","pos":[0,24]}]},{"pos":[3067,3113],"content":"EditorBrowsableAttribute(EditorBrowsableState)","needQuote":true,"nodes":[{"content":"EditorBrowsableAttribute(EditorBrowsableState)","pos":[0,46]}]},{"pos":[4950,4955],"content":"State","needQuote":true,"nodes":[{"content":"State","pos":[0,5]}]},{"pos":[6467,6481],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The object to test the value equality of.","pos":[7293,7339],"source":"\\n<p>The object to test the value equality of."},{"content":"&lt;/p&gt;\\n","pos":[7340,7346],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the value of the given object is equal to that of the current; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[7407,7542],"source":"\\n<p>\\n<strong>true</strong> if the value of the given object is equal to that of the current; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[8221,8234],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"content":"\\n&lt;p&gt;A 32-bit signed integer hash code.&lt;/p&gt;\\n","pos":[8871,8916],"source":"\\n<p>A 32-bit signed integer hash code.</p>\\n"},{"pos":[9266,9287],"content":"System.ComponentModel","needQuote":true,"nodes":[{"content":"System.ComponentModel","pos":[0,21]}]},{"pos":[9463,9469],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9617,9626],"content":"Attribute","needQuote":true,"nodes":[{"content":"Attribute","pos":[0,9]}]},{"pos":[9795,9805],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[9900,9908],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[9977,9978],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10005,10006],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10076,10084],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[10153,10154],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10181,10182],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10379,10401],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[10549,10555],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[10622,10623],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10673,10679],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10740,10741]},{"pos":[10796,10802],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10862,10863],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10960,10966],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[11033,11034],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11084,11090],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11151,11152]},{"pos":[11207,11213],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11273,11274],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11519,11550],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[11716,11731],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[11807,11808],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11858,11864],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11925,11926]},{"pos":[11981,11987],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12047,12048],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12154,12169],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[12245,12246],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12296,12302],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12363,12364]},{"pos":[12419,12425],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12485,12486],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12712,12721],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[12814,12821],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[12889,12890],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12917,12918],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12987,12994],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[13062,13063],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13090,13091],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13266,13283],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[13392,13407],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[13483,13484],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13511,13512],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13589,13604],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[13680,13681],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13708,13709],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13854,13860],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[14035,14055],"content":"EditorBrowsableState","needQuote":true,"nodes":[{"content":"EditorBrowsableState","pos":[0,20]}]},{"pos":[14306,14320],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[14445,14451],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14500,14501],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14551,14557],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14617,14618],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14704,14710],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14759,14760],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14810,14816],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14876,14877],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15056,15063],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[15236,15249],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[15356,15367],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[15421,15422],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15449,15450],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15526,15537],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[15591,15592],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15619,15620],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15786,15791],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"items:\n- uid: System.ComponentModel.EditorBrowsableAttribute\n  commentId: T:System.ComponentModel.EditorBrowsableAttribute\n  id: EditorBrowsableAttribute\n  parent: System.ComponentModel\n  children:\n  - System.ComponentModel.EditorBrowsableAttribute.#ctor(System.ComponentModel.EditorBrowsableState)\n  - System.ComponentModel.EditorBrowsableAttribute.Equals(System.Object)\n  - System.ComponentModel.EditorBrowsableAttribute.GetHashCode\n  - System.ComponentModel.EditorBrowsableAttribute.State\n  langs:\n  - csharp\n  - vb\n  name: EditorBrowsableAttribute\n  fullName: System.ComponentModel.EditorBrowsableAttribute\n  type: Class\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: EditorBrowsableAttribute\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2540\n  assemblies:\n  - System.Runtime\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Specifies that a property or method is viewable in an editor. This class cannot be inherited.</p>\\n\"\n  syntax:\n    content: >-\n      [AttributeUsage(AttributeTargets.Class | AttributeTargets.Constructor | AttributeTargets.Delegate | AttributeTargets.Enum | AttributeTargets.Event | AttributeTargets.Field | AttributeTargets.Interface | AttributeTargets.Method | AttributeTargets.Property | AttributeTargets.Struct)]\n\n      public sealed class EditorBrowsableAttribute : Attribute\n    content.vb: >-\n      <AttributeUsage(AttributeTargets.Class Or AttributeTargets.Constructor Or AttributeTargets.Delegate Or AttributeTargets.Enum Or AttributeTargets.Event Or AttributeTargets.Field Or AttributeTargets.Interface Or AttributeTargets.Method Or AttributeTargets.Property Or AttributeTargets.Struct)>\n\n      Public NotInheritable Class EditorBrowsableAttribute\n          Inherits Attribute\n  seealso:\n  - type: System.ComponentModel.EditorBrowsableState\n    commentId: T:System.ComponentModel.EditorBrowsableState\n  - type: System.ComponentModel.BrowsableAttribute\n    commentId: T:System.ComponentModel.BrowsableAttribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  attributes:\n  - type: System.AttributeUsageAttribute\n    ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)\n    arguments:\n    - type: System.AttributeTargets\n      value: 6140\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: EditorBrowsableAttribute\n- uid: System.ComponentModel.EditorBrowsableAttribute.#ctor(System.ComponentModel.EditorBrowsableState)\n  commentId: M:System.ComponentModel.EditorBrowsableAttribute.#ctor(System.ComponentModel.EditorBrowsableState)\n  id: '#ctor(System.ComponentModel.EditorBrowsableState)'\n  parent: System.ComponentModel.EditorBrowsableAttribute\n  langs:\n  - csharp\n  - vb\n  name: EditorBrowsableAttribute(EditorBrowsableState)\n  fullName: System.ComponentModel.EditorBrowsableAttribute.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2543\n  assemblies:\n  - System.Runtime\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.ComponentModel.EditorBrowsableAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with an <xref href=\\\"System.ComponentModel.EditorBrowsableState\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public EditorBrowsableAttribute(EditorBrowsableState state)\n    content.vb: Public Sub New(state As EditorBrowsableState)\n    parameters:\n    - id: state\n      type: System.ComponentModel.EditorBrowsableState\n      description: \"\\n<p>The <xref href=\\\"System.ComponentModel.EditorBrowsableState\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to set <xref href=\\\"System.ComponentModel.EditorBrowsableAttribute.State\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to. </p>\\n\"\n  seealso:\n  - type: System.ComponentModel.EditorBrowsableState\n    commentId: T:System.ComponentModel.EditorBrowsableState\n  - type: System.ComponentModel.BrowsableAttribute\n    commentId: T:System.ComponentModel.BrowsableAttribute\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: EditorBrowsableAttribute.EditorBrowsableAttribute(EditorBrowsableState)\n- uid: System.ComponentModel.EditorBrowsableAttribute.State\n  commentId: P:System.ComponentModel.EditorBrowsableAttribute.State\n  id: State\n  parent: System.ComponentModel.EditorBrowsableAttribute\n  langs:\n  - csharp\n  - vb\n  name: State\n  fullName: System.ComponentModel.EditorBrowsableAttribute.State\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: State\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2544\n  assemblies:\n  - System.Runtime\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Gets the browsable state of the property or method.</p>\\n\"\n  syntax:\n    content: public EditorBrowsableState State { get; }\n    content.vb: Public ReadOnly Property State As EditorBrowsableState\n    parameters: []\n    return:\n      type: System.ComponentModel.EditorBrowsableState\n      description: \"\\n<p>An <xref href=\\\"System.ComponentModel.EditorBrowsableState\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is the browsable state of the property or method.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.EditorBrowsableState\n    commentId: T:System.ComponentModel.EditorBrowsableState\n  - type: System.ComponentModel.BrowsableAttribute\n    commentId: T:System.ComponentModel.BrowsableAttribute\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: EditorBrowsableAttribute.State\n- uid: System.ComponentModel.EditorBrowsableAttribute.Equals(System.Object)\n  commentId: M:System.ComponentModel.EditorBrowsableAttribute.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.ComponentModel.EditorBrowsableAttribute\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  fullName: System.ComponentModel.EditorBrowsableAttribute.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equals\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2545\n  assemblies:\n  - System.Runtime\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns whether the value of the given object is equal to the current <xref href=\\\"System.ComponentModel.EditorBrowsableAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override bool Equals(object obj)\n    content.vb: Public Overrides Function Equals(obj As Object) As Boolean\n    parameters:\n    - id: obj\n      type: System.Object\n      description: \"\\n<p>The object to test the value equality of. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the value of the given object is equal to that of the current; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.Attribute.Equals(System.Object)\n  seealso:\n  - type: System.ComponentModel.EditorBrowsableState\n    commentId: T:System.ComponentModel.EditorBrowsableState\n  - type: System.ComponentModel.BrowsableAttribute\n    commentId: T:System.ComponentModel.BrowsableAttribute\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: EditorBrowsableAttribute.Equals(Object)\n- uid: System.ComponentModel.EditorBrowsableAttribute.GetHashCode\n  commentId: M:System.ComponentModel.EditorBrowsableAttribute.GetHashCode\n  id: GetHashCode\n  parent: System.ComponentModel.EditorBrowsableAttribute\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  fullName: System.ComponentModel.EditorBrowsableAttribute.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetHashCode\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2546\n  assemblies:\n  - System.Runtime\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns the hash code for this instance.</p>\\n\"\n  syntax:\n    content: public override int GetHashCode()\n    content.vb: Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>A 32-bit signed integer hash code.</p>\\n\"\n  overridden: System.Attribute.GetHashCode\n  seealso:\n  - type: System.Attribute.GetHashCode\n    commentId: M:System.Attribute.GetHashCode\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: EditorBrowsableAttribute.GetHashCode()\nreferences:\n- uid: System.ComponentModel\n  isExternal: false\n  name: System.ComponentModel\n  fullName: System.ComponentModel\n  commentId: N:System.ComponentModel\n  nameWithType: System.ComponentModel\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  fullName: System.Attribute\n  commentId: T:System.Attribute\n  nameWithType: Attribute\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.ComponentModel.EditorBrowsableState\n  parent: System.ComponentModel\n  isExternal: false\n  name: EditorBrowsableState\n  fullName: System.ComponentModel.EditorBrowsableState\n  commentId: T:System.ComponentModel.EditorBrowsableState\n  nameWithType: EditorBrowsableState\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Attribute.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Attribute.Equals(System.Object)\n    name: Equals\n    fullName: System.Attribute.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Attribute.Equals(System.Object)\n    name: Equals\n    fullName: System.Attribute.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Attribute.Equals(System.Object)\n  nameWithType: Attribute.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.Attribute.GetHashCode()\n  spec.csharp:\n  - uid: System.Attribute.GetHashCode\n    name: GetHashCode\n    fullName: System.Attribute.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Attribute.GetHashCode\n    name: GetHashCode\n    fullName: System.Attribute.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Attribute.GetHashCode\n  nameWithType: Attribute.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n"}