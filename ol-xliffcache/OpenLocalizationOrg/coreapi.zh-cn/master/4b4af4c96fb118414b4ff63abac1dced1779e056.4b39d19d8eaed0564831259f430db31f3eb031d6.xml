{"nodes":[{"pos":[422,436],"content":"SafeWaitHandle","needQuote":true,"nodes":[{"content":"SafeWaitHandle","pos":[0,14]}]},{"pos":[3463,3494],"content":"SafeWaitHandle(IntPtr, Boolean)","needQuote":true,"nodes":[{"content":"SafeWaitHandle(IntPtr, Boolean)","pos":[0,31]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to reliably release the handle during the finalization phase; &lt;strong&gt;false&lt;/strong&gt; to prevent reliable release (not recommended).&lt;/p&gt;\\n","pos":[4772,4938],"source":"\\n<p>\\n<strong>true</strong> to reliably release the handle during the finalization phase; <strong>false</strong> to prevent reliable release (not recommended).</p>\\n"},{"pos":[5696,5711],"content":"ReleaseHandle()","needQuote":true,"nodes":[{"content":"ReleaseHandle()","pos":[0,15]}]},{"pos":[6985,6994],"content":"IsInvalid","needQuote":true,"nodes":[{"content":"IsInvalid","pos":[0,9]}]},{"pos":[7979,8006],"content":"Microsoft.Win32.SafeHandles","needQuote":true,"nodes":[{"content":"Microsoft.Win32.SafeHandles","pos":[0,27]}]},{"pos":[8200,8206],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8403,8413],"content":"SafeHandle","needQuote":true,"nodes":[{"content":"SafeHandle","pos":[0,10]}]},{"pos":[8623,8634],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[8864,8870],"content":"handle","needQuote":true,"nodes":[{"content":"handle","pos":[0,6]}]},{"pos":[9168,9176],"content":"IsClosed","needQuote":true,"nodes":[{"content":"IsClosed","pos":[0,8]}]},{"pos":[9503,9527],"content":"DangerousAddRef(Boolean)","needQuote":true,"nodes":[{"content":"DangerousAddRef(Boolean)","pos":[0,24]}]},{"pos":[9723,9738],"content":"DangerousAddRef","needQuote":true,"nodes":[{"content":"DangerousAddRef","pos":[0,15]}]},{"pos":[9821,9822],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9873,9880],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[9941,9942],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10064,10079],"content":"DangerousAddRef","needQuote":true,"nodes":[{"content":"DangerousAddRef","pos":[0,15]}]},{"pos":[10162,10163],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10214,10221],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[10282,10283],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10590,10610],"content":"DangerousGetHandle()","needQuote":true,"nodes":[{"content":"DangerousGetHandle()","pos":[0,20]}]},{"pos":[10781,10799],"content":"DangerousGetHandle","needQuote":true,"nodes":[{"content":"DangerousGetHandle","pos":[0,18]}]},{"pos":[10885,10886],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10913,10914],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11022,11040],"content":"DangerousGetHandle","needQuote":true,"nodes":[{"content":"DangerousGetHandle","pos":[0,18]}]},{"pos":[11126,11127],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11154,11155],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11442,11460],"content":"DangerousRelease()","needQuote":true,"nodes":[{"content":"DangerousRelease()","pos":[0,18]}]},{"pos":[11627,11643],"content":"DangerousRelease","needQuote":true,"nodes":[{"content":"DangerousRelease","pos":[0,16]}]},{"pos":[11727,11728],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11755,11756],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11862,11878],"content":"DangerousRelease","needQuote":true,"nodes":[{"content":"DangerousRelease","pos":[0,16]}]},{"pos":[11962,11963],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11990,11991],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12265,12274],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[12423,12430],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[12505,12506],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12533,12534],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12631,12638],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[12713,12714],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12741,12742],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13013,13029],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[13208,13215],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[13290,13291],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13342,13349],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[13410,13411],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13524,13531],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[13606,13607],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13658,13665],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[13726,13727],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14022,14039],"content":"SetHandle(IntPtr)","needQuote":true,"nodes":[{"content":"SetHandle(IntPtr)","pos":[0,17]}]},{"pos":[14220,14229],"content":"SetHandle","needQuote":true,"nodes":[{"content":"SetHandle","pos":[0,9]}]},{"pos":[14306,14307],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14357,14363],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[14423,14424],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14538,14547],"content":"SetHandle","needQuote":true,"nodes":[{"content":"SetHandle","pos":[0,9]}]},{"pos":[14624,14625],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14675,14681],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[14741,14742],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15034,15054],"content":"SetHandleAsInvalid()","needQuote":true,"nodes":[{"content":"SetHandleAsInvalid()","pos":[0,20]}]},{"pos":[15225,15243],"content":"SetHandleAsInvalid","needQuote":true,"nodes":[{"content":"SetHandleAsInvalid","pos":[0,18]}]},{"pos":[15329,15330],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15357,15358],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15466,15484],"content":"SetHandleAsInvalid","needQuote":true,"nodes":[{"content":"SetHandleAsInvalid","pos":[0,18]}]},{"pos":[15570,15571],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15598,15599],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15821,15831],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[15926,15934],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[16003,16004],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16031,16032],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16102,16110],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[16179,16180],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16207,16208],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16391,16405],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[16524,16530],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16597,16598],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16648,16654],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16714,16715],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16798,16804],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16871,16872],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16922,16928],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16988,16989],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17203,17225],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[17373,17379],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17446,17447],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17497,17503],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17564,17565]},{"pos":[17620,17626],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17686,17687],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17784,17790],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17857,17858],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17908,17914],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17975,17976]},{"pos":[18031,18037],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18097,18098],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18343,18374],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[18540,18555],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[18631,18632],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18682,18688],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18749,18750]},{"pos":[18805,18811],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18871,18872],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18978,18993],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[19069,19070],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19120,19126],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[19187,19188]},{"pos":[19243,19249],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19309,19310],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19540,19553],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[19654,19665],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[19737,19738],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19765,19766],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19839,19850],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[19922,19923],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19950,19951],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20126,20135],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[20228,20235],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[20303,20304],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20331,20332],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20401,20408],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[20476,20477],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20504,20505],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20680,20697],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[20806,20821],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[20897,20898],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20925,20926],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21003,21018],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[21094,21095],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21122,21123],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21268,21274],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[21405,21435],"content":"System.Runtime.InteropServices","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices","pos":[0,30]}]},{"pos":[21638,21644],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[21790,21797],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[22022,22037],"content":"ReleaseHandle()","needQuote":true,"nodes":[{"content":"ReleaseHandle()","pos":[0,15]}]},{"pos":[22198,22211],"content":"ReleaseHandle","needQuote":true,"nodes":[{"content":"ReleaseHandle","pos":[0,13]}]},{"pos":[22292,22293],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22320,22321],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22424,22437],"content":"ReleaseHandle","needQuote":true,"nodes":[{"content":"ReleaseHandle","pos":[0,13]}]},{"pos":[22518,22519],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22546,22547],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22817,22826],"content":"IsInvalid","needQuote":true,"nodes":[{"content":"IsInvalid","pos":[0,9]}]}],"content":"items:\n- uid: Microsoft.Win32.SafeHandles.SafeWaitHandle\n  commentId: T:Microsoft.Win32.SafeHandles.SafeWaitHandle\n  id: SafeWaitHandle\n  parent: Microsoft.Win32.SafeHandles\n  children:\n  - Microsoft.Win32.SafeHandles.SafeWaitHandle.#ctor(System.IntPtr,System.Boolean)\n  - Microsoft.Win32.SafeHandles.SafeWaitHandle.IsInvalid\n  - Microsoft.Win32.SafeHandles.SafeWaitHandle.ReleaseHandle\n  langs:\n  - csharp\n  - vb\n  name: SafeWaitHandle\n  fullName: Microsoft.Win32.SafeHandles.SafeWaitHandle\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/Microsoft/Win32/SafeHandles/SafeWaitHandle.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SafeWaitHandle\n    path: src/mscorlib/src/Microsoft/Win32/SafeHandles/SafeWaitHandle.cs\n    startLine: 26\n  assemblies:\n  - System.Runtime.Handles\n  namespace: Microsoft.Win32.SafeHandles\n  summary: \"\\n<p>Represents a wrapper class for a wait handle. </p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      public sealed class SafeWaitHandle : SafeHandleZeroOrMinusOneIsInvalid, IDisposable\n    content.vb: >-\n      <SecurityCritical>\n\n      Public NotInheritable Class SafeWaitHandle\n          Inherits SafeHandleZeroOrMinusOneIsInvalid\n          Implements IDisposable\n  seealso:\n  - type: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid\n    commentId: T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid\n  - type: System.Threading.WaitHandle\n    commentId: T:System.Threading.WaitHandle\n  - type: System.Threading.Mutex\n    commentId: T:System.Threading.Mutex\n  - type: System.Threading.AutoResetEvent\n    commentId: T:System.Threading.AutoResetEvent\n  - type: System.Threading.ManualResetEvent\n    commentId: T:System.Threading.ManualResetEvent\n  see:\n  - type: System.Security.SecurityCriticalAttribute\n    commentId: T:System.Security.SecurityCriticalAttribute\n  inheritance:\n  - System.Object\n  - System.Runtime.InteropServices.SafeHandle\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Runtime.InteropServices.SafeHandle.handle\n  - System.Runtime.InteropServices.SafeHandle.IsClosed\n  - System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)\n  - System.Runtime.InteropServices.SafeHandle.DangerousGetHandle\n  - System.Runtime.InteropServices.SafeHandle.DangerousRelease\n  - System.Runtime.InteropServices.SafeHandle.Dispose\n  - System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)\n  - System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)\n  - System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n    ctor: System.Security.SecurityCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: SafeWaitHandle\n- uid: Microsoft.Win32.SafeHandles.SafeWaitHandle.#ctor(System.IntPtr,System.Boolean)\n  commentId: M:Microsoft.Win32.SafeHandles.SafeWaitHandle.#ctor(System.IntPtr,System.Boolean)\n  id: '#ctor(System.IntPtr,System.Boolean)'\n  parent: Microsoft.Win32.SafeHandles.SafeWaitHandle\n  langs:\n  - csharp\n  - vb\n  name: SafeWaitHandle(IntPtr, Boolean)\n  fullName: Microsoft.Win32.SafeHandles.SafeWaitHandle.SafeWaitHandle(System.IntPtr, System.Boolean)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/Microsoft/Win32/SafeHandles/SafeWaitHandle.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/Microsoft/Win32/SafeHandles/SafeWaitHandle.cs\n    startLine: 34\n  assemblies:\n  - System.Runtime.Handles\n  namespace: Microsoft.Win32.SafeHandles\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"Microsoft.Win32.SafeHandles.SafeWaitHandle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class. </p>\\n\"\n  syntax:\n    content: >-\n      [ReliabilityContract(Consistency.WillNotCorruptState, Cer.MayFail)]\n\n      public SafeWaitHandle(IntPtr existingHandle, bool ownsHandle)\n    content.vb: >-\n      <ReliabilityContract(Consistency.WillNotCorruptState, Cer.MayFail)>\n\n      Public Sub New(existingHandle As IntPtr, ownsHandle As Boolean)\n    parameters:\n    - id: existingHandle\n      type: System.IntPtr\n      description: \"\\n<p>An <xref href=\\\"System.IntPtr\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents the pre-existing handle to use.</p>\\n\"\n    - id: ownsHandle\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to reliably release the handle during the finalization phase; <strong>false</strong> to prevent reliable release (not recommended).</p>\\n\"\n  seealso:\n  - type: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid\n    commentId: T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid\n  - type: System.Runtime.InteropServices.SafeHandle\n    commentId: T:System.Runtime.InteropServices.SafeHandle\n  see:\n  - type: System.Security.SecurityCriticalAttribute\n    commentId: T:System.Security.SecurityCriticalAttribute\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SafeWaitHandle.SafeWaitHandle(IntPtr, Boolean)\n- uid: Microsoft.Win32.SafeHandles.SafeWaitHandle.ReleaseHandle\n  commentId: M:Microsoft.Win32.SafeHandles.SafeWaitHandle.ReleaseHandle\n  id: ReleaseHandle\n  parent: Microsoft.Win32.SafeHandles.SafeWaitHandle\n  langs:\n  - csharp\n  - vb\n  name: ReleaseHandle()\n  fullName: Microsoft.Win32.SafeHandles.SafeWaitHandle.ReleaseHandle()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/Microsoft/Win32/SafeHandles/SafeWaitHandle.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ReleaseHandle\n    path: src/mscorlib/src/Microsoft/Win32/SafeHandles/SafeWaitHandle.cs\n    startLine: 40\n  assemblies:\n  - System.Runtime.Handles\n  namespace: Microsoft.Win32.SafeHandles\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      protected override bool ReleaseHandle()\n    content.vb: >-\n      <SecurityCritical>\n\n      Protected Overrides Function ReleaseHandle As Boolean\n    return:\n      type: System.Boolean\n  overridden: System.Runtime.InteropServices.SafeHandle.ReleaseHandle\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n    ctor: System.Security.SecurityCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - protected\n  - override\n  modifiers.vb:\n  - Protected\n  - Overrides\n  nameWithType: SafeWaitHandle.ReleaseHandle()\n- uid: Microsoft.Win32.SafeHandles.SafeWaitHandle.IsInvalid\n  commentId: P:Microsoft.Win32.SafeHandles.SafeWaitHandle.IsInvalid\n  id: IsInvalid\n  parent: Microsoft.Win32.SafeHandles.SafeWaitHandle\n  langs:\n  - csharp\n  - vb\n  name: IsInvalid\n  fullName: Microsoft.Win32.SafeHandles.SafeWaitHandle.IsInvalid\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.Handles/ref/System.Runtime.Handles.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsInvalid\n    path: src/System.Runtime.Handles/ref/System.Runtime.Handles.Manual.cs\n    startLine: 13\n  assemblies:\n  - System.Runtime.Handles\n  namespace: Microsoft.Win32.SafeHandles\n  syntax:\n    content: >-\n      public override bool IsInvalid\n\n      {\n          [SecurityCritical]\n          get;\n      }\n    content.vb: Public Overrides ReadOnly Property IsInvalid As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n  overridden: System.Runtime.InteropServices.SafeHandle.IsInvalid\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: SafeWaitHandle.IsInvalid\nreferences:\n- uid: Microsoft.Win32.SafeHandles\n  isExternal: false\n  name: Microsoft.Win32.SafeHandles\n  fullName: Microsoft.Win32.SafeHandles\n  nameWithType: Microsoft.Win32.SafeHandles\n  commentId: N:Microsoft.Win32.SafeHandles\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Runtime.InteropServices.SafeHandle\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: SafeHandle\n  fullName: System.Runtime.InteropServices.SafeHandle\n  nameWithType: SafeHandle\n  commentId: T:System.Runtime.InteropServices.SafeHandle\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  nameWithType: IDisposable\n  commentId: T:System.IDisposable\n- uid: System.Runtime.InteropServices.SafeHandle.handle\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: handle\n  fullName: System.Runtime.InteropServices.SafeHandle.handle\n  nameWithType: SafeHandle.handle\n  commentId: F:System.Runtime.InteropServices.SafeHandle.handle\n- uid: System.Runtime.InteropServices.SafeHandle.IsClosed\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: IsClosed\n  fullName: System.Runtime.InteropServices.SafeHandle.IsClosed\n  nameWithType: SafeHandle.IsClosed\n  commentId: P:System.Runtime.InteropServices.SafeHandle.IsClosed\n- uid: System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: true\n  name: DangerousAddRef(Boolean)\n  fullName: System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean)\n  spec.csharp:\n  - uid: System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)\n    name: DangerousAddRef\n    fullName: System.Runtime.InteropServices.SafeHandle.DangerousAddRef\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)\n    name: DangerousAddRef\n    fullName: System.Runtime.InteropServices.SafeHandle.DangerousAddRef\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: SafeHandle.DangerousAddRef(Boolean)\n  commentId: M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)\n- uid: System.Runtime.InteropServices.SafeHandle.DangerousGetHandle\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: DangerousGetHandle()\n  fullName: System.Runtime.InteropServices.SafeHandle.DangerousGetHandle()\n  spec.csharp:\n  - uid: System.Runtime.InteropServices.SafeHandle.DangerousGetHandle\n    name: DangerousGetHandle\n    fullName: System.Runtime.InteropServices.SafeHandle.DangerousGetHandle\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.InteropServices.SafeHandle.DangerousGetHandle\n    name: DangerousGetHandle\n    fullName: System.Runtime.InteropServices.SafeHandle.DangerousGetHandle\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: SafeHandle.DangerousGetHandle()\n  commentId: M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle\n- uid: System.Runtime.InteropServices.SafeHandle.DangerousRelease\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: DangerousRelease()\n  fullName: System.Runtime.InteropServices.SafeHandle.DangerousRelease()\n  spec.csharp:\n  - uid: System.Runtime.InteropServices.SafeHandle.DangerousRelease\n    name: DangerousRelease\n    fullName: System.Runtime.InteropServices.SafeHandle.DangerousRelease\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.InteropServices.SafeHandle.DangerousRelease\n    name: DangerousRelease\n    fullName: System.Runtime.InteropServices.SafeHandle.DangerousRelease\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: SafeHandle.DangerousRelease()\n  commentId: M:System.Runtime.InteropServices.SafeHandle.DangerousRelease\n- uid: System.Runtime.InteropServices.SafeHandle.Dispose\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: Dispose()\n  fullName: System.Runtime.InteropServices.SafeHandle.Dispose()\n  spec.csharp:\n  - uid: System.Runtime.InteropServices.SafeHandle.Dispose\n    name: Dispose\n    fullName: System.Runtime.InteropServices.SafeHandle.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.InteropServices.SafeHandle.Dispose\n    name: Dispose\n    fullName: System.Runtime.InteropServices.SafeHandle.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: SafeHandle.Dispose()\n  commentId: M:System.Runtime.InteropServices.SafeHandle.Dispose\n- uid: System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: true\n  name: Dispose(Boolean)\n  fullName: System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)\n  spec.csharp:\n  - uid: System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)\n    name: Dispose\n    fullName: System.Runtime.InteropServices.SafeHandle.Dispose\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)\n    name: Dispose\n    fullName: System.Runtime.InteropServices.SafeHandle.Dispose\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: SafeHandle.Dispose(Boolean)\n  commentId: M:System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)\n- uid: System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: true\n  name: SetHandle(IntPtr)\n  fullName: System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)\n  spec.csharp:\n  - uid: System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)\n    name: SetHandle\n    fullName: System.Runtime.InteropServices.SafeHandle.SetHandle\n  - name: (\n    fullName: (\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)\n    name: SetHandle\n    fullName: System.Runtime.InteropServices.SafeHandle.SetHandle\n  - name: (\n    fullName: (\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: SafeHandle.SetHandle(IntPtr)\n  commentId: M:System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)\n- uid: System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: SetHandleAsInvalid()\n  fullName: System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid()\n  spec.csharp:\n  - uid: System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid\n    name: SetHandleAsInvalid\n    fullName: System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid\n    name: SetHandleAsInvalid\n    fullName: System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: SafeHandle.SetHandleAsInvalid()\n  commentId: M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Runtime.InteropServices\n  isExternal: false\n  name: System.Runtime.InteropServices\n  fullName: System.Runtime.InteropServices\n  nameWithType: System.Runtime.InteropServices\n  commentId: N:System.Runtime.InteropServices\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  fullName: System.IntPtr\n  nameWithType: IntPtr\n  commentId: T:System.IntPtr\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Runtime.InteropServices.SafeHandle.ReleaseHandle\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: ReleaseHandle()\n  fullName: System.Runtime.InteropServices.SafeHandle.ReleaseHandle()\n  spec.csharp:\n  - uid: System.Runtime.InteropServices.SafeHandle.ReleaseHandle\n    name: ReleaseHandle\n    fullName: System.Runtime.InteropServices.SafeHandle.ReleaseHandle\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.InteropServices.SafeHandle.ReleaseHandle\n    name: ReleaseHandle\n    fullName: System.Runtime.InteropServices.SafeHandle.ReleaseHandle\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: SafeHandle.ReleaseHandle()\n  commentId: M:System.Runtime.InteropServices.SafeHandle.ReleaseHandle\n- uid: System.Runtime.InteropServices.SafeHandle.IsInvalid\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: IsInvalid\n  fullName: System.Runtime.InteropServices.SafeHandle.IsInvalid\n  nameWithType: SafeHandle.IsInvalid\n  commentId: P:System.Runtime.InteropServices.SafeHandle.IsInvalid\n"}