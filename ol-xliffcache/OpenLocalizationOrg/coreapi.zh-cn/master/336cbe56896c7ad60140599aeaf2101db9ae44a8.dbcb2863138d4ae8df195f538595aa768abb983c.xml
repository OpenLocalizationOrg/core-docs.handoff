{"nodes":[{"pos":[414,429],"content":"EncoderFallback","needQuote":true,"nodes":[{"content":"EncoderFallback","pos":[0,15]}]},{"pos":[2103,2120],"content":"EncoderFallback()","needQuote":true,"nodes":[{"content":"EncoderFallback()","pos":[0,17]}]},{"pos":[3078,3095],"content":"ExceptionFallback","needQuote":true,"nodes":[{"content":"ExceptionFallback","pos":[0,17]}]},{"pos":[4459,4471],"content":"MaxCharCount","needQuote":true,"nodes":[{"content":"MaxCharCount","pos":[0,12]}]},{"pos":[5827,5846],"content":"ReplacementFallback","needQuote":true,"nodes":[{"content":"ReplacementFallback","pos":[0,19]}]},{"pos":[7354,7376],"content":"CreateFallbackBuffer()","needQuote":true,"nodes":[{"content":"CreateFallbackBuffer()","pos":[0,22]}]},{"content":"\\n&lt;p&gt;An object that provides a fallback buffer for an encoder.&lt;/p&gt;\\n","pos":[8226,8294],"source":"\\n<p>An object that provides a fallback buffer for an encoder.</p>\\n"},{"pos":[8604,8615],"content":"System.Text","needQuote":true,"nodes":[{"content":"System.Text","pos":[0,11]}]},{"pos":[8761,8767],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8927,8937],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[9032,9040],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[9109,9110],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9137,9138],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9208,9216],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[9285,9286],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9313,9314],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9497,9511],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[9630,9636],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9703,9704],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9754,9760],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9820,9821],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9904,9910],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9977,9978],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10028,10034],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10094,10095],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10309,10331],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[10479,10485],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[10552,10553],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10603,10609],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10670,10671]},{"pos":[10726,10732],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10792,10793],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10890,10896],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[10963,10964],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11014,11020],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11081,11082]},{"pos":[11137,11143],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11203,11204],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11449,11480],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[11646,11661],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[11737,11738],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11788,11794],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11855,11856]},{"pos":[11911,11917],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11977,11978],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12084,12099],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[12175,12176],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12226,12232],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12293,12294]},{"pos":[12349,12355],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12415,12416],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12646,12659],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[12760,12771],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[12843,12844],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12871,12872],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12945,12956],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[13028,13029],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13056,13057],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13232,13241],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[13334,13341],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[13409,13410],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13437,13438],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13507,13514],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[13582,13583],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13610,13611],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13786,13803],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[13912,13927],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[14003,14004],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14031,14032],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14109,14124],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[14200,14201],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14228,14229],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14374,14380],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[14530,14545],"content":"EncoderFallback","needQuote":true,"nodes":[{"content":"EncoderFallback","pos":[0,15]}]},{"pos":[14726,14731],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[14898,14919],"content":"EncoderFallbackBuffer","needQuote":true,"nodes":[{"content":"EncoderFallbackBuffer","pos":[0,21]}]}],"content":"items:\n- uid: System.Text.EncoderFallback\n  commentId: T:System.Text.EncoderFallback\n  id: EncoderFallback\n  parent: System.Text\n  children:\n  - System.Text.EncoderFallback.#ctor\n  - System.Text.EncoderFallback.CreateFallbackBuffer\n  - System.Text.EncoderFallback.ExceptionFallback\n  - System.Text.EncoderFallback.MaxCharCount\n  - System.Text.EncoderFallback.ReplacementFallback\n  langs:\n  - csharp\n  - vb\n  name: EncoderFallback\n  fullName: System.Text.EncoderFallback\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/EncoderFallback.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: EncoderFallback\n    path: src/mscorlib/src/System/Text/EncoderFallback.cs\n    startLine: 11\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>Provides a failure-handling mechanism, called a fallback, for an input character that cannot be converted to an encoded output byte sequence. </p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      public abstract class EncoderFallback\n    content.vb: >-\n      <Serializable>\n\n      Public MustInherit Class EncoderFallback\n  seealso:\n  - type: System.Text.EncoderFallbackBuffer\n    commentId: T:System.Text.EncoderFallbackBuffer\n  - type: System.Text.EncoderReplacementFallback\n    commentId: T:System.Text.EncoderReplacementFallback\n  - type: System.Text.EncoderExceptionFallback\n    commentId: T:System.Text.EncoderExceptionFallback\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: EncoderFallback\n- uid: System.Text.EncoderFallback.#ctor\n  commentId: M:System.Text.EncoderFallback.#ctor\n  id: '#ctor'\n  parent: System.Text.EncoderFallback\n  langs:\n  - csharp\n  - vb\n  name: EncoderFallback()\n  fullName: System.Text.EncoderFallback.EncoderFallback()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Text.Encoding/ref/System.Text.Encoding.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Text.Encoding/ref/System.Text.Encoding.cs\n    startLine: 86\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Text.EncoderFallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: protected EncoderFallback()\n    content.vb: Protected Sub New\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: EncoderFallback.EncoderFallback()\n- uid: System.Text.EncoderFallback.ExceptionFallback\n  commentId: P:System.Text.EncoderFallback.ExceptionFallback\n  id: ExceptionFallback\n  parent: System.Text.EncoderFallback\n  langs:\n  - csharp\n  - vb\n  name: ExceptionFallback\n  fullName: System.Text.EncoderFallback.ExceptionFallback\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/EncoderFallback.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ExceptionFallback\n    path: src/mscorlib/src/System/Text/EncoderFallback.cs\n    startLine: 53\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>Gets an object that throws an exception when an input character cannot be encoded.</p>\\n\"\n  syntax:\n    content: public static EncoderFallback ExceptionFallback { get; }\n    content.vb: Public Shared ReadOnly Property ExceptionFallback As EncoderFallback\n    parameters: []\n    return:\n      type: System.Text.EncoderFallback\n      description: \"\\n<p>A type derived from the <xref href=\\\"System.Text.EncoderFallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class. The default value is a <xref href=\\\"System.Text.EncoderExceptionFallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: EncoderFallback.ExceptionFallback\n- uid: System.Text.EncoderFallback.MaxCharCount\n  commentId: P:System.Text.EncoderFallback.MaxCharCount\n  id: MaxCharCount\n  parent: System.Text.EncoderFallback\n  langs:\n  - csharp\n  - vb\n  name: MaxCharCount\n  fullName: System.Text.EncoderFallback.MaxCharCount\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/EncoderFallback.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: MaxCharCount\n    path: src/mscorlib/src/System/Text/EncoderFallback.cs\n    startLine: 76\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>When overridden in a derived class, gets the maximum number of characters the current <xref href=\\\"System.Text.EncoderFallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object can return.</p>\\n\"\n  syntax:\n    content: public abstract int MaxCharCount { get; }\n    content.vb: Public MustOverride ReadOnly Property MaxCharCount As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The maximum number of characters the current <xref href=\\\"System.Text.EncoderFallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object can return.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: EncoderFallback.MaxCharCount\n- uid: System.Text.EncoderFallback.ReplacementFallback\n  commentId: P:System.Text.EncoderFallback.ReplacementFallback\n  id: ReplacementFallback\n  parent: System.Text.EncoderFallback\n  langs:\n  - csharp\n  - vb\n  name: ReplacementFallback\n  fullName: System.Text.EncoderFallback.ReplacementFallback\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/EncoderFallback.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ReplacementFallback\n    path: src/mscorlib/src/System/Text/EncoderFallback.cs\n    startLine: 39\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>Gets an object that outputs a substitute string in place of an input character that cannot be encoded.</p>\\n\"\n  syntax:\n    content: public static EncoderFallback ReplacementFallback { get; }\n    content.vb: Public Shared ReadOnly Property ReplacementFallback As EncoderFallback\n    parameters: []\n    return:\n      type: System.Text.EncoderFallback\n      description: \"\\n<p>A type derived from the <xref href=\\\"System.Text.EncoderFallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class. The default value is a <xref href=\\\"System.Text.EncoderReplacementFallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that replaces unknown input characters with the QUESTION MARK character (\\\"?\\\", U+003F).</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: EncoderFallback.ReplacementFallback\n- uid: System.Text.EncoderFallback.CreateFallbackBuffer\n  commentId: M:System.Text.EncoderFallback.CreateFallbackBuffer\n  id: CreateFallbackBuffer\n  parent: System.Text.EncoderFallback\n  langs:\n  - csharp\n  - vb\n  name: CreateFallbackBuffer()\n  fullName: System.Text.EncoderFallback.CreateFallbackBuffer()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/EncoderFallback.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CreateFallbackBuffer\n    path: src/mscorlib/src/System/Text/EncoderFallback.cs\n    startLine: 72\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>When overridden in a derived class, initializes a new instance of the <xref href=\\\"System.Text.EncoderFallbackBuffer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class. </p>\\n\"\n  syntax:\n    content: public abstract EncoderFallbackBuffer CreateFallbackBuffer()\n    content.vb: Public MustOverride Function CreateFallbackBuffer As EncoderFallbackBuffer\n    return:\n      type: System.Text.EncoderFallbackBuffer\n      description: \"\\n<p>An object that provides a fallback buffer for an encoder.</p>\\n\"\n  seealso:\n  - type: System.Text.DecoderFallbackBuffer\n    commentId: T:System.Text.DecoderFallbackBuffer\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: EncoderFallback.CreateFallbackBuffer()\nreferences:\n- uid: System.Text\n  isExternal: false\n  name: System.Text\n  fullName: System.Text\n  nameWithType: System.Text\n  commentId: N:System.Text\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Text.EncoderFallback\n  parent: System.Text\n  isExternal: false\n  name: EncoderFallback\n  fullName: System.Text.EncoderFallback\n  nameWithType: EncoderFallback\n  commentId: T:System.Text.EncoderFallback\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Text.EncoderFallbackBuffer\n  parent: System.Text\n  isExternal: false\n  name: EncoderFallbackBuffer\n  fullName: System.Text.EncoderFallbackBuffer\n  nameWithType: EncoderFallbackBuffer\n  commentId: T:System.Text.EncoderFallbackBuffer\n"}