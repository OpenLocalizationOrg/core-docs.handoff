{"nodes":[{"pos":[1709,1727],"content":"PerformanceCounter","needQuote":true,"nodes":[{"content":"PerformanceCounter","pos":[0,18]}]},{"pos":[3701,3723],"content":"DefaultFileMappingSize","needQuote":true,"nodes":[{"content":"DefaultFileMappingSize","pos":[0,22]}]},{"pos":[5590,5610],"content":"PerformanceCounter()","needQuote":true,"nodes":[{"content":"PerformanceCounter()","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.","pos":[6579,6691],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters."},{"content":"&lt;/p&gt;\\n","pos":[6692,6698],"source":" </p>\\n"},{"pos":[7361,7395],"content":"PerformanceCounter(String, String)","needQuote":true,"nodes":[{"content":"PerformanceCounter(String, String)","pos":[0,34]}]},{"content":"\\n&lt;p&gt;The name of the performance counter category (performance object) with which this performance counter is associated.","pos":[8514,8635],"source":"\\n<p>The name of the performance counter category (performance object) with which this performance counter is associated."},{"content":"&lt;/p&gt;\\n","pos":[8636,8642],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The name of the performance counter.","pos":[8712,8753],"source":"\\n<p>The name of the performance counter."},{"content":"&lt;/p&gt;\\n","pos":[8754,8760],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;categoryName&lt;/em&gt; or &lt;em&gt;counterName&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[9449,9527],"source":"\\n<p>\\n<em>categoryName</em> or <em>counterName</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[9528,9534],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An error occurred when accessing a system API.","pos":[9655,9706],"source":"\\n<p>An error occurred when accessing a system API."},{"content":"&lt;/p&gt;\\n","pos":[9707,9713],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.","pos":[9834,9946],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters."},{"content":"&lt;/p&gt;\\n","pos":[9947,9953],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Code that is executing without administrative privileges attempted to read a performance counter.&lt;/p&gt;\\n","pos":[10070,10178],"source":"\\n<p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\\n"},{"pos":[10900,10943],"content":"PerformanceCounter(String, String, Boolean)","needQuote":true,"nodes":[{"content":"PerformanceCounter(String, String, Boolean)","pos":[0,43]}]},{"content":"\\n&lt;p&gt;The name of the performance counter category (performance object) with which this performance counter is associated.","pos":[12131,12252],"source":"\\n<p>The name of the performance counter category (performance object) with which this performance counter is associated."},{"content":"&lt;/p&gt;\\n","pos":[12253,12259],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The name of the performance counter.","pos":[12329,12370],"source":"\\n<p>The name of the performance counter."},{"content":"&lt;/p&gt;\\n","pos":[12371,12377],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to access the counter in read-only mode (although the counter itself could be read/write); &lt;strong&gt;false&lt;/strong&gt; to access the counter in read/write mode.","pos":[12445,12629],"source":"\\n<p>\\n<strong>true</strong> to access the counter in read-only mode (although the counter itself could be read/write); <strong>false</strong> to access the counter in read/write mode."},{"content":"&lt;/p&gt;\\n","pos":[12630,12636],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;categoryName&lt;/em&gt; or &lt;em&gt;counterName&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[13514,13592],"source":"\\n<p>\\n<em>categoryName</em> or <em>counterName</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[13593,13599],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An error occurred when accessing a system API.","pos":[13720,13771],"source":"\\n<p>An error occurred when accessing a system API."},{"content":"&lt;/p&gt;\\n","pos":[13772,13778],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.","pos":[13899,14011],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters."},{"content":"&lt;/p&gt;\\n","pos":[14012,14018],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Code that is executing without administrative privileges attempted to read a performance counter.&lt;/p&gt;\\n","pos":[14135,14243],"source":"\\n<p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\\n"},{"pos":[14971,15013],"content":"PerformanceCounter(String, String, String)","needQuote":true,"nodes":[{"content":"PerformanceCounter(String, String, String)","pos":[0,42]}]},{"content":"\\n&lt;p&gt;The name of the performance counter category (performance object) with which this performance counter is associated.","pos":[16146,16267],"source":"\\n<p>The name of the performance counter category (performance object) with which this performance counter is associated."},{"content":"&lt;/p&gt;\\n","pos":[16268,16274],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The name of the performance counter.","pos":[16344,16385],"source":"\\n<p>The name of the performance counter."},{"content":"&lt;/p&gt;\\n","pos":[16386,16392],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;categoryName&lt;/em&gt; or &lt;em&gt;counterName&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[17363,17441],"source":"\\n<p>\\n<em>categoryName</em> or <em>counterName</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[17442,17448],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An error occurred when accessing a system API.","pos":[17569,17620],"source":"\\n<p>An error occurred when accessing a system API."},{"content":"&lt;/p&gt;\\n","pos":[17621,17627],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.","pos":[17748,17860],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters."},{"content":"&lt;/p&gt;\\n","pos":[17861,17867],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Code that is executing without administrative privileges attempted to read a performance counter.&lt;/p&gt;\\n","pos":[17984,18092],"source":"\\n<p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\\n"},{"pos":[18864,18915],"content":"PerformanceCounter(String, String, String, Boolean)","needQuote":true,"nodes":[{"content":"PerformanceCounter(String, String, String, Boolean)","pos":[0,51]}]},{"content":"\\n&lt;p&gt;The name of the performance counter category (performance object) with which this performance counter is associated.","pos":[20114,20235],"source":"\\n<p>The name of the performance counter category (performance object) with which this performance counter is associated."},{"content":"&lt;/p&gt;\\n","pos":[20236,20242],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The name of the performance counter.","pos":[20312,20353],"source":"\\n<p>The name of the performance counter."},{"content":"&lt;/p&gt;\\n","pos":[20354,20360],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to access a counter in read-only mode; &lt;strong&gt;false&lt;/strong&gt; to access a counter in read/write mode.","pos":[20636,20766],"source":"\\n<p>\\n<strong>true</strong> to access a counter in read-only mode; <strong>false</strong> to access a counter in read/write mode."},{"content":"&lt;/p&gt;\\n","pos":[20767,20773],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;categoryName&lt;/em&gt; or &lt;em&gt;counterName&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[21817,21895],"source":"\\n<p>\\n<em>categoryName</em> or <em>counterName</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[21896,21902],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An error occurred when accessing a system API.","pos":[22023,22074],"source":"\\n<p>An error occurred when accessing a system API."},{"content":"&lt;/p&gt;\\n","pos":[22075,22081],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.","pos":[22202,22314],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters."},{"content":"&lt;/p&gt;\\n","pos":[22315,22321],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Code that is executing without administrative privileges attempted to read a performance counter.&lt;/p&gt;\\n","pos":[22438,22546],"source":"\\n<p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\\n"},{"pos":[23324,23374],"content":"PerformanceCounter(String, String, String, String)","needQuote":true,"nodes":[{"content":"PerformanceCounter(String, String, String, String)","pos":[0,50]}]},{"content":"\\n&lt;p&gt;The name of the performance counter category (performance object) with which this performance counter is associated.","pos":[24570,24691],"source":"\\n<p>The name of the performance counter category (performance object) with which this performance counter is associated."},{"content":"&lt;/p&gt;\\n","pos":[24692,24698],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The name of the performance counter.","pos":[24768,24809],"source":"\\n<p>The name of the performance counter."},{"content":"&lt;/p&gt;\\n","pos":[24810,24816],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The computer on which the performance counter and its associated category exist.","pos":[25094,25179],"source":"\\n<p>The computer on which the performance counter and its associated category exist."},{"content":"&lt;/p&gt;\\n","pos":[25180,25186],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;machineName&lt;/em&gt; parameter is not valid.","pos":[26053,26106],"source":"\\n<p>The <em>machineName</em> parameter is not valid."},{"content":"&lt;/p&gt;\\n","pos":[26107,26113],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;categoryName&lt;/em&gt; or &lt;em&gt;counterName&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[26218,26296],"source":"\\n<p>\\n<em>categoryName</em> or <em>counterName</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[26297,26303],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An error occurred when accessing a system API.","pos":[26424,26475],"source":"\\n<p>An error occurred when accessing a system API."},{"content":"&lt;/p&gt;\\n","pos":[26476,26482],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.","pos":[26603,26715],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters."},{"content":"&lt;/p&gt;\\n","pos":[26716,26722],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Code that is executing without administrative privileges attempted to read a performance counter.&lt;/p&gt;\\n","pos":[26839,26947],"source":"\\n<p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\\n"},{"pos":[27572,27584],"content":"CategoryName","needQuote":true,"nodes":[{"content":"CategoryName","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The name of the performance counter category (performance object) with which this performance counter is associated.&lt;/p&gt;\\n","pos":[28388,28515],"source":"\\n<p>The name of the performance counter category (performance object) with which this performance counter is associated.</p>\\n"},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.","pos":[28907,29019],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters."},{"content":"&lt;/p&gt;\\n","pos":[29020,29026],"source":" </p>\\n"},{"pos":[29489,29500],"content":"CounterHelp","needQuote":true,"nodes":[{"content":"CounterHelp","pos":[0,11]}]},{"content":"\\n&lt;p&gt;A description of the item or quantity that this performance counter measures.&lt;/p&gt;\\n","pos":[30267,30355],"source":"\\n<p>A description of the item or quantity that this performance counter measures.</p>\\n"},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.","pos":[31086,31198],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters."},{"content":"&lt;/p&gt;\\n","pos":[31199,31205],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Code that is executing without administrative privileges attempted to read a performance counter.&lt;/p&gt;\\n","pos":[31322,31430],"source":"\\n<p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\\n"},{"pos":[31911,31922],"content":"CounterName","needQuote":true,"nodes":[{"content":"CounterName","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The name of the counter, which generally describes the quantity being counted.","pos":[32820,32903],"source":"\\n<p>The name of the counter, which generally describes the quantity being counted."},{"content":"This name is displayed in the list of counters of the Performance Counter Manager MMC snap in's Add Counters dialog box.&lt;/p&gt;\\n","pos":[32904,33030],"source":" This name is displayed in the list of counters of the Performance Counter Manager MMC snap in's Add Counters dialog box.</p>\\n"},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.","pos":[33421,33533],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters."},{"content":"&lt;/p&gt;\\n","pos":[33534,33540],"source":" </p>\\n"},{"pos":[33886,33897],"content":"CounterType","needQuote":true,"nodes":[{"content":"CounterType","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.","pos":[35651,35763],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters."},{"content":"&lt;/p&gt;\\n","pos":[35764,35770],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Code that is executing without administrative privileges attempted to read a performance counter.&lt;/p&gt;\\n","pos":[35887,35995],"source":"\\n<p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\\n"},{"pos":[36613,36629],"content":"InstanceLifetime","needQuote":true,"nodes":[{"content":"InstanceLifetime","pos":[0,16]}]},{"pos":[38814,38826],"content":"InstanceName","needQuote":true,"nodes":[{"content":"InstanceName","pos":[0,12]}]},{"pos":[40086,40097],"content":"MachineName","needQuote":true,"nodes":[{"content":"MachineName","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The server on which the performance counter and its associated category reside.&lt;/p&gt;\\n","pos":[40870,40960],"source":"\\n<p>The server on which the performance counter and its associated category reside.</p>\\n"},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.","pos":[41336,41448],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters."},{"content":"&lt;/p&gt;\\n","pos":[41449,41455],"source":" </p>\\n"},{"pos":[41792,41800],"content":"RawValue","needQuote":true,"nodes":[{"content":"RawValue","pos":[0,8]}]},{"content":"\\n&lt;p&gt;The raw value of the counter.&lt;/p&gt;\\n","pos":[42557,42597],"source":"\\n<p>The raw value of the counter.</p>\\n"},{"content":"\\n&lt;p&gt;An error occurred when accessing a system API.","pos":[43339,43390],"source":"\\n<p>An error occurred when accessing a system API."},{"content":"&lt;/p&gt;\\n","pos":[43391,43397],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.","pos":[43518,43630],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters."},{"content":"&lt;/p&gt;\\n","pos":[43631,43637],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Code that is executing without administrative privileges attempted to read a performance counter.&lt;/p&gt;\\n","pos":[43754,43862],"source":"\\n<p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\\n"},{"pos":[44449,44457],"content":"ReadOnly","needQuote":true,"nodes":[{"content":"ReadOnly","pos":[0,8]}]},{"pos":[46004,46015],"content":"BeginInit()","needQuote":true,"nodes":[{"content":"BeginInit()","pos":[0,11]}]},{"pos":[47139,47146],"content":"Close()","needQuote":true,"nodes":[{"content":"Close()","pos":[0,7]}]},{"pos":[48147,48156],"content":"EndInit()","needQuote":true,"nodes":[{"content":"EndInit()","pos":[0,9]}]},{"pos":[49533,49544],"content":"Increment()","needQuote":true,"nodes":[{"content":"Increment()","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The incremented counter value.&lt;/p&gt;\\n","pos":[50304,50345],"source":"\\n<p>The incremented counter value.</p>\\n"},{"content":"\\n&lt;p&gt;An error occurred when accessing a system API.","pos":[51076,51127],"source":"\\n<p>An error occurred when accessing a system API."},{"content":"&lt;/p&gt;\\n","pos":[51128,51134],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.","pos":[51255,51367],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters."},{"content":"&lt;/p&gt;\\n","pos":[51368,51374],"source":" </p>\\n"},{"pos":[51999,52017],"content":"IncrementBy(Int64)","needQuote":true,"nodes":[{"content":"IncrementBy(Int64)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The value to increment by.","pos":[52884,52915],"source":"\\n<p>The value to increment by."},{"content":"(A negative value decrements the counter.) &lt;/p&gt;\\n","pos":[52916,52965],"source":" (A negative value decrements the counter.) </p>\\n"},{"content":"\\n&lt;p&gt;The new counter value.&lt;/p&gt;\\n","pos":[53024,53057],"source":"\\n<p>The new counter value.</p>\\n"},{"content":"\\n&lt;p&gt;An error occurred when accessing a system API.","pos":[53788,53839],"source":"\\n<p>An error occurred when accessing a system API."},{"content":"&lt;/p&gt;\\n","pos":[53840,53846],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.","pos":[53967,54079],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters."},{"content":"&lt;/p&gt;\\n","pos":[54080,54086],"source":" </p>\\n"},{"pos":[54673,54685],"content":"NextSample()","needQuote":true,"nodes":[{"content":"NextSample()","pos":[0,12]}]},{"content":"\\n&lt;p&gt;An error occurred when accessing a system API.","pos":[56298,56349],"source":"\\n<p>An error occurred when accessing a system API."},{"content":"&lt;/p&gt;\\n","pos":[56350,56356],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.","pos":[56477,56589],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters."},{"content":"&lt;/p&gt;\\n","pos":[56590,56596],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Code that is executing without administrative privileges attempted to read a performance counter.&lt;/p&gt;\\n","pos":[56713,56821],"source":"\\n<p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\\n"},{"pos":[57276,57287],"content":"NextValue()","needQuote":true,"nodes":[{"content":"NextValue()","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The next calculated value that the system obtains for this counter.&lt;/p&gt;\\n","pos":[58025,58103],"source":"\\n<p>The next calculated value that the system obtains for this counter.</p>\\n"},{"content":"\\n&lt;p&gt;The instance is not correctly associated with a performance counter.","pos":[58230,58303],"source":"\\n<p>The instance is not correctly associated with a performance counter."},{"content":"&lt;/p&gt;\\n","pos":[58304,58310],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An error occurred when accessing a system API.","pos":[58431,58482],"source":"\\n<p>An error occurred when accessing a system API."},{"content":"&lt;/p&gt;\\n","pos":[58483,58489],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.","pos":[58610,58722],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters."},{"content":"&lt;/p&gt;\\n","pos":[58723,58729],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Code that is executing without administrative privileges attempted to read a performance counter.&lt;/p&gt;\\n","pos":[58846,58954],"source":"\\n<p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\\n"},{"pos":[59423,59439],"content":"RemoveInstance()","needQuote":true,"nodes":[{"content":"RemoveInstance()","pos":[0,16]}]},{"content":"\\n&lt;p&gt;An error occurred when accessing a system API.","pos":[61092,61143],"source":"\\n<p>An error occurred when accessing a system API."},{"content":"&lt;/p&gt;\\n","pos":[61144,61150],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.","pos":[61271,61383],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters."},{"content":"&lt;/p&gt;\\n","pos":[61384,61390],"source":" </p>\\n"},{"pos":[61698,61716],"content":"System.Diagnostics","needQuote":true,"nodes":[{"content":"System.Diagnostics","pos":[0,18]}]},{"pos":[61883,61889],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[62049,62059],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[62154,62162],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[62231,62232],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62259,62260],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62330,62338],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[62407,62408],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62435,62436],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62619,62633],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[62752,62758],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[62825,62826],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62876,62882],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[62942,62943],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63026,63032],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[63099,63100],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63150,63156],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[63216,63217],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63431,63453],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[63601,63607],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[63674,63675],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63725,63731],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[63792,63793]},{"pos":[63848,63854],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[63914,63915],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64012,64018],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[64085,64086],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64136,64142],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[64203,64204]},{"pos":[64259,64265],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[64325,64326],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64571,64602],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[64768,64783],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[64859,64860],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64910,64916],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[64977,64978]},{"pos":[65033,65039],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[65099,65100],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65206,65221],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[65297,65298],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65348,65354],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[65415,65416]},{"pos":[65471,65477],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[65537,65538],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65768,65781],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[65882,65893],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[65965,65966],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65993,65994],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66067,66078],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[66150,66151],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66178,66179],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66354,66363],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[66456,66463],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[66531,66532],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66559,66560],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66629,66636],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[66704,66705],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66732,66733],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66908,66925],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[67034,67049],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[67125,67126],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67153,67154],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67231,67246],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[67322,67323],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67350,67351],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67496,67502],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[67632,67637],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[67779,67785],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[67931,67938],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[68126,68148],"content":"PerformanceCounterType","needQuote":true,"nodes":[{"content":"PerformanceCounterType","pos":[0,22]}]},{"pos":[68417,68451],"content":"PerformanceCounterInstanceLifetime","needQuote":true,"nodes":[{"content":"PerformanceCounterInstanceLifetime","pos":[0,34]}]},{"pos":[68703,68708],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[68881,68894],"content":"CounterSample","needQuote":true,"nodes":[{"content":"CounterSample","pos":[0,13]}]},{"pos":[69084,69090],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[69241,69270],"content":"PlatformNotSupportedException","needQuote":true,"nodes":[{"content":"PlatformNotSupportedException","pos":[0,29]}]},{"pos":[69503,69528],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]},{"pos":[69728,69749],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[69945,69959],"content":"Win32Exception","needQuote":true,"nodes":[{"content":"Win32Exception","pos":[0,14]}]},{"pos":[70179,70206],"content":"UnauthorizedAccessException","needQuote":true,"nodes":[{"content":"UnauthorizedAccessException","pos":[0,27]}]},{"pos":[70425,70442],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[70624,70651],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]}],"content":"items:\n- uid: System.Diagnostics.PerformanceCounter\n  commentId: T:System.Diagnostics.PerformanceCounter\n  id: PerformanceCounter\n  parent: System.Diagnostics\n  children:\n  - System.Diagnostics.PerformanceCounter.#ctor\n  - System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String)\n  - System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.Boolean)\n  - System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String)\n  - System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.Boolean)\n  - System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.String)\n  - System.Diagnostics.PerformanceCounter.BeginInit\n  - System.Diagnostics.PerformanceCounter.CategoryName\n  - System.Diagnostics.PerformanceCounter.Close\n  - System.Diagnostics.PerformanceCounter.CounterHelp\n  - System.Diagnostics.PerformanceCounter.CounterName\n  - System.Diagnostics.PerformanceCounter.CounterType\n  - System.Diagnostics.PerformanceCounter.DefaultFileMappingSize\n  - System.Diagnostics.PerformanceCounter.EndInit\n  - System.Diagnostics.PerformanceCounter.Increment\n  - System.Diagnostics.PerformanceCounter.IncrementBy(System.Int64)\n  - System.Diagnostics.PerformanceCounter.InstanceLifetime\n  - System.Diagnostics.PerformanceCounter.InstanceName\n  - System.Diagnostics.PerformanceCounter.MachineName\n  - System.Diagnostics.PerformanceCounter.NextSample\n  - System.Diagnostics.PerformanceCounter.NextValue\n  - System.Diagnostics.PerformanceCounter.RawValue\n  - System.Diagnostics.PerformanceCounter.ReadOnly\n  - System.Diagnostics.PerformanceCounter.RemoveInstance\n  langs:\n  - csharp\n  - vb\n  name: PerformanceCounter\n  fullName: System.Diagnostics.PerformanceCounter\n  type: Class\n  source:\n    remote:\n      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PerformanceCounter\n    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n    startLine: 32\n  assemblies:\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Represents a Windows NT performance counter component.</p>\\n\"\n  syntax:\n    content: public sealed class PerformanceCounter\n    content.vb: Public NotInheritable Class PerformanceCounter\n  seealso:\n  - type: System.Diagnostics.PerformanceCounterType\n    commentId: T:System.Diagnostics.PerformanceCounterType\n  - type: System.Diagnostics.CounterCreationData\n    commentId: T:System.Diagnostics.CounterCreationData\n  - type: System.Diagnostics.CounterCreationDataCollection\n    commentId: T:System.Diagnostics.CounterCreationDataCollection\n  - type: System.Diagnostics.CounterSample\n    commentId: T:System.Diagnostics.CounterSample\n  - type: System.Diagnostics.CounterSampleCalculator\n    commentId: T:System.Diagnostics.CounterSampleCalculator\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: PerformanceCounter\n- uid: System.Diagnostics.PerformanceCounter.DefaultFileMappingSize\n  commentId: F:System.Diagnostics.PerformanceCounter.DefaultFileMappingSize\n  id: DefaultFileMappingSize\n  parent: System.Diagnostics.PerformanceCounter\n  langs:\n  - csharp\n  - vb\n  name: DefaultFileMappingSize\n  fullName: System.Diagnostics.PerformanceCounter.DefaultFileMappingSize\n  type: Field\n  source:\n    remote:\n      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DefaultFileMappingSize\n    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n    startLine: 35\n  assemblies:\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Specifies the size, in bytes, of the global memory shared by performance counters. The default size is 524,288 bytes.</p>\\n\"\n  syntax:\n    content: >-\n      [Obsolete(\"This field has been deprecated and is not used.  Use machine.config or an application configuration file to set the size of the PerformanceCounter file mapping.\")]\n\n      public static int DefaultFileMappingSize\n    content.vb: >-\n      <Obsolete(\"This field has been deprecated and is not used.  Use machine.config or an application configuration file to set the size of the PerformanceCounter file mapping.\")>\n\n      Public Shared DefaultFileMappingSize As Integer\n    return:\n      type: System.Int32\n  attributes:\n  - type: System.ObsoleteAttribute\n    ctor: System.ObsoleteAttribute.#ctor(System.String)\n    arguments:\n    - type: System.String\n      value: This field has been deprecated and is not used.  Use machine.config or an application configuration file to set the size of the PerformanceCounter file mapping.\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: PerformanceCounter.DefaultFileMappingSize\n- uid: System.Diagnostics.PerformanceCounter.#ctor\n  commentId: M:System.Diagnostics.PerformanceCounter.#ctor\n  id: '#ctor'\n  parent: System.Diagnostics.PerformanceCounter\n  langs:\n  - csharp\n  - vb\n  name: PerformanceCounter()\n  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n    startLine: 36\n  assemblies:\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Initializes a new, read-only instance of the <xref href=\\\"System.Diagnostics.PerformanceCounter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class, without associating the instance with any system or custom performance counter.</p>\\n\"\n  syntax:\n    content: public PerformanceCounter()\n    content.vb: Public Sub New\n  exceptions:\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters. </p>\\n\"\n  see:\n  - type: System.Diagnostics.PerformanceCounterPermission\n    commentId: T:System.Diagnostics.PerformanceCounterPermission\n  - type: System.Diagnostics.PerformanceCounterPermission\n    commentId: T:System.Diagnostics.PerformanceCounterPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: PerformanceCounter.PerformanceCounter()\n- uid: System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String)\n  commentId: M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.Diagnostics.PerformanceCounter\n  langs:\n  - csharp\n  - vb\n  name: PerformanceCounter(String, String)\n  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter(System.String, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n    startLine: 37\n  assemblies:\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Initializes a new, read-only instance of the <xref href=\\\"System.Diagnostics.PerformanceCounter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class and associates it with the specified system or custom performance counter on the local computer. This constructor requires that the category have a single instance.</p>\\n\"\n  syntax:\n    content: public PerformanceCounter(string categoryName, string counterName)\n    content.vb: Public Sub New(categoryName As String, counterName As String)\n    parameters:\n    - id: categoryName\n      type: System.String\n      description: \"\\n<p>The name of the performance counter category (performance object) with which this performance counter is associated. </p>\\n\"\n    - id: counterName\n      type: System.String\n      description: \"\\n<p>The name of the performance counter. </p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>\\n<em>categoryName</em> is an empty string (\\\"\\\").</p>\\n<p>-or- </p>\\n<p>\\n<em>counterName</em> is an empty string (\\\"\\\").</p>\\n<p>-or- </p>\\n<p>The category specified does not exist. </p>\\n<p>-or-</p>\\n<p>The category specified is marked as multi-instance and requires the performance counter to be created with an instance name.</p>\\n<p>-or-</p>\\n<p>\\n<em>categoryName</em> and <em>counterName</em> have been localized into different languages.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>categoryName</em> or <em>counterName</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: \"\\n<p>An error occurred when accessing a system API. </p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\\n\"\n  see:\n  - type: System.Diagnostics.PerformanceCounterPermission\n    commentId: T:System.Diagnostics.PerformanceCounterPermission\n  - type: System.Diagnostics.PerformanceCounterPermission\n    commentId: T:System.Diagnostics.PerformanceCounterPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: PerformanceCounter.PerformanceCounter(String, String)\n- uid: System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.Boolean)\n  commentId: M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.Boolean)\n  id: '#ctor(System.String,System.String,System.Boolean)'\n  parent: System.Diagnostics.PerformanceCounter\n  langs:\n  - csharp\n  - vb\n  name: PerformanceCounter(String, String, Boolean)\n  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter(System.String, System.String, System.Boolean)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n    startLine: 38\n  assemblies:\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Initializes a new, read-only or read/write instance of the <xref href=\\\"System.Diagnostics.PerformanceCounter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class and associates it with the specified system or custom performance counter on the local computer. This constructor requires that the category contain a single instance.</p>\\n\"\n  syntax:\n    content: public PerformanceCounter(string categoryName, string counterName, bool readOnly)\n    content.vb: Public Sub New(categoryName As String, counterName As String, readOnly As Boolean)\n    parameters:\n    - id: categoryName\n      type: System.String\n      description: \"\\n<p>The name of the performance counter category (performance object) with which this performance counter is associated. </p>\\n\"\n    - id: counterName\n      type: System.String\n      description: \"\\n<p>The name of the performance counter. </p>\\n\"\n    - id: readOnly\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to access the counter in read-only mode (although the counter itself could be read/write); <strong>false</strong> to access the counter in read/write mode. </p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <em>categoryName</em> is an empty string (\\\"\\\").</p>\\n<p>-or- </p>\\n<p>The <em>counterName</em> is an empty string (\\\"\\\").</p>\\n<p>-or- </p>\\n<p>The category specified does not exist. (if <em>readOnly</em> is <strong>true</strong>). </p>\\n<p>-or- </p>\\n<p>The category specified is not a .NET Framework custom category (if <em>readOnly</em> is <strong>false</strong>). </p>\\n<p>-or-</p>\\n<p>The category specified is marked as multi-instance and requires the performance counter to be created with an instance name.</p>\\n<p>-or-</p>\\n<p>\\n<em>categoryName</em> and <em>counterName</em> have been localized into different languages.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>categoryName</em> or <em>counterName</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: \"\\n<p>An error occurred when accessing a system API. </p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\\n\"\n  see:\n  - type: System.Diagnostics.PerformanceCounterPermission\n    commentId: T:System.Diagnostics.PerformanceCounterPermission\n  - type: System.Diagnostics.PerformanceCounterPermission\n    commentId: T:System.Diagnostics.PerformanceCounterPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: PerformanceCounter.PerformanceCounter(String, String, Boolean)\n- uid: System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String)\n  commentId: M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String)\n  id: '#ctor(System.String,System.String,System.String)'\n  parent: System.Diagnostics.PerformanceCounter\n  langs:\n  - csharp\n  - vb\n  name: PerformanceCounter(String, String, String)\n  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter(System.String, System.String, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n    startLine: 39\n  assemblies:\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Initializes a new, read-only instance of the <xref href=\\\"System.Diagnostics.PerformanceCounter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class and associates it with the specified system or custom performance counter and category instance on the local computer.</p>\\n\"\n  syntax:\n    content: public PerformanceCounter(string categoryName, string counterName, string instanceName)\n    content.vb: Public Sub New(categoryName As String, counterName As String, instanceName As String)\n    parameters:\n    - id: categoryName\n      type: System.String\n      description: \"\\n<p>The name of the performance counter category (performance object) with which this performance counter is associated. </p>\\n\"\n    - id: counterName\n      type: System.String\n      description: \"\\n<p>The name of the performance counter. </p>\\n\"\n    - id: instanceName\n      type: System.String\n      description: \"\\n<p>The name of the performance counter category instance, or an empty string (\\\"\\\"), if the category contains a single instance. </p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>\\n<em>categoryName</em> is an empty string (\\\"\\\").</p>\\n<p>-or- </p>\\n<p>\\n<em>counterName</em> is an empty string (\\\"\\\").</p>\\n<p>-or- </p>\\n<p>The category specified is not valid. </p>\\n<p>-or-</p>\\n<p>The category specified is marked as multi-instance and requires the performance counter to be created with an instance name.</p>\\n<p>-or-</p>\\n<p>\\n<em>instanceName</em> is longer than 127 characters.</p>\\n<p>-or-</p>\\n<p>\\n<em>categoryName</em> and <em>counterName</em> have been localized into different languages.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>categoryName</em> or <em>counterName</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: \"\\n<p>An error occurred when accessing a system API. </p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\\n\"\n  see:\n  - type: System.Diagnostics.PerformanceCounterPermission\n    commentId: T:System.Diagnostics.PerformanceCounterPermission\n  - type: System.Diagnostics.PerformanceCounterPermission\n    commentId: T:System.Diagnostics.PerformanceCounterPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: PerformanceCounter.PerformanceCounter(String, String, String)\n- uid: System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.Boolean)\n  commentId: M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.Boolean)\n  id: '#ctor(System.String,System.String,System.String,System.Boolean)'\n  parent: System.Diagnostics.PerformanceCounter\n  langs:\n  - csharp\n  - vb\n  name: PerformanceCounter(String, String, String, Boolean)\n  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter(System.String, System.String, System.String, System.Boolean)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n    startLine: 40\n  assemblies:\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Initializes a new, read-only or read/write instance of the <xref href=\\\"System.Diagnostics.PerformanceCounter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class and associates it with the specified system or custom performance counter and category instance on the local computer.</p>\\n\"\n  syntax:\n    content: public PerformanceCounter(string categoryName, string counterName, string instanceName, bool readOnly)\n    content.vb: Public Sub New(categoryName As String, counterName As String, instanceName As String, readOnly As Boolean)\n    parameters:\n    - id: categoryName\n      type: System.String\n      description: \"\\n<p>The name of the performance counter category (performance object) with which this performance counter is associated. </p>\\n\"\n    - id: counterName\n      type: System.String\n      description: \"\\n<p>The name of the performance counter. </p>\\n\"\n    - id: instanceName\n      type: System.String\n      description: \"\\n<p>The name of the performance counter category instance, or an empty string (\\\"\\\"), if the category contains a single instance. </p>\\n\"\n    - id: readOnly\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to access a counter in read-only mode; <strong>false</strong> to access a counter in read/write mode. </p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>\\n<em>categoryName</em> is an empty string (\\\"\\\").</p>\\n<p>-or- </p>\\n<p>\\n<em>counterName</em> is an empty string (\\\"\\\").</p>\\n<p>-or- </p>\\n<p>The read/write permission setting requested is invalid for this counter.</p>\\n<p>-or- </p>\\n<p>The category specified does not exist (if <em>readOnly</em> is <strong>true</strong>). </p>\\n<p>-or- </p>\\n<p>The category specified is not a .NET Framework custom category (if <em>readOnly</em> is <strong>false</strong>). </p>\\n<p>-or-</p>\\n<p>The category specified is marked as multi-instance and requires the performance counter to be created with an instance name.</p>\\n<p>-or-</p>\\n<p>\\n<em>instanceName</em> is longer than 127 characters.</p>\\n<p>-or-</p>\\n<p>\\n<em>categoryName</em> and <em>counterName</em> have been localized into different languages.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>categoryName</em> or <em>counterName</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: \"\\n<p>An error occurred when accessing a system API. </p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\\n\"\n  see:\n  - type: System.Diagnostics.PerformanceCounterPermission\n    commentId: T:System.Diagnostics.PerformanceCounterPermission\n  - type: System.Diagnostics.PerformanceCounterPermission\n    commentId: T:System.Diagnostics.PerformanceCounterPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: PerformanceCounter.PerformanceCounter(String, String, String, Boolean)\n- uid: System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.String)\n  commentId: M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.String)\n  id: '#ctor(System.String,System.String,System.String,System.String)'\n  parent: System.Diagnostics.PerformanceCounter\n  langs:\n  - csharp\n  - vb\n  name: PerformanceCounter(String, String, String, String)\n  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter(System.String, System.String, System.String, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n    startLine: 41\n  assemblies:\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Initializes a new, read-only instance of the <xref href=\\\"System.Diagnostics.PerformanceCounter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class and associates it with the specified system or custom performance counter and category instance, on the specified computer.</p>\\n\"\n  syntax:\n    content: public PerformanceCounter(string categoryName, string counterName, string instanceName, string machineName)\n    content.vb: Public Sub New(categoryName As String, counterName As String, instanceName As String, machineName As String)\n    parameters:\n    - id: categoryName\n      type: System.String\n      description: \"\\n<p>The name of the performance counter category (performance object) with which this performance counter is associated. </p>\\n\"\n    - id: counterName\n      type: System.String\n      description: \"\\n<p>The name of the performance counter. </p>\\n\"\n    - id: instanceName\n      type: System.String\n      description: \"\\n<p>The name of the performance counter category instance, or an empty string (\\\"\\\"), if the category contains a single instance. </p>\\n\"\n    - id: machineName\n      type: System.String\n      description: \"\\n<p>The computer on which the performance counter and its associated category exist. </p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>\\n<em>categoryName</em> is an empty string (\\\"\\\").</p>\\n<p>-or- </p>\\n<p>\\n<em>counterName</em> is an empty string (\\\"\\\").</p>\\n<p>-or- </p>\\n<p>The read/write permission setting requested is invalid for this counter.</p>\\n<p>-or- </p>\\n<p>The counter does not exist on the specified computer. </p>\\n<p>-or-</p>\\n<p>The category specified is marked as multi-instance and requires the performance counter to be created with an instance name.</p>\\n<p>-or-</p>\\n<p>\\n<em>instanceName</em> is longer than 127 characters.</p>\\n<p>-or-</p>\\n<p>\\n<em>categoryName</em> and <em>counterName</em> have been localized into different languages.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The <em>machineName</em> parameter is not valid. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>categoryName</em> or <em>counterName</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: \"\\n<p>An error occurred when accessing a system API. </p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\\n\"\n  see:\n  - type: System.Diagnostics.PerformanceCounterPermission\n    commentId: T:System.Diagnostics.PerformanceCounterPermission\n  - type: System.Diagnostics.PerformanceCounterPermission\n    commentId: T:System.Diagnostics.PerformanceCounterPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: PerformanceCounter.PerformanceCounter(String, String, String, String)\n- uid: System.Diagnostics.PerformanceCounter.CategoryName\n  commentId: P:System.Diagnostics.PerformanceCounter.CategoryName\n  id: CategoryName\n  parent: System.Diagnostics.PerformanceCounter\n  langs:\n  - csharp\n  - vb\n  name: CategoryName\n  fullName: System.Diagnostics.PerformanceCounter.CategoryName\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CategoryName\n    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n    startLine: 42\n  assemblies:\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets or sets the name of the performance counter category for this performance counter.</p>\\n\"\n  syntax:\n    content: public string CategoryName { get; set; }\n    content.vb: Public Property CategoryName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The name of the performance counter category (performance object) with which this performance counter is associated.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <xref href=\\\"System.Diagnostics.PerformanceCounter.CategoryName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is <strong>null</strong>. </p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters. </p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Process.ProcessName\n    commentId: P:System.Diagnostics.Process.ProcessName\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: PerformanceCounter.CategoryName\n- uid: System.Diagnostics.PerformanceCounter.CounterHelp\n  commentId: P:System.Diagnostics.PerformanceCounter.CounterHelp\n  id: CounterHelp\n  parent: System.Diagnostics.PerformanceCounter\n  langs:\n  - csharp\n  - vb\n  name: CounterHelp\n  fullName: System.Diagnostics.PerformanceCounter.CounterHelp\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CounterHelp\n    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n    startLine: 44\n  assemblies:\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the description for this performance counter.</p>\\n\"\n  syntax:\n    content: public string CounterHelp { get; }\n    content.vb: Public ReadOnly Property CounterHelp As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A description of the item or quantity that this performance counter measures.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Diagnostics.PerformanceCounter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance is not associated with a performance counter. </p>\\n<p>-or-</p>\\n<p>The <xref href=\\\"System.Diagnostics.PerformanceCounter.InstanceLifetime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is set to <xref href=\\\"System.Diagnostics.PerformanceCounterInstanceLifetime.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>  when using global shared memory.</p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\\n\"\n  see:\n  - type: System.Diagnostics.PerformanceCounterPermission\n    commentId: T:System.Diagnostics.PerformanceCounterPermission\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: PerformanceCounter.CounterHelp\n- uid: System.Diagnostics.PerformanceCounter.CounterName\n  commentId: P:System.Diagnostics.PerformanceCounter.CounterName\n  id: CounterName\n  parent: System.Diagnostics.PerformanceCounter\n  langs:\n  - csharp\n  - vb\n  name: CounterName\n  fullName: System.Diagnostics.PerformanceCounter.CounterName\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CounterName\n    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n    startLine: 45\n  assemblies:\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets or sets the name of the performance counter that is associated with this <xref href=\\\"System.Diagnostics.PerformanceCounter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  syntax:\n    content: public string CounterName { get; set; }\n    content.vb: Public Property CounterName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The name of the counter, which generally describes the quantity being counted. This name is displayed in the list of counters of the Performance Counter Manager MMC snap in's Add Counters dialog box.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <xref href=\\\"System.Diagnostics.PerformanceCounter.CounterName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is <strong>null</strong>. </p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: PerformanceCounter.CounterName\n- uid: System.Diagnostics.PerformanceCounter.CounterType\n  commentId: P:System.Diagnostics.PerformanceCounter.CounterType\n  id: CounterType\n  parent: System.Diagnostics.PerformanceCounter\n  langs:\n  - csharp\n  - vb\n  name: CounterType\n  fullName: System.Diagnostics.PerformanceCounter.CounterType\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CounterType\n    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n    startLine: 47\n  assemblies:\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the counter type of the associated performance counter.</p>\\n\"\n  syntax:\n    content: public PerformanceCounterType CounterType { get; }\n    content.vb: Public ReadOnly Property CounterType As PerformanceCounterType\n    parameters: []\n    return:\n      type: System.Diagnostics.PerformanceCounterType\n      description: \"\\n<p>A <xref href=\\\"System.Diagnostics.PerformanceCounterType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that describes both how the counter interacts with a monitoring application and the nature of the values it contains (for example, calculated or uncalculated).</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The instance is not correctly associated with a performance counter. </p>\\n<p>-or-</p>\\n<p>The <xref href=\\\"System.Diagnostics.PerformanceCounter.InstanceLifetime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is set to <xref href=\\\"System.Diagnostics.PerformanceCounterInstanceLifetime.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>  when using global shared memory.</p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.PerformanceCounterType\n    commentId: T:System.Diagnostics.PerformanceCounterType\n  see:\n  - type: System.Diagnostics.PerformanceCounterPermission\n    commentId: T:System.Diagnostics.PerformanceCounterPermission\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: PerformanceCounter.CounterType\n- uid: System.Diagnostics.PerformanceCounter.InstanceLifetime\n  commentId: P:System.Diagnostics.PerformanceCounter.InstanceLifetime\n  id: InstanceLifetime\n  parent: System.Diagnostics.PerformanceCounter\n  langs:\n  - csharp\n  - vb\n  name: InstanceLifetime\n  fullName: System.Diagnostics.PerformanceCounter.InstanceLifetime\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: InstanceLifetime\n    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n    startLine: 48\n  assemblies:\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets or sets the lifetime of a process.</p>\\n\"\n  syntax:\n    content: public PerformanceCounterInstanceLifetime InstanceLifetime { get; set; }\n    content.vb: Public Property InstanceLifetime As PerformanceCounterInstanceLifetime\n    parameters: []\n    return:\n      type: System.Diagnostics.PerformanceCounterInstanceLifetime\n      description: \"\\n<p>One of the <xref href=\\\"System.Diagnostics.PerformanceCounterInstanceLifetime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. The default is <xref href=\\\"System.Diagnostics.PerformanceCounterInstanceLifetime.Global\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The value set is not a member of the <xref href=\\\"System.Diagnostics.PerformanceCounterInstanceLifetime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> enumeration. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>\\n<xref href=\\\"System.Diagnostics.PerformanceCounter.InstanceLifetime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is set after the <xref href=\\\"System.Diagnostics.PerformanceCounter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been initialized.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: PerformanceCounter.InstanceLifetime\n- uid: System.Diagnostics.PerformanceCounter.InstanceName\n  commentId: P:System.Diagnostics.PerformanceCounter.InstanceName\n  id: InstanceName\n  parent: System.Diagnostics.PerformanceCounter\n  langs:\n  - csharp\n  - vb\n  name: InstanceName\n  fullName: System.Diagnostics.PerformanceCounter.InstanceName\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: InstanceName\n    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n    startLine: 50\n  assemblies:\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets or sets an instance name for this performance counter.</p>\\n\"\n  syntax:\n    content: public string InstanceName { get; set; }\n    content.vb: Public Property InstanceName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The name of the performance counter category instance, or an empty string (\\\"\\\"), if the counter is a single-instance counter.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: PerformanceCounter.InstanceName\n- uid: System.Diagnostics.PerformanceCounter.MachineName\n  commentId: P:System.Diagnostics.PerformanceCounter.MachineName\n  id: MachineName\n  parent: System.Diagnostics.PerformanceCounter\n  langs:\n  - csharp\n  - vb\n  name: MachineName\n  fullName: System.Diagnostics.PerformanceCounter.MachineName\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MachineName\n    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n    startLine: 52\n  assemblies:\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets or sets the computer name for this performance counter </p>\\n\"\n  syntax:\n    content: public string MachineName { get; set; }\n    content.vb: Public Property MachineName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The server on which the performance counter and its associated category reside.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The <xref href=\\\"System.Diagnostics.PerformanceCounter.MachineName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> format is invalid. </p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: PerformanceCounter.MachineName\n- uid: System.Diagnostics.PerformanceCounter.RawValue\n  commentId: P:System.Diagnostics.PerformanceCounter.RawValue\n  id: RawValue\n  parent: System.Diagnostics.PerformanceCounter\n  langs:\n  - csharp\n  - vb\n  name: RawValue\n  fullName: System.Diagnostics.PerformanceCounter.RawValue\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RawValue\n    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n    startLine: 54\n  assemblies:\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets or sets the raw, or uncalculated, value of this counter.</p>\\n\"\n  syntax:\n    content: public long RawValue { get; set; }\n    content.vb: Public Property RawValue As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>The raw value of the counter.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>You are trying to set the counter's raw value, but the counter is read-only.</p>\\n<p>-or- </p>\\n<p>The instance is not correctly associated with a performance counter. </p>\\n<p>-or-</p>\\n<p>The <xref href=\\\"System.Diagnostics.PerformanceCounter.InstanceLifetime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is set to <xref href=\\\"System.Diagnostics.PerformanceCounterInstanceLifetime.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>  when using global shared memory.</p>\\n\"\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: \"\\n<p>An error occurred when accessing a system API. </p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\\n\"\n  see:\n  - type: System.Diagnostics.PerformanceCounterPermission\n    commentId: T:System.Diagnostics.PerformanceCounterPermission\n  - type: System.Diagnostics.PerformanceCounterPermission\n    commentId: T:System.Diagnostics.PerformanceCounterPermission\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: PerformanceCounter.RawValue\n- uid: System.Diagnostics.PerformanceCounter.ReadOnly\n  commentId: P:System.Diagnostics.PerformanceCounter.ReadOnly\n  id: ReadOnly\n  parent: System.Diagnostics.PerformanceCounter\n  langs:\n  - csharp\n  - vb\n  name: ReadOnly\n  fullName: System.Diagnostics.PerformanceCounter.ReadOnly\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadOnly\n    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n    startLine: 55\n  assemblies:\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets or sets a value indicating whether this <xref href=\\\"System.Diagnostics.PerformanceCounter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance is in read-only mode.</p>\\n\"\n  syntax:\n    content: public bool ReadOnly { get; set; }\n    content.vb: Public Property ReadOnly As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong>, if the <xref href=\\\"System.Diagnostics.PerformanceCounter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance is in read-only mode (even if the counter itself is a custom .NET Framework counter); <strong>false</strong> if it is in read/write mode. The default is the value set by the constructor.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: PerformanceCounter.ReadOnly\n- uid: System.Diagnostics.PerformanceCounter.BeginInit\n  commentId: M:System.Diagnostics.PerformanceCounter.BeginInit\n  id: BeginInit\n  parent: System.Diagnostics.PerformanceCounter\n  langs:\n  - csharp\n  - vb\n  name: BeginInit()\n  fullName: System.Diagnostics.PerformanceCounter.BeginInit()\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: BeginInit\n    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n    startLine: 57\n  assemblies:\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Begins the initialization of a <xref href=\\\"System.Diagnostics.PerformanceCounter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance used on a form or by another component. The initialization occurs at runtime.</p>\\n\"\n  syntax:\n    content: public void BeginInit()\n    content.vb: Public Sub BeginInit\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: PerformanceCounter.BeginInit()\n- uid: System.Diagnostics.PerformanceCounter.Close\n  commentId: M:System.Diagnostics.PerformanceCounter.Close\n  id: Close\n  parent: System.Diagnostics.PerformanceCounter\n  langs:\n  - csharp\n  - vb\n  name: Close()\n  fullName: System.Diagnostics.PerformanceCounter.Close()\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Close\n    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n    startLine: 58\n  assemblies:\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Closes the performance counter and frees all the resources allocated by this performance counter instance.</p>\\n\"\n  syntax:\n    content: public void Close()\n    content.vb: Public Sub Close\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: PerformanceCounter.Close()\n- uid: System.Diagnostics.PerformanceCounter.EndInit\n  commentId: M:System.Diagnostics.PerformanceCounter.EndInit\n  id: EndInit\n  parent: System.Diagnostics.PerformanceCounter\n  langs:\n  - csharp\n  - vb\n  name: EndInit()\n  fullName: System.Diagnostics.PerformanceCounter.EndInit()\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: EndInit\n    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n    startLine: 59\n  assemblies:\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Ends the initialization of a <xref href=\\\"System.Diagnostics.PerformanceCounter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance that is used on a form or by another component. The initialization occurs at runtime.</p>\\n\"\n  syntax:\n    content: public void EndInit()\n    content.vb: Public Sub\n  see:\n  - type: System.Diagnostics.PerformanceCounterPermission\n    commentId: T:System.Diagnostics.PerformanceCounterPermission\n  - type: System.Diagnostics.PerformanceCounterPermission\n    commentId: T:System.Diagnostics.PerformanceCounterPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: PerformanceCounter.EndInit()\n- uid: System.Diagnostics.PerformanceCounter.Increment\n  commentId: M:System.Diagnostics.PerformanceCounter.Increment\n  id: Increment\n  parent: System.Diagnostics.PerformanceCounter\n  langs:\n  - csharp\n  - vb\n  name: Increment()\n  fullName: System.Diagnostics.PerformanceCounter.Increment()\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Increment\n    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n    startLine: 60\n  assemblies:\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Increments the associated performance counter by one through an efficient atomic operation.</p>\\n\"\n  syntax:\n    content: public long Increment()\n    content.vb: Public Function Increment As Long\n    return:\n      type: System.Int64\n      description: \"\\n<p>The incremented counter value.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The counter is read-only, so the application cannot increment it.</p>\\n<p>-or- </p>\\n<p>The instance is not correctly associated with a performance counter. </p>\\n<p>-or-</p>\\n<p>The <xref href=\\\"System.Diagnostics.PerformanceCounter.InstanceLifetime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is set to <xref href=\\\"System.Diagnostics.PerformanceCounterInstanceLifetime.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>  when using global shared memory.</p>\\n\"\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: \"\\n<p>An error occurred when accessing a system API. </p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters. </p>\\n\"\n  see:\n  - type: System.Diagnostics.PerformanceCounterPermission\n    commentId: T:System.Diagnostics.PerformanceCounterPermission\n  - type: System.Diagnostics.PerformanceCounterPermission\n    commentId: T:System.Diagnostics.PerformanceCounterPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: PerformanceCounter.Increment()\n- uid: System.Diagnostics.PerformanceCounter.IncrementBy(System.Int64)\n  commentId: M:System.Diagnostics.PerformanceCounter.IncrementBy(System.Int64)\n  id: IncrementBy(System.Int64)\n  parent: System.Diagnostics.PerformanceCounter\n  langs:\n  - csharp\n  - vb\n  name: IncrementBy(Int64)\n  fullName: System.Diagnostics.PerformanceCounter.IncrementBy(System.Int64)\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IncrementBy\n    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n    startLine: 61\n  assemblies:\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Increments or decrements the value of the associated performance counter by a specified amount through an efficient atomic operation.</p>\\n\"\n  syntax:\n    content: public long IncrementBy(long value)\n    content.vb: Public Function IncrementBy(value As Long) As Long\n    parameters:\n    - id: value\n      type: System.Int64\n      description: \"\\n<p>The value to increment by. (A negative value decrements the counter.) </p>\\n\"\n    return:\n      type: System.Int64\n      description: \"\\n<p>The new counter value.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The counter is read-only, so the application cannot increment it.</p>\\n<p>-or- </p>\\n<p>The instance is not correctly associated with a performance counter. </p>\\n<p>-or-</p>\\n<p>The <xref href=\\\"System.Diagnostics.PerformanceCounter.InstanceLifetime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is set to <xref href=\\\"System.Diagnostics.PerformanceCounterInstanceLifetime.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>  when using global shared memory.</p>\\n\"\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: \"\\n<p>An error occurred when accessing a system API. </p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters. </p>\\n\"\n  see:\n  - type: System.Diagnostics.PerformanceCounterPermission\n    commentId: T:System.Diagnostics.PerformanceCounterPermission\n  - type: System.Diagnostics.PerformanceCounterPermission\n    commentId: T:System.Diagnostics.PerformanceCounterPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: PerformanceCounter.IncrementBy(Int64)\n- uid: System.Diagnostics.PerformanceCounter.NextSample\n  commentId: M:System.Diagnostics.PerformanceCounter.NextSample\n  id: NextSample\n  parent: System.Diagnostics.PerformanceCounter\n  langs:\n  - csharp\n  - vb\n  name: NextSample()\n  fullName: System.Diagnostics.PerformanceCounter.NextSample()\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NextSample\n    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n    startLine: 62\n  assemblies:\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Obtains a counter sample, and returns the raw, or uncalculated, value for it.</p>\\n\"\n  syntax:\n    content: public CounterSample NextSample()\n    content.vb: Public Function NextSample As CounterSample\n    return:\n      type: System.Diagnostics.CounterSample\n      description: \"\\n<p>A <xref href=\\\"System.Diagnostics.CounterSample\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the next raw value that the system obtains for this counter.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The instance is not correctly associated with a performance counter. </p>\\n<p>-or-</p>\\n<p>The <xref href=\\\"System.Diagnostics.PerformanceCounter.InstanceLifetime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is set to <xref href=\\\"System.Diagnostics.PerformanceCounterInstanceLifetime.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>  when using global shared memory.</p>\\n\"\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: \"\\n<p>An error occurred when accessing a system API. </p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\\n\"\n  see:\n  - type: System.Diagnostics.PerformanceCounterPermission\n    commentId: T:System.Diagnostics.PerformanceCounterPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: PerformanceCounter.NextSample()\n- uid: System.Diagnostics.PerformanceCounter.NextValue\n  commentId: M:System.Diagnostics.PerformanceCounter.NextValue\n  id: NextValue\n  parent: System.Diagnostics.PerformanceCounter\n  langs:\n  - csharp\n  - vb\n  name: NextValue()\n  fullName: System.Diagnostics.PerformanceCounter.NextValue()\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NextValue\n    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n    startLine: 63\n  assemblies:\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Obtains a counter sample and returns the calculated value for it.</p>\\n\"\n  syntax:\n    content: public float NextValue()\n    content.vb: Public Function NextValue As Single\n    return:\n      type: System.Single\n      description: \"\\n<p>The next calculated value that the system obtains for this counter.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The instance is not correctly associated with a performance counter. </p>\\n\"\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: \"\\n<p>An error occurred when accessing a system API. </p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\\n\"\n  see:\n  - type: System.Diagnostics.PerformanceCounterPermission\n    commentId: T:System.Diagnostics.PerformanceCounterPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: PerformanceCounter.NextValue()\n- uid: System.Diagnostics.PerformanceCounter.RemoveInstance\n  commentId: M:System.Diagnostics.PerformanceCounter.RemoveInstance\n  id: RemoveInstance\n  parent: System.Diagnostics.PerformanceCounter\n  langs:\n  - csharp\n  - vb\n  name: RemoveInstance()\n  fullName: System.Diagnostics.PerformanceCounter.RemoveInstance()\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveInstance\n    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs\n    startLine: 64\n  assemblies:\n  - System.Diagnostics.PerformanceCounter\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Deletes the category instance specified by the <xref href=\\\"System.Diagnostics.PerformanceCounter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object <xref href=\\\"System.Diagnostics.PerformanceCounter.InstanceName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property.</p>\\n\"\n  syntax:\n    content: public void RemoveInstance()\n    content.vb: Public Sub RemoveInstance\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>This counter is read-only, so any instance that is associated with the category cannot be removed.</p>\\n<p>-or- </p>\\n<p>The instance is not correctly associated with a performance counter. </p>\\n<p>-or-</p>\\n<p>The <xref href=\\\"System.Diagnostics.PerformanceCounter.InstanceLifetime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is set to <xref href=\\\"System.Diagnostics.PerformanceCounterInstanceLifetime.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>  when using global shared memory.</p>\\n\"\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: \"\\n<p>An error occurred when accessing a system API. </p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters. </p>\\n\"\n  see:\n  - type: System.Diagnostics.PerformanceCounterPermission\n    commentId: T:System.Diagnostics.PerformanceCounterPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: PerformanceCounter.RemoveInstance()\nreferences:\n- uid: System.Diagnostics\n  isExternal: false\n  name: System.Diagnostics\n  fullName: System.Diagnostics\n  commentId: N:System.Diagnostics\n  nameWithType: System.Diagnostics\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Diagnostics.PerformanceCounterType\n  parent: System.Diagnostics\n  isExternal: false\n  name: PerformanceCounterType\n  fullName: System.Diagnostics.PerformanceCounterType\n  commentId: T:System.Diagnostics.PerformanceCounterType\n  nameWithType: PerformanceCounterType\n- uid: System.Diagnostics.PerformanceCounterInstanceLifetime\n  parent: System.Diagnostics\n  isExternal: false\n  name: PerformanceCounterInstanceLifetime\n  fullName: System.Diagnostics.PerformanceCounterInstanceLifetime\n  commentId: T:System.Diagnostics.PerformanceCounterInstanceLifetime\n  nameWithType: PerformanceCounterInstanceLifetime\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  fullName: System.Int64\n  commentId: T:System.Int64\n  nameWithType: Int64\n- uid: System.Diagnostics.CounterSample\n  parent: System.Diagnostics\n  isExternal: false\n  name: CounterSample\n  fullName: System.Diagnostics.CounterSample\n  commentId: T:System.Diagnostics.CounterSample\n  nameWithType: CounterSample\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  fullName: System.Single\n  commentId: T:System.Single\n  nameWithType: Single\n- uid: System.PlatformNotSupportedException\n  isExternal: false\n  name: PlatformNotSupportedException\n  fullName: System.PlatformNotSupportedException\n  nameWithType: PlatformNotSupportedException\n  commentId: T:System.PlatformNotSupportedException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ComponentModel.Win32Exception\n  isExternal: false\n  name: Win32Exception\n  fullName: System.ComponentModel.Win32Exception\n  nameWithType: Win32Exception\n  commentId: T:System.ComponentModel.Win32Exception\n- uid: System.UnauthorizedAccessException\n  parent: System\n  isExternal: false\n  name: UnauthorizedAccessException\n  fullName: System.UnauthorizedAccessException\n  nameWithType: UnauthorizedAccessException\n  commentId: T:System.UnauthorizedAccessException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n"}