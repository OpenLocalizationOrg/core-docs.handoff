{"nodes":[{"pos":[318,328],"content":"IPrincipal","needQuote":true,"nodes":[{"content":"IPrincipal","pos":[0,10]}]},{"pos":[1313,1321],"content":"Identity","needQuote":true,"nodes":[{"content":"Identity","pos":[0,8]}]},{"pos":[2525,2541],"content":"IsInRole(String)","needQuote":true,"nodes":[{"content":"IsInRole(String)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The name of the role for which to check membership.","pos":[3261,3317],"source":"\\n<p>The name of the role for which to check membership."},{"content":"&lt;/p&gt;\\n","pos":[3318,3324],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the current principal is a member of the specified role; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[3385,3514],"source":"\\n<p>\\n<strong>true</strong> if the current principal is a member of the specified role; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[3633,3658],"content":"System.Security.Principal","needQuote":true,"nodes":[{"content":"System.Security.Principal","pos":[0,25]}]},{"pos":[3887,3896],"content":"IIdentity","needQuote":true,"nodes":[{"content":"IIdentity","pos":[0,9]}]},{"pos":[4088,4094],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[4240,4247],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[4371,4377],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]}],"content":"items:\n- uid: System.Security.Principal.IPrincipal\n  commentId: T:System.Security.Principal.IPrincipal\n  id: IPrincipal\n  parent: System.Security.Principal\n  children:\n  - System.Security.Principal.IPrincipal.Identity\n  - System.Security.Principal.IPrincipal.IsInRole(System.String)\n  langs:\n  - csharp\n  - vb\n  name: IPrincipal\n  fullName: System.Security.Principal.IPrincipal\n  type: Interface\n  source:\n    remote:\n      path: src/mscorlib/src/System/Security/Principal/IPrincipal.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IPrincipal\n    path: src/mscorlib/src/System/Security/Principal/IPrincipal.cs\n    startLine: 17\n  assemblies:\n  - System.Security.Principal\n  namespace: System.Security.Principal\n  summary: \"\\n<p>Defines the basic functionality of a principal object.</p>\\n\"\n  syntax:\n    content: >-\n      [ComVisible(true)]\n\n      public interface IPrincipal\n    content.vb: >-\n      <ComVisible(True)>\n\n      Public Interface IPrincipal\n  modifiers.csharp:\n  - public\n  - interface\n  modifiers.vb:\n  - Public\n  - Interface\n  nameWithType: IPrincipal\n- uid: System.Security.Principal.IPrincipal.Identity\n  commentId: P:System.Security.Principal.IPrincipal.Identity\n  id: Identity\n  parent: System.Security.Principal.IPrincipal\n  langs:\n  - csharp\n  - vb\n  name: Identity\n  fullName: System.Security.Principal.IPrincipal.Identity\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Security/Principal/IPrincipal.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Identity\n    path: src/mscorlib/src/System/Security/Principal/IPrincipal.cs\n    startLine: 20\n  assemblies:\n  - System.Security.Principal\n  namespace: System.Security.Principal\n  summary: \"\\n<p>Gets the identity of the current principal.</p>\\n\"\n  syntax:\n    content: IIdentity Identity { get; }\n    content.vb: ReadOnly Property Identity As IIdentity\n    parameters: []\n    return:\n      type: System.Security.Principal.IIdentity\n      description: \"\\n<p>The <xref href=\\\"System.Security.Principal.IIdentity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object associated with the current principal.</p>\\n\"\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  nameWithType: IPrincipal.Identity\n- uid: System.Security.Principal.IPrincipal.IsInRole(System.String)\n  commentId: M:System.Security.Principal.IPrincipal.IsInRole(System.String)\n  id: IsInRole(System.String)\n  parent: System.Security.Principal.IPrincipal\n  langs:\n  - csharp\n  - vb\n  name: IsInRole(String)\n  fullName: System.Security.Principal.IPrincipal.IsInRole(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Security/Principal/IPrincipal.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IsInRole\n    path: src/mscorlib/src/System/Security/Principal/IPrincipal.cs\n    startLine: 23\n  assemblies:\n  - System.Security.Principal\n  namespace: System.Security.Principal\n  summary: \"\\n<p>Determines whether the current principal belongs to the specified role.</p>\\n\"\n  syntax:\n    content: bool IsInRole(string role)\n    content.vb: Function IsInRole(role As String) As Boolean\n    parameters:\n    - id: role\n      type: System.String\n      description: \"\\n<p>The name of the role for which to check membership. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the current principal is a member of the specified role; otherwise, <strong>false</strong>.</p>\\n\"\n  nameWithType: IPrincipal.IsInRole(String)\nreferences:\n- uid: System.Security.Principal\n  isExternal: false\n  name: System.Security.Principal\n  fullName: System.Security.Principal\n  nameWithType: System.Security.Principal\n  commentId: N:System.Security.Principal\n- uid: System.Security.Principal.IIdentity\n  parent: System.Security.Principal\n  isExternal: false\n  name: IIdentity\n  fullName: System.Security.Principal.IIdentity\n  nameWithType: IIdentity\n  commentId: T:System.Security.Principal.IIdentity\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n"}