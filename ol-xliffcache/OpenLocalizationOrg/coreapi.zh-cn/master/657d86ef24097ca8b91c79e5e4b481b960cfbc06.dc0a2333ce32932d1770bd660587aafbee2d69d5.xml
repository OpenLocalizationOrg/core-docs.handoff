{"nodes":[{"pos":[1033,1043],"content":"XContainer","needQuote":true,"nodes":[{"content":"XContainer","pos":[0,10]}]},{"pos":[4185,4194],"content":"FirstNode","needQuote":true,"nodes":[{"content":"FirstNode","pos":[0,9]}]},{"pos":[5573,5581],"content":"LastNode","needQuote":true,"nodes":[{"content":"LastNode","pos":[0,8]}]},{"pos":[6985,6996],"content":"Add(Object)","needQuote":true,"nodes":[{"content":"Add(Object)","pos":[0,11]}]},{"content":"\\n&lt;p&gt;A content object containing simple content or a collection of content objects to be added.&lt;/p&gt;\\n","pos":[7733,7834],"source":"\\n<p>A content object containing simple content or a collection of content objects to be added.</p>\\n"},{"pos":[8532,8545],"content":"Add(Object[])","needQuote":true,"nodes":[{"content":"Add(Object[])","pos":[0,13]}]},{"content":"\\n&lt;p&gt;A parameter list of content objects.&lt;/p&gt;\\n","pos":[9308,9355],"source":"\\n<p>A parameter list of content objects.</p>\\n"},{"pos":[10196,10212],"content":"AddFirst(Object)","needQuote":true,"nodes":[{"content":"AddFirst(Object)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;A content object containing simple content or a collection of content objects to be added.&lt;/p&gt;\\n","pos":[10912,11013],"source":"\\n<p>A content object containing simple content or a collection of content objects to be added.</p>\\n"},{"pos":[11721,11739],"content":"AddFirst(Object[])","needQuote":true,"nodes":[{"content":"AddFirst(Object[])","pos":[0,18]}]},{"content":"\\n&lt;p&gt;A parameter list of content objects.&lt;/p&gt;\\n","pos":[12465,12512],"source":"\\n<p>A parameter list of content objects.</p>\\n"},{"content":"\\n&lt;p&gt;The parent is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[12639,12686],"source":"\\n<p>The parent is <strong>null</strong>.</p>\\n"},{"pos":[13504,13518],"content":"CreateWriter()","needQuote":true,"nodes":[{"content":"CreateWriter()","pos":[0,14]}]},{"pos":[14778,14795],"content":"DescendantNodes()","needQuote":true,"nodes":[{"content":"DescendantNodes()","pos":[0,17]}]},{"pos":[16418,16431],"content":"Descendants()","needQuote":true,"nodes":[{"content":"Descendants()","pos":[0,13]}]},{"pos":[18225,18243],"content":"Descendants(XName)","needQuote":true,"nodes":[{"content":"Descendants(XName)","pos":[0,18]}]},{"pos":[20419,20433],"content":"Element(XName)","needQuote":true,"nodes":[{"content":"Element(XName)","pos":[0,14]}]},{"pos":[22031,22041],"content":"Elements()","needQuote":true,"nodes":[{"content":"Elements()","pos":[0,10]}]},{"pos":[23854,23869],"content":"Elements(XName)","needQuote":true,"nodes":[{"content":"Elements(XName)","pos":[0,15]}]},{"pos":[26102,26109],"content":"Nodes()","needQuote":true,"nodes":[{"content":"Nodes()","pos":[0,7]}]},{"pos":[27782,27795],"content":"RemoveNodes()","needQuote":true,"nodes":[{"content":"RemoveNodes()","pos":[0,13]}]},{"pos":[28962,28982],"content":"ReplaceNodes(Object)","needQuote":true,"nodes":[{"content":"ReplaceNodes(Object)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;A content object containing simple content or a collection of content objects that replace the children nodes.&lt;/p&gt;\\n","pos":[29704,29825],"source":"\\n<p>A content object containing simple content or a collection of content objects that replace the children nodes.</p>\\n"},{"pos":[30412,30434],"content":"ReplaceNodes(Object[])","needQuote":true,"nodes":[{"content":"ReplaceNodes(Object[])","pos":[0,22]}]},{"content":"\\n&lt;p&gt;A parameter list of content objects.&lt;/p&gt;\\n","pos":[31182,31229],"source":"\\n<p>A parameter list of content objects.</p>\\n"},{"pos":[31796,31811],"content":"System.Xml.Linq","needQuote":true,"nodes":[{"content":"System.Xml.Linq","pos":[0,15]}]},{"pos":[31969,31975],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[32139,32146],"content":"XObject","needQuote":true,"nodes":[{"content":"XObject","pos":[0,7]}]},{"pos":[32329,32334],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"pos":[32539,32560],"content":"DocumentOrderComparer","needQuote":true,"nodes":[{"content":"DocumentOrderComparer","pos":[0,21]}]},{"pos":[32826,32842],"content":"EqualityComparer","needQuote":true,"nodes":[{"content":"EqualityComparer","pos":[0,16]}]},{"pos":[33085,33093],"content":"NextNode","needQuote":true,"nodes":[{"content":"NextNode","pos":[0,8]}]},{"pos":[33316,33328],"content":"PreviousNode","needQuote":true,"nodes":[{"content":"PreviousNode","pos":[0,12]}]},{"pos":[33577,33597],"content":"AddAfterSelf(Object)","needQuote":true,"nodes":[{"content":"AddAfterSelf(Object)","pos":[0,20]}]},{"pos":[33744,33756],"content":"AddAfterSelf","needQuote":true,"nodes":[{"content":"AddAfterSelf","pos":[0,12]}]},{"pos":[33816,33817],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33867,33873],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[33933,33934],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34031,34043],"content":"AddAfterSelf","needQuote":true,"nodes":[{"content":"AddAfterSelf","pos":[0,12]}]},{"pos":[34103,34104],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34154,34160],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[34220,34221],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34464,34486],"content":"AddAfterSelf(Object[])","needQuote":true,"nodes":[{"content":"AddAfterSelf(Object[])","pos":[0,22]}]},{"pos":[34738,34750],"content":"AddAfterSelf","needQuote":true,"nodes":[{"content":"AddAfterSelf","pos":[0,12]}]},{"pos":[34810,34811],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34861,34867],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[34928,34930]},{"pos":[34961,34962],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35061,35073],"content":"AddAfterSelf","needQuote":true,"nodes":[{"content":"AddAfterSelf","pos":[0,12]}]},{"pos":[35133,35134],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35184,35190],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[35250,35252],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[35280,35281],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35575,35596],"content":"AddBeforeSelf(Object)","needQuote":true,"nodes":[{"content":"AddBeforeSelf(Object)","pos":[0,21]}]},{"pos":[35745,35758],"content":"AddBeforeSelf","needQuote":true,"nodes":[{"content":"AddBeforeSelf","pos":[0,13]}]},{"pos":[35819,35820],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35870,35876],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[35936,35937],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36035,36048],"content":"AddBeforeSelf","needQuote":true,"nodes":[{"content":"AddBeforeSelf","pos":[0,13]}]},{"pos":[36109,36110],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36160,36166],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[36226,36227],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36473,36496],"content":"AddBeforeSelf(Object[])","needQuote":true,"nodes":[{"content":"AddBeforeSelf(Object[])","pos":[0,23]}]},{"pos":[36752,36765],"content":"AddBeforeSelf","needQuote":true,"nodes":[{"content":"AddBeforeSelf","pos":[0,13]}]},{"pos":[36826,36827],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36877,36883],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[36944,36946]},{"pos":[36977,36978],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37078,37091],"content":"AddBeforeSelf","needQuote":true,"nodes":[{"content":"AddBeforeSelf","pos":[0,13]}]},{"pos":[37152,37153],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37203,37209],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[37269,37271],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[37299,37300],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37579,37590],"content":"Ancestors()","needQuote":true,"nodes":[{"content":"Ancestors()","pos":[0,11]}]},{"pos":[37703,37712],"content":"Ancestors","needQuote":true,"nodes":[{"content":"Ancestors","pos":[0,9]}]},{"pos":[37769,37770],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37797,37798],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37877,37886],"content":"Ancestors","needQuote":true,"nodes":[{"content":"Ancestors","pos":[0,9]}]},{"pos":[37943,37944],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37971,37972],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38192,38208],"content":"Ancestors(XName)","needQuote":true,"nodes":[{"content":"Ancestors(XName)","pos":[0,16]}]},{"pos":[38365,38374],"content":"Ancestors","needQuote":true,"nodes":[{"content":"Ancestors","pos":[0,9]}]},{"pos":[38431,38432],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38490,38495],"content":"XName","needQuote":true,"nodes":[{"content":"XName","pos":[0,5]}]},{"pos":[38542,38543],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38645,38654],"content":"Ancestors","needQuote":true,"nodes":[{"content":"Ancestors","pos":[0,9]}]},{"pos":[38711,38712],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38770,38775],"content":"XName","needQuote":true,"nodes":[{"content":"XName","pos":[0,5]}]},{"pos":[38822,38823],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39104,39138],"content":"CompareDocumentOrder(XNode, XNode)","needQuote":true,"nodes":[{"content":"CompareDocumentOrder(XNode, XNode)","pos":[0,34]}]},{"pos":[39362,39382],"content":"CompareDocumentOrder","needQuote":true,"nodes":[{"content":"CompareDocumentOrder","pos":[0,20]}]},{"pos":[39450,39451],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39509,39514],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"content":",","pos":[39562,39563]},{"pos":[39626,39631],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"pos":[39678,39679],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39814,39834],"content":"CompareDocumentOrder","needQuote":true,"nodes":[{"content":"CompareDocumentOrder","pos":[0,20]}]},{"pos":[39902,39903],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39961,39966],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"content":",","pos":[40014,40015]},{"pos":[40078,40083],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"pos":[40130,40131],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40410,40424],"content":"CreateReader()","needQuote":true,"nodes":[{"content":"CreateReader()","pos":[0,14]}]},{"pos":[40543,40555],"content":"CreateReader","needQuote":true,"nodes":[{"content":"CreateReader","pos":[0,12]}]},{"pos":[40615,40616],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40643,40644],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40726,40738],"content":"CreateReader","needQuote":true,"nodes":[{"content":"CreateReader","pos":[0,12]}]},{"pos":[40798,40799],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40826,40827],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41064,41091],"content":"CreateReader(ReaderOptions)","needQuote":true,"nodes":[{"content":"CreateReader(ReaderOptions)","pos":[0,27]}]},{"pos":[41270,41282],"content":"CreateReader","needQuote":true,"nodes":[{"content":"CreateReader","pos":[0,12]}]},{"pos":[41342,41343],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41409,41422],"content":"ReaderOptions","needQuote":true,"nodes":[{"content":"ReaderOptions","pos":[0,13]}]},{"pos":[41477,41478],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41591,41603],"content":"CreateReader","needQuote":true,"nodes":[{"content":"CreateReader","pos":[0,12]}]},{"pos":[41663,41664],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41730,41743],"content":"ReaderOptions","needQuote":true,"nodes":[{"content":"ReaderOptions","pos":[0,13]}]},{"pos":[41798,41799],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42092,42116],"content":"DeepEquals(XNode, XNode)","needQuote":true,"nodes":[{"content":"DeepEquals(XNode, XNode)","pos":[0,24]}]},{"pos":[42320,42330],"content":"DeepEquals","needQuote":true,"nodes":[{"content":"DeepEquals","pos":[0,10]}]},{"pos":[42388,42389],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42447,42452],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"content":",","pos":[42500,42501]},{"pos":[42564,42569],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"pos":[42616,42617],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42742,42752],"content":"DeepEquals","needQuote":true,"nodes":[{"content":"DeepEquals","pos":[0,10]}]},{"pos":[42810,42811],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42869,42874],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"content":",","pos":[42922,42923]},{"pos":[42986,42991],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"pos":[43038,43039],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43303,43322],"content":"ElementsAfterSelf()","needQuote":true,"nodes":[{"content":"ElementsAfterSelf()","pos":[0,19]}]},{"pos":[43451,43468],"content":"ElementsAfterSelf","needQuote":true,"nodes":[{"content":"ElementsAfterSelf","pos":[0,17]}]},{"pos":[43533,43534],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43561,43562],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43649,43666],"content":"ElementsAfterSelf","needQuote":true,"nodes":[{"content":"ElementsAfterSelf","pos":[0,17]}]},{"pos":[43731,43732],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43759,43760],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44004,44028],"content":"ElementsAfterSelf(XName)","needQuote":true,"nodes":[{"content":"ElementsAfterSelf(XName)","pos":[0,24]}]},{"pos":[44201,44218],"content":"ElementsAfterSelf","needQuote":true,"nodes":[{"content":"ElementsAfterSelf","pos":[0,17]}]},{"pos":[44283,44284],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44342,44347],"content":"XName","needQuote":true,"nodes":[{"content":"XName","pos":[0,5]}]},{"pos":[44394,44395],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44505,44522],"content":"ElementsAfterSelf","needQuote":true,"nodes":[{"content":"ElementsAfterSelf","pos":[0,17]}]},{"pos":[44587,44588],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44646,44651],"content":"XName","needQuote":true,"nodes":[{"content":"XName","pos":[0,5]}]},{"pos":[44698,44699],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44949,44969],"content":"ElementsBeforeSelf()","needQuote":true,"nodes":[{"content":"ElementsBeforeSelf()","pos":[0,20]}]},{"pos":[45100,45118],"content":"ElementsBeforeSelf","needQuote":true,"nodes":[{"content":"ElementsBeforeSelf","pos":[0,18]}]},{"pos":[45184,45185],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45212,45213],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45301,45319],"content":"ElementsBeforeSelf","needQuote":true,"nodes":[{"content":"ElementsBeforeSelf","pos":[0,18]}]},{"pos":[45385,45386],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45413,45414],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45661,45686],"content":"ElementsBeforeSelf(XName)","needQuote":true,"nodes":[{"content":"ElementsBeforeSelf(XName)","pos":[0,25]}]},{"pos":[45861,45879],"content":"ElementsBeforeSelf","needQuote":true,"nodes":[{"content":"ElementsBeforeSelf","pos":[0,18]}]},{"pos":[45945,45946],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46004,46009],"content":"XName","needQuote":true,"nodes":[{"content":"XName","pos":[0,5]}]},{"pos":[46056,46057],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46168,46186],"content":"ElementsBeforeSelf","needQuote":true,"nodes":[{"content":"ElementsBeforeSelf","pos":[0,18]}]},{"pos":[46252,46253],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46311,46316],"content":"XName","needQuote":true,"nodes":[{"content":"XName","pos":[0,5]}]},{"pos":[46363,46364],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46628,46642],"content":"IsAfter(XNode)","needQuote":true,"nodes":[{"content":"IsAfter(XNode)","pos":[0,14]}]},{"pos":[46795,46802],"content":"IsAfter","needQuote":true,"nodes":[{"content":"IsAfter","pos":[0,7]}]},{"pos":[46857,46858],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46916,46921],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"pos":[46968,46969],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47069,47076],"content":"IsAfter","needQuote":true,"nodes":[{"content":"IsAfter","pos":[0,7]}]},{"pos":[47131,47132],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47190,47195],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"pos":[47242,47243],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47486,47501],"content":"IsBefore(XNode)","needQuote":true,"nodes":[{"content":"IsBefore(XNode)","pos":[0,15]}]},{"pos":[47656,47664],"content":"IsBefore","needQuote":true,"nodes":[{"content":"IsBefore","pos":[0,8]}]},{"pos":[47720,47721],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47779,47784],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"pos":[47831,47832],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47933,47941],"content":"IsBefore","needQuote":true,"nodes":[{"content":"IsBefore","pos":[0,8]}]},{"pos":[47997,47998],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48056,48061],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"pos":[48108,48109],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[48337,48353],"content":"NodesAfterSelf()","needQuote":true,"nodes":[{"content":"NodesAfterSelf()","pos":[0,16]}]},{"pos":[48476,48490],"content":"NodesAfterSelf","needQuote":true,"nodes":[{"content":"NodesAfterSelf","pos":[0,14]}]},{"pos":[48552,48553],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48580,48581],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[48665,48679],"content":"NodesAfterSelf","needQuote":true,"nodes":[{"content":"NodesAfterSelf","pos":[0,14]}]},{"pos":[48741,48742],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48769,48770],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[48983,49000],"content":"NodesBeforeSelf()","needQuote":true,"nodes":[{"content":"NodesBeforeSelf()","pos":[0,17]}]},{"pos":[49125,49140],"content":"NodesBeforeSelf","needQuote":true,"nodes":[{"content":"NodesBeforeSelf","pos":[0,15]}]},{"pos":[49203,49204],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[49231,49232],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[49317,49332],"content":"NodesBeforeSelf","needQuote":true,"nodes":[{"content":"NodesBeforeSelf","pos":[0,15]}]},{"pos":[49395,49396],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[49423,49424],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[49653,49672],"content":"ReadFrom(XmlReader)","needQuote":true,"nodes":[{"content":"ReadFrom(XmlReader)","pos":[0,19]}]},{"pos":[49825,49833],"content":"ReadFrom","needQuote":true,"nodes":[{"content":"ReadFrom","pos":[0,8]}]},{"pos":[49889,49890],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[49947,49956],"content":"XmlReader","needQuote":true,"nodes":[{"content":"XmlReader","pos":[0,9]}]},{"pos":[50023,50024],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[50124,50132],"content":"ReadFrom","needQuote":true,"nodes":[{"content":"ReadFrom","pos":[0,8]}]},{"pos":[50188,50189],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[50246,50255],"content":"XmlReader","needQuote":true,"nodes":[{"content":"XmlReader","pos":[0,9]}]},{"pos":[50322,50323],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[50546,50554],"content":"Remove()","needQuote":true,"nodes":[{"content":"Remove()","pos":[0,8]}]},{"pos":[50661,50667],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[50721,50722],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[50749,50750],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[50826,50832],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[50886,50887],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[50914,50915],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51122,51141],"content":"ReplaceWith(Object)","needQuote":true,"nodes":[{"content":"ReplaceWith(Object)","pos":[0,19]}]},{"pos":[51286,51297],"content":"ReplaceWith","needQuote":true,"nodes":[{"content":"ReplaceWith","pos":[0,11]}]},{"pos":[51356,51357],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51407,51413],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[51473,51474],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51570,51581],"content":"ReplaceWith","needQuote":true,"nodes":[{"content":"ReplaceWith","pos":[0,11]}]},{"pos":[51640,51641],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51691,51697],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[51757,51758],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51998,52019],"content":"ReplaceWith(Object[])","needQuote":true,"nodes":[{"content":"ReplaceWith(Object[])","pos":[0,21]}]},{"pos":[52267,52278],"content":"ReplaceWith","needQuote":true,"nodes":[{"content":"ReplaceWith","pos":[0,11]}]},{"pos":[52337,52338],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[52388,52394],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[52455,52457]},{"pos":[52488,52489],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[52587,52598],"content":"ReplaceWith","needQuote":true,"nodes":[{"content":"ReplaceWith","pos":[0,11]}]},{"pos":[52657,52658],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[52708,52714],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[52774,52776],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[52804,52805],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53077,53087],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[53198,53206],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[53262,53263],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[53290,53291],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53369,53377],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[53433,53434],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[53461,53462],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53685,53706],"content":"ToString(SaveOptions)","needQuote":true,"nodes":[{"content":"ToString(SaveOptions)","pos":[0,21]}]},{"pos":[53873,53881],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[53937,53938],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[54002,54013],"content":"SaveOptions","needQuote":true,"nodes":[{"content":"SaveOptions","pos":[0,11]}]},{"pos":[54066,54067],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[54174,54182],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[54238,54239],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[54303,54314],"content":"SaveOptions","needQuote":true,"nodes":[{"content":"SaveOptions","pos":[0,11]}]},{"pos":[54367,54368],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[54622,54640],"content":"WriteTo(XmlWriter)","needQuote":true,"nodes":[{"content":"WriteTo(XmlWriter)","pos":[0,18]}]},{"pos":[54791,54798],"content":"WriteTo","needQuote":true,"nodes":[{"content":"WriteTo","pos":[0,7]}]},{"pos":[54853,54854],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[54911,54920],"content":"XmlWriter","needQuote":true,"nodes":[{"content":"XmlWriter","pos":[0,9]}]},{"pos":[54987,54988],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55087,55094],"content":"WriteTo","needQuote":true,"nodes":[{"content":"WriteTo","pos":[0,7]}]},{"pos":[55149,55150],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[55207,55216],"content":"XmlWriter","needQuote":true,"nodes":[{"content":"XmlWriter","pos":[0,9]}]},{"pos":[55283,55284],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55510,55517],"content":"BaseUri","needQuote":true,"nodes":[{"content":"BaseUri","pos":[0,7]}]},{"pos":[55743,55751],"content":"Document","needQuote":true,"nodes":[{"content":"Document","pos":[0,8]}]},{"pos":[55980,55988],"content":"NodeType","needQuote":true,"nodes":[{"content":"NodeType","pos":[0,8]}]},{"pos":[56215,56221],"content":"Parent","needQuote":true,"nodes":[{"content":"Parent","pos":[0,6]}]},{"pos":[56443,56450],"content":"Changed","needQuote":true,"nodes":[{"content":"Changed","pos":[0,7]}]},{"pos":[56676,56684],"content":"Changing","needQuote":true,"nodes":[{"content":"Changing","pos":[0,8]}]},{"pos":[56932,56953],"content":"AddAnnotation(Object)","needQuote":true,"nodes":[{"content":"AddAnnotation(Object)","pos":[0,21]}]},{"pos":[57106,57119],"content":"AddAnnotation","needQuote":true,"nodes":[{"content":"AddAnnotation","pos":[0,13]}]},{"pos":[57182,57183],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57233,57239],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[57299,57300],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57400,57413],"content":"AddAnnotation","needQuote":true,"nodes":[{"content":"AddAnnotation","pos":[0,13]}]},{"pos":[57476,57477],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57527,57533],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[57593,57594],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57841,57857],"content":"Annotation(Type)","needQuote":true,"nodes":[{"content":"Annotation(Type)","pos":[0,16]}]},{"pos":[58000,58010],"content":"Annotation","needQuote":true,"nodes":[{"content":"Annotation","pos":[0,10]}]},{"pos":[58070,58071],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58119,58123],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[58181,58182],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58277,58287],"content":"Annotation","needQuote":true,"nodes":[{"content":"Annotation","pos":[0,10]}]},{"pos":[58347,58348],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58396,58400],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[58458,58459],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58687,58702],"content":"Annotation<T>()","needQuote":true,"nodes":[{"content":"Annotation&lt;T&gt;()","pos":[0,15],"source":"Annotation<T>()"}]},{"pos":[58915,58928],"content":"Annotation<T>","needQuote":true,"nodes":[{"content":"Annotation&lt;T&gt;","pos":[0,13],"source":"Annotation<T>"}]},{"pos":[58991,58992],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59019,59020],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59105,59121],"content":"Annotation(Of T)","needQuote":true,"nodes":[{"content":"Annotation(Of T)","pos":[0,16]}]},{"pos":[59187,59188],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59215,59216],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59489,59506],"content":"Annotations(Type)","needQuote":true,"nodes":[{"content":"Annotations(Type)","pos":[0,17]}]},{"pos":[59651,59662],"content":"Annotations","needQuote":true,"nodes":[{"content":"Annotations","pos":[0,11]}]},{"pos":[59723,59724],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59772,59776],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[59834,59835],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59931,59942],"content":"Annotations","needQuote":true,"nodes":[{"content":"Annotations","pos":[0,11]}]},{"pos":[60003,60004],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60052,60056],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[60114,60115],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60346,60362],"content":"Annotations<T>()","needQuote":true,"nodes":[{"content":"Annotations&lt;T&gt;()","pos":[0,16],"source":"Annotations<T>()"}]},{"pos":[60579,60593],"content":"Annotations<T>","needQuote":true,"nodes":[{"content":"Annotations&lt;T&gt;","pos":[0,14],"source":"Annotations<T>"}]},{"pos":[60657,60658],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60685,60686],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60772,60789],"content":"Annotations(Of T)","needQuote":true,"nodes":[{"content":"Annotations(Of T)","pos":[0,17]}]},{"pos":[60856,60857],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60884,60885],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61167,61190],"content":"RemoveAnnotations(Type)","needQuote":true,"nodes":[{"content":"RemoveAnnotations(Type)","pos":[0,23]}]},{"pos":[61347,61364],"content":"RemoveAnnotations","needQuote":true,"nodes":[{"content":"RemoveAnnotations","pos":[0,17]}]},{"pos":[61431,61432],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61480,61484],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[61542,61543],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61645,61662],"content":"RemoveAnnotations","needQuote":true,"nodes":[{"content":"RemoveAnnotations","pos":[0,17]}]},{"pos":[61729,61730],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61778,61782],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[61840,61841],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62090,62112],"content":"RemoveAnnotations<T>()","needQuote":true,"nodes":[{"content":"RemoveAnnotations&lt;T&gt;()","pos":[0,22],"source":"RemoveAnnotations<T>()"}]},{"pos":[62353,62373],"content":"RemoveAnnotations<T>","needQuote":true,"nodes":[{"content":"RemoveAnnotations&lt;T&gt;","pos":[0,20],"source":"RemoveAnnotations<T>"}]},{"pos":[62443,62444],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62471,62472],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62564,62587],"content":"RemoveAnnotations(Of T)","needQuote":true,"nodes":[{"content":"RemoveAnnotations(Of T)","pos":[0,23]}]},{"pos":[62660,62661],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62688,62689],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62908,62914],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[63010,63018],"content":"Object[]","needQuote":true,"nodes":[{"content":"Object[]","pos":[0,8]}]},{"pos":[63146,63152],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[63213,63215]},{"pos":[63280,63286],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[63346,63348],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[63496,63505],"content":"XmlWriter","needQuote":true,"nodes":[{"content":"XmlWriter","pos":[0,9]}]},{"pos":[63647,63657],"content":"System.Xml","needQuote":true,"nodes":[{"content":"System.Xml","pos":[0,10]}]},{"pos":[63903,63921],"content":"IEnumerable<XNode>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;XNode&gt;","pos":[0,18],"source":"IEnumerable<XNode>"}]},{"pos":[64184,64195],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[64280,64281],"content":"<","needQuote":true,"nodes":[]},{"pos":[64339,64344],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"pos":[64484,64495],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[64581,64584]},{"pos":[64649,64654],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"pos":[64701,64702],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64948,64962],"content":"IEnumerable<T>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;T&gt;","pos":[0,14],"source":"IEnumerable<T>"}]},{"pos":[65181,65192],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[65256,65257],"content":"<","needQuote":true,"nodes":[]},{"pos":[65284,65285],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[65405,65416],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[65481,65484]},{"pos":[65518,65519],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[65546,65547],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65750,65776],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]},{"pos":[66073,66094],"content":"IEnumerable<XElement>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;XElement&gt;","pos":[0,21],"source":"IEnumerable<XElement>"}]},{"pos":[66366,66377],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[66462,66463],"content":"<","needQuote":true,"nodes":[]},{"pos":[66524,66532],"content":"XElement","needQuote":true,"nodes":[{"content":"XElement","pos":[0,8]}]},{"pos":[66675,66686],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[66772,66775]},{"pos":[66843,66851],"content":"XElement","needQuote":true,"nodes":[{"content":"XElement","pos":[0,8]}]},{"pos":[66901,66902],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67164,67169],"content":"XName","needQuote":true,"nodes":[{"content":"XName","pos":[0,5]}]},{"pos":[67349,67357],"content":"XElement","needQuote":true,"nodes":[{"content":"XElement","pos":[0,8]}]},{"pos":[67545,67570],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]}],"content":"items:\n- uid: System.Xml.Linq.XContainer\n  commentId: T:System.Xml.Linq.XContainer\n  id: XContainer\n  parent: System.Xml.Linq\n  children:\n  - System.Xml.Linq.XContainer.Add(System.Object)\n  - System.Xml.Linq.XContainer.Add(System.Object[])\n  - System.Xml.Linq.XContainer.AddFirst(System.Object)\n  - System.Xml.Linq.XContainer.AddFirst(System.Object[])\n  - System.Xml.Linq.XContainer.CreateWriter\n  - System.Xml.Linq.XContainer.DescendantNodes\n  - System.Xml.Linq.XContainer.Descendants\n  - System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)\n  - System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)\n  - System.Xml.Linq.XContainer.Elements\n  - System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)\n  - System.Xml.Linq.XContainer.FirstNode\n  - System.Xml.Linq.XContainer.LastNode\n  - System.Xml.Linq.XContainer.Nodes\n  - System.Xml.Linq.XContainer.RemoveNodes\n  - System.Xml.Linq.XContainer.ReplaceNodes(System.Object)\n  - System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])\n  langs:\n  - csharp\n  - vb\n  name: XContainer\n  fullName: System.Xml.Linq.XContainer\n  type: Class\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: XContainer\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 132\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Represents a node that can contain other nodes.</p>\\n\"\n  syntax:\n    content: 'public abstract class XContainer : XNode'\n    content.vb: >-\n      Public MustInherit Class XContainer\n          Inherits XNode\n  inheritance:\n  - System.Object\n  - System.Xml.Linq.XObject\n  - System.Xml.Linq.XNode\n  inheritedMembers:\n  - System.Xml.Linq.XNode.DocumentOrderComparer\n  - System.Xml.Linq.XNode.EqualityComparer\n  - System.Xml.Linq.XNode.NextNode\n  - System.Xml.Linq.XNode.PreviousNode\n  - System.Xml.Linq.XNode.AddAfterSelf(System.Object)\n  - System.Xml.Linq.XNode.AddAfterSelf(System.Object[])\n  - System.Xml.Linq.XNode.AddBeforeSelf(System.Object)\n  - System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])\n  - System.Xml.Linq.XNode.Ancestors\n  - System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)\n  - System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)\n  - System.Xml.Linq.XNode.CreateReader\n  - System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)\n  - System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)\n  - System.Xml.Linq.XNode.ElementsAfterSelf\n  - System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)\n  - System.Xml.Linq.XNode.ElementsBeforeSelf\n  - System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)\n  - System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)\n  - System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)\n  - System.Xml.Linq.XNode.NodesAfterSelf\n  - System.Xml.Linq.XNode.NodesBeforeSelf\n  - System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)\n  - System.Xml.Linq.XNode.Remove\n  - System.Xml.Linq.XNode.ReplaceWith(System.Object)\n  - System.Xml.Linq.XNode.ReplaceWith(System.Object[])\n  - System.Xml.Linq.XNode.ToString\n  - System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)\n  - System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)\n  - System.Xml.Linq.XObject.BaseUri\n  - System.Xml.Linq.XObject.Document\n  - System.Xml.Linq.XObject.NodeType\n  - System.Xml.Linq.XObject.Parent\n  - System.Xml.Linq.XObject.Changed\n  - System.Xml.Linq.XObject.Changing\n  - System.Xml.Linq.XObject.AddAnnotation(System.Object)\n  - System.Xml.Linq.XObject.Annotation(System.Type)\n  - System.Xml.Linq.XObject.Annotation``1\n  - System.Xml.Linq.XObject.Annotations(System.Type)\n  - System.Xml.Linq.XObject.Annotations``1\n  - System.Xml.Linq.XObject.RemoveAnnotations(System.Type)\n  - System.Xml.Linq.XObject.RemoveAnnotations``1\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: XContainer\n- uid: System.Xml.Linq.XContainer.FirstNode\n  commentId: P:System.Xml.Linq.XContainer.FirstNode\n  id: FirstNode\n  parent: System.Xml.Linq.XContainer\n  langs:\n  - csharp\n  - vb\n  name: FirstNode\n  fullName: System.Xml.Linq.XContainer.FirstNode\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: FirstNode\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 135\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Get the first child node of this node.</p>\\n\"\n  syntax:\n    content: public XNode FirstNode { get; }\n    content.vb: Public ReadOnly Property FirstNode As XNode\n    parameters: []\n    return:\n      type: System.Xml.Linq.XNode\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XNode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the first child node of the <xref href=\\\"System.Xml.Linq.XContainer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Xml.Linq.XContainer.LastNode\n    commentId: P:System.Xml.Linq.XContainer.LastNode\n  - type: System.Xml.Linq.XContainer.Nodes\n    commentId: M:System.Xml.Linq.XContainer.Nodes\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: XContainer.FirstNode\n- uid: System.Xml.Linq.XContainer.LastNode\n  commentId: P:System.Xml.Linq.XContainer.LastNode\n  id: LastNode\n  parent: System.Xml.Linq.XContainer\n  langs:\n  - csharp\n  - vb\n  name: LastNode\n  fullName: System.Xml.Linq.XContainer.LastNode\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: LastNode\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 136\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Get the last child node of this node.</p>\\n\"\n  syntax:\n    content: public XNode LastNode { get; }\n    content.vb: Public ReadOnly Property LastNode As XNode\n    parameters: []\n    return:\n      type: System.Xml.Linq.XNode\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XNode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the last child node of the <xref href=\\\"System.Xml.Linq.XContainer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Xml.Linq.XContainer.FirstNode\n    commentId: P:System.Xml.Linq.XContainer.FirstNode\n  - type: System.Xml.Linq.XContainer.Nodes\n    commentId: M:System.Xml.Linq.XContainer.Nodes\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: XContainer.LastNode\n- uid: System.Xml.Linq.XContainer.Add(System.Object)\n  commentId: M:System.Xml.Linq.XContainer.Add(System.Object)\n  id: Add(System.Object)\n  parent: System.Xml.Linq.XContainer\n  langs:\n  - csharp\n  - vb\n  name: Add(Object)\n  fullName: System.Xml.Linq.XContainer.Add(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Add\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 137\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Adds the specified content as children of this <xref href=\\\"System.Xml.Linq.XContainer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void Add(object content)\n    content.vb: Public Sub Add(content As Object)\n    parameters:\n    - id: content\n      type: System.Object\n      description: \"\\n<p>A content object containing simple content or a collection of content objects to be added.</p>\\n\"\n  seealso:\n  - type: System.Xml.Linq.XContainer.AddFirst(System.Object)\n    commentId: M:System.Xml.Linq.XContainer.AddFirst(System.Object)\n  - type: System.Xml.Linq.XContainer.RemoveNodes\n    commentId: M:System.Xml.Linq.XContainer.RemoveNodes\n  - type: System.Xml.Linq.XContainer.ReplaceNodes(System.Object)\n    commentId: M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XContainer.Add(Object)\n- uid: System.Xml.Linq.XContainer.Add(System.Object[])\n  commentId: M:System.Xml.Linq.XContainer.Add(System.Object[])\n  id: Add(System.Object[])\n  parent: System.Xml.Linq.XContainer\n  langs:\n  - csharp\n  - vb\n  name: Add(Object[])\n  fullName: System.Xml.Linq.XContainer.Add(System.Object[])\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Add\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 138\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Adds the specified content as children of this <xref href=\\\"System.Xml.Linq.XContainer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void Add(params object[] content)\n    content.vb: Public Sub Add(ParamArray content As Object())\n    parameters:\n    - id: content\n      type: System.Object[]\n      description: \"\\n<p>A parameter list of content objects.</p>\\n\"\n  seealso:\n  - type: System.Xml.Linq.XContainer.AddFirst(System.Object)\n    commentId: M:System.Xml.Linq.XContainer.AddFirst(System.Object)\n  - type: System.Xml.Linq.XContainer.RemoveNodes\n    commentId: M:System.Xml.Linq.XContainer.RemoveNodes\n  - type: System.Xml.Linq.XContainer.ReplaceNodes(System.Object)\n    commentId: M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Xml.Linq.XContainer.Add(System.Object())\n  name.vb: Add(Object())\n  nameWithType: XContainer.Add(Object[])\n  nameWithType.vb: XContainer.Add(Object())\n- uid: System.Xml.Linq.XContainer.AddFirst(System.Object)\n  commentId: M:System.Xml.Linq.XContainer.AddFirst(System.Object)\n  id: AddFirst(System.Object)\n  parent: System.Xml.Linq.XContainer\n  langs:\n  - csharp\n  - vb\n  name: AddFirst(Object)\n  fullName: System.Xml.Linq.XContainer.AddFirst(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AddFirst\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 139\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Adds the specified content as the first children of this document or element.</p>\\n\"\n  syntax:\n    content: public void AddFirst(object content)\n    content.vb: Public Sub AddFirst(content As Object)\n    parameters:\n    - id: content\n      type: System.Object\n      description: \"\\n<p>A content object containing simple content or a collection of content objects to be added.</p>\\n\"\n  seealso:\n  - type: System.Xml.Linq.XContainer.Add(System.Object)\n    commentId: M:System.Xml.Linq.XContainer.Add(System.Object)\n  - type: System.Xml.Linq.XContainer.RemoveNodes\n    commentId: M:System.Xml.Linq.XContainer.RemoveNodes\n  - type: System.Xml.Linq.XContainer.ReplaceNodes(System.Object)\n    commentId: M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XContainer.AddFirst(Object)\n- uid: System.Xml.Linq.XContainer.AddFirst(System.Object[])\n  commentId: M:System.Xml.Linq.XContainer.AddFirst(System.Object[])\n  id: AddFirst(System.Object[])\n  parent: System.Xml.Linq.XContainer\n  langs:\n  - csharp\n  - vb\n  name: AddFirst(Object[])\n  fullName: System.Xml.Linq.XContainer.AddFirst(System.Object[])\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AddFirst\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 140\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Adds the specified content as the first children of this document or element.</p>\\n\"\n  syntax:\n    content: public void AddFirst(params object[] content)\n    content.vb: Public Sub AddFirst(ParamArray content As Object())\n    parameters:\n    - id: content\n      type: System.Object[]\n      description: \"\\n<p>A parameter list of content objects.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The parent is <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.Xml.Linq.XContainer.Add(System.Object)\n    commentId: M:System.Xml.Linq.XContainer.Add(System.Object)\n  - type: System.Xml.Linq.XContainer.RemoveNodes\n    commentId: M:System.Xml.Linq.XContainer.RemoveNodes\n  - type: System.Xml.Linq.XContainer.ReplaceNodes(System.Object)\n    commentId: M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Xml.Linq.XContainer.AddFirst(System.Object())\n  name.vb: AddFirst(Object())\n  nameWithType: XContainer.AddFirst(Object[])\n  nameWithType.vb: XContainer.AddFirst(Object())\n- uid: System.Xml.Linq.XContainer.CreateWriter\n  commentId: M:System.Xml.Linq.XContainer.CreateWriter\n  id: CreateWriter\n  parent: System.Xml.Linq.XContainer\n  langs:\n  - csharp\n  - vb\n  name: CreateWriter()\n  fullName: System.Xml.Linq.XContainer.CreateWriter()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreateWriter\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 141\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Creates an <xref href=\\\"System.Xml.XmlWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that can be used to add nodes to the <xref href=\\\"System.Xml.Linq.XContainer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public XmlWriter CreateWriter()\n    content.vb: Public Function CreateWriter As XmlWriter\n    return:\n      type: System.Xml.XmlWriter\n      description: \"\\n<p>An <xref href=\\\"System.Xml.XmlWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is ready to have content written to it.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XContainer.CreateWriter()\n- uid: System.Xml.Linq.XContainer.DescendantNodes\n  commentId: M:System.Xml.Linq.XContainer.DescendantNodes\n  id: DescendantNodes\n  parent: System.Xml.Linq.XContainer\n  langs:\n  - csharp\n  - vb\n  name: DescendantNodes()\n  fullName: System.Xml.Linq.XContainer.DescendantNodes()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DescendantNodes\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 142\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Returns a collection of the descendant nodes for this document or element, in document order.</p>\\n\"\n  syntax:\n    content: public IEnumerable<XNode> DescendantNodes()\n    content.vb: Public Function DescendantNodes As IEnumerable(Of XNode)\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XNode}\n      description: \"\\n<p>An <xref href=\\\"System.Collections.Generic.IEnumerable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.Xml.Linq.XNode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the descendant nodes of the <xref href=\\\"System.Xml.Linq.XContainer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, in document order.</p>\\n\"\n  seealso:\n  - type: System.Xml.Linq.XContainer.Descendants\n    commentId: M:System.Xml.Linq.XContainer.Descendants\n  - type: System.Xml.Linq.XContainer.Elements\n    commentId: M:System.Xml.Linq.XContainer.Elements\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XContainer.DescendantNodes()\n- uid: System.Xml.Linq.XContainer.Descendants\n  commentId: M:System.Xml.Linq.XContainer.Descendants\n  id: Descendants\n  parent: System.Xml.Linq.XContainer\n  langs:\n  - csharp\n  - vb\n  name: Descendants()\n  fullName: System.Xml.Linq.XContainer.Descendants()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Descendants\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 143\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Returns a collection of the descendant elements for this document or element, in document order.</p>\\n\"\n  syntax:\n    content: public IEnumerable<XElement> Descendants()\n    content.vb: Public Function Descendants As IEnumerable(Of XElement)\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}\n      description: \"\\n<p>An <xref href=\\\"System.Collections.Generic.IEnumerable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the descendant elements of the <xref href=\\\"System.Xml.Linq.XContainer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Xml.Linq.XElement.DescendantsAndSelf\n    commentId: M:System.Xml.Linq.XElement.DescendantsAndSelf\n  - type: System.Xml.Linq.XContainer.DescendantNodes\n    commentId: M:System.Xml.Linq.XContainer.DescendantNodes\n  - type: System.Xml.Linq.XContainer.Elements\n    commentId: M:System.Xml.Linq.XContainer.Elements\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XContainer.Descendants()\n- uid: System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)\n  commentId: M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)\n  id: Descendants(System.Xml.Linq.XName)\n  parent: System.Xml.Linq.XContainer\n  langs:\n  - csharp\n  - vb\n  name: Descendants(XName)\n  fullName: System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Descendants\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 144\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Returns a filtered collection of the descendant elements for this document or element, in document order. Only elements that have a matching <xref href=\\\"System.Xml.Linq.XName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> are included in the collection.</p>\\n\"\n  syntax:\n    content: public IEnumerable<XElement> Descendants(XName name)\n    content.vb: Public Function Descendants(name As XName) As IEnumerable(Of XElement)\n    parameters:\n    - id: name\n      type: System.Xml.Linq.XName\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Linq.XName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to match.</p>\\n\"\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}\n      description: \"\\n<p>An <xref href=\\\"System.Collections.Generic.IEnumerable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the descendant elements of the <xref href=\\\"System.Xml.Linq.XContainer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that match the specified <xref href=\\\"System.Xml.Linq.XName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Xml.Linq.XContainer.DescendantNodes\n    commentId: M:System.Xml.Linq.XContainer.DescendantNodes\n  - type: System.Xml.Linq.XContainer.Elements\n    commentId: M:System.Xml.Linq.XContainer.Elements\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XContainer.Descendants(XName)\n- uid: System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)\n  commentId: M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)\n  id: Element(System.Xml.Linq.XName)\n  parent: System.Xml.Linq.XContainer\n  langs:\n  - csharp\n  - vb\n  name: Element(XName)\n  fullName: System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Element\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 145\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Gets the first (in document order) child element with the specified <xref href=\\\"System.Xml.Linq.XName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public XElement Element(XName name)\n    content.vb: Public Function Element(name As XName) As XElement\n    parameters:\n    - id: name\n      type: System.Xml.Linq.XName\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Linq.XName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to match.</p>\\n\"\n    return:\n      type: System.Xml.Linq.XElement\n      description: \"\\n<p>A <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that matches the specified <xref href=\\\"System.Xml.Linq.XName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, or <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.Xml.Linq.XContainer.Elements\n    commentId: M:System.Xml.Linq.XContainer.Elements\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XContainer.Element(XName)\n- uid: System.Xml.Linq.XContainer.Elements\n  commentId: M:System.Xml.Linq.XContainer.Elements\n  id: Elements\n  parent: System.Xml.Linq.XContainer\n  langs:\n  - csharp\n  - vb\n  name: Elements()\n  fullName: System.Xml.Linq.XContainer.Elements()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Elements\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 146\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Returns a collection of the child elements of this element or document, in document order.</p>\\n\"\n  syntax:\n    content: public IEnumerable<XElement> Elements()\n    content.vb: Public Function Elements As IEnumerable(Of XElement)\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}\n      description: \"\\n<p>An <xref href=\\\"System.Collections.Generic.IEnumerable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the child elements of this <xref href=\\\"System.Xml.Linq.XContainer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, in document order.</p>\\n\"\n  seealso:\n  - type: System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)\n    commentId: M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)\n  - type: System.Xml.Linq.XContainer.Descendants\n    commentId: M:System.Xml.Linq.XContainer.Descendants\n  - type: System.Xml.Linq.XContainer.DescendantNodes\n    commentId: M:System.Xml.Linq.XContainer.DescendantNodes\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XContainer.Elements()\n- uid: System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)\n  commentId: M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)\n  id: Elements(System.Xml.Linq.XName)\n  parent: System.Xml.Linq.XContainer\n  langs:\n  - csharp\n  - vb\n  name: Elements(XName)\n  fullName: System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Elements\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 147\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Returns a filtered collection of the child elements of this element or document, in document order. Only elements that have a matching <xref href=\\\"System.Xml.Linq.XName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> are included in the collection.</p>\\n\"\n  syntax:\n    content: public IEnumerable<XElement> Elements(XName name)\n    content.vb: Public Function Elements(name As XName) As IEnumerable(Of XElement)\n    parameters:\n    - id: name\n      type: System.Xml.Linq.XName\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Linq.XName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to match.</p>\\n\"\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}\n      description: \"\\n<p>An <xref href=\\\"System.Collections.Generic.IEnumerable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the children of the <xref href=\\\"System.Xml.Linq.XContainer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that have a matching <xref href=\\\"System.Xml.Linq.XName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, in document order.</p>\\n\"\n  seealso:\n  - type: System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)\n    commentId: M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)\n  - type: System.Xml.Linq.XContainer.Descendants\n    commentId: M:System.Xml.Linq.XContainer.Descendants\n  - type: System.Xml.Linq.XContainer.DescendantNodes\n    commentId: M:System.Xml.Linq.XContainer.DescendantNodes\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XContainer.Elements(XName)\n- uid: System.Xml.Linq.XContainer.Nodes\n  commentId: M:System.Xml.Linq.XContainer.Nodes\n  id: Nodes\n  parent: System.Xml.Linq.XContainer\n  langs:\n  - csharp\n  - vb\n  name: Nodes()\n  fullName: System.Xml.Linq.XContainer.Nodes()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Nodes\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 148\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Returns a collection of the child nodes of this element or document, in document order.</p>\\n\"\n  syntax:\n    content: public IEnumerable<XNode> Nodes()\n    content.vb: Public Function Nodes As IEnumerable(Of XNode)\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XNode}\n      description: \"\\n<p>An <xref href=\\\"System.Collections.Generic.IEnumerable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.Xml.Linq.XNode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the contents of this <xref href=\\\"System.Xml.Linq.XContainer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, in document order.</p>\\n\"\n  seealso:\n  - type: System.Xml.Linq.XElement.Attributes\n    commentId: M:System.Xml.Linq.XElement.Attributes\n  - type: System.Xml.Linq.XContainer.Descendants\n    commentId: M:System.Xml.Linq.XContainer.Descendants\n  - type: System.Xml.Linq.XContainer.DescendantNodes\n    commentId: M:System.Xml.Linq.XContainer.DescendantNodes\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XContainer.Nodes()\n- uid: System.Xml.Linq.XContainer.RemoveNodes\n  commentId: M:System.Xml.Linq.XContainer.RemoveNodes\n  id: RemoveNodes\n  parent: System.Xml.Linq.XContainer\n  langs:\n  - csharp\n  - vb\n  name: RemoveNodes()\n  fullName: System.Xml.Linq.XContainer.RemoveNodes()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveNodes\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 149\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Removes the child nodes from this document or element.</p>\\n\"\n  syntax:\n    content: public void RemoveNodes()\n    content.vb: Public Sub RemoveNodes\n  seealso:\n  - type: System.Xml.Linq.XContainer.Add(System.Object)\n    commentId: M:System.Xml.Linq.XContainer.Add(System.Object)\n  - type: System.Xml.Linq.XContainer.ReplaceNodes(System.Object)\n    commentId: M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XContainer.RemoveNodes()\n- uid: System.Xml.Linq.XContainer.ReplaceNodes(System.Object)\n  commentId: M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)\n  id: ReplaceNodes(System.Object)\n  parent: System.Xml.Linq.XContainer\n  langs:\n  - csharp\n  - vb\n  name: ReplaceNodes(Object)\n  fullName: System.Xml.Linq.XContainer.ReplaceNodes(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReplaceNodes\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 150\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Replaces the children nodes of this document or element with the specified content.</p>\\n\"\n  syntax:\n    content: public void ReplaceNodes(object content)\n    content.vb: Public Sub ReplaceNodes(content As Object)\n    parameters:\n    - id: content\n      type: System.Object\n      description: \"\\n<p>A content object containing simple content or a collection of content objects that replace the children nodes.</p>\\n\"\n  seealso:\n  - type: System.Xml.Linq.XContainer.Add(System.Object)\n    commentId: M:System.Xml.Linq.XContainer.Add(System.Object)\n  - type: System.Xml.Linq.XContainer.RemoveNodes\n    commentId: M:System.Xml.Linq.XContainer.RemoveNodes\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XContainer.ReplaceNodes(Object)\n- uid: System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])\n  commentId: M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])\n  id: ReplaceNodes(System.Object[])\n  parent: System.Xml.Linq.XContainer\n  langs:\n  - csharp\n  - vb\n  name: ReplaceNodes(Object[])\n  fullName: System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReplaceNodes\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 151\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Replaces the children nodes of this document or element with the specified content.</p>\\n\"\n  syntax:\n    content: public void ReplaceNodes(params object[] content)\n    content.vb: Public Sub ReplaceNodes(ParamArray content As Object())\n    parameters:\n    - id: content\n      type: System.Object[]\n      description: \"\\n<p>A parameter list of content objects.</p>\\n\"\n  seealso:\n  - type: System.Xml.Linq.XContainer.Add(System.Object)\n    commentId: M:System.Xml.Linq.XContainer.Add(System.Object)\n  - type: System.Xml.Linq.XContainer.RemoveNodes\n    commentId: M:System.Xml.Linq.XContainer.RemoveNodes\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Xml.Linq.XContainer.ReplaceNodes(System.Object())\n  name.vb: ReplaceNodes(Object())\n  nameWithType: XContainer.ReplaceNodes(Object[])\n  nameWithType.vb: XContainer.ReplaceNodes(Object())\nreferences:\n- uid: System.Xml.Linq\n  isExternal: false\n  name: System.Xml.Linq\n  fullName: System.Xml.Linq\n  commentId: N:System.Xml.Linq\n  nameWithType: System.Xml.Linq\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Xml.Linq.XObject\n  parent: System.Xml.Linq\n  isExternal: false\n  name: XObject\n  fullName: System.Xml.Linq.XObject\n  commentId: T:System.Xml.Linq.XObject\n  nameWithType: XObject\n- uid: System.Xml.Linq.XNode\n  parent: System.Xml.Linq\n  isExternal: false\n  name: XNode\n  fullName: System.Xml.Linq.XNode\n  commentId: T:System.Xml.Linq.XNode\n  nameWithType: XNode\n- uid: System.Xml.Linq.XNode.DocumentOrderComparer\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: DocumentOrderComparer\n  fullName: System.Xml.Linq.XNode.DocumentOrderComparer\n  commentId: P:System.Xml.Linq.XNode.DocumentOrderComparer\n  nameWithType: XNode.DocumentOrderComparer\n- uid: System.Xml.Linq.XNode.EqualityComparer\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: EqualityComparer\n  fullName: System.Xml.Linq.XNode.EqualityComparer\n  commentId: P:System.Xml.Linq.XNode.EqualityComparer\n  nameWithType: XNode.EqualityComparer\n- uid: System.Xml.Linq.XNode.NextNode\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: NextNode\n  fullName: System.Xml.Linq.XNode.NextNode\n  commentId: P:System.Xml.Linq.XNode.NextNode\n  nameWithType: XNode.NextNode\n- uid: System.Xml.Linq.XNode.PreviousNode\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: PreviousNode\n  fullName: System.Xml.Linq.XNode.PreviousNode\n  commentId: P:System.Xml.Linq.XNode.PreviousNode\n  nameWithType: XNode.PreviousNode\n- uid: System.Xml.Linq.XNode.AddAfterSelf(System.Object)\n  parent: System.Xml.Linq.XNode\n  isExternal: true\n  name: AddAfterSelf(Object)\n  fullName: System.Xml.Linq.XNode.AddAfterSelf(System.Object)\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.AddAfterSelf(System.Object)\n    name: AddAfterSelf\n    fullName: System.Xml.Linq.XNode.AddAfterSelf\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.AddAfterSelf(System.Object)\n    name: AddAfterSelf\n    fullName: System.Xml.Linq.XNode.AddAfterSelf\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.AddAfterSelf(System.Object)\n  nameWithType: XNode.AddAfterSelf(Object)\n- uid: System.Xml.Linq.XNode.AddAfterSelf(System.Object[])\n  parent: System.Xml.Linq.XNode\n  isExternal: true\n  name: AddAfterSelf(Object[])\n  fullName: System.Xml.Linq.XNode.AddAfterSelf(System.Object[])\n  fullname.vb: System.Xml.Linq.XNode.AddAfterSelf(System.Object())\n  name.vb: AddAfterSelf(Object())\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.AddAfterSelf(System.Object[])\n    name: AddAfterSelf\n    fullName: System.Xml.Linq.XNode.AddAfterSelf\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.AddAfterSelf(System.Object[])\n    name: AddAfterSelf\n    fullName: System.Xml.Linq.XNode.AddAfterSelf\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.AddAfterSelf(System.Object[])\n  nameWithType: XNode.AddAfterSelf(Object[])\n  nameWithType.vb: XNode.AddAfterSelf(Object())\n- uid: System.Xml.Linq.XNode.AddBeforeSelf(System.Object)\n  parent: System.Xml.Linq.XNode\n  isExternal: true\n  name: AddBeforeSelf(Object)\n  fullName: System.Xml.Linq.XNode.AddBeforeSelf(System.Object)\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.AddBeforeSelf(System.Object)\n    name: AddBeforeSelf\n    fullName: System.Xml.Linq.XNode.AddBeforeSelf\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.AddBeforeSelf(System.Object)\n    name: AddBeforeSelf\n    fullName: System.Xml.Linq.XNode.AddBeforeSelf\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object)\n  nameWithType: XNode.AddBeforeSelf(Object)\n- uid: System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])\n  parent: System.Xml.Linq.XNode\n  isExternal: true\n  name: AddBeforeSelf(Object[])\n  fullName: System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])\n  fullname.vb: System.Xml.Linq.XNode.AddBeforeSelf(System.Object())\n  name.vb: AddBeforeSelf(Object())\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])\n    name: AddBeforeSelf\n    fullName: System.Xml.Linq.XNode.AddBeforeSelf\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])\n    name: AddBeforeSelf\n    fullName: System.Xml.Linq.XNode.AddBeforeSelf\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])\n  nameWithType: XNode.AddBeforeSelf(Object[])\n  nameWithType.vb: XNode.AddBeforeSelf(Object())\n- uid: System.Xml.Linq.XNode.Ancestors\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: Ancestors()\n  fullName: System.Xml.Linq.XNode.Ancestors()\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.Ancestors\n    name: Ancestors\n    fullName: System.Xml.Linq.XNode.Ancestors\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.Ancestors\n    name: Ancestors\n    fullName: System.Xml.Linq.XNode.Ancestors\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.Ancestors\n  nameWithType: XNode.Ancestors()\n- uid: System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: Ancestors(XName)\n  fullName: System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)\n    name: Ancestors\n    fullName: System.Xml.Linq.XNode.Ancestors\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XName\n    name: XName\n    fullName: System.Xml.Linq.XName\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)\n    name: Ancestors\n    fullName: System.Xml.Linq.XNode.Ancestors\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XName\n    name: XName\n    fullName: System.Xml.Linq.XName\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)\n  nameWithType: XNode.Ancestors(XName)\n- uid: System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: CompareDocumentOrder(XNode, XNode)\n  fullName: System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode, System.Xml.Linq.XNode)\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)\n    name: CompareDocumentOrder\n    fullName: System.Xml.Linq.XNode.CompareDocumentOrder\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XNode\n    name: XNode\n    fullName: System.Xml.Linq.XNode\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.Linq.XNode\n    name: XNode\n    fullName: System.Xml.Linq.XNode\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)\n    name: CompareDocumentOrder\n    fullName: System.Xml.Linq.XNode.CompareDocumentOrder\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XNode\n    name: XNode\n    fullName: System.Xml.Linq.XNode\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.Linq.XNode\n    name: XNode\n    fullName: System.Xml.Linq.XNode\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)\n  nameWithType: XNode.CompareDocumentOrder(XNode, XNode)\n- uid: System.Xml.Linq.XNode.CreateReader\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: CreateReader()\n  fullName: System.Xml.Linq.XNode.CreateReader()\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.CreateReader\n    name: CreateReader\n    fullName: System.Xml.Linq.XNode.CreateReader\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.CreateReader\n    name: CreateReader\n    fullName: System.Xml.Linq.XNode.CreateReader\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.CreateReader\n  nameWithType: XNode.CreateReader()\n- uid: System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: CreateReader(ReaderOptions)\n  fullName: System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)\n    name: CreateReader\n    fullName: System.Xml.Linq.XNode.CreateReader\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.ReaderOptions\n    name: ReaderOptions\n    fullName: System.Xml.Linq.ReaderOptions\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)\n    name: CreateReader\n    fullName: System.Xml.Linq.XNode.CreateReader\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.ReaderOptions\n    name: ReaderOptions\n    fullName: System.Xml.Linq.ReaderOptions\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)\n  nameWithType: XNode.CreateReader(ReaderOptions)\n- uid: System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: DeepEquals(XNode, XNode)\n  fullName: System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode, System.Xml.Linq.XNode)\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)\n    name: DeepEquals\n    fullName: System.Xml.Linq.XNode.DeepEquals\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XNode\n    name: XNode\n    fullName: System.Xml.Linq.XNode\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.Linq.XNode\n    name: XNode\n    fullName: System.Xml.Linq.XNode\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)\n    name: DeepEquals\n    fullName: System.Xml.Linq.XNode.DeepEquals\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XNode\n    name: XNode\n    fullName: System.Xml.Linq.XNode\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.Linq.XNode\n    name: XNode\n    fullName: System.Xml.Linq.XNode\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)\n  nameWithType: XNode.DeepEquals(XNode, XNode)\n- uid: System.Xml.Linq.XNode.ElementsAfterSelf\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: ElementsAfterSelf()\n  fullName: System.Xml.Linq.XNode.ElementsAfterSelf()\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.ElementsAfterSelf\n    name: ElementsAfterSelf\n    fullName: System.Xml.Linq.XNode.ElementsAfterSelf\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.ElementsAfterSelf\n    name: ElementsAfterSelf\n    fullName: System.Xml.Linq.XNode.ElementsAfterSelf\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.ElementsAfterSelf\n  nameWithType: XNode.ElementsAfterSelf()\n- uid: System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: ElementsAfterSelf(XName)\n  fullName: System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)\n    name: ElementsAfterSelf\n    fullName: System.Xml.Linq.XNode.ElementsAfterSelf\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XName\n    name: XName\n    fullName: System.Xml.Linq.XName\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)\n    name: ElementsAfterSelf\n    fullName: System.Xml.Linq.XNode.ElementsAfterSelf\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XName\n    name: XName\n    fullName: System.Xml.Linq.XName\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)\n  nameWithType: XNode.ElementsAfterSelf(XName)\n- uid: System.Xml.Linq.XNode.ElementsBeforeSelf\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: ElementsBeforeSelf()\n  fullName: System.Xml.Linq.XNode.ElementsBeforeSelf()\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.ElementsBeforeSelf\n    name: ElementsBeforeSelf\n    fullName: System.Xml.Linq.XNode.ElementsBeforeSelf\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.ElementsBeforeSelf\n    name: ElementsBeforeSelf\n    fullName: System.Xml.Linq.XNode.ElementsBeforeSelf\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.ElementsBeforeSelf\n  nameWithType: XNode.ElementsBeforeSelf()\n- uid: System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: ElementsBeforeSelf(XName)\n  fullName: System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)\n    name: ElementsBeforeSelf\n    fullName: System.Xml.Linq.XNode.ElementsBeforeSelf\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XName\n    name: XName\n    fullName: System.Xml.Linq.XName\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)\n    name: ElementsBeforeSelf\n    fullName: System.Xml.Linq.XNode.ElementsBeforeSelf\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XName\n    name: XName\n    fullName: System.Xml.Linq.XName\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)\n  nameWithType: XNode.ElementsBeforeSelf(XName)\n- uid: System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: IsAfter(XNode)\n  fullName: System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)\n    name: IsAfter\n    fullName: System.Xml.Linq.XNode.IsAfter\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XNode\n    name: XNode\n    fullName: System.Xml.Linq.XNode\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)\n    name: IsAfter\n    fullName: System.Xml.Linq.XNode.IsAfter\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XNode\n    name: XNode\n    fullName: System.Xml.Linq.XNode\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)\n  nameWithType: XNode.IsAfter(XNode)\n- uid: System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: IsBefore(XNode)\n  fullName: System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)\n    name: IsBefore\n    fullName: System.Xml.Linq.XNode.IsBefore\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XNode\n    name: XNode\n    fullName: System.Xml.Linq.XNode\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)\n    name: IsBefore\n    fullName: System.Xml.Linq.XNode.IsBefore\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XNode\n    name: XNode\n    fullName: System.Xml.Linq.XNode\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)\n  nameWithType: XNode.IsBefore(XNode)\n- uid: System.Xml.Linq.XNode.NodesAfterSelf\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: NodesAfterSelf()\n  fullName: System.Xml.Linq.XNode.NodesAfterSelf()\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.NodesAfterSelf\n    name: NodesAfterSelf\n    fullName: System.Xml.Linq.XNode.NodesAfterSelf\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.NodesAfterSelf\n    name: NodesAfterSelf\n    fullName: System.Xml.Linq.XNode.NodesAfterSelf\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.NodesAfterSelf\n  nameWithType: XNode.NodesAfterSelf()\n- uid: System.Xml.Linq.XNode.NodesBeforeSelf\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: NodesBeforeSelf()\n  fullName: System.Xml.Linq.XNode.NodesBeforeSelf()\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.NodesBeforeSelf\n    name: NodesBeforeSelf\n    fullName: System.Xml.Linq.XNode.NodesBeforeSelf\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.NodesBeforeSelf\n    name: NodesBeforeSelf\n    fullName: System.Xml.Linq.XNode.NodesBeforeSelf\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.NodesBeforeSelf\n  nameWithType: XNode.NodesBeforeSelf()\n- uid: System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)\n  parent: System.Xml.Linq.XNode\n  isExternal: true\n  name: ReadFrom(XmlReader)\n  fullName: System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)\n    name: ReadFrom\n    fullName: System.Xml.Linq.XNode.ReadFrom\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlReader\n    name: XmlReader\n    fullName: System.Xml.XmlReader\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)\n    name: ReadFrom\n    fullName: System.Xml.Linq.XNode.ReadFrom\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlReader\n    name: XmlReader\n    fullName: System.Xml.XmlReader\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)\n  nameWithType: XNode.ReadFrom(XmlReader)\n- uid: System.Xml.Linq.XNode.Remove\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: Remove()\n  fullName: System.Xml.Linq.XNode.Remove()\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.Remove\n    name: Remove\n    fullName: System.Xml.Linq.XNode.Remove\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.Remove\n    name: Remove\n    fullName: System.Xml.Linq.XNode.Remove\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.Remove\n  nameWithType: XNode.Remove()\n- uid: System.Xml.Linq.XNode.ReplaceWith(System.Object)\n  parent: System.Xml.Linq.XNode\n  isExternal: true\n  name: ReplaceWith(Object)\n  fullName: System.Xml.Linq.XNode.ReplaceWith(System.Object)\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.ReplaceWith(System.Object)\n    name: ReplaceWith\n    fullName: System.Xml.Linq.XNode.ReplaceWith\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.ReplaceWith(System.Object)\n    name: ReplaceWith\n    fullName: System.Xml.Linq.XNode.ReplaceWith\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.ReplaceWith(System.Object)\n  nameWithType: XNode.ReplaceWith(Object)\n- uid: System.Xml.Linq.XNode.ReplaceWith(System.Object[])\n  parent: System.Xml.Linq.XNode\n  isExternal: true\n  name: ReplaceWith(Object[])\n  fullName: System.Xml.Linq.XNode.ReplaceWith(System.Object[])\n  fullname.vb: System.Xml.Linq.XNode.ReplaceWith(System.Object())\n  name.vb: ReplaceWith(Object())\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.ReplaceWith(System.Object[])\n    name: ReplaceWith\n    fullName: System.Xml.Linq.XNode.ReplaceWith\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.ReplaceWith(System.Object[])\n    name: ReplaceWith\n    fullName: System.Xml.Linq.XNode.ReplaceWith\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.ReplaceWith(System.Object[])\n  nameWithType: XNode.ReplaceWith(Object[])\n  nameWithType.vb: XNode.ReplaceWith(Object())\n- uid: System.Xml.Linq.XNode.ToString\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: ToString()\n  fullName: System.Xml.Linq.XNode.ToString()\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.ToString\n    name: ToString\n    fullName: System.Xml.Linq.XNode.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.ToString\n    name: ToString\n    fullName: System.Xml.Linq.XNode.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.ToString\n  nameWithType: XNode.ToString()\n- uid: System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: ToString(SaveOptions)\n  fullName: System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)\n    name: ToString\n    fullName: System.Xml.Linq.XNode.ToString\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.SaveOptions\n    name: SaveOptions\n    fullName: System.Xml.Linq.SaveOptions\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)\n    name: ToString\n    fullName: System.Xml.Linq.XNode.ToString\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.SaveOptions\n    name: SaveOptions\n    fullName: System.Xml.Linq.SaveOptions\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)\n  nameWithType: XNode.ToString(SaveOptions)\n- uid: System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)\n  parent: System.Xml.Linq.XNode\n  isExternal: true\n  name: WriteTo(XmlWriter)\n  fullName: System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)\n    name: WriteTo\n    fullName: System.Xml.Linq.XNode.WriteTo\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlWriter\n    name: XmlWriter\n    fullName: System.Xml.XmlWriter\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)\n    name: WriteTo\n    fullName: System.Xml.Linq.XNode.WriteTo\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlWriter\n    name: XmlWriter\n    fullName: System.Xml.XmlWriter\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)\n  nameWithType: XNode.WriteTo(XmlWriter)\n- uid: System.Xml.Linq.XObject.BaseUri\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: BaseUri\n  fullName: System.Xml.Linq.XObject.BaseUri\n  commentId: P:System.Xml.Linq.XObject.BaseUri\n  nameWithType: XObject.BaseUri\n- uid: System.Xml.Linq.XObject.Document\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: Document\n  fullName: System.Xml.Linq.XObject.Document\n  commentId: P:System.Xml.Linq.XObject.Document\n  nameWithType: XObject.Document\n- uid: System.Xml.Linq.XObject.NodeType\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: NodeType\n  fullName: System.Xml.Linq.XObject.NodeType\n  commentId: P:System.Xml.Linq.XObject.NodeType\n  nameWithType: XObject.NodeType\n- uid: System.Xml.Linq.XObject.Parent\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: Parent\n  fullName: System.Xml.Linq.XObject.Parent\n  commentId: P:System.Xml.Linq.XObject.Parent\n  nameWithType: XObject.Parent\n- uid: System.Xml.Linq.XObject.Changed\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: Changed\n  fullName: System.Xml.Linq.XObject.Changed\n  commentId: E:System.Xml.Linq.XObject.Changed\n  nameWithType: XObject.Changed\n- uid: System.Xml.Linq.XObject.Changing\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: Changing\n  fullName: System.Xml.Linq.XObject.Changing\n  commentId: E:System.Xml.Linq.XObject.Changing\n  nameWithType: XObject.Changing\n- uid: System.Xml.Linq.XObject.AddAnnotation(System.Object)\n  parent: System.Xml.Linq.XObject\n  isExternal: true\n  name: AddAnnotation(Object)\n  fullName: System.Xml.Linq.XObject.AddAnnotation(System.Object)\n  spec.csharp:\n  - uid: System.Xml.Linq.XObject.AddAnnotation(System.Object)\n    name: AddAnnotation\n    fullName: System.Xml.Linq.XObject.AddAnnotation\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XObject.AddAnnotation(System.Object)\n    name: AddAnnotation\n    fullName: System.Xml.Linq.XObject.AddAnnotation\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XObject.AddAnnotation(System.Object)\n  nameWithType: XObject.AddAnnotation(Object)\n- uid: System.Xml.Linq.XObject.Annotation(System.Type)\n  parent: System.Xml.Linq.XObject\n  isExternal: true\n  name: Annotation(Type)\n  fullName: System.Xml.Linq.XObject.Annotation(System.Type)\n  spec.csharp:\n  - uid: System.Xml.Linq.XObject.Annotation(System.Type)\n    name: Annotation\n    fullName: System.Xml.Linq.XObject.Annotation\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XObject.Annotation(System.Type)\n    name: Annotation\n    fullName: System.Xml.Linq.XObject.Annotation\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XObject.Annotation(System.Type)\n  nameWithType: XObject.Annotation(Type)\n- uid: System.Xml.Linq.XObject.Annotation``1\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: Annotation<T>()\n  fullName: System.Xml.Linq.XObject.Annotation<T>()\n  fullname.vb: System.Xml.Linq.XObject.Annotation(Of T)()\n  name.vb: Annotation(Of T)()\n  spec.csharp:\n  - uid: System.Xml.Linq.XObject.Annotation``1\n    name: Annotation<T>\n    fullName: System.Xml.Linq.XObject.Annotation<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XObject.Annotation``1\n    name: Annotation(Of T)\n    fullName: System.Xml.Linq.XObject.Annotation(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XObject.Annotation``1\n  nameWithType: XObject.Annotation<T>()\n  nameWithType.vb: XObject.Annotation(Of T)()\n- uid: System.Xml.Linq.XObject.Annotations(System.Type)\n  parent: System.Xml.Linq.XObject\n  isExternal: true\n  name: Annotations(Type)\n  fullName: System.Xml.Linq.XObject.Annotations(System.Type)\n  spec.csharp:\n  - uid: System.Xml.Linq.XObject.Annotations(System.Type)\n    name: Annotations\n    fullName: System.Xml.Linq.XObject.Annotations\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XObject.Annotations(System.Type)\n    name: Annotations\n    fullName: System.Xml.Linq.XObject.Annotations\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XObject.Annotations(System.Type)\n  nameWithType: XObject.Annotations(Type)\n- uid: System.Xml.Linq.XObject.Annotations``1\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: Annotations<T>()\n  fullName: System.Xml.Linq.XObject.Annotations<T>()\n  fullname.vb: System.Xml.Linq.XObject.Annotations(Of T)()\n  name.vb: Annotations(Of T)()\n  spec.csharp:\n  - uid: System.Xml.Linq.XObject.Annotations``1\n    name: Annotations<T>\n    fullName: System.Xml.Linq.XObject.Annotations<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XObject.Annotations``1\n    name: Annotations(Of T)\n    fullName: System.Xml.Linq.XObject.Annotations(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XObject.Annotations``1\n  nameWithType: XObject.Annotations<T>()\n  nameWithType.vb: XObject.Annotations(Of T)()\n- uid: System.Xml.Linq.XObject.RemoveAnnotations(System.Type)\n  parent: System.Xml.Linq.XObject\n  isExternal: true\n  name: RemoveAnnotations(Type)\n  fullName: System.Xml.Linq.XObject.RemoveAnnotations(System.Type)\n  spec.csharp:\n  - uid: System.Xml.Linq.XObject.RemoveAnnotations(System.Type)\n    name: RemoveAnnotations\n    fullName: System.Xml.Linq.XObject.RemoveAnnotations\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XObject.RemoveAnnotations(System.Type)\n    name: RemoveAnnotations\n    fullName: System.Xml.Linq.XObject.RemoveAnnotations\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)\n  nameWithType: XObject.RemoveAnnotations(Type)\n- uid: System.Xml.Linq.XObject.RemoveAnnotations``1\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: RemoveAnnotations<T>()\n  fullName: System.Xml.Linq.XObject.RemoveAnnotations<T>()\n  fullname.vb: System.Xml.Linq.XObject.RemoveAnnotations(Of T)()\n  name.vb: RemoveAnnotations(Of T)()\n  spec.csharp:\n  - uid: System.Xml.Linq.XObject.RemoveAnnotations``1\n    name: RemoveAnnotations<T>\n    fullName: System.Xml.Linq.XObject.RemoveAnnotations<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XObject.RemoveAnnotations``1\n    name: RemoveAnnotations(Of T)\n    fullName: System.Xml.Linq.XObject.RemoveAnnotations(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XObject.RemoveAnnotations``1\n  nameWithType: XObject.RemoveAnnotations<T>()\n  nameWithType.vb: XObject.RemoveAnnotations(Of T)()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Object[]\n  name: Object[]\n  fullName: System.Object[]\n  fullname.vb: System.Object()\n  name.vb: Object()\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Object[]\n  nameWithType.vb: Object()\n- uid: System.Xml.XmlWriter\n  parent: System.Xml\n  isExternal: false\n  name: XmlWriter\n  fullName: System.Xml.XmlWriter\n  commentId: T:System.Xml.XmlWriter\n  nameWithType: XmlWriter\n- uid: System.Xml\n  isExternal: false\n  name: System.Xml\n  fullName: System.Xml\n  commentId: N:System.Xml\n  nameWithType: System.Xml\n- uid: System.Collections.Generic.IEnumerable{System.Xml.Linq.XNode}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<XNode>\n  fullName: System.Collections.Generic.IEnumerable<System.Xml.Linq.XNode>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Xml.Linq.XNode)\n  name.vb: IEnumerable(Of XNode)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Xml.Linq.XNode\n    name: XNode\n    fullName: System.Xml.Linq.XNode\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Xml.Linq.XNode\n    name: XNode\n    fullName: System.Xml.Linq.XNode\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerable{System.Xml.Linq.XNode}\n  nameWithType: IEnumerable<XNode>\n  nameWithType.vb: IEnumerable(Of XNode)\n- uid: System.Collections.Generic.IEnumerable`1\n  isExternal: false\n  name: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of T)\n  name.vb: IEnumerable(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerable`1\n  nameWithType: IEnumerable<T>\n  nameWithType.vb: IEnumerable(Of T)\n- uid: System.Collections.Generic\n  isExternal: false\n  name: System.Collections.Generic\n  fullName: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n  nameWithType: System.Collections.Generic\n- uid: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<XElement>\n  fullName: System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Xml.Linq.XElement)\n  name.vb: IEnumerable(Of XElement)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Xml.Linq.XElement\n    name: XElement\n    fullName: System.Xml.Linq.XElement\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Xml.Linq.XElement\n    name: XElement\n    fullName: System.Xml.Linq.XElement\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}\n  nameWithType: IEnumerable<XElement>\n  nameWithType.vb: IEnumerable(Of XElement)\n- uid: System.Xml.Linq.XName\n  parent: System.Xml.Linq\n  isExternal: false\n  name: XName\n  fullName: System.Xml.Linq.XName\n  commentId: T:System.Xml.Linq.XName\n  nameWithType: XName\n- uid: System.Xml.Linq.XElement\n  parent: System.Xml.Linq\n  isExternal: false\n  name: XElement\n  fullName: System.Xml.Linq.XElement\n  commentId: T:System.Xml.Linq.XElement\n  nameWithType: XElement\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n"}