{"nodes":[{"pos":[1064,1075],"content":"OperandType","needQuote":true,"nodes":[{"content":"OperandType","pos":[0,11]}]},{"pos":[2116,2130],"content":"InlineBrTarget","needQuote":true,"nodes":[{"content":"InlineBrTarget","pos":[0,14]}]},{"pos":[3063,3074],"content":"InlineField","needQuote":true,"nodes":[{"content":"InlineField","pos":[0,11]}]},{"pos":[3976,3983],"content":"InlineI","needQuote":true,"nodes":[{"content":"InlineI","pos":[0,7]}]},{"pos":[4865,4873],"content":"InlineI8","needQuote":true,"nodes":[{"content":"InlineI8","pos":[0,8]}]},{"pos":[5771,5783],"content":"InlineMethod","needQuote":true,"nodes":[{"content":"InlineMethod","pos":[0,12]}]},{"pos":[6698,6708],"content":"InlineNone","needQuote":true,"nodes":[{"content":"InlineNone","pos":[0,10]}]},{"pos":[7578,7585],"content":"InlineR","needQuote":true,"nodes":[{"content":"InlineR","pos":[0,7]}]},{"pos":[8489,8498],"content":"InlineSig","needQuote":true,"nodes":[{"content":"InlineSig","pos":[0,9]}]},{"pos":[9417,9429],"content":"InlineString","needQuote":true,"nodes":[{"content":"InlineString","pos":[0,12]}]},{"pos":[10358,10370],"content":"InlineSwitch","needQuote":true,"nodes":[{"content":"InlineSwitch","pos":[0,12]}]},{"pos":[11311,11320],"content":"InlineTok","needQuote":true,"nodes":[{"content":"InlineTok","pos":[0,9]}]},{"pos":[12291,12301],"content":"InlineType","needQuote":true,"nodes":[{"content":"InlineType","pos":[0,10]}]},{"pos":[13206,13215],"content":"InlineVar","needQuote":true,"nodes":[{"content":"InlineVar","pos":[0,9]}]},{"pos":[14195,14214],"content":"ShortInlineBrTarget","needQuote":true,"nodes":[{"content":"ShortInlineBrTarget","pos":[0,19]}]},{"pos":[15171,15183],"content":"ShortInlineI","needQuote":true,"nodes":[{"content":"ShortInlineI","pos":[0,12]}]},{"pos":[16098,16110],"content":"ShortInlineR","needQuote":true,"nodes":[{"content":"ShortInlineR","pos":[0,12]}]},{"pos":[17050,17064],"content":"ShortInlineVar","needQuote":true,"nodes":[{"content":"ShortInlineVar","pos":[0,14]}]},{"pos":[17899,17921],"content":"System.Reflection.Emit","needQuote":true,"nodes":[{"content":"System.Reflection.Emit","pos":[0,22]}]},{"pos":[18137,18148],"content":"OperandType","needQuote":true,"nodes":[{"content":"OperandType","pos":[0,11]}]}],"content":"items:\n- uid: System.Reflection.Emit.OperandType\n  commentId: T:System.Reflection.Emit.OperandType\n  id: OperandType\n  parent: System.Reflection.Emit\n  children:\n  - System.Reflection.Emit.OperandType.InlineBrTarget\n  - System.Reflection.Emit.OperandType.InlineField\n  - System.Reflection.Emit.OperandType.InlineI\n  - System.Reflection.Emit.OperandType.InlineI8\n  - System.Reflection.Emit.OperandType.InlineMethod\n  - System.Reflection.Emit.OperandType.InlineNone\n  - System.Reflection.Emit.OperandType.InlineR\n  - System.Reflection.Emit.OperandType.InlineSig\n  - System.Reflection.Emit.OperandType.InlineString\n  - System.Reflection.Emit.OperandType.InlineSwitch\n  - System.Reflection.Emit.OperandType.InlineTok\n  - System.Reflection.Emit.OperandType.InlineType\n  - System.Reflection.Emit.OperandType.InlineVar\n  - System.Reflection.Emit.OperandType.ShortInlineBrTarget\n  - System.Reflection.Emit.OperandType.ShortInlineI\n  - System.Reflection.Emit.OperandType.ShortInlineR\n  - System.Reflection.Emit.OperandType.ShortInlineVar\n  langs:\n  - csharp\n  - vb\n  name: OperandType\n  fullName: System.Reflection.Emit.OperandType\n  type: Enum\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/OperandType.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: OperandType\n    path: src/mscorlib/src/System/Reflection/Emit/OperandType.cs\n    startLine: 18\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Describes the operand type of Microsoft intermediate language (MSIL) instruction.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [ComVisible(true)]\n\n      public enum OperandType\n    content.vb: >-\n      <Serializable>\n\n      <ComVisible(True)>\n\n      Public Enum OperandType\n  modifiers.csharp:\n  - public\n  - enum\n  modifiers.vb:\n  - Public\n  - Enum\n  nameWithType: OperandType\n- uid: System.Reflection.Emit.OperandType.InlineBrTarget\n  commentId: F:System.Reflection.Emit.OperandType.InlineBrTarget\n  id: InlineBrTarget\n  parent: System.Reflection.Emit.OperandType\n  langs:\n  - csharp\n  - vb\n  name: InlineBrTarget\n  fullName: System.Reflection.Emit.OperandType.InlineBrTarget\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/OperandType.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: InlineBrTarget\n    path: src/mscorlib/src/System/Reflection/Emit/OperandType.cs\n    startLine: 23\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>The operand is a 32-bit integer branch target.</p>\\n\"\n  syntax:\n    content: InlineBrTarget = 0\n    return:\n      type: System.Reflection.Emit.OperandType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: OperandType.InlineBrTarget\n- uid: System.Reflection.Emit.OperandType.InlineField\n  commentId: F:System.Reflection.Emit.OperandType.InlineField\n  id: InlineField\n  parent: System.Reflection.Emit.OperandType\n  langs:\n  - csharp\n  - vb\n  name: InlineField\n  fullName: System.Reflection.Emit.OperandType.InlineField\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/OperandType.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: InlineField\n    path: src/mscorlib/src/System/Reflection/Emit/OperandType.cs\n    startLine: 24\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>The operand is a 32-bit metadata token.</p>\\n\"\n  syntax:\n    content: InlineField = 1\n    return:\n      type: System.Reflection.Emit.OperandType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: OperandType.InlineField\n- uid: System.Reflection.Emit.OperandType.InlineI\n  commentId: F:System.Reflection.Emit.OperandType.InlineI\n  id: InlineI\n  parent: System.Reflection.Emit.OperandType\n  langs:\n  - csharp\n  - vb\n  name: InlineI\n  fullName: System.Reflection.Emit.OperandType.InlineI\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/OperandType.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: InlineI\n    path: src/mscorlib/src/System/Reflection/Emit/OperandType.cs\n    startLine: 25\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>The operand is a 32-bit integer.</p>\\n\"\n  syntax:\n    content: InlineI = 2\n    return:\n      type: System.Reflection.Emit.OperandType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: OperandType.InlineI\n- uid: System.Reflection.Emit.OperandType.InlineI8\n  commentId: F:System.Reflection.Emit.OperandType.InlineI8\n  id: InlineI8\n  parent: System.Reflection.Emit.OperandType\n  langs:\n  - csharp\n  - vb\n  name: InlineI8\n  fullName: System.Reflection.Emit.OperandType.InlineI8\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/OperandType.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: InlineI8\n    path: src/mscorlib/src/System/Reflection/Emit/OperandType.cs\n    startLine: 26\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>The operand is a 64-bit integer.</p>\\n\"\n  syntax:\n    content: InlineI8 = 3\n    return:\n      type: System.Reflection.Emit.OperandType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: OperandType.InlineI8\n- uid: System.Reflection.Emit.OperandType.InlineMethod\n  commentId: F:System.Reflection.Emit.OperandType.InlineMethod\n  id: InlineMethod\n  parent: System.Reflection.Emit.OperandType\n  langs:\n  - csharp\n  - vb\n  name: InlineMethod\n  fullName: System.Reflection.Emit.OperandType.InlineMethod\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/OperandType.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: InlineMethod\n    path: src/mscorlib/src/System/Reflection/Emit/OperandType.cs\n    startLine: 27\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>The operand is a 32-bit metadata token.</p>\\n\"\n  syntax:\n    content: InlineMethod = 4\n    return:\n      type: System.Reflection.Emit.OperandType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: OperandType.InlineMethod\n- uid: System.Reflection.Emit.OperandType.InlineNone\n  commentId: F:System.Reflection.Emit.OperandType.InlineNone\n  id: InlineNone\n  parent: System.Reflection.Emit.OperandType\n  langs:\n  - csharp\n  - vb\n  name: InlineNone\n  fullName: System.Reflection.Emit.OperandType.InlineNone\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/OperandType.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: InlineNone\n    path: src/mscorlib/src/System/Reflection/Emit/OperandType.cs\n    startLine: 28\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>No operand.</p>\\n\"\n  syntax:\n    content: InlineNone = 5\n    return:\n      type: System.Reflection.Emit.OperandType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: OperandType.InlineNone\n- uid: System.Reflection.Emit.OperandType.InlineR\n  commentId: F:System.Reflection.Emit.OperandType.InlineR\n  id: InlineR\n  parent: System.Reflection.Emit.OperandType\n  langs:\n  - csharp\n  - vb\n  name: InlineR\n  fullName: System.Reflection.Emit.OperandType.InlineR\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/OperandType.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: InlineR\n    path: src/mscorlib/src/System/Reflection/Emit/OperandType.cs\n    startLine: 34\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>The operand is a 64-bit IEEE floating point number.</p>\\n\"\n  syntax:\n    content: InlineR = 7\n    return:\n      type: System.Reflection.Emit.OperandType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: OperandType.InlineR\n- uid: System.Reflection.Emit.OperandType.InlineSig\n  commentId: F:System.Reflection.Emit.OperandType.InlineSig\n  id: InlineSig\n  parent: System.Reflection.Emit.OperandType\n  langs:\n  - csharp\n  - vb\n  name: InlineSig\n  fullName: System.Reflection.Emit.OperandType.InlineSig\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/OperandType.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: InlineSig\n    path: src/mscorlib/src/System/Reflection/Emit/OperandType.cs\n    startLine: 35\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>The operand is a 32-bit metadata signature token.</p>\\n\"\n  syntax:\n    content: InlineSig = 9\n    return:\n      type: System.Reflection.Emit.OperandType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: OperandType.InlineSig\n- uid: System.Reflection.Emit.OperandType.InlineString\n  commentId: F:System.Reflection.Emit.OperandType.InlineString\n  id: InlineString\n  parent: System.Reflection.Emit.OperandType\n  langs:\n  - csharp\n  - vb\n  name: InlineString\n  fullName: System.Reflection.Emit.OperandType.InlineString\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/OperandType.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: InlineString\n    path: src/mscorlib/src/System/Reflection/Emit/OperandType.cs\n    startLine: 36\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>The operand is a 32-bit metadata string token.</p>\\n\"\n  syntax:\n    content: InlineString = 10\n    return:\n      type: System.Reflection.Emit.OperandType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: OperandType.InlineString\n- uid: System.Reflection.Emit.OperandType.InlineSwitch\n  commentId: F:System.Reflection.Emit.OperandType.InlineSwitch\n  id: InlineSwitch\n  parent: System.Reflection.Emit.OperandType\n  langs:\n  - csharp\n  - vb\n  name: InlineSwitch\n  fullName: System.Reflection.Emit.OperandType.InlineSwitch\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/OperandType.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: InlineSwitch\n    path: src/mscorlib/src/System/Reflection/Emit/OperandType.cs\n    startLine: 37\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>The operand is the 32-bit integer argument to a switch instruction.</p>\\n\"\n  syntax:\n    content: InlineSwitch = 11\n    return:\n      type: System.Reflection.Emit.OperandType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: OperandType.InlineSwitch\n- uid: System.Reflection.Emit.OperandType.InlineTok\n  commentId: F:System.Reflection.Emit.OperandType.InlineTok\n  id: InlineTok\n  parent: System.Reflection.Emit.OperandType\n  langs:\n  - csharp\n  - vb\n  name: InlineTok\n  fullName: System.Reflection.Emit.OperandType.InlineTok\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/OperandType.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: InlineTok\n    path: src/mscorlib/src/System/Reflection/Emit/OperandType.cs\n    startLine: 38\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>The operand is a <strong>FieldRef</strong>, <strong>MethodRef</strong>, or <strong>TypeRef</strong> token.</p>\\n\"\n  syntax:\n    content: InlineTok = 12\n    return:\n      type: System.Reflection.Emit.OperandType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: OperandType.InlineTok\n- uid: System.Reflection.Emit.OperandType.InlineType\n  commentId: F:System.Reflection.Emit.OperandType.InlineType\n  id: InlineType\n  parent: System.Reflection.Emit.OperandType\n  langs:\n  - csharp\n  - vb\n  name: InlineType\n  fullName: System.Reflection.Emit.OperandType.InlineType\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/OperandType.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: InlineType\n    path: src/mscorlib/src/System/Reflection/Emit/OperandType.cs\n    startLine: 39\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>The operand is a 32-bit metadata token.</p>\\n\"\n  syntax:\n    content: InlineType = 13\n    return:\n      type: System.Reflection.Emit.OperandType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: OperandType.InlineType\n- uid: System.Reflection.Emit.OperandType.InlineVar\n  commentId: F:System.Reflection.Emit.OperandType.InlineVar\n  id: InlineVar\n  parent: System.Reflection.Emit.OperandType\n  langs:\n  - csharp\n  - vb\n  name: InlineVar\n  fullName: System.Reflection.Emit.OperandType.InlineVar\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/OperandType.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: InlineVar\n    path: src/mscorlib/src/System/Reflection/Emit/OperandType.cs\n    startLine: 40\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>The operand is 16-bit integer containing the ordinal of a local variable or an argument.</p>\\n\"\n  syntax:\n    content: InlineVar = 14\n    return:\n      type: System.Reflection.Emit.OperandType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: OperandType.InlineVar\n- uid: System.Reflection.Emit.OperandType.ShortInlineBrTarget\n  commentId: F:System.Reflection.Emit.OperandType.ShortInlineBrTarget\n  id: ShortInlineBrTarget\n  parent: System.Reflection.Emit.OperandType\n  langs:\n  - csharp\n  - vb\n  name: ShortInlineBrTarget\n  fullName: System.Reflection.Emit.OperandType.ShortInlineBrTarget\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/OperandType.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ShortInlineBrTarget\n    path: src/mscorlib/src/System/Reflection/Emit/OperandType.cs\n    startLine: 41\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>The operand is an 8-bit integer branch target.</p>\\n\"\n  syntax:\n    content: ShortInlineBrTarget = 15\n    return:\n      type: System.Reflection.Emit.OperandType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: OperandType.ShortInlineBrTarget\n- uid: System.Reflection.Emit.OperandType.ShortInlineI\n  commentId: F:System.Reflection.Emit.OperandType.ShortInlineI\n  id: ShortInlineI\n  parent: System.Reflection.Emit.OperandType\n  langs:\n  - csharp\n  - vb\n  name: ShortInlineI\n  fullName: System.Reflection.Emit.OperandType.ShortInlineI\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/OperandType.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ShortInlineI\n    path: src/mscorlib/src/System/Reflection/Emit/OperandType.cs\n    startLine: 42\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>The operand is an 8-bit integer.</p>\\n\"\n  syntax:\n    content: ShortInlineI = 16\n    return:\n      type: System.Reflection.Emit.OperandType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: OperandType.ShortInlineI\n- uid: System.Reflection.Emit.OperandType.ShortInlineR\n  commentId: F:System.Reflection.Emit.OperandType.ShortInlineR\n  id: ShortInlineR\n  parent: System.Reflection.Emit.OperandType\n  langs:\n  - csharp\n  - vb\n  name: ShortInlineR\n  fullName: System.Reflection.Emit.OperandType.ShortInlineR\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/OperandType.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ShortInlineR\n    path: src/mscorlib/src/System/Reflection/Emit/OperandType.cs\n    startLine: 43\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>The operand is a 32-bit IEEE floating point number.</p>\\n\"\n  syntax:\n    content: ShortInlineR = 17\n    return:\n      type: System.Reflection.Emit.OperandType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: OperandType.ShortInlineR\n- uid: System.Reflection.Emit.OperandType.ShortInlineVar\n  commentId: F:System.Reflection.Emit.OperandType.ShortInlineVar\n  id: ShortInlineVar\n  parent: System.Reflection.Emit.OperandType\n  langs:\n  - csharp\n  - vb\n  name: ShortInlineVar\n  fullName: System.Reflection.Emit.OperandType.ShortInlineVar\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/OperandType.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ShortInlineVar\n    path: src/mscorlib/src/System/Reflection/Emit/OperandType.cs\n    startLine: 44\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>The operand is an 8-bit integer containing the ordinal of a local variable or an argumenta.</p>\\n\"\n  syntax:\n    content: ShortInlineVar = 18\n    return:\n      type: System.Reflection.Emit.OperandType\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: OperandType.ShortInlineVar\nreferences:\n- uid: System.Reflection.Emit\n  isExternal: false\n  name: System.Reflection.Emit\n  fullName: System.Reflection.Emit\n  nameWithType: System.Reflection.Emit\n  commentId: N:System.Reflection.Emit\n- uid: System.Reflection.Emit.OperandType\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: OperandType\n  fullName: System.Reflection.Emit.OperandType\n  nameWithType: OperandType\n  commentId: T:System.Reflection.Emit.OperandType\n"}