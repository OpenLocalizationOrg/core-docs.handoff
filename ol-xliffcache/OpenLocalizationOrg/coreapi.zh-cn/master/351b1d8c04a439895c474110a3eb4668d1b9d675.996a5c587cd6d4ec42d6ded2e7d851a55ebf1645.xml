{"nodes":[{"pos":[415,431],"content":"StringEnumerator","needQuote":true,"nodes":[{"content":"StringEnumerator","pos":[0,16]}]},{"pos":[2195,2202],"content":"Current","needQuote":true,"nodes":[{"content":"Current","pos":[0,7]}]},{"content":"\\n&lt;p&gt;The current element in the collection.&lt;/p&gt;\\n","pos":[2968,3017],"source":"\\n<p>The current element in the collection.</p>\\n"},{"content":"\\n&lt;p&gt;The enumerator is positioned before the first element of the collection or after the last element.","pos":[3144,3247],"source":"\\n<p>The enumerator is positioned before the first element of the collection or after the last element."},{"content":"&lt;/p&gt;\\n","pos":[3248,3254],"source":" </p>\\n"},{"pos":[4012,4022],"content":"MoveNext()","needQuote":true,"nodes":[{"content":"MoveNext()","pos":[0,10]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the enumerator was successfully advanced to the next element; &lt;strong&gt;false&lt;/strong&gt; if the enumerator has passed the end of the collection.&lt;/p&gt;\\n","pos":[4776,4954],"source":"\\n<p>\\n<strong>true</strong> if the enumerator was successfully advanced to the next element; <strong>false</strong> if the enumerator has passed the end of the collection.</p>\\n"},{"content":"\\n&lt;p&gt;The collection was modified after the enumerator was created.","pos":[5081,5147],"source":"\\n<p>The collection was modified after the enumerator was created."},{"content":"&lt;/p&gt;\\n","pos":[5148,5154],"source":" </p>\\n"},{"pos":[5885,5892],"content":"Reset()","needQuote":true,"nodes":[{"content":"Reset()","pos":[0,7]}]},{"content":"\\n&lt;p&gt;The collection was modified after the enumerator was created.","pos":[6719,6785],"source":"\\n<p>The collection was modified after the enumerator was created."},{"content":"&lt;/p&gt;\\n","pos":[6786,6792],"source":" </p>\\n"},{"pos":[7363,7393],"content":"System.Collections.Specialized","needQuote":true,"nodes":[{"content":"System.Collections.Specialized","pos":[0,30]}]},{"pos":[7596,7602],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7762,7772],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[7867,7875],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[7944,7945],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7972,7973],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8043,8051],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[8120,8121],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8148,8149],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8332,8346],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[8465,8471],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8538,8539],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8589,8595],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8655,8656],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8739,8745],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8812,8813],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8863,8869],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8929,8930],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9144,9166],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[9314,9320],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9387,9388],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9438,9444],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9505,9506]},{"pos":[9561,9567],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9627,9628],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9725,9731],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9798,9799],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9849,9855],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9916,9917]},{"pos":[9972,9978],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10038,10039],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10284,10315],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[10481,10496],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[10572,10573],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10623,10629],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10690,10691]},{"pos":[10746,10752],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10812,10813],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10919,10934],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[11010,11011],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11061,11067],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11128,11129]},{"pos":[11184,11190],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11250,11251],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11481,11494],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[11595,11606],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[11678,11679],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11706,11707],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11780,11791],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[11863,11864],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11891,11892],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12067,12076],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[12169,12176],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[12244,12245],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12272,12273],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12342,12349],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[12417,12418],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12445,12446],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12621,12638],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[12747,12762],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[12838,12839],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12866,12867],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12944,12959],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[13035,13036],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13063,13064],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13209,13215],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[13346,13352],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[13498,13505],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[13672,13697],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]}],"content":"items:\n- uid: System.Collections.Specialized.StringEnumerator\n  commentId: T:System.Collections.Specialized.StringEnumerator\n  id: StringEnumerator\n  parent: System.Collections.Specialized\n  children:\n  - System.Collections.Specialized.StringEnumerator.Current\n  - System.Collections.Specialized.StringEnumerator.MoveNext\n  - System.Collections.Specialized.StringEnumerator.Reset\n  langs:\n  - csharp\n  - vb\n  name: StringEnumerator\n  fullName: System.Collections.Specialized.StringEnumerator\n  type: Class\n  source:\n    remote:\n      path: src/System.Collections.Specialized/src/System/Collections/Specialized/StringCollection.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: StringEnumerator\n    path: src/System.Collections.Specialized/src/System/Collections/Specialized/StringCollection.cs\n    startLine: 235\n  assemblies:\n  - System.Collections.Specialized\n  namespace: System.Collections.Specialized\n  summary: \"\\n<p>Supports a simple iteration over a <xref href=\\\"System.Collections.Specialized.StringCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public class StringEnumerator\n    content.vb: Public Class StringEnumerator\n  seealso:\n  - type: System.Collections.IEnumerable\n    commentId: T:System.Collections.IEnumerable\n  - type: System.Collections.IEnumerator\n    commentId: T:System.Collections.IEnumerator\n  - type: System.Collections.Specialized.StringCollection\n    commentId: T:System.Collections.Specialized.StringCollection\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: StringEnumerator\n- uid: System.Collections.Specialized.StringEnumerator.Current\n  commentId: P:System.Collections.Specialized.StringEnumerator.Current\n  id: Current\n  parent: System.Collections.Specialized.StringEnumerator\n  langs:\n  - csharp\n  - vb\n  name: Current\n  fullName: System.Collections.Specialized.StringEnumerator.Current\n  type: Property\n  source:\n    remote:\n      path: src/System.Collections.Specialized/src/System/Collections/Specialized/StringCollection.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Current\n    path: src/System.Collections.Specialized/src/System/Collections/Specialized/StringCollection.cs\n    startLine: 246\n  assemblies:\n  - System.Collections.Specialized\n  namespace: System.Collections.Specialized\n  summary: \"\\n<p>Gets the current element in the collection.</p>\\n\"\n  syntax:\n    content: public string Current { get; }\n    content.vb: Public ReadOnly Property Current As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The current element in the collection.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The enumerator is positioned before the first element of the collection or after the last element. </p>\\n\"\n  seealso:\n  - type: System.Collections.Specialized.StringEnumerator.MoveNext\n    commentId: M:System.Collections.Specialized.StringEnumerator.MoveNext\n  - type: System.Collections.Specialized.StringEnumerator.Reset\n    commentId: M:System.Collections.Specialized.StringEnumerator.Reset\n  - type: System.Collections.IEnumerator.Current\n    commentId: P:System.Collections.IEnumerator.Current\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: StringEnumerator.Current\n- uid: System.Collections.Specialized.StringEnumerator.MoveNext\n  commentId: M:System.Collections.Specialized.StringEnumerator.MoveNext\n  id: MoveNext\n  parent: System.Collections.Specialized.StringEnumerator\n  langs:\n  - csharp\n  - vb\n  name: MoveNext()\n  fullName: System.Collections.Specialized.StringEnumerator.MoveNext()\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections.Specialized/src/System/Collections/Specialized/StringCollection.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MoveNext\n    path: src/System.Collections.Specialized/src/System/Collections/Specialized/StringCollection.cs\n    startLine: 254\n  assemblies:\n  - System.Collections.Specialized\n  namespace: System.Collections.Specialized\n  summary: \"\\n<p>Advances the enumerator to the next element of the collection.</p>\\n\"\n  syntax:\n    content: public bool MoveNext()\n    content.vb: Public Function MoveNext As Boolean\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the enumerator was successfully advanced to the next element; <strong>false</strong> if the enumerator has passed the end of the collection.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The collection was modified after the enumerator was created. </p>\\n\"\n  seealso:\n  - type: System.Collections.Specialized.StringEnumerator.Current\n    commentId: P:System.Collections.Specialized.StringEnumerator.Current\n  - type: System.Collections.Specialized.StringEnumerator.Reset\n    commentId: M:System.Collections.Specialized.StringEnumerator.Reset\n  - type: System.Collections.IEnumerator.MoveNext\n    commentId: M:System.Collections.IEnumerator.MoveNext\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: StringEnumerator.MoveNext()\n- uid: System.Collections.Specialized.StringEnumerator.Reset\n  commentId: M:System.Collections.Specialized.StringEnumerator.Reset\n  id: Reset\n  parent: System.Collections.Specialized.StringEnumerator\n  langs:\n  - csharp\n  - vb\n  name: Reset()\n  fullName: System.Collections.Specialized.StringEnumerator.Reset()\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections.Specialized/src/System/Collections/Specialized/StringCollection.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Reset\n    path: src/System.Collections.Specialized/src/System/Collections/Specialized/StringCollection.cs\n    startLine: 259\n  assemblies:\n  - System.Collections.Specialized\n  namespace: System.Collections.Specialized\n  summary: \"\\n<p>Sets the enumerator to its initial position, which is before the first element in the collection.</p>\\n\"\n  syntax:\n    content: public void Reset()\n    content.vb: Public Sub Reset\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The collection was modified after the enumerator was created. </p>\\n\"\n  seealso:\n  - type: System.Collections.Specialized.StringEnumerator.MoveNext\n    commentId: M:System.Collections.Specialized.StringEnumerator.MoveNext\n  - type: System.Collections.Specialized.StringEnumerator.Current\n    commentId: P:System.Collections.Specialized.StringEnumerator.Current\n  - type: System.Collections.IEnumerator.Reset\n    commentId: M:System.Collections.IEnumerator.Reset\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: StringEnumerator.Reset()\nreferences:\n- uid: System.Collections.Specialized\n  isExternal: false\n  name: System.Collections.Specialized\n  fullName: System.Collections.Specialized\n  nameWithType: System.Collections.Specialized\n  commentId: N:System.Collections.Specialized\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n"}