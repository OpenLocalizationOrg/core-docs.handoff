{"nodes":[{"pos":[949,960],"content":"DbParameter","needQuote":true,"nodes":[{"content":"DbParameter","pos":[0,11]}]},{"pos":[2648,2661],"content":"DbParameter()","needQuote":true,"nodes":[{"content":"DbParameter()","pos":[0,13]}]},{"pos":[3606,3612],"content":"DbType","needQuote":true,"nodes":[{"content":"DbType","pos":[0,6]}]},{"pos":[5202,5211],"content":"Direction","needQuote":true,"nodes":[{"content":"Direction","pos":[0,9]}]},{"pos":[6868,6878],"content":"IsNullable","needQuote":true,"nodes":[{"content":"IsNullable","pos":[0,10]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if null values are accepted; otherwise &lt;strong&gt;false&lt;/strong&gt;.","pos":[7609,7700],"source":"\\n<p>\\n<strong>true</strong> if null values are accepted; otherwise <strong>false</strong>."},{"content":"The default is &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[7701,7745],"source":" The default is <strong>false</strong>.</p>\\n"},{"pos":[8154,8167],"content":"ParameterName","needQuote":true,"nodes":[{"content":"ParameterName","pos":[0,13]}]},{"pos":[9512,9521],"content":"Precision","needQuote":true,"nodes":[{"content":"Precision","pos":[0,9]}]},{"pos":[10894,10899],"content":"Scale","needQuote":true,"nodes":[{"content":"Scale","pos":[0,5]}]},{"pos":[12161,12165],"content":"Size","needQuote":true,"nodes":[{"content":"Size","pos":[0,4]}]},{"content":"\\n&lt;p&gt;The maximum size, in bytes, of the data within the column.","pos":[12862,12925],"source":"\\n<p>The maximum size, in bytes, of the data within the column."},{"content":"The default value is inferred from the parameter value.&lt;/p&gt;\\n","pos":[12926,12987],"source":" The default value is inferred from the parameter value.</p>\\n"},{"pos":[13383,13395],"content":"SourceColumn","needQuote":true,"nodes":[{"content":"SourceColumn","pos":[0,12]}]},{"pos":[14938,14961],"content":"SourceColumnNullMapping","needQuote":true,"nodes":[{"content":"SourceColumnNullMapping","pos":[0,23]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the source column is nullable; &lt;strong&gt;false&lt;/strong&gt; if it is not.&lt;/p&gt;\\n","pos":[15911,16016],"source":"\\n<p>\\n<strong>true</strong> if the source column is nullable; <strong>false</strong> if it is not.</p>\\n"},{"pos":[16471,16497],"content":"IDbDataParameter.Precision","needQuote":true,"nodes":[{"content":"IDbDataParameter.Precision","pos":[0,26]}]},{"content":"\\n&lt;p&gt;The maximum number of digits used to represent the &lt;strong&gt;Value&lt;/strong&gt; property of a data provider &lt;strong&gt;Parameter&lt;/strong&gt; object.","pos":[17288,17429],"source":"\\n<p>The maximum number of digits used to represent the <strong>Value</strong> property of a data provider <strong>Parameter</strong> object."},{"content":"The default value is 0, which indicates that a data provider sets the precision for &lt;strong&gt;Value&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[17430,17543],"source":" The default value is 0, which indicates that a data provider sets the precision for <strong>Value</strong>.</p>\\n"},{"pos":[18098,18120],"content":"IDbDataParameter.Scale","needQuote":true,"nodes":[{"content":"IDbDataParameter.Scale","pos":[0,22]}]},{"pos":[19594,19599],"content":"Value","needQuote":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[20916,20944],"content":"IDataParameter.SourceVersion","needQuote":true,"nodes":[{"content":"IDataParameter.SourceVersion","pos":[0,28]}]},{"pos":[22167,22180],"content":"ResetDbType()","needQuote":true,"nodes":[{"content":"ResetDbType()","pos":[0,13]}]},{"pos":[22996,23014],"content":"System.Data.Common","needQuote":true,"nodes":[{"content":"System.Data.Common","pos":[0,18]}]},{"pos":[23181,23187],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23352,23368],"content":"IDbDataParameter","needQuote":true,"nodes":[{"content":"IDbDataParameter","pos":[0,16]}]},{"pos":[23571,23585],"content":"IDataParameter","needQuote":true,"nodes":[{"content":"IDataParameter","pos":[0,14]}]},{"pos":[23779,23789],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[23884,23892],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[23961,23962],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23989,23990],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24060,24068],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[24137,24138],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24165,24166],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24349,24363],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[24482,24488],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[24555,24556],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24606,24612],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24672,24673],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24756,24762],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[24829,24830],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24880,24886],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24946,24947],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25161,25183],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[25331,25337],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[25404,25405],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25455,25461],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[25522,25523]},{"pos":[25578,25584],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[25644,25645],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25742,25748],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[25815,25816],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25866,25872],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[25933,25934]},{"pos":[25989,25995],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[26055,26056],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26301,26332],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[26498,26513],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[26589,26590],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26640,26646],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[26707,26708]},{"pos":[26763,26769],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[26829,26830],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26936,26951],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[27027,27028],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27078,27084],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[27145,27146]},{"pos":[27201,27207],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[27267,27268],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27498,27511],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[27612,27623],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[27695,27696],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27723,27724],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27797,27808],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[27880,27881],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27908,27909],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28084,28093],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[28186,28193],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[28261,28262],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28289,28290],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28359,28366],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[28434,28435],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28462,28463],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28638,28655],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[28764,28779],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[28855,28856],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28883,28884],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28961,28976],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[29052,29053],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29080,29081],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29226,29232],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[29344,29355],"content":"System.Data","needQuote":true,"nodes":[{"content":"System.Data","pos":[0,11]}]},{"pos":[29541,29547],"content":"DbType","needQuote":true,"nodes":[{"content":"DbType","pos":[0,6]}]},{"pos":[29757,29763],"content":"DbType","needQuote":true,"nodes":[{"content":"DbType","pos":[0,6]}]},{"pos":[29961,29970],"content":"Direction","needQuote":true,"nodes":[{"content":"Direction","pos":[0,9]}]},{"pos":[30201,30219],"content":"ParameterDirection","needQuote":true,"nodes":[{"content":"ParameterDirection","pos":[0,18]}]},{"pos":[30454,30464],"content":"IsNullable","needQuote":true,"nodes":[{"content":"IsNullable","pos":[0,10]}]},{"pos":[30677,30684],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[30879,30892],"content":"ParameterName","needQuote":true,"nodes":[{"content":"ParameterName","pos":[0,13]}]},{"pos":[31113,31119],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[31262,31266],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[31447,31451],"content":"Size","needQuote":true,"nodes":[{"content":"Size","pos":[0,4]}]},{"pos":[31650,31655],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[31843,31855],"content":"SourceColumn","needQuote":true,"nodes":[{"content":"SourceColumn","pos":[0,12]}]},{"pos":[32120,32129],"content":"Precision","needQuote":true,"nodes":[{"content":"Precision","pos":[0,9]}]},{"pos":[32387,32392],"content":"Scale","needQuote":true,"nodes":[{"content":"Scale","pos":[0,5]}]},{"pos":[32634,32639],"content":"Value","needQuote":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[32883,32896],"content":"SourceVersion","needQuote":true,"nodes":[{"content":"SourceVersion","pos":[0,13]}]},{"pos":[33135,33149],"content":"DataRowVersion","needQuote":true,"nodes":[{"content":"DataRowVersion","pos":[0,14]}]},{"pos":[33339,33356],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]}],"content":"items:\n- uid: System.Data.Common.DbParameter\n  commentId: T:System.Data.Common.DbParameter\n  id: DbParameter\n  parent: System.Data.Common\n  children:\n  - System.Data.Common.DbParameter.#ctor\n  - System.Data.Common.DbParameter.DbType\n  - System.Data.Common.DbParameter.Direction\n  - System.Data.Common.DbParameter.IsNullable\n  - System.Data.Common.DbParameter.ParameterName\n  - System.Data.Common.DbParameter.Precision\n  - System.Data.Common.DbParameter.ResetDbType\n  - System.Data.Common.DbParameter.Scale\n  - System.Data.Common.DbParameter.Size\n  - System.Data.Common.DbParameter.SourceColumn\n  - System.Data.Common.DbParameter.SourceColumnNullMapping\n  - System.Data.Common.DbParameter.System#Data#IDataParameter#SourceVersion\n  - System.Data.Common.DbParameter.System#Data#IDbDataParameter#Precision\n  - System.Data.Common.DbParameter.System#Data#IDbDataParameter#Scale\n  - System.Data.Common.DbParameter.Value\n  langs:\n  - csharp\n  - vb\n  name: DbParameter\n  fullName: System.Data.Common.DbParameter\n  type: Class\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DbParameter\n    path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs\n    startLine: 13\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  summary: \"\\n<p>Represents a parameter to a <xref href=\\\"System.Data.Common.DbCommand\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and optionally, its mapping to a <xref href=\\\"System.Data.DataSet\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> column. For more information on parameters, see Configuring Parameters and Parameter Data Types.</p>\\n\"\n  syntax:\n    content: 'public abstract class DbParameter : IDbDataParameter, IDataParameter'\n    content.vb: >-\n      Public MustInherit Class DbParameter\n          Implements IDbDataParameter, IDataParameter\n  inheritance:\n  - System.Object\n  implements:\n  - System.Data.IDbDataParameter\n  - System.Data.IDataParameter\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: DbParameter\n- uid: System.Data.Common.DbParameter.#ctor\n  commentId: M:System.Data.Common.DbParameter.#ctor\n  id: '#ctor'\n  parent: System.Data.Common.DbParameter\n  langs:\n  - csharp\n  - vb\n  name: DbParameter()\n  fullName: System.Data.Common.DbParameter.DbParameter()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs\n    startLine: 16\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Data.Common.DbParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: protected DbParameter()\n    content.vb: Protected Sub New\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: DbParameter.DbParameter()\n- uid: System.Data.Common.DbParameter.DbType\n  commentId: P:System.Data.Common.DbParameter.DbType\n  id: DbType\n  parent: System.Data.Common.DbParameter\n  langs:\n  - csharp\n  - vb\n  name: DbType\n  fullName: System.Data.Common.DbParameter.DbType\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DbType\n    path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs\n    startLine: 20\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  summary: \"\\n<p>Gets or sets the <xref href=\\\"System.Data.DbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the parameter.</p>\\n\"\n  syntax:\n    content: public abstract DbType DbType { get; set; }\n    content.vb: Public MustOverride Property DbType As DbType\n    parameters: []\n    return:\n      type: System.Data.DbType\n      description: \"\\n<p>One of the <xref href=\\\"System.Data.DbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. The default is <xref href=\\\"System.Data.DbType.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The property is not set to a valid <xref href=\\\"System.Data.DbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.Data.IDataParameter.DbType\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: DbParameter.DbType\n- uid: System.Data.Common.DbParameter.Direction\n  commentId: P:System.Data.Common.DbParameter.Direction\n  id: Direction\n  parent: System.Data.Common.DbParameter\n  langs:\n  - csharp\n  - vb\n  name: Direction\n  fullName: System.Data.Common.DbParameter.Direction\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Direction\n    path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs\n    startLine: 28\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  summary: \"\\n<p>Gets or sets a value that indicates whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.</p>\\n\"\n  syntax:\n    content: public abstract ParameterDirection Direction { get; set; }\n    content.vb: Public MustOverride Property Direction As ParameterDirection\n    parameters: []\n    return:\n      type: System.Data.ParameterDirection\n      description: \"\\n<p>One of the <xref href=\\\"System.Data.ParameterDirection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. The default is <strong>Input</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The property is not set to one of the valid <xref href=\\\"System.Data.ParameterDirection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n  implements:\n  - System.Data.IDataParameter.Direction\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: DbParameter.Direction\n- uid: System.Data.Common.DbParameter.IsNullable\n  commentId: P:System.Data.Common.DbParameter.IsNullable\n  id: IsNullable\n  parent: System.Data.Common.DbParameter\n  langs:\n  - csharp\n  - vb\n  name: IsNullable\n  fullName: System.Data.Common.DbParameter.IsNullable\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsNullable\n    path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs\n    startLine: 34\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  summary: \"\\n<p>Gets or sets a value that indicates whether the parameter accepts null values.</p>\\n\"\n  syntax:\n    content: public abstract bool IsNullable { get; set; }\n    content.vb: Public MustOverride Property IsNullable As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if null values are accepted; otherwise <strong>false</strong>. The default is <strong>false</strong>.</p>\\n\"\n  implements:\n  - System.Data.IDataParameter.IsNullable\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: DbParameter.IsNullable\n- uid: System.Data.Common.DbParameter.ParameterName\n  commentId: P:System.Data.Common.DbParameter.ParameterName\n  id: ParameterName\n  parent: System.Data.Common.DbParameter\n  langs:\n  - csharp\n  - vb\n  name: ParameterName\n  fullName: System.Data.Common.DbParameter.ParameterName\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ParameterName\n    path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs\n    startLine: 40\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  summary: \"\\n<p>Gets or sets the name of the <xref href=\\\"System.Data.Common.DbParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public abstract string ParameterName { get; set; }\n    content.vb: Public MustOverride Property ParameterName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The name of the <xref href=\\\"System.Data.Common.DbParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. The default is an empty string (\\\"\\\").</p>\\n\"\n  implements:\n  - System.Data.IDataParameter.ParameterName\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: DbParameter.ParameterName\n- uid: System.Data.Common.DbParameter.Precision\n  commentId: P:System.Data.Common.DbParameter.Precision\n  id: Precision\n  parent: System.Data.Common.DbParameter\n  langs:\n  - csharp\n  - vb\n  name: Precision\n  fullName: System.Data.Common.DbParameter.Precision\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Precision\n    path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs\n    startLine: 46\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  summary: \"\\n<p>[Supported in the .NET Framework 4.5.1 and later versions] </p>\\n<p>Gets or sets the maximum number of digits used to represent the <xref href=\\\"System.Data.Common.DbParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property.</p>\\n\"\n  syntax:\n    content: public virtual byte Precision { get; set; }\n    content.vb: Public Overridable Property Precision As Byte\n    parameters: []\n    return:\n      type: System.Byte\n      description: \"\\n<p>The maximum number of digits used to represent the <xref href=\\\"System.Data.Common.DbParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: DbParameter.Precision\n- uid: System.Data.Common.DbParameter.Scale\n  commentId: P:System.Data.Common.DbParameter.Scale\n  id: Scale\n  parent: System.Data.Common.DbParameter\n  langs:\n  - csharp\n  - vb\n  name: Scale\n  fullName: System.Data.Common.DbParameter.Scale\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Scale\n    path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs\n    startLine: 57\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  summary: \"\\n<p>Gets or sets the number of decimal places to which <xref href=\\\"System.Data.Common.DbParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is resolved.</p>\\n\"\n  syntax:\n    content: public virtual byte Scale { get; set; }\n    content.vb: Public Overridable Property Scale As Byte\n    parameters: []\n    return:\n      type: System.Byte\n      description: \"\\n<p>The number of decimal places to which <xref href=\\\"System.Data.Common.DbParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is resolved.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: DbParameter.Scale\n- uid: System.Data.Common.DbParameter.Size\n  commentId: P:System.Data.Common.DbParameter.Size\n  id: Size\n  parent: System.Data.Common.DbParameter\n  langs:\n  - csharp\n  - vb\n  name: Size\n  fullName: System.Data.Common.DbParameter.Size\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Size\n    path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs\n    startLine: 68\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  summary: \"\\n<p>Gets or sets the maximum size, in bytes, of the data within the column.</p>\\n\"\n  syntax:\n    content: public abstract int Size { get; set; }\n    content.vb: Public MustOverride Property Size As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The maximum size, in bytes, of the data within the column. The default value is inferred from the parameter value.</p>\\n\"\n  implements:\n  - System.Data.IDbDataParameter.Size\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: DbParameter.Size\n- uid: System.Data.Common.DbParameter.SourceColumn\n  commentId: P:System.Data.Common.DbParameter.SourceColumn\n  id: SourceColumn\n  parent: System.Data.Common.DbParameter\n  langs:\n  - csharp\n  - vb\n  name: SourceColumn\n  fullName: System.Data.Common.DbParameter.SourceColumn\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SourceColumn\n    path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs\n    startLine: 74\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  summary: \"\\n<p>Gets or sets the name of the source column mapped to the <xref href=\\\"System.Data.DataSet\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and used for loading or returning the <xref href=\\\"System.Data.Common.DbParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public abstract string SourceColumn { get; set; }\n    content.vb: Public MustOverride Property SourceColumn As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The name of the source column mapped to the <xref href=\\\"System.Data.DataSet\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. The default is an empty string.</p>\\n\"\n  implements:\n  - System.Data.IDataParameter.SourceColumn\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: DbParameter.SourceColumn\n- uid: System.Data.Common.DbParameter.SourceColumnNullMapping\n  commentId: P:System.Data.Common.DbParameter.SourceColumnNullMapping\n  id: SourceColumnNullMapping\n  parent: System.Data.Common.DbParameter\n  langs:\n  - csharp\n  - vb\n  name: SourceColumnNullMapping\n  fullName: System.Data.Common.DbParameter.SourceColumnNullMapping\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SourceColumnNullMapping\n    path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs\n    startLine: 80\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  summary: \"\\n<p>Sets or gets a value which indicates whether the source column is nullable. This allows <xref href=\\\"System.Data.Common.DbCommandBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to correctly generate Update statements for nullable columns.</p>\\n\"\n  syntax:\n    content: public abstract bool SourceColumnNullMapping { get; set; }\n    content.vb: Public MustOverride Property SourceColumnNullMapping As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the source column is nullable; <strong>false</strong> if it is not.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: DbParameter.SourceColumnNullMapping\n- uid: System.Data.Common.DbParameter.System#Data#IDbDataParameter#Precision\n  commentId: P:System.Data.Common.DbParameter.System#Data#IDbDataParameter#Precision\n  id: System#Data#IDbDataParameter#Precision\n  isEii: true\n  parent: System.Data.Common.DbParameter\n  langs:\n  - csharp\n  - vb\n  name: IDbDataParameter.Precision\n  fullName: System.Data.Common.DbParameter.System.Data.IDbDataParameter.Precision\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/ref/System.Data.Common.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Data.IDbDataParameter.Precision\n    path: src/System.Data.Common/ref/System.Data.Common.cs\n    startLine: 421\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  summary: \"\\n<p>Indicates the precision of numeric parameters.</p>\\n\"\n  syntax:\n    content: byte IDbDataParameter.Precision { get; set; }\n    content.vb: ReadOnly WriteOnly Property System.Data.IDbDataParameter.Precision As Byte Implements IDbDataParameter.Precision\n    parameters: []\n    return:\n      type: System.Byte\n      description: \"\\n<p>The maximum number of digits used to represent the <strong>Value</strong> property of a data provider <strong>Parameter</strong> object. The default value is 0, which indicates that a data provider sets the precision for <strong>Value</strong>.</p>\\n\"\n  implements:\n  - System.Data.IDbDataParameter.Precision\n  modifiers.csharp:\n  - get\n  - set\n  name.vb: System.Data.IDbDataParameter.Precision\n  nameWithType: DbParameter.IDbDataParameter.Precision\n  nameWithType.vb: DbParameter.System.Data.IDbDataParameter.Precision\n- uid: System.Data.Common.DbParameter.System#Data#IDbDataParameter#Scale\n  commentId: P:System.Data.Common.DbParameter.System#Data#IDbDataParameter#Scale\n  id: System#Data#IDbDataParameter#Scale\n  isEii: true\n  parent: System.Data.Common.DbParameter\n  langs:\n  - csharp\n  - vb\n  name: IDbDataParameter.Scale\n  fullName: System.Data.Common.DbParameter.System.Data.IDbDataParameter.Scale\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/ref/System.Data.Common.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Data.IDbDataParameter.Scale\n    path: src/System.Data.Common/ref/System.Data.Common.cs\n    startLine: 422\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.Data.IDbDataParameter.Scale\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: byte IDbDataParameter.Scale { get; set; }\n    content.vb: ReadOnly WriteOnly Property System.Data.IDbDataParameter.Scale As Byte Implements IDbDataParameter.Scale\n    parameters: []\n    return:\n      type: System.Byte\n      description: \"\\n<p>The number of decimal places to which <xref href=\\\"System.Data.OleDb.OleDbParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is resolved. The default is 0.</p>\\n\"\n  implements:\n  - System.Data.IDbDataParameter.Scale\n  modifiers.csharp:\n  - get\n  - set\n  name.vb: System.Data.IDbDataParameter.Scale\n  nameWithType: DbParameter.IDbDataParameter.Scale\n  nameWithType.vb: DbParameter.System.Data.IDbDataParameter.Scale\n- uid: System.Data.Common.DbParameter.Value\n  commentId: P:System.Data.Common.DbParameter.Value\n  id: Value\n  parent: System.Data.Common.DbParameter\n  langs:\n  - csharp\n  - vb\n  name: Value\n  fullName: System.Data.Common.DbParameter.Value\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Value\n    path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs\n    startLine: 86\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  summary: \"\\n<p>Gets or sets the value of the parameter.</p>\\n\"\n  syntax:\n    content: public abstract object Value { get; set; }\n    content.vb: Public MustOverride Property Value As Object\n    parameters: []\n    return:\n      type: System.Object\n      description: \"\\n<p>An <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is the value of the parameter. The default value is null.</p>\\n\"\n  implements:\n  - System.Data.IDataParameter.Value\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: DbParameter.Value\n- uid: System.Data.Common.DbParameter.System#Data#IDataParameter#SourceVersion\n  commentId: P:System.Data.Common.DbParameter.System#Data#IDataParameter#SourceVersion\n  id: System#Data#IDataParameter#SourceVersion\n  isEii: true\n  parent: System.Data.Common.DbParameter\n  langs:\n  - csharp\n  - vb\n  name: IDataParameter.SourceVersion\n  fullName: System.Data.Common.DbParameter.System.Data.IDataParameter.SourceVersion\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/ref/System.Data.Common.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Data.IDataParameter.SourceVersion\n    path: src/System.Data.Common/ref/System.Data.Common.cs\n    startLine: 424\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  syntax:\n    content: DataRowVersion IDataParameter.SourceVersion { get; set; }\n    content.vb: ReadOnly WriteOnly Property System.Data.IDataParameter.SourceVersion As DataRowVersion Implements IDataParameter.SourceVersion\n    parameters: []\n    return:\n      type: System.Data.DataRowVersion\n  implements:\n  - System.Data.IDataParameter.SourceVersion\n  modifiers.csharp:\n  - get\n  - set\n  name.vb: System.Data.IDataParameter.SourceVersion\n  nameWithType: DbParameter.IDataParameter.SourceVersion\n  nameWithType.vb: DbParameter.System.Data.IDataParameter.SourceVersion\n- uid: System.Data.Common.DbParameter.ResetDbType\n  commentId: M:System.Data.Common.DbParameter.ResetDbType\n  id: ResetDbType\n  parent: System.Data.Common.DbParameter\n  langs:\n  - csharp\n  - vb\n  name: ResetDbType()\n  fullName: System.Data.Common.DbParameter.ResetDbType()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ResetDbType\n    path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs\n    startLine: 26\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  summary: \"\\n<p>Resets the <strong>DbType</strong> property to its original settings.</p>\\n\"\n  syntax:\n    content: public abstract void ResetDbType()\n    content.vb: Public MustOverride Sub ResetDbType\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: DbParameter.ResetDbType()\nreferences:\n- uid: System.Data.Common\n  isExternal: false\n  name: System.Data.Common\n  fullName: System.Data.Common\n  nameWithType: System.Data.Common\n  commentId: N:System.Data.Common\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Data.IDbDataParameter\n  parent: System.Data\n  isExternal: false\n  name: IDbDataParameter\n  fullName: System.Data.IDbDataParameter\n  nameWithType: IDbDataParameter\n  commentId: T:System.Data.IDbDataParameter\n- uid: System.Data.IDataParameter\n  parent: System.Data\n  isExternal: false\n  name: IDataParameter\n  fullName: System.Data.IDataParameter\n  nameWithType: IDataParameter\n  commentId: T:System.Data.IDataParameter\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Data\n  isExternal: false\n  name: System.Data\n  fullName: System.Data\n  nameWithType: System.Data\n  commentId: N:System.Data\n- uid: System.Data.IDataParameter.DbType\n  parent: System.Data.IDataParameter\n  isExternal: false\n  name: DbType\n  fullName: System.Data.IDataParameter.DbType\n  nameWithType: IDataParameter.DbType\n  commentId: P:System.Data.IDataParameter.DbType\n- uid: System.Data.DbType\n  parent: System.Data\n  isExternal: false\n  name: DbType\n  fullName: System.Data.DbType\n  nameWithType: DbType\n  commentId: T:System.Data.DbType\n- uid: System.Data.IDataParameter.Direction\n  parent: System.Data.IDataParameter\n  isExternal: false\n  name: Direction\n  fullName: System.Data.IDataParameter.Direction\n  nameWithType: IDataParameter.Direction\n  commentId: P:System.Data.IDataParameter.Direction\n- uid: System.Data.ParameterDirection\n  parent: System.Data\n  isExternal: false\n  name: ParameterDirection\n  fullName: System.Data.ParameterDirection\n  nameWithType: ParameterDirection\n  commentId: T:System.Data.ParameterDirection\n- uid: System.Data.IDataParameter.IsNullable\n  parent: System.Data.IDataParameter\n  isExternal: false\n  name: IsNullable\n  fullName: System.Data.IDataParameter.IsNullable\n  nameWithType: IDataParameter.IsNullable\n  commentId: P:System.Data.IDataParameter.IsNullable\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Data.IDataParameter.ParameterName\n  parent: System.Data.IDataParameter\n  isExternal: false\n  name: ParameterName\n  fullName: System.Data.IDataParameter.ParameterName\n  nameWithType: IDataParameter.ParameterName\n  commentId: P:System.Data.IDataParameter.ParameterName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  fullName: System.Byte\n  nameWithType: Byte\n  commentId: T:System.Byte\n- uid: System.Data.IDbDataParameter.Size\n  parent: System.Data.IDbDataParameter\n  isExternal: false\n  name: Size\n  fullName: System.Data.IDbDataParameter.Size\n  nameWithType: IDbDataParameter.Size\n  commentId: P:System.Data.IDbDataParameter.Size\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Data.IDataParameter.SourceColumn\n  parent: System.Data.IDataParameter\n  isExternal: false\n  name: SourceColumn\n  fullName: System.Data.IDataParameter.SourceColumn\n  nameWithType: IDataParameter.SourceColumn\n  commentId: P:System.Data.IDataParameter.SourceColumn\n- uid: System.Data.IDbDataParameter.Precision\n  parent: System.Data.IDbDataParameter\n  isExternal: false\n  name: Precision\n  fullName: System.Data.IDbDataParameter.Precision\n  nameWithType: IDbDataParameter.Precision\n  commentId: P:System.Data.IDbDataParameter.Precision\n- uid: System.Data.IDbDataParameter.Scale\n  parent: System.Data.IDbDataParameter\n  isExternal: false\n  name: Scale\n  fullName: System.Data.IDbDataParameter.Scale\n  nameWithType: IDbDataParameter.Scale\n  commentId: P:System.Data.IDbDataParameter.Scale\n- uid: System.Data.IDataParameter.Value\n  parent: System.Data.IDataParameter\n  isExternal: false\n  name: Value\n  fullName: System.Data.IDataParameter.Value\n  nameWithType: IDataParameter.Value\n  commentId: P:System.Data.IDataParameter.Value\n- uid: System.Data.IDataParameter.SourceVersion\n  parent: System.Data.IDataParameter\n  isExternal: false\n  name: SourceVersion\n  fullName: System.Data.IDataParameter.SourceVersion\n  nameWithType: IDataParameter.SourceVersion\n  commentId: P:System.Data.IDataParameter.SourceVersion\n- uid: System.Data.DataRowVersion\n  parent: System.Data\n  isExternal: false\n  name: DataRowVersion\n  fullName: System.Data.DataRowVersion\n  nameWithType: DataRowVersion\n  commentId: T:System.Data.DataRowVersion\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n"}