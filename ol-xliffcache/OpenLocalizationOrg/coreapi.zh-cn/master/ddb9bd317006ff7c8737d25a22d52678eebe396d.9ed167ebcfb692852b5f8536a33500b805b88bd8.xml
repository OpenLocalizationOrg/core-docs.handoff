{"nodes":[{"pos":[6902,6915],"content":"SqlDataRecord","needQuote":true,"nodes":[{"content":"SqlDataRecord","pos":[0,13]}]},{"pos":[8341,8369],"content":"SqlDataRecord(SqlMetaData[])","needQuote":true,"nodes":[{"content":"SqlDataRecord(SqlMetaData[])","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The &lt;em&gt;metaData&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[9831,9883],"source":"\\n<p>The <em>metaData</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[9884,9890],"source":" </p>\\n"},{"pos":[10452,10462],"content":"FieldCount","needQuote":true,"nodes":[{"content":"FieldCount","pos":[0,10]}]},{"content":"\\n&lt;p&gt;The number of columns in the data row as an integer.&lt;/p&gt;\\n","pos":[11232,11295],"source":"\\n<p>The number of columns in the data row as an integer.</p>\\n"},{"pos":[11698,11709],"content":"Item[Int32]","needQuote":true,"nodes":[{"content":"Item[Int32]","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[12554,12602],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The CLR type value of the column specified by the &lt;em&gt;ordinal&lt;/em&gt;.&lt;/p&gt;\\n","pos":[12662,12740],"source":"\\n<p>The CLR type value of the column specified by the <em>ordinal</em>.</p>\\n"},{"pos":[13623,13635],"content":"Item[String]","needQuote":true,"nodes":[{"content":"Item[String]","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The name of the column.&lt;/p&gt;\\n","pos":[14472,14506],"source":"\\n<p>The name of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The CLR type value of the column specified by the &lt;em&gt;name&lt;/em&gt;.&lt;/p&gt;\\n","pos":[14566,14641],"source":"\\n<p>The CLR type value of the column specified by the <em>name</em>.</p>\\n"},{"pos":[15210,15227],"content":"GetBoolean(Int32)","needQuote":true,"nodes":[{"content":"GetBoolean(Int32)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[16093,16141],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The column specified by &lt;em&gt;ordinal&lt;/em&gt; is null.&lt;/p&gt;\\n","pos":[16776,16836],"source":"\\n<p>The column specified by <em>ordinal</em> is null.</p>\\n"},{"content":"\\n&lt;p&gt;There is a type mismatch.&lt;/p&gt;\\n","pos":[16939,16975],"source":"\\n<p>There is a type mismatch.</p>\\n"},{"pos":[17373,17387],"content":"GetByte(Int32)","needQuote":true,"nodes":[{"content":"GetByte(Int32)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[18235,18283],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The column specified by &lt;em&gt;ordinal&lt;/em&gt; is null.&lt;/p&gt;\\n","pos":[18912,18972],"source":"\\n<p>The column specified by <em>ordinal</em> is null.</p>\\n"},{"content":"\\n&lt;p&gt;There is a type mismatch.&lt;/p&gt;\\n","pos":[19075,19111],"source":"\\n<p>There is a type mismatch.</p>\\n"},{"pos":[19668,19712],"content":"GetBytes(Int32, Int64, Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"GetBytes(Int32, Int64, Byte[], Int32, Int32)","pos":[0,44]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[20785,20833],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The offset into the field value to start retrieving bytes.&lt;/p&gt;\\n","pos":[20902,20971],"source":"\\n<p>The offset into the field value to start retrieving bytes.</p>\\n"},{"content":"\\n&lt;p&gt;The target buffer to which to copy bytes.&lt;/p&gt;\\n","pos":[21036,21088],"source":"\\n<p>The target buffer to which to copy bytes.</p>\\n"},{"content":"\\n&lt;p&gt;The offset into the buffer to which to start copying bytes.&lt;/p&gt;\\n","pos":[21158,21228],"source":"\\n<p>The offset into the buffer to which to start copying bytes.</p>\\n"},{"content":"\\n&lt;p&gt;The number of bytes to copy to the buffer.&lt;/p&gt;\\n","pos":[21292,21345],"source":"\\n<p>The number of bytes to copy to the buffer.</p>\\n"},{"content":"\\n&lt;p&gt;The number of bytes copied.&lt;/p&gt;\\n","pos":[21404,21442],"source":"\\n<p>The number of bytes copied.</p>\\n"},{"content":"\\n&lt;p&gt;The column specified by &lt;em&gt;ordinal&lt;/em&gt; is null.&lt;/p&gt;\\n","pos":[21908,21968],"source":"\\n<p>The column specified by <em>ordinal</em> is null.</p>\\n"},{"content":"\\n&lt;p&gt;There is a type mismatch.&lt;/p&gt;\\n","pos":[22071,22107],"source":"\\n<p>There is a type mismatch.</p>\\n"},{"pos":[22802,22816],"content":"GetChar(Int32)","needQuote":true,"nodes":[{"content":"GetChar(Int32)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[23664,23712],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The column specified by &lt;em&gt;ordinal&lt;/em&gt; is null.&lt;/p&gt;\\n","pos":[24341,24401],"source":"\\n<p>The column specified by <em>ordinal</em> is null.</p>\\n"},{"content":"\\n&lt;p&gt;There is a type mismatch.&lt;/p&gt;\\n","pos":[24504,24540],"source":"\\n<p>There is a type mismatch.</p>\\n"},{"pos":[25097,25141],"content":"GetChars(Int32, Int64, Char[], Int32, Int32)","needQuote":true,"nodes":[{"content":"GetChars(Int32, Int64, Char[], Int32, Int32)","pos":[0,44]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[26214,26262],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The offset into the field value to start retrieving characters.&lt;/p&gt;\\n","pos":[26331,26405],"source":"\\n<p>The offset into the field value to start retrieving characters.</p>\\n"},{"content":"\\n&lt;p&gt;The target buffer to copy chars to.&lt;/p&gt;\\n","pos":[26470,26516],"source":"\\n<p>The target buffer to copy chars to.</p>\\n"},{"content":"\\n&lt;p&gt;The offset into the buffer to start copying chars to.&lt;/p&gt;\\n","pos":[26586,26650],"source":"\\n<p>The offset into the buffer to start copying chars to.</p>\\n"},{"content":"\\n&lt;p&gt;The number of chars to copy to the buffer.&lt;/p&gt;\\n","pos":[26714,26767],"source":"\\n<p>The number of chars to copy to the buffer.</p>\\n"},{"content":"\\n&lt;p&gt;The number of characters copied.&lt;/p&gt;\\n","pos":[26826,26869],"source":"\\n<p>The number of characters copied.</p>\\n"},{"content":"\\n&lt;p&gt;The column specified by &lt;em&gt;ordinal&lt;/em&gt; is null.&lt;/p&gt;\\n","pos":[27335,27395],"source":"\\n<p>The column specified by <em>ordinal</em> is null.</p>\\n"},{"content":"\\n&lt;p&gt;There is a type mismatch.&lt;/p&gt;\\n","pos":[27498,27534],"source":"\\n<p>There is a type mismatch.</p>\\n"},{"pos":[28253,28275],"content":"GetDataTypeName(Int32)","needQuote":true,"nodes":[{"content":"GetDataTypeName(Int32)","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[29109,29157],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;There is a type mismatch.&lt;/p&gt;\\n","pos":[29789,29825],"source":"\\n<p>There is a type mismatch.</p>\\n"},{"pos":[30240,30258],"content":"GetDateTime(Int32)","needQuote":true,"nodes":[{"content":"GetDateTime(Int32)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[31130,31178],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The column specified by &lt;em&gt;ordinal&lt;/em&gt; is null.&lt;/p&gt;\\n","pos":[31815,31875],"source":"\\n<p>The column specified by <em>ordinal</em> is null.</p>\\n"},{"content":"\\n&lt;p&gt;There is a type mismatch.&lt;/p&gt;\\n","pos":[31978,32014],"source":"\\n<p>There is a type mismatch.</p>\\n"},{"pos":[32443,32467],"content":"GetDateTimeOffset(Int32)","needQuote":true,"nodes":[{"content":"GetDateTimeOffset(Int32)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;The zero-based column ordinal.&lt;/p&gt;\\n","pos":[33366,33407],"source":"\\n<p>The zero-based column ordinal.</p>\\n"},{"pos":[34021,34038],"content":"GetDecimal(Int32)","needQuote":true,"nodes":[{"content":"GetDecimal(Int32)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[34907,34955],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The column specified by &lt;em&gt;ordinal&lt;/em&gt; is null.&lt;/p&gt;\\n","pos":[35590,35650],"source":"\\n<p>The column specified by <em>ordinal</em> is null.</p>\\n"},{"content":"\\n&lt;p&gt;There is a type mismatch.&lt;/p&gt;\\n","pos":[35753,35789],"source":"\\n<p>There is a type mismatch.</p>\\n"},{"pos":[36193,36209],"content":"GetDouble(Int32)","needQuote":true,"nodes":[{"content":"GetDouble(Int32)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[37071,37119],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The column specified by &lt;em&gt;ordinal&lt;/em&gt; is null.&lt;/p&gt;\\n","pos":[37752,37812],"source":"\\n<p>The column specified by <em>ordinal</em> is null.</p>\\n"},{"content":"\\n&lt;p&gt;There is a type mismatch.&lt;/p&gt;\\n","pos":[37915,37951],"source":"\\n<p>There is a type mismatch.</p>\\n"},{"pos":[38363,38382],"content":"GetFieldType(Int32)","needQuote":true,"nodes":[{"content":"GetFieldType(Int32)","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[39348,39396],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The column is of a user-defined type that is not available to the calling application domain.&lt;/p&gt;\\n","pos":[39996,40100],"source":"\\n<p>The column is of a user-defined type that is not available to the calling application domain.</p>\\n"},{"content":"\\n&lt;p&gt;The column is of a user-defined type that is not available to the calling application domain.&lt;/p&gt;\\n","pos":[40211,40315],"source":"\\n<p>The column is of a user-defined type that is not available to the calling application domain.</p>\\n"},{"content":"\\n&lt;p&gt;There is a type mismatch.&lt;/p&gt;\\n","pos":[40418,40454],"source":"\\n<p>There is a type mismatch.</p>\\n"},{"pos":[40857,40872],"content":"GetFloat(Int32)","needQuote":true,"nodes":[{"content":"GetFloat(Int32)","pos":[0,15]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[41678,41726],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The column value as a &lt;strong&gt;float&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[41786,41842],"source":"\\n<p>The column value as a <strong>float</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The column specified by &lt;em&gt;ordinal&lt;/em&gt; is null.&lt;/p&gt;\\n","pos":[42308,42368],"source":"\\n<p>The column specified by <em>ordinal</em> is null.</p>\\n"},{"content":"\\n&lt;p&gt;There is a type mismatch.&lt;/p&gt;\\n","pos":[42471,42507],"source":"\\n<p>There is a type mismatch.</p>\\n"},{"pos":[42903,42917],"content":"GetGuid(Int32)","needQuote":true,"nodes":[{"content":"GetGuid(Int32)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[43765,43813],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The column specified by &lt;em&gt;ordinal&lt;/em&gt; is null.&lt;/p&gt;\\n","pos":[44442,44502],"source":"\\n<p>The column specified by <em>ordinal</em> is null.</p>\\n"},{"content":"\\n&lt;p&gt;There is a type mismatch.&lt;/p&gt;\\n","pos":[44605,44641],"source":"\\n<p>There is a type mismatch.</p>\\n"},{"pos":[45039,45054],"content":"GetInt16(Int32)","needQuote":true,"nodes":[{"content":"GetInt16(Int32)","pos":[0,15]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[45909,45957],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The column specified by &lt;em&gt;ordinal&lt;/em&gt; is null.&lt;/p&gt;\\n","pos":[46588,46648],"source":"\\n<p>The column specified by <em>ordinal</em> is null.</p>\\n"},{"content":"\\n&lt;p&gt;There is a type mismatch.&lt;/p&gt;\\n","pos":[46751,46787],"source":"\\n<p>There is a type mismatch.</p>\\n"},{"pos":[47186,47201],"content":"GetInt32(Int32)","needQuote":true,"nodes":[{"content":"GetInt32(Int32)","pos":[0,15]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[48056,48104],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The column specified by &lt;em&gt;ordinal&lt;/em&gt; is null.&lt;/p&gt;\\n","pos":[48735,48795],"source":"\\n<p>The column specified by <em>ordinal</em> is null.</p>\\n"},{"content":"\\n&lt;p&gt;There is a type mismatch.&lt;/p&gt;\\n","pos":[48898,48934],"source":"\\n<p>There is a type mismatch.</p>\\n"},{"pos":[49333,49348],"content":"GetInt64(Int32)","needQuote":true,"nodes":[{"content":"GetInt64(Int32)","pos":[0,15]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[50201,50249],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The column specified by &lt;em&gt;ordinal&lt;/em&gt; is null.&lt;/p&gt;\\n","pos":[50880,50940],"source":"\\n<p>The column specified by <em>ordinal</em> is null.</p>\\n"},{"content":"\\n&lt;p&gt;There is a type mismatch.&lt;/p&gt;\\n","pos":[51043,51079],"source":"\\n<p>There is a type mismatch.</p>\\n"},{"pos":[51475,51489],"content":"GetName(Int32)","needQuote":true,"nodes":[{"content":"GetName(Int32)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[52273,52321],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;There is a type mismatch.&lt;/p&gt;\\n","pos":[52932,52968],"source":"\\n<p>There is a type mismatch.</p>\\n"},{"pos":[53375,53393],"content":"GetOrdinal(String)","needQuote":true,"nodes":[{"content":"GetOrdinal(String)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The name of the column to look up.&lt;/p&gt;\\n","pos":[54174,54219],"source":"\\n<p>The name of the column to look up.</p>\\n"},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column as an integer.&lt;/p&gt;\\n","pos":[54278,54340],"source":"\\n<p>The zero-based ordinal of the column as an integer.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[54459,54511],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The column name could not be found.&lt;/p&gt;\\n","pos":[54622,54668],"source":"\\n<p>The column name could not be found.</p>\\n"},{"content":"\\n&lt;p&gt;There is a type mismatch.&lt;/p&gt;\\n","pos":[54771,54807],"source":"\\n<p>There is a type mismatch.</p>\\n"},{"pos":[55221,55240],"content":"GetSqlBinary(Int32)","needQuote":true,"nodes":[{"content":"GetSqlBinary(Int32)","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[56137,56185],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;There is a type mismatch.&lt;/p&gt;\\n","pos":[56822,56858],"source":"\\n<p>There is a type mismatch.</p>\\n"},{"pos":[57276,57296],"content":"GetSqlBoolean(Int32)","needQuote":true,"nodes":[{"content":"GetSqlBoolean(Int32)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[58200,58248],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;There is a type mismatch.&lt;/p&gt;\\n","pos":[58887,58923],"source":"\\n<p>There is a type mismatch.</p>\\n"},{"pos":[59333,59350],"content":"GetSqlByte(Int32)","needQuote":true,"nodes":[{"content":"GetSqlByte(Int32)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[60233,60281],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;There is a type mismatch.&lt;/p&gt;\\n","pos":[60914,60950],"source":"\\n<p>There is a type mismatch.</p>\\n"},{"pos":[61360,61378],"content":"GetSqlBytes(Int32)","needQuote":true,"nodes":[{"content":"GetSqlBytes(Int32)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[62268,62316],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;There is a type mismatch.&lt;/p&gt;\\n","pos":[62951,62987],"source":"\\n<p>There is a type mismatch.</p>\\n"},{"pos":[63398,63416],"content":"GetSqlChars(Int32)","needQuote":true,"nodes":[{"content":"GetSqlChars(Int32)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[64306,64354],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;There is a type mismatch.&lt;/p&gt;\\n","pos":[64989,65025],"source":"\\n<p>There is a type mismatch.</p>\\n"},{"pos":[65445,65466],"content":"GetSqlDateTime(Int32)","needQuote":true,"nodes":[{"content":"GetSqlDateTime(Int32)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[66377,66425],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;There is a type mismatch.&lt;/p&gt;\\n","pos":[67066,67102],"source":"\\n<p>There is a type mismatch.</p>\\n"},{"pos":[67522,67542],"content":"GetSqlDecimal(Int32)","needQuote":true,"nodes":[{"content":"GetSqlDecimal(Int32)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[68446,68494],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;There is a type mismatch.&lt;/p&gt;\\n","pos":[69133,69169],"source":"\\n<p>There is a type mismatch.</p>\\n"},{"pos":[69585,69604],"content":"GetSqlDouble(Int32)","needQuote":true,"nodes":[{"content":"GetSqlDouble(Int32)","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[70501,70549],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;There is a type mismatch.&lt;/p&gt;\\n","pos":[71186,71222],"source":"\\n<p>There is a type mismatch.</p>\\n"},{"pos":[71646,71668],"content":"GetSqlFieldType(Int32)","needQuote":true,"nodes":[{"content":"GetSqlFieldType(Int32)","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[72693,72741],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The column is of a user-defined type that is not available to the calling application domain.&lt;/p&gt;\\n","pos":[73341,73445],"source":"\\n<p>The column is of a user-defined type that is not available to the calling application domain.</p>\\n"},{"content":"\\n&lt;p&gt;The column is of a user-defined type that is not available to the calling application domain.&lt;/p&gt;\\n","pos":[73556,73660],"source":"\\n<p>The column is of a user-defined type that is not available to the calling application domain.</p>\\n"},{"content":"\\n&lt;p&gt;There is a type mismatch.&lt;/p&gt;\\n","pos":[73763,73799],"source":"\\n<p>There is a type mismatch.</p>\\n"},{"pos":[74211,74228],"content":"GetSqlGuid(Int32)","needQuote":true,"nodes":[{"content":"GetSqlGuid(Int32)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[75111,75159],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;There is a type mismatch.&lt;/p&gt;\\n","pos":[75792,75828],"source":"\\n<p>There is a type mismatch.</p>\\n"},{"pos":[76238,76256],"content":"GetSqlInt16(Int32)","needQuote":true,"nodes":[{"content":"GetSqlInt16(Int32)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[77146,77194],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;There is a type mismatch.&lt;/p&gt;\\n","pos":[77829,77865],"source":"\\n<p>There is a type mismatch.</p>\\n"},{"pos":[78276,78294],"content":"GetSqlInt32(Int32)","needQuote":true,"nodes":[{"content":"GetSqlInt32(Int32)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[79184,79232],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;There is a type mismatch.&lt;/p&gt;\\n","pos":[79867,79903],"source":"\\n<p>There is a type mismatch.</p>\\n"},{"pos":[80314,80332],"content":"GetSqlInt64(Int32)","needQuote":true,"nodes":[{"content":"GetSqlInt64(Int32)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[81222,81270],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;There is a type mismatch.&lt;/p&gt;\\n","pos":[81905,81941],"source":"\\n<p>There is a type mismatch.</p>\\n"},{"pos":[82361,82382],"content":"GetSqlMetaData(Int32)","needQuote":true,"nodes":[{"content":"GetSqlMetaData(Int32)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[83327,83375],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;There is a type mismatch.&lt;/p&gt;\\n","pos":[84038,84074],"source":"\\n<p>There is a type mismatch.</p>\\n"},{"pos":[84488,84506],"content":"GetSqlMoney(Int32)","needQuote":true,"nodes":[{"content":"GetSqlMoney(Int32)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[85396,85444],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;There is a type mismatch.&lt;/p&gt;\\n","pos":[86079,86115],"source":"\\n<p>There is a type mismatch.</p>\\n"},{"pos":[86529,86548],"content":"GetSqlSingle(Int32)","needQuote":true,"nodes":[{"content":"GetSqlSingle(Int32)","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[87445,87493],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;There is a type mismatch.&lt;/p&gt;\\n","pos":[88130,88166],"source":"\\n<p>There is a type mismatch.</p>\\n"},{"pos":[88581,88600],"content":"GetSqlString(Int32)","needQuote":true,"nodes":[{"content":"GetSqlString(Int32)","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[89497,89545],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;There is a type mismatch.&lt;/p&gt;\\n","pos":[90182,90218],"source":"\\n<p>There is a type mismatch.</p>\\n"},{"pos":[90630,90648],"content":"GetSqlValue(Int32)","needQuote":true,"nodes":[{"content":"GetSqlValue(Int32)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[91493,91541],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;There is a type mismatch.&lt;/p&gt;\\n","pos":[92184,92220],"source":"\\n<p>There is a type mismatch.</p>\\n"},{"pos":[92723,92745],"content":"GetSqlValues(Object[])","needQuote":true,"nodes":[{"content":"GetSqlValues(Object[])","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The array into which to copy the values column values.","pos":[93589,93648],"source":"\\n<p>The array into which to copy the values column values."},{"content":"&lt;/p&gt;\\n","pos":[93649,93655],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;values&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[93964,94018],"source":"\\n<p>\\n<em>values</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;There is a type mismatch.&lt;/p&gt;\\n","pos":[94121,94157],"source":"\\n<p>There is a type mismatch.</p>\\n"},{"pos":[94822,94838],"content":"GetSqlXml(Int32)","needQuote":true,"nodes":[{"content":"GetSqlXml(Int32)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[95714,95762],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;There is a type mismatch.&lt;/p&gt;\\n","pos":[96399,96435],"source":"\\n<p>There is a type mismatch.</p>\\n"},{"pos":[96838,96854],"content":"GetString(Int32)","needQuote":true,"nodes":[{"content":"GetString(Int32)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[97716,97764],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;There is a type mismatch.&lt;/p&gt;\\n","pos":[98373,98409],"source":"\\n<p>There is a type mismatch.</p>\\n"},{"pos":[98818,98836],"content":"GetTimeSpan(Int32)","needQuote":true,"nodes":[{"content":"GetTimeSpan(Int32)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The zero-based column ordinal.&lt;/p&gt;\\n","pos":[99693,99734],"source":"\\n<p>The zero-based column ordinal.</p>\\n"},{"pos":[100324,100339],"content":"GetValue(Int32)","needQuote":true,"nodes":[{"content":"GetValue(Int32)","pos":[0,15]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[101164,101212],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The CLR type value of the column specified by the ordinal.&lt;/p&gt;\\n","pos":[101272,101341],"source":"\\n<p>The CLR type value of the column specified by the ordinal.</p>\\n"},{"content":"\\n&lt;p&gt;There is a type mismatch.&lt;/p&gt;\\n","pos":[101777,101813],"source":"\\n<p>There is a type mismatch.</p>\\n"},{"pos":[102224,102243],"content":"GetValues(Object[])","needQuote":true,"nodes":[{"content":"GetValues(Object[])","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The array into which to copy the values column values.&lt;/p&gt;\\n","pos":[103093,103158],"source":"\\n<p>The array into which to copy the values column values.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;values&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[103467,103521],"source":"\\n<p>\\n<em>values</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;There is a type mismatch.&lt;/p&gt;\\n","pos":[103624,103660],"source":"\\n<p>There is a type mismatch.</p>\\n"},{"pos":[104230,104245],"content":"IsDBNull(Int32)","needQuote":true,"nodes":[{"content":"IsDBNull(Int32)","pos":[0,15]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[105045,105093],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the column is null; &lt;strong&gt;false&lt;/strong&gt; otherwise.&lt;/p&gt;\\n","pos":[105154,105245],"source":"\\n<p>\\n<strong>true</strong> if the column is null; <strong>false</strong> otherwise.</p>\\n"},{"pos":[106028,106054],"content":"SetBoolean(Int32, Boolean)","needQuote":true,"nodes":[{"content":"SetBoolean(Int32, Boolean)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[106948,106996],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The new value of the column.&lt;/p&gt;\\n","pos":[107061,107100],"source":"\\n<p>The new value of the column.</p>\\n"},{"pos":[107543,107563],"content":"SetByte(Int32, Byte)","needQuote":true,"nodes":[{"content":"SetByte(Int32, Byte)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[108436,108484],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The new value of the column.&lt;/p&gt;\\n","pos":[108546,108585],"source":"\\n<p>The new value of the column.</p>\\n"},{"pos":[109487,109531],"content":"SetBytes(Int32, Int64, Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"SetBytes(Int32, Int64, Byte[], Int32, Int32)","pos":[0,44]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[110581,110629],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The offset into the field value to start copying bytes.&lt;/p&gt;\\n","pos":[110698,110764],"source":"\\n<p>The offset into the field value to start copying bytes.</p>\\n"},{"content":"\\n&lt;p&gt;The target buffer from which to copy bytes.&lt;/p&gt;\\n","pos":[110829,110883],"source":"\\n<p>The target buffer from which to copy bytes.</p>\\n"},{"content":"\\n&lt;p&gt;The offset into the buffer from which to start copying bytes.&lt;/p&gt;\\n","pos":[110953,111025],"source":"\\n<p>The offset into the buffer from which to start copying bytes.</p>\\n"},{"content":"\\n&lt;p&gt;The number of bytes to copy from the buffer.&lt;/p&gt;\\n","pos":[111089,111144],"source":"\\n<p>The number of bytes to copy from the buffer.</p>\\n"},{"pos":[112214,112234],"content":"SetChar(Int32, Char)","needQuote":true,"nodes":[{"content":"SetChar(Int32, Char)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[113107,113155],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The new value of the column.&lt;/p&gt;\\n","pos":[113217,113256],"source":"\\n<p>The new value of the column.</p>\\n"},{"pos":[114158,114202],"content":"SetChars(Int32, Int64, Char[], Int32, Int32)","needQuote":true,"nodes":[{"content":"SetChars(Int32, Int64, Char[], Int32, Int32)","pos":[0,44]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[115252,115300],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The offset into the field value to start copying characters.&lt;/p&gt;\\n","pos":[115369,115440],"source":"\\n<p>The offset into the field value to start copying characters.</p>\\n"},{"content":"\\n&lt;p&gt;The target buffer from which to copy chars.&lt;/p&gt;\\n","pos":[115505,115559],"source":"\\n<p>The target buffer from which to copy chars.</p>\\n"},{"content":"\\n&lt;p&gt;The offset into the buffer from which to start copying chars.&lt;/p&gt;\\n","pos":[115629,115701],"source":"\\n<p>The offset into the buffer from which to start copying chars.</p>\\n"},{"content":"\\n&lt;p&gt;The number of chars to copy from the buffer.&lt;/p&gt;\\n","pos":[115765,115820],"source":"\\n<p>The number of chars to copy from the buffer.</p>\\n"},{"pos":[116914,116942],"content":"SetDateTime(Int32, DateTime)","needQuote":true,"nodes":[{"content":"SetDateTime(Int32, DateTime)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[117843,117891],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The new value of the column.&lt;/p&gt;\\n","pos":[117957,117996],"source":"\\n<p>The new value of the column.</p>\\n"},{"pos":[118840,118880],"content":"SetDateTimeOffset(Int32, DateTimeOffset)","needQuote":true,"nodes":[{"content":"SetDateTimeOffset(Int32, DateTimeOffset)","pos":[0,40]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[119827,119875],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The new value of the column.&lt;/p&gt;\\n","pos":[119947,119986],"source":"\\n<p>The new value of the column.</p>\\n"},{"pos":[120413,120429],"content":"SetDBNull(Int32)","needQuote":true,"nodes":[{"content":"SetDBNull(Int32)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[121256,121304],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"pos":[121755,121781],"content":"SetDecimal(Int32, Decimal)","needQuote":true,"nodes":[{"content":"SetDecimal(Int32, Decimal)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[122678,122726],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The new value of the column.&lt;/p&gt;\\n","pos":[122791,122830],"source":"\\n<p>The new value of the column.</p>\\n"},{"pos":[123624,123648],"content":"SetDouble(Int32, Double)","needQuote":true,"nodes":[{"content":"SetDouble(Int32, Double)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[124537,124585],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The new value of the column.&lt;/p&gt;\\n","pos":[124649,124688],"source":"\\n<p>The new value of the column.</p>\\n"},{"pos":[125477,125500],"content":"SetFloat(Int32, Single)","needQuote":true,"nodes":[{"content":"SetFloat(Int32, Single)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[126333,126381],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The new value of the column.&lt;/p&gt;\\n","pos":[126445,126484],"source":"\\n<p>The new value of the column.</p>\\n"},{"pos":[127263,127283],"content":"SetGuid(Int32, Guid)","needQuote":true,"nodes":[{"content":"SetGuid(Int32, Guid)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[128156,128204],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The new value of the column.&lt;/p&gt;\\n","pos":[128266,128305],"source":"\\n<p>The new value of the column.</p>\\n"},{"pos":[129087,129109],"content":"SetInt16(Int32, Int16)","needQuote":true,"nodes":[{"content":"SetInt16(Int32, Int16)","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[129990,130038],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The new value of the column.&lt;/p&gt;\\n","pos":[130101,130140],"source":"\\n<p>The new value of the column.</p>\\n"},{"pos":[130924,130946],"content":"SetInt32(Int32, Int32)","needQuote":true,"nodes":[{"content":"SetInt32(Int32, Int32)","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[131827,131875],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The new value of the column.&lt;/p&gt;\\n","pos":[131938,131977],"source":"\\n<p>The new value of the column.</p>\\n"},{"pos":[132761,132783],"content":"SetInt64(Int32, Int64)","needQuote":true,"nodes":[{"content":"SetInt64(Int32, Int64)","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[133662,133710],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The new value of the column.&lt;/p&gt;\\n","pos":[133773,133812],"source":"\\n<p>The new value of the column.</p>\\n"},{"pos":[134662,134692],"content":"SetSqlBinary(Int32, SqlBinary)","needQuote":true,"nodes":[{"content":"SetSqlBinary(Int32, SqlBinary)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[135633,135681],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The new value of the column.&lt;/p&gt;\\n","pos":[135762,135801],"source":"\\n<p>The new value of the column.</p>\\n"},{"pos":[136665,136697],"content":"SetSqlBoolean(Int32, SqlBoolean)","needQuote":true,"nodes":[{"content":"SetSqlBoolean(Int32, SqlBoolean)","pos":[0,32]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[137646,137694],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The new value of the column.&lt;/p&gt;\\n","pos":[137776,137815],"source":"\\n<p>The new value of the column.</p>\\n"},{"pos":[138663,138689],"content":"SetSqlByte(Int32, SqlByte)","needQuote":true,"nodes":[{"content":"SetSqlByte(Int32, SqlByte)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[139614,139662],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The new value of the column.&lt;/p&gt;\\n","pos":[139741,139780],"source":"\\n<p>The new value of the column.</p>\\n"},{"pos":[140628,140656],"content":"SetSqlBytes(Int32, SqlBytes)","needQuote":true,"nodes":[{"content":"SetSqlBytes(Int32, SqlBytes)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[141589,141637],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The new value of the column.&lt;/p&gt;\\n","pos":[141717,141756],"source":"\\n<p>The new value of the column.</p>\\n"},{"pos":[142606,142634],"content":"SetSqlChars(Int32, SqlChars)","needQuote":true,"nodes":[{"content":"SetSqlChars(Int32, SqlChars)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[143567,143615],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The new value of the column.&lt;/p&gt;\\n","pos":[143695,143734],"source":"\\n<p>The new value of the column.</p>\\n"},{"pos":[144602,144636],"content":"SetSqlDateTime(Int32, SqlDateTime)","needQuote":true,"nodes":[{"content":"SetSqlDateTime(Int32, SqlDateTime)","pos":[0,34]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[145593,145641],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The new value of the column.&lt;/p&gt;\\n","pos":[145724,145763],"source":"\\n<p>The new value of the column.</p>\\n"},{"pos":[146631,146663],"content":"SetSqlDecimal(Int32, SqlDecimal)","needQuote":true,"nodes":[{"content":"SetSqlDecimal(Int32, SqlDecimal)","pos":[0,32]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[147612,147660],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The new value of the column.&lt;/p&gt;\\n","pos":[147742,147781],"source":"\\n<p>The new value of the column.</p>\\n"},{"pos":[148641,148671],"content":"SetSqlDouble(Int32, SqlDouble)","needQuote":true,"nodes":[{"content":"SetSqlDouble(Int32, SqlDouble)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[149612,149660],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The new value of the column.&lt;/p&gt;\\n","pos":[149741,149780],"source":"\\n<p>The new value of the column.</p>\\n"},{"pos":[150626,150652],"content":"SetSqlGuid(Int32, SqlGuid)","needQuote":true,"nodes":[{"content":"SetSqlGuid(Int32, SqlGuid)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[151577,151625],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The new value of the column.&lt;/p&gt;\\n","pos":[151704,151743],"source":"\\n<p>The new value of the column.</p>\\n"},{"pos":[152591,152619],"content":"SetSqlInt16(Int32, SqlInt16)","needQuote":true,"nodes":[{"content":"SetSqlInt16(Int32, SqlInt16)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[153552,153600],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The new value of the column.&lt;/p&gt;\\n","pos":[153680,153719],"source":"\\n<p>The new value of the column.</p>\\n"},{"pos":[154569,154597],"content":"SetSqlInt32(Int32, SqlInt32)","needQuote":true,"nodes":[{"content":"SetSqlInt32(Int32, SqlInt32)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[155530,155578],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The new value of the column.&lt;/p&gt;\\n","pos":[155658,155697],"source":"\\n<p>The new value of the column.</p>\\n"},{"pos":[156547,156575],"content":"SetSqlInt64(Int32, SqlInt64)","needQuote":true,"nodes":[{"content":"SetSqlInt64(Int32, SqlInt64)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[157508,157556],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The new value of the column.&lt;/p&gt;\\n","pos":[157636,157675],"source":"\\n<p>The new value of the column.</p>\\n"},{"pos":[158525,158553],"content":"SetSqlMoney(Int32, SqlMoney)","needQuote":true,"nodes":[{"content":"SetSqlMoney(Int32, SqlMoney)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[159486,159534],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The new value of the column.&lt;/p&gt;\\n","pos":[159614,159653],"source":"\\n<p>The new value of the column.</p>\\n"},{"pos":[160509,160539],"content":"SetSqlSingle(Int32, SqlSingle)","needQuote":true,"nodes":[{"content":"SetSqlSingle(Int32, SqlSingle)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[161480,161528],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The new value of the column.&lt;/p&gt;\\n","pos":[161609,161648],"source":"\\n<p>The new value of the column.</p>\\n"},{"pos":[162506,162536],"content":"SetSqlString(Int32, SqlString)","needQuote":true,"nodes":[{"content":"SetSqlString(Int32, SqlString)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[163477,163525],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The new value of the column.&lt;/p&gt;\\n","pos":[163606,163645],"source":"\\n<p>The new value of the column.</p>\\n"},{"pos":[164485,164509],"content":"SetSqlXml(Int32, SqlXml)","needQuote":true,"nodes":[{"content":"SetSqlXml(Int32, SqlXml)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[165426,165474],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The new value of the column.&lt;/p&gt;\\n","pos":[165552,165591],"source":"\\n<p>The new value of the column.</p>\\n"},{"pos":[166383,166407],"content":"SetString(Int32, String)","needQuote":true,"nodes":[{"content":"SetString(Int32, String)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[167296,167344],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The new value of the column.&lt;/p&gt;\\n","pos":[167408,167447],"source":"\\n<p>The new value of the column.</p>\\n"},{"pos":[168251,168279],"content":"SetTimeSpan(Int32, TimeSpan)","needQuote":true,"nodes":[{"content":"SetTimeSpan(Int32, TimeSpan)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[169172,169220],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The new value of the column.&lt;/p&gt;\\n","pos":[169286,169325],"source":"\\n<p>The new value of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;ordinal&lt;/em&gt; passed in is a negative number.&lt;/p&gt;\\n","pos":[169456,169519],"source":"\\n<p>The <em>ordinal</em> passed in is a negative number.</p>\\n"},{"pos":[170212,170235],"content":"SetValue(Int32, Object)","needQuote":true,"nodes":[{"content":"SetValue(Int32, Object)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The zero-based ordinal of the column.&lt;/p&gt;\\n","pos":[171104,171152],"source":"\\n<p>The zero-based ordinal of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The new value for the specified column.&lt;/p&gt;\\n","pos":[171216,171266],"source":"\\n<p>The new value for the specified column.</p>\\n"},{"pos":[172024,172043],"content":"SetValues(Object[])","needQuote":true,"nodes":[{"content":"SetValues(Object[])","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The number of column values set as an integer.&lt;/p&gt;\\n","pos":[173341,173398],"source":"\\n<p>The number of column values set as an integer.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;values&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[173517,173571],"source":"\\n<p>\\n<em>values</em> is <strong>null</strong>.</p>\\n"},{"pos":[174231,174257],"content":"Microsoft.SqlServer.Server","needQuote":true,"nodes":[{"content":"Microsoft.SqlServer.Server","pos":[0,26]}]},{"pos":[174448,174454],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[174614,174624],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[174719,174727],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[174796,174797],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[174824,174825],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[174895,174903],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[174972,174973],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[175000,175001],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[175184,175198],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[175317,175323],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[175390,175391],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[175441,175447],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[175507,175508],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[175591,175597],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[175664,175665],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[175715,175721],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[175781,175782],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[175996,176018],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[176166,176172],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[176239,176240],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[176290,176296],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[176357,176358]},{"pos":[176413,176419],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[176479,176480],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[176577,176583],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[176650,176651],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[176701,176707],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[176768,176769]},{"pos":[176824,176830],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[176890,176891],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[177136,177167],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[177333,177348],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[177424,177425],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[177475,177481],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[177542,177543]},{"pos":[177598,177604],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[177664,177665],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[177771,177786],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[177862,177863],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[177913,177919],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[177980,177981]},{"pos":[178036,178042],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[178102,178103],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[178333,178346],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[178447,178458],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[178530,178531],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[178558,178559],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[178632,178643],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[178715,178716],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[178743,178744],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[178919,178928],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[179021,179028],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[179096,179097],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[179124,179125],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[179194,179201],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[179269,179270],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[179297,179298],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[179473,179490],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[179599,179614],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[179690,179691],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[179718,179719],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[179796,179811],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[179887,179888],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[179915,179916],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[180061,180067],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[180188,180201],"content":"SqlMetaData[]","needQuote":true,"nodes":[{"content":"SqlMetaData[]","pos":[0,13]}]},{"pos":[180409,180420],"content":"SqlMetaData","needQuote":true,"nodes":[{"content":"SqlMetaData","pos":[0,11]}]},{"content":"[]","pos":[180485,180487]},{"pos":[180577,180588],"content":"SqlMetaData","needQuote":true,"nodes":[{"content":"SqlMetaData","pos":[0,11]}]},{"pos":[180652,180654],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[180800,180805],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[180947,180953],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[181099,181106],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[181252,181256],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[181394,181399],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[181504,181510],"content":"Byte[]","needQuote":true,"nodes":[{"content":"Byte[]","pos":[0,6]}]},{"pos":[181630,181634],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[181693,181695]},{"pos":[181758,181762],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[181820,181822],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[181953,181957],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[182059,182065],"content":"Char[]","needQuote":true,"nodes":[{"content":"Char[]","pos":[0,6]}]},{"pos":[182185,182189],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"content":"[]","pos":[182248,182250]},{"pos":[182313,182317],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[182375,182377],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[182512,182520],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[182679,182693],"content":"DateTimeOffset","needQuote":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[182863,182870],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[183018,183024],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[183167,183171],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[183310,183316],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[183459,183463],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[183601,183606],"content":"Int16","needQuote":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"pos":[183779,183788],"content":"SqlBinary","needQuote":true,"nodes":[{"content":"SqlBinary","pos":[0,9]}]},{"pos":[183960,183980],"content":"System.Data.SqlTypes","needQuote":true,"nodes":[{"content":"System.Data.SqlTypes","pos":[0,20]}]},{"pos":[184185,184195],"content":"SqlBoolean","needQuote":true,"nodes":[{"content":"SqlBoolean","pos":[0,10]}]},{"pos":[184409,184416],"content":"SqlByte","needQuote":true,"nodes":[{"content":"SqlByte","pos":[0,7]}]},{"pos":[184622,184630],"content":"SqlBytes","needQuote":true,"nodes":[{"content":"SqlBytes","pos":[0,8]}]},{"pos":[184839,184847],"content":"SqlChars","needQuote":true,"nodes":[{"content":"SqlChars","pos":[0,8]}]},{"pos":[185059,185070],"content":"SqlDateTime","needQuote":true,"nodes":[{"content":"SqlDateTime","pos":[0,11]}]},{"pos":[185290,185300],"content":"SqlDecimal","needQuote":true,"nodes":[{"content":"SqlDecimal","pos":[0,10]}]},{"pos":[185516,185525],"content":"SqlDouble","needQuote":true,"nodes":[{"content":"SqlDouble","pos":[0,9]}]},{"pos":[185736,185743],"content":"SqlGuid","needQuote":true,"nodes":[{"content":"SqlGuid","pos":[0,7]}]},{"pos":[185949,185957],"content":"SqlInt16","needQuote":true,"nodes":[{"content":"SqlInt16","pos":[0,8]}]},{"pos":[186166,186174],"content":"SqlInt32","needQuote":true,"nodes":[{"content":"SqlInt32","pos":[0,8]}]},{"pos":[186383,186391],"content":"SqlInt64","needQuote":true,"nodes":[{"content":"SqlInt64","pos":[0,8]}]},{"pos":[186615,186626],"content":"SqlMetaData","needQuote":true,"nodes":[{"content":"SqlMetaData","pos":[0,11]}]},{"pos":[186856,186864],"content":"SqlMoney","needQuote":true,"nodes":[{"content":"SqlMoney","pos":[0,8]}]},{"pos":[187074,187083],"content":"SqlSingle","needQuote":true,"nodes":[{"content":"SqlSingle","pos":[0,9]}]},{"pos":[187296,187305],"content":"SqlString","needQuote":true,"nodes":[{"content":"SqlString","pos":[0,9]}]},{"pos":[187452,187460],"content":"Object[]","needQuote":true,"nodes":[{"content":"Object[]","pos":[0,8]}]},{"pos":[187588,187594],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[187655,187657]},{"pos":[187722,187728],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[187788,187790],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[187955,187961],"content":"SqlXml","needQuote":true,"nodes":[{"content":"SqlXml","pos":[0,6]}]},{"pos":[188136,188144],"content":"TimeSpan","needQuote":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[188293,188314],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[188505,188529],"content":"IndexOutOfRangeException","needQuote":true,"nodes":[{"content":"IndexOutOfRangeException","pos":[0,24]}]},{"pos":[188740,188761],"content":"SqlNullValueException","needQuote":true,"nodes":[{"content":"SqlNullValueException","pos":[0,21]}]},{"pos":[188976,188996],"content":"InvalidCastException","needQuote":true,"nodes":[{"content":"InvalidCastException","pos":[0,20]}]},{"pos":[189187,189214],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]},{"pos":[189433,189450],"content":"TypeLoadException","needQuote":true,"nodes":[{"content":"TypeLoadException","pos":[0,17]}]},{"pos":[189629,189650],"content":"FileNotFoundException","needQuote":true,"nodes":[{"content":"FileNotFoundException","pos":[0,21]}]},{"pos":[189857,189874],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]}],"content":"items:\n- uid: Microsoft.SqlServer.Server.SqlDataRecord\n  commentId: T:Microsoft.SqlServer.Server.SqlDataRecord\n  id: SqlDataRecord\n  parent: Microsoft.SqlServer.Server\n  children:\n  - Microsoft.SqlServer.Server.SqlDataRecord.#ctor(Microsoft.SqlServer.Server.SqlMetaData[])\n  - Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\n  - Microsoft.SqlServer.Server.SqlDataRecord.GetBoolean(System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.GetByte(System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.GetChar(System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.GetDataTypeName(System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.GetDateTime(System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.GetDateTimeOffset(System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.GetDecimal(System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.GetDouble(System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.GetFieldType(System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.GetFloat(System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.GetGuid(System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.GetInt16(System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.GetInt32(System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.GetInt64(System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.GetName(System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.GetOrdinal(System.String)\n  - Microsoft.SqlServer.Server.SqlDataRecord.GetSqlBinary(System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.GetSqlBoolean(System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.GetSqlByte(System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.GetSqlBytes(System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.GetSqlChars(System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.GetSqlDateTime(System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.GetSqlDecimal(System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.GetSqlDouble(System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.GetSqlFieldType(System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.GetSqlGuid(System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.GetSqlInt16(System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.GetSqlInt32(System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.GetSqlInt64(System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.GetSqlMetaData(System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.GetSqlMoney(System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.GetSqlSingle(System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.GetSqlString(System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.GetSqlValue(System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.GetSqlValues(System.Object[])\n  - Microsoft.SqlServer.Server.SqlDataRecord.GetSqlXml(System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.GetString(System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.GetTimeSpan(System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.GetValue(System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.GetValues(System.Object[])\n  - Microsoft.SqlServer.Server.SqlDataRecord.IsDBNull(System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.Item(System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.Item(System.String)\n  - Microsoft.SqlServer.Server.SqlDataRecord.SetBoolean(System.Int32,System.Boolean)\n  - Microsoft.SqlServer.Server.SqlDataRecord.SetByte(System.Int32,System.Byte)\n  - Microsoft.SqlServer.Server.SqlDataRecord.SetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.SetChar(System.Int32,System.Char)\n  - Microsoft.SqlServer.Server.SqlDataRecord.SetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.SetDateTime(System.Int32,System.DateTime)\n  - Microsoft.SqlServer.Server.SqlDataRecord.SetDateTimeOffset(System.Int32,System.DateTimeOffset)\n  - Microsoft.SqlServer.Server.SqlDataRecord.SetDBNull(System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.SetDecimal(System.Int32,System.Decimal)\n  - Microsoft.SqlServer.Server.SqlDataRecord.SetDouble(System.Int32,System.Double)\n  - Microsoft.SqlServer.Server.SqlDataRecord.SetFloat(System.Int32,System.Single)\n  - Microsoft.SqlServer.Server.SqlDataRecord.SetGuid(System.Int32,System.Guid)\n  - Microsoft.SqlServer.Server.SqlDataRecord.SetInt16(System.Int32,System.Int16)\n  - Microsoft.SqlServer.Server.SqlDataRecord.SetInt32(System.Int32,System.Int32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.SetInt64(System.Int32,System.Int64)\n  - Microsoft.SqlServer.Server.SqlDataRecord.SetSqlBinary(System.Int32,System.Data.SqlTypes.SqlBinary)\n  - Microsoft.SqlServer.Server.SqlDataRecord.SetSqlBoolean(System.Int32,System.Data.SqlTypes.SqlBoolean)\n  - Microsoft.SqlServer.Server.SqlDataRecord.SetSqlByte(System.Int32,System.Data.SqlTypes.SqlByte)\n  - Microsoft.SqlServer.Server.SqlDataRecord.SetSqlBytes(System.Int32,System.Data.SqlTypes.SqlBytes)\n  - Microsoft.SqlServer.Server.SqlDataRecord.SetSqlChars(System.Int32,System.Data.SqlTypes.SqlChars)\n  - Microsoft.SqlServer.Server.SqlDataRecord.SetSqlDateTime(System.Int32,System.Data.SqlTypes.SqlDateTime)\n  - Microsoft.SqlServer.Server.SqlDataRecord.SetSqlDecimal(System.Int32,System.Data.SqlTypes.SqlDecimal)\n  - Microsoft.SqlServer.Server.SqlDataRecord.SetSqlDouble(System.Int32,System.Data.SqlTypes.SqlDouble)\n  - Microsoft.SqlServer.Server.SqlDataRecord.SetSqlGuid(System.Int32,System.Data.SqlTypes.SqlGuid)\n  - Microsoft.SqlServer.Server.SqlDataRecord.SetSqlInt16(System.Int32,System.Data.SqlTypes.SqlInt16)\n  - Microsoft.SqlServer.Server.SqlDataRecord.SetSqlInt32(System.Int32,System.Data.SqlTypes.SqlInt32)\n  - Microsoft.SqlServer.Server.SqlDataRecord.SetSqlInt64(System.Int32,System.Data.SqlTypes.SqlInt64)\n  - Microsoft.SqlServer.Server.SqlDataRecord.SetSqlMoney(System.Int32,System.Data.SqlTypes.SqlMoney)\n  - Microsoft.SqlServer.Server.SqlDataRecord.SetSqlSingle(System.Int32,System.Data.SqlTypes.SqlSingle)\n  - Microsoft.SqlServer.Server.SqlDataRecord.SetSqlString(System.Int32,System.Data.SqlTypes.SqlString)\n  - Microsoft.SqlServer.Server.SqlDataRecord.SetSqlXml(System.Int32,System.Data.SqlTypes.SqlXml)\n  - Microsoft.SqlServer.Server.SqlDataRecord.SetString(System.Int32,System.String)\n  - Microsoft.SqlServer.Server.SqlDataRecord.SetTimeSpan(System.Int32,System.TimeSpan)\n  - Microsoft.SqlServer.Server.SqlDataRecord.SetValue(System.Int32,System.Object)\n  - Microsoft.SqlServer.Server.SqlDataRecord.SetValues(System.Object[])\n  langs:\n  - csharp\n  - vb\n  name: SqlDataRecord\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord\n  type: Class\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SqlDataRecord\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 20\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Represents a single row of data and its metadata. This class cannot be inherited.</p>\\n\"\n  syntax:\n    content: public class SqlDataRecord\n    content.vb: Public Class SqlDataRecord\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: SqlDataRecord\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.#ctor(Microsoft.SqlServer.Server.SqlMetaData[])\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.#ctor(Microsoft.SqlServer.Server.SqlMetaData[])\n  id: '#ctor(Microsoft.SqlServer.Server.SqlMetaData[])'\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: SqlDataRecord(SqlMetaData[])\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.SqlDataRecord(Microsoft.SqlServer.Server.SqlMetaData[])\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 646\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Inititializes a new <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance with the schema based on the array of <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects passed as an argument.</p>\\n\"\n  syntax:\n    content: public SqlDataRecord(params SqlMetaData[] metaData)\n    content.vb: Public Sub New(ParamArray metaData As SqlMetaData())\n    parameters:\n    - id: metaData\n      type: Microsoft.SqlServer.Server.SqlMetaData[]\n      description: \"\\n<p>An array of <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects that describe each column in the <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>metaData</em> is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: Microsoft.SqlServer.Server.SqlDataRecord.SqlDataRecord(Microsoft.SqlServer.Server.SqlMetaData())\n  name.vb: SqlDataRecord(SqlMetaData())\n  nameWithType: SqlDataRecord.SqlDataRecord(SqlMetaData[])\n  nameWithType.vb: SqlDataRecord.SqlDataRecord(SqlMetaData())\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\n  commentId: P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\n  id: FieldCount\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: FieldCount\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: FieldCount\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 36\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the number of columns in the data row. This property is read-only.</p>\\n\"\n  syntax:\n    content: public virtual int FieldCount { get; }\n    content.vb: Public Overridable ReadOnly Property FieldCount As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of columns in the data row as an integer.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: SqlDataRecord.FieldCount\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.Item(System.Int32)\n  commentId: P:Microsoft.SqlServer.Server.SqlDataRecord.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: Item[Int32]\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.Item[System.Int32]\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: this[]\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 122\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the common language runtime (CLR) type value for the column specified by the column <em>ordinal</em> argument.</p>\\n\"\n  syntax:\n    content: public virtual object this[int ordinal] { get; }\n    content.vb: Public Overridable ReadOnly Property Item(ordinal As Integer) As Object\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>The CLR type value of the column specified by the <em>ordinal</em>.</p>\\n\"\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  fullName.vb: Microsoft.SqlServer.Server.SqlDataRecord.Item(System.Int32)\n  name.vb: Item(Int32)\n  nameWithType: SqlDataRecord.Item[Int32]\n  nameWithType.vb: SqlDataRecord.Item(Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.Item(System.String)\n  commentId: P:Microsoft.SqlServer.Server.SqlDataRecord.Item(System.String)\n  id: Item(System.String)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: Item[String]\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.Item[System.String]\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: this[]\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 131\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the common language runtime (CLR) type value for the column specified by the column <em>name</em> argument.</p>\\n\"\n  syntax:\n    content: public virtual object this[string name] { get; }\n    content.vb: Public Overridable ReadOnly Property Item(name As String) As Object\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the column.</p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>The CLR type value of the column specified by the <em>name</em>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  fullName.vb: Microsoft.SqlServer.Server.SqlDataRecord.Item(System.String)\n  name.vb: Item(String)\n  nameWithType: SqlDataRecord.Item[String]\n  nameWithType.vb: SqlDataRecord.Item(String)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.GetBoolean(System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.GetBoolean(System.Int32)\n  id: GetBoolean(System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: GetBoolean(Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.GetBoolean(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetBoolean\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 140\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the value for the column specified by the ordinal as a <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual bool GetBoolean(int ordinal)\n    content.vb: Public Overridable Function GetBoolean(ordinal As Integer) As Boolean\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>The column value as a <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  - type: System.Data.SqlTypes.SqlNullValueException\n    commentId: T:System.Data.SqlTypes.SqlNullValueException\n    description: \"\\n<p>The column specified by <em>ordinal</em> is null.</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>There is a type mismatch.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.GetBoolean(Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.GetByte(System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.GetByte(System.Int32)\n  id: GetByte(System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: GetByte(Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.GetByte(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetByte\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 146\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the value for the column specified by the ordinal as a <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual byte GetByte(int ordinal)\n    content.vb: Public Overridable Function GetByte(ordinal As Integer) As Byte\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    return:\n      type: System.Byte\n      description: \"\\n<p>The column value as a <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  - type: System.Data.SqlTypes.SqlNullValueException\n    commentId: T:System.Data.SqlTypes.SqlNullValueException\n    description: \"\\n<p>The column specified by <em>ordinal</em> is null.</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>There is a type mismatch.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.GetByte(Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)\n  id: GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: GetBytes(Int32, Int64, Byte[], Int32, Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.GetBytes(System.Int32, System.Int64, System.Byte[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetBytes\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 152\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the value for the column specified by the ordinal as an array of <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects.</p>\\n\"\n  syntax:\n    content: public virtual long GetBytes(int ordinal, long fieldOffset, byte[] buffer, int bufferOffset, int length)\n    content.vb: Public Overridable Function GetBytes(ordinal As Integer, fieldOffset As Long, buffer As Byte(), bufferOffset As Integer, length As Integer) As Long\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    - id: fieldOffset\n      type: System.Int64\n      description: \"\\n<p>The offset into the field value to start retrieving bytes.</p>\\n\"\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>The target buffer to which to copy bytes.</p>\\n\"\n    - id: bufferOffset\n      type: System.Int32\n      description: \"\\n<p>The offset into the buffer to which to start copying bytes.</p>\\n\"\n    - id: length\n      type: System.Int32\n      description: \"\\n<p>The number of bytes to copy to the buffer.</p>\\n\"\n    return:\n      type: System.Int64\n      description: \"\\n<p>The number of bytes copied.</p>\\n\"\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  - type: System.Data.SqlTypes.SqlNullValueException\n    commentId: T:System.Data.SqlTypes.SqlNullValueException\n    description: \"\\n<p>The column specified by <em>ordinal</em> is null.</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>There is a type mismatch.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  fullName.vb: Microsoft.SqlServer.Server.SqlDataRecord.GetBytes(System.Int32, System.Int64, System.Byte(), System.Int32, System.Int32)\n  name.vb: GetBytes(Int32, Int64, Byte(), Int32, Int32)\n  nameWithType: SqlDataRecord.GetBytes(Int32, Int64, Byte[], Int32, Int32)\n  nameWithType.vb: SqlDataRecord.GetBytes(Int32, Int64, Byte(), Int32, Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.GetChar(System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.GetChar(System.Int32)\n  id: GetChar(System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: GetChar(Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.GetChar(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetChar\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 158\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the value for the column specified by the ordinal as a <xref href=\\\"System.Char\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual char GetChar(int ordinal)\n    content.vb: Public Overridable Function GetChar(ordinal As Integer) As Char\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    return:\n      type: System.Char\n      description: \"\\n<p>The column value as a <xref href=\\\"System.Char\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  - type: System.Data.SqlTypes.SqlNullValueException\n    commentId: T:System.Data.SqlTypes.SqlNullValueException\n    description: \"\\n<p>The column specified by <em>ordinal</em> is null.</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>There is a type mismatch.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.GetChar(Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)\n  id: GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: GetChars(Int32, Int64, Char[], Int32, Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.GetChars(System.Int32, System.Int64, System.Char[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetChars\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 164\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the value for the column specified by the ordinal as an array of <xref href=\\\"System.Char\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects.</p>\\n\"\n  syntax:\n    content: public virtual long GetChars(int ordinal, long fieldOffset, char[] buffer, int bufferOffset, int length)\n    content.vb: Public Overridable Function GetChars(ordinal As Integer, fieldOffset As Long, buffer As Char(), bufferOffset As Integer, length As Integer) As Long\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    - id: fieldOffset\n      type: System.Int64\n      description: \"\\n<p>The offset into the field value to start retrieving characters.</p>\\n\"\n    - id: buffer\n      type: System.Char[]\n      description: \"\\n<p>The target buffer to copy chars to.</p>\\n\"\n    - id: bufferOffset\n      type: System.Int32\n      description: \"\\n<p>The offset into the buffer to start copying chars to.</p>\\n\"\n    - id: length\n      type: System.Int32\n      description: \"\\n<p>The number of chars to copy to the buffer.</p>\\n\"\n    return:\n      type: System.Int64\n      description: \"\\n<p>The number of characters copied.</p>\\n\"\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  - type: System.Data.SqlTypes.SqlNullValueException\n    commentId: T:System.Data.SqlTypes.SqlNullValueException\n    description: \"\\n<p>The column specified by <em>ordinal</em> is null.</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>There is a type mismatch.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  fullName.vb: Microsoft.SqlServer.Server.SqlDataRecord.GetChars(System.Int32, System.Int64, System.Char(), System.Int32, System.Int32)\n  name.vb: GetChars(Int32, Int64, Char(), Int32, Int32)\n  nameWithType: SqlDataRecord.GetChars(Int32, Int64, Char[], Int32, Int32)\n  nameWithType.vb: SqlDataRecord.GetChars(Int32, Int64, Char(), Int32, Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.GetDataTypeName(System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.GetDataTypeName(System.Int32)\n  id: GetDataTypeName(System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: GetDataTypeName(Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.GetDataTypeName(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetDataTypeName\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 51\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Returns the name of the data type for the column specified by the ordinal argument.</p>\\n\"\n  syntax:\n    content: public virtual string GetDataTypeName(int ordinal)\n    content.vb: Public Overridable Function GetDataTypeName(ordinal As Integer) As String\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the data type of the column.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>). </p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>There is a type mismatch.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.GetDataTypeName(Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.GetDateTime(System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.GetDateTime(System.Int32)\n  id: GetDateTime(System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: GetDateTime(Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.GetDateTime(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetDateTime\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 226\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the value for the column specified by the ordinal as a <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual DateTime GetDateTime(int ordinal)\n    content.vb: Public Overridable Function GetDateTime(ordinal As Integer) As Date\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    return:\n      type: System.DateTime\n      description: \"\\n<p>The column value as a <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  - type: System.Data.SqlTypes.SqlNullValueException\n    commentId: T:System.Data.SqlTypes.SqlNullValueException\n    description: \"\\n<p>The column specified by <em>ordinal</em> is null.</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>There is a type mismatch.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.GetDateTime(Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.GetDateTimeOffset(System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.GetDateTimeOffset(System.Int32)\n  id: GetDateTimeOffset(System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: GetDateTimeOffset(Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.GetDateTimeOffset(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetDateTimeOffset\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 232\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Returns the specified column’s data as a <xref href=\\\"System.DateTimeOffset\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual DateTimeOffset GetDateTimeOffset(int ordinal)\n    content.vb: Public Overridable Function GetDateTimeOffset(ordinal As Integer) As DateTimeOffset\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based column ordinal.</p>\\n\"\n    return:\n      type: System.DateTimeOffset\n      description: \"\\n<p>The value of the specified column as a <xref href=\\\"System.DateTimeOffset\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.GetDateTimeOffset(Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.GetDecimal(System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.GetDecimal(System.Int32)\n  id: GetDecimal(System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: GetDecimal(Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.GetDecimal(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetDecimal\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 220\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the value for the column specified by the ordinal as a <xref href=\\\"System.Decimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual decimal GetDecimal(int ordinal)\n    content.vb: Public Overridable Function GetDecimal(ordinal As Integer) As Decimal\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    return:\n      type: System.Decimal\n      description: \"\\n<p>The column value as a <xref href=\\\"System.Decimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  - type: System.Data.SqlTypes.SqlNullValueException\n    commentId: T:System.Data.SqlTypes.SqlNullValueException\n    description: \"\\n<p>The column specified by <em>ordinal</em> is null.</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>There is a type mismatch.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.GetDecimal(Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.GetDouble(System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.GetDouble(System.Int32)\n  id: GetDouble(System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: GetDouble(Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.GetDouble(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetDouble\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 200\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the value for the column specified by the ordinal as a <xref href=\\\"System.Double\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual double GetDouble(int ordinal)\n    content.vb: Public Overridable Function GetDouble(ordinal As Integer) As Double\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    return:\n      type: System.Double\n      description: \"\\n<p>The column value as a <xref href=\\\"System.Double\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  - type: System.Data.SqlTypes.SqlNullValueException\n    commentId: T:System.Data.SqlTypes.SqlNullValueException\n    description: \"\\n<p>The column specified by <em>ordinal</em> is null.</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>There is a type mismatch.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.GetDouble(Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.GetFieldType(System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.GetFieldType(System.Int32)\n  id: GetFieldType(System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: GetFieldType(Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.GetFieldType(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetFieldType\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 66\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Returns a <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object representing the common language runtime (CLR) type that maps to the SQL Server type of the column specified by the <em>ordinal</em> argument.</p>\\n\"\n  syntax:\n    content: public virtual Type GetFieldType(int ordinal)\n    content.vb: Public Overridable Function GetFieldType(ordinal As Integer) As Type\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    return:\n      type: System.Type\n      description: \"\\n<p>The column type as a <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>). </p>\\n\"\n  - type: System.TypeLoadException\n    commentId: T:System.TypeLoadException\n    description: \"\\n<p>The column is of a user-defined type that is not available to the calling application domain.</p>\\n\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The column is of a user-defined type that is not available to the calling application domain.</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>There is a type mismatch.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.GetFieldType(Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.GetFloat(System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.GetFloat(System.Int32)\n  id: GetFloat(System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: GetFloat(Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.GetFloat(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetFloat\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 194\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the value for the column specified by the ordinal as a <strong>float</strong>.</p>\\n\"\n  syntax:\n    content: public virtual float GetFloat(int ordinal)\n    content.vb: Public Overridable Function GetFloat(ordinal As Integer) As Single\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    return:\n      type: System.Single\n      description: \"\\n<p>The column value as a <strong>float</strong>.</p>\\n\"\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  - type: System.Data.SqlTypes.SqlNullValueException\n    commentId: T:System.Data.SqlTypes.SqlNullValueException\n    description: \"\\n<p>The column specified by <em>ordinal</em> is null.</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>There is a type mismatch.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.GetFloat(Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.GetGuid(System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.GetGuid(System.Int32)\n  id: GetGuid(System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: GetGuid(Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.GetGuid(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetGuid\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 170\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the value for the column specified by the ordinal as a <xref href=\\\"System.Guid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual Guid GetGuid(int ordinal)\n    content.vb: Public Overridable Function GetGuid(ordinal As Integer) As Guid\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    return:\n      type: System.Guid\n      description: \"\\n<p>The column value as a <xref href=\\\"System.Guid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  - type: System.Data.SqlTypes.SqlNullValueException\n    commentId: T:System.Data.SqlTypes.SqlNullValueException\n    description: \"\\n<p>The column specified by <em>ordinal</em> is null.</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>There is a type mismatch.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.GetGuid(Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.GetInt16(System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.GetInt16(System.Int32)\n  id: GetInt16(System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: GetInt16(Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.GetInt16(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetInt16\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 176\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the value for the column specified by the ordinal as a <xref href=\\\"System.Int16\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual short GetInt16(int ordinal)\n    content.vb: Public Overridable Function GetInt16(ordinal As Integer) As Short\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    return:\n      type: System.Int16\n      description: \"\\n<p>The column value as a <xref href=\\\"System.Int16\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  - type: System.Data.SqlTypes.SqlNullValueException\n    commentId: T:System.Data.SqlTypes.SqlNullValueException\n    description: \"\\n<p>The column specified by <em>ordinal</em> is null.</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>There is a type mismatch.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.GetInt16(Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.GetInt32(System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.GetInt32(System.Int32)\n  id: GetInt32(System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: GetInt32(Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.GetInt32(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetInt32\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 182\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the value for the column specified by the ordinal as a <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual int GetInt32(int ordinal)\n    content.vb: Public Overridable Function GetInt32(ordinal As Integer) As Integer\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The column value as a <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  - type: System.Data.SqlTypes.SqlNullValueException\n    commentId: T:System.Data.SqlTypes.SqlNullValueException\n    description: \"\\n<p>The column specified by <em>ordinal</em> is null.</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>There is a type mismatch.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.GetInt32(Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.GetInt64(System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.GetInt64(System.Int32)\n  id: GetInt64(System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: GetInt64(Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.GetInt64(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetInt64\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 188\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the value for the column specified by the ordinal as a <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual long GetInt64(int ordinal)\n    content.vb: Public Overridable Function GetInt64(ordinal As Integer) As Long\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    return:\n      type: System.Int64\n      description: \"\\n<p>The column value as a <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  - type: System.Data.SqlTypes.SqlNullValueException\n    commentId: T:System.Data.SqlTypes.SqlNullValueException\n    description: \"\\n<p>The column specified by <em>ordinal</em> is null.</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>There is a type mismatch.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.GetInt64(Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.GetName(System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.GetName(System.Int32)\n  id: GetName(System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: GetName(Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.GetName(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetName\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 45\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Returns the name of the column specified by the ordinal argument.</p>\\n\"\n  syntax:\n    content: public virtual string GetName(int ordinal)\n    content.vb: Public Overridable Function GetName(ordinal As Integer) As String\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the column name.</p>\\n\"\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>). </p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>There is a type mismatch.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.GetName(Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.GetOrdinal(System.String)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.GetOrdinal(System.String)\n  id: GetOrdinal(System.String)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: GetOrdinal(String)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.GetOrdinal(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetOrdinal\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 105\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Returns the column ordinal specified by the column name.</p>\\n\"\n  syntax:\n    content: public virtual int GetOrdinal(string name)\n    content.vb: Public Overridable Function GetOrdinal(name As String) As Integer\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the column to look up.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column as an integer.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"\\n<p>The column name could not be found.</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>There is a type mismatch.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.GetOrdinal(String)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.GetSqlBinary(System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlBinary(System.Int32)\n  id: GetSqlBinary(System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: GetSqlBinary(Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.GetSqlBinary(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetSqlBinary\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 293\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the value for the column specified by the ordinal as a <xref href=\\\"System.Data.SqlTypes.SqlBinary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual SqlBinary GetSqlBinary(int ordinal)\n    content.vb: Public Overridable Function GetSqlBinary(ordinal As Integer) As SqlBinary\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBinary\n      description: \"\\n<p>The column value as a <xref href=\\\"System.Data.SqlTypes.SqlBinary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>There is a type mismatch.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.GetSqlBinary(Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.GetSqlBoolean(System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlBoolean(System.Int32)\n  id: GetSqlBoolean(System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: GetSqlBoolean(Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.GetSqlBoolean(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetSqlBoolean\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 311\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the value for the column specified by the ordinal as a <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual SqlBoolean GetSqlBoolean(int ordinal)\n    content.vb: Public Overridable Function GetSqlBoolean(ordinal As Integer) As SqlBoolean\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: \"\\n<p>The column value as a <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>There is a type mismatch.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.GetSqlBoolean(Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.GetSqlByte(System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlByte(System.Int32)\n  id: GetSqlByte(System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: GetSqlByte(Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.GetSqlByte(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetSqlByte\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 317\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the value for the column specified by the ordinal as a <xref href=\\\"System.Data.SqlTypes.SqlByte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual SqlByte GetSqlByte(int ordinal)\n    content.vb: Public Overridable Function GetSqlByte(ordinal As Integer) As SqlByte\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlByte\n      description: \"\\n<p>The column value as a <xref href=\\\"System.Data.SqlTypes.SqlByte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>There is a type mismatch.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.GetSqlByte(Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.GetSqlBytes(System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlBytes(System.Int32)\n  id: GetSqlBytes(System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: GetSqlBytes(Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.GetSqlBytes(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetSqlBytes\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 299\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the value for the column specified by the ordinal as a <xref href=\\\"System.Data.SqlTypes.SqlBytes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual SqlBytes GetSqlBytes(int ordinal)\n    content.vb: Public Overridable Function GetSqlBytes(ordinal As Integer) As SqlBytes\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBytes\n      description: \"\\n<p>The column value as a <xref href=\\\"System.Data.SqlTypes.SqlBytes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>There is a type mismatch.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.GetSqlBytes(Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.GetSqlChars(System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlChars(System.Int32)\n  id: GetSqlChars(System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: GetSqlChars(Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.GetSqlChars(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetSqlChars\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 323\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the value for the column specified by the ordinal as a <xref href=\\\"System.Data.SqlTypes.SqlChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual SqlChars GetSqlChars(int ordinal)\n    content.vb: Public Overridable Function GetSqlChars(ordinal As Integer) As SqlChars\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlChars\n      description: \"\\n<p>The column value as a <xref href=\\\"System.Data.SqlTypes.SqlChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>There is a type mismatch.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.GetSqlChars(Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.GetSqlDateTime(System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlDateTime(System.Int32)\n  id: GetSqlDateTime(System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: GetSqlDateTime(Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.GetSqlDateTime(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetSqlDateTime\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 365\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the value for the column specified by the ordinal as a <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual SqlDateTime GetSqlDateTime(int ordinal)\n    content.vb: Public Overridable Function GetSqlDateTime(ordinal As Integer) As SqlDateTime\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlDateTime\n      description: \"\\n<p>The column value as a <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>There is a type mismatch.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.GetSqlDateTime(Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.GetSqlDecimal(System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlDecimal(System.Int32)\n  id: GetSqlDecimal(System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: GetSqlDecimal(Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.GetSqlDecimal(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetSqlDecimal\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 371\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the value for the column specified by the ordinal as a <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual SqlDecimal GetSqlDecimal(int ordinal)\n    content.vb: Public Overridable Function GetSqlDecimal(ordinal As Integer) As SqlDecimal\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>The column value as a <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>There is a type mismatch.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.GetSqlDecimal(Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.GetSqlDouble(System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlDouble(System.Int32)\n  id: GetSqlDouble(System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: GetSqlDouble(Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.GetSqlDouble(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetSqlDouble\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 353\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the value for the column specified by the ordinal as a <xref href=\\\"System.Data.SqlTypes.SqlDouble\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual SqlDouble GetSqlDouble(int ordinal)\n    content.vb: Public Overridable Function GetSqlDouble(ordinal As Integer) As SqlDouble\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlDouble\n      description: \"\\n<p>The column value as a <xref href=\\\"System.Data.SqlTypes.SqlDouble\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>There is a type mismatch.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.GetSqlDouble(Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.GetSqlFieldType(System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlFieldType(System.Int32)\n  id: GetSqlFieldType(System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: GetSqlFieldType(Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.GetSqlFieldType(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetSqlFieldType\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 261\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Returns a <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents the type (as a SQL Server type, defined in <xref href=\\\"System.Data.SqlTypes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>) that maps to the SQL Server type of the column.</p>\\n\"\n  syntax:\n    content: public virtual Type GetSqlFieldType(int ordinal)\n    content.vb: Public Overridable Function GetSqlFieldType(ordinal As Integer) As Type\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    return:\n      type: System.Type\n      description: \"\\n<p>The column type as a <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>). </p>\\n\"\n  - type: System.TypeLoadException\n    commentId: T:System.TypeLoadException\n    description: \"\\n<p>The column is of a user-defined type that is not available to the calling application domain.</p>\\n\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The column is of a user-defined type that is not available to the calling application domain.</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>There is a type mismatch.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.GetSqlFieldType(Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.GetSqlGuid(System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlGuid(System.Int32)\n  id: GetSqlGuid(System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: GetSqlGuid(Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.GetSqlGuid(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetSqlGuid\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 383\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the value for the column specified by the ordinal as a <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual SqlGuid GetSqlGuid(int ordinal)\n    content.vb: Public Overridable Function GetSqlGuid(ordinal As Integer) As SqlGuid\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlGuid\n      description: \"\\n<p>The column value as a <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>There is a type mismatch.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.GetSqlGuid(Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.GetSqlInt16(System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlInt16(System.Int32)\n  id: GetSqlInt16(System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: GetSqlInt16(Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.GetSqlInt16(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetSqlInt16\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 329\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the value for the column specified by the ordinal as a <xref href=\\\"System.Data.SqlTypes.SqlInt16\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual SqlInt16 GetSqlInt16(int ordinal)\n    content.vb: Public Overridable Function GetSqlInt16(ordinal As Integer) As SqlInt16\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlInt16\n      description: \"\\n<p>The column value as a <xref href=\\\"System.Data.SqlTypes.SqlInt16\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>There is a type mismatch.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.GetSqlInt16(Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.GetSqlInt32(System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlInt32(System.Int32)\n  id: GetSqlInt32(System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: GetSqlInt32(Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.GetSqlInt32(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetSqlInt32\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 335\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the value for the column specified by the ordinal as a <xref href=\\\"System.Data.SqlTypes.SqlInt32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual SqlInt32 GetSqlInt32(int ordinal)\n    content.vb: Public Overridable Function GetSqlInt32(ordinal As Integer) As SqlInt32\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlInt32\n      description: \"\\n<p>The column value as a <xref href=\\\"System.Data.SqlTypes.SqlInt32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>There is a type mismatch.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.GetSqlInt32(Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.GetSqlInt64(System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlInt64(System.Int32)\n  id: GetSqlInt64(System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: GetSqlInt64(Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.GetSqlInt64(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetSqlInt64\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 341\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the value for the column specified by the ordinal as a <xref href=\\\"System.Data.SqlTypes.SqlInt64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual SqlInt64 GetSqlInt64(int ordinal)\n    content.vb: Public Overridable Function GetSqlInt64(ordinal As Integer) As SqlInt64\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlInt64\n      description: \"\\n<p>The column value as a <xref href=\\\"System.Data.SqlTypes.SqlInt64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>There is a type mismatch.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.GetSqlInt64(Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.GetSqlMetaData(System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlMetaData(System.Int32)\n  id: GetSqlMetaData(System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: GetSqlMetaData(Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.GetSqlMetaData(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetSqlMetaData\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 255\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Returns a <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object, describing the metadata of the column specified by the column ordinal.</p>\\n\"\n  syntax:\n    content: public virtual SqlMetaData GetSqlMetaData(int ordinal)\n    content.vb: Public Overridable Function GetSqlMetaData(ordinal As Integer) As SqlMetaData\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    return:\n      type: Microsoft.SqlServer.Server.SqlMetaData\n      description: \"\\n<p>The column metadata as a <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>There is a type mismatch.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.GetSqlMetaData(Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.GetSqlMoney(System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlMoney(System.Int32)\n  id: GetSqlMoney(System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: GetSqlMoney(Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.GetSqlMoney(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetSqlMoney\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 359\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the value for the column specified by the ordinal as a <xref href=\\\"System.Data.SqlTypes.SqlMoney\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual SqlMoney GetSqlMoney(int ordinal)\n    content.vb: Public Overridable Function GetSqlMoney(ordinal As Integer) As SqlMoney\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlMoney\n      description: \"\\n<p>The column value as a <xref href=\\\"System.Data.SqlTypes.SqlMoney\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>There is a type mismatch.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.GetSqlMoney(Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.GetSqlSingle(System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlSingle(System.Int32)\n  id: GetSqlSingle(System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: GetSqlSingle(Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.GetSqlSingle(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetSqlSingle\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 347\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the value for the column specified by the ordinal as a <xref href=\\\"System.Data.SqlTypes.SqlSingle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual SqlSingle GetSqlSingle(int ordinal)\n    content.vb: Public Overridable Function GetSqlSingle(ordinal As Integer) As SqlSingle\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlSingle\n      description: \"\\n<p>The column value as a <xref href=\\\"System.Data.SqlTypes.SqlSingle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>There is a type mismatch.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.GetSqlSingle(Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.GetSqlString(System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlString(System.Int32)\n  id: GetSqlString(System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: GetSqlString(Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.GetSqlString(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetSqlString\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 377\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the value for the column specified by the ordinal as a <xref href=\\\"System.Data.SqlTypes.SqlString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual SqlString GetSqlString(int ordinal)\n    content.vb: Public Overridable Function GetSqlString(ordinal As Integer) As SqlString\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlString\n      description: \"\\n<p>The column value as a <xref href=\\\"System.Data.SqlTypes.SqlString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>There is a type mismatch.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.GetSqlString(Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.GetSqlValue(System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlValue(System.Int32)\n  id: GetSqlValue(System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: GetSqlValue(Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.GetSqlValue(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetSqlValue\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 268\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Returns the data value stored in the column, expressed as a SQL Server type, specified by the column ordinal.</p>\\n\"\n  syntax:\n    content: public virtual object GetSqlValue(int ordinal)\n    content.vb: Public Overridable Function GetSqlValue(ordinal As Integer) As Object\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>The value of the column, expressed as a SQL Server type, as a <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>There is a type mismatch.</p>\\n\"\n  seealso:\n  - type: System.Data.SqlTypes\n    commentId: N:System.Data.SqlTypes\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.GetSqlValue(Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.GetSqlValues(System.Object[])\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlValues(System.Object[])\n  id: GetSqlValues(System.Object[])\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: GetSqlValues(Object[])\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.GetSqlValues(System.Object[])\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetSqlValues\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 275\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Returns the values for all the columns in the record, expressed as SQL Server types, in an array.</p>\\n\"\n  syntax:\n    content: public virtual int GetSqlValues(object[] values)\n    content.vb: Public Overridable Function GetSqlValues(values As Object()) As Integer\n    parameters:\n    - id: values\n      type: System.Object[]\n      description: \"\\n<p>The array into which to copy the values column values. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>An <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that indicates the number of columns copied.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>values</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>There is a type mismatch.</p>\\n\"\n  seealso:\n  - type: System.Data.SqlTypes\n    commentId: N:System.Data.SqlTypes\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  fullName.vb: Microsoft.SqlServer.Server.SqlDataRecord.GetSqlValues(System.Object())\n  name.vb: GetSqlValues(Object())\n  nameWithType: SqlDataRecord.GetSqlValues(Object[])\n  nameWithType.vb: SqlDataRecord.GetSqlValues(Object())\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.GetSqlXml(System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlXml(System.Int32)\n  id: GetSqlXml(System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: GetSqlXml(Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.GetSqlXml(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetSqlXml\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 305\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the value for the column specified by the ordinal as a <xref href=\\\"System.Data.SqlTypes.SqlXml\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual SqlXml GetSqlXml(int ordinal)\n    content.vb: Public Overridable Function GetSqlXml(ordinal As Integer) As SqlXml\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlXml\n      description: \"\\n<p>The column value as a <xref href=\\\"System.Data.SqlTypes.SqlXml\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>There is a type mismatch.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.GetSqlXml(Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.GetString(System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.GetString(System.Int32)\n  id: GetString(System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: GetString(Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.GetString(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetString\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 206\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the value for the column specified by the ordinal as a <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual string GetString(int ordinal)\n    content.vb: Public Overridable Function GetString(ordinal As Integer) As String\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>The column value as a <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>There is a type mismatch.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.GetString(Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.GetTimeSpan(System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.GetTimeSpan(System.Int32)\n  id: GetTimeSpan(System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: GetTimeSpan(Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.GetTimeSpan(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetTimeSpan\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 238\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Returns the specified column’s data as a <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual TimeSpan GetTimeSpan(int ordinal)\n    content.vb: Public Overridable Function GetTimeSpan(ordinal As Integer) As TimeSpan\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based column ordinal.</p>\\n\"\n    return:\n      type: System.TimeSpan\n      description: \"\\n<p>The value of the specified column as a <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.GetTimeSpan(Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.GetValue(System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.GetValue(System.Int32)\n  id: GetValue(System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: GetValue(Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.GetValue(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetValue\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 75\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Returns the common language runtime (CLR) type value for the column specified by the ordinal argument.</p>\\n\"\n  syntax:\n    content: public virtual object GetValue(int ordinal)\n    content.vb: Public Overridable Function GetValue(ordinal As Integer) As Object\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>The CLR type value of the column specified by the ordinal.</p>\\n\"\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>There is a type mismatch.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.GetValue(Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.GetValues(System.Object[])\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.GetValues(System.Object[])\n  id: GetValues(System.Object[])\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: GetValues(Object[])\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.GetValues(System.Object[])\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetValues\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 88\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Returns the values for all the columns in the record, expressed as common language runtime (CLR) types, in an array.</p>\\n\"\n  syntax:\n    content: public virtual int GetValues(object[] values)\n    content.vb: Public Overridable Function GetValues(values As Object()) As Integer\n    parameters:\n    - id: values\n      type: System.Object[]\n      description: \"\\n<p>The array into which to copy the values column values.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>An <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that indicates the number of columns copied.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>values</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>There is a type mismatch.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  fullName.vb: Microsoft.SqlServer.Server.SqlDataRecord.GetValues(System.Object())\n  name.vb: GetValues(Object())\n  nameWithType: SqlDataRecord.GetValues(Object[])\n  nameWithType.vb: SqlDataRecord.GetValues(Object())\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.IsDBNull(System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.IsDBNull(System.Int32)\n  id: IsDBNull(System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: IsDBNull(Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.IsDBNull(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsDBNull\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 245\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Returns true if the column specified by the column ordinal parameter is null.</p>\\n\"\n  syntax:\n    content: public virtual bool IsDBNull(int ordinal)\n    content.vb: Public Overridable Function IsDBNull(ordinal As Integer) As Boolean\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the column is null; <strong>false</strong> otherwise.</p>\\n\"\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.IsDBNull(Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.SetBoolean(System.Int32,System.Boolean)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.SetBoolean(System.Int32,System.Boolean)\n  id: SetBoolean(System.Int32,System.Boolean)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: SetBoolean(Int32, Boolean)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.SetBoolean(System.Int32, System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetBoolean\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 443\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Sets the data stored in the column to the specified <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  syntax:\n    content: public virtual void SetBoolean(int ordinal, bool value)\n    content.vb: Public Overridable Sub SetBoolean(ordinal As Integer, value As Boolean)\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    - id: value\n      type: System.Boolean\n      description: \"\\n<p>The new value of the column.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.SetBoolean(Int32, Boolean)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.SetByte(System.Int32,System.Byte)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.SetByte(System.Int32,System.Byte)\n  id: SetByte(System.Int32,System.Byte)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: SetByte(Int32, Byte)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.SetByte(System.Int32, System.Byte)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetByte\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 449\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Sets the data stored in the column to the specified <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  syntax:\n    content: public virtual void SetByte(int ordinal, byte value)\n    content.vb: Public Overridable Sub SetByte(ordinal As Integer, value As Byte)\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    - id: value\n      type: System.Byte\n      description: \"\\n<p>The new value of the column.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.SetByte(Int32, Byte)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.SetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.SetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)\n  id: SetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: SetBytes(Int32, Int64, Byte[], Int32, Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.SetBytes(System.Int32, System.Int64, System.Byte[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetBytes\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 455\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Sets the data stored in the column to the specified array of <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n  syntax:\n    content: public virtual void SetBytes(int ordinal, long fieldOffset, byte[] buffer, int bufferOffset, int length)\n    content.vb: Public Overridable Sub SetBytes(ordinal As Integer, fieldOffset As Long, buffer As Byte(), bufferOffset As Integer, length As Integer)\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    - id: fieldOffset\n      type: System.Int64\n      description: \"\\n<p>The offset into the field value to start copying bytes.</p>\\n\"\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>The target buffer from which to copy bytes.</p>\\n\"\n    - id: bufferOffset\n      type: System.Int32\n      description: \"\\n<p>The offset into the buffer from which to start copying bytes.</p>\\n\"\n    - id: length\n      type: System.Int32\n      description: \"\\n<p>The number of bytes to copy from the buffer.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  fullName.vb: Microsoft.SqlServer.Server.SqlDataRecord.SetBytes(System.Int32, System.Int64, System.Byte(), System.Int32, System.Int32)\n  name.vb: SetBytes(Int32, Int64, Byte(), Int32, Int32)\n  nameWithType: SqlDataRecord.SetBytes(Int32, Int64, Byte[], Int32, Int32)\n  nameWithType.vb: SqlDataRecord.SetBytes(Int32, Int64, Byte(), Int32, Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.SetChar(System.Int32,System.Char)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.SetChar(System.Int32,System.Char)\n  id: SetChar(System.Int32,System.Char)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: SetChar(Int32, Char)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.SetChar(System.Int32, System.Char)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetChar\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 461\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Sets the data stored in the column to the specified <xref href=\\\"System.Char\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  syntax:\n    content: public virtual void SetChar(int ordinal, char value)\n    content.vb: Public Overridable Sub SetChar(ordinal As Integer, value As Char)\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    - id: value\n      type: System.Char\n      description: \"\\n<p>The new value of the column.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.SetChar(Int32, Char)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.SetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.SetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)\n  id: SetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: SetChars(Int32, Int64, Char[], Int32, Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.SetChars(System.Int32, System.Int64, System.Char[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetChars\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 467\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Sets the data stored in the column to the specified array of <xref href=\\\"System.Char\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n  syntax:\n    content: public virtual void SetChars(int ordinal, long fieldOffset, char[] buffer, int bufferOffset, int length)\n    content.vb: Public Overridable Sub SetChars(ordinal As Integer, fieldOffset As Long, buffer As Char(), bufferOffset As Integer, length As Integer)\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    - id: fieldOffset\n      type: System.Int64\n      description: \"\\n<p>The offset into the field value to start copying characters.</p>\\n\"\n    - id: buffer\n      type: System.Char[]\n      description: \"\\n<p>The target buffer from which to copy chars.</p>\\n\"\n    - id: bufferOffset\n      type: System.Int32\n      description: \"\\n<p>The offset into the buffer from which to start copying chars.</p>\\n\"\n    - id: length\n      type: System.Int32\n      description: \"\\n<p>The number of chars to copy from the buffer.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  fullName.vb: Microsoft.SqlServer.Server.SqlDataRecord.SetChars(System.Int32, System.Int64, System.Char(), System.Int32, System.Int32)\n  name.vb: SetChars(Int32, Int64, Char(), Int32, Int32)\n  nameWithType: SqlDataRecord.SetChars(Int32, Int64, Char[], Int32, Int32)\n  nameWithType.vb: SqlDataRecord.SetChars(Int32, Int64, Char(), Int32, Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.SetDateTime(System.Int32,System.DateTime)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.SetDateTime(System.Int32,System.DateTime)\n  id: SetDateTime(System.Int32,System.DateTime)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: SetDateTime(Int32, DateTime)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.SetDateTime(System.Int32, System.DateTime)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetDateTime\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 515\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Sets the data stored in the column to the specified <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  syntax:\n    content: public virtual void SetDateTime(int ordinal, DateTime value)\n    content.vb: Public Overridable Sub SetDateTime(ordinal As Integer, value As Date)\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    - id: value\n      type: System.DateTime\n      description: \"\\n<p>The new value of the column.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.SetDateTime(Int32, DateTime)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.SetDateTimeOffset(System.Int32,System.DateTimeOffset)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.SetDateTimeOffset(System.Int32,System.DateTimeOffset)\n  id: SetDateTimeOffset(System.Int32,System.DateTimeOffset)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: SetDateTimeOffset(Int32, DateTimeOffset)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.SetDateTimeOffset(System.Int32, System.DateTimeOffset)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetDateTimeOffset\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 527\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Sets the value of the column specified to the <xref href=\\\"System.DateTimeOffset\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  syntax:\n    content: public virtual void SetDateTimeOffset(int ordinal, DateTimeOffset value)\n    content.vb: Public Overridable Sub SetDateTimeOffset(ordinal As Integer, value As DateTimeOffset)\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    - id: value\n      type: System.DateTimeOffset\n      description: \"\\n<p>The new value of the column.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.SetDateTimeOffset(Int32, DateTimeOffset)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.SetDBNull(System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.SetDBNull(System.Int32)\n  id: SetDBNull(System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: SetDBNull(Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.SetDBNull(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetDBNull\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 533\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Sets the value in the specified column to <xref href=\\\"System.DBNull\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual void SetDBNull(int ordinal)\n    content.vb: Public Overridable Sub SetDBNull(ordinal As Integer)\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.SetDBNull(Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.SetDecimal(System.Int32,System.Decimal)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.SetDecimal(System.Int32,System.Decimal)\n  id: SetDecimal(System.Int32,System.Decimal)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: SetDecimal(Int32, Decimal)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.SetDecimal(System.Int32, System.Decimal)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetDecimal\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 509\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Sets the data stored in the column to the specified <xref href=\\\"System.Decimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  syntax:\n    content: public virtual void SetDecimal(int ordinal, decimal value)\n    content.vb: Public Overridable Sub SetDecimal(ordinal As Integer, value As Decimal)\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    - id: value\n      type: System.Decimal\n      description: \"\\n<p>The new value of the column.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.SetDecimal(Int32, Decimal)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.SetDouble(System.Int32,System.Double)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.SetDouble(System.Int32,System.Double)\n  id: SetDouble(System.Int32,System.Double)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: SetDouble(Int32, Double)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.SetDouble(System.Int32, System.Double)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetDouble\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 497\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Sets the data stored in the column to the specified <xref href=\\\"System.Double\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  syntax:\n    content: public virtual void SetDouble(int ordinal, double value)\n    content.vb: Public Overridable Sub SetDouble(ordinal As Integer, value As Double)\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    - id: value\n      type: System.Double\n      description: \"\\n<p>The new value of the column.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.SetDouble(Int32, Double)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.SetFloat(System.Int32,System.Single)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.SetFloat(System.Int32,System.Single)\n  id: SetFloat(System.Int32,System.Single)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: SetFloat(Int32, Single)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.SetFloat(System.Int32, System.Single)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetFloat\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 491\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Sets the data stored in the column to the specified <strong>float</strong> value.</p>\\n\"\n  syntax:\n    content: public virtual void SetFloat(int ordinal, float value)\n    content.vb: Public Overridable Sub SetFloat(ordinal As Integer, value As Single)\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    - id: value\n      type: System.Single\n      description: \"\\n<p>The new value of the column.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.SetFloat(Int32, Single)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.SetGuid(System.Int32,System.Guid)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.SetGuid(System.Int32,System.Guid)\n  id: SetGuid(System.Int32,System.Guid)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: SetGuid(Int32, Guid)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.SetGuid(System.Int32, System.Guid)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetGuid\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 539\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Sets the data stored in the column to the specified <xref href=\\\"System.Guid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  syntax:\n    content: public virtual void SetGuid(int ordinal, Guid value)\n    content.vb: Public Overridable Sub SetGuid(ordinal As Integer, value As Guid)\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    - id: value\n      type: System.Guid\n      description: \"\\n<p>The new value of the column.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.SetGuid(Int32, Guid)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.SetInt16(System.Int32,System.Int16)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.SetInt16(System.Int32,System.Int16)\n  id: SetInt16(System.Int32,System.Int16)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: SetInt16(Int32, Int16)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.SetInt16(System.Int32, System.Int16)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetInt16\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 473\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Sets the data stored in the column to the specified <xref href=\\\"System.Int16\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  syntax:\n    content: public virtual void SetInt16(int ordinal, short value)\n    content.vb: Public Overridable Sub SetInt16(ordinal As Integer, value As Short)\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    - id: value\n      type: System.Int16\n      description: \"\\n<p>The new value of the column.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.SetInt16(Int32, Int16)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.SetInt32(System.Int32,System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.SetInt32(System.Int32,System.Int32)\n  id: SetInt32(System.Int32,System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: SetInt32(Int32, Int32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.SetInt32(System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetInt32\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 479\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Sets the data stored in the column to the specified <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  syntax:\n    content: public virtual void SetInt32(int ordinal, int value)\n    content.vb: Public Overridable Sub SetInt32(ordinal As Integer, value As Integer)\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    - id: value\n      type: System.Int32\n      description: \"\\n<p>The new value of the column.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.SetInt32(Int32, Int32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.SetInt64(System.Int32,System.Int64)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.SetInt64(System.Int32,System.Int64)\n  id: SetInt64(System.Int32,System.Int64)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: SetInt64(Int32, Int64)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.SetInt64(System.Int32, System.Int64)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetInt64\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 485\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Sets the data stored in the column to the specified <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  syntax:\n    content: public virtual void SetInt64(int ordinal, long value)\n    content.vb: Public Overridable Sub SetInt64(ordinal As Integer, value As Long)\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    - id: value\n      type: System.Int64\n      description: \"\\n<p>The new value of the column.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.SetInt64(Int32, Int64)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.SetSqlBinary(System.Int32,System.Data.SqlTypes.SqlBinary)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlBinary(System.Int32,System.Data.SqlTypes.SqlBinary)\n  id: SetSqlBinary(System.Int32,System.Data.SqlTypes.SqlBinary)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: SetSqlBinary(Int32, SqlBinary)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.SetSqlBinary(System.Int32, System.Data.SqlTypes.SqlBinary)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetSqlBinary\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 617\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Sets the data stored in the column to the specified <xref href=\\\"System.Data.SqlTypes.SqlBinary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  syntax:\n    content: public virtual void SetSqlBinary(int ordinal, SqlBinary value)\n    content.vb: Public Overridable Sub SetSqlBinary(ordinal As Integer, value As SqlBinary)\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    - id: value\n      type: System.Data.SqlTypes.SqlBinary\n      description: \"\\n<p>The new value of the column.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.SetSqlBinary(Int32, SqlBinary)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.SetSqlBoolean(System.Int32,System.Data.SqlTypes.SqlBoolean)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlBoolean(System.Int32,System.Data.SqlTypes.SqlBoolean)\n  id: SetSqlBoolean(System.Int32,System.Data.SqlTypes.SqlBoolean)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: SetSqlBoolean(Int32, SqlBoolean)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.SetSqlBoolean(System.Int32, System.Data.SqlTypes.SqlBoolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetSqlBoolean\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 545\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Sets the data stored in the column to the specified <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  syntax:\n    content: public virtual void SetSqlBoolean(int ordinal, SqlBoolean value)\n    content.vb: Public Overridable Sub SetSqlBoolean(ordinal As Integer, value As SqlBoolean)\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    - id: value\n      type: System.Data.SqlTypes.SqlBoolean\n      description: \"\\n<p>The new value of the column.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.SetSqlBoolean(Int32, SqlBoolean)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.SetSqlByte(System.Int32,System.Data.SqlTypes.SqlByte)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlByte(System.Int32,System.Data.SqlTypes.SqlByte)\n  id: SetSqlByte(System.Int32,System.Data.SqlTypes.SqlByte)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: SetSqlByte(Int32, SqlByte)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.SetSqlByte(System.Int32, System.Data.SqlTypes.SqlByte)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetSqlByte\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 551\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Sets the data stored in the column to the specified <xref href=\\\"System.Data.SqlTypes.SqlByte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  syntax:\n    content: public virtual void SetSqlByte(int ordinal, SqlByte value)\n    content.vb: Public Overridable Sub SetSqlByte(ordinal As Integer, value As SqlByte)\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    - id: value\n      type: System.Data.SqlTypes.SqlByte\n      description: \"\\n<p>The new value of the column.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.SetSqlByte(Int32, SqlByte)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.SetSqlBytes(System.Int32,System.Data.SqlTypes.SqlBytes)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlBytes(System.Int32,System.Data.SqlTypes.SqlBytes)\n  id: SetSqlBytes(System.Int32,System.Data.SqlTypes.SqlBytes)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: SetSqlBytes(Int32, SqlBytes)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.SetSqlBytes(System.Int32, System.Data.SqlTypes.SqlBytes)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetSqlBytes\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 635\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Sets the data stored in the column to the specified <xref href=\\\"System.Data.SqlTypes.SqlBytes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  syntax:\n    content: public virtual void SetSqlBytes(int ordinal, SqlBytes value)\n    content.vb: Public Overridable Sub SetSqlBytes(ordinal As Integer, value As SqlBytes)\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    - id: value\n      type: System.Data.SqlTypes.SqlBytes\n      description: \"\\n<p>The new value of the column.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.SetSqlBytes(Int32, SqlBytes)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.SetSqlChars(System.Int32,System.Data.SqlTypes.SqlChars)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlChars(System.Int32,System.Data.SqlTypes.SqlChars)\n  id: SetSqlChars(System.Int32,System.Data.SqlTypes.SqlChars)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: SetSqlChars(Int32, SqlChars)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.SetSqlChars(System.Int32, System.Data.SqlTypes.SqlChars)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetSqlChars\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 629\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Sets the data stored in the column to the specified <xref href=\\\"System.Data.SqlTypes.SqlChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  syntax:\n    content: public virtual void SetSqlChars(int ordinal, SqlChars value)\n    content.vb: Public Overridable Sub SetSqlChars(ordinal As Integer, value As SqlChars)\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    - id: value\n      type: System.Data.SqlTypes.SqlChars\n      description: \"\\n<p>The new value of the column.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.SetSqlChars(Int32, SqlChars)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.SetSqlDateTime(System.Int32,System.Data.SqlTypes.SqlDateTime)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlDateTime(System.Int32,System.Data.SqlTypes.SqlDateTime)\n  id: SetSqlDateTime(System.Int32,System.Data.SqlTypes.SqlDateTime)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: SetSqlDateTime(Int32, SqlDateTime)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.SetSqlDateTime(System.Int32, System.Data.SqlTypes.SqlDateTime)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetSqlDateTime\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 593\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Sets the data stored in the column to the specified <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  syntax:\n    content: public virtual void SetSqlDateTime(int ordinal, SqlDateTime value)\n    content.vb: Public Overridable Sub SetSqlDateTime(ordinal As Integer, value As SqlDateTime)\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    - id: value\n      type: System.Data.SqlTypes.SqlDateTime\n      description: \"\\n<p>The new value of the column.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.SetSqlDateTime(Int32, SqlDateTime)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.SetSqlDecimal(System.Int32,System.Data.SqlTypes.SqlDecimal)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlDecimal(System.Int32,System.Data.SqlTypes.SqlDecimal)\n  id: SetSqlDecimal(System.Int32,System.Data.SqlTypes.SqlDecimal)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: SetSqlDecimal(Int32, SqlDecimal)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.SetSqlDecimal(System.Int32, System.Data.SqlTypes.SqlDecimal)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetSqlDecimal\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 605\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Sets the data stored in the column to the specified <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  syntax:\n    content: public virtual void SetSqlDecimal(int ordinal, SqlDecimal value)\n    content.vb: Public Overridable Sub SetSqlDecimal(ordinal As Integer, value As SqlDecimal)\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    - id: value\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>The new value of the column.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.SetSqlDecimal(Int32, SqlDecimal)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.SetSqlDouble(System.Int32,System.Data.SqlTypes.SqlDouble)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlDouble(System.Int32,System.Data.SqlTypes.SqlDouble)\n  id: SetSqlDouble(System.Int32,System.Data.SqlTypes.SqlDouble)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: SetSqlDouble(Int32, SqlDouble)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.SetSqlDouble(System.Int32, System.Data.SqlTypes.SqlDouble)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetSqlDouble\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 581\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Sets the data stored in the column to the specified <xref href=\\\"System.Data.SqlTypes.SqlDouble\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  syntax:\n    content: public virtual void SetSqlDouble(int ordinal, SqlDouble value)\n    content.vb: Public Overridable Sub SetSqlDouble(ordinal As Integer, value As SqlDouble)\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    - id: value\n      type: System.Data.SqlTypes.SqlDouble\n      description: \"\\n<p>The new value of the column.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.SetSqlDouble(Int32, SqlDouble)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.SetSqlGuid(System.Int32,System.Data.SqlTypes.SqlGuid)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlGuid(System.Int32,System.Data.SqlTypes.SqlGuid)\n  id: SetSqlGuid(System.Int32,System.Data.SqlTypes.SqlGuid)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: SetSqlGuid(Int32, SqlGuid)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.SetSqlGuid(System.Int32, System.Data.SqlTypes.SqlGuid)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetSqlGuid\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 623\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Sets the data stored in the column to the specified <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  syntax:\n    content: public virtual void SetSqlGuid(int ordinal, SqlGuid value)\n    content.vb: Public Overridable Sub SetSqlGuid(ordinal As Integer, value As SqlGuid)\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    - id: value\n      type: System.Data.SqlTypes.SqlGuid\n      description: \"\\n<p>The new value of the column.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.SetSqlGuid(Int32, SqlGuid)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.SetSqlInt16(System.Int32,System.Data.SqlTypes.SqlInt16)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlInt16(System.Int32,System.Data.SqlTypes.SqlInt16)\n  id: SetSqlInt16(System.Int32,System.Data.SqlTypes.SqlInt16)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: SetSqlInt16(Int32, SqlInt16)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.SetSqlInt16(System.Int32, System.Data.SqlTypes.SqlInt16)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetSqlInt16\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 557\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Sets the data stored in the column to the specified <xref href=\\\"System.Data.SqlTypes.SqlInt16\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  syntax:\n    content: public virtual void SetSqlInt16(int ordinal, SqlInt16 value)\n    content.vb: Public Overridable Sub SetSqlInt16(ordinal As Integer, value As SqlInt16)\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    - id: value\n      type: System.Data.SqlTypes.SqlInt16\n      description: \"\\n<p>The new value of the column.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.SetSqlInt16(Int32, SqlInt16)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.SetSqlInt32(System.Int32,System.Data.SqlTypes.SqlInt32)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlInt32(System.Int32,System.Data.SqlTypes.SqlInt32)\n  id: SetSqlInt32(System.Int32,System.Data.SqlTypes.SqlInt32)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: SetSqlInt32(Int32, SqlInt32)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.SetSqlInt32(System.Int32, System.Data.SqlTypes.SqlInt32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetSqlInt32\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 563\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Sets the data stored in the column to the specified <xref href=\\\"System.Data.SqlTypes.SqlInt32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  syntax:\n    content: public virtual void SetSqlInt32(int ordinal, SqlInt32 value)\n    content.vb: Public Overridable Sub SetSqlInt32(ordinal As Integer, value As SqlInt32)\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    - id: value\n      type: System.Data.SqlTypes.SqlInt32\n      description: \"\\n<p>The new value of the column.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.SetSqlInt32(Int32, SqlInt32)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.SetSqlInt64(System.Int32,System.Data.SqlTypes.SqlInt64)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlInt64(System.Int32,System.Data.SqlTypes.SqlInt64)\n  id: SetSqlInt64(System.Int32,System.Data.SqlTypes.SqlInt64)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: SetSqlInt64(Int32, SqlInt64)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.SetSqlInt64(System.Int32, System.Data.SqlTypes.SqlInt64)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetSqlInt64\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 569\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Sets the data stored in the column to the specified <xref href=\\\"System.Data.SqlTypes.SqlInt64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  syntax:\n    content: public virtual void SetSqlInt64(int ordinal, SqlInt64 value)\n    content.vb: Public Overridable Sub SetSqlInt64(ordinal As Integer, value As SqlInt64)\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    - id: value\n      type: System.Data.SqlTypes.SqlInt64\n      description: \"\\n<p>The new value of the column.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.SetSqlInt64(Int32, SqlInt64)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.SetSqlMoney(System.Int32,System.Data.SqlTypes.SqlMoney)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlMoney(System.Int32,System.Data.SqlTypes.SqlMoney)\n  id: SetSqlMoney(System.Int32,System.Data.SqlTypes.SqlMoney)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: SetSqlMoney(Int32, SqlMoney)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.SetSqlMoney(System.Int32, System.Data.SqlTypes.SqlMoney)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetSqlMoney\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 587\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Sets the data stored in the column to the specified <xref href=\\\"System.Data.SqlTypes.SqlMoney\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  syntax:\n    content: public virtual void SetSqlMoney(int ordinal, SqlMoney value)\n    content.vb: Public Overridable Sub SetSqlMoney(ordinal As Integer, value As SqlMoney)\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    - id: value\n      type: System.Data.SqlTypes.SqlMoney\n      description: \"\\n<p>The new value of the column.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.SetSqlMoney(Int32, SqlMoney)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.SetSqlSingle(System.Int32,System.Data.SqlTypes.SqlSingle)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlSingle(System.Int32,System.Data.SqlTypes.SqlSingle)\n  id: SetSqlSingle(System.Int32,System.Data.SqlTypes.SqlSingle)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: SetSqlSingle(Int32, SqlSingle)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.SetSqlSingle(System.Int32, System.Data.SqlTypes.SqlSingle)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetSqlSingle\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 575\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Sets the data stored in the column to the specified <xref href=\\\"System.Data.SqlTypes.SqlSingle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  syntax:\n    content: public virtual void SetSqlSingle(int ordinal, SqlSingle value)\n    content.vb: Public Overridable Sub SetSqlSingle(ordinal As Integer, value As SqlSingle)\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    - id: value\n      type: System.Data.SqlTypes.SqlSingle\n      description: \"\\n<p>The new value of the column.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.SetSqlSingle(Int32, SqlSingle)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.SetSqlString(System.Int32,System.Data.SqlTypes.SqlString)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlString(System.Int32,System.Data.SqlTypes.SqlString)\n  id: SetSqlString(System.Int32,System.Data.SqlTypes.SqlString)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: SetSqlString(Int32, SqlString)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.SetSqlString(System.Int32, System.Data.SqlTypes.SqlString)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetSqlString\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 611\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Sets the data stored in the column to the specified <xref href=\\\"System.Data.SqlTypes.SqlString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  syntax:\n    content: public virtual void SetSqlString(int ordinal, SqlString value)\n    content.vb: Public Overridable Sub SetSqlString(ordinal As Integer, value As SqlString)\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    - id: value\n      type: System.Data.SqlTypes.SqlString\n      description: \"\\n<p>The new value of the column.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.SetSqlString(Int32, SqlString)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.SetSqlXml(System.Int32,System.Data.SqlTypes.SqlXml)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlXml(System.Int32,System.Data.SqlTypes.SqlXml)\n  id: SetSqlXml(System.Int32,System.Data.SqlTypes.SqlXml)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: SetSqlXml(Int32, SqlXml)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.SetSqlXml(System.Int32, System.Data.SqlTypes.SqlXml)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetSqlXml\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 599\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Sets the data stored in the column to the specified <xref href=\\\"System.Data.SqlTypes.SqlXml\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  syntax:\n    content: public virtual void SetSqlXml(int ordinal, SqlXml value)\n    content.vb: Public Overridable Sub SetSqlXml(ordinal As Integer, value As SqlXml)\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    - id: value\n      type: System.Data.SqlTypes.SqlXml\n      description: \"\\n<p>The new value of the column.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.SetSqlXml(Int32, SqlXml)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.SetString(System.Int32,System.String)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.SetString(System.Int32,System.String)\n  id: SetString(System.Int32,System.String)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: SetString(Int32, String)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.SetString(System.Int32, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetString\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 503\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Sets the data stored in the column to the specified <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  syntax:\n    content: public virtual void SetString(int ordinal, string value)\n    content.vb: Public Overridable Sub SetString(ordinal As Integer, value As String)\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    - id: value\n      type: System.String\n      description: \"\\n<p>The new value of the column.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.SetString(Int32, String)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.SetTimeSpan(System.Int32,System.TimeSpan)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.SetTimeSpan(System.Int32,System.TimeSpan)\n  id: SetTimeSpan(System.Int32,System.TimeSpan)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: SetTimeSpan(Int32, TimeSpan)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.SetTimeSpan(System.Int32, System.TimeSpan)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetTimeSpan\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 521\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Sets the value of the column specified to the <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual void SetTimeSpan(int ordinal, TimeSpan value)\n    content.vb: Public Overridable Sub SetTimeSpan(ordinal As Integer, value As TimeSpan)\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    - id: value\n      type: System.TimeSpan\n      description: \"\\n<p>The new value of the column.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> passed in is a negative number.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value passed in is greater than 24 hours in length.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.SetTimeSpan(Int32, TimeSpan)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.SetValue(System.Int32,System.Object)\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.SetValue(System.Int32,System.Object)\n  id: SetValue(System.Int32,System.Object)\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: SetValue(Int32, Object)\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.SetValue(System.Int32, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetValue\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 428\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Sets a new value, expressed as a common language runtime (CLR) type, for the column specified by the column ordinal.</p>\\n\"\n  syntax:\n    content: public virtual void SetValue(int ordinal, object value)\n    content.vb: Public Overridable Sub SetValue(ordinal As Integer, value As Object)\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: \"\\n<p>The zero-based ordinal of the column.</p>\\n\"\n    - id: value\n      type: System.Object\n      description: \"\\n<p>The new value for the specified column.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>ordinal</em> is less than 0 or greater than the number of columns (that is, <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord.FieldCount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>).</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SqlDataRecord.SetValue(Int32, Object)\n- uid: Microsoft.SqlServer.Server.SqlDataRecord.SetValues(System.Object[])\n  commentId: M:Microsoft.SqlServer.Server.SqlDataRecord.SetValues(System.Object[])\n  id: SetValues(System.Object[])\n  parent: Microsoft.SqlServer.Server.SqlDataRecord\n  langs:\n  - csharp\n  - vb\n  name: SetValues(Object[])\n  fullName: Microsoft.SqlServer.Server.SqlDataRecord.SetValues(System.Object[])\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetValues\n    path: src/System.Data.SqlClient/src/Microsoft/SqlServer/Server/SqlDataRecord.cs\n    startLine: 392\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Sets new values for all of the columns in the <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. These values are expressed as common language runtime (CLR) types.</p>\\n\"\n  syntax:\n    content: public virtual int SetValues(params object[] values)\n    content.vb: Public Overridable Function SetValues(ParamArray values As Object()) As Integer\n    parameters:\n    - id: values\n      type: System.Object[]\n      description: \"\\n<p>The array of new values, expressed as CLR types boxed as <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> references, for the <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of column values set as an integer.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>values</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The size of values does not match the number of columns in the <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  fullName.vb: Microsoft.SqlServer.Server.SqlDataRecord.SetValues(System.Object())\n  name.vb: SetValues(Object())\n  nameWithType: SqlDataRecord.SetValues(Object[])\n  nameWithType.vb: SqlDataRecord.SetValues(Object())\nreferences:\n- uid: Microsoft.SqlServer.Server\n  isExternal: false\n  name: Microsoft.SqlServer.Server\n  fullName: Microsoft.SqlServer.Server\n  nameWithType: Microsoft.SqlServer.Server\n  commentId: N:Microsoft.SqlServer.Server\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: Microsoft.SqlServer.Server.SqlMetaData[]\n  name: SqlMetaData[]\n  fullName: Microsoft.SqlServer.Server.SqlMetaData[]\n  fullname.vb: Microsoft.SqlServer.Server.SqlMetaData()\n  name.vb: SqlMetaData()\n  spec.csharp:\n  - uid: Microsoft.SqlServer.Server.SqlMetaData\n    name: SqlMetaData\n    fullName: Microsoft.SqlServer.Server.SqlMetaData\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: Microsoft.SqlServer.Server.SqlMetaData\n    name: SqlMetaData\n    fullName: Microsoft.SqlServer.Server.SqlMetaData\n  - name: ()\n    fullName: ()\n  nameWithType: SqlMetaData[]\n  nameWithType.vb: SqlMetaData()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  fullName: System.Byte\n  nameWithType: Byte\n  commentId: T:System.Byte\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  fullName: System.Int64\n  nameWithType: Int64\n  commentId: T:System.Int64\n- uid: System.Byte[]\n  name: Byte[]\n  fullName: System.Byte[]\n  fullname.vb: System.Byte()\n  name.vb: Byte()\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Byte[]\n  nameWithType.vb: Byte()\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  fullName: System.Char\n  nameWithType: Char\n  commentId: T:System.Char\n- uid: System.Char[]\n  name: Char[]\n  fullName: System.Char[]\n  fullname.vb: System.Char()\n  name.vb: Char()\n  spec.csharp:\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Char[]\n  nameWithType.vb: Char()\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  fullName: System.DateTime\n  nameWithType: DateTime\n  commentId: T:System.DateTime\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  fullName: System.DateTimeOffset\n  nameWithType: DateTimeOffset\n  commentId: T:System.DateTimeOffset\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  fullName: System.Decimal\n  nameWithType: Decimal\n  commentId: T:System.Decimal\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  fullName: System.Double\n  nameWithType: Double\n  commentId: T:System.Double\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  nameWithType: Type\n  commentId: T:System.Type\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  fullName: System.Single\n  nameWithType: Single\n  commentId: T:System.Single\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  fullName: System.Guid\n  nameWithType: Guid\n  commentId: T:System.Guid\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  fullName: System.Int16\n  nameWithType: Int16\n  commentId: T:System.Int16\n- uid: System.Data.SqlTypes.SqlBinary\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlBinary\n  fullName: System.Data.SqlTypes.SqlBinary\n  nameWithType: SqlBinary\n  commentId: T:System.Data.SqlTypes.SqlBinary\n- uid: System.Data.SqlTypes\n  isExternal: false\n  name: System.Data.SqlTypes\n  fullName: System.Data.SqlTypes\n  nameWithType: System.Data.SqlTypes\n  commentId: N:System.Data.SqlTypes\n- uid: System.Data.SqlTypes.SqlBoolean\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlBoolean\n  fullName: System.Data.SqlTypes.SqlBoolean\n  nameWithType: SqlBoolean\n  commentId: T:System.Data.SqlTypes.SqlBoolean\n- uid: System.Data.SqlTypes.SqlByte\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlByte\n  fullName: System.Data.SqlTypes.SqlByte\n  nameWithType: SqlByte\n  commentId: T:System.Data.SqlTypes.SqlByte\n- uid: System.Data.SqlTypes.SqlBytes\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlBytes\n  fullName: System.Data.SqlTypes.SqlBytes\n  nameWithType: SqlBytes\n  commentId: T:System.Data.SqlTypes.SqlBytes\n- uid: System.Data.SqlTypes.SqlChars\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlChars\n  fullName: System.Data.SqlTypes.SqlChars\n  nameWithType: SqlChars\n  commentId: T:System.Data.SqlTypes.SqlChars\n- uid: System.Data.SqlTypes.SqlDateTime\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlDateTime\n  fullName: System.Data.SqlTypes.SqlDateTime\n  nameWithType: SqlDateTime\n  commentId: T:System.Data.SqlTypes.SqlDateTime\n- uid: System.Data.SqlTypes.SqlDecimal\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlDecimal\n  fullName: System.Data.SqlTypes.SqlDecimal\n  nameWithType: SqlDecimal\n  commentId: T:System.Data.SqlTypes.SqlDecimal\n- uid: System.Data.SqlTypes.SqlDouble\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlDouble\n  fullName: System.Data.SqlTypes.SqlDouble\n  nameWithType: SqlDouble\n  commentId: T:System.Data.SqlTypes.SqlDouble\n- uid: System.Data.SqlTypes.SqlGuid\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlGuid\n  fullName: System.Data.SqlTypes.SqlGuid\n  nameWithType: SqlGuid\n  commentId: T:System.Data.SqlTypes.SqlGuid\n- uid: System.Data.SqlTypes.SqlInt16\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlInt16\n  fullName: System.Data.SqlTypes.SqlInt16\n  nameWithType: SqlInt16\n  commentId: T:System.Data.SqlTypes.SqlInt16\n- uid: System.Data.SqlTypes.SqlInt32\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlInt32\n  fullName: System.Data.SqlTypes.SqlInt32\n  nameWithType: SqlInt32\n  commentId: T:System.Data.SqlTypes.SqlInt32\n- uid: System.Data.SqlTypes.SqlInt64\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlInt64\n  fullName: System.Data.SqlTypes.SqlInt64\n  nameWithType: SqlInt64\n  commentId: T:System.Data.SqlTypes.SqlInt64\n- uid: Microsoft.SqlServer.Server.SqlMetaData\n  parent: Microsoft.SqlServer.Server\n  isExternal: false\n  name: SqlMetaData\n  fullName: Microsoft.SqlServer.Server.SqlMetaData\n  nameWithType: SqlMetaData\n  commentId: T:Microsoft.SqlServer.Server.SqlMetaData\n- uid: System.Data.SqlTypes.SqlMoney\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlMoney\n  fullName: System.Data.SqlTypes.SqlMoney\n  nameWithType: SqlMoney\n  commentId: T:System.Data.SqlTypes.SqlMoney\n- uid: System.Data.SqlTypes.SqlSingle\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlSingle\n  fullName: System.Data.SqlTypes.SqlSingle\n  nameWithType: SqlSingle\n  commentId: T:System.Data.SqlTypes.SqlSingle\n- uid: System.Data.SqlTypes.SqlString\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlString\n  fullName: System.Data.SqlTypes.SqlString\n  nameWithType: SqlString\n  commentId: T:System.Data.SqlTypes.SqlString\n- uid: System.Object[]\n  name: Object[]\n  fullName: System.Object[]\n  fullname.vb: System.Object()\n  name.vb: Object()\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Object[]\n  nameWithType.vb: Object()\n- uid: System.Data.SqlTypes.SqlXml\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlXml\n  fullName: System.Data.SqlTypes.SqlXml\n  nameWithType: SqlXml\n  commentId: T:System.Data.SqlTypes.SqlXml\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  fullName: System.TimeSpan\n  nameWithType: TimeSpan\n  commentId: T:System.TimeSpan\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.IndexOutOfRangeException\n  isExternal: false\n  name: IndexOutOfRangeException\n  fullName: System.IndexOutOfRangeException\n  nameWithType: IndexOutOfRangeException\n  commentId: T:System.IndexOutOfRangeException\n- uid: System.Data.SqlTypes.SqlNullValueException\n  isExternal: false\n  name: SqlNullValueException\n  fullName: System.Data.SqlTypes.SqlNullValueException\n  nameWithType: SqlNullValueException\n  commentId: T:System.Data.SqlTypes.SqlNullValueException\n- uid: System.InvalidCastException\n  isExternal: false\n  name: InvalidCastException\n  fullName: System.InvalidCastException\n  nameWithType: InvalidCastException\n  commentId: T:System.InvalidCastException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n- uid: System.TypeLoadException\n  parent: System\n  isExternal: false\n  name: TypeLoadException\n  fullName: System.TypeLoadException\n  nameWithType: TypeLoadException\n  commentId: T:System.TypeLoadException\n- uid: System.IO.FileNotFoundException\n  isExternal: false\n  name: FileNotFoundException\n  fullName: System.IO.FileNotFoundException\n  nameWithType: FileNotFoundException\n  commentId: T:System.IO.FileNotFoundException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n"}