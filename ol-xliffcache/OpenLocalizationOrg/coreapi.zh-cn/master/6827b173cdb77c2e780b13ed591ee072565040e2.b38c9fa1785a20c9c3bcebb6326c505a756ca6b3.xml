{"nodes":[{"pos":[155,167],"content":"EventHandler","needQuote":true,"nodes":[{"content":"EventHandler","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The source of the event.","pos":[961,990],"source":"\\n<p>The source of the event."},{"content":"&lt;/p&gt;\\n","pos":[991,997],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An object that contains no event data.","pos":[1060,1103],"source":"\\n<p>An object that contains no event data."},{"content":"&lt;/p&gt;\\n","pos":[1104,1110],"source":" </p>\\n"},{"pos":[1581,1587],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[1890,1905],"content":"GetMethodInfo()","needQuote":true,"nodes":[{"content":"GetMethodInfo()","pos":[0,15]}]},{"pos":[2074,2087],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[2172,2173],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[2200,2201],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[2308,2321],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[2406,2407],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[2434,2435],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[2670,2676],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[2824,2833],"content":"EventArgs","needQuote":true,"nodes":[{"content":"EventArgs","pos":[0,9]}]},{"pos":[3032,3055],"content":"GetMethodInfo(Delegate)","needQuote":true,"nodes":[{"content":"GetMethodInfo(Delegate)","pos":[0,23]}]},{"pos":[3256,3269],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[3354,3355],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[3407,3415],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[3477,3478],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[3602,3615],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[3700,3701],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[3753,3761],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[3823,3824],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[4110,4137],"content":"RuntimeReflectionExtensions","needQuote":true,"nodes":[{"content":"RuntimeReflectionExtensions","pos":[0,27]}]},{"pos":[4354,4371],"content":"System.Reflection","needQuote":true,"nodes":[{"content":"System.Reflection","pos":[0,17]}]}],"content":"items:\n- uid: System.EventHandler\n  commentId: T:System.EventHandler\n  id: EventHandler\n  parent: System\n  children: []\n  langs:\n  - csharp\n  - vb\n  name: EventHandler\n  fullName: System.EventHandler\n  type: Delegate\n  source:\n    remote:\n      path: src/mscorlib/src/System/EventHandler.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: EventHandler\n    path: src/mscorlib/src/System/EventHandler.cs\n    startLine: 7\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Represents the method that will handle an event that has no event data.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [ComVisible(true)]\n\n      public delegate void EventHandler(object sender, EventArgs e);\n    content.vb: >-\n      <Serializable>\n\n      <ComVisible(True)>\n\n      Public Delegate Sub EventHandler(sender As Object, e As EventArgs)\n    parameters:\n    - id: sender\n      type: System.Object\n      description: \"\\n<p>The source of the event. </p>\\n\"\n    - id: e\n      type: System.EventArgs\n      description: \"\\n<p>An object that contains no event data. </p>\\n\"\n  seealso:\n  - type: System.EventHandler`1\n    commentId: T:System.EventHandler`1\n  - type: System.EventArgs\n    commentId: T:System.EventArgs\n  - type: System.Delegate\n    commentId: T:System.Delegate\n  modifiers.csharp:\n  - public\n  - delegate\n  modifiers.vb:\n  - Public\n  - Delegate\n  nameWithType: EventHandler\n  extensionMethods:\n  - System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\nreferences:\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  parent: System.Reflection.RuntimeReflectionExtensions\n  definition: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  name: GetMethodInfo()\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo()\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: RuntimeReflectionExtensions.GetMethodInfo()\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  fullName: System.EventArgs\n  nameWithType: EventArgs\n  commentId: T:System.EventArgs\n- uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  isExternal: true\n  name: GetMethodInfo(Delegate)\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: RuntimeReflectionExtensions.GetMethodInfo(Delegate)\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n- uid: System.Reflection.RuntimeReflectionExtensions\n  parent: System.Reflection\n  isExternal: false\n  name: RuntimeReflectionExtensions\n  fullName: System.Reflection.RuntimeReflectionExtensions\n  nameWithType: RuntimeReflectionExtensions\n  commentId: T:System.Reflection.RuntimeReflectionExtensions\n- uid: System.Reflection\n  isExternal: false\n  name: System.Reflection\n  fullName: System.Reflection\n  nameWithType: System.Reflection\n  commentId: N:System.Reflection\n"}