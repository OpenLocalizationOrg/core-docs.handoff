{"nodes":[{"pos":[569,590],"content":"RegistryAclExtensions","needQuote":true,"nodes":[{"content":"RegistryAclExtensions","pos":[0,21]}]},{"pos":[2196,2225],"content":"GetAccessControl(RegistryKey)","needQuote":true,"nodes":[{"content":"GetAccessControl(RegistryKey)","pos":[0,29]}]},{"pos":[3780,3832],"content":"GetAccessControl(RegistryKey, AccessControlSections)","needQuote":true,"nodes":[{"content":"GetAccessControl(RegistryKey, AccessControlSections)","pos":[0,52]}]},{"pos":[5619,5666],"content":"SetAccessControl(RegistryKey, RegistrySecurity)","needQuote":true,"nodes":[{"content":"SetAccessControl(RegistryKey, RegistrySecurity)","pos":[0,47]}]},{"pos":[6925,6940],"content":"Microsoft.Win32","needQuote":true,"nodes":[{"content":"Microsoft.Win32","pos":[0,15]}]},{"pos":[7096,7102],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7271,7281],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[7410,7418],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[7521,7522],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7569,7570],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7660,7668],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[7771,7772],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7819,7820],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8002,8016],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[8173,8179],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8278,8279],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8349,8355],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8440,8441],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8544,8550],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8649,8650],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8720,8726],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8811,8812],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9022,9044],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[9238,9244],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9343,9344],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9414,9420],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9506,9507]},{"pos":[9585,9591],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9676,9677],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9794,9800],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9899,9900],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9970,9976],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10062,10063]},{"pos":[10141,10147],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10232,10233],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10461,10492],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[10713,10728],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[10845,10846],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10916,10922],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11008,11009]},{"pos":[11087,11093],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11178,11179],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11305,11320],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[11437,11438],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11508,11514],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11600,11601]},{"pos":[11679,11685],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11770,11771],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11933,11946],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[12084,12095],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[12204,12205],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12252,12253],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12346,12357],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[12466,12467],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12514,12515],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12669,12678],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[12804,12811],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[12912,12913],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12960,12961],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13050,13057],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[13158,13159],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13206,13207],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13377,13394],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[13544,13559],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[13676,13677],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13724,13725],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13822,13837],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[13954,13955],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14002,14003],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14104,14110],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[14285,14296],"content":"RegistryKey","needQuote":true,"nodes":[{"content":"RegistryKey","pos":[0,11]}]},{"pos":[14549,14565],"content":"RegistrySecurity","needQuote":true,"nodes":[{"content":"RegistrySecurity","pos":[0,16]}]},{"pos":[14768,14797],"content":"System.Security.AccessControl","needQuote":true,"nodes":[{"content":"System.Security.AccessControl","pos":[0,29]}]},{"pos":[15080,15101],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]}],"content":"items:\n- uid: Microsoft.Win32.RegistryAclExtensions\n  commentId: T:Microsoft.Win32.RegistryAclExtensions\n  id: RegistryAclExtensions\n  parent: Microsoft.Win32\n  children:\n  - Microsoft.Win32.RegistryAclExtensions.GetAccessControl(Microsoft.Win32.RegistryKey)\n  - Microsoft.Win32.RegistryAclExtensions.GetAccessControl(Microsoft.Win32.RegistryKey,System.Security.AccessControl.AccessControlSections)\n  - Microsoft.Win32.RegistryAclExtensions.SetAccessControl(Microsoft.Win32.RegistryKey,System.Security.AccessControl.RegistrySecurity)\n  langs:\n  - csharp\n  - vb\n  name: RegistryAclExtensions\n  nameWithType: RegistryAclExtensions\n  fullName: Microsoft.Win32.RegistryAclExtensions\n  type: Class\n  source:\n    remote:\n      path: src/Microsoft.Win32.Registry.AccessControl/ref/Microsoft.Win32.Registry.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RegistryAclExtensions\n    path: src/Microsoft.Win32.Registry.AccessControl/ref/Microsoft.Win32.Registry.AccessControl.cs\n    startLine: 10\n  assemblies:\n  - Microsoft.Win32.Registry.AccessControl\n  namespace: Microsoft.Win32\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      public class RegistryAclExtensions\n    content.vb: >-\n      <SecurityCritical>\n\n      Public Class RegistryAclExtensions\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n    ctor: System.Security.SecurityCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n- uid: Microsoft.Win32.RegistryAclExtensions.GetAccessControl(Microsoft.Win32.RegistryKey)\n  commentId: M:Microsoft.Win32.RegistryAclExtensions.GetAccessControl(Microsoft.Win32.RegistryKey)\n  id: GetAccessControl(Microsoft.Win32.RegistryKey)\n  isExtensionMethod: true\n  parent: Microsoft.Win32.RegistryAclExtensions\n  langs:\n  - csharp\n  - vb\n  name: GetAccessControl(RegistryKey)\n  nameWithType: RegistryAclExtensions.GetAccessControl(RegistryKey)\n  fullName: Microsoft.Win32.RegistryAclExtensions.GetAccessControl(Microsoft.Win32.RegistryKey)\n  type: Method\n  source:\n    remote:\n      path: src/Microsoft.Win32.Registry.AccessControl/ref/Microsoft.Win32.Registry.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetAccessControl\n    path: src/Microsoft.Win32.Registry.AccessControl/ref/Microsoft.Win32.Registry.AccessControl.cs\n    startLine: 13\n  assemblies:\n  - Microsoft.Win32.Registry.AccessControl\n  namespace: Microsoft.Win32\n  syntax:\n    content: public static RegistrySecurity GetAccessControl(this RegistryKey key)\n    content.vb: >-\n      <ExtensionAttribute>\n\n      Public Shared Function GetAccessControl(key As RegistryKey) As RegistrySecurity\n    parameters:\n    - id: key\n      type: Microsoft.Win32.RegistryKey\n    return:\n      type: System.Security.AccessControl.RegistrySecurity\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n- uid: Microsoft.Win32.RegistryAclExtensions.GetAccessControl(Microsoft.Win32.RegistryKey,System.Security.AccessControl.AccessControlSections)\n  commentId: M:Microsoft.Win32.RegistryAclExtensions.GetAccessControl(Microsoft.Win32.RegistryKey,System.Security.AccessControl.AccessControlSections)\n  id: GetAccessControl(Microsoft.Win32.RegistryKey,System.Security.AccessControl.AccessControlSections)\n  isExtensionMethod: true\n  parent: Microsoft.Win32.RegistryAclExtensions\n  langs:\n  - csharp\n  - vb\n  name: GetAccessControl(RegistryKey, AccessControlSections)\n  nameWithType: RegistryAclExtensions.GetAccessControl(RegistryKey, AccessControlSections)\n  fullName: Microsoft.Win32.RegistryAclExtensions.GetAccessControl(Microsoft.Win32.RegistryKey, System.Security.AccessControl.AccessControlSections)\n  type: Method\n  source:\n    remote:\n      path: src/Microsoft.Win32.Registry.AccessControl/ref/Microsoft.Win32.Registry.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetAccessControl\n    path: src/Microsoft.Win32.Registry.AccessControl/ref/Microsoft.Win32.Registry.AccessControl.cs\n    startLine: 14\n  assemblies:\n  - Microsoft.Win32.Registry.AccessControl\n  namespace: Microsoft.Win32\n  syntax:\n    content: public static RegistrySecurity GetAccessControl(this RegistryKey key, AccessControlSections includeSections)\n    content.vb: >-\n      <ExtensionAttribute>\n\n      Public Shared Function GetAccessControl(key As RegistryKey, includeSections As AccessControlSections) As RegistrySecurity\n    parameters:\n    - id: key\n      type: Microsoft.Win32.RegistryKey\n    - id: includeSections\n      type: System.Security.AccessControl.AccessControlSections\n    return:\n      type: System.Security.AccessControl.RegistrySecurity\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n- uid: Microsoft.Win32.RegistryAclExtensions.SetAccessControl(Microsoft.Win32.RegistryKey,System.Security.AccessControl.RegistrySecurity)\n  commentId: M:Microsoft.Win32.RegistryAclExtensions.SetAccessControl(Microsoft.Win32.RegistryKey,System.Security.AccessControl.RegistrySecurity)\n  id: SetAccessControl(Microsoft.Win32.RegistryKey,System.Security.AccessControl.RegistrySecurity)\n  isExtensionMethod: true\n  parent: Microsoft.Win32.RegistryAclExtensions\n  langs:\n  - csharp\n  - vb\n  name: SetAccessControl(RegistryKey, RegistrySecurity)\n  nameWithType: RegistryAclExtensions.SetAccessControl(RegistryKey, RegistrySecurity)\n  fullName: Microsoft.Win32.RegistryAclExtensions.SetAccessControl(Microsoft.Win32.RegistryKey, System.Security.AccessControl.RegistrySecurity)\n  type: Method\n  source:\n    remote:\n      path: src/Microsoft.Win32.Registry.AccessControl/ref/Microsoft.Win32.Registry.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetAccessControl\n    path: src/Microsoft.Win32.Registry.AccessControl/ref/Microsoft.Win32.Registry.AccessControl.cs\n    startLine: 15\n  assemblies:\n  - Microsoft.Win32.Registry.AccessControl\n  namespace: Microsoft.Win32\n  syntax:\n    content: public static void SetAccessControl(this RegistryKey key, RegistrySecurity registrySecurity)\n    content.vb: >-\n      <ExtensionAttribute>\n\n      Public Shared Sub SetAccessControl(key As RegistryKey, registrySecurity As RegistrySecurity)\n    parameters:\n    - id: key\n      type: Microsoft.Win32.RegistryKey\n    - id: registrySecurity\n      type: System.Security.AccessControl.RegistrySecurity\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\nreferences:\n- uid: Microsoft.Win32\n  commentId: N:Microsoft.Win32\n  isExternal: false\n  name: Microsoft.Win32\n  nameWithType: Microsoft.Win32\n  fullName: Microsoft.Win32\n- uid: System.Object\n  commentId: T:System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object.ToString\n  commentId: M:System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    nameWithType: Object.ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    nameWithType: Object.ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.Equals(System.Object)\n  commentId: M:System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.Equals(System.Object,System.Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.GetHashCode\n  commentId: M:System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    nameWithType: Object.GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    nameWithType: Object.GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.GetType\n  commentId: M:System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.MemberwiseClone\n  commentId: M:System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    nameWithType: Object.MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    nameWithType: Object.MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System\n  commentId: N:System\n  isExternal: false\n  name: System\n  nameWithType: System\n  fullName: System\n- uid: Microsoft.Win32.RegistryKey\n  commentId: T:Microsoft.Win32.RegistryKey\n  parent: Microsoft.Win32\n  isExternal: false\n  name: RegistryKey\n  nameWithType: RegistryKey\n  fullName: Microsoft.Win32.RegistryKey\n- uid: System.Security.AccessControl.RegistrySecurity\n  commentId: T:System.Security.AccessControl.RegistrySecurity\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: RegistrySecurity\n  nameWithType: RegistrySecurity\n  fullName: System.Security.AccessControl.RegistrySecurity\n- uid: System.Security.AccessControl\n  commentId: N:System.Security.AccessControl\n  isExternal: false\n  name: System.Security.AccessControl\n  nameWithType: System.Security.AccessControl\n  fullName: System.Security.AccessControl\n- uid: System.Security.AccessControl.AccessControlSections\n  commentId: T:System.Security.AccessControl.AccessControlSections\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlSections\n  nameWithType: AccessControlSections\n  fullName: System.Security.AccessControl.AccessControlSections\n"}