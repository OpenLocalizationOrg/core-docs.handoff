{"nodes":[{"pos":[355,378],"content":"DataMisalignedException","needQuote":true,"nodes":[{"content":"DataMisalignedException","pos":[0,23]}]},{"pos":[2578,2603],"content":"DataMisalignedException()","needQuote":true,"nodes":[{"content":"DataMisalignedException()","pos":[0,25]}]},{"pos":[3610,3641],"content":"DataMisalignedException(String)","needQuote":true,"nodes":[{"content":"DataMisalignedException(String)","pos":[0,31]}]},{"pos":[5179,5221],"content":"DataMisalignedException(String, Exception)","needQuote":true,"nodes":[{"content":"DataMisalignedException(String, Exception)","pos":[0,42]}]},{"pos":[7037,7043],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[7174,7180],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7328,7337],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[7542,7555],"content":"ISerializable","needQuote":true,"nodes":[{"content":"ISerializable","pos":[0,13]}]},{"pos":[7816,7826],"content":"_Exception","needQuote":true,"nodes":[{"content":"_Exception","pos":[0,10]}]},{"pos":[8061,8079],"content":"GetBaseException()","needQuote":true,"nodes":[{"content":"GetBaseException()","pos":[0,18]}]},{"pos":[8196,8212],"content":"GetBaseException","needQuote":true,"nodes":[{"content":"GetBaseException","pos":[0,16]}]},{"pos":[8271,8272],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8299,8300],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8381,8397],"content":"GetBaseException","needQuote":true,"nodes":[{"content":"GetBaseException","pos":[0,16]}]},{"pos":[8456,8457],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8484,8485],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8684,8694],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[8795,8803],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[8854,8855],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8882,8883],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8956,8964],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[9015,9016],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9043,9044],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9325,9375],"content":"GetObjectData(SerializationInfo, StreamingContext)","needQuote":true,"nodes":[{"content":"GetObjectData(SerializationInfo, StreamingContext)","pos":[0,50]}]},{"pos":[9673,9686],"content":"GetObjectData","needQuote":true,"nodes":[{"content":"GetObjectData","pos":[0,13]}]},{"pos":[9763,9764],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9847,9864],"content":"SerializationInfo","needQuote":true,"nodes":[{"content":"SerializationInfo","pos":[0,17]}]},{"content":",","pos":[9958,9959]},{"pos":[10046,10062],"content":"StreamingContext","needQuote":true,"nodes":[{"content":"StreamingContext","pos":[0,16]}]},{"pos":[10154,10155],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10327,10340],"content":"GetObjectData","needQuote":true,"nodes":[{"content":"GetObjectData","pos":[0,13]}]},{"pos":[10417,10418],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10501,10518],"content":"SerializationInfo","needQuote":true,"nodes":[{"content":"SerializationInfo","pos":[0,17]}]},{"content":",","pos":[10612,10613]},{"pos":[10700,10716],"content":"StreamingContext","needQuote":true,"nodes":[{"content":"StreamingContext","pos":[0,16]}]},{"pos":[10808,10809],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11129,11138],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[11237,11244],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[11315,11316],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11343,11344],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11416,11423],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[11494,11495],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11522,11523],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11703,11710],"content":"Message","needQuote":true,"nodes":[{"content":"Message","pos":[0,7]}]},{"pos":[11906,11910],"content":"Data","needQuote":true,"nodes":[{"content":"Data","pos":[0,4]}]},{"pos":[12107,12121],"content":"InnerException","needQuote":true,"nodes":[{"content":"InnerException","pos":[0,14]}]},{"pos":[12343,12353],"content":"TargetSite","needQuote":true,"nodes":[{"content":"TargetSite","pos":[0,10]}]},{"pos":[12564,12574],"content":"StackTrace","needQuote":true,"nodes":[{"content":"StackTrace","pos":[0,10]}]},{"pos":[12783,12791],"content":"HelpLink","needQuote":true,"nodes":[{"content":"HelpLink","pos":[0,8]}]},{"pos":[12992,12998],"content":"Source","needQuote":true,"nodes":[{"content":"Source","pos":[0,6]}]},{"pos":[13194,13201],"content":"HResult","needQuote":true,"nodes":[{"content":"HResult","pos":[0,7]}]},{"pos":[13412,13432],"content":"SerializeObjectState","needQuote":true,"nodes":[{"content":"SerializeObjectState","pos":[0,20]}]},{"pos":[13677,13691],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[13810,13816],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[13883,13884],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13934,13940],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14000,14001],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14084,14090],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14157,14158],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14208,14214],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14274,14275],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14489,14511],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[14659,14665],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14732,14733],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14783,14789],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14850,14851]},{"pos":[14906,14912],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14972,14973],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15070,15076],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[15143,15144],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15194,15200],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[15261,15262]},{"pos":[15317,15323],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15383,15384],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15629,15660],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[15826,15841],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[15917,15918],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15968,15974],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16035,16036]},{"pos":[16091,16097],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16157,16158],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16264,16279],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[16355,16356],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16406,16412],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16473,16474]},{"pos":[16529,16535],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16595,16596],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16826,16839],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[16940,16951],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[17023,17024],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17051,17052],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17125,17136],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[17208,17209],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17236,17237],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17420,17437],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[17546,17561],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[17637,17638],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17665,17666],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17743,17758],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[17834,17835],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17862,17863],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18030,18058],"content":"System.Runtime.Serialization","needQuote":true,"nodes":[{"content":"System.Runtime.Serialization","pos":[0,28]}]},{"pos":[18255,18285],"content":"System.Runtime.InteropServices","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices","pos":[0,30]}]},{"pos":[18488,18494],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"items:\n- uid: System.DataMisalignedException\n  commentId: T:System.DataMisalignedException\n  id: DataMisalignedException\n  parent: System\n  children:\n  - System.DataMisalignedException.#ctor\n  - System.DataMisalignedException.#ctor(System.String)\n  - System.DataMisalignedException.#ctor(System.String,System.Exception)\n  langs:\n  - csharp\n  - vb\n  name: DataMisalignedException\n  fullName: System.DataMisalignedException\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/DataMisalignedException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DataMisalignedException\n    path: src/mscorlib/src/System/DataMisalignedException.cs\n    startLine: 16\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System\n  summary: \"\\n<p>The exception that is thrown when a unit of data is read from or written to an address that is not a multiple of the data size. This class cannot be inherited.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [ComVisible(true)]\n\n      public sealed class DataMisalignedException : SystemException, ISerializable, _Exception\n    content.vb: >-\n      <Serializable>\n\n      <ComVisible(True)>\n\n      Public NotInheritable Class DataMisalignedException\n          Inherits SystemException\n          Implements ISerializable, _Exception\n  inheritance:\n  - System.Object\n  - System.Exception\n  implements:\n  - System.Runtime.Serialization.ISerializable\n  - System.Runtime.InteropServices._Exception\n  inheritedMembers:\n  - System.Exception.GetBaseException\n  - System.Exception.ToString\n  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Exception.GetType\n  - System.Exception.Message\n  - System.Exception.Data\n  - System.Exception.InnerException\n  - System.Exception.TargetSite\n  - System.Exception.StackTrace\n  - System.Exception.HelpLink\n  - System.Exception.Source\n  - System.Exception.HResult\n  - System.Exception.SerializeObjectState\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: DataMisalignedException\n- uid: System.DataMisalignedException.#ctor\n  commentId: M:System.DataMisalignedException.#ctor\n  id: '#ctor'\n  parent: System.DataMisalignedException\n  langs:\n  - csharp\n  - vb\n  name: DataMisalignedException()\n  fullName: System.DataMisalignedException.DataMisalignedException()\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/DataMisalignedException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/DataMisalignedException.cs\n    startLine: 20\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.DataMisalignedException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class. </p>\\n\"\n  syntax:\n    content: public DataMisalignedException()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DataMisalignedException.DataMisalignedException()\n- uid: System.DataMisalignedException.#ctor(System.String)\n  commentId: M:System.DataMisalignedException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.DataMisalignedException\n  langs:\n  - csharp\n  - vb\n  name: DataMisalignedException(String)\n  fullName: System.DataMisalignedException.DataMisalignedException(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/DataMisalignedException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/DataMisalignedException.cs\n    startLine: 26\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.DataMisalignedException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using the specified error message.</p>\\n\"\n  syntax:\n    content: public DataMisalignedException(string message)\n    content.vb: Public Sub New(message As String)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that describes the error. The content of <em>message</em> is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DataMisalignedException.DataMisalignedException(String)\n- uid: System.DataMisalignedException.#ctor(System.String,System.Exception)\n  commentId: M:System.DataMisalignedException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.DataMisalignedException\n  langs:\n  - csharp\n  - vb\n  name: DataMisalignedException(String, Exception)\n  fullName: System.DataMisalignedException.DataMisalignedException(System.String, System.Exception)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/DataMisalignedException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/DataMisalignedException.cs\n    startLine: 32\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.DataMisalignedException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using the specified error message and underlying exception.</p>\\n\"\n  syntax:\n    content: public DataMisalignedException(string message, Exception innerException)\n    content.vb: Public Sub New(message As String, innerException As Exception)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that describes the error. The content of <em>message</em> is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture. </p>\\n\"\n    - id: innerException\n      type: System.Exception\n      description: \"\\n<p>The exception that is the cause of the current <xref href=\\\"System.DataMisalignedException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. If the <em>innerException</em> parameter is not <strong>null</strong>, the current exception is raised in a <strong>catch</strong> block that handles the inner exception. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DataMisalignedException.DataMisalignedException(String, Exception)\nreferences:\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  fullName: System.Exception\n  nameWithType: Exception\n  commentId: T:System.Exception\n- uid: System.Runtime.Serialization.ISerializable\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: ISerializable\n  fullName: System.Runtime.Serialization.ISerializable\n  nameWithType: ISerializable\n  commentId: T:System.Runtime.Serialization.ISerializable\n- uid: System.Runtime.InteropServices._Exception\n  parent: System.Runtime.InteropServices\n  isExternal: true\n  name: _Exception\n  fullName: System.Runtime.InteropServices._Exception\n  nameWithType: _Exception\n  commentId: T:System.Runtime.InteropServices._Exception\n- uid: System.Exception.GetBaseException\n  parent: System.Exception\n  isExternal: false\n  name: GetBaseException()\n  fullName: System.Exception.GetBaseException()\n  spec.csharp:\n  - uid: System.Exception.GetBaseException\n    name: GetBaseException\n    fullName: System.Exception.GetBaseException\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.GetBaseException\n    name: GetBaseException\n    fullName: System.Exception.GetBaseException\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Exception.GetBaseException()\n  commentId: M:System.Exception.GetBaseException\n- uid: System.Exception.ToString\n  parent: System.Exception\n  isExternal: false\n  name: ToString()\n  fullName: System.Exception.ToString()\n  spec.csharp:\n  - uid: System.Exception.ToString\n    name: ToString\n    fullName: System.Exception.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.ToString\n    name: ToString\n    fullName: System.Exception.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Exception.ToString()\n  commentId: M:System.Exception.ToString\n- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Exception\n  isExternal: true\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  fullName: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)\n  spec.csharp:\n  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n    name: GetObjectData\n    fullName: System.Exception.GetObjectData\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Runtime.Serialization.SerializationInfo\n    name: SerializationInfo\n    fullName: System.Runtime.Serialization.SerializationInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Runtime.Serialization.StreamingContext\n    name: StreamingContext\n    fullName: System.Runtime.Serialization.StreamingContext\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n    name: GetObjectData\n    fullName: System.Exception.GetObjectData\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Runtime.Serialization.SerializationInfo\n    name: SerializationInfo\n    fullName: System.Runtime.Serialization.SerializationInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Runtime.Serialization.StreamingContext\n    name: StreamingContext\n    fullName: System.Runtime.Serialization.StreamingContext\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)\n  commentId: M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n- uid: System.Exception.GetType\n  parent: System.Exception\n  isExternal: true\n  name: GetType()\n  fullName: System.Exception.GetType()\n  spec.csharp:\n  - uid: System.Exception.GetType\n    name: GetType\n    fullName: System.Exception.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.GetType\n    name: GetType\n    fullName: System.Exception.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Exception.GetType()\n  commentId: M:System.Exception.GetType\n- uid: System.Exception.Message\n  parent: System.Exception\n  isExternal: false\n  name: Message\n  fullName: System.Exception.Message\n  nameWithType: Exception.Message\n  commentId: P:System.Exception.Message\n- uid: System.Exception.Data\n  parent: System.Exception\n  isExternal: false\n  name: Data\n  fullName: System.Exception.Data\n  nameWithType: Exception.Data\n  commentId: P:System.Exception.Data\n- uid: System.Exception.InnerException\n  parent: System.Exception\n  isExternal: false\n  name: InnerException\n  fullName: System.Exception.InnerException\n  nameWithType: Exception.InnerException\n  commentId: P:System.Exception.InnerException\n- uid: System.Exception.TargetSite\n  parent: System.Exception\n  isExternal: true\n  name: TargetSite\n  fullName: System.Exception.TargetSite\n  nameWithType: Exception.TargetSite\n  commentId: P:System.Exception.TargetSite\n- uid: System.Exception.StackTrace\n  parent: System.Exception\n  isExternal: false\n  name: StackTrace\n  fullName: System.Exception.StackTrace\n  nameWithType: Exception.StackTrace\n  commentId: P:System.Exception.StackTrace\n- uid: System.Exception.HelpLink\n  parent: System.Exception\n  isExternal: false\n  name: HelpLink\n  fullName: System.Exception.HelpLink\n  nameWithType: Exception.HelpLink\n  commentId: P:System.Exception.HelpLink\n- uid: System.Exception.Source\n  parent: System.Exception\n  isExternal: false\n  name: Source\n  fullName: System.Exception.Source\n  nameWithType: Exception.Source\n  commentId: P:System.Exception.Source\n- uid: System.Exception.HResult\n  parent: System.Exception\n  isExternal: false\n  name: HResult\n  fullName: System.Exception.HResult\n  nameWithType: Exception.HResult\n  commentId: P:System.Exception.HResult\n- uid: System.Exception.SerializeObjectState\n  parent: System.Exception\n  isExternal: true\n  name: SerializeObjectState\n  fullName: System.Exception.SerializeObjectState\n  nameWithType: Exception.SerializeObjectState\n  commentId: E:System.Exception.SerializeObjectState\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System.Runtime.Serialization\n  isExternal: false\n  name: System.Runtime.Serialization\n  fullName: System.Runtime.Serialization\n  nameWithType: System.Runtime.Serialization\n  commentId: N:System.Runtime.Serialization\n- uid: System.Runtime.InteropServices\n  isExternal: false\n  name: System.Runtime.InteropServices\n  fullName: System.Runtime.InteropServices\n  nameWithType: System.Runtime.InteropServices\n  commentId: N:System.Runtime.InteropServices\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n"}