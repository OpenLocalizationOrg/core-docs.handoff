{"nodes":[{"pos":[381,403],"content":"PreAllocatedOverlapped","needQuote":true,"nodes":[{"content":"PreAllocatedOverlapped","pos":[0,22]}]},{"pos":[1959,2019],"content":"PreAllocatedOverlapped(IOCompletionCallback, Object, Object)","needQuote":true,"nodes":[{"content":"PreAllocatedOverlapped(IOCompletionCallback, Object, Object)","pos":[0,60]}]},{"pos":[3552,3561],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[4325,4341],"content":"System.Threading","needQuote":true,"nodes":[{"content":"System.Threading","pos":[0,16]}]},{"pos":[4499,4505],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[4660,4671],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[4850,4860],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[4989,4997],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[5100,5101],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5148,5149],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5239,5247],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[5350,5351],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5398,5399],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5581,5595],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[5752,5758],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[5857,5858],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5928,5934],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6019,6020],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6123,6129],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[6228,6229],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6299,6305],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6390,6391],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6601,6623],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[6817,6823],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[6922,6923],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6993,6999],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[7085,7086]},{"pos":[7164,7170],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7255,7256],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7373,7379],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7478,7479],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7549,7555],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[7641,7642]},{"pos":[7720,7726],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7811,7812],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8040,8071],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[8292,8307],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[8424,8425],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8495,8501],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8587,8588]},{"pos":[8666,8672],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8757,8758],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8884,8899],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[9016,9017],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9087,9093],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9179,9180]},{"pos":[9258,9264],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9349,9350],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9512,9525],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[9663,9674],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[9783,9784],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9831,9832],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9925,9936],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[10045,10046],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10093,10094],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10248,10257],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[10383,10390],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[10491,10492],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10539,10540],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10629,10636],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[10737,10738],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10785,10786],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10956,10973],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[11123,11138],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[11255,11256],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11303,11304],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11401,11416],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[11533,11534],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11581,11582],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11683,11689],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[11885,11905],"content":"IOCompletionCallback","needQuote":true,"nodes":[{"content":"IOCompletionCallback","pos":[0,20]}]},{"pos":[12126,12135],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[12276,12283],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[12373,12374],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12421,12422],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12516,12523],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[12613,12614],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12661,12662],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]}],"content":"items:\n- uid: System.Threading.PreAllocatedOverlapped\n  commentId: T:System.Threading.PreAllocatedOverlapped\n  id: PreAllocatedOverlapped\n  parent: System.Threading\n  children:\n  - System.Threading.PreAllocatedOverlapped.#ctor(System.Threading.IOCompletionCallback,System.Object,System.Object)\n  - System.Threading.PreAllocatedOverlapped.Dispose\n  langs:\n  - csharp\n  - vb\n  name: PreAllocatedOverlapped\n  nameWithType: PreAllocatedOverlapped\n  fullName: System.Threading.PreAllocatedOverlapped\n  type: Class\n  source:\n    remote:\n      path: src/System.Threading.Overlapped/ref/System.Threading.Overlapped.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PreAllocatedOverlapped\n    path: src/System.Threading.Overlapped/ref/System.Threading.Overlapped.cs\n    startLine: 22\n  assemblies:\n  - System.Threading.Overlapped\n  namespace: System.Threading\n  syntax:\n    content: 'public sealed class PreAllocatedOverlapped : IDisposable'\n    content.vb: >-\n      Public NotInheritable Class PreAllocatedOverlapped\n          Implements IDisposable\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n- uid: System.Threading.PreAllocatedOverlapped.#ctor(System.Threading.IOCompletionCallback,System.Object,System.Object)\n  commentId: M:System.Threading.PreAllocatedOverlapped.#ctor(System.Threading.IOCompletionCallback,System.Object,System.Object)\n  id: '#ctor(System.Threading.IOCompletionCallback,System.Object,System.Object)'\n  parent: System.Threading.PreAllocatedOverlapped\n  langs:\n  - csharp\n  - vb\n  name: PreAllocatedOverlapped(IOCompletionCallback, Object, Object)\n  nameWithType: PreAllocatedOverlapped.PreAllocatedOverlapped(IOCompletionCallback, Object, Object)\n  fullName: System.Threading.PreAllocatedOverlapped.PreAllocatedOverlapped(System.Threading.IOCompletionCallback, System.Object, System.Object)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Threading.Overlapped/ref/System.Threading.Overlapped.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Threading.Overlapped/ref/System.Threading.Overlapped.cs\n    startLine: 24\n  assemblies:\n  - System.Threading.Overlapped\n  namespace: System.Threading\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public PreAllocatedOverlapped(IOCompletionCallback callback, object state, object pinData)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Sub New(callback As IOCompletionCallback, state As Object, pinData As Object)\n    parameters:\n    - id: callback\n      type: System.Threading.IOCompletionCallback\n    - id: state\n      type: System.Object\n    - id: pinData\n      type: System.Object\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n- uid: System.Threading.PreAllocatedOverlapped.Dispose\n  commentId: M:System.Threading.PreAllocatedOverlapped.Dispose\n  id: Dispose\n  parent: System.Threading.PreAllocatedOverlapped\n  langs:\n  - csharp\n  - vb\n  name: Dispose()\n  nameWithType: PreAllocatedOverlapped.Dispose()\n  fullName: System.Threading.PreAllocatedOverlapped.Dispose()\n  type: Method\n  source:\n    remote:\n      path: src/System.Threading.Overlapped/ref/System.Threading.Overlapped.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Dispose\n    path: src/System.Threading.Overlapped/ref/System.Threading.Overlapped.cs\n    startLine: 26\n  assemblies:\n  - System.Threading.Overlapped\n  namespace: System.Threading\n  syntax:\n    content: public void Dispose()\n    content.vb: Public Sub Dispose\n  implements:\n  - System.IDisposable.Dispose\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\nreferences:\n- uid: System.Threading\n  commentId: N:System.Threading\n  isExternal: false\n  name: System.Threading\n  nameWithType: System.Threading\n  fullName: System.Threading\n- uid: System.Object\n  commentId: T:System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.IDisposable\n  commentId: T:System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n- uid: System.Object.ToString\n  commentId: M:System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    nameWithType: Object.ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    nameWithType: Object.ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.Equals(System.Object)\n  commentId: M:System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.Equals(System.Object,System.Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.GetHashCode\n  commentId: M:System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    nameWithType: Object.GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    nameWithType: Object.GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.GetType\n  commentId: M:System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.MemberwiseClone\n  commentId: M:System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    nameWithType: Object.MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    nameWithType: Object.MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System\n  commentId: N:System\n  isExternal: false\n  name: System\n  nameWithType: System\n  fullName: System\n- uid: System.Threading.IOCompletionCallback\n  commentId: T:System.Threading.IOCompletionCallback\n  parent: System.Threading\n  isExternal: false\n  name: IOCompletionCallback\n  nameWithType: IOCompletionCallback\n  fullName: System.Threading.IOCompletionCallback\n- uid: System.IDisposable.Dispose\n  commentId: M:System.IDisposable.Dispose\n  parent: System.IDisposable\n  isExternal: false\n  name: Dispose()\n  nameWithType: IDisposable.Dispose()\n  fullName: System.IDisposable.Dispose()\n  spec.csharp:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    nameWithType: IDisposable.Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    nameWithType: IDisposable.Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n"}