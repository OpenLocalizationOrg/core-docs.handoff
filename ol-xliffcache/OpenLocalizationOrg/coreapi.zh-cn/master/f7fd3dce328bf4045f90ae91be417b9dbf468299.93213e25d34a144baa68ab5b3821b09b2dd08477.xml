{"nodes":[{"pos":[414,429],"content":"DecoderFallback","needQuote":true,"nodes":[{"content":"DecoderFallback","pos":[0,15]}]},{"pos":[2103,2120],"content":"DecoderFallback()","needQuote":true,"nodes":[{"content":"DecoderFallback()","pos":[0,17]}]},{"pos":[3079,3096],"content":"ExceptionFallback","needQuote":true,"nodes":[{"content":"ExceptionFallback","pos":[0,17]}]},{"pos":[4464,4476],"content":"MaxCharCount","needQuote":true,"nodes":[{"content":"MaxCharCount","pos":[0,12]}]},{"pos":[5832,5851],"content":"ReplacementFallback","needQuote":true,"nodes":[{"content":"ReplacementFallback","pos":[0,19]}]},{"pos":[7366,7388],"content":"CreateFallbackBuffer()","needQuote":true,"nodes":[{"content":"CreateFallbackBuffer()","pos":[0,22]}]},{"content":"\\n&lt;p&gt;An object that provides a fallback buffer for a decoder.&lt;/p&gt;\\n","pos":[8238,8305],"source":"\\n<p>An object that provides a fallback buffer for a decoder.</p>\\n"},{"pos":[8615,8626],"content":"System.Text","needQuote":true,"nodes":[{"content":"System.Text","pos":[0,11]}]},{"pos":[8772,8778],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8938,8948],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[9043,9051],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[9120,9121],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9148,9149],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9219,9227],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[9296,9297],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9324,9325],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9508,9522],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[9641,9647],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9714,9715],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9765,9771],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9831,9832],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9915,9921],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9988,9989],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10039,10045],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10105,10106],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10320,10342],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[10490,10496],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[10563,10564],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10614,10620],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10681,10682]},{"pos":[10737,10743],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10803,10804],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10901,10907],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[10974,10975],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11025,11031],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11092,11093]},{"pos":[11148,11154],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11214,11215],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11460,11491],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[11657,11672],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[11748,11749],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11799,11805],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11866,11867]},{"pos":[11922,11928],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11988,11989],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12095,12110],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[12186,12187],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12237,12243],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12304,12305]},{"pos":[12360,12366],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12426,12427],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12657,12670],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[12771,12782],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[12854,12855],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12882,12883],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12956,12967],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[13039,13040],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13067,13068],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13243,13252],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[13345,13352],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[13420,13421],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13448,13449],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13518,13525],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[13593,13594],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13621,13622],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13797,13814],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[13923,13938],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[14014,14015],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14042,14043],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14120,14135],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[14211,14212],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14239,14240],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14385,14391],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[14541,14556],"content":"DecoderFallback","needQuote":true,"nodes":[{"content":"DecoderFallback","pos":[0,15]}]},{"pos":[14737,14742],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[14909,14930],"content":"DecoderFallbackBuffer","needQuote":true,"nodes":[{"content":"DecoderFallbackBuffer","pos":[0,21]}]}],"content":"items:\n- uid: System.Text.DecoderFallback\n  commentId: T:System.Text.DecoderFallback\n  id: DecoderFallback\n  parent: System.Text\n  children:\n  - System.Text.DecoderFallback.#ctor\n  - System.Text.DecoderFallback.CreateFallbackBuffer\n  - System.Text.DecoderFallback.ExceptionFallback\n  - System.Text.DecoderFallback.MaxCharCount\n  - System.Text.DecoderFallback.ReplacementFallback\n  langs:\n  - csharp\n  - vb\n  name: DecoderFallback\n  fullName: System.Text.DecoderFallback\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/DecoderFallback.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DecoderFallback\n    path: src/mscorlib/src/System/Text/DecoderFallback.cs\n    startLine: 13\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>Provides a failure-handling mechanism, called a fallback, for an encoded input byte sequence that cannot be converted to an output character. </p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      public abstract class DecoderFallback\n    content.vb: >-\n      <Serializable>\n\n      Public MustInherit Class DecoderFallback\n  seealso:\n  - type: System.Text.DecoderFallbackBuffer\n    commentId: T:System.Text.DecoderFallbackBuffer\n  - type: System.Text.DecoderReplacementFallback\n    commentId: T:System.Text.DecoderReplacementFallback\n  - type: System.Text.DecoderExceptionFallback\n    commentId: T:System.Text.DecoderExceptionFallback\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: DecoderFallback\n- uid: System.Text.DecoderFallback.#ctor\n  commentId: M:System.Text.DecoderFallback.#ctor\n  id: '#ctor'\n  parent: System.Text.DecoderFallback\n  langs:\n  - csharp\n  - vb\n  name: DecoderFallback()\n  fullName: System.Text.DecoderFallback.DecoderFallback()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Text.Encoding/ref/System.Text.Encoding.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Text.Encoding/ref/System.Text.Encoding.cs\n    startLine: 32\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Text.DecoderFallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class. </p>\\n\"\n  syntax:\n    content: protected DecoderFallback()\n    content.vb: Protected Sub New\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: DecoderFallback.DecoderFallback()\n- uid: System.Text.DecoderFallback.ExceptionFallback\n  commentId: P:System.Text.DecoderFallback.ExceptionFallback\n  id: ExceptionFallback\n  parent: System.Text.DecoderFallback\n  langs:\n  - csharp\n  - vb\n  name: ExceptionFallback\n  fullName: System.Text.DecoderFallback.ExceptionFallback\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/DecoderFallback.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ExceptionFallback\n    path: src/mscorlib/src/System/Text/DecoderFallback.cs\n    startLine: 52\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>Gets an object that throws an exception when an input byte sequence cannot be decoded.</p>\\n\"\n  syntax:\n    content: public static DecoderFallback ExceptionFallback { get; }\n    content.vb: Public Shared ReadOnly Property ExceptionFallback As DecoderFallback\n    parameters: []\n    return:\n      type: System.Text.DecoderFallback\n      description: \"\\n<p>A type derived from the <xref href=\\\"System.Text.DecoderFallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class. The default value is a <xref href=\\\"System.Text.DecoderExceptionFallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: DecoderFallback.ExceptionFallback\n- uid: System.Text.DecoderFallback.MaxCharCount\n  commentId: P:System.Text.DecoderFallback.MaxCharCount\n  id: MaxCharCount\n  parent: System.Text.DecoderFallback\n  langs:\n  - csharp\n  - vb\n  name: MaxCharCount\n  fullName: System.Text.DecoderFallback.MaxCharCount\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/DecoderFallback.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: MaxCharCount\n    path: src/mscorlib/src/System/Text/DecoderFallback.cs\n    startLine: 75\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>When overridden in a derived class, gets the maximum number of characters the current <xref href=\\\"System.Text.DecoderFallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object can return.</p>\\n\"\n  syntax:\n    content: public abstract int MaxCharCount { get; }\n    content.vb: Public MustOverride ReadOnly Property MaxCharCount As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The maximum number of characters the current <xref href=\\\"System.Text.DecoderFallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object can return.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: DecoderFallback.MaxCharCount\n- uid: System.Text.DecoderFallback.ReplacementFallback\n  commentId: P:System.Text.DecoderFallback.ReplacementFallback\n  id: ReplacementFallback\n  parent: System.Text.DecoderFallback\n  langs:\n  - csharp\n  - vb\n  name: ReplacementFallback\n  fullName: System.Text.DecoderFallback.ReplacementFallback\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/DecoderFallback.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ReplacementFallback\n    path: src/mscorlib/src/System/Text/DecoderFallback.cs\n    startLine: 38\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>Gets an object that outputs a substitute string in place of an input byte sequence that cannot be decoded.</p>\\n\"\n  syntax:\n    content: public static DecoderFallback ReplacementFallback { get; }\n    content.vb: Public Shared ReadOnly Property ReplacementFallback As DecoderFallback\n    parameters: []\n    return:\n      type: System.Text.DecoderFallback\n      description: \"\\n<p>A type derived from the <xref href=\\\"System.Text.DecoderFallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class. The default value is a <xref href=\\\"System.Text.DecoderReplacementFallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that emits the QUESTION MARK character (\\\"?\\\", U+003F) in place of unknown byte sequences. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: DecoderFallback.ReplacementFallback\n- uid: System.Text.DecoderFallback.CreateFallbackBuffer\n  commentId: M:System.Text.DecoderFallback.CreateFallbackBuffer\n  id: CreateFallbackBuffer\n  parent: System.Text.DecoderFallback\n  langs:\n  - csharp\n  - vb\n  name: CreateFallbackBuffer()\n  fullName: System.Text.DecoderFallback.CreateFallbackBuffer()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/DecoderFallback.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CreateFallbackBuffer\n    path: src/mscorlib/src/System/Text/DecoderFallback.cs\n    startLine: 71\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>When overridden in a derived class, initializes a new instance of the <xref href=\\\"System.Text.DecoderFallbackBuffer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class. </p>\\n\"\n  syntax:\n    content: public abstract DecoderFallbackBuffer CreateFallbackBuffer()\n    content.vb: Public MustOverride Function CreateFallbackBuffer As DecoderFallbackBuffer\n    return:\n      type: System.Text.DecoderFallbackBuffer\n      description: \"\\n<p>An object that provides a fallback buffer for a decoder.</p>\\n\"\n  seealso:\n  - type: System.Text.DecoderFallbackBuffer\n    commentId: T:System.Text.DecoderFallbackBuffer\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: DecoderFallback.CreateFallbackBuffer()\nreferences:\n- uid: System.Text\n  isExternal: false\n  name: System.Text\n  fullName: System.Text\n  nameWithType: System.Text\n  commentId: N:System.Text\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Text.DecoderFallback\n  parent: System.Text\n  isExternal: false\n  name: DecoderFallback\n  fullName: System.Text.DecoderFallback\n  nameWithType: DecoderFallback\n  commentId: T:System.Text.DecoderFallback\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Text.DecoderFallbackBuffer\n  parent: System.Text\n  isExternal: false\n  name: DecoderFallbackBuffer\n  fullName: System.Text.DecoderFallbackBuffer\n  nameWithType: DecoderFallbackBuffer\n  commentId: T:System.Text.DecoderFallbackBuffer\n"}