{"nodes":[{"pos":[5719,5733],"content":"TypeDescriptor","needQuote":true,"nodes":[{"content":"TypeDescriptor","pos":[0,14]}]},{"pos":[7648,7661],"content":"InterfaceType","needQuote":true,"nodes":[{"content":"InterfaceType","pos":[0,13]}]},{"pos":[8992,9001],"content":"Refreshed","needQuote":true,"nodes":[{"content":"Refreshed","pos":[0,9]}]},{"pos":[10372,10406],"content":"AddAttributes(Object, Attribute[])","needQuote":true,"nodes":[{"content":"AddAttributes(Object, Attribute[])","pos":[0,34]}]},{"content":"\\n&lt;p&gt;An instance of the target component.&lt;/p&gt;\\n","pos":[11360,11407],"source":"\\n<p>An instance of the target component.</p>\\n"},{"content":"\\n&lt;p&gt;One or both of the parameters is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[12013,12079],"source":"\\n<p>One or both of the parameters is <strong>null</strong>.</p>\\n"},{"pos":[13039,13071],"content":"AddAttributes(Type, Attribute[])","needQuote":true,"nodes":[{"content":"AddAttributes(Type, Attribute[])","pos":[0,32]}]},{"content":"\\n&lt;p&gt;One or both of the parameters is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[14718,14784],"source":"\\n<p>One or both of the parameters is <strong>null</strong>.</p>\\n"},{"pos":[15769,15800],"content":"AddEditorTable(Type, Hashtable)","needQuote":true,"nodes":[{"content":"AddEditorTable(Type, Hashtable)","pos":[0,31]}]},{"content":"\\n&lt;p&gt;The editor base type to add the editor table for.","pos":[16687,16741],"source":"\\n<p>The editor base type to add the editor table for."},{"content":"If a table already exists for this type, this method will do nothing.","pos":[16742,16811]},{"content":"&lt;/p&gt;\\n","pos":[16812,16818],"source":" </p>\\n"},{"pos":[17990,18034],"content":"AddProvider(TypeDescriptionProvider, Object)","needQuote":true,"nodes":[{"content":"AddProvider(TypeDescriptionProvider, Object)","pos":[0,44]}]},{"content":"\\n&lt;p&gt;An instance of the target component.&lt;/p&gt;\\n","pos":[19194,19241],"source":"\\n<p>An instance of the target component.</p>\\n"},{"content":"\\n&lt;p&gt;One or both of the parameters are &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[19360,19427],"source":"\\n<p>One or both of the parameters are <strong>null</strong>.</p>\\n"},{"pos":[20770,20812],"content":"AddProvider(TypeDescriptionProvider, Type)","needQuote":true,"nodes":[{"content":"AddProvider(TypeDescriptionProvider, Type)","pos":[0,42]}]},{"content":"\\n&lt;p&gt;One or both of the parameters are &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[22167,22234],"source":"\\n<p>One or both of the parameters are <strong>null</strong>.</p>\\n"},{"pos":[23357,23412],"content":"AddProviderTransparent(TypeDescriptionProvider, Object)","needQuote":true,"nodes":[{"content":"AddProviderTransparent(TypeDescriptionProvider, Object)","pos":[0,55]}]},{"content":"\\n&lt;p&gt;An instance of the target component.&lt;/p&gt;\\n","pos":[24616,24663],"source":"\\n<p>An instance of the target component.</p>\\n"},{"content":"\\n&lt;p&gt;One or both of the parameters are &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[24782,24849],"source":"\\n<p>One or both of the parameters are <strong>null</strong>.</p>\\n"},{"pos":[25697,25750],"content":"AddProviderTransparent(TypeDescriptionProvider, Type)","needQuote":true,"nodes":[{"content":"AddProviderTransparent(TypeDescriptionProvider, Type)","pos":[0,53]}]},{"content":"\\n&lt;p&gt;One or both of the parameters are &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[27149,27216],"source":"\\n<p>One or both of the parameters are <strong>null</strong>.</p>\\n"},{"pos":[27957,27990],"content":"CreateAssociation(Object, Object)","needQuote":true,"nodes":[{"content":"CreateAssociation(Object, Object)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;One or both of the parameters are &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[29253,29320],"source":"\\n<p>One or both of the parameters are <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;primary&lt;/em&gt; is equal to &lt;em&gt;secondary&lt;/em&gt;.&lt;/p&gt;\\n","pos":[29417,29478],"source":"\\n<p>\\n<em>primary</em> is equal to <em>secondary</em>.</p>\\n"},{"pos":[30550,30597],"content":"CreateEvent(Type, EventDescriptor, Attribute[])","needQuote":true,"nodes":[{"content":"CreateEvent(Type, EventDescriptor, Attribute[])","pos":[0,47]}]},{"content":"\\n&lt;p&gt;The type of the component for which to create the new event.","pos":[31792,31857],"source":"\\n<p>The type of the component for which to create the new event."},{"content":"&lt;/p&gt;\\n","pos":[31858,31864],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The existing event information.","pos":[31965,32001],"source":"\\n<p>The existing event information."},{"content":"&lt;/p&gt;\\n","pos":[32002,32008],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The new attributes.","pos":[32082,32106],"source":"\\n<p>The new attributes."},{"content":"&lt;/p&gt;\\n","pos":[32107,32113],"source":" </p>\\n"},{"pos":[33966,34010],"content":"CreateEvent(Type, String, Type, Attribute[])","needQuote":true,"nodes":[{"content":"CreateEvent(Type, String, Type, Attribute[])","pos":[0,44]}]},{"content":"\\n&lt;p&gt;The type of the component the event lives on.","pos":[35131,35181],"source":"\\n<p>The type of the component the event lives on."},{"content":"&lt;/p&gt;\\n","pos":[35182,35188],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The name of the event.","pos":[35251,35278],"source":"\\n<p>The name of the event."},{"content":"&lt;/p&gt;\\n","pos":[35279,35285],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The type of the delegate that handles the event.","pos":[35346,35399],"source":"\\n<p>The type of the delegate that handles the event."},{"content":"&lt;/p&gt;\\n","pos":[35400,35406],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The attributes for this event.","pos":[35480,35515],"source":"\\n<p>The attributes for this event."},{"content":"&lt;/p&gt;\\n","pos":[35516,35522],"source":" </p>\\n"},{"pos":[37324,37380],"content":"CreateInstance(IServiceProvider, Type, Type[], Object[])","needQuote":true,"nodes":[{"content":"CreateInstance(IServiceProvider, Type, Type[], Object[])","pos":[0,56]}]},{"content":"\\n&lt;p&gt;An optional array of parameter types to be passed to the object's constructor.","pos":[38855,38938],"source":"\\n<p>An optional array of parameter types to be passed to the object's constructor."},{"content":"This parameter can be &lt;strong&gt;null&lt;/strong&gt; or an array of zero length.&lt;/p&gt;\\n","pos":[38939,39016],"source":" This parameter can be <strong>null</strong> or an array of zero length.</p>\\n"},{"content":"\\n&lt;p&gt;An optional array of parameter values to pass to the object's constructor.","pos":[39081,39160],"source":"\\n<p>An optional array of parameter values to pass to the object's constructor."},{"content":"If not &lt;strong&gt;null&lt;/strong&gt;, the number of elements must be the same as &lt;em&gt;argTypes&lt;/em&gt;.","pos":[39161,39252],"source":" If not <strong>null</strong>, the number of elements must be the same as <em>argTypes</em>."},{"content":"&lt;/p&gt;\\n","pos":[39253,39259],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;objectType&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;, or &lt;em&gt;args&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt; when &lt;em&gt;argTypes&lt;/em&gt; is not &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[39655,39808],"source":"\\n<p>\\n<em>objectType</em> is <strong>null</strong>, or <em>args</em> is <strong>null</strong> when <em>argTypes</em> is not <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;argTypes&lt;/em&gt; and &lt;em&gt;args&lt;/em&gt; have different number of elements.&lt;/p&gt;\\n","pos":[39905,39988],"source":"\\n<p>\\n<em>argTypes</em> and <em>args</em> have different number of elements.</p>\\n"},{"pos":[41932,41985],"content":"CreateProperty(Type, PropertyDescriptor, Attribute[])","needQuote":true,"nodes":[{"content":"CreateProperty(Type, PropertyDescriptor, Attribute[])","pos":[0,53]}]},{"content":"\\n&lt;p&gt;The existing property descriptor.","pos":[43475,43513],"source":"\\n<p>The existing property descriptor."},{"content":"&lt;/p&gt;\\n","pos":[43514,43520],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The new attributes for this property.","pos":[43594,43636],"source":"\\n<p>The new attributes for this property."},{"content":"&lt;/p&gt;\\n","pos":[43637,43643],"source":" </p>\\n"},{"pos":[45754,45801],"content":"CreateProperty(Type, String, Type, Attribute[])","needQuote":true,"nodes":[{"content":"CreateProperty(Type, String, Type, Attribute[])","pos":[0,47]}]},{"content":"\\n&lt;p&gt;The name of the property.","pos":[47102,47132],"source":"\\n<p>The name of the property."},{"content":"&lt;/p&gt;\\n","pos":[47133,47139],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The new attributes for this property.","pos":[47378,47420],"source":"\\n<p>The new attributes for this property."},{"content":"&lt;/p&gt;\\n","pos":[47421,47427],"source":" </p>\\n"},{"pos":[49449,49477],"content":"GetAssociation(Type, Object)","needQuote":true,"nodes":[{"content":"GetAssociation(Type, Object)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The primary object of the association.&lt;/p&gt;\\n","pos":[50535,50584],"source":"\\n<p>The primary object of the association.</p>\\n"},{"content":"\\n&lt;p&gt;An instance of the secondary type that has been associated with the primary object if an association exists; otherwise, &lt;em&gt;primary&lt;/em&gt; if no specified association exists.&lt;/p&gt;\\n","pos":[50644,50827],"source":"\\n<p>An instance of the secondary type that has been associated with the primary object if an association exists; otherwise, <em>primary</em> if no specified association exists.</p>\\n"},{"content":"\\n&lt;p&gt;One or both of the parameters are &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[50946,51013],"source":"\\n<p>One or both of the parameters are <strong>null</strong>.</p>\\n"},{"pos":[52032,52053],"content":"GetAttributes(Object)","needQuote":true,"nodes":[{"content":"GetAttributes(Object)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The component for which you want to get attributes.","pos":[52917,52973],"source":"\\n<p>The component for which you want to get attributes."},{"content":"&lt;/p&gt;\\n","pos":[52974,52980],"source":" </p>\\n"},{"pos":[54599,54629],"content":"GetAttributes(Object, Boolean)","needQuote":true,"nodes":[{"content":"GetAttributes(Object, Boolean)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;The component for which you want to get attributes.","pos":[55631,55687],"source":"\\n<p>The component for which you want to get attributes."},{"content":"&lt;/p&gt;\\n","pos":[55688,55694],"source":" </p>\\n"},{"pos":[57726,57745],"content":"GetAttributes(Type)","needQuote":true,"nodes":[{"content":"GetAttributes(Type)","pos":[0,19]}]},{"pos":[60301,60321],"content":"GetClassName(Object)","needQuote":true,"nodes":[{"content":"GetClassName(Object)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;component&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[61633,61684],"source":"\\n<p>\\n<em>component</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[61685,61691],"source":" </p>\\n"},{"pos":[63058,63087],"content":"GetClassName(Object, Boolean)","needQuote":true,"nodes":[{"content":"GetClassName(Object, Boolean)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to consider custom type description information; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[64213,64331],"source":"\\n<p>\\n<strong>true</strong> to consider custom type description information; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;component&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[64658,64709],"source":"\\n<p>\\n<em>component</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[64710,64716],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;component&lt;/em&gt; is a cross-process remoted object.&lt;/p&gt;\\n","pos":[64821,64887],"source":"\\n<p>\\n<em>component</em> is a cross-process remoted object.</p>\\n"},{"pos":[66327,66345],"content":"GetClassName(Type)","needQuote":true,"nodes":[{"content":"GetClassName(Type)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;componentType&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[67614,67675],"source":"\\n<p>\\n<em>componentType</em> is <strong>null</strong>.</p>\\n"},{"pos":[69007,69031],"content":"GetComponentName(Object)","needQuote":true,"nodes":[{"content":"GetComponentName(Object)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;component&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[70387,70438],"source":"\\n<p>\\n<em>component</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[70439,70445],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;component&lt;/em&gt; is a cross-process remoted object.&lt;/p&gt;\\n","pos":[70550,70616],"source":"\\n<p>\\n<em>component</em> is a cross-process remoted object.</p>\\n"},{"pos":[71999,72032],"content":"GetComponentName(Object, Boolean)","needQuote":true,"nodes":[{"content":"GetComponentName(Object, Boolean)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to consider custom type description information; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[73160,73278],"source":"\\n<p>\\n<strong>true</strong> to consider custom type description information; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The name of the class for the specified component, or &lt;strong&gt;null&lt;/strong&gt; if there is no component name.&lt;/p&gt;\\n","pos":[73338,73455],"source":"\\n<p>The name of the class for the specified component, or <strong>null</strong> if there is no component name.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;component&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[73574,73625],"source":"\\n<p>\\n<em>component</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[73626,73632],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;component&lt;/em&gt; is a cross-process remoted object.&lt;/p&gt;\\n","pos":[73737,73803],"source":"\\n<p>\\n<em>component</em> is a cross-process remoted object.</p>\\n"},{"pos":[75253,75273],"content":"GetConverter(Object)","needQuote":true,"nodes":[{"content":"GetConverter(Object)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;A component to get the converter for.","pos":[76121,76163],"source":"\\n<p>A component to get the converter for."},{"content":"&lt;/p&gt;\\n","pos":[76164,76170],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;component&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[76508,76559],"source":"\\n<p>\\n<em>component</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[76560,76566],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;component&lt;/em&gt; is a cross-process remoted object.&lt;/p&gt;\\n","pos":[76671,76737],"source":"\\n<p>\\n<em>component</em> is a cross-process remoted object.</p>\\n"},{"pos":[77877,77906],"content":"GetConverter(Object, Boolean)","needQuote":true,"nodes":[{"content":"GetConverter(Object, Boolean)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;A component to get the converter for.","pos":[78852,78894],"source":"\\n<p>A component to get the converter for."},{"content":"&lt;/p&gt;\\n","pos":[78895,78901],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to consider custom type description information; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[78977,79095],"source":"\\n<p>\\n<strong>true</strong> to consider custom type description information; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;component&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[79433,79484],"source":"\\n<p>\\n<em>component</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[79485,79491],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;component&lt;/em&gt; is a cross-process remoted object.&lt;/p&gt;\\n","pos":[79596,79662],"source":"\\n<p>\\n<em>component</em> is a cross-process remoted object.</p>\\n"},{"pos":[80875,80893],"content":"GetConverter(Type)","needQuote":true,"nodes":[{"content":"GetConverter(Type)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;component&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[82146,82197],"source":"\\n<p>\\n<em>component</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[82198,82204],"source":" </p>\\n"},{"pos":[83306,83329],"content":"GetDefaultEvent(Object)","needQuote":true,"nodes":[{"content":"GetDefaultEvent(Object)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The component to get the event for.","pos":[84182,84222],"source":"\\n<p>The component to get the event for."},{"content":"&lt;/p&gt;\\n","pos":[84223,84229],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;component&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[84616,84667],"source":"\\n<p>\\n<em>component</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[84668,84674],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;component&lt;/em&gt; is a cross-process remoted object.&lt;/p&gt;\\n","pos":[84779,84845],"source":"\\n<p>\\n<em>component</em> is a cross-process remoted object.</p>\\n"},{"pos":[86581,86613],"content":"GetDefaultEvent(Object, Boolean)","needQuote":true,"nodes":[{"content":"GetDefaultEvent(Object, Boolean)","pos":[0,32]}]},{"content":"\\n&lt;p&gt;The component to get the event for.","pos":[87552,87592],"source":"\\n<p>The component to get the event for."},{"content":"&lt;/p&gt;\\n","pos":[87593,87599],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to consider custom type description information; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[87675,87793],"source":"\\n<p>\\n<strong>true</strong> to consider custom type description information; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;component&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[88180,88231],"source":"\\n<p>\\n<em>component</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[88232,88238],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;component&lt;/em&gt; is a cross-process remoted object.&lt;/p&gt;\\n","pos":[88343,88409],"source":"\\n<p>\\n<em>component</em> is a cross-process remoted object.</p>\\n"},{"pos":[90218,90239],"content":"GetDefaultEvent(Type)","needQuote":true,"nodes":[{"content":"GetDefaultEvent(Type)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;component&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[91602,91653],"source":"\\n<p>\\n<em>component</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[91654,91660],"source":" </p>\\n"},{"pos":[93358,93384],"content":"GetDefaultProperty(Object)","needQuote":true,"nodes":[{"content":"GetDefaultProperty(Object)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;The component to get the default property for.","pos":[94258,94309],"source":"\\n<p>The component to get the default property for."},{"content":"&lt;/p&gt;\\n","pos":[94310,94316],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;component&lt;/em&gt; is a cross-process remoted object.&lt;/p&gt;\\n","pos":[94715,94781],"source":"\\n<p>\\n<em>component</em> is a cross-process remoted object.</p>\\n"},{"pos":[96092,96127],"content":"GetDefaultProperty(Object, Boolean)","needQuote":true,"nodes":[{"content":"GetDefaultProperty(Object, Boolean)","pos":[0,35]}]},{"content":"\\n&lt;p&gt;The component to get the default property for.","pos":[97099,97150],"source":"\\n<p>The component to get the default property for."},{"content":"&lt;/p&gt;\\n","pos":[97151,97157],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to consider custom type description information; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[97233,97351],"source":"\\n<p>\\n<strong>true</strong> to consider custom type description information; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;component&lt;/em&gt; is a cross-process remoted object.&lt;/p&gt;\\n","pos":[97750,97816],"source":"\\n<p>\\n<em>component</em> is a cross-process remoted object.</p>\\n"},{"pos":[99200,99224],"content":"GetDefaultProperty(Type)","needQuote":true,"nodes":[{"content":"GetDefaultProperty(Type)","pos":[0,24]}]},{"pos":[101799,101822],"content":"GetEditor(Object, Type)","needQuote":true,"nodes":[{"content":"GetEditor(Object, Type)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The component to get the editor for.","pos":[102710,102751],"source":"\\n<p>The component to get the editor for."},{"content":"&lt;/p&gt;\\n","pos":[102752,102758],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An instance of the editor that can be cast to the specified editor type, or &lt;strong&gt;null&lt;/strong&gt; if no editor of the requested type can be found.&lt;/p&gt;\\n","pos":[103036,103193],"source":"\\n<p>An instance of the editor that can be cast to the specified editor type, or <strong>null</strong> if no editor of the requested type can be found.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;component&lt;/em&gt; or &lt;em&gt;editorBaseType&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[103312,103390],"source":"\\n<p>\\n<em>component</em> or <em>editorBaseType</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[103391,103397],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;component&lt;/em&gt; is a cross-process remoted object.&lt;/p&gt;\\n","pos":[103502,103568],"source":"\\n<p>\\n<em>component</em> is a cross-process remoted object.</p>\\n"},{"pos":[104428,104460],"content":"GetEditor(Object, Type, Boolean)","needQuote":true,"nodes":[{"content":"GetEditor(Object, Type, Boolean)","pos":[0,32]}]},{"content":"\\n&lt;p&gt;The component to get the editor for.","pos":[105453,105494],"source":"\\n<p>The component to get the editor for."},{"content":"&lt;/p&gt;\\n","pos":[105495,105501],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A flag indicating whether custom type description information should be considered.&lt;/p&gt;\\n","pos":[105795,105889],"source":"\\n<p>A flag indicating whether custom type description information should be considered.</p>\\n"},{"content":"\\n&lt;p&gt;An instance of the editor that can be cast to the specified editor type, or &lt;strong&gt;null&lt;/strong&gt; if no editor of the requested type can be found.&lt;/p&gt;\\n","pos":[105949,106106],"source":"\\n<p>An instance of the editor that can be cast to the specified editor type, or <strong>null</strong> if no editor of the requested type can be found.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;component&lt;/em&gt; or &lt;em&gt;editorBaseType&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[106225,106303],"source":"\\n<p>\\n<em>component</em> or <em>editorBaseType</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[106304,106310],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;component&lt;/em&gt; is a cross-process remoted object.&lt;/p&gt;\\n","pos":[106415,106481],"source":"\\n<p>\\n<em>component</em> is a cross-process remoted object.</p>\\n"},{"pos":[107414,107435],"content":"GetEditor(Type, Type)","needQuote":true,"nodes":[{"content":"GetEditor(Type, Type)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;An instance of the editor object that can be cast to the given base type, or &lt;strong&gt;null&lt;/strong&gt; if no editor of the requested type can be found.&lt;/p&gt;\\n","pos":[108693,108851],"source":"\\n<p>An instance of the editor object that can be cast to the given base type, or <strong>null</strong> if no editor of the requested type can be found.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;type&lt;/em&gt; or &lt;em&gt;editorBaseType&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[108970,109043],"source":"\\n<p>\\n<em>type</em> or <em>editorBaseType</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[109044,109050],"source":" </p>\\n"},{"pos":[109827,109844],"content":"GetEvents(Object)","needQuote":true,"nodes":[{"content":"GetEvents(Object)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;A component to get the events for.","pos":[110701,110740],"source":"\\n<p>A component to get the events for."},{"content":"&lt;/p&gt;\\n","pos":[110741,110747],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;component&lt;/em&gt; is a cross-process remoted object.&lt;/p&gt;\\n","pos":[111117,111183],"source":"\\n<p>\\n<em>component</em> is a cross-process remoted object.</p>\\n"},{"pos":[112746,112776],"content":"GetEvents(Object, Attribute[])","needQuote":true,"nodes":[{"content":"GetEvents(Object, Attribute[])","pos":[0,30]}]},{"content":"\\n&lt;p&gt;A component to get the events for.","pos":[113752,113791],"source":"\\n<p>A component to get the events for."},{"content":"&lt;/p&gt;\\n","pos":[113792,113798],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;component&lt;/em&gt; is a cross-process remoted object.&lt;/p&gt;\\n","pos":[114413,114479],"source":"\\n<p>\\n<em>component</em> is a cross-process remoted object.</p>\\n"},{"pos":[116304,116343],"content":"GetEvents(Object, Attribute[], Boolean)","needQuote":true,"nodes":[{"content":"GetEvents(Object, Attribute[], Boolean)","pos":[0,39]}]},{"content":"\\n&lt;p&gt;A component to get the events for.","pos":[117422,117461],"source":"\\n<p>A component to get the events for."},{"content":"&lt;/p&gt;\\n","pos":[117462,117468],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to consider custom type description information; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[117743,117861],"source":"\\n<p>\\n<strong>true</strong> to consider custom type description information; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;component&lt;/em&gt; is a cross-process remoted object.&lt;/p&gt;\\n","pos":[118267,118333],"source":"\\n<p>\\n<em>component</em> is a cross-process remoted object.</p>\\n"},{"pos":[120259,120285],"content":"GetEvents(Object, Boolean)","needQuote":true,"nodes":[{"content":"GetEvents(Object, Boolean)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;A component to get the events for.","pos":[121238,121277],"source":"\\n<p>A component to get the events for."},{"content":"&lt;/p&gt;\\n","pos":[121278,121284],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to consider custom type description information; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[121360,121478],"source":"\\n<p>\\n<strong>true</strong> to consider custom type description information; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;component&lt;/em&gt; is a cross-process remoted object.&lt;/p&gt;\\n","pos":[121848,121914],"source":"\\n<p>\\n<em>component</em> is a cross-process remoted object.</p>\\n"},{"pos":[123538,123553],"content":"GetEvents(Type)","needQuote":true,"nodes":[{"content":"GetEvents(Type)","pos":[0,15]}]},{"pos":[126337,126365],"content":"GetEvents(Type, Attribute[])","needQuote":true,"nodes":[{"content":"GetEvents(Type, Attribute[])","pos":[0,28]}]},{"pos":[129708,129736],"content":"GetFullComponentName(Object)","needQuote":true,"nodes":[{"content":"GetFullComponentName(Object)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The fully qualified name of the specified component, or &lt;strong&gt;null&lt;/strong&gt; if the component has no name.&lt;/p&gt;\\n","pos":[130776,130894],"source":"\\n<p>The fully qualified name of the specified component, or <strong>null</strong> if the component has no name.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;component&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[131013,131070],"source":"\\n<p>\\n<em>component</em> is <strong>null</strong>.</p>\\n"},{"pos":[132007,132028],"content":"GetProperties(Object)","needQuote":true,"nodes":[{"content":"GetProperties(Object)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;A component to get the properties for.","pos":[132909,132952],"source":"\\n<p>A component to get the properties for."},{"content":"&lt;/p&gt;\\n","pos":[132953,132959],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;component&lt;/em&gt; is a cross-process remoted object.&lt;/p&gt;\\n","pos":[133347,133413],"source":"\\n<p>\\n<em>component</em> is a cross-process remoted object.</p>\\n"},{"pos":[135022,135056],"content":"GetProperties(Object, Attribute[])","needQuote":true,"nodes":[{"content":"GetProperties(Object, Attribute[])","pos":[0,34]}]},{"content":"\\n&lt;p&gt;A component to get the properties for.","pos":[136058,136101],"source":"\\n<p>A component to get the properties for."},{"content":"&lt;/p&gt;\\n","pos":[136102,136108],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;component&lt;/em&gt; is a cross-process remoted object.&lt;/p&gt;\\n","pos":[136731,136797],"source":"\\n<p>\\n<em>component</em> is a cross-process remoted object.</p>\\n"},{"pos":[138680,138723],"content":"GetProperties(Object, Attribute[], Boolean)","needQuote":true,"nodes":[{"content":"GetProperties(Object, Attribute[], Boolean)","pos":[0,43]}]},{"content":"\\n&lt;p&gt;A component to get the properties for.","pos":[139828,139871],"source":"\\n<p>A component to get the properties for."},{"content":"&lt;/p&gt;\\n","pos":[139872,139878],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to consider custom type description information; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[140153,140271],"source":"\\n<p>\\n<strong>true</strong> to consider custom type description information; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;component&lt;/em&gt; is a cross-process remoted object.&lt;/p&gt;\\n","pos":[140691,140757],"source":"\\n<p>\\n<em>component</em> is a cross-process remoted object.</p>\\n"},{"pos":[142741,142771],"content":"GetProperties(Object, Boolean)","needQuote":true,"nodes":[{"content":"GetProperties(Object, Boolean)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;A component to get the properties for.","pos":[143754,143797],"source":"\\n<p>A component to get the properties for."},{"content":"&lt;/p&gt;\\n","pos":[143798,143804],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to not consider custom type description information; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[143880,144002],"source":"\\n<p>\\n<strong>true</strong> to not consider custom type description information; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;component&lt;/em&gt; is a cross-process remoted object.&lt;/p&gt;\\n","pos":[144388,144454],"source":"\\n<p>\\n<em>component</em> is a cross-process remoted object.</p>\\n"},{"pos":[146124,146143],"content":"GetProperties(Type)","needQuote":true,"nodes":[{"content":"GetProperties(Type)","pos":[0,19]}]},{"pos":[149049,149081],"content":"GetProperties(Type, Attribute[])","needQuote":true,"nodes":[{"content":"GetProperties(Type, Attribute[])","pos":[0,32]}]},{"pos":[152476,152495],"content":"GetProvider(Object)","needQuote":true,"nodes":[{"content":"GetProvider(Object)","pos":[0,19]}]},{"content":"\\n&lt;p&gt;An instance of the target component.&lt;/p&gt;\\n","pos":[153358,153405],"source":"\\n<p>An instance of the target component.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;instance&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[153775,153831],"source":"\\n<p>\\n<em>instance</em> is <strong>null</strong>.</p>\\n"},{"pos":[155220,155237],"content":"GetProvider(Type)","needQuote":true,"nodes":[{"content":"GetProvider(Type)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;type&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[156551,156603],"source":"\\n<p>\\n<em>type</em> is <strong>null</strong>.</p>\\n"},{"pos":[158014,158039],"content":"GetReflectionType(Object)","needQuote":true,"nodes":[{"content":"GetReflectionType(Object)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;An instance of the target component.&lt;/p&gt;\\n","pos":[158960,159007],"source":"\\n<p>An instance of the target component.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;instance&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[159294,159350],"source":"\\n<p>\\n<em>instance</em> is <strong>null</strong>.</p>\\n"},{"pos":[160439,160462],"content":"GetReflectionType(Type)","needQuote":true,"nodes":[{"content":"GetReflectionType(Type)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;type&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[161762,161814],"source":"\\n<p>\\n<em>type</em> is <strong>null</strong>.</p>\\n"},{"pos":[162877,162892],"content":"Refresh(Object)","needQuote":true,"nodes":[{"content":"Refresh(Object)","pos":[0,15]}]},{"content":"\\n&lt;p&gt;A component for which the properties or events have changed.","pos":[163701,163766],"source":"\\n<p>A component for which the properties or events have changed."},{"content":"&lt;/p&gt;\\n","pos":[163767,163773],"source":" </p>\\n"},{"pos":[164538,164555],"content":"Refresh(Assembly)","needQuote":true,"nodes":[{"content":"Refresh(Assembly)","pos":[0,17]}]},{"pos":[166700,166715],"content":"Refresh(Module)","needQuote":true,"nodes":[{"content":"Refresh(Module)","pos":[0,15]}]},{"pos":[168794,168807],"content":"Refresh(Type)","needQuote":true,"nodes":[{"content":"Refresh(Type)","pos":[0,13]}]},{"pos":[170720,170753],"content":"RemoveAssociation(Object, Object)","needQuote":true,"nodes":[{"content":"RemoveAssociation(Object, Object)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;One or both of the parameters are &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[172000,172067],"source":"\\n<p>One or both of the parameters are <strong>null</strong>.</p>\\n"},{"pos":[172995,173021],"content":"RemoveAssociations(Object)","needQuote":true,"nodes":[{"content":"RemoveAssociations(Object)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;primary&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[174072,174127],"source":"\\n<p>\\n<em>primary</em> is <strong>null</strong>.</p>\\n"},{"pos":[175174,175221],"content":"RemoveProvider(TypeDescriptionProvider, Object)","needQuote":true,"nodes":[{"content":"RemoveProvider(TypeDescriptionProvider, Object)","pos":[0,47]}]},{"content":"\\n&lt;p&gt;An instance of the target component.&lt;/p&gt;\\n","pos":[176425,176472],"source":"\\n<p>An instance of the target component.</p>\\n"},{"content":"\\n&lt;p&gt;One or both of the parameters are &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[176591,176658],"source":"\\n<p>One or both of the parameters are <strong>null</strong>.</p>\\n"},{"pos":[177861,177906],"content":"RemoveProvider(TypeDescriptionProvider, Type)","needQuote":true,"nodes":[{"content":"RemoveProvider(TypeDescriptionProvider, Type)","pos":[0,45]}]},{"content":"\\n&lt;p&gt;One or both of the parameters are &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[179318,179385],"source":"\\n<p>One or both of the parameters are <strong>null</strong>.</p>\\n"},{"pos":[180625,180683],"content":"RemoveProviderTransparent(TypeDescriptionProvider, Object)","needQuote":true,"nodes":[{"content":"RemoveProviderTransparent(TypeDescriptionProvider, Object)","pos":[0,58]}]},{"content":"\\n&lt;p&gt;An instance of the target component.&lt;/p&gt;\\n","pos":[181931,181978],"source":"\\n<p>An instance of the target component.</p>\\n"},{"content":"\\n&lt;p&gt;One or both of the parameters are &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[182097,182164],"source":"\\n<p>One or both of the parameters are <strong>null</strong>.</p>\\n"},{"pos":[183024,183080],"content":"RemoveProviderTransparent(TypeDescriptionProvider, Type)","needQuote":true,"nodes":[{"content":"RemoveProviderTransparent(TypeDescriptionProvider, Type)","pos":[0,56]}]},{"content":"\\n&lt;p&gt;One or both of the parameters are &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[184536,184603],"source":"\\n<p>One or both of the parameters are <strong>null</strong>.</p>\\n"},{"pos":[185344,185370],"content":"SortDescriptorArray(IList)","needQuote":true,"nodes":[{"content":"SortDescriptorArray(IList)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;infos&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[186467,186520],"source":"\\n<p>\\n<em>infos</em> is <strong>null</strong>.</p>\\n"},{"pos":[187176,187197],"content":"System.ComponentModel","needQuote":true,"nodes":[{"content":"System.ComponentModel","pos":[0,21]}]},{"pos":[187373,187379],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[187539,187549],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[187644,187652],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[187721,187722],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[187749,187750],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[187820,187828],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[187897,187898],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[187925,187926],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[188109,188123],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[188242,188248],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[188315,188316],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[188366,188372],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[188432,188433],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[188516,188522],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[188589,188590],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[188640,188646],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[188706,188707],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[188921,188943],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[189091,189097],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[189164,189165],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[189215,189221],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[189282,189283]},{"pos":[189338,189344],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[189404,189405],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[189502,189508],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[189575,189576],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[189626,189632],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[189693,189694]},{"pos":[189749,189755],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[189815,189816],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[190061,190092],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[190258,190273],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[190349,190350],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[190400,190406],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[190467,190468]},{"pos":[190523,190529],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[190589,190590],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[190696,190711],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[190787,190788],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[190838,190844],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[190905,190906]},{"pos":[190961,190967],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[191027,191028],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[191258,191271],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[191372,191383],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[191455,191456],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[191483,191484],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[191557,191568],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[191640,191641],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[191668,191669],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[191844,191853],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[191946,191953],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[192021,192022],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[192049,192050],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[192119,192126],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[192194,192195],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[192222,192223],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[192398,192415],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[192524,192539],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[192615,192616],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[192643,192644],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[192721,192736],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[192812,192813],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[192840,192841],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[192986,192992],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[193121,193125],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[193307,193326],"content":"RefreshEventHandler","needQuote":true,"nodes":[{"content":"RefreshEventHandler","pos":[0,19]}]},{"pos":[193508,193519],"content":"Attribute[]","needQuote":true,"nodes":[{"content":"Attribute[]","pos":[0,11]}]},{"pos":[193659,193668],"content":"Attribute","needQuote":true,"nodes":[{"content":"Attribute","pos":[0,9]}]},{"content":"[]","pos":[193732,193734]},{"pos":[193802,193811],"content":"Attribute","needQuote":true,"nodes":[{"content":"Attribute","pos":[0,9]}]},{"pos":[193874,193876],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[194066,194089],"content":"TypeDescriptionProvider","needQuote":true,"nodes":[{"content":"TypeDescriptionProvider","pos":[0,23]}]},{"pos":[194342,194351],"content":"Hashtable","needQuote":true,"nodes":[{"content":"Hashtable","pos":[0,9]}]},{"pos":[194517,194535],"content":"System.Collections","needQuote":true,"nodes":[{"content":"System.Collections","pos":[0,18]}]},{"pos":[194741,194756],"content":"EventDescriptor","needQuote":true,"nodes":[{"content":"EventDescriptor","pos":[0,15]}]},{"pos":[194958,194964],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[195119,195135],"content":"IServiceProvider","needQuote":true,"nodes":[{"content":"IServiceProvider","pos":[0,16]}]},{"pos":[195273,195279],"content":"Type[]","needQuote":true,"nodes":[{"content":"Type[]","pos":[0,6]}]},{"pos":[195399,195403],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[195441,195443]},{"pos":[195506,195510],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[195547,195549],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[195647,195655],"content":"Object[]","needQuote":true,"nodes":[{"content":"Object[]","pos":[0,8]}]},{"pos":[195783,195789],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[195850,195852]},{"pos":[195917,195923],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[195983,195985],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[196164,196182],"content":"PropertyDescriptor","needQuote":true,"nodes":[{"content":"PropertyDescriptor","pos":[0,18]}]},{"pos":[196436,196455],"content":"AttributeCollection","needQuote":true,"nodes":[{"content":"AttributeCollection","pos":[0,19]}]},{"pos":[196670,196677],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[196862,196875],"content":"TypeConverter","needQuote":true,"nodes":[{"content":"TypeConverter","pos":[0,13]}]},{"pos":[197120,197145],"content":"EventDescriptorCollection","needQuote":true,"nodes":[{"content":"EventDescriptorCollection","pos":[0,25]}]},{"pos":[197429,197457],"content":"PropertyDescriptorCollection","needQuote":true,"nodes":[{"content":"PropertyDescriptorCollection","pos":[0,28]}]},{"pos":[197722,197730],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[197890,197907],"content":"System.Reflection","needQuote":true,"nodes":[{"content":"System.Reflection","pos":[0,17]}]},{"pos":[198093,198099],"content":"Module","needQuote":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[198289,198294],"content":"IList","needQuote":true,"nodes":[{"content":"IList","pos":[0,5]}]},{"pos":[198458,198479],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[198680,198697],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[198890,198911],"content":"NotSupportedException","needQuote":true,"nodes":[{"content":"NotSupportedException","pos":[0,21]}]}],"content":"items:\n- uid: System.ComponentModel.TypeDescriptor\n  commentId: T:System.ComponentModel.TypeDescriptor\n  id: TypeDescriptor\n  parent: System.ComponentModel\n  children:\n  - System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])\n  - System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])\n  - System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)\n  - System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)\n  - System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)\n  - System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)\n  - System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)\n  - System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)\n  - System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])\n  - System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])\n  - System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])\n  - System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])\n  - System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])\n  - System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)\n  - System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)\n  - System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)\n  - System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)\n  - System.ComponentModel.TypeDescriptor.GetClassName(System.Object)\n  - System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)\n  - System.ComponentModel.TypeDescriptor.GetClassName(System.Type)\n  - System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)\n  - System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)\n  - System.ComponentModel.TypeDescriptor.GetConverter(System.Object)\n  - System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)\n  - System.ComponentModel.TypeDescriptor.GetConverter(System.Type)\n  - System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)\n  - System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)\n  - System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)\n  - System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)\n  - System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)\n  - System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)\n  - System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)\n  - System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)\n  - System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)\n  - System.ComponentModel.TypeDescriptor.GetEvents(System.Object)\n  - System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])\n  - System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)\n  - System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)\n  - System.ComponentModel.TypeDescriptor.GetEvents(System.Type)\n  - System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])\n  - System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)\n  - System.ComponentModel.TypeDescriptor.GetProperties(System.Object)\n  - System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])\n  - System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)\n  - System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)\n  - System.ComponentModel.TypeDescriptor.GetProperties(System.Type)\n  - System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])\n  - System.ComponentModel.TypeDescriptor.GetProvider(System.Object)\n  - System.ComponentModel.TypeDescriptor.GetProvider(System.Type)\n  - System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)\n  - System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)\n  - System.ComponentModel.TypeDescriptor.InterfaceType\n  - System.ComponentModel.TypeDescriptor.Refresh(System.Object)\n  - System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)\n  - System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)\n  - System.ComponentModel.TypeDescriptor.Refresh(System.Type)\n  - System.ComponentModel.TypeDescriptor.Refreshed\n  - System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)\n  - System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)\n  - System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)\n  - System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)\n  - System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)\n  - System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)\n  - System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)\n  langs:\n  - csharp\n  - vb\n  name: TypeDescriptor\n  fullName: System.ComponentModel.TypeDescriptor\n  type: Class\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TypeDescriptor\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 20\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Provides information about the characteristics for a component, such as its attributes, properties, and events. This class cannot be inherited.</p>\\n\"\n  syntax:\n    content: public sealed class TypeDescriptor\n    content.vb: Public NotInheritable Class TypeDescriptor\n  seealso:\n  - type: System.ComponentModel.EventDescriptor\n    commentId: T:System.ComponentModel.EventDescriptor\n  - type: System.ComponentModel.PropertyDescriptor\n    commentId: T:System.ComponentModel.PropertyDescriptor\n  - type: System.Reflection\n    commentId: N:System.Reflection\n  - type: System.ComponentModel.IComponent\n    commentId: T:System.ComponentModel.IComponent\n  - type: System.ComponentModel.ISite\n    commentId: T:System.ComponentModel.ISite\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: TypeDescriptor\n- uid: System.ComponentModel.TypeDescriptor.InterfaceType\n  commentId: P:System.ComponentModel.TypeDescriptor.InterfaceType\n  id: InterfaceType\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: InterfaceType\n  fullName: System.ComponentModel.TypeDescriptor.InterfaceType\n  type: Property\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: InterfaceType\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 85\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Gets a type that represents a type description provider for all interface types. </p>\\n\"\n  syntax:\n    content: public static Type InterfaceType { get; }\n    content.vb: Public Shared ReadOnly Property InterfaceType As Type\n    parameters: []\n    return:\n      type: System.Type\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents a custom type description provider for all interface types. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: TypeDescriptor.InterfaceType\n- uid: System.ComponentModel.TypeDescriptor.Refreshed\n  commentId: E:System.ComponentModel.TypeDescriptor.Refreshed\n  id: Refreshed\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: Refreshed\n  fullName: System.ComponentModel.TypeDescriptor.Refreshed\n  type: Event\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Refreshed\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 109\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Occurs when the cache for a component is cleared.</p>\\n\"\n  syntax:\n    content: public static event RefreshEventHandler Refreshed\n    content.vb: Public Shared Event Refreshed As RefreshEventHandler\n    return:\n      type: System.ComponentModel.RefreshEventHandler\n  seealso:\n  - type: System.ComponentModel.TypeDescriptor.Refresh(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.Refreshed\n- uid: System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])\n  commentId: M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])\n  id: AddAttributes(System.Object,System.Attribute[])\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: AddAttributes(Object, Attribute[])\n  fullName: System.ComponentModel.TypeDescriptor.AddAttributes(System.Object, System.Attribute[])\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AddAttributes\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 150\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Adds class-level attributes to the target component instance.</p>\\n\"\n  syntax:\n    content: public static TypeDescriptionProvider AddAttributes(object instance, params Attribute[] attributes)\n    content.vb: Public Shared Function AddAttributes(instance As Object, ParamArray attributes As Attribute()) As TypeDescriptionProvider\n    parameters:\n    - id: instance\n      type: System.Object\n      description: \"\\n<p>An instance of the target component.</p>\\n\"\n    - id: attributes\n      type: System.Attribute[]\n      description: \"\\n<p>An array of <xref href=\\\"System.Attribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects to add to the component's class.</p>\\n\"\n    return:\n      type: System.ComponentModel.TypeDescriptionProvider\n      description: \"\\n<p>The newly created <xref href=\\\"System.ComponentModel.TypeDescriptionProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that was used to add the specified attributes.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>One or both of the parameters is <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)\n  see:\n  - type: System.Security.NamedPermissionSet\n    commentId: T:System.Security.NamedPermissionSet\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.ComponentModel.TypeDescriptor.AddAttributes(System.Object, System.Attribute())\n  name.vb: AddAttributes(Object, Attribute())\n  nameWithType: TypeDescriptor.AddAttributes(Object, Attribute[])\n  nameWithType.vb: TypeDescriptor.AddAttributes(Object, Attribute())\n- uid: System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])\n  commentId: M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])\n  id: AddAttributes(System.Type,System.Attribute[])\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: AddAttributes(Type, Attribute[])\n  fullName: System.ComponentModel.TypeDescriptor.AddAttributes(System.Type, System.Attribute[])\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AddAttributes\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 121\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Adds class-level attributes to the target component type.</p>\\n\"\n  syntax:\n    content: public static TypeDescriptionProvider AddAttributes(Type type, params Attribute[] attributes)\n    content.vb: Public Shared Function AddAttributes(type As Type, ParamArray attributes As Attribute()) As TypeDescriptionProvider\n    parameters:\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the target component.</p>\\n\"\n    - id: attributes\n      type: System.Attribute[]\n      description: \"\\n<p>An array of <xref href=\\\"System.Attribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects to add to the component's class.</p>\\n\"\n    return:\n      type: System.ComponentModel.TypeDescriptionProvider\n      description: \"\\n<p>The newly created <xref href=\\\"System.ComponentModel.TypeDescriptionProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that was used to add the specified attributes.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>One or both of the parameters is <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)\n  see:\n  - type: System.Security.NamedPermissionSet\n    commentId: T:System.Security.NamedPermissionSet\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.ComponentModel.TypeDescriptor.AddAttributes(System.Type, System.Attribute())\n  name.vb: AddAttributes(Type, Attribute())\n  nameWithType: TypeDescriptor.AddAttributes(Type, Attribute[])\n  nameWithType.vb: TypeDescriptor.AddAttributes(Type, Attribute())\n- uid: System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)\n  commentId: M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)\n  id: AddEditorTable(System.Type,System.Collections.Hashtable)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: AddEditorTable(Type, Hashtable)\n  fullName: System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type, System.Collections.Hashtable)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AddEditorTable\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 176\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Adds an editor table for the given editor base type. </p>\\n\"\n  syntax:\n    content: public static void AddEditorTable(Type editorBaseType, Hashtable table)\n    content.vb: Public Shared Sub AddEditorTable(editorBaseType As Type, table As Hashtable)\n    parameters:\n    - id: editorBaseType\n      type: System.Type\n      description: \"\\n<p>The editor base type to add the editor table for. If a table already exists for this type, this method will do nothing. </p>\\n\"\n    - id: table\n      type: System.Collections.Hashtable\n      description: \"\\n<p>The <xref href=\\\"System.Collections.Hashtable\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to add. </p>\\n\"\n  seealso:\n  - type: System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.AddEditorTable(Type, Hashtable)\n- uid: System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)\n  commentId: M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)\n  id: AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: AddProvider(TypeDescriptionProvider, Object)\n  fullName: System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AddProvider\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 225\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Adds a type description provider for a single instance of a component.</p>\\n\"\n  syntax:\n    content: public static void AddProvider(TypeDescriptionProvider provider, object instance)\n    content.vb: Public Shared Sub AddProvider(provider As TypeDescriptionProvider, instance As Object)\n    parameters:\n    - id: provider\n      type: System.ComponentModel.TypeDescriptionProvider\n      description: \"\\n<p>The <xref href=\\\"System.ComponentModel.TypeDescriptionProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to add.</p>\\n\"\n    - id: instance\n      type: System.Object\n      description: \"\\n<p>An instance of the target component.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>One or both of the parameters are <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetProvider(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])\n    commentId: M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])\n  see:\n  - type: System.Security.NamedPermissionSet\n    commentId: T:System.Security.NamedPermissionSet\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.AddProvider(TypeDescriptionProvider, Object)\n- uid: System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)\n  commentId: M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)\n  id: AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: AddProvider(TypeDescriptionProvider, Type)\n  fullName: System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider, System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AddProvider\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 191\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Adds a type description provider for a component class.</p>\\n\"\n  syntax:\n    content: public static void AddProvider(TypeDescriptionProvider provider, Type type)\n    content.vb: Public Shared Sub AddProvider(provider As TypeDescriptionProvider, type As Type)\n    parameters:\n    - id: provider\n      type: System.ComponentModel.TypeDescriptionProvider\n      description: \"\\n<p>The <xref href=\\\"System.ComponentModel.TypeDescriptionProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to add.</p>\\n\"\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the target component.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>One or both of the parameters are <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.TypeDescriptor.GetProvider(System.Type)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)\n  - type: System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])\n    commentId: M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])\n  see:\n  - type: System.Security.NamedPermissionSet\n    commentId: T:System.Security.NamedPermissionSet\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.AddProvider(TypeDescriptionProvider, Type)\n- uid: System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)\n  commentId: M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)\n  id: AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: AddProviderTransparent(TypeDescriptionProvider, Object)\n  fullName: System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AddProviderTransparent\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 299\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Adds a type description provider for a single instance of a component.</p>\\n\"\n  syntax:\n    content: public static void AddProviderTransparent(TypeDescriptionProvider provider, object instance)\n    content.vb: Public Shared Sub AddProviderTransparent(provider As TypeDescriptionProvider, instance As Object)\n    parameters:\n    - id: provider\n      type: System.ComponentModel.TypeDescriptionProvider\n      description: \"\\n<p>The <xref href=\\\"System.ComponentModel.TypeDescriptionProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to add.</p>\\n\"\n    - id: instance\n      type: System.Object\n      description: \"\\n<p>An instance of the target component.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>One or both of the parameters are <strong>null</strong>.</p>\\n\"\n  see:\n  - type: System.Security.Permissions.TypeDescriptorPermission\n    commentId: T:System.Security.Permissions.TypeDescriptorPermission\n  - type: System.Reflection.Assembly.PermissionSet\n    commentId: P:System.Reflection.Assembly.PermissionSet\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.AddProviderTransparent(TypeDescriptionProvider, Object)\n- uid: System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)\n  commentId: M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)\n  id: AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: AddProviderTransparent(TypeDescriptionProvider, Type)\n  fullName: System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider, System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AddProviderTransparent\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 271\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Adds a type description provider for a component class.</p>\\n\"\n  syntax:\n    content: public static void AddProviderTransparent(TypeDescriptionProvider provider, Type type)\n    content.vb: Public Shared Sub AddProviderTransparent(provider As TypeDescriptionProvider, type As Type)\n    parameters:\n    - id: provider\n      type: System.ComponentModel.TypeDescriptionProvider\n      description: \"\\n<p>The <xref href=\\\"System.ComponentModel.TypeDescriptionProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to add.</p>\\n\"\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the target component.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>One or both of the parameters are <strong>null</strong>.</p>\\n\"\n  see:\n  - type: System.Security.Permissions.TypeDescriptorPermission\n    commentId: T:System.Security.Permissions.TypeDescriptorPermission\n  - type: System.Reflection.Assembly.PermissionSet\n    commentId: P:System.Reflection.Assembly.PermissionSet\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.AddProviderTransparent(TypeDescriptionProvider, Type)\n- uid: System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)\n  commentId: M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)\n  id: CreateAssociation(System.Object,System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: CreateAssociation(Object, Object)\n  fullName: System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreateAssociation\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 394\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Creates a primary-secondary association between two objects.</p>\\n\"\n  syntax:\n    content: public static void CreateAssociation(object primary, object secondary)\n    content.vb: Public Shared Sub CreateAssociation(primary As Object, secondary As Object)\n    parameters:\n    - id: primary\n      type: System.Object\n      description: \"\\n<p>The primary <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: secondary\n      type: System.Object\n      description: \"\\n<p>The secondary <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>One or both of the parameters are <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>primary</em> is equal to <em>secondary</em>.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)\n  see:\n  - type: System.Security.NamedPermissionSet\n    commentId: T:System.Security.NamedPermissionSet\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.CreateAssociation(Object, Object)\n- uid: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])\n  commentId: M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])\n  id: CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: CreateEvent(Type, EventDescriptor, Attribute[])\n  fullName: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type, System.ComponentModel.EventDescriptor, System.Attribute[])\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreateEvent\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 467\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Creates a new event descriptor that is identical to an existing event descriptor, when passed the existing <xref href=\\\"System.ComponentModel.EventDescriptor\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public static EventDescriptor CreateEvent(Type componentType, EventDescriptor oldEventDescriptor, params Attribute[] attributes)\n    content.vb: Public Shared Function CreateEvent(componentType As Type, oldEventDescriptor As EventDescriptor, ParamArray attributes As Attribute()) As EventDescriptor\n    parameters:\n    - id: componentType\n      type: System.Type\n      description: \"\\n<p>The type of the component for which to create the new event. </p>\\n\"\n    - id: oldEventDescriptor\n      type: System.ComponentModel.EventDescriptor\n      description: \"\\n<p>The existing event information. </p>\\n\"\n    - id: attributes\n      type: System.Attribute[]\n      description: \"\\n<p>The new attributes. </p>\\n\"\n    return:\n      type: System.ComponentModel.EventDescriptor\n      description: \"\\n<p>A new <xref href=\\\"System.ComponentModel.EventDescriptor\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that has merged the specified metadata attributes with the existing metadata attributes.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])\n    commentId: M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])\n  see:\n  - type: System.Security.Permissions.ReflectionPermission\n    commentId: T:System.Security.Permissions.ReflectionPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type, System.ComponentModel.EventDescriptor, System.Attribute())\n  name.vb: CreateEvent(Type, EventDescriptor, Attribute())\n  nameWithType: TypeDescriptor.CreateEvent(Type, EventDescriptor, Attribute[])\n  nameWithType.vb: TypeDescriptor.CreateEvent(Type, EventDescriptor, Attribute())\n- uid: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])\n  commentId: M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])\n  id: CreateEvent(System.Type,System.String,System.Type,System.Attribute[])\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: CreateEvent(Type, String, Type, Attribute[])\n  fullName: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type, System.String, System.Type, System.Attribute[])\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreateEvent\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 458\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Creates a new event descriptor that is identical to an existing event descriptor by dynamically generating descriptor information from a specified event on a type.</p>\\n\"\n  syntax:\n    content: public static EventDescriptor CreateEvent(Type componentType, string name, Type type, params Attribute[] attributes)\n    content.vb: Public Shared Function CreateEvent(componentType As Type, name As String, type As Type, ParamArray attributes As Attribute()) As EventDescriptor\n    parameters:\n    - id: componentType\n      type: System.Type\n      description: \"\\n<p>The type of the component the event lives on. </p>\\n\"\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the event. </p>\\n\"\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The type of the delegate that handles the event. </p>\\n\"\n    - id: attributes\n      type: System.Attribute[]\n      description: \"\\n<p>The attributes for this event. </p>\\n\"\n    return:\n      type: System.ComponentModel.EventDescriptor\n      description: \"\\n<p>An <xref href=\\\"System.ComponentModel.EventDescriptor\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is bound to a type.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])\n    commentId: M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])\n  see:\n  - type: System.Security.Permissions.ReflectionPermission\n    commentId: T:System.Security.Permissions.ReflectionPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type, System.String, System.Type, System.Attribute())\n  name.vb: CreateEvent(Type, String, Type, Attribute())\n  nameWithType: TypeDescriptor.CreateEvent(Type, String, Type, Attribute[])\n  nameWithType.vb: TypeDescriptor.CreateEvent(Type, String, Type, Attribute())\n- uid: System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])\n  commentId: M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])\n  id: CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: CreateInstance(IServiceProvider, Type, Type[], Object[])\n  fullName: System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider, System.Type, System.Type[], System.Object[])\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreateInstance\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 477\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Creates an object that can substitute for another data type. </p>\\n\"\n  syntax:\n    content: public static object CreateInstance(IServiceProvider provider, Type objectType, Type[] argTypes, object[] args)\n    content.vb: Public Shared Function CreateInstance(provider As IServiceProvider, objectType As Type, argTypes As Type(), args As Object()) As Object\n    parameters:\n    - id: provider\n      type: System.IServiceProvider\n      description: \"\\n<p>The service provider that provides a <xref href=\\\"System.ComponentModel.TypeDescriptionProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> service. This parameter can be <strong>null</strong>.</p>\\n\"\n    - id: objectType\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of object to create.</p>\\n\"\n    - id: argTypes\n      type: System.Type[]\n      description: \"\\n<p>An optional array of parameter types to be passed to the object's constructor. This parameter can be <strong>null</strong> or an array of zero length.</p>\\n\"\n    - id: args\n      type: System.Object[]\n      description: \"\\n<p>An optional array of parameter values to pass to the object's constructor. If not <strong>null</strong>, the number of elements must be the same as <em>argTypes</em>. </p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>An instance of the substitute data type if an associated <xref href=\\\"System.ComponentModel.TypeDescriptionProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is found; otherwise, <strong>null</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>objectType</em> is <strong>null</strong>, or <em>args</em> is <strong>null</strong> when <em>argTypes</em> is not <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>argTypes</em> and <em>args</em> have different number of elements.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])\n    commentId: M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])\n  - type: System.ComponentModel.TypeDescriptor.GetClassName(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider, System.Type, System.Type(), System.Object())\n  name.vb: CreateInstance(IServiceProvider, Type, Type(), Object())\n  nameWithType: TypeDescriptor.CreateInstance(IServiceProvider, Type, Type[], Object[])\n  nameWithType.vb: TypeDescriptor.CreateInstance(IServiceProvider, Type, Type(), Object())\n- uid: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])\n  commentId: M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])\n  id: CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: CreateProperty(Type, PropertyDescriptor, Attribute[])\n  fullName: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type, System.ComponentModel.PropertyDescriptor, System.Attribute[])\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreateProperty\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 529\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Creates a new property descriptor from an existing property descriptor, using the specified existing <xref href=\\\"System.ComponentModel.PropertyDescriptor\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and attribute array.</p>\\n\"\n  syntax:\n    content: public static PropertyDescriptor CreateProperty(Type componentType, PropertyDescriptor oldPropertyDescriptor, params Attribute[] attributes)\n    content.vb: Public Shared Function CreateProperty(componentType As Type, oldPropertyDescriptor As PropertyDescriptor, ParamArray attributes As Attribute()) As PropertyDescriptor\n    parameters:\n    - id: componentType\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the component that the property is a member of. </p>\\n\"\n    - id: oldPropertyDescriptor\n      type: System.ComponentModel.PropertyDescriptor\n      description: \"\\n<p>The existing property descriptor. </p>\\n\"\n    - id: attributes\n      type: System.Attribute[]\n      description: \"\\n<p>The new attributes for this property. </p>\\n\"\n    return:\n      type: System.ComponentModel.PropertyDescriptor\n      description: \"\\n<p>A new <xref href=\\\"System.ComponentModel.PropertyDescriptor\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that has the specified metadata attributes merged with the existing metadata attributes.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.PropertyDescriptor\n    commentId: T:System.ComponentModel.PropertyDescriptor\n  - type: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])\n    commentId: M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])\n  - type: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])\n    commentId: M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])\n  see:\n  - type: System.Security.Permissions.ReflectionPermission\n    commentId: T:System.Security.Permissions.ReflectionPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type, System.ComponentModel.PropertyDescriptor, System.Attribute())\n  name.vb: CreateProperty(Type, PropertyDescriptor, Attribute())\n  nameWithType: TypeDescriptor.CreateProperty(Type, PropertyDescriptor, Attribute[])\n  nameWithType.vb: TypeDescriptor.CreateProperty(Type, PropertyDescriptor, Attribute())\n- uid: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])\n  commentId: M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])\n  id: CreateProperty(System.Type,System.String,System.Type,System.Attribute[])\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: CreateProperty(Type, String, Type, Attribute[])\n  fullName: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type, System.String, System.Type, System.Attribute[])\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreateProperty\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 520\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Creates and dynamically binds a property descriptor to a type, using the specified property name, type, and attribute array.</p>\\n\"\n  syntax:\n    content: public static PropertyDescriptor CreateProperty(Type componentType, string name, Type type, params Attribute[] attributes)\n    content.vb: Public Shared Function CreateProperty(componentType As Type, name As String, type As Type, ParamArray attributes As Attribute()) As PropertyDescriptor\n    parameters:\n    - id: componentType\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the component that the property is a member of. </p>\\n\"\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the property. </p>\\n\"\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the property. </p>\\n\"\n    - id: attributes\n      type: System.Attribute[]\n      description: \"\\n<p>The new attributes for this property. </p>\\n\"\n    return:\n      type: System.ComponentModel.PropertyDescriptor\n      description: \"\\n<p>A <xref href=\\\"System.ComponentModel.PropertyDescriptor\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is bound to the specified type and that has the specified metadata attributes merged with the existing metadata attributes.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.PropertyDescriptor\n    commentId: T:System.ComponentModel.PropertyDescriptor\n  - type: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])\n    commentId: M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])\n  - type: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])\n    commentId: M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])\n  see:\n  - type: System.Security.Permissions.ReflectionPermission\n    commentId: T:System.Security.Permissions.ReflectionPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type, System.String, System.Type, System.Attribute())\n  name.vb: CreateProperty(Type, String, Type, Attribute())\n  nameWithType: TypeDescriptor.CreateProperty(Type, String, Type, Attribute[])\n  nameWithType.vb: TypeDescriptor.CreateProperty(Type, String, Type, Attribute())\n- uid: System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)\n  commentId: M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)\n  id: GetAssociation(System.Type,System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetAssociation(Type, Object)\n  fullName: System.ComponentModel.TypeDescriptor.GetAssociation(System.Type, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetAssociation\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 608\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns an instance of the type associated with the specified primary object.</p>\\n\"\n  syntax:\n    content: public static object GetAssociation(Type type, object primary)\n    content.vb: Public Shared Function GetAssociation(type As Type, primary As Object) As Object\n    parameters:\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the target component.</p>\\n\"\n    - id: primary\n      type: System.Object\n      description: \"\\n<p>The primary object of the association.</p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>An instance of the secondary type that has been associated with the primary object if an association exists; otherwise, <em>primary</em> if no specified association exists.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>One or both of the parameters are <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)\n    commentId: M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)\n  - type: System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)\n  - type: System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.GetAssociation(Type, Object)\n- uid: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)\n  commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)\n  id: GetAttributes(System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetAttributes(Object)\n  fullName: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetAttributes\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 710\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns the collection of attributes for the specified component.</p>\\n\"\n  syntax:\n    content: public static AttributeCollection GetAttributes(object component)\n    content.vb: Public Shared Function GetAttributes(component As Object) As AttributeCollection\n    parameters:\n    - id: component\n      type: System.Object\n      description: \"\\n<p>The component for which you want to get attributes. </p>\\n\"\n    return:\n      type: System.ComponentModel.AttributeCollection\n      description: \"\\n<p>An <xref href=\\\"System.ComponentModel.AttributeCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the attributes for the component. If <em>component</em> is <strong>null</strong>, this method returns an empty collection.</p>\\n\"\n  seealso:\n  - type: System.Attribute\n    commentId: T:System.Attribute\n  - type: System.ComponentModel.AttributeCollection\n    commentId: T:System.ComponentModel.AttributeCollection\n  - type: System.ComponentModel.CustomTypeDescriptor.GetAttributes\n    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetAttributes\n  - type: System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])\n    commentId: M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])\n  - type: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.GetAttributes(Object)\n- uid: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)\n  commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)\n  id: GetAttributes(System.Object,System.Boolean)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetAttributes(Object, Boolean)\n  fullName: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object, System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetAttributes\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 718\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns a collection of attributes for the specified component and a Boolean indicating that a custom type descriptor has been created.</p>\\n\"\n  syntax:\n    content: public static AttributeCollection GetAttributes(object component, bool noCustomTypeDesc)\n    content.vb: Public Shared Function GetAttributes(component As Object, noCustomTypeDesc As Boolean) As AttributeCollection\n    parameters:\n    - id: component\n      type: System.Object\n      description: \"\\n<p>The component for which you want to get attributes. </p>\\n\"\n    - id: noCustomTypeDesc\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to use a baseline set of attributes from the custom type descriptor if <em>component</em> is of type <xref href=\\\"System.ComponentModel.ICustomTypeDescriptor\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>; otherwise, <strong>false</strong>.</p>\\n\"\n    return:\n      type: System.ComponentModel.AttributeCollection\n      description: \"\\n<p>An <xref href=\\\"System.ComponentModel.AttributeCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with the attributes for the component. If the component is <strong>null</strong>, this method returns an empty collection.</p>\\n\"\n  seealso:\n  - type: System.Attribute\n    commentId: T:System.Attribute\n  - type: System.ComponentModel.AttributeCollection\n    commentId: T:System.ComponentModel.AttributeCollection\n  - type: System.ComponentModel.ICustomTypeDescriptor\n    commentId: T:System.ComponentModel.ICustomTypeDescriptor\n  - type: System.ComponentModel.CustomTypeDescriptor.GetAttributes\n    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetAttributes\n  - type: System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])\n    commentId: M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])\n  - type: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.GetAttributes(Object, Boolean)\n- uid: System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)\n  commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)\n  id: GetAttributes(System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetAttributes(Type)\n  fullName: System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetAttributes\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 695\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns a collection of attributes for the specified type of component.</p>\\n\"\n  syntax:\n    content: public static AttributeCollection GetAttributes(Type componentType)\n    content.vb: Public Shared Function GetAttributes(componentType As Type) As AttributeCollection\n    parameters:\n    - id: componentType\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the target component. </p>\\n\"\n    return:\n      type: System.ComponentModel.AttributeCollection\n      description: \"\\n<p>An <xref href=\\\"System.ComponentModel.AttributeCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with the attributes for the type of the component. If the component is <strong>null</strong>, this method returns an empty collection.</p>\\n\"\n  seealso:\n  - type: System.Attribute\n    commentId: T:System.Attribute\n  - type: System.ComponentModel.AttributeCollection\n    commentId: T:System.ComponentModel.AttributeCollection\n  - type: System.ComponentModel.CustomTypeDescriptor.GetAttributes\n    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetAttributes\n  - type: System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])\n    commentId: M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])\n  - type: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.GetAttributes(Type)\n- uid: System.ComponentModel.TypeDescriptor.GetClassName(System.Object)\n  commentId: M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)\n  id: GetClassName(System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetClassName(Object)\n  fullName: System.ComponentModel.TypeDescriptor.GetClassName(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetClassName\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 812\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns the name of the class for the specified component using the default type descriptor.</p>\\n\"\n  syntax:\n    content: public static string GetClassName(object component)\n    content.vb: Public Shared Function GetClassName(component As Object) As String\n    parameters:\n    - id: component\n      type: System.Object\n      description: \"\\n<p>The <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for which you want the class name. </p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the name of the class for the specified component.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>component</em> is <strong>null</strong>. </p>\\n\"\n  seealso:\n  - type: System.ComponentModel.CustomTypeDescriptor.GetClassName\n    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetClassName\n  - type: System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])\n    commentId: M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])\n  - type: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.GetClassName(Object)\n- uid: System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)\n  commentId: M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)\n  id: GetClassName(System.Object,System.Boolean)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetClassName(Object, Boolean)\n  fullName: System.ComponentModel.TypeDescriptor.GetClassName(System.Object, System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetClassName\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 820\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns the name of the class for the specified component using a custom type descriptor.</p>\\n\"\n  syntax:\n    content: public static string GetClassName(object component, bool noCustomTypeDesc)\n    content.vb: Public Shared Function GetClassName(component As Object, noCustomTypeDesc As Boolean) As String\n    parameters:\n    - id: component\n      type: System.Object\n      description: \"\\n<p>The <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for which you want the class name. </p>\\n\"\n    - id: noCustomTypeDesc\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to consider custom type description information; otherwise, <strong>false</strong>.</p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the name of the class for the specified component.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>component</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>component</em> is a cross-process remoted object.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.CustomTypeDescriptor.GetClassName\n    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetClassName\n  - type: System.ComponentModel.ICustomTypeDescriptor\n    commentId: T:System.ComponentModel.ICustomTypeDescriptor\n  - type: System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])\n    commentId: M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])\n  - type: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.GetClassName(Object, Boolean)\n- uid: System.ComponentModel.TypeDescriptor.GetClassName(System.Type)\n  commentId: M:System.ComponentModel.TypeDescriptor.GetClassName(System.Type)\n  id: GetClassName(System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetClassName(Type)\n  fullName: System.ComponentModel.TypeDescriptor.GetClassName(System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetClassName\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 829\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns the name of the class for the specified type.</p>\\n\"\n  syntax:\n    content: public static string GetClassName(Type componentType)\n    content.vb: Public Shared Function GetClassName(componentType As Type) As String\n    parameters:\n    - id: componentType\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the target component.</p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the name of the class for the specified component type.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>componentType</em> is <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.CustomTypeDescriptor.GetClassName\n    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetClassName\n  - type: System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])\n    commentId: M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])\n  - type: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.GetClassName(Type)\n- uid: System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)\n  commentId: M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)\n  id: GetComponentName(System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetComponentName(Object)\n  fullName: System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetComponentName\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 837\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns the name of the specified component using the default type descriptor.</p>\\n\"\n  syntax:\n    content: public static string GetComponentName(object component)\n    content.vb: Public Shared Function GetComponentName(component As Object) As String\n    parameters:\n    - id: component\n      type: System.Object\n      description: \"\\n<p>The <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for which you want the class name. </p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the name of the specified component, or <strong>null</strong> if there is no component name.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>component</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>component</em> is a cross-process remoted object.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.CustomTypeDescriptor.GetComponentName\n    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetComponentName\n  - type: System.ComponentModel.TypeDescriptor.GetClassName(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])\n    commentId: M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])\n  - type: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.GetComponentName(Object)\n- uid: System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)\n  commentId: M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)\n  id: GetComponentName(System.Object,System.Boolean)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetComponentName(Object, Boolean)\n  fullName: System.ComponentModel.TypeDescriptor.GetComponentName(System.Object, System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetComponentName\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 845\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns the name of the specified component using a custom type descriptor.</p>\\n\"\n  syntax:\n    content: public static string GetComponentName(object component, bool noCustomTypeDesc)\n    content.vb: Public Shared Function GetComponentName(component As Object, noCustomTypeDesc As Boolean) As String\n    parameters:\n    - id: component\n      type: System.Object\n      description: \"\\n<p>The <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for which you want the class name. </p>\\n\"\n    - id: noCustomTypeDesc\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to consider custom type description information; otherwise, <strong>false</strong>.</p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>The name of the class for the specified component, or <strong>null</strong> if there is no component name.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>component</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>component</em> is a cross-process remoted object.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.CustomTypeDescriptor.GetComponentName\n    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetComponentName\n  - type: System.ComponentModel.ICustomTypeDescriptor\n    commentId: T:System.ComponentModel.ICustomTypeDescriptor\n  - type: System.ComponentModel.TypeDescriptor.GetClassName(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])\n    commentId: M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])\n  - type: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.GetComponentName(Object, Boolean)\n- uid: System.ComponentModel.TypeDescriptor.GetConverter(System.Object)\n  commentId: M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)\n  id: GetConverter(System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetConverter(Object)\n  fullName: System.ComponentModel.TypeDescriptor.GetConverter(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetConverter\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 854\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns a type converter for the type of the specified component.</p>\\n\"\n  syntax:\n    content: public static TypeConverter GetConverter(object component)\n    content.vb: Public Shared Function GetConverter(component As Object) As TypeConverter\n    parameters:\n    - id: component\n      type: System.Object\n      description: \"\\n<p>A component to get the converter for. </p>\\n\"\n    return:\n      type: System.ComponentModel.TypeConverter\n      description: \"\\n<p>A <xref href=\\\"System.ComponentModel.TypeConverter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for the specified component.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>component</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>component</em> is a cross-process remoted object.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.TypeConverterAttribute\n    commentId: T:System.ComponentModel.TypeConverterAttribute\n  - type: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)\n  - type: System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)\n    commentId: M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.GetConverter(Object)\n- uid: System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)\n  commentId: M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)\n  id: GetConverter(System.Object,System.Boolean)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetConverter(Object, Boolean)\n  fullName: System.ComponentModel.TypeDescriptor.GetConverter(System.Object, System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetConverter\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 861\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns a type converter for the type of the specified component with a custom type descriptor.</p>\\n\"\n  syntax:\n    content: public static TypeConverter GetConverter(object component, bool noCustomTypeDesc)\n    content.vb: Public Shared Function GetConverter(component As Object, noCustomTypeDesc As Boolean) As TypeConverter\n    parameters:\n    - id: component\n      type: System.Object\n      description: \"\\n<p>A component to get the converter for. </p>\\n\"\n    - id: noCustomTypeDesc\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to consider custom type description information; otherwise, <strong>false</strong>.</p>\\n\"\n    return:\n      type: System.ComponentModel.TypeConverter\n      description: \"\\n<p>A <xref href=\\\"System.ComponentModel.TypeConverter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for the specified component.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>component</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>component</em> is a cross-process remoted object.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.ICustomTypeDescriptor\n    commentId: T:System.ComponentModel.ICustomTypeDescriptor\n  - type: System.ComponentModel.TypeConverterAttribute\n    commentId: T:System.ComponentModel.TypeConverterAttribute\n  - type: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)\n  - type: System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)\n    commentId: M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.GetConverter(Object, Boolean)\n- uid: System.ComponentModel.TypeDescriptor.GetConverter(System.Type)\n  commentId: M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)\n  id: GetConverter(System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetConverter(Type)\n  fullName: System.ComponentModel.TypeDescriptor.GetConverter(System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetConverter\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 871\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns a type converter for the specified type.</p>\\n\"\n  syntax:\n    content: public static TypeConverter GetConverter(Type type)\n    content.vb: Public Shared Function GetConverter(type As Type) As TypeConverter\n    parameters:\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the target component. </p>\\n\"\n    return:\n      type: System.ComponentModel.TypeConverter\n      description: \"\\n<p>A <xref href=\\\"System.ComponentModel.TypeConverter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for the specified type.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>component</em> is <strong>null</strong>. </p>\\n\"\n  seealso:\n  - type: System.ComponentModel.TypeConverterAttribute\n    commentId: T:System.ComponentModel.TypeConverterAttribute\n  - type: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)\n  - type: System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)\n    commentId: M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.GetConverter(Type)\n- uid: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)\n  commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)\n  id: GetDefaultEvent(System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetDefaultEvent(Object)\n  fullName: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetDefaultEvent\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 894\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns the default event for the specified component.</p>\\n\"\n  syntax:\n    content: public static EventDescriptor GetDefaultEvent(object component)\n    content.vb: Public Shared Function GetDefaultEvent(component As Object) As EventDescriptor\n    parameters:\n    - id: component\n      type: System.Object\n      description: \"\\n<p>The component to get the event for. </p>\\n\"\n    return:\n      type: System.ComponentModel.EventDescriptor\n      description: \"\\n<p>An <xref href=\\\"System.ComponentModel.EventDescriptor\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with the default event, or <strong>null</strong> if there are no events.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>component</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>component</em> is a cross-process remoted object.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.DefaultEventAttribute\n    commentId: T:System.ComponentModel.DefaultEventAttribute\n  - type: System.ComponentModel.EventDescriptor\n    commentId: T:System.ComponentModel.EventDescriptor\n  - type: System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent\n    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent\n  - type: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])\n    commentId: M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])\n  - type: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.GetDefaultEvent(Object)\n- uid: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)\n  commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)\n  id: GetDefaultEvent(System.Object,System.Boolean)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetDefaultEvent(Object, Boolean)\n  fullName: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object, System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetDefaultEvent\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 902\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns the default event for a component with a custom type descriptor.</p>\\n\"\n  syntax:\n    content: public static EventDescriptor GetDefaultEvent(object component, bool noCustomTypeDesc)\n    content.vb: Public Shared Function GetDefaultEvent(component As Object, noCustomTypeDesc As Boolean) As EventDescriptor\n    parameters:\n    - id: component\n      type: System.Object\n      description: \"\\n<p>The component to get the event for. </p>\\n\"\n    - id: noCustomTypeDesc\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to consider custom type description information; otherwise, <strong>false</strong>.</p>\\n\"\n    return:\n      type: System.ComponentModel.EventDescriptor\n      description: \"\\n<p>An <xref href=\\\"System.ComponentModel.EventDescriptor\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with the default event, or <strong>null</strong> if there are no events.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>component</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>component</em> is a cross-process remoted object.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.DefaultEventAttribute\n    commentId: T:System.ComponentModel.DefaultEventAttribute\n  - type: System.ComponentModel.EventDescriptor\n    commentId: T:System.ComponentModel.EventDescriptor\n  - type: System.ComponentModel.ICustomTypeDescriptor\n    commentId: T:System.ComponentModel.ICustomTypeDescriptor\n  - type: System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent\n    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent\n  - type: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])\n    commentId: M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])\n  - type: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.GetDefaultEvent(Object, Boolean)\n- uid: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)\n  commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)\n  id: GetDefaultEvent(System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetDefaultEvent(Type)\n  fullName: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetDefaultEvent\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 880\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns the default event for the specified type of component.</p>\\n\"\n  syntax:\n    content: public static EventDescriptor GetDefaultEvent(Type componentType)\n    content.vb: Public Shared Function GetDefaultEvent(componentType As Type) As EventDescriptor\n    parameters:\n    - id: componentType\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the target component.</p>\\n\"\n    return:\n      type: System.ComponentModel.EventDescriptor\n      description: \"\\n<p>An <xref href=\\\"System.ComponentModel.EventDescriptor\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with the default event, or <strong>null</strong> if there are no events.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>component</em> is <strong>null</strong>. </p>\\n\"\n  seealso:\n  - type: System.ComponentModel.DefaultEventAttribute\n    commentId: T:System.ComponentModel.DefaultEventAttribute\n  - type: System.ComponentModel.EventDescriptor\n    commentId: T:System.ComponentModel.EventDescriptor\n  - type: System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent\n    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent\n  - type: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])\n    commentId: M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])\n  - type: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.GetDefaultEvent(Type)\n- uid: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)\n  commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)\n  id: GetDefaultProperty(System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetDefaultProperty(Object)\n  fullName: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetDefaultProperty\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 931\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns the default property for the specified component.</p>\\n\"\n  syntax:\n    content: public static PropertyDescriptor GetDefaultProperty(object component)\n    content.vb: Public Shared Function GetDefaultProperty(component As Object) As PropertyDescriptor\n    parameters:\n    - id: component\n      type: System.Object\n      description: \"\\n<p>The component to get the default property for. </p>\\n\"\n    return:\n      type: System.ComponentModel.PropertyDescriptor\n      description: \"\\n<p>A <xref href=\\\"System.ComponentModel.PropertyDescriptor\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with the default property, or <strong>null</strong> if there are no properties.</p>\\n\"\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>component</em> is a cross-process remoted object.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.DefaultPropertyAttribute\n    commentId: T:System.ComponentModel.DefaultPropertyAttribute\n  - type: System.ComponentModel.PropertyDescriptor\n    commentId: T:System.ComponentModel.PropertyDescriptor\n  - type: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])\n    commentId: M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])\n  - type: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.GetDefaultProperty(Object)\n- uid: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)\n  commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)\n  id: GetDefaultProperty(System.Object,System.Boolean)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetDefaultProperty(Object, Boolean)\n  fullName: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object, System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetDefaultProperty\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 939\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns the default property for the specified component with a custom type descriptor.</p>\\n\"\n  syntax:\n    content: public static PropertyDescriptor GetDefaultProperty(object component, bool noCustomTypeDesc)\n    content.vb: Public Shared Function GetDefaultProperty(component As Object, noCustomTypeDesc As Boolean) As PropertyDescriptor\n    parameters:\n    - id: component\n      type: System.Object\n      description: \"\\n<p>The component to get the default property for. </p>\\n\"\n    - id: noCustomTypeDesc\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to consider custom type description information; otherwise, <strong>false</strong>.</p>\\n\"\n    return:\n      type: System.ComponentModel.PropertyDescriptor\n      description: \"\\n<p>A <xref href=\\\"System.ComponentModel.PropertyDescriptor\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with the default property, or <strong>null</strong> if there are no properties.</p>\\n\"\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>component</em> is a cross-process remoted object.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.DefaultPropertyAttribute\n    commentId: T:System.ComponentModel.DefaultPropertyAttribute\n  - type: System.ComponentModel.PropertyDescriptor\n    commentId: T:System.ComponentModel.PropertyDescriptor\n  - type: System.ComponentModel.ICustomTypeDescriptor\n    commentId: T:System.ComponentModel.ICustomTypeDescriptor\n  - type: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])\n    commentId: M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])\n  - type: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.GetDefaultProperty(Object, Boolean)\n- uid: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)\n  commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)\n  id: GetDefaultProperty(System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetDefaultProperty(Type)\n  fullName: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetDefaultProperty\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 917\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns the default property for the specified type of component.</p>\\n\"\n  syntax:\n    content: public static PropertyDescriptor GetDefaultProperty(Type componentType)\n    content.vb: Public Shared Function GetDefaultProperty(componentType As Type) As PropertyDescriptor\n    parameters:\n    - id: componentType\n      type: System.Type\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the class to get the property for. </p>\\n\"\n    return:\n      type: System.ComponentModel.PropertyDescriptor\n      description: \"\\n<p>A <xref href=\\\"System.ComponentModel.PropertyDescriptor\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with the default property, or <strong>null</strong> if there are no properties.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.DefaultPropertyAttribute\n    commentId: T:System.ComponentModel.DefaultPropertyAttribute\n  - type: System.ComponentModel.PropertyDescriptor\n    commentId: T:System.ComponentModel.PropertyDescriptor\n  - type: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])\n    commentId: M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])\n  - type: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.GetDefaultProperty(Type)\n- uid: System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)\n  commentId: M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)\n  id: GetEditor(System.Object,System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetEditor(Object, Type)\n  fullName: System.ComponentModel.TypeDescriptor.GetEditor(System.Object, System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetEditor\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 1011\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Gets an editor with the specified base type for the specified component.</p>\\n\"\n  syntax:\n    content: public static object GetEditor(object component, Type editorBaseType)\n    content.vb: Public Shared Function GetEditor(component As Object, editorBaseType As Type) As Object\n    parameters:\n    - id: component\n      type: System.Object\n      description: \"\\n<p>The component to get the editor for. </p>\\n\"\n    - id: editorBaseType\n      type: System.Type\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the base type of the editor you want to find. </p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>An instance of the editor that can be cast to the specified editor type, or <strong>null</strong> if no editor of the requested type can be found.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>component</em> or <em>editorBaseType</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>component</em> is a cross-process remoted object.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)\n    commentId: M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)\n  - type: System.ComponentModel.TypeDescriptor.GetConverter(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.GetEditor(Object, Type)\n- uid: System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)\n  commentId: M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)\n  id: GetEditor(System.Object,System.Type,System.Boolean)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetEditor(Object, Type, Boolean)\n  fullName: System.ComponentModel.TypeDescriptor.GetEditor(System.Object, System.Type, System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetEditor\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 1020\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns an editor with the specified base type and with a custom type descriptor for the specified component.</p>\\n\"\n  syntax:\n    content: public static object GetEditor(object component, Type editorBaseType, bool noCustomTypeDesc)\n    content.vb: Public Shared Function GetEditor(component As Object, editorBaseType As Type, noCustomTypeDesc As Boolean) As Object\n    parameters:\n    - id: component\n      type: System.Object\n      description: \"\\n<p>The component to get the editor for. </p>\\n\"\n    - id: editorBaseType\n      type: System.Type\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the base type of the editor you want to find. </p>\\n\"\n    - id: noCustomTypeDesc\n      type: System.Boolean\n      description: \"\\n<p>A flag indicating whether custom type description information should be considered.</p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>An instance of the editor that can be cast to the specified editor type, or <strong>null</strong> if no editor of the requested type can be found.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>component</em> or <em>editorBaseType</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>component</em> is a cross-process remoted object.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.ICustomTypeDescriptor\n    commentId: T:System.ComponentModel.ICustomTypeDescriptor\n  - type: System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)\n    commentId: M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)\n  - type: System.ComponentModel.TypeDescriptor.GetConverter(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.GetEditor(Object, Type, Boolean)\n- uid: System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)\n  commentId: M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)\n  id: GetEditor(System.Type,System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetEditor(Type, Type)\n  fullName: System.ComponentModel.TypeDescriptor.GetEditor(System.Type, System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetEditor\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 1034\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns an editor with the specified base type for the specified type.</p>\\n\"\n  syntax:\n    content: public static object GetEditor(Type type, Type editorBaseType)\n    content.vb: Public Shared Function GetEditor(type As Type, editorBaseType As Type) As Object\n    parameters:\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the target component.</p>\\n\"\n    - id: editorBaseType\n      type: System.Type\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the base type of the editor you are trying to find. </p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>An instance of the editor object that can be cast to the given base type, or <strong>null</strong> if no editor of the requested type can be found.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>type</em> or <em>editorBaseType</em> is <strong>null</strong>. </p>\\n\"\n  seealso:\n  - type: System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)\n    commentId: M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)\n  - type: System.ComponentModel.TypeDescriptor.GetConverter(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.GetEditor(Type, Type)\n- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)\n  commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)\n  id: GetEvents(System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetEvents(Object)\n  fullName: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetEvents\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 1087\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns the collection of events for the specified component.</p>\\n\"\n  syntax:\n    content: public static EventDescriptorCollection GetEvents(object component)\n    content.vb: Public Shared Function GetEvents(component As Object) As EventDescriptorCollection\n    parameters:\n    - id: component\n      type: System.Object\n      description: \"\\n<p>A component to get the events for. </p>\\n\"\n    return:\n      type: System.ComponentModel.EventDescriptorCollection\n      description: \"\\n<p>An <xref href=\\\"System.ComponentModel.EventDescriptorCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with the events for this component.</p>\\n\"\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>component</em> is a cross-process remoted object.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.EventDescriptor\n    commentId: T:System.ComponentModel.EventDescriptor\n  - type: System.ComponentModel.EventDescriptorCollection\n    commentId: T:System.ComponentModel.EventDescriptorCollection\n  - type: System.ComponentModel.CustomTypeDescriptor.GetEvents\n    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetEvents\n  - type: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])\n    commentId: M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])\n  - type: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.GetEvents(Object)\n- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])\n  commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])\n  id: GetEvents(System.Object,System.Attribute[])\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetEvents(Object, Attribute[])\n  fullName: System.ComponentModel.TypeDescriptor.GetEvents(System.Object, System.Attribute[])\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetEvents\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 1105\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns the collection of events for a specified component using a specified array of attributes as a filter.</p>\\n\"\n  syntax:\n    content: public static EventDescriptorCollection GetEvents(object component, Attribute[] attributes)\n    content.vb: Public Shared Function GetEvents(component As Object, attributes As Attribute()) As EventDescriptorCollection\n    parameters:\n    - id: component\n      type: System.Object\n      description: \"\\n<p>A component to get the events for. </p>\\n\"\n    - id: attributes\n      type: System.Attribute[]\n      description: \"\\n<p>An array of type <xref href=\\\"System.Attribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that you can use as a filter. </p>\\n\"\n    return:\n      type: System.ComponentModel.EventDescriptorCollection\n      description: \"\\n<p>An <xref href=\\\"System.ComponentModel.EventDescriptorCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with the events that match the specified attributes for this component.</p>\\n\"\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>component</em> is a cross-process remoted object.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.EventDescriptor\n    commentId: T:System.ComponentModel.EventDescriptor\n  - type: System.ComponentModel.EventDescriptorCollection\n    commentId: T:System.ComponentModel.EventDescriptorCollection\n  - type: System.ComponentModel.CustomTypeDescriptor.GetEvents\n    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetEvents\n  - type: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])\n    commentId: M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])\n  - type: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.ComponentModel.TypeDescriptor.GetEvents(System.Object, System.Attribute())\n  name.vb: GetEvents(Object, Attribute())\n  nameWithType: TypeDescriptor.GetEvents(Object, Attribute[])\n  nameWithType.vb: TypeDescriptor.GetEvents(Object, Attribute())\n- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)\n  commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)\n  id: GetEvents(System.Object,System.Attribute[],System.Boolean)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetEvents(Object, Attribute[], Boolean)\n  fullName: System.ComponentModel.TypeDescriptor.GetEvents(System.Object, System.Attribute[], System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetEvents\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 1114\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns the collection of events for a specified component using a specified array of attributes as a filter and using a custom type descriptor.</p>\\n\"\n  syntax:\n    content: public static EventDescriptorCollection GetEvents(object component, Attribute[] attributes, bool noCustomTypeDesc)\n    content.vb: Public Shared Function GetEvents(component As Object, attributes As Attribute(), noCustomTypeDesc As Boolean) As EventDescriptorCollection\n    parameters:\n    - id: component\n      type: System.Object\n      description: \"\\n<p>A component to get the events for. </p>\\n\"\n    - id: attributes\n      type: System.Attribute[]\n      description: \"\\n<p>An array of type <xref href=\\\"System.Attribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to use as a filter. </p>\\n\"\n    - id: noCustomTypeDesc\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to consider custom type description information; otherwise, <strong>false</strong>.</p>\\n\"\n    return:\n      type: System.ComponentModel.EventDescriptorCollection\n      description: \"\\n<p>An <xref href=\\\"System.ComponentModel.EventDescriptorCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with the events that match the specified attributes for this component.</p>\\n\"\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>component</em> is a cross-process remoted object.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.EventDescriptor\n    commentId: T:System.ComponentModel.EventDescriptor\n  - type: System.ComponentModel.EventDescriptorCollection\n    commentId: T:System.ComponentModel.EventDescriptorCollection\n  - type: System.ComponentModel.ICustomTypeDescriptor\n    commentId: T:System.ComponentModel.ICustomTypeDescriptor\n  - type: System.ComponentModel.CustomTypeDescriptor.GetEvents\n    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetEvents\n  - type: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])\n    commentId: M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])\n  - type: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.ComponentModel.TypeDescriptor.GetEvents(System.Object, System.Attribute(), System.Boolean)\n  name.vb: GetEvents(Object, Attribute(), Boolean)\n  nameWithType: TypeDescriptor.GetEvents(Object, Attribute[], Boolean)\n  nameWithType.vb: TypeDescriptor.GetEvents(Object, Attribute(), Boolean)\n- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)\n  commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)\n  id: GetEvents(System.Object,System.Boolean)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetEvents(Object, Boolean)\n  fullName: System.ComponentModel.TypeDescriptor.GetEvents(System.Object, System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetEvents\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 1095\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns the collection of events for a specified component with a custom type descriptor.</p>\\n\"\n  syntax:\n    content: public static EventDescriptorCollection GetEvents(object component, bool noCustomTypeDesc)\n    content.vb: Public Shared Function GetEvents(component As Object, noCustomTypeDesc As Boolean) As EventDescriptorCollection\n    parameters:\n    - id: component\n      type: System.Object\n      description: \"\\n<p>A component to get the events for. </p>\\n\"\n    - id: noCustomTypeDesc\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to consider custom type description information; otherwise, <strong>false</strong>.</p>\\n\"\n    return:\n      type: System.ComponentModel.EventDescriptorCollection\n      description: \"\\n<p>An <xref href=\\\"System.ComponentModel.EventDescriptorCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with the events for this component.</p>\\n\"\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>component</em> is a cross-process remoted object.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.EventDescriptor\n    commentId: T:System.ComponentModel.EventDescriptor\n  - type: System.ComponentModel.EventDescriptorCollection\n    commentId: T:System.ComponentModel.EventDescriptorCollection\n  - type: System.ComponentModel.ICustomTypeDescriptor\n    commentId: T:System.ComponentModel.ICustomTypeDescriptor\n  - type: System.ComponentModel.CustomTypeDescriptor.GetEvents\n    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetEvents\n  - type: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])\n    commentId: M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])\n  - type: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.GetEvents(Object, Boolean)\n- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Type)\n  commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type)\n  id: GetEvents(System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetEvents(Type)\n  fullName: System.ComponentModel.TypeDescriptor.GetEvents(System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetEvents\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 1047\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns the collection of events for a specified type of component.</p>\\n\"\n  syntax:\n    content: public static EventDescriptorCollection GetEvents(Type componentType)\n    content.vb: Public Shared Function GetEvents(componentType As Type) As EventDescriptorCollection\n    parameters:\n    - id: componentType\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the target component.</p>\\n\"\n    return:\n      type: System.ComponentModel.EventDescriptorCollection\n      description: \"\\n<p>An <xref href=\\\"System.ComponentModel.EventDescriptorCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with the events for this component.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.EventDescriptor\n    commentId: T:System.ComponentModel.EventDescriptor\n  - type: System.ComponentModel.EventDescriptorCollection\n    commentId: T:System.ComponentModel.EventDescriptorCollection\n  - type: System.ComponentModel.CustomTypeDescriptor.GetEvents\n    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetEvents\n  - type: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])\n    commentId: M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])\n  - type: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.GetEvents(Type)\n- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])\n  commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])\n  id: GetEvents(System.Type,System.Attribute[])\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetEvents(Type, Attribute[])\n  fullName: System.ComponentModel.TypeDescriptor.GetEvents(System.Type, System.Attribute[])\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetEvents\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 1062\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns the collection of events for a specified type of component using a specified array of attributes as a filter.</p>\\n\"\n  syntax:\n    content: public static EventDescriptorCollection GetEvents(Type componentType, Attribute[] attributes)\n    content.vb: Public Shared Function GetEvents(componentType As Type, attributes As Attribute()) As EventDescriptorCollection\n    parameters:\n    - id: componentType\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the target component.</p>\\n\"\n    - id: attributes\n      type: System.Attribute[]\n      description: \"\\n<p>An array of type <xref href=\\\"System.Attribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that you can use as a filter. </p>\\n\"\n    return:\n      type: System.ComponentModel.EventDescriptorCollection\n      description: \"\\n<p>An <xref href=\\\"System.ComponentModel.EventDescriptorCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with the events that match the specified attributes for this component.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.EventDescriptor\n    commentId: T:System.ComponentModel.EventDescriptor\n  - type: System.ComponentModel.EventDescriptorCollection\n    commentId: T:System.ComponentModel.EventDescriptorCollection\n  - type: System.ComponentModel.CustomTypeDescriptor.GetEvents\n    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetEvents\n  - type: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])\n    commentId: M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])\n  - type: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.ComponentModel.TypeDescriptor.GetEvents(System.Type, System.Attribute())\n  name.vb: GetEvents(Type, Attribute())\n  nameWithType: TypeDescriptor.GetEvents(Type, Attribute[])\n  nameWithType.vb: TypeDescriptor.GetEvents(Type, Attribute())\n- uid: System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)\n  commentId: M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)\n  id: GetFullComponentName(System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetFullComponentName(Object)\n  fullName: System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetFullComponentName\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 1245\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns the fully qualified name of the component.</p>\\n\"\n  syntax:\n    content: public static string GetFullComponentName(object component)\n    content.vb: Public Shared Function GetFullComponentName(component As Object) As String\n    parameters:\n    - id: component\n      type: System.Object\n      description: \"\\n<p>The <xref href=\\\"System.ComponentModel.Component\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to find the name for.</p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>The fully qualified name of the specified component, or <strong>null</strong> if the component has no name.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>component</em> is <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetClassName(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.GetFullComponentName(Object)\n- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)\n  commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)\n  id: GetProperties(System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetProperties(Object)\n  fullName: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetProperties\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 1308\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns the collection of properties for a specified component.</p>\\n\"\n  syntax:\n    content: public static PropertyDescriptorCollection GetProperties(object component)\n    content.vb: Public Shared Function GetProperties(component As Object) As PropertyDescriptorCollection\n    parameters:\n    - id: component\n      type: System.Object\n      description: \"\\n<p>A component to get the properties for. </p>\\n\"\n    return:\n      type: System.ComponentModel.PropertyDescriptorCollection\n      description: \"\\n<p>A <xref href=\\\"System.ComponentModel.PropertyDescriptorCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with the properties for the specified component.</p>\\n\"\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>component</em> is a cross-process remoted object.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.PropertyDescriptor\n    commentId: T:System.ComponentModel.PropertyDescriptor\n  - type: System.ComponentModel.PropertyDescriptorCollection\n    commentId: T:System.ComponentModel.PropertyDescriptorCollection\n  - type: System.ComponentModel.CustomTypeDescriptor.GetProperties\n    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetProperties\n  - type: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])\n    commentId: M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])\n  - type: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.GetProperties(Object)\n- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])\n  commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])\n  id: GetProperties(System.Object,System.Attribute[])\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetProperties(Object, Attribute[])\n  fullName: System.ComponentModel.TypeDescriptor.GetProperties(System.Object, System.Attribute[])\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetProperties\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 1327\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns the collection of properties for a specified component using a specified array of attributes as a filter.</p>\\n\"\n  syntax:\n    content: public static PropertyDescriptorCollection GetProperties(object component, Attribute[] attributes)\n    content.vb: Public Shared Function GetProperties(component As Object, attributes As Attribute()) As PropertyDescriptorCollection\n    parameters:\n    - id: component\n      type: System.Object\n      description: \"\\n<p>A component to get the properties for. </p>\\n\"\n    - id: attributes\n      type: System.Attribute[]\n      description: \"\\n<p>An array of type <xref href=\\\"System.Attribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to use as a filter. </p>\\n\"\n    return:\n      type: System.ComponentModel.PropertyDescriptorCollection\n      description: \"\\n<p>A <xref href=\\\"System.ComponentModel.PropertyDescriptorCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with the properties that match the specified attributes for the specified component.</p>\\n\"\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>component</em> is a cross-process remoted object.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.PropertyDescriptor\n    commentId: T:System.ComponentModel.PropertyDescriptor\n  - type: System.ComponentModel.PropertyDescriptorCollection\n    commentId: T:System.ComponentModel.PropertyDescriptorCollection\n  - type: System.ComponentModel.CustomTypeDescriptor.GetProperties\n    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetProperties\n  - type: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])\n    commentId: M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])\n  - type: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.ComponentModel.TypeDescriptor.GetProperties(System.Object, System.Attribute())\n  name.vb: GetProperties(Object, Attribute())\n  nameWithType: TypeDescriptor.GetProperties(Object, Attribute[])\n  nameWithType.vb: TypeDescriptor.GetProperties(Object, Attribute())\n- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)\n  commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)\n  id: GetProperties(System.Object,System.Attribute[],System.Boolean)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetProperties(Object, Attribute[], Boolean)\n  fullName: System.ComponentModel.TypeDescriptor.GetProperties(System.Object, System.Attribute[], System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetProperties\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 1337\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns the collection of properties for a specified component using a specified array of attributes as a filter and using a custom type descriptor.</p>\\n\"\n  syntax:\n    content: public static PropertyDescriptorCollection GetProperties(object component, Attribute[] attributes, bool noCustomTypeDesc)\n    content.vb: Public Shared Function GetProperties(component As Object, attributes As Attribute(), noCustomTypeDesc As Boolean) As PropertyDescriptorCollection\n    parameters:\n    - id: component\n      type: System.Object\n      description: \"\\n<p>A component to get the properties for. </p>\\n\"\n    - id: attributes\n      type: System.Attribute[]\n      description: \"\\n<p>An array of type <xref href=\\\"System.Attribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to use as a filter. </p>\\n\"\n    - id: noCustomTypeDesc\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to consider custom type description information; otherwise, <strong>false</strong>.</p>\\n\"\n    return:\n      type: System.ComponentModel.PropertyDescriptorCollection\n      description: \"\\n<p>A <xref href=\\\"System.ComponentModel.PropertyDescriptorCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with the events that match the specified attributes for the specified component.</p>\\n\"\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>component</em> is a cross-process remoted object.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.PropertyDescriptor\n    commentId: T:System.ComponentModel.PropertyDescriptor\n  - type: System.ComponentModel.PropertyDescriptorCollection\n    commentId: T:System.ComponentModel.PropertyDescriptorCollection\n  - type: System.ComponentModel.ICustomTypeDescriptor\n    commentId: T:System.ComponentModel.ICustomTypeDescriptor\n  - type: System.ComponentModel.CustomTypeDescriptor.GetProperties\n    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetProperties\n  - type: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])\n    commentId: M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])\n  - type: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.ComponentModel.TypeDescriptor.GetProperties(System.Object, System.Attribute(), System.Boolean)\n  name.vb: GetProperties(Object, Attribute(), Boolean)\n  nameWithType: TypeDescriptor.GetProperties(Object, Attribute[], Boolean)\n  nameWithType.vb: TypeDescriptor.GetProperties(Object, Attribute(), Boolean)\n- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)\n  commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)\n  id: GetProperties(System.Object,System.Boolean)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetProperties(Object, Boolean)\n  fullName: System.ComponentModel.TypeDescriptor.GetProperties(System.Object, System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetProperties\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 1316\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns the collection of properties for a specified component using the default type descriptor.</p>\\n\"\n  syntax:\n    content: public static PropertyDescriptorCollection GetProperties(object component, bool noCustomTypeDesc)\n    content.vb: Public Shared Function GetProperties(component As Object, noCustomTypeDesc As Boolean) As PropertyDescriptorCollection\n    parameters:\n    - id: component\n      type: System.Object\n      description: \"\\n<p>A component to get the properties for. </p>\\n\"\n    - id: noCustomTypeDesc\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to not consider custom type description information; otherwise, <strong>false</strong>.</p>\\n\"\n    return:\n      type: System.ComponentModel.PropertyDescriptorCollection\n      description: \"\\n<p>A <xref href=\\\"System.ComponentModel.PropertyDescriptorCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with the properties for a specified component.</p>\\n\"\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>component</em> is a cross-process remoted object.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.PropertyDescriptor\n    commentId: T:System.ComponentModel.PropertyDescriptor\n  - type: System.ComponentModel.PropertyDescriptorCollection\n    commentId: T:System.ComponentModel.PropertyDescriptorCollection\n  - type: System.ComponentModel.ICustomTypeDescriptor\n    commentId: T:System.ComponentModel.ICustomTypeDescriptor\n  - type: System.ComponentModel.CustomTypeDescriptor.GetProperties\n    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetProperties\n  - type: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])\n    commentId: M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])\n  - type: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.GetProperties(Object, Boolean)\n- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Type)\n  commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)\n  id: GetProperties(System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetProperties(Type)\n  fullName: System.ComponentModel.TypeDescriptor.GetProperties(System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetProperties\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 1268\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns the collection of properties for a specified type of component.</p>\\n\"\n  syntax:\n    content: public static PropertyDescriptorCollection GetProperties(Type componentType)\n    content.vb: Public Shared Function GetProperties(componentType As Type) As PropertyDescriptorCollection\n    parameters:\n    - id: componentType\n      type: System.Type\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the component to get properties for.</p>\\n\"\n    return:\n      type: System.ComponentModel.PropertyDescriptorCollection\n      description: \"\\n<p>A <xref href=\\\"System.ComponentModel.PropertyDescriptorCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with the properties for a specified type of component.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.PropertyDescriptor\n    commentId: T:System.ComponentModel.PropertyDescriptor\n  - type: System.ComponentModel.PropertyDescriptorCollection\n    commentId: T:System.ComponentModel.PropertyDescriptorCollection\n  - type: System.ComponentModel.CustomTypeDescriptor.GetProperties\n    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetProperties\n  - type: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])\n    commentId: M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])\n  - type: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.GetProperties(Type)\n- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])\n  commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])\n  id: GetProperties(System.Type,System.Attribute[])\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetProperties(Type, Attribute[])\n  fullName: System.ComponentModel.TypeDescriptor.GetProperties(System.Type, System.Attribute[])\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetProperties\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 1283\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns the collection of properties for a specified type of component using a specified array of attributes as a filter.</p>\\n\"\n  syntax:\n    content: public static PropertyDescriptorCollection GetProperties(Type componentType, Attribute[] attributes)\n    content.vb: Public Shared Function GetProperties(componentType As Type, attributes As Attribute()) As PropertyDescriptorCollection\n    parameters:\n    - id: componentType\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the target component.</p>\\n\"\n    - id: attributes\n      type: System.Attribute[]\n      description: \"\\n<p>An array of type <xref href=\\\"System.Attribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to use as a filter. </p>\\n\"\n    return:\n      type: System.ComponentModel.PropertyDescriptorCollection\n      description: \"\\n<p>A <xref href=\\\"System.ComponentModel.PropertyDescriptorCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with the properties that match the specified attributes for this type of component.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.PropertyDescriptor\n    commentId: T:System.ComponentModel.PropertyDescriptor\n  - type: System.ComponentModel.PropertyDescriptorCollection\n    commentId: T:System.ComponentModel.PropertyDescriptorCollection\n  - type: System.ComponentModel.CustomTypeDescriptor.GetProperties\n    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetProperties\n  - type: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])\n    commentId: M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])\n  - type: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.ComponentModel.TypeDescriptor.GetProperties(System.Type, System.Attribute())\n  name.vb: GetProperties(Type, Attribute())\n  nameWithType: TypeDescriptor.GetProperties(Type, Attribute[])\n  nameWithType.vb: TypeDescriptor.GetProperties(Type, Attribute())\n- uid: System.ComponentModel.TypeDescriptor.GetProvider(System.Object)\n  commentId: M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)\n  id: GetProvider(System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetProvider(Object)\n  fullName: System.ComponentModel.TypeDescriptor.GetProvider(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetProvider\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 1456\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns the type description provider for the specified component.</p>\\n\"\n  syntax:\n    content: public static TypeDescriptionProvider GetProvider(object instance)\n    content.vb: Public Shared Function GetProvider(instance As Object) As TypeDescriptionProvider\n    parameters:\n    - id: instance\n      type: System.Object\n      description: \"\\n<p>An instance of the target component.</p>\\n\"\n    return:\n      type: System.ComponentModel.TypeDescriptionProvider\n      description: \"\\n<p>A <xref href=\\\"System.ComponentModel.TypeDescriptionProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> associated with the specified component.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>instance</em> is <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.TypeDescriptionProvider\n    commentId: T:System.ComponentModel.TypeDescriptionProvider\n  - type: System.ComponentModel.ICustomTypeDescriptor\n    commentId: T:System.ComponentModel.ICustomTypeDescriptor\n  - type: System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)\n  - type: System.ComponentModel.TypeDescriptor.GetConverter(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.GetProvider(Object)\n- uid: System.ComponentModel.TypeDescriptor.GetProvider(System.Type)\n  commentId: M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)\n  id: GetProvider(System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetProvider(Type)\n  fullName: System.ComponentModel.TypeDescriptor.GetProvider(System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetProvider\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 1438\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns the type description provider for the specified type.</p>\\n\"\n  syntax:\n    content: public static TypeDescriptionProvider GetProvider(Type type)\n    content.vb: Public Shared Function GetProvider(type As Type) As TypeDescriptionProvider\n    parameters:\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the target component.</p>\\n\"\n    return:\n      type: System.ComponentModel.TypeDescriptionProvider\n      description: \"\\n<p>A <xref href=\\\"System.ComponentModel.TypeDescriptionProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> associated with the specified type.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>type</em> is <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.TypeDescriptionProvider\n    commentId: T:System.ComponentModel.TypeDescriptionProvider\n  - type: System.ComponentModel.ICustomTypeDescriptor\n    commentId: T:System.ComponentModel.ICustomTypeDescriptor\n  - type: System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)\n  - type: System.ComponentModel.TypeDescriptor.GetConverter(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.GetProvider(Type)\n- uid: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)\n  commentId: M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)\n  id: GetReflectionType(System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetReflectionType(Object)\n  fullName: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetReflectionType\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 1497\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns a <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that can be used to perform reflection, given an object.</p>\\n\"\n  syntax:\n    content: public static Type GetReflectionType(object instance)\n    content.vb: Public Shared Function GetReflectionType(instance As Object) As Type\n    parameters:\n    - id: instance\n      type: System.Object\n      description: \"\\n<p>An instance of the target component.</p>\\n\"\n    return:\n      type: System.Type\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for the specified object.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>instance</em> is <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetClassName(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetProvider(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.GetReflectionType(Object)\n- uid: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)\n  commentId: M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)\n  id: GetReflectionType(System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: GetReflectionType(Type)\n  fullName: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetReflectionType\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 1482\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns a <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that can be used to perform reflection, given a class type.</p>\\n\"\n  syntax:\n    content: public static Type GetReflectionType(Type type)\n    content.vb: Public Shared Function GetReflectionType(type As Type) As Type\n    parameters:\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the target component.</p>\\n\"\n    return:\n      type: System.Type\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the specified class.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>type</em> is <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetClassName(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetProvider(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.GetReflectionType(Type)\n- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Object)\n  commentId: M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)\n  id: Refresh(System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: Refresh(Object)\n  fullName: System.ComponentModel.TypeDescriptor.Refresh(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Refresh\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 2193\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Clears the properties and events for the specified component from the cache.</p>\\n\"\n  syntax:\n    content: public static void Refresh(object component)\n    content.vb: Public Shared Sub Refresh(component As Object)\n    parameters:\n    - id: component\n      type: System.Object\n      description: \"\\n<p>A component for which the properties or events have changed. </p>\\n\"\n  seealso:\n  - type: System.ComponentModel.EventDescriptor\n    commentId: T:System.ComponentModel.EventDescriptor\n  - type: System.ComponentModel.PropertyDescriptor\n    commentId: T:System.ComponentModel.PropertyDescriptor\n  - type: System.ComponentModel.TypeDescriptor.Refreshed\n    commentId: E:System.ComponentModel.TypeDescriptor.Refreshed\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.Refresh(Object)\n- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)\n  commentId: M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)\n  id: Refresh(System.Reflection.Assembly)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: Refresh(Assembly)\n  fullName: System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Refresh\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 2424\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Clears the properties and events for the specified assembly from the cache.</p>\\n\"\n  syntax:\n    content: public static void Refresh(Assembly assembly)\n    content.vb: Public Shared Sub Refresh(assembly As Assembly)\n    parameters:\n    - id: assembly\n      type: System.Reflection.Assembly\n      description: \"\\n<p>The <xref href=\\\"System.Reflection.Assembly\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the assembly to refresh. Each <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> in this assembly will be refreshed. </p>\\n\"\n  seealso:\n  - type: System.Reflection.Assembly\n    commentId: T:System.Reflection.Assembly\n  - type: System.ComponentModel.EventDescriptor\n    commentId: T:System.ComponentModel.EventDescriptor\n  - type: System.ComponentModel.PropertyDescriptor\n    commentId: T:System.ComponentModel.PropertyDescriptor\n  - type: System.ComponentModel.IExtenderProvider\n    commentId: T:System.ComponentModel.IExtenderProvider\n  - type: System.ComponentModel.Design.IDesigner\n    commentId: T:System.ComponentModel.Design.IDesigner\n  - type: System.ComponentModel.TypeDescriptor.Refreshed\n    commentId: E:System.ComponentModel.TypeDescriptor.Refreshed\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.Refresh(Assembly)\n- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)\n  commentId: M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)\n  id: Refresh(System.Reflection.Module)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: Refresh(Module)\n  fullName: System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Refresh\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 2355\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Clears the properties and events for the specified module from the cache.</p>\\n\"\n  syntax:\n    content: public static void Refresh(Module module)\n    content.vb: Public Shared Sub Refresh(module As  Module)\n    parameters:\n    - id: module\n      type: System.Reflection.Module\n      description: \"\\n<p>The <xref href=\\\"System.Reflection.Module\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the module to refresh. Each <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> in this module will be refreshed. </p>\\n\"\n  seealso:\n  - type: System.Reflection.Module\n    commentId: T:System.Reflection.Module\n  - type: System.ComponentModel.EventDescriptor\n    commentId: T:System.ComponentModel.EventDescriptor\n  - type: System.ComponentModel.PropertyDescriptor\n    commentId: T:System.ComponentModel.PropertyDescriptor\n  - type: System.ComponentModel.IExtenderProvider\n    commentId: T:System.ComponentModel.IExtenderProvider\n  - type: System.ComponentModel.Design.IDesigner\n    commentId: T:System.ComponentModel.Design.IDesigner\n  - type: System.ComponentModel.TypeDescriptor.Refreshed\n    commentId: E:System.ComponentModel.TypeDescriptor.Refreshed\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.Refresh(Module)\n- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Type)\n  commentId: M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)\n  id: Refresh(System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: Refresh(Type)\n  fullName: System.ComponentModel.TypeDescriptor.Refresh(System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Refresh\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 2287\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Clears the properties and events for the specified type of component from the cache.</p>\\n\"\n  syntax:\n    content: public static void Refresh(Type type)\n    content.vb: Public Shared Sub Refresh(type As Type)\n    parameters:\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the target component.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.EventDescriptor\n    commentId: T:System.ComponentModel.EventDescriptor\n  - type: System.ComponentModel.PropertyDescriptor\n    commentId: T:System.ComponentModel.PropertyDescriptor\n  - type: System.ComponentModel.IExtenderProvider\n    commentId: T:System.ComponentModel.IExtenderProvider\n  - type: System.ComponentModel.Design.IDesigner\n    commentId: T:System.ComponentModel.Design.IDesigner\n  - type: System.ComponentModel.TypeDescriptor.Refreshed\n    commentId: E:System.ComponentModel.TypeDescriptor.Refreshed\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.Refresh(Type)\n- uid: System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)\n  commentId: M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)\n  id: RemoveAssociation(System.Object,System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: RemoveAssociation(Object, Object)\n  fullName: System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAssociation\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 2441\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Removes an association between two objects.</p>\\n\"\n  syntax:\n    content: public static void RemoveAssociation(object primary, object secondary)\n    content.vb: Public Shared Sub RemoveAssociation(primary As Object, secondary As Object)\n    parameters:\n    - id: primary\n      type: System.Object\n      description: \"\\n<p>The primary <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: secondary\n      type: System.Object\n      description: \"\\n<p>The secondary <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>One or both of the parameters are <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)\n  see:\n  - type: System.Security.NamedPermissionSet\n    commentId: T:System.Security.NamedPermissionSet\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.RemoveAssociation(Object, Object)\n- uid: System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)\n  commentId: M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)\n  id: RemoveAssociations(System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: RemoveAssociations(Object)\n  fullName: System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAssociations\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 2482\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Removes all associations for a primary object.</p>\\n\"\n  syntax:\n    content: public static void RemoveAssociations(object primary)\n    content.vb: Public Shared Sub RemoveAssociations(primary As Object)\n    parameters:\n    - id: primary\n      type: System.Object\n      description: \"\\n<p>The primary <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> in an association.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>primary</em> is <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)\n  see:\n  - type: System.Security.NamedPermissionSet\n    commentId: T:System.Security.NamedPermissionSet\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.RemoveAssociations(Object)\n- uid: System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)\n  commentId: M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)\n  id: RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: RemoveProvider(TypeDescriptionProvider, Object)\n  fullName: System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveProvider\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 2527\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Removes a previously added type description provider that is associated with the specified object.</p>\\n\"\n  syntax:\n    content: public static void RemoveProvider(TypeDescriptionProvider provider, object instance)\n    content.vb: Public Shared Sub RemoveProvider(provider As TypeDescriptionProvider, instance As Object)\n    parameters:\n    - id: provider\n      type: System.ComponentModel.TypeDescriptionProvider\n      description: \"\\n<p>The <xref href=\\\"System.ComponentModel.TypeDescriptionProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to remove.</p>\\n\"\n    - id: instance\n      type: System.Object\n      description: \"\\n<p>An instance of the target component.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>One or both of the parameters are <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.TypeDescriptionProvider\n    commentId: T:System.ComponentModel.TypeDescriptionProvider\n  - type: System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetProvider(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)\n  see:\n  - type: System.Security.NamedPermissionSet\n    commentId: T:System.Security.NamedPermissionSet\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.RemoveProvider(TypeDescriptionProvider, Object)\n- uid: System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)\n  commentId: M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)\n  id: RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: RemoveProvider(TypeDescriptionProvider, Type)\n  fullName: System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider, System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveProvider\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 2503\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Removes a previously added type description provider that is associated with the specified type.</p>\\n\"\n  syntax:\n    content: public static void RemoveProvider(TypeDescriptionProvider provider, Type type)\n    content.vb: Public Shared Sub RemoveProvider(provider As TypeDescriptionProvider, type As Type)\n    parameters:\n    - id: provider\n      type: System.ComponentModel.TypeDescriptionProvider\n      description: \"\\n<p>The <xref href=\\\"System.ComponentModel.TypeDescriptionProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to remove.</p>\\n\"\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the target component.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>One or both of the parameters are <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.TypeDescriptionProvider\n    commentId: T:System.ComponentModel.TypeDescriptionProvider\n  - type: System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)\n  - type: System.ComponentModel.TypeDescriptor.GetProvider(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)\n  see:\n  - type: System.Security.NamedPermissionSet\n    commentId: T:System.Security.NamedPermissionSet\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.RemoveProvider(TypeDescriptionProvider, Type)\n- uid: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)\n  commentId: M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)\n  id: RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: RemoveProviderTransparent(TypeDescriptionProvider, Object)\n  fullName: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveProviderTransparent\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 2584\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Removes a previously added type description provider that is associated with the specified object.</p>\\n\"\n  syntax:\n    content: public static void RemoveProviderTransparent(TypeDescriptionProvider provider, object instance)\n    content.vb: Public Shared Sub RemoveProviderTransparent(provider As TypeDescriptionProvider, instance As Object)\n    parameters:\n    - id: provider\n      type: System.ComponentModel.TypeDescriptionProvider\n      description: \"\\n<p>The <xref href=\\\"System.ComponentModel.TypeDescriptionProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to remove.</p>\\n\"\n    - id: instance\n      type: System.Object\n      description: \"\\n<p>An instance of the target component.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>One or both of the parameters are <strong>null</strong>.</p>\\n\"\n  see:\n  - type: System.Security.Permissions.TypeDescriptorPermission\n    commentId: T:System.Security.Permissions.TypeDescriptorPermission\n  - type: System.Reflection.Assembly.PermissionSet\n    commentId: P:System.Reflection.Assembly.PermissionSet\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.RemoveProviderTransparent(TypeDescriptionProvider, Object)\n- uid: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)\n  commentId: M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)\n  id: RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: RemoveProviderTransparent(TypeDescriptionProvider, Type)\n  fullName: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider, System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveProviderTransparent\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 2557\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Removes a previously added type description provider that is associated with the specified type.</p>\\n\"\n  syntax:\n    content: public static void RemoveProviderTransparent(TypeDescriptionProvider provider, Type type)\n    content.vb: Public Shared Sub RemoveProviderTransparent(provider As TypeDescriptionProvider, type As Type)\n    parameters:\n    - id: provider\n      type: System.ComponentModel.TypeDescriptionProvider\n      description: \"\\n<p>The <xref href=\\\"System.ComponentModel.TypeDescriptionProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to remove.</p>\\n\"\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the target component.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>One or both of the parameters are <strong>null</strong>.</p>\\n\"\n  see:\n  - type: System.Security.Permissions.TypeDescriptorPermission\n    commentId: T:System.Security.Permissions.TypeDescriptorPermission\n  - type: System.Reflection.Assembly.PermissionSet\n    commentId: P:System.Reflection.Assembly.PermissionSet\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.RemoveProviderTransparent(TypeDescriptionProvider, Type)\n- uid: System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)\n  commentId: M:System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)\n  id: SortDescriptorArray(System.Collections.IList)\n  parent: System.ComponentModel.TypeDescriptor\n  langs:\n  - csharp\n  - vb\n  name: SortDescriptorArray(IList)\n  fullName: System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SortDescriptorArray\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs\n    startLine: 2629\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Sorts descriptors using the name of the descriptor.</p>\\n\"\n  syntax:\n    content: public static void SortDescriptorArray(IList infos)\n    content.vb: Public Shared Sub SortDescriptorArray(infos As IList)\n    parameters:\n    - id: infos\n      type: System.Collections.IList\n      description: \"\\n<p>An <xref href=\\\"System.Collections.IList\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the descriptors to sort. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>infos</em> is <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.EventDescriptor\n    commentId: T:System.ComponentModel.EventDescriptor\n  - type: System.ComponentModel.PropertyDescriptor\n    commentId: T:System.ComponentModel.PropertyDescriptor\n  - type: System.Collections.IList\n    commentId: T:System.Collections.IList\n  - type: System.ComponentModel.TypeDescriptor.Refresh(System.Object)\n    commentId: M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TypeDescriptor.SortDescriptorArray(IList)\nreferences:\n- uid: System.ComponentModel\n  isExternal: false\n  name: System.ComponentModel\n  fullName: System.ComponentModel\n  nameWithType: System.ComponentModel\n  commentId: N:System.ComponentModel\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  nameWithType: Type\n  commentId: T:System.Type\n- uid: System.ComponentModel.RefreshEventHandler\n  parent: System.ComponentModel\n  isExternal: false\n  name: RefreshEventHandler\n  fullName: System.ComponentModel.RefreshEventHandler\n  nameWithType: RefreshEventHandler\n  commentId: T:System.ComponentModel.RefreshEventHandler\n- uid: System.Attribute[]\n  name: Attribute[]\n  fullName: System.Attribute[]\n  fullname.vb: System.Attribute()\n  name.vb: Attribute()\n  spec.csharp:\n  - uid: System.Attribute\n    name: Attribute\n    fullName: System.Attribute\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Attribute\n    name: Attribute\n    fullName: System.Attribute\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Attribute[]\n  nameWithType.vb: Attribute()\n- uid: System.ComponentModel.TypeDescriptionProvider\n  parent: System.ComponentModel\n  isExternal: false\n  name: TypeDescriptionProvider\n  fullName: System.ComponentModel.TypeDescriptionProvider\n  nameWithType: TypeDescriptionProvider\n  commentId: T:System.ComponentModel.TypeDescriptionProvider\n- uid: System.Collections.Hashtable\n  parent: System.Collections\n  isExternal: false\n  name: Hashtable\n  fullName: System.Collections.Hashtable\n  nameWithType: Hashtable\n  commentId: T:System.Collections.Hashtable\n- uid: System.Collections\n  isExternal: false\n  name: System.Collections\n  fullName: System.Collections\n  nameWithType: System.Collections\n  commentId: N:System.Collections\n- uid: System.ComponentModel.EventDescriptor\n  parent: System.ComponentModel\n  isExternal: false\n  name: EventDescriptor\n  fullName: System.ComponentModel.EventDescriptor\n  nameWithType: EventDescriptor\n  commentId: T:System.ComponentModel.EventDescriptor\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.IServiceProvider\n  parent: System\n  isExternal: false\n  name: IServiceProvider\n  fullName: System.IServiceProvider\n  nameWithType: IServiceProvider\n  commentId: T:System.IServiceProvider\n- uid: System.Type[]\n  name: Type[]\n  fullName: System.Type[]\n  fullname.vb: System.Type()\n  name.vb: Type()\n  spec.csharp:\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n  - name: ()\n    fullName: ()\n  nameWithType: Type[]\n  nameWithType.vb: Type()\n- uid: System.Object[]\n  name: Object[]\n  fullName: System.Object[]\n  fullname.vb: System.Object()\n  name.vb: Object()\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Object[]\n  nameWithType.vb: Object()\n- uid: System.ComponentModel.PropertyDescriptor\n  parent: System.ComponentModel\n  isExternal: false\n  name: PropertyDescriptor\n  fullName: System.ComponentModel.PropertyDescriptor\n  nameWithType: PropertyDescriptor\n  commentId: T:System.ComponentModel.PropertyDescriptor\n- uid: System.ComponentModel.AttributeCollection\n  parent: System.ComponentModel\n  isExternal: false\n  name: AttributeCollection\n  fullName: System.ComponentModel.AttributeCollection\n  nameWithType: AttributeCollection\n  commentId: T:System.ComponentModel.AttributeCollection\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.ComponentModel.TypeConverter\n  parent: System.ComponentModel\n  isExternal: false\n  name: TypeConverter\n  fullName: System.ComponentModel.TypeConverter\n  nameWithType: TypeConverter\n  commentId: T:System.ComponentModel.TypeConverter\n- uid: System.ComponentModel.EventDescriptorCollection\n  parent: System.ComponentModel\n  isExternal: false\n  name: EventDescriptorCollection\n  fullName: System.ComponentModel.EventDescriptorCollection\n  nameWithType: EventDescriptorCollection\n  commentId: T:System.ComponentModel.EventDescriptorCollection\n- uid: System.ComponentModel.PropertyDescriptorCollection\n  parent: System.ComponentModel\n  isExternal: false\n  name: PropertyDescriptorCollection\n  fullName: System.ComponentModel.PropertyDescriptorCollection\n  nameWithType: PropertyDescriptorCollection\n  commentId: T:System.ComponentModel.PropertyDescriptorCollection\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  fullName: System.Reflection.Assembly\n  nameWithType: Assembly\n  commentId: T:System.Reflection.Assembly\n- uid: System.Reflection\n  isExternal: false\n  name: System.Reflection\n  fullName: System.Reflection\n  nameWithType: System.Reflection\n  commentId: N:System.Reflection\n- uid: System.Reflection.Module\n  parent: System.Reflection\n  isExternal: false\n  name: Module\n  fullName: System.Reflection.Module\n  nameWithType: Module\n  commentId: T:System.Reflection.Module\n- uid: System.Collections.IList\n  parent: System.Collections\n  isExternal: false\n  name: IList\n  fullName: System.Collections.IList\n  nameWithType: IList\n  commentId: T:System.Collections.IList\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  fullName: System.NotSupportedException\n  nameWithType: NotSupportedException\n  commentId: T:System.NotSupportedException\n"}