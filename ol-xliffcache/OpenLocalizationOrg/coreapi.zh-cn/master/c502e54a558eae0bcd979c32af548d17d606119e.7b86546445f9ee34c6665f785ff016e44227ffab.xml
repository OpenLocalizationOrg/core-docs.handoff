{"nodes":[{"pos":[281,298],"content":"IExtenderProvider","needQuote":true,"nodes":[{"content":"IExtenderProvider","pos":[0,17]}]},{"pos":[1394,1411],"content":"CanExtend(Object)","needQuote":true,"nodes":[{"content":"CanExtend(Object)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if this object can provide extender properties to the specified object; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[2420,2561],"source":"\\n<p>\\n<strong>true</strong> if this object can provide extender properties to the specified object; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[2684,2705],"content":"System.ComponentModel","needQuote":true,"nodes":[{"content":"System.ComponentModel","pos":[0,21]}]},{"pos":[2881,2887],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[3033,3040],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[3164,3170],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]}],"content":"items:\n- uid: System.ComponentModel.IExtenderProvider\n  commentId: T:System.ComponentModel.IExtenderProvider\n  id: IExtenderProvider\n  parent: System.ComponentModel\n  children:\n  - System.ComponentModel.IExtenderProvider.CanExtend(System.Object)\n  langs:\n  - csharp\n  - vb\n  name: IExtenderProvider\n  fullName: System.ComponentModel.IExtenderProvider\n  type: Interface\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/IExtenderProvider.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IExtenderProvider\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/IExtenderProvider.cs\n    startLine: 12\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Defines the interface for extending properties to other components in a container.</p>\\n\"\n  syntax:\n    content: public interface IExtenderProvider\n    content.vb: Public Interface IExtenderProvider\n  modifiers.csharp:\n  - public\n  - interface\n  modifiers.vb:\n  - Public\n  - Interface\n  nameWithType: IExtenderProvider\n- uid: System.ComponentModel.IExtenderProvider.CanExtend(System.Object)\n  commentId: M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)\n  id: CanExtend(System.Object)\n  parent: System.ComponentModel.IExtenderProvider\n  langs:\n  - csharp\n  - vb\n  name: CanExtend(Object)\n  fullName: System.ComponentModel.IExtenderProvider.CanExtend(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/IExtenderProvider.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CanExtend\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/IExtenderProvider.cs\n    startLine: 21\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Specifies whether this object can provide its extender properties to the specified object.</p>\\n\"\n  syntax:\n    content: bool CanExtend(object extendee)\n    content.vb: Function CanExtend(extendee As Object) As Boolean\n    parameters:\n    - id: extendee\n      type: System.Object\n      description: \"\\n<p>The <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to receive the extender properties. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if this object can provide extender properties to the specified object; otherwise, <strong>false</strong>.</p>\\n\"\n  nameWithType: IExtenderProvider.CanExtend(Object)\nreferences:\n- uid: System.ComponentModel\n  isExternal: false\n  name: System.ComponentModel\n  fullName: System.ComponentModel\n  nameWithType: System.ComponentModel\n  commentId: N:System.ComponentModel\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n"}