{"nodes":[{"pos":[392,415],"content":"CustomConstantAttribute","needQuote":true,"nodes":[{"content":"CustomConstantAttribute","pos":[0,23]}]},{"pos":[2109,2118],"content":"Inherited","needQuote":true,"nodes":[{"content":"Inherited","pos":[0,9]}]},{"pos":[2573,2598],"content":"CustomConstantAttribute()","needQuote":true,"nodes":[{"content":"CustomConstantAttribute()","pos":[0,25]}]},{"pos":[3685,3690],"content":"Value","needQuote":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"content":"\\n&lt;p&gt;The constant value stored by this attribute.&lt;/p&gt;\\n","pos":[4441,4496],"source":"\\n<p>The constant value stored by this attribute.</p>\\n"},{"pos":[4732,4763],"content":"System.Runtime.CompilerServices","needQuote":true,"nodes":[{"content":"System.Runtime.CompilerServices","pos":[0,31]}]},{"pos":[4969,4975],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[5123,5132],"content":"Attribute","needQuote":true,"nodes":[{"content":"Attribute","pos":[0,9]}]},{"pos":[5320,5334],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[5459,5465],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[5514,5515],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5565,5571],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[5631,5632],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5718,5724],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[5773,5774],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5824,5830],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[5890,5891],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6094,6107],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[6214,6225],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[6279,6280],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6307,6308],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6384,6395],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[6449,6450],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6477,6478],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6660,6670],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[6765,6773],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[6842,6843],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6870,6871],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6941,6949],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[7018,7019],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7046,7047],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7244,7266],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[7414,7420],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7487,7488],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7538,7544],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[7605,7606]},{"pos":[7661,7667],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7727,7728],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7825,7831],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7898,7899],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7949,7955],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8016,8017]},{"pos":[8072,8078],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8138,8139],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8384,8415],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[8581,8596],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[8672,8673],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8723,8729],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8790,8791]},{"pos":[8846,8852],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8912,8913],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9019,9034],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[9110,9111],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9161,9167],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9228,9229]},{"pos":[9284,9290],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9350,9351],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9577,9586],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[9679,9686],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[9754,9755],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9782,9783],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9852,9859],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[9927,9928],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9955,9956],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10131,10148],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[10257,10272],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[10348,10349],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10376,10377],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10454,10469],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[10545,10546],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10573,10574],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10719,10725],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]}],"content":"items:\n- uid: System.Runtime.CompilerServices.CustomConstantAttribute\n  commentId: T:System.Runtime.CompilerServices.CustomConstantAttribute\n  id: CustomConstantAttribute\n  parent: System.Runtime.CompilerServices\n  children:\n  - System.Runtime.CompilerServices.CustomConstantAttribute.#ctor\n  - System.Runtime.CompilerServices.CustomConstantAttribute.Value\n  langs:\n  - csharp\n  - vb\n  name: CustomConstantAttribute\n  fullName: System.Runtime.CompilerServices.CustomConstantAttribute\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/CustomConstantAttribute.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CustomConstantAttribute\n    path: src/mscorlib/src/System/Runtime/CompilerServices/CustomConstantAttribute.cs\n    startLine: 9\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Defines a constant value that a compiler can persist for a field or method parameter.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [AttributeUsage(AttributeTargets.Field | AttributeTargets.Parameter, Inherited = false)]\n\n      [ComVisible(true)]\n\n      public abstract class CustomConstantAttribute : Attribute, _Attribute\n    content.vb: >-\n      <Serializable>\n\n      <AttributeUsage(AttributeTargets.Field Or AttributeTargets.Parameter, Inherited:=False)>\n\n      <ComVisible(True)>\n\n      Public MustInherit Class CustomConstantAttribute\n          Inherits Attribute\n          Implements _Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetHashCode\n  - System.Object.ToString\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  attributes:\n  - type: System.AttributeUsageAttribute\n    ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)\n    arguments:\n    - type: System.AttributeTargets\n      value: 2304\n    namedArguments:\n    - name: Inherited\n      type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: CustomConstantAttribute\n- uid: System.Runtime.CompilerServices.CustomConstantAttribute.#ctor\n  commentId: M:System.Runtime.CompilerServices.CustomConstantAttribute.#ctor\n  id: '#ctor'\n  parent: System.Runtime.CompilerServices.CustomConstantAttribute\n  langs:\n  - csharp\n  - vb\n  name: CustomConstantAttribute()\n  fullName: System.Runtime.CompilerServices.CustomConstantAttribute.CustomConstantAttribute()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2875\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Runtime.CompilerServices.CustomConstantAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class. </p>\\n\"\n  syntax:\n    content: protected CustomConstantAttribute()\n    content.vb: Protected Sub New\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: CustomConstantAttribute.CustomConstantAttribute()\n- uid: System.Runtime.CompilerServices.CustomConstantAttribute.Value\n  commentId: P:System.Runtime.CompilerServices.CustomConstantAttribute.Value\n  id: Value\n  parent: System.Runtime.CompilerServices.CustomConstantAttribute\n  langs:\n  - csharp\n  - vb\n  name: Value\n  fullName: System.Runtime.CompilerServices.CustomConstantAttribute.Value\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/CustomConstantAttribute.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Value\n    path: src/mscorlib/src/System/Runtime/CompilerServices/CustomConstantAttribute.cs\n    startLine: 14\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Gets the constant value stored by this attribute.</p>\\n\"\n  syntax:\n    content: public abstract object Value { get; }\n    content.vb: Public MustOverride ReadOnly Property Value As Object\n    parameters: []\n    return:\n      type: System.Object\n      description: \"\\n<p>The constant value stored by this attribute.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: CustomConstantAttribute.Value\nreferences:\n- uid: System.Runtime.CompilerServices\n  isExternal: false\n  name: System.Runtime.CompilerServices\n  fullName: System.Runtime.CompilerServices\n  nameWithType: System.Runtime.CompilerServices\n  commentId: N:System.Runtime.CompilerServices\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  fullName: System.Attribute\n  nameWithType: Attribute\n  commentId: T:System.Attribute\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Attribute.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Attribute.Equals(System.Object)\n    name: Equals\n    fullName: System.Attribute.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Attribute.Equals(System.Object)\n    name: Equals\n    fullName: System.Attribute.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Attribute.Equals(Object)\n  commentId: M:System.Attribute.Equals(System.Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.Attribute.GetHashCode()\n  spec.csharp:\n  - uid: System.Attribute.GetHashCode\n    name: GetHashCode\n    fullName: System.Attribute.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Attribute.GetHashCode\n    name: GetHashCode\n    fullName: System.Attribute.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Attribute.GetHashCode()\n  commentId: M:System.Attribute.GetHashCode\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n"}