{"nodes":[{"pos":[426,446],"content":"IXsltContextVariable","needQuote":true,"nodes":[{"content":"IXsltContextVariable","pos":[0,20]}]},{"pos":[1442,1449],"content":"IsLocal","needQuote":true,"nodes":[{"content":"IsLocal","pos":[0,7]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the variable is a local variable in the current context; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[2124,2253],"source":"\\n<p>\\n<strong>true</strong> if the variable is a local variable in the current context; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[2562,2569],"content":"IsParam","needQuote":true,"nodes":[{"content":"IsParam","pos":[0,7]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the variable is an XSLT parameter; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[3361,3468],"source":"\\n<p>\\n<strong>true</strong> if the variable is an XSLT parameter; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[3792,3804],"content":"VariableType","needQuote":true,"nodes":[{"content":"VariableType","pos":[0,12]}]},{"pos":[5213,5234],"content":"Evaluate(XsltContext)","needQuote":true,"nodes":[{"content":"Evaluate(XsltContext)","pos":[0,21]}]},{"pos":[6588,6602],"content":"System.Xml.Xsl","needQuote":true,"nodes":[{"content":"System.Xml.Xsl","pos":[0,14]}]},{"pos":[6758,6765],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[6889,6895],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[7055,7070],"content":"XPathResultType","needQuote":true,"nodes":[{"content":"XPathResultType","pos":[0,15]}]},{"pos":[7248,7264],"content":"System.Xml.XPath","needQuote":true,"nodes":[{"content":"System.Xml.XPath","pos":[0,16]}]},{"pos":[7446,7457],"content":"XsltContext","needQuote":true,"nodes":[{"content":"XsltContext","pos":[0,11]}]},{"pos":[7633,7639],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]}],"content":"items:\n- uid: System.Xml.Xsl.IXsltContextVariable\n  commentId: T:System.Xml.Xsl.IXsltContextVariable\n  id: IXsltContextVariable\n  parent: System.Xml.Xsl\n  children:\n  - System.Xml.Xsl.IXsltContextVariable.Evaluate(System.Xml.Xsl.XsltContext)\n  - System.Xml.Xsl.IXsltContextVariable.IsLocal\n  - System.Xml.Xsl.IXsltContextVariable.IsParam\n  - System.Xml.Xsl.IXsltContextVariable.VariableType\n  langs:\n  - csharp\n  - vb\n  name: IXsltContextVariable\n  fullName: System.Xml.Xsl.IXsltContextVariable\n  type: Interface\n  source:\n    remote:\n      path: src/System.Xml.Xsl.Primitives/ref/System.Xml.Xsl.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IXsltContextVariable\n    path: src/System.Xml.Xsl.Primitives/ref/System.Xml.Xsl.Primitives.cs\n    startLine: 18\n  assemblies:\n  - System.Xml.Xsl.Primitives\n  namespace: System.Xml.Xsl\n  summary: \"\\n<p>Provides an interface to a given variable that is defined in the style sheet during runtime execution.</p>\\n\"\n  syntax:\n    content: public interface IXsltContextVariable\n    content.vb: Public Interface IXsltContextVariable\n  modifiers.csharp:\n  - public\n  - interface\n  modifiers.vb:\n  - Public\n  - Interface\n  nameWithType: IXsltContextVariable\n- uid: System.Xml.Xsl.IXsltContextVariable.IsLocal\n  commentId: P:System.Xml.Xsl.IXsltContextVariable.IsLocal\n  id: IsLocal\n  parent: System.Xml.Xsl.IXsltContextVariable\n  langs:\n  - csharp\n  - vb\n  name: IsLocal\n  fullName: System.Xml.Xsl.IXsltContextVariable.IsLocal\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.Xsl.Primitives/ref/System.Xml.Xsl.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsLocal\n    path: src/System.Xml.Xsl.Primitives/ref/System.Xml.Xsl.Primitives.cs\n    startLine: 20\n  assemblies:\n  - System.Xml.Xsl.Primitives\n  namespace: System.Xml.Xsl\n  summary: \"\\n<p>Gets a value indicating whether the variable is local.</p>\\n\"\n  syntax:\n    content: bool IsLocal { get; }\n    content.vb: ReadOnly Property IsLocal As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the variable is a local variable in the current context; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  nameWithType: IXsltContextVariable.IsLocal\n- uid: System.Xml.Xsl.IXsltContextVariable.IsParam\n  commentId: P:System.Xml.Xsl.IXsltContextVariable.IsParam\n  id: IsParam\n  parent: System.Xml.Xsl.IXsltContextVariable\n  langs:\n  - csharp\n  - vb\n  name: IsParam\n  fullName: System.Xml.Xsl.IXsltContextVariable.IsParam\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.Xsl.Primitives/ref/System.Xml.Xsl.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsParam\n    path: src/System.Xml.Xsl.Primitives/ref/System.Xml.Xsl.Primitives.cs\n    startLine: 21\n  assemblies:\n  - System.Xml.Xsl.Primitives\n  namespace: System.Xml.Xsl\n  summary: \"\\n<p>Gets a value indicating whether the variable is an Extensible Stylesheet Language Transformations (XSLT) parameter. This can be a parameter to a style sheet or a template.</p>\\n\"\n  syntax:\n    content: bool IsParam { get; }\n    content.vb: ReadOnly Property IsParam As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the variable is an XSLT parameter; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  nameWithType: IXsltContextVariable.IsParam\n- uid: System.Xml.Xsl.IXsltContextVariable.VariableType\n  commentId: P:System.Xml.Xsl.IXsltContextVariable.VariableType\n  id: VariableType\n  parent: System.Xml.Xsl.IXsltContextVariable\n  langs:\n  - csharp\n  - vb\n  name: VariableType\n  fullName: System.Xml.Xsl.IXsltContextVariable.VariableType\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.Xsl.Primitives/ref/System.Xml.Xsl.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: VariableType\n    path: src/System.Xml.Xsl.Primitives/ref/System.Xml.Xsl.Primitives.cs\n    startLine: 22\n  assemblies:\n  - System.Xml.Xsl.Primitives\n  namespace: System.Xml.Xsl\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Xml.XPath.XPathResultType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the XML Path Language (XPath) type of the variable.</p>\\n\"\n  syntax:\n    content: XPath.XPathResultType VariableType { get; }\n    content.vb: ReadOnly Property VariableType As XPath.XPathResultType\n    parameters: []\n    return:\n      type: System.Xml.XPath.XPathResultType\n      description: \"\\n<p>The <xref href=\\\"System.Xml.XPath.XPathResultType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the XPath type of the variable.</p>\\n\"\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  nameWithType: IXsltContextVariable.VariableType\n- uid: System.Xml.Xsl.IXsltContextVariable.Evaluate(System.Xml.Xsl.XsltContext)\n  commentId: M:System.Xml.Xsl.IXsltContextVariable.Evaluate(System.Xml.Xsl.XsltContext)\n  id: Evaluate(System.Xml.Xsl.XsltContext)\n  parent: System.Xml.Xsl.IXsltContextVariable\n  langs:\n  - csharp\n  - vb\n  name: Evaluate(XsltContext)\n  fullName: System.Xml.Xsl.IXsltContextVariable.Evaluate(System.Xml.Xsl.XsltContext)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.Xsl.Primitives/ref/System.Xml.Xsl.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Evaluate\n    path: src/System.Xml.Xsl.Primitives/ref/System.Xml.Xsl.Primitives.cs\n    startLine: 23\n  assemblies:\n  - System.Xml.Xsl.Primitives\n  namespace: System.Xml.Xsl\n  summary: \"\\n<p>Evaluates the variable at runtime and returns an object that represents the value of the variable.</p>\\n\"\n  syntax:\n    content: object Evaluate(XsltContext xsltContext)\n    content.vb: Function Evaluate(xsltContext As XsltContext) As Object\n    parameters:\n    - id: xsltContext\n      type: System.Xml.Xsl.XsltContext\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Xsl.XsltContext\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the execution context of the variable. </p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>An <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the value of the variable. Possible return types include number, string, Boolean, document fragment, or node set.</p>\\n\"\n  nameWithType: IXsltContextVariable.Evaluate(XsltContext)\nreferences:\n- uid: System.Xml.Xsl\n  isExternal: false\n  name: System.Xml.Xsl\n  fullName: System.Xml.Xsl\n  commentId: N:System.Xml.Xsl\n  nameWithType: System.Xml.Xsl\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Xml.XPath.XPathResultType\n  parent: System.Xml.XPath\n  isExternal: false\n  name: XPathResultType\n  fullName: System.Xml.XPath.XPathResultType\n  commentId: T:System.Xml.XPath.XPathResultType\n  nameWithType: XPathResultType\n- uid: System.Xml.XPath\n  isExternal: false\n  name: System.Xml.XPath\n  fullName: System.Xml.XPath\n  commentId: N:System.Xml.XPath\n  nameWithType: System.Xml.XPath\n- uid: System.Xml.Xsl.XsltContext\n  parent: System.Xml.Xsl\n  isExternal: false\n  name: XsltContext\n  fullName: System.Xml.Xsl.XsltContext\n  commentId: T:System.Xml.Xsl.XsltContext\n  nameWithType: XsltContext\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n"}