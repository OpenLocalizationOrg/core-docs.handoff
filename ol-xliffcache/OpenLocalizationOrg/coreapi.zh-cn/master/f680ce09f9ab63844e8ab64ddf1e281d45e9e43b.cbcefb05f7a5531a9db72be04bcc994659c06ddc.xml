{"nodes":[{"pos":[337,359],"content":"DefaultMemberAttribute","needQuote":true,"nodes":[{"content":"DefaultMemberAttribute","pos":[0,22]}]},{"pos":[2638,2668],"content":"DefaultMemberAttribute(String)","needQuote":true,"nodes":[{"content":"DefaultMemberAttribute(String)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;A &lt;strong&gt;String&lt;/strong&gt; containing the name of the member to invoke.","pos":[3487,3562],"source":"\\n<p>A <strong>String</strong> containing the name of the member to invoke."},{"content":"This may be a constructor, method, property, or field.","pos":[3563,3617]},{"content":"A suitable invocation attribute must be specified when the member is invoked.","pos":[3618,3695]},{"content":"The default member of a class can be specified by passing an empty &lt;strong&gt;String&lt;/strong&gt; as the name of the member.&lt;/p&gt;\\n&lt;p&gt;The default member of a type is marked with the &lt;strong&gt;DefaultMemberAttribute&lt;/strong&gt; custom attribute or marked in COM in the usual way.","pos":[3696,3961],"source":" The default member of a class can be specified by passing an empty <strong>String</strong> as the name of the member.</p>\\n<p>The default member of a type is marked with the <strong>DefaultMemberAttribute</strong> custom attribute or marked in COM in the usual way."},{"content":"&lt;/p&gt;\\n","pos":[3962,3968],"source":" </p>\\n"},{"pos":[4327,4337],"content":"MemberName","needQuote":true,"nodes":[{"content":"MemberName","pos":[0,10]}]},{"content":"\\n&lt;p&gt;A string representing the member name.&lt;/p&gt;\\n","pos":[5011,5060],"source":"\\n<p>A string representing the member name.</p>\\n"},{"pos":[5256,5273],"content":"System.Reflection","needQuote":true,"nodes":[{"content":"System.Reflection","pos":[0,17]}]},{"pos":[5437,5443],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[5591,5600],"content":"Attribute","needQuote":true,"nodes":[{"content":"Attribute","pos":[0,9]}]},{"pos":[5788,5802],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[5927,5933],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[5982,5983],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6033,6039],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6099,6100],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6186,6192],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[6241,6242],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6292,6298],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6358,6359],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6562,6575],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[6682,6693],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[6747,6748],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6775,6776],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6852,6863],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[6917,6918],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6945,6946],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7128,7138],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[7233,7241],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[7310,7311],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7338,7339],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7409,7417],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[7486,7487],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7514,7515],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7712,7734],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[7882,7888],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7955,7956],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8006,8012],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8073,8074]},{"pos":[8129,8135],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8195,8196],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8293,8299],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8366,8367],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8417,8423],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8484,8485]},{"pos":[8540,8546],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8606,8607],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8852,8883],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[9049,9064],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[9140,9141],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9191,9197],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9258,9259]},{"pos":[9314,9320],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9380,9381],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9487,9502],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[9578,9579],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9629,9635],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9696,9697]},{"pos":[9752,9758],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9818,9819],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10045,10054],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[10147,10154],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[10222,10223],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10250,10251],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10320,10327],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[10395,10396],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10423,10424],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10599,10616],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[10725,10740],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[10816,10817],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10844,10845],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10922,10937],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[11013,11014],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11041,11042],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11187,11193],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[11324,11330],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"items:\n- uid: System.Reflection.DefaultMemberAttribute\n  commentId: T:System.Reflection.DefaultMemberAttribute\n  id: DefaultMemberAttribute\n  parent: System.Reflection\n  children:\n  - System.Reflection.DefaultMemberAttribute.#ctor(System.String)\n  - System.Reflection.DefaultMemberAttribute.MemberName\n  langs:\n  - csharp\n  - vb\n  name: DefaultMemberAttribute\n  fullName: System.Reflection.DefaultMemberAttribute\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/DefaultMemberAttribute.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefaultMemberAttribute\n    path: src/mscorlib/src/System/Reflection/DefaultMemberAttribute.cs\n    startLine: 19\n  assemblies:\n  - System.Runtime\n  namespace: System.Reflection\n  summary: \"\\n<p>Defines the member of a type that is the default member used by <xref href=\\\"System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct | AttributeTargets.Interface)]\n\n      [ComVisible(true)]\n\n      public sealed class DefaultMemberAttribute : Attribute, _Attribute\n    content.vb: >-\n      <Serializable>\n\n      <AttributeUsage(AttributeTargets.Class Or AttributeTargets.Struct Or AttributeTargets.Interface)>\n\n      <ComVisible(True)>\n\n      Public NotInheritable Class DefaultMemberAttribute\n          Inherits Attribute\n          Implements _Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetHashCode\n  - System.Object.ToString\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  attributes:\n  - type: System.AttributeUsageAttribute\n    ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)\n    arguments:\n    - type: System.AttributeTargets\n      value: 1036\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: DefaultMemberAttribute\n- uid: System.Reflection.DefaultMemberAttribute.#ctor(System.String)\n  commentId: M:System.Reflection.DefaultMemberAttribute.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Reflection.DefaultMemberAttribute\n  langs:\n  - csharp\n  - vb\n  name: DefaultMemberAttribute(String)\n  fullName: System.Reflection.DefaultMemberAttribute.DefaultMemberAttribute(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/DefaultMemberAttribute.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Reflection/DefaultMemberAttribute.cs\n    startLine: 28\n  assemblies:\n  - System.Runtime\n  namespace: System.Reflection\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Reflection.DefaultMemberAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public DefaultMemberAttribute(string memberName)\n    content.vb: Public Sub New(memberName As String)\n    parameters:\n    - id: memberName\n      type: System.String\n      description: \"\\n<p>A <strong>String</strong> containing the name of the member to invoke. This may be a constructor, method, property, or field. A suitable invocation attribute must be specified when the member is invoked. The default member of a class can be specified by passing an empty <strong>String</strong> as the name of the member.</p>\\n<p>The default member of a type is marked with the <strong>DefaultMemberAttribute</strong> custom attribute or marked in COM in the usual way. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DefaultMemberAttribute.DefaultMemberAttribute(String)\n- uid: System.Reflection.DefaultMemberAttribute.MemberName\n  commentId: P:System.Reflection.DefaultMemberAttribute.MemberName\n  id: MemberName\n  parent: System.Reflection.DefaultMemberAttribute\n  langs:\n  - csharp\n  - vb\n  name: MemberName\n  fullName: System.Reflection.DefaultMemberAttribute.MemberName\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/DefaultMemberAttribute.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: MemberName\n    path: src/mscorlib/src/System/Reflection/DefaultMemberAttribute.cs\n    startLine: 35\n  assemblies:\n  - System.Runtime\n  namespace: System.Reflection\n  summary: \"\\n<p>Gets the name from the attribute.</p>\\n\"\n  syntax:\n    content: public string MemberName { get; }\n    content.vb: Public ReadOnly Property MemberName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A string representing the member name.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: DefaultMemberAttribute.MemberName\nreferences:\n- uid: System.Reflection\n  isExternal: false\n  name: System.Reflection\n  fullName: System.Reflection\n  nameWithType: System.Reflection\n  commentId: N:System.Reflection\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  fullName: System.Attribute\n  nameWithType: Attribute\n  commentId: T:System.Attribute\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Attribute.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Attribute.Equals(System.Object)\n    name: Equals\n    fullName: System.Attribute.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Attribute.Equals(System.Object)\n    name: Equals\n    fullName: System.Attribute.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Attribute.Equals(Object)\n  commentId: M:System.Attribute.Equals(System.Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.Attribute.GetHashCode()\n  spec.csharp:\n  - uid: System.Attribute.GetHashCode\n    name: GetHashCode\n    fullName: System.Attribute.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Attribute.GetHashCode\n    name: GetHashCode\n    fullName: System.Attribute.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Attribute.GetHashCode()\n  commentId: M:System.Attribute.GetHashCode\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n"}