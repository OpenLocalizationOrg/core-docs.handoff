{"nodes":[{"pos":[746,751],"content":"Color","needQuote":true,"nodes":[{"content":"Color","pos":[0,5]}]},{"pos":[2298,2299],"content":"A","needQuote":true,"nodes":[{"content":"A","pos":[0,1]}]},{"pos":[3081,3082],"content":"B","needQuote":true,"nodes":[{"content":"B","pos":[0,1]}]},{"pos":[3864,3865],"content":"G","needQuote":true,"nodes":[{"content":"G","pos":[0,1]}]},{"pos":[4647,4648],"content":"R","needQuote":true,"nodes":[{"content":"R","pos":[0,1]}]},{"pos":[5490,5504],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[6762,6775],"content":"Equals(Color)","needQuote":true,"nodes":[{"content":"Equals(Color)","pos":[0,13]}]},{"pos":[7820,7852],"content":"FromArgb(Byte, Byte, Byte, Byte)","needQuote":true,"nodes":[{"content":"FromArgb(Byte, Byte, Byte, Byte)","pos":[0,32]}]},{"pos":[9003,9016],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[10258,10280],"content":"Equality(Color, Color)","needQuote":true,"nodes":[{"content":"Equality(Color, Color)","pos":[0,22]}]},{"pos":[11450,11474],"content":"Inequality(Color, Color)","needQuote":true,"nodes":[{"content":"Inequality(Color, Color)","pos":[0,24]}]},{"pos":[12531,12541],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[13726,13751],"content":"ToString(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToString(IFormatProvider)","pos":[0,25]}]},{"pos":[14898,14944],"content":"IFormattable.ToString(String, IFormatProvider)","needQuote":true,"nodes":[{"content":"IFormattable.ToString(String, IFormatProvider)","pos":[0,46]}]},{"pos":[16452,16462],"content":"Windows.UI","needQuote":true,"nodes":[{"content":"Windows.UI","pos":[0,10]}]},{"pos":[16620,16632],"content":"IFormattable","needQuote":true,"nodes":[{"content":"IFormattable","pos":[0,12]}]},{"pos":[16867,16889],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[17083,17089],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17188,17189],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17259,17265],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17351,17352]},{"pos":[17430,17436],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17521,17522],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17639,17645],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17744,17745],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17815,17821],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17907,17908]},{"pos":[17986,17992],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18077,18078],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18306,18337],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[18558,18573],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[18690,18691],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18761,18767],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18853,18854]},{"pos":[18932,18938],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19023,19024],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19150,19165],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[19282,19283],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19353,19359],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[19445,19446]},{"pos":[19524,19530],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19615,19616],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19770,19779],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[19905,19912],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[20013,20014],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20061,20062],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20151,20158],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[20259,20260],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20307,20308],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20409,20415],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[20553,20559],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20700,20704],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[20904,20918],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[21084,21090],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[21174,21175],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21245,21251],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21336,21337],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21443,21449],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[21533,21534],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21604,21610],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21695,21696],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21830,21837],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[21990,21999],"content":"ValueType","needQuote":true,"nodes":[{"content":"ValueType","pos":[0,9]}]},{"pos":[22160,22165],"content":"Color","needQuote":true,"nodes":[{"content":"Color","pos":[0,5]}]},{"pos":[22352,22365],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[22512,22523],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[22617,22618],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22665,22666],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22762,22773],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[22867,22868],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22915,22916],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23046,23051],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[23228,23238],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[23376,23384],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[23472,23473],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23520,23521],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23614,23622],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[23710,23711],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23758,23759],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23891,23897],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[24060,24075],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[24356,24389],"content":"ToString(String, IFormatProvider)","needQuote":true,"nodes":[{"content":"ToString(String, IFormatProvider)","pos":[0,33]}]},{"pos":[24634,24642],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[24736,24737],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24807,24813],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[24899,24900]},{"pos":[24987,25002],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[25084,25085],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25219,25227],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[25321,25322],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25392,25398],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[25484,25485]},{"pos":[25572,25587],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[25669,25670],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]}],"content":"items:\n- uid: Windows.UI.Color\n  commentId: T:Windows.UI.Color\n  id: Color\n  parent: Windows.UI\n  children:\n  - Windows.UI.Color.A\n  - Windows.UI.Color.B\n  - Windows.UI.Color.Equals(System.Object)\n  - Windows.UI.Color.Equals(Windows.UI.Color)\n  - Windows.UI.Color.FromArgb(System.Byte,System.Byte,System.Byte,System.Byte)\n  - Windows.UI.Color.G\n  - Windows.UI.Color.GetHashCode\n  - Windows.UI.Color.op_Equality(Windows.UI.Color,Windows.UI.Color)\n  - Windows.UI.Color.op_Inequality(Windows.UI.Color,Windows.UI.Color)\n  - Windows.UI.Color.R\n  - Windows.UI.Color.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  - Windows.UI.Color.ToString\n  - Windows.UI.Color.ToString(System.IFormatProvider)\n  langs:\n  - csharp\n  - vb\n  name: Color\n  nameWithType: Color\n  fullName: Windows.UI.Color\n  type: Struct\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Color\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.Manual.cs\n    startLine: 31\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.UI\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      [StructLayout(LayoutKind.Sequential)]\n\n      public struct Color : IFormattable\n    content.vb: >-\n      <SecurityCritical>\n\n      <StructLayout(LayoutKind.Sequential)>\n\n      Public Structure Color\n          Implements IFormattable\n  implements:\n  - System.IFormattable\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n    ctor: System.Security.SecurityCriticalAttribute.#ctor\n    arguments: []\n  - type: System.Runtime.InteropServices.StructLayoutAttribute\n    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)\n    arguments:\n    - type: System.Runtime.InteropServices.LayoutKind\n      value: 0\n  modifiers.csharp:\n  - public\n  - struct\n  modifiers.vb:\n  - Public\n  - Structure\n- uid: Windows.UI.Color.A\n  commentId: P:Windows.UI.Color.A\n  id: A\n  parent: Windows.UI.Color\n  langs:\n  - csharp\n  - vb\n  name: A\n  nameWithType: Color.A\n  fullName: Windows.UI.Color.A\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: A\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 210\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.UI\n  syntax:\n    content: public byte A { get; set; }\n    content.vb: Public Property A As Byte\n    parameters: []\n    return:\n      type: System.Byte\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n- uid: Windows.UI.Color.B\n  commentId: P:Windows.UI.Color.B\n  id: B\n  parent: Windows.UI.Color\n  langs:\n  - csharp\n  - vb\n  name: B\n  nameWithType: Color.B\n  fullName: Windows.UI.Color.B\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: B\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 211\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.UI\n  syntax:\n    content: public byte B { get; set; }\n    content.vb: Public Property B As Byte\n    parameters: []\n    return:\n      type: System.Byte\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n- uid: Windows.UI.Color.G\n  commentId: P:Windows.UI.Color.G\n  id: G\n  parent: Windows.UI.Color\n  langs:\n  - csharp\n  - vb\n  name: G\n  nameWithType: Color.G\n  fullName: Windows.UI.Color.G\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: G\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 212\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.UI\n  syntax:\n    content: public byte G { get; set; }\n    content.vb: Public Property G As Byte\n    parameters: []\n    return:\n      type: System.Byte\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n- uid: Windows.UI.Color.R\n  commentId: P:Windows.UI.Color.R\n  id: R\n  parent: Windows.UI.Color\n  langs:\n  - csharp\n  - vb\n  name: R\n  nameWithType: Color.R\n  fullName: Windows.UI.Color.R\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: R\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 213\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.UI\n  syntax:\n    content: public byte R { get; set; }\n    content.vb: Public Property R As Byte\n    parameters: []\n    return:\n      type: System.Byte\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n- uid: Windows.UI.Color.Equals(System.Object)\n  commentId: M:Windows.UI.Color.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: Windows.UI.Color\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  nameWithType: Color.Equals(Object)\n  fullName: Windows.UI.Color.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equals\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 214\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.UI\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public override bool Equals(object o)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Overrides Function Equals(o As Object) As Boolean\n    parameters:\n    - id: o\n      type: System.Object\n    return:\n      type: System.Boolean\n  overridden: System.ValueType.Equals(System.Object)\n  attributes:\n  - type: System.Security.SecuritySafeCriticalAttribute\n    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n- uid: Windows.UI.Color.Equals(Windows.UI.Color)\n  commentId: M:Windows.UI.Color.Equals(Windows.UI.Color)\n  id: Equals(Windows.UI.Color)\n  parent: Windows.UI.Color\n  langs:\n  - csharp\n  - vb\n  name: Equals(Color)\n  nameWithType: Color.Equals(Color)\n  fullName: Windows.UI.Color.Equals(Windows.UI.Color)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equals\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 216\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.UI\n  syntax:\n    content: public bool Equals(Color color)\n    content.vb: Public Function Equals(color As Color) As Boolean\n    parameters:\n    - id: color\n      type: Windows.UI.Color\n    return:\n      type: System.Boolean\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n- uid: Windows.UI.Color.FromArgb(System.Byte,System.Byte,System.Byte,System.Byte)\n  commentId: M:Windows.UI.Color.FromArgb(System.Byte,System.Byte,System.Byte,System.Byte)\n  id: FromArgb(System.Byte,System.Byte,System.Byte,System.Byte)\n  parent: Windows.UI.Color\n  langs:\n  - csharp\n  - vb\n  name: FromArgb(Byte, Byte, Byte, Byte)\n  nameWithType: Color.FromArgb(Byte, Byte, Byte, Byte)\n  fullName: Windows.UI.Color.FromArgb(System.Byte, System.Byte, System.Byte, System.Byte)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: FromArgb\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 217\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.UI\n  syntax:\n    content: public static Color FromArgb(byte a, byte r, byte g, byte b)\n    content.vb: Public Shared Function FromArgb(a As Byte, r As Byte, g As Byte, b As Byte) As Color\n    parameters:\n    - id: a\n      type: System.Byte\n    - id: r\n      type: System.Byte\n    - id: g\n      type: System.Byte\n    - id: b\n      type: System.Byte\n    return:\n      type: Windows.UI.Color\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n- uid: Windows.UI.Color.GetHashCode\n  commentId: M:Windows.UI.Color.GetHashCode\n  id: GetHashCode\n  parent: Windows.UI.Color\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  nameWithType: Color.GetHashCode()\n  fullName: Windows.UI.Color.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetHashCode\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 218\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.UI\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public override int GetHashCode()\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n  overridden: System.ValueType.GetHashCode\n  attributes:\n  - type: System.Security.SecuritySafeCriticalAttribute\n    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n- uid: Windows.UI.Color.op_Equality(Windows.UI.Color,Windows.UI.Color)\n  commentId: M:Windows.UI.Color.op_Equality(Windows.UI.Color,Windows.UI.Color)\n  id: op_Equality(Windows.UI.Color,Windows.UI.Color)\n  parent: Windows.UI.Color\n  langs:\n  - csharp\n  - vb\n  name: Equality(Color, Color)\n  nameWithType: Color.Equality(Color, Color)\n  fullName: Windows.UI.Color.Equality(Windows.UI.Color, Windows.UI.Color)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Equality\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 220\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.UI\n  syntax:\n    content: public static bool operator ==(Color color1, Color color2)\n    content.vb: Public Shared Operator =(color1 As Color, color2 As Color) As Boolean\n    parameters:\n    - id: color1\n      type: Windows.UI.Color\n    - id: color2\n      type: Windows.UI.Color\n    return:\n      type: System.Boolean\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n- uid: Windows.UI.Color.op_Inequality(Windows.UI.Color,Windows.UI.Color)\n  commentId: M:Windows.UI.Color.op_Inequality(Windows.UI.Color,Windows.UI.Color)\n  id: op_Inequality(Windows.UI.Color,Windows.UI.Color)\n  parent: Windows.UI.Color\n  langs:\n  - csharp\n  - vb\n  name: Inequality(Color, Color)\n  nameWithType: Color.Inequality(Color, Color)\n  fullName: Windows.UI.Color.Inequality(Windows.UI.Color, Windows.UI.Color)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Inequality\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 221\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.UI\n  syntax:\n    content: public static bool operator !=(Color color1, Color color2)\n    content.vb: Public Shared Operator <>(color1 As Color, color2 As Color) As Boolean\n    parameters:\n    - id: color1\n      type: Windows.UI.Color\n    - id: color2\n      type: Windows.UI.Color\n    return:\n      type: System.Boolean\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n- uid: Windows.UI.Color.ToString\n  commentId: M:Windows.UI.Color.ToString\n  id: ToString\n  parent: Windows.UI.Color\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  nameWithType: Color.ToString()\n  fullName: Windows.UI.Color.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToString\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 222\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.UI\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public override string ToString()\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Overrides Function ToString As String\n    return:\n      type: System.String\n  overridden: System.ValueType.ToString\n  attributes:\n  - type: System.Security.SecuritySafeCriticalAttribute\n    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n- uid: Windows.UI.Color.ToString(System.IFormatProvider)\n  commentId: M:Windows.UI.Color.ToString(System.IFormatProvider)\n  id: ToString(System.IFormatProvider)\n  parent: Windows.UI.Color\n  langs:\n  - csharp\n  - vb\n  name: ToString(IFormatProvider)\n  nameWithType: Color.ToString(IFormatProvider)\n  fullName: Windows.UI.Color.ToString(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToString\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 224\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.UI\n  syntax:\n    content: public string ToString(IFormatProvider provider)\n    content.vb: Public Function ToString(provider As IFormatProvider) As String\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n    return:\n      type: System.String\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n- uid: Windows.UI.Color.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  commentId: M:Windows.UI.Color.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  id: System#IFormattable#ToString(System.String,System.IFormatProvider)\n  isEii: true\n  parent: Windows.UI.Color\n  langs:\n  - csharp\n  - vb\n  name: IFormattable.ToString(String, IFormatProvider)\n  nameWithType: Color.IFormattable.ToString(String, IFormatProvider)\n  fullName: Windows.UI.Color.System.IFormattable.ToString(System.String, System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.IFormattable.ToString\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.Manual.cs\n    startLine: 33\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.UI\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      string IFormattable.ToString(string format, IFormatProvider provider)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Function System.IFormattable.ToString(format As String, provider As IFormatProvider) As String Implements IFormattable.ToString\n    parameters:\n    - id: format\n      type: System.String\n    - id: provider\n      type: System.IFormatProvider\n    return:\n      type: System.String\n  implements:\n  - System.IFormattable.ToString(System.String,System.IFormatProvider)\n  attributes:\n  - type: System.Security.SecuritySafeCriticalAttribute\n    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor\n    arguments: []\n  nameWithType.vb: Color.System.IFormattable.ToString(String, IFormatProvider)\n  name.vb: System.IFormattable.ToString(String, IFormatProvider)\nreferences:\n- uid: Windows.UI\n  commentId: N:Windows.UI\n  isExternal: false\n  name: Windows.UI\n  nameWithType: Windows.UI\n  fullName: Windows.UI\n- uid: System.IFormattable\n  commentId: T:System.IFormattable\n  parent: System\n  isExternal: false\n  name: IFormattable\n  nameWithType: IFormattable\n  fullName: System.IFormattable\n- uid: System.Object.Equals(System.Object,System.Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.GetType\n  commentId: M:System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System\n  commentId: N:System\n  isExternal: false\n  name: System\n  nameWithType: System\n  fullName: System\n- uid: System.Object\n  commentId: T:System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Byte\n  commentId: T:System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.ValueType.Equals(System.Object)\n  commentId: M:System.ValueType.Equals(System.Object)\n  parent: System.ValueType\n  isExternal: true\n  name: Equals(Object)\n  nameWithType: ValueType.Equals(Object)\n  fullName: System.ValueType.Equals(System.Object)\n  spec.csharp:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    nameWithType: ValueType.Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    nameWithType: ValueType.Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Boolean\n  commentId: T:System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ValueType\n  commentId: T:System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: Windows.UI.Color\n  commentId: T:Windows.UI.Color\n  parent: Windows.UI\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: Windows.UI.Color\n- uid: System.ValueType.GetHashCode\n  commentId: M:System.ValueType.GetHashCode\n  parent: System.ValueType\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ValueType.GetHashCode()\n  fullName: System.ValueType.GetHashCode()\n  spec.csharp:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    nameWithType: ValueType.GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    nameWithType: ValueType.GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Int32\n  commentId: T:System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ValueType.ToString\n  commentId: M:System.ValueType.ToString\n  parent: System.ValueType\n  isExternal: false\n  name: ToString()\n  nameWithType: ValueType.ToString()\n  fullName: System.ValueType.ToString()\n  spec.csharp:\n  - uid: System.ValueType.ToString\n    name: ToString\n    nameWithType: ValueType.ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.ToString\n    name: ToString\n    nameWithType: ValueType.ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.String\n  commentId: T:System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IFormatProvider\n  commentId: T:System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  nameWithType: IFormatProvider\n  fullName: System.IFormatProvider\n- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)\n  commentId: M:System.IFormattable.ToString(System.String,System.IFormatProvider)\n  parent: System.IFormattable\n  isExternal: true\n  name: ToString(String, IFormatProvider)\n  nameWithType: IFormattable.ToString(String, IFormatProvider)\n  fullName: System.IFormattable.ToString(System.String, System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)\n    name: ToString\n    nameWithType: IFormattable.ToString\n    fullName: System.IFormattable.ToString\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    nameWithType: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)\n    name: ToString\n    nameWithType: IFormattable.ToString\n    fullName: System.IFormattable.ToString\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    nameWithType: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    nameWithType: )\n    fullName: )\n"}