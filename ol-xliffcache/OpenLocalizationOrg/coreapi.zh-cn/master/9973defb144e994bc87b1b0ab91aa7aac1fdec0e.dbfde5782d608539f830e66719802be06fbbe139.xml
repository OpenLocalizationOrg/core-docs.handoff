{"nodes":[{"pos":[313,318],"content":"Utils","needQuote":true,"nodes":[{"content":"Utils","pos":[0,5]}]},{"pos":[1694,1717],"content":"CopyArray(Array, Array)","needQuote":true,"nodes":[{"content":"CopyArray(Array, Array)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The array to be copied.&lt;/p&gt;\\n","pos":[2532,2566],"source":"\\n<p>The array to be copied.</p>\\n"},{"content":"\\n&lt;p&gt;The destination array.&lt;/p&gt;\\n","pos":[2631,2664],"source":"\\n<p>The destination array.</p>\\n"},{"content":"\\n&lt;p&gt;The copied array.&lt;/p&gt;\\n","pos":[2723,2751],"source":"\\n<p>The copied array.</p>\\n"},{"pos":[2965,3003],"content":"Microsoft.VisualBasic.CompilerServices","needQuote":true,"nodes":[{"content":"Microsoft.VisualBasic.CompilerServices","pos":[0,38]}]},{"pos":[3230,3236],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[3396,3406],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[3501,3509],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[3578,3579],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[3606,3607],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[3677,3685],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[3754,3755],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[3782,3783],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[3966,3980],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[4099,4105],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[4172,4173],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[4223,4229],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[4289,4290],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[4373,4379],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[4446,4447],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[4497,4503],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[4563,4564],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[4778,4800],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[4948,4954],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[5021,5022],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5072,5078],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[5139,5140]},{"pos":[5195,5201],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[5261,5262],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5359,5365],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[5432,5433],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5483,5489],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[5550,5551]},{"pos":[5606,5612],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[5672,5673],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5918,5949],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[6115,6130],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[6206,6207],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6257,6263],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[6324,6325]},{"pos":[6380,6386],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6446,6447],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6553,6568],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[6644,6645],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6695,6701],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[6762,6763]},{"pos":[6818,6824],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6884,6885],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7115,7128],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[7229,7240],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[7312,7313],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7340,7341],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7414,7425],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[7497,7498],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7525,7526],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7701,7710],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[7803,7810],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[7878,7879],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7906,7907],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7976,7983],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[8051,8052],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8079,8080],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8255,8272],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[8381,8396],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[8472,8473],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8500,8501],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8578,8593],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[8669,8670],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8697,8698],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8843,8849],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[8979,8984],"content":"Array","needQuote":true,"nodes":[{"content":"Array","pos":[0,5]}]}],"content":"items:\n- uid: Microsoft.VisualBasic.CompilerServices.Utils\n  commentId: T:Microsoft.VisualBasic.CompilerServices.Utils\n  id: Utils\n  parent: Microsoft.VisualBasic.CompilerServices\n  children:\n  - Microsoft.VisualBasic.CompilerServices.Utils.CopyArray(System.Array,System.Array)\n  langs:\n  - csharp\n  - vb\n  name: Utils\n  fullName: Microsoft.VisualBasic.CompilerServices.Utils\n  type: Class\n  source:\n    remote:\n      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Utils\n    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n    startLine: 219\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: \"\\n<p>Contains utilities that the Visual Basic compiler uses.</p>\\n\"\n  syntax:\n    content: public sealed class Utils\n    content.vb: Public NotInheritable Class Utils\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: Utils\n- uid: Microsoft.VisualBasic.CompilerServices.Utils.CopyArray(System.Array,System.Array)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.Utils.CopyArray(System.Array,System.Array)\n  id: CopyArray(System.Array,System.Array)\n  parent: Microsoft.VisualBasic.CompilerServices.Utils\n  langs:\n  - csharp\n  - vb\n  name: CopyArray(Array, Array)\n  fullName: Microsoft.VisualBasic.CompilerServices.Utils.CopyArray(System.Array, System.Array)\n  type: Method\n  source:\n    remote:\n      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CopyArray\n    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n    startLine: 223\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: \"\\n<p>Used by the Visual Basic compiler as a helper for <strong>Redim</strong>.</p>\\n\"\n  syntax:\n    content: public static Array CopyArray(Array arySrc, Array aryDest)\n    content.vb: Public Shared Function CopyArray(arySrc As Array, aryDest As Array) As Array\n    parameters:\n    - id: arySrc\n      type: System.Array\n      description: \"\\n<p>The array to be copied.</p>\\n\"\n    - id: aryDest\n      type: System.Array\n      description: \"\\n<p>The destination array.</p>\\n\"\n    return:\n      type: System.Array\n      description: \"\\n<p>The copied array.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Utils.CopyArray(Array, Array)\nreferences:\n- uid: Microsoft.VisualBasic.CompilerServices\n  isExternal: false\n  name: Microsoft.VisualBasic.CompilerServices\n  fullName: Microsoft.VisualBasic.CompilerServices\n  commentId: N:Microsoft.VisualBasic.CompilerServices\n  nameWithType: Microsoft.VisualBasic.CompilerServices\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  fullName: System.Array\n  commentId: T:System.Array\n  nameWithType: Array\n"}