{"nodes":[{"pos":[1213,1232],"content":"FileSystemAuditRule","needQuote":true,"nodes":[{"content":"FileSystemAuditRule","pos":[0,19]}]},{"pos":[3873,3941],"content":"FileSystemAuditRule(IdentityReference, FileSystemRights, AuditFlags)","needQuote":true,"nodes":[{"content":"FileSystemAuditRule(IdentityReference, FileSystemRights, AuditFlags)","pos":[0,68]}]},{"content":"\\n&lt;p&gt;The &lt;em&gt;identity&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[6415,6483],"source":"\\n<p>The <em>identity</em> parameter is <strong>null</strong>.</p>\\n"},{"pos":[7949,8053],"content":"FileSystemAuditRule(IdentityReference, FileSystemRights, InheritanceFlags, PropagationFlags, AuditFlags)","needQuote":true,"nodes":[{"content":"FileSystemAuditRule(IdentityReference, FileSystemRights, InheritanceFlags, PropagationFlags, AuditFlags)","pos":[0,104]}]},{"content":"\\n&lt;p&gt;The &lt;em&gt;identity&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[11515,11583],"source":"\\n<p>The <em>identity</em> parameter is <strong>null</strong>.</p>\\n"},{"pos":[12713,12770],"content":"FileSystemAuditRule(String, FileSystemRights, AuditFlags)","needQuote":true,"nodes":[{"content":"FileSystemAuditRule(String, FileSystemRights, AuditFlags)","pos":[0,57]}]},{"content":"\\n&lt;p&gt;The name of a user account.&lt;/p&gt;\\n","pos":[14024,14062],"source":"\\n<p>The name of a user account.</p>\\n"},{"pos":[16015,16108],"content":"FileSystemAuditRule(String, FileSystemRights, InheritanceFlags, PropagationFlags, AuditFlags)","needQuote":true,"nodes":[{"content":"FileSystemAuditRule(String, FileSystemRights, InheritanceFlags, PropagationFlags, AuditFlags)","pos":[0,93]}]},{"content":"\\n&lt;p&gt;The name of a user account.&lt;/p&gt;\\n","pos":[17713,17751],"source":"\\n<p>The name of a user account.</p>\\n"},{"pos":[19525,19541],"content":"FileSystemRights","needQuote":true,"nodes":[{"content":"FileSystemRights","pos":[0,16]}]},{"pos":[21090,21119],"content":"System.Security.AccessControl","needQuote":true,"nodes":[{"content":"System.Security.AccessControl","pos":[0,29]}]},{"pos":[21319,21325],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21527,21544],"content":"AuthorizationRule","needQuote":true,"nodes":[{"content":"AuthorizationRule","pos":[0,17]}]},{"pos":[21817,21826],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[22096,22106],"content":"AuditFlags","needQuote":true,"nodes":[{"content":"AuditFlags","pos":[0,10]}]},{"pos":[22432,22449],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[22813,22823],"content":"AccessMask","needQuote":true,"nodes":[{"content":"AccessMask","pos":[0,10]}]},{"pos":[23167,23178],"content":"IsInherited","needQuote":true,"nodes":[{"content":"IsInherited","pos":[0,11]}]},{"pos":[23530,23546],"content":"InheritanceFlags","needQuote":true,"nodes":[{"content":"InheritanceFlags","pos":[0,16]}]},{"pos":[23913,23929],"content":"PropagationFlags","needQuote":true,"nodes":[{"content":"PropagationFlags","pos":[0,16]}]},{"pos":[24219,24229],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[24324,24332],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[24401,24402],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24429,24430],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24500,24508],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[24577,24578],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24605,24606],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24789,24803],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[24922,24928],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[24995,24996],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25046,25052],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[25112,25113],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25196,25202],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[25269,25270],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25320,25326],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[25386,25387],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25601,25623],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[25771,25777],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[25844,25845],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25895,25901],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[25962,25963]},{"pos":[26018,26024],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[26084,26085],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26182,26188],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[26255,26256],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26306,26312],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[26373,26374]},{"pos":[26429,26435],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[26495,26496],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26741,26772],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[26938,26953],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[27029,27030],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27080,27086],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[27147,27148]},{"pos":[27203,27209],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[27269,27270],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27376,27391],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[27467,27468],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27518,27524],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[27585,27586]},{"pos":[27641,27647],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[27707,27708],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27938,27951],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[28052,28063],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[28135,28136],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28163,28164],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28237,28248],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[28320,28321],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28348,28349],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28524,28533],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[28626,28633],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[28701,28702],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28729,28730],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28799,28806],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[28874,28875],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28902,28903],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29078,29095],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[29204,29219],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[29295,29296],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29323,29324],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29401,29416],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[29492,29493],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29520,29521],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29666,29672],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[29852,29869],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[30141,30157],"content":"FileSystemRights","needQuote":true,"nodes":[{"content":"FileSystemRights","pos":[0,16]}]},{"pos":[30428,30438],"content":"AuditFlags","needQuote":true,"nodes":[{"content":"AuditFlags","pos":[0,10]}]},{"pos":[30636,30661],"content":"System.Security.Principal","needQuote":true,"nodes":[{"content":"System.Security.Principal","pos":[0,25]}]},{"pos":[30905,30921],"content":"InheritanceFlags","needQuote":true,"nodes":[{"content":"InheritanceFlags","pos":[0,16]}]},{"pos":[31198,31214],"content":"PropagationFlags","needQuote":true,"nodes":[{"content":"PropagationFlags","pos":[0,16]}]},{"pos":[31435,31441],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[31597,31614],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[31790,31811],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[32005,32032],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]}],"content":"items:\n- uid: System.Security.AccessControl.FileSystemAuditRule\n  commentId: T:System.Security.AccessControl.FileSystemAuditRule\n  id: FileSystemAuditRule\n  parent: System.Security.AccessControl\n  children:\n  - System.Security.AccessControl.FileSystemAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)\n  - System.Security.AccessControl.FileSystemAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  - System.Security.AccessControl.FileSystemAuditRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)\n  - System.Security.AccessControl.FileSystemAuditRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  - System.Security.AccessControl.FileSystemAuditRule.FileSystemRights\n  langs:\n  - csharp\n  - vb\n  name: FileSystemAuditRule\n  fullName: System.Security.AccessControl.FileSystemAuditRule\n  type: Class\n  source:\n    remote:\n      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: FileSystemAuditRule\n    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n    startLine: 69\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Represents an abstraction of an access control entry (ACE) that defines an audit rule for a file or directory. This class cannot be inherited.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      public sealed class FileSystemAuditRule : AuditRule\n    content.vb: >-\n      <SecurityCritical>\n\n      Public NotInheritable Class FileSystemAuditRule\n          Inherits AuditRule\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.AuthorizationRule\n  - System.Security.AccessControl.AuditRule\n  inheritedMembers:\n  - System.Security.AccessControl.AuditRule.AuditFlags\n  - System.Security.AccessControl.AuthorizationRule.IdentityReference\n  - System.Security.AccessControl.AuthorizationRule.AccessMask\n  - System.Security.AccessControl.AuthorizationRule.IsInherited\n  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags\n  - System.Security.AccessControl.AuthorizationRule.PropagationFlags\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n    ctor: System.Security.SecurityCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: FileSystemAuditRule\n- uid: System.Security.AccessControl.FileSystemAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)\n  commentId: M:System.Security.AccessControl.FileSystemAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)\n  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)'\n  parent: System.Security.AccessControl.FileSystemAuditRule\n  langs:\n  - csharp\n  - vb\n  name: FileSystemAuditRule(IdentityReference, FileSystemRights, AuditFlags)\n  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemAuditRule(System.Security.Principal.IdentityReference, System.Security.AccessControl.FileSystemRights, System.Security.AccessControl.AuditFlags)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n    startLine: 72\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.AccessControl.FileSystemAuditRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using a reference to a user account, a value that specifies the type of operation associated with the audit rule, and a value that specifies when to perform auditing. </p>\\n\"\n  syntax:\n    content: public FileSystemAuditRule(IdentityReference identity, FileSystemRights fileSystemRights, AuditFlags flags)\n    content.vb: Public Sub New(identity As IdentityReference, fileSystemRights As FileSystemRights, flags As AuditFlags)\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IdentityReference\n      description: \"\\n<p>An <xref href=\\\"System.Security.Principal.IdentityReference\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that encapsulates a reference to a user account.</p>\\n\"\n    - id: fileSystemRights\n      type: System.Security.AccessControl.FileSystemRights\n      description: \"\\n<p>One of the <xref href=\\\"System.Security.AccessControl.FileSystemRights\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that specifies the type of operation associated with the audit rule. </p>\\n\"\n    - id: flags\n      type: System.Security.AccessControl.AuditFlags\n      description: \"\\n<p>One of the <xref href=\\\"System.Security.AccessControl.AuditFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that specifies when to perform auditing.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The <em>identity</em> parameter is not an <xref href=\\\"System.Security.Principal.IdentityReference\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>identity</em> parameter is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>An incorrect enumeration was passed to the <em>flags</em> parameter.</p>\\n<p>-or-</p>\\n<p>The <xref href=\\\"System.Security.AccessControl.AuditFlags.None\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value was passed to the <em>flags</em> parameter.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FileSystemAuditRule.FileSystemAuditRule(IdentityReference, FileSystemRights, AuditFlags)\n- uid: System.Security.AccessControl.FileSystemAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  commentId: M:System.Security.AccessControl.FileSystemAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)'\n  parent: System.Security.AccessControl.FileSystemAuditRule\n  langs:\n  - csharp\n  - vb\n  name: FileSystemAuditRule(IdentityReference, FileSystemRights, InheritanceFlags, PropagationFlags, AuditFlags)\n  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemAuditRule(System.Security.Principal.IdentityReference, System.Security.AccessControl.FileSystemRights, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n    startLine: 73\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.AccessControl.FileSystemAuditRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using the name of a reference to a user account, a value that specifies the type of operation associated with the audit rule, a value that determines how rights are inherited, a value that determines how rights are propagated, and a value that specifies when to perform auditing.  </p>\\n\"\n  syntax:\n    content: public FileSystemAuditRule(IdentityReference identity, FileSystemRights fileSystemRights, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags flags)\n    content.vb: Public Sub New(identity As IdentityReference, fileSystemRights As FileSystemRights, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, flags As AuditFlags)\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IdentityReference\n      description: \"\\n<p>An <xref href=\\\"System.Security.Principal.IdentityReference\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that encapsulates a reference to a user account.</p>\\n\"\n    - id: fileSystemRights\n      type: System.Security.AccessControl.FileSystemRights\n      description: \"\\n<p>One of the <xref href=\\\"System.Security.AccessControl.FileSystemRights\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that specifies the type of operation associated with the audit rule.</p>\\n\"\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: \"\\n<p>One of the <xref href=\\\"System.Security.AccessControl.InheritanceFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that specifies how access masks are propagated to child objects.</p>\\n\"\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: \"\\n<p>One of the <xref href=\\\"System.Security.AccessControl.PropagationFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that specifies how Access Control Entries (ACEs) are propagated to child objects.</p>\\n\"\n    - id: flags\n      type: System.Security.AccessControl.AuditFlags\n      description: \"\\n<p>One of the <xref href=\\\"System.Security.AccessControl.AuditFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that specifies when to perform auditing.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The <em>identity</em> parameter is not an <xref href=\\\"System.Security.Principal.IdentityReference\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>identity</em> parameter is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>An incorrect enumeration was passed to the <em>flags</em> parameter.</p>\\n<p>-or-</p>\\n<p>The <xref href=\\\"System.Security.AccessControl.AuditFlags.None\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value was passed to the <em>flags</em> parameter.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FileSystemAuditRule.FileSystemAuditRule(IdentityReference, FileSystemRights, InheritanceFlags, PropagationFlags, AuditFlags)\n- uid: System.Security.AccessControl.FileSystemAuditRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)\n  commentId: M:System.Security.AccessControl.FileSystemAuditRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)\n  id: '#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)'\n  parent: System.Security.AccessControl.FileSystemAuditRule\n  langs:\n  - csharp\n  - vb\n  name: FileSystemAuditRule(String, FileSystemRights, AuditFlags)\n  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemAuditRule(System.String, System.Security.AccessControl.FileSystemRights, System.Security.AccessControl.AuditFlags)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n    startLine: 74\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.AccessControl.FileSystemAuditRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using a user account name, a value that specifies the type of operation associated with the audit rule, and a value that specifies when to perform auditing.</p>\\n\"\n  syntax:\n    content: public FileSystemAuditRule(string identity, FileSystemRights fileSystemRights, AuditFlags flags)\n    content.vb: Public Sub New(identity As String, fileSystemRights As FileSystemRights, flags As AuditFlags)\n    parameters:\n    - id: identity\n      type: System.String\n      description: \"\\n<p>The name of a user account.</p>\\n\"\n    - id: fileSystemRights\n      type: System.Security.AccessControl.FileSystemRights\n      description: \"\\n<p>One of the <xref href=\\\"System.Security.AccessControl.FileSystemRights\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that specifies the type of operation associated with the audit rule. </p>\\n\"\n    - id: flags\n      type: System.Security.AccessControl.AuditFlags\n      description: \"\\n<p>One of the <xref href=\\\"System.Security.AccessControl.AuditFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that specifies when to perform auditing.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>An incorrect enumeration was passed to the <em>flags</em> parameter.</p>\\n<p>-or-</p>\\n<p>The <xref href=\\\"System.Security.AccessControl.AuditFlags.None\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value was passed to the <em>flags</em> parameter.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FileSystemAuditRule.FileSystemAuditRule(String, FileSystemRights, AuditFlags)\n- uid: System.Security.AccessControl.FileSystemAuditRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  commentId: M:System.Security.AccessControl.FileSystemAuditRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  id: '#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)'\n  parent: System.Security.AccessControl.FileSystemAuditRule\n  langs:\n  - csharp\n  - vb\n  name: FileSystemAuditRule(String, FileSystemRights, InheritanceFlags, PropagationFlags, AuditFlags)\n  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemAuditRule(System.String, System.Security.AccessControl.FileSystemRights, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n    startLine: 75\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.AccessControl.FileSystemAuditRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using the name of a user account, a value that specifies the type of operation associated with the audit rule, a value that determines how rights are inherited, a value that determines how rights are propagated, and a value that specifies when to perform auditing. </p>\\n\"\n  syntax:\n    content: public FileSystemAuditRule(string identity, FileSystemRights fileSystemRights, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags flags)\n    content.vb: Public Sub New(identity As String, fileSystemRights As FileSystemRights, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, flags As AuditFlags)\n    parameters:\n    - id: identity\n      type: System.String\n      description: \"\\n<p>The name of a user account.</p>\\n\"\n    - id: fileSystemRights\n      type: System.Security.AccessControl.FileSystemRights\n      description: \"\\n<p>One of the <xref href=\\\"System.Security.AccessControl.FileSystemRights\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that specifies the type of operation associated with the audit rule.</p>\\n\"\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: \"\\n<p>One of the <xref href=\\\"System.Security.AccessControl.InheritanceFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that specifies how access masks are propagated to child objects.</p>\\n\"\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: \"\\n<p>One of the <xref href=\\\"System.Security.AccessControl.PropagationFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that specifies how Access Control Entries (ACEs) are propagated to child objects.</p>\\n\"\n    - id: flags\n      type: System.Security.AccessControl.AuditFlags\n      description: \"\\n<p>One of the <xref href=\\\"System.Security.AccessControl.AuditFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that specifies when to perform auditing.</p>\\n\"\n  see:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FileSystemAuditRule.FileSystemAuditRule(String, FileSystemRights, InheritanceFlags, PropagationFlags, AuditFlags)\n- uid: System.Security.AccessControl.FileSystemAuditRule.FileSystemRights\n  commentId: P:System.Security.AccessControl.FileSystemAuditRule.FileSystemRights\n  id: FileSystemRights\n  parent: System.Security.AccessControl.FileSystemAuditRule\n  langs:\n  - csharp\n  - vb\n  name: FileSystemRights\n  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemRights\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: FileSystemRights\n    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n    startLine: 76\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Security.AccessControl.FileSystemRights\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> flags associated with the current <xref href=\\\"System.Security.AccessControl.FileSystemAuditRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public FileSystemRights FileSystemRights { get; }\n    content.vb: Public ReadOnly Property FileSystemRights As FileSystemRights\n    parameters: []\n    return:\n      type: System.Security.AccessControl.FileSystemRights\n      description: \"\\n<p>The <xref href=\\\"System.Security.AccessControl.FileSystemRights\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> flags associated with the current <xref href=\\\"System.Security.AccessControl.FileSystemAuditRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: FileSystemAuditRule.FileSystemRights\nreferences:\n- uid: System.Security.AccessControl\n  isExternal: false\n  name: System.Security.AccessControl\n  fullName: System.Security.AccessControl\n  commentId: N:System.Security.AccessControl\n  nameWithType: System.Security.AccessControl\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Security.AccessControl.AuthorizationRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuthorizationRule\n  fullName: System.Security.AccessControl.AuthorizationRule\n  commentId: T:System.Security.AccessControl.AuthorizationRule\n  nameWithType: AuthorizationRule\n- uid: System.Security.AccessControl.AuditRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditRule\n  fullName: System.Security.AccessControl.AuditRule\n  commentId: T:System.Security.AccessControl.AuditRule\n  nameWithType: AuditRule\n- uid: System.Security.AccessControl.AuditRule.AuditFlags\n  parent: System.Security.AccessControl.AuditRule\n  isExternal: false\n  name: AuditFlags\n  fullName: System.Security.AccessControl.AuditRule.AuditFlags\n  commentId: P:System.Security.AccessControl.AuditRule.AuditFlags\n  nameWithType: AuditRule.AuditFlags\n- uid: System.Security.AccessControl.AuthorizationRule.IdentityReference\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: IdentityReference\n  fullName: System.Security.AccessControl.AuthorizationRule.IdentityReference\n  commentId: P:System.Security.AccessControl.AuthorizationRule.IdentityReference\n  nameWithType: AuthorizationRule.IdentityReference\n- uid: System.Security.AccessControl.AuthorizationRule.AccessMask\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: AccessMask\n  fullName: System.Security.AccessControl.AuthorizationRule.AccessMask\n  commentId: P:System.Security.AccessControl.AuthorizationRule.AccessMask\n  nameWithType: AuthorizationRule.AccessMask\n- uid: System.Security.AccessControl.AuthorizationRule.IsInherited\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: IsInherited\n  fullName: System.Security.AccessControl.AuthorizationRule.IsInherited\n  commentId: P:System.Security.AccessControl.AuthorizationRule.IsInherited\n  nameWithType: AuthorizationRule.IsInherited\n- uid: System.Security.AccessControl.AuthorizationRule.InheritanceFlags\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: InheritanceFlags\n  fullName: System.Security.AccessControl.AuthorizationRule.InheritanceFlags\n  commentId: P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags\n  nameWithType: AuthorizationRule.InheritanceFlags\n- uid: System.Security.AccessControl.AuthorizationRule.PropagationFlags\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: PropagationFlags\n  fullName: System.Security.AccessControl.AuthorizationRule.PropagationFlags\n  commentId: P:System.Security.AccessControl.AuthorizationRule.PropagationFlags\n  nameWithType: AuthorizationRule.PropagationFlags\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Security.Principal.IdentityReference\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReference\n  fullName: System.Security.Principal.IdentityReference\n  commentId: T:System.Security.Principal.IdentityReference\n  nameWithType: IdentityReference\n- uid: System.Security.AccessControl.FileSystemRights\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: FileSystemRights\n  fullName: System.Security.AccessControl.FileSystemRights\n  commentId: T:System.Security.AccessControl.FileSystemRights\n  nameWithType: FileSystemRights\n- uid: System.Security.AccessControl.AuditFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditFlags\n  fullName: System.Security.AccessControl.AuditFlags\n  commentId: T:System.Security.AccessControl.AuditFlags\n  nameWithType: AuditFlags\n- uid: System.Security.Principal\n  isExternal: false\n  name: System.Security.Principal\n  fullName: System.Security.Principal\n  commentId: N:System.Security.Principal\n  nameWithType: System.Security.Principal\n- uid: System.Security.AccessControl.InheritanceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: InheritanceFlags\n  fullName: System.Security.AccessControl.InheritanceFlags\n  commentId: T:System.Security.AccessControl.InheritanceFlags\n  nameWithType: InheritanceFlags\n- uid: System.Security.AccessControl.PropagationFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: PropagationFlags\n  fullName: System.Security.AccessControl.PropagationFlags\n  commentId: T:System.Security.AccessControl.PropagationFlags\n  nameWithType: PropagationFlags\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n"}