{"nodes":[{"pos":[2060,2073],"content":"DynamicMethod","needQuote":true,"nodes":[{"content":"DynamicMethod","pos":[0,13]}]},{"pos":[11699,11789],"content":"DynamicMethod(String, MethodAttributes, CallingConventions, Type, Type[], Module, Boolean)","needQuote":true,"nodes":[{"content":"DynamicMethod(String, MethodAttributes, CallingConventions, Type, Type[], Module, Boolean)","pos":[0,90]}]},{"content":"\\n&lt;p&gt;The name of the dynamic method.","pos":[13374,13410],"source":"\\n<p>The name of the dynamic method."},{"content":"This can be a zero-length string, but it cannot be &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[13411,13490],"source":" This can be a zero-length string, but it cannot be <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to skip JIT visibility checks on types and members accessed by the MSIL of the dynamic method; otherwise, &lt;strong&gt;false&lt;/strong&gt;.","pos":[15178,15336],"source":"\\n<p>\\n<strong>true</strong> to skip JIT visibility checks on types and members accessed by the MSIL of the dynamic method; otherwise, <strong>false</strong>."},{"content":"&lt;/p&gt;\\n","pos":[15337,15343],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[15807,15853],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;m&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[15854,15920],"source":" </p>\\n<p>-or-</p>\\n<p>\\n<em>m</em> is <strong>null</strong>.</p>\\n"},{"pos":[18305,18393],"content":"DynamicMethod(String, MethodAttributes, CallingConventions, Type, Type[], Type, Boolean)","needQuote":true,"nodes":[{"content":"DynamicMethod(String, MethodAttributes, CallingConventions, Type, Type[], Type, Boolean)","pos":[0,88]}]},{"content":"\\n&lt;p&gt;The name of the dynamic method.","pos":[19997,20033],"source":"\\n<p>The name of the dynamic method."},{"content":"This can be a zero-length string, but it cannot be &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[20034,20113],"source":" This can be a zero-length string, but it cannot be <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to skip JIT visibility checks on types and members accessed by the MSIL of the dynamic method; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[21806,21970],"source":"\\n<p>\\n<strong>true</strong> to skip JIT visibility checks on types and members accessed by the MSIL of the dynamic method; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[22472,22518],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;owner&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[22519,22589],"source":" </p>\\n<p>-or-</p>\\n<p>\\n<em>owner</em> is <strong>null</strong>.</p>\\n"},{"pos":[24658,24693],"content":"DynamicMethod(String, Type, Type[])","needQuote":true,"nodes":[{"content":"DynamicMethod(String, Type, Type[])","pos":[0,35]}]},{"content":"\\n&lt;p&gt;The name of the dynamic method.","pos":[25752,25788],"source":"\\n<p>The name of the dynamic method."},{"content":"This can be a zero-length string, but it cannot be &lt;strong&gt;null&lt;/strong&gt;.","pos":[25789,25862],"source":" This can be a zero-length string, but it cannot be <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[25863,25869],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[26803,26849],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[26850,26856],"source":" </p>\\n"},{"pos":[27998,28042],"content":"DynamicMethod(String, Type, Type[], Boolean)","needQuote":true,"nodes":[{"content":"DynamicMethod(String, Type, Type[], Boolean)","pos":[0,44]}]},{"content":"\\n&lt;p&gt;The name of the dynamic method.","pos":[29348,29384],"source":"\\n<p>The name of the dynamic method."},{"content":"This can be a zero-length string, but it cannot be &lt;strong&gt;null&lt;/strong&gt;.","pos":[29385,29458],"source":" This can be a zero-length string, but it cannot be <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[29459,29465],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to skip JIT visibility checks on types and members accessed by the MSIL of the dynamic method, with this restriction: the trust level of the assemblies that contain those types and members must be equal to or less than the trust level of the call stack that emits the dynamic method; otherwise, &lt;strong&gt;false&lt;/strong&gt;.","pos":[30117,30464],"source":"\\n<p>\\n<strong>true</strong> to skip JIT visibility checks on types and members accessed by the MSIL of the dynamic method, with this restriction: the trust level of the assemblies that contain those types and members must be equal to or less than the trust level of the call stack that emits the dynamic method; otherwise, <strong>false</strong>."},{"content":"&lt;/p&gt;\\n","pos":[30465,30471],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[30836,30882],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[30883,30889],"source":" </p>\\n"},{"pos":[32104,32147],"content":"DynamicMethod(String, Type, Type[], Module)","needQuote":true,"nodes":[{"content":"DynamicMethod(String, Type, Type[], Module)","pos":[0,43]}]},{"content":"\\n&lt;p&gt;The name of the dynamic method.","pos":[33259,33295],"source":"\\n<p>The name of the dynamic method."},{"content":"This can be a zero-length string, but it cannot be &lt;strong&gt;null&lt;/strong&gt;.","pos":[33296,33369],"source":" This can be a zero-length string, but it cannot be <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[33370,33376],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[34663,34709],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;m&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[34710,34776],"source":" </p>\\n<p>-or-</p>\\n<p>\\n<em>m</em> is <strong>null</strong>.</p>\\n"},{"pos":[36175,36227],"content":"DynamicMethod(String, Type, Type[], Module, Boolean)","needQuote":true,"nodes":[{"content":"DynamicMethod(String, Type, Type[], Module, Boolean)","pos":[0,52]}]},{"content":"\\n&lt;p&gt;The name of the dynamic method.","pos":[37566,37602],"source":"\\n<p>The name of the dynamic method."},{"content":"This can be a zero-length string, but it cannot be &lt;strong&gt;null&lt;/strong&gt;.","pos":[37603,37676],"source":" This can be a zero-length string, but it cannot be <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[37677,37683],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to skip JIT visibility checks on types and members accessed by the MSIL of the dynamic method.","pos":[38579,38702],"source":"\\n<p>\\n<strong>true</strong> to skip JIT visibility checks on types and members accessed by the MSIL of the dynamic method."},{"content":"&lt;/p&gt;\\n","pos":[38703,38709],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[39174,39220],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;m&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[39221,39287],"source":" </p>\\n<p>-or-</p>\\n<p>\\n<em>m</em> is <strong>null</strong>.</p>\\n"},{"pos":[40770,40811],"content":"DynamicMethod(String, Type, Type[], Type)","needQuote":true,"nodes":[{"content":"DynamicMethod(String, Type, Type[], Type)","pos":[0,41]}]},{"content":"\\n&lt;p&gt;The name of the dynamic method.","pos":[41942,41978],"source":"\\n<p>The name of the dynamic method."},{"content":"This can be a zero-length string, but it cannot be &lt;strong&gt;null&lt;/strong&gt;.","pos":[41979,42052],"source":" This can be a zero-length string, but it cannot be <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[42053,42059],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[43390,43436],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;owner&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[43437,43507],"source":" </p>\\n<p>-or-</p>\\n<p>\\n<em>owner</em> is <strong>null</strong>.</p>\\n"},{"pos":[44877,44927],"content":"DynamicMethod(String, Type, Type[], Type, Boolean)","needQuote":true,"nodes":[{"content":"DynamicMethod(String, Type, Type[], Type, Boolean)","pos":[0,50]}]},{"content":"\\n&lt;p&gt;The name of the dynamic method.","pos":[46285,46321],"source":"\\n<p>The name of the dynamic method."},{"content":"This can be a zero-length string, but it cannot be &lt;strong&gt;null&lt;/strong&gt;.","pos":[46322,46395],"source":" This can be a zero-length string, but it cannot be <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[46396,46402],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to skip JIT visibility checks on types and members accessed by the MSIL of the dynamic method; otherwise, &lt;strong&gt;false&lt;/strong&gt;.","pos":[47303,47461],"source":"\\n<p>\\n<strong>true</strong> to skip JIT visibility checks on types and members accessed by the MSIL of the dynamic method; otherwise, <strong>false</strong>."},{"content":"&lt;/p&gt;\\n","pos":[47462,47468],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[47970,48016],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;owner&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[48017,48087],"source":" </p>\\n<p>-or-</p>\\n<p>\\n<em>owner</em> is <strong>null</strong>.</p>\\n"},{"pos":[49434,49444],"content":"Attributes","needQuote":true,"nodes":[{"content":"Attributes","pos":[0,10]}]},{"pos":[50851,50868],"content":"CallingConvention","needQuote":true,"nodes":[{"content":"CallingConvention","pos":[0,17]}]},{"pos":[52312,52325],"content":"DeclaringType","needQuote":true,"nodes":[{"content":"DeclaringType","pos":[0,13]}]},{"content":"\\n&lt;p&gt;Always &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[53103,53143],"source":"\\n<p>Always <strong>null</strong>.</p>\\n"},{"pos":[53569,53579],"content":"InitLocals","needQuote":true,"nodes":[{"content":"InitLocals","pos":[0,10]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the local variables in the method are zero-initialized; otherwise, &lt;strong&gt;false&lt;/strong&gt;.","pos":[54326,54448],"source":"\\n<p>\\n<strong>true</strong> if the local variables in the method are zero-initialized; otherwise, <strong>false</strong>."},{"content":"The default is &lt;strong&gt;true&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[54449,54492],"source":" The default is <strong>true</strong>.</p>\\n"},{"pos":[54808,54812],"content":"Name","needQuote":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"content":"\\n&lt;p&gt;The simple name of the method.&lt;/p&gt;\\n","pos":[55498,55539],"source":"\\n<p>The simple name of the method.</p>\\n"},{"pos":[55962,55977],"content":"ReturnParameter","needQuote":true,"nodes":[{"content":"ReturnParameter","pos":[0,15]}]},{"content":"\\n&lt;p&gt;Always &lt;strong&gt;null&lt;/strong&gt;.","pos":[56751,56785],"source":"\\n<p>Always <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[56786,56792],"source":" </p>\\n"},{"pos":[57222,57232],"content":"ReturnType","needQuote":true,"nodes":[{"content":"ReturnType","pos":[0,10]}]},{"pos":[58679,58699],"content":"CreateDelegate(Type)","needQuote":true,"nodes":[{"content":"CreateDelegate(Type)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;A delegate type whose signature matches that of the dynamic method.","pos":[59641,59713],"source":"\\n<p>A delegate type whose signature matches that of the dynamic method."},{"content":"&lt;/p&gt;\\n","pos":[59714,59720],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A delegate of the specified type, which can be used to execute the dynamic method.&lt;/p&gt;\\n","pos":[59782,59875],"source":"\\n<p>A delegate of the specified type, which can be used to execute the dynamic method.</p>\\n"},{"content":"\\n&lt;p&gt;The dynamic method has no method body.&lt;/p&gt;\\n","pos":[60073,60122],"source":"\\n<p>The dynamic method has no method body.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;delegateType&lt;/em&gt; has the wrong number of parameters or the wrong parameter types.&lt;/p&gt;\\n","pos":[60219,60318],"source":"\\n<p>\\n<em>delegateType</em> has the wrong number of parameters or the wrong parameter types.</p>\\n"},{"pos":[60946,60974],"content":"CreateDelegate(Type, Object)","needQuote":true,"nodes":[{"content":"CreateDelegate(Type, Object)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;A delegate type whose signature matches that of the dynamic method, minus the first parameter.&lt;/p&gt;\\n","pos":[62033,62138],"source":"\\n<p>A delegate type whose signature matches that of the dynamic method, minus the first parameter.</p>\\n"},{"content":"\\n&lt;p&gt;An object the delegate is bound to.","pos":[62203,62243],"source":"\\n<p>An object the delegate is bound to."},{"content":"Must be of the same type as the first parameter of the dynamic method.","pos":[62244,62314]},{"content":"&lt;/p&gt;\\n","pos":[62315,62321],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A delegate of the specified type, which can be used to execute the dynamic method with the specified target object.&lt;/p&gt;\\n","pos":[62383,62509],"source":"\\n<p>A delegate of the specified type, which can be used to execute the dynamic method with the specified target object.</p>\\n"},{"content":"\\n&lt;p&gt;The dynamic method has no method body.&lt;/p&gt;\\n","pos":[62721,62770],"source":"\\n<p>The dynamic method has no method body.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;target&lt;/em&gt; is not the same type as the first parameter of the dynamic method, and is not assignable to that type.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;delegateType&lt;/em&gt; has the wrong number of parameters or the wrong parameter types.&lt;/p&gt;\\n","pos":[62867,63108],"source":"\\n<p>\\n<em>target</em> is not the same type as the first parameter of the dynamic method, and is not assignable to that type.</p>\\n<p>-or-</p>\\n<p>\\n<em>delegateType</em> has the wrong number of parameters or the wrong parameter types.</p>\\n"},{"pos":[63663,63679],"content":"GetILGenerator()","needQuote":true,"nodes":[{"content":"GetILGenerator()","pos":[0,16]}]},{"pos":[64973,64994],"content":"GetILGenerator(Int32)","needQuote":true,"nodes":[{"content":"GetILGenerator(Int32)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The size of the MSIL stream, in bytes.","pos":[65901,65944],"source":"\\n<p>The size of the MSIL stream, in bytes."},{"content":"&lt;/p&gt;\\n","pos":[65945,65951],"source":" </p>\\n"},{"pos":[66688,66703],"content":"GetParameters()","needQuote":true,"nodes":[{"content":"GetParameters()","pos":[0,15]}]},{"pos":[68289,68299],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"content":"\\n&lt;p&gt;A string representing the method signature.&lt;/p&gt;\\n","pos":[68991,69045],"source":"\\n<p>A string representing the method signature.</p>\\n"},{"pos":[69472,69497],"content":"MethodImplementationFlags","needQuote":true,"nodes":[{"content":"MethodImplementationFlags","pos":[0,25]}]},{"pos":[70600,70622],"content":"System.Reflection.Emit","needQuote":true,"nodes":[{"content":"System.Reflection.Emit","pos":[0,22]}]},{"pos":[70801,70807],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[70978,70988],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[71193,71203],"content":"MethodBase","needQuote":true,"nodes":[{"content":"MethodBase","pos":[0,10]}]},{"pos":[71408,71418],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[71637,71661],"content":"ICustomAttributeProvider","needQuote":true,"nodes":[{"content":"ICustomAttributeProvider","pos":[0,24]}]},{"pos":[71934,71945],"content":"_MemberInfo","needQuote":true,"nodes":[{"content":"_MemberInfo","pos":[0,11]}]},{"pos":[72205,72216],"content":"_MethodBase","needQuote":true,"nodes":[{"content":"_MethodBase","pos":[0,11]}]},{"pos":[72476,72487],"content":"_MethodInfo","needQuote":true,"nodes":[{"content":"_MethodInfo","pos":[0,11]}]},{"pos":[72753,72767],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[72916,72922],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[73004,73005],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73055,73061],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[73121,73122],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73220,73226],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[73308,73309],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73359,73365],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[73425,73426],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73665,73678],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[73809,73820],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[73907,73908],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73935,73936],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74024,74035],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[74122,74123],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74150,74151],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74385,74404],"content":"GetBaseDefinition()","needQuote":true,"nodes":[{"content":"GetBaseDefinition()","pos":[0,19]}]},{"pos":[74547,74564],"content":"GetBaseDefinition","needQuote":true,"nodes":[{"content":"GetBaseDefinition","pos":[0,17]}]},{"pos":[74657,74658],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74685,74686],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74780,74797],"content":"GetBaseDefinition","needQuote":true,"nodes":[{"content":"GetBaseDefinition","pos":[0,17]}]},{"pos":[74890,74891],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74918,74919],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75167,75188],"content":"GetGenericArguments()","needQuote":true,"nodes":[{"content":"GetGenericArguments()","pos":[0,21]}]},{"pos":[75335,75354],"content":"GetGenericArguments","needQuote":true,"nodes":[{"content":"GetGenericArguments","pos":[0,19]}]},{"pos":[75449,75450],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75477,75478],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75574,75593],"content":"GetGenericArguments","needQuote":true,"nodes":[{"content":"GetGenericArguments","pos":[0,19]}]},{"pos":[75688,75689],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75716,75717],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75976,76004],"content":"GetGenericMethodDefinition()","needQuote":true,"nodes":[{"content":"GetGenericMethodDefinition()","pos":[0,28]}]},{"pos":[76165,76191],"content":"GetGenericMethodDefinition","needQuote":true,"nodes":[{"content":"GetGenericMethodDefinition","pos":[0,26]}]},{"pos":[76293,76294],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76321,76322],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76425,76451],"content":"GetGenericMethodDefinition","needQuote":true,"nodes":[{"content":"GetGenericMethodDefinition","pos":[0,26]}]},{"pos":[76553,76554],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76581,76582],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76861,76886],"content":"MakeGenericMethod(Type[])","needQuote":true,"nodes":[{"content":"MakeGenericMethod(Type[])","pos":[0,25]}]},{"pos":[77171,77188],"content":"MakeGenericMethod","needQuote":true,"nodes":[{"content":"MakeGenericMethod","pos":[0,17]}]},{"pos":[77281,77282],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77330,77334],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[77393,77395]},{"pos":[77426,77427],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77536,77553],"content":"MakeGenericMethod","needQuote":true,"nodes":[{"content":"MakeGenericMethod","pos":[0,17]}]},{"pos":[77646,77647],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77695,77699],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[77757,77759],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[77787,77788],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78144,78165],"content":"_MethodInfo.GetType()","needQuote":true,"nodes":[{"content":"_MethodInfo.GetType()","pos":[0,21]}]},{"pos":[78438,78457],"content":"_MethodInfo.GetType","needQuote":true,"nodes":[{"content":"_MethodInfo.GetType","pos":[0,19]}]},{"pos":[78583,78584],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78611,78612],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78739,78789],"content":"System.Runtime.InteropServices._MethodInfo.GetType","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodInfo.GetType","pos":[0,50]}]},{"pos":[78915,78916],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78943,78944],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79366,79402],"content":"_MethodInfo.GetTypeInfoCount(UInt32)","needQuote":true,"nodes":[{"content":"_MethodInfo.GetTypeInfoCount(UInt32)","pos":[0,36]}]},{"pos":[79737,79765],"content":"_MethodInfo.GetTypeInfoCount","needQuote":true,"nodes":[{"content":"_MethodInfo.GetTypeInfoCount","pos":[0,28]}]},{"pos":[79900,79901],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79951,79957],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[80017,80018],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80170,80229],"content":"System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount","pos":[0,59]}]},{"pos":[80364,80365],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80415,80421],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[80481,80482],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80981,81028],"content":"_MethodInfo.GetTypeInfo(UInt32, UInt32, IntPtr)","needQuote":true,"nodes":[{"content":"_MethodInfo.GetTypeInfo(UInt32, UInt32, IntPtr)","pos":[0,47]}]},{"pos":[81421,81444],"content":"_MethodInfo.GetTypeInfo","needQuote":true,"nodes":[{"content":"_MethodInfo.GetTypeInfo","pos":[0,23]}]},{"pos":[81574,81575],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81625,81631],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[81692,81693]},{"pos":[81748,81754],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[81815,81816]},{"pos":[81871,81877],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[81937,81938],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82112,82166],"content":"System.Runtime.InteropServices._MethodInfo.GetTypeInfo","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodInfo.GetTypeInfo","pos":[0,54]}]},{"pos":[82296,82297],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82347,82353],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[82414,82415]},{"pos":[82470,82476],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[82537,82538]},{"pos":[82593,82599],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[82659,82660],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83232,83295],"content":"_MethodInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)","needQuote":true,"nodes":[{"content":"_MethodInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)","pos":[0,63]}]},{"pos":[83763,83788],"content":"_MethodInfo.GetIDsOfNames","needQuote":true,"nodes":[{"content":"_MethodInfo.GetIDsOfNames","pos":[0,25]}]},{"pos":[83920,83921],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83969,83973],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[84032,84033]},{"pos":[84088,84094],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[84155,84156]},{"pos":[84211,84217],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[84278,84279]},{"pos":[84334,84340],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[84401,84402]},{"pos":[84457,84463],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[84523,84524],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[84727,84783],"content":"System.Runtime.InteropServices._MethodInfo.GetIDsOfNames","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodInfo.GetIDsOfNames","pos":[0,56]}]},{"pos":[84915,84916],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[84964,84968],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[85027,85028]},{"pos":[85083,85089],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[85150,85151]},{"pos":[85206,85212],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[85273,85274]},{"pos":[85329,85335],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[85396,85397]},{"pos":[85452,85458],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[85518,85519],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86186,86265],"content":"_MethodInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)","needQuote":true,"nodes":[{"content":"_MethodInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)","pos":[0,79]}]},{"pos":[86820,86838],"content":"_MethodInfo.Invoke","needQuote":true,"nodes":[{"content":"_MethodInfo.Invoke","pos":[0,18]}]},{"pos":[86963,86964],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87014,87020],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[87081,87082]},{"pos":[87135,87139],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[87198,87199]},{"pos":[87254,87260],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[87321,87322]},{"pos":[87376,87381],"content":"Int16","needQuote":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"content":",","pos":[87441,87442]},{"pos":[87497,87503],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[87564,87565]},{"pos":[87620,87626],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[87687,87688]},{"pos":[87743,87749],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[87810,87811]},{"pos":[87866,87872],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[87932,87933],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88170,88219],"content":"System.Runtime.InteropServices._MethodInfo.Invoke","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodInfo.Invoke","pos":[0,49]}]},{"pos":[88344,88345],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88395,88401],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[88462,88463]},{"pos":[88516,88520],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[88579,88580]},{"pos":[88635,88641],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[88702,88703]},{"pos":[88757,88762],"content":"Int16","needQuote":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"content":",","pos":[88822,88823]},{"pos":[88878,88884],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[88945,88946]},{"pos":[89001,89007],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[89068,89069]},{"pos":[89124,89130],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[89191,89192]},{"pos":[89247,89253],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[89313,89314],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89897,89907],"content":"MemberType","needQuote":true,"nodes":[{"content":"MemberType","pos":[0,10]}]},{"pos":[90182,90208],"content":"ReturnTypeCustomAttributes","needQuote":true,"nodes":[{"content":"ReturnTypeCustomAttributes","pos":[0,26]}]},{"pos":[90552,90592],"content":"GetMethodFromHandle(RuntimeMethodHandle)","needQuote":true,"nodes":[{"content":"GetMethodFromHandle(RuntimeMethodHandle)","pos":[0,40]}]},{"pos":[90793,90812],"content":"GetMethodFromHandle","needQuote":true,"nodes":[{"content":"GetMethodFromHandle","pos":[0,19]}]},{"pos":[90886,90887],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90950,90969],"content":"RuntimeMethodHandle","needQuote":true,"nodes":[{"content":"RuntimeMethodHandle","pos":[0,19]}]},{"pos":[91042,91043],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91167,91186],"content":"GetMethodFromHandle","needQuote":true,"nodes":[{"content":"GetMethodFromHandle","pos":[0,19]}]},{"pos":[91260,91261],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91324,91343],"content":"RuntimeMethodHandle","needQuote":true,"nodes":[{"content":"RuntimeMethodHandle","pos":[0,19]}]},{"pos":[91416,91417],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91769,91828],"content":"GetMethodFromHandle(RuntimeMethodHandle, RuntimeTypeHandle)","needQuote":true,"nodes":[{"content":"GetMethodFromHandle(RuntimeMethodHandle, RuntimeTypeHandle)","pos":[0,59]}]},{"pos":[92080,92099],"content":"GetMethodFromHandle","needQuote":true,"nodes":[{"content":"GetMethodFromHandle","pos":[0,19]}]},{"pos":[92173,92174],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92237,92256],"content":"RuntimeMethodHandle","needQuote":true,"nodes":[{"content":"RuntimeMethodHandle","pos":[0,19]}]},{"content":",","pos":[92330,92331]},{"pos":[92397,92414],"content":"RuntimeTypeHandle","needQuote":true,"nodes":[{"content":"RuntimeTypeHandle","pos":[0,17]}]},{"pos":[92485,92486],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92635,92654],"content":"GetMethodFromHandle","needQuote":true,"nodes":[{"content":"GetMethodFromHandle","pos":[0,19]}]},{"pos":[92728,92729],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92792,92811],"content":"RuntimeMethodHandle","needQuote":true,"nodes":[{"content":"RuntimeMethodHandle","pos":[0,19]}]},{"content":",","pos":[92885,92886]},{"pos":[92952,92969],"content":"RuntimeTypeHandle","needQuote":true,"nodes":[{"content":"RuntimeTypeHandle","pos":[0,17]}]},{"pos":[93040,93041],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93381,93399],"content":"GetCurrentMethod()","needQuote":true,"nodes":[{"content":"GetCurrentMethod()","pos":[0,18]}]},{"pos":[93540,93556],"content":"GetCurrentMethod","needQuote":true,"nodes":[{"content":"GetCurrentMethod","pos":[0,16]}]},{"pos":[93648,93649],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93676,93677],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93770,93786],"content":"GetCurrentMethod","needQuote":true,"nodes":[{"content":"GetCurrentMethod","pos":[0,16]}]},{"pos":[93878,93879],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93906,93907],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94163,94193],"content":"GetMethodImplementationFlags()","needQuote":true,"nodes":[{"content":"GetMethodImplementationFlags()","pos":[0,30]}]},{"pos":[94358,94386],"content":"GetMethodImplementationFlags","needQuote":true,"nodes":[{"content":"GetMethodImplementationFlags","pos":[0,28]}]},{"pos":[94469,94470],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94497,94498],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94603,94631],"content":"GetMethodImplementationFlags","needQuote":true,"nodes":[{"content":"GetMethodImplementationFlags","pos":[0,28]}]},{"pos":[94714,94715],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94742,94743],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95120,95179],"content":"Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)","needQuote":true,"nodes":[{"content":"Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)","pos":[0,59]}]},{"pos":[95788,95794],"content":"Invoke","needQuote":true,"nodes":[{"content":"Invoke","pos":[0,6]}]},{"pos":[95876,95877],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95927,95933],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[95994,95995]},{"pos":[96067,96079],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"content":",","pos":[96157,96158]},{"pos":[96224,96230],"content":"Binder","needQuote":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"content":",","pos":[96302,96303]},{"pos":[96358,96364],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[96425,96427]},{"content":",","pos":[96459,96460]},{"pos":[96534,96545],"content":"CultureInfo","needQuote":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[96624,96625],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96828,96834],"content":"Invoke","needQuote":true,"nodes":[{"content":"Invoke","pos":[0,6]}]},{"pos":[96916,96917],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96967,96973],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[97034,97035]},{"pos":[97107,97119],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"content":",","pos":[97197,97198]},{"pos":[97264,97270],"content":"Binder","needQuote":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"content":",","pos":[97342,97343]},{"pos":[97398,97404],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[97464,97466],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[97495,97496]},{"pos":[97570,97581],"content":"CultureInfo","needQuote":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[97660,97661],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[98166,98190],"content":"Invoke(Object, Object[])","needQuote":true,"nodes":[{"content":"Invoke(Object, Object[])","pos":[0,24]}]},{"pos":[98491,98497],"content":"Invoke","needQuote":true,"nodes":[{"content":"Invoke","pos":[0,6]}]},{"pos":[98558,98559],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[98609,98615],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[98676,98677]},{"pos":[98732,98738],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[98799,98801]},{"pos":[98832,98833],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[98947,98953],"content":"Invoke","needQuote":true,"nodes":[{"content":"Invoke","pos":[0,6]}]},{"pos":[99014,99015],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[99065,99071],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[99132,99133]},{"pos":[99188,99194],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[99254,99256],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[99284,99285],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[99607,99622],"content":"GetMethodBody()","needQuote":true,"nodes":[{"content":"GetMethodBody()","pos":[0,15]}]},{"pos":[99757,99770],"content":"GetMethodBody","needQuote":true,"nodes":[{"content":"GetMethodBody","pos":[0,13]}]},{"pos":[99859,99860],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[99887,99888],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[99978,99991],"content":"GetMethodBody","needQuote":true,"nodes":[{"content":"GetMethodBody","pos":[0,13]}]},{"pos":[100080,100081],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[100108,100109],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[100380,100401],"content":"_MethodBase.GetType()","needQuote":true,"nodes":[{"content":"_MethodBase.GetType()","pos":[0,21]}]},{"pos":[100674,100693],"content":"_MethodBase.GetType","needQuote":true,"nodes":[{"content":"_MethodBase.GetType","pos":[0,19]}]},{"pos":[100819,100820],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[100847,100848],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[100975,101025],"content":"System.Runtime.InteropServices._MethodBase.GetType","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.GetType","pos":[0,50]}]},{"pos":[101151,101152],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[101179,101180],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[101602,101638],"content":"_MethodBase.GetTypeInfoCount(UInt32)","needQuote":true,"nodes":[{"content":"_MethodBase.GetTypeInfoCount(UInt32)","pos":[0,36]}]},{"pos":[101973,102001],"content":"_MethodBase.GetTypeInfoCount","needQuote":true,"nodes":[{"content":"_MethodBase.GetTypeInfoCount","pos":[0,28]}]},{"pos":[102136,102137],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[102187,102193],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[102253,102254],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[102406,102465],"content":"System.Runtime.InteropServices._MethodBase.GetTypeInfoCount","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.GetTypeInfoCount","pos":[0,59]}]},{"pos":[102600,102601],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[102651,102657],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[102717,102718],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[103217,103264],"content":"_MethodBase.GetTypeInfo(UInt32, UInt32, IntPtr)","needQuote":true,"nodes":[{"content":"_MethodBase.GetTypeInfo(UInt32, UInt32, IntPtr)","pos":[0,47]}]},{"pos":[103657,103680],"content":"_MethodBase.GetTypeInfo","needQuote":true,"nodes":[{"content":"_MethodBase.GetTypeInfo","pos":[0,23]}]},{"pos":[103810,103811],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[103861,103867],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[103928,103929]},{"pos":[103984,103990],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[104051,104052]},{"pos":[104107,104113],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[104173,104174],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[104348,104402],"content":"System.Runtime.InteropServices._MethodBase.GetTypeInfo","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.GetTypeInfo","pos":[0,54]}]},{"pos":[104532,104533],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[104583,104589],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[104650,104651]},{"pos":[104706,104712],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[104773,104774]},{"pos":[104829,104835],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[104895,104896],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[105468,105531],"content":"_MethodBase.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)","needQuote":true,"nodes":[{"content":"_MethodBase.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)","pos":[0,63]}]},{"pos":[105999,106024],"content":"_MethodBase.GetIDsOfNames","needQuote":true,"nodes":[{"content":"_MethodBase.GetIDsOfNames","pos":[0,25]}]},{"pos":[106156,106157],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[106205,106209],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[106268,106269]},{"pos":[106324,106330],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[106391,106392]},{"pos":[106447,106453],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[106514,106515]},{"pos":[106570,106576],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[106637,106638]},{"pos":[106693,106699],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[106759,106760],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[106963,107019],"content":"System.Runtime.InteropServices._MethodBase.GetIDsOfNames","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.GetIDsOfNames","pos":[0,56]}]},{"pos":[107151,107152],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[107200,107204],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[107263,107264]},{"pos":[107319,107325],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[107386,107387]},{"pos":[107442,107448],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[107509,107510]},{"pos":[107565,107571],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[107632,107633]},{"pos":[107688,107694],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[107754,107755],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[108422,108501],"content":"_MethodBase.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)","needQuote":true,"nodes":[{"content":"_MethodBase.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)","pos":[0,79]}]},{"pos":[109056,109074],"content":"_MethodBase.Invoke","needQuote":true,"nodes":[{"content":"_MethodBase.Invoke","pos":[0,18]}]},{"pos":[109199,109200],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[109250,109256],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[109317,109318]},{"pos":[109371,109375],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[109434,109435]},{"pos":[109490,109496],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[109557,109558]},{"pos":[109612,109617],"content":"Int16","needQuote":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"content":",","pos":[109677,109678]},{"pos":[109733,109739],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[109800,109801]},{"pos":[109856,109862],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[109923,109924]},{"pos":[109979,109985],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[110046,110047]},{"pos":[110102,110108],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[110168,110169],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[110406,110455],"content":"System.Runtime.InteropServices._MethodBase.Invoke","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.Invoke","pos":[0,49]}]},{"pos":[110580,110581],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[110631,110637],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[110698,110699]},{"pos":[110752,110756],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[110815,110816]},{"pos":[110871,110877],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[110938,110939]},{"pos":[110993,110998],"content":"Int16","needQuote":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"content":",","pos":[111058,111059]},{"pos":[111114,111120],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[111181,111182]},{"pos":[111237,111243],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[111304,111305]},{"pos":[111360,111366],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[111427,111428]},{"pos":[111483,111489],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[111549,111550],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[112135,112147],"content":"MethodHandle","needQuote":true,"nodes":[{"content":"MethodHandle","pos":[0,12]}]},{"pos":[112428,112453],"content":"IsGenericMethodDefinition","needQuote":true,"nodes":[{"content":"IsGenericMethodDefinition","pos":[0,25]}]},{"pos":[112773,112798],"content":"ContainsGenericParameters","needQuote":true,"nodes":[{"content":"ContainsGenericParameters","pos":[0,25]}]},{"pos":[113108,113123],"content":"IsGenericMethod","needQuote":true,"nodes":[{"content":"IsGenericMethod","pos":[0,15]}]},{"pos":[113405,113423],"content":"IsSecurityCritical","needQuote":true,"nodes":[{"content":"IsSecurityCritical","pos":[0,18]}]},{"pos":[113718,113740],"content":"IsSecuritySafeCritical","needQuote":true,"nodes":[{"content":"IsSecuritySafeCritical","pos":[0,22]}]},{"pos":[114046,114067],"content":"IsSecurityTransparent","needQuote":true,"nodes":[{"content":"IsSecurityTransparent","pos":[0,21]}]},{"pos":[114358,114366],"content":"IsPublic","needQuote":true,"nodes":[{"content":"IsPublic","pos":[0,8]}]},{"pos":[114619,114628],"content":"IsPrivate","needQuote":true,"nodes":[{"content":"IsPrivate","pos":[0,9]}]},{"pos":[114883,114891],"content":"IsFamily","needQuote":true,"nodes":[{"content":"IsFamily","pos":[0,8]}]},{"pos":[115145,115155],"content":"IsAssembly","needQuote":true,"nodes":[{"content":"IsAssembly","pos":[0,10]}]},{"pos":[115424,115443],"content":"IsFamilyAndAssembly","needQuote":true,"nodes":[{"content":"IsFamilyAndAssembly","pos":[0,19]}]},{"pos":[115738,115756],"content":"IsFamilyOrAssembly","needQuote":true,"nodes":[{"content":"IsFamilyOrAssembly","pos":[0,18]}]},{"pos":[116038,116046],"content":"IsStatic","needQuote":true,"nodes":[{"content":"IsStatic","pos":[0,8]}]},{"pos":[116297,116304],"content":"IsFinal","needQuote":true,"nodes":[{"content":"IsFinal","pos":[0,7]}]},{"pos":[116554,116563],"content":"IsVirtual","needQuote":true,"nodes":[{"content":"IsVirtual","pos":[0,9]}]},{"pos":[116821,116832],"content":"IsHideBySig","needQuote":true,"nodes":[{"content":"IsHideBySig","pos":[0,11]}]},{"pos":[117095,117105],"content":"IsAbstract","needQuote":true,"nodes":[{"content":"IsAbstract","pos":[0,10]}]},{"pos":[117368,117381],"content":"IsSpecialName","needQuote":true,"nodes":[{"content":"IsSpecialName","pos":[0,13]}]},{"pos":[117653,117666],"content":"IsConstructor","needQuote":true,"nodes":[{"content":"IsConstructor","pos":[0,13]}]},{"pos":[117975,117995],"content":"_MethodBase.IsPublic","needQuote":true,"nodes":[{"content":"_MethodBase.IsPublic","pos":[0,20]}]},{"pos":[118533,118554],"content":"_MethodBase.IsPrivate","needQuote":true,"nodes":[{"content":"_MethodBase.IsPrivate","pos":[0,21]}]},{"pos":[119096,119116],"content":"_MethodBase.IsFamily","needQuote":true,"nodes":[{"content":"_MethodBase.IsFamily","pos":[0,20]}]},{"pos":[119655,119677],"content":"_MethodBase.IsAssembly","needQuote":true,"nodes":[{"content":"_MethodBase.IsAssembly","pos":[0,22]}]},{"pos":[120235,120266],"content":"_MethodBase.IsFamilyAndAssembly","needQuote":true,"nodes":[{"content":"_MethodBase.IsFamilyAndAssembly","pos":[0,31]}]},{"pos":[120868,120898],"content":"_MethodBase.IsFamilyOrAssembly","needQuote":true,"nodes":[{"content":"_MethodBase.IsFamilyOrAssembly","pos":[0,30]}]},{"pos":[121485,121505],"content":"_MethodBase.IsStatic","needQuote":true,"nodes":[{"content":"_MethodBase.IsStatic","pos":[0,20]}]},{"pos":[122041,122060],"content":"_MethodBase.IsFinal","needQuote":true,"nodes":[{"content":"_MethodBase.IsFinal","pos":[0,19]}]},{"pos":[122593,122614],"content":"_MethodBase.IsVirtual","needQuote":true,"nodes":[{"content":"_MethodBase.IsVirtual","pos":[0,21]}]},{"pos":[123159,123182],"content":"_MethodBase.IsHideBySig","needQuote":true,"nodes":[{"content":"_MethodBase.IsHideBySig","pos":[0,23]}]},{"pos":[123736,123758],"content":"_MethodBase.IsAbstract","needQuote":true,"nodes":[{"content":"_MethodBase.IsAbstract","pos":[0,22]}]},{"pos":[124310,124335],"content":"_MethodBase.IsSpecialName","needQuote":true,"nodes":[{"content":"_MethodBase.IsSpecialName","pos":[0,25]}]},{"pos":[124902,124927],"content":"_MethodBase.IsConstructor","needQuote":true,"nodes":[{"content":"_MethodBase.IsConstructor","pos":[0,25]}]},{"pos":[125473,125501],"content":"GetCustomAttributes(Boolean)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Boolean)","pos":[0,28]}]},{"pos":[125678,125697],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[125792,125793],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[125844,125851],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[125912,125913],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[126025,126044],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[126139,126140],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[126191,126198],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[126259,126260],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[126563,126597],"content":"GetCustomAttributes(Type, Boolean)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Type, Boolean)","pos":[0,34]}]},{"pos":[126799,126818],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[126913,126914],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[126962,126966],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[127025,127026]},{"pos":[127082,127089],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[127150,127151],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[127275,127294],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[127389,127390],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[127438,127442],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[127501,127502]},{"pos":[127558,127565],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[127626,127627],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[127938,127962],"content":"IsDefined(Type, Boolean)","needQuote":true,"nodes":[{"content":"IsDefined(Type, Boolean)","pos":[0,24]}]},{"pos":[128144,128153],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[128238,128239],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[128287,128291],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[128350,128351]},{"pos":[128407,128414],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[128475,128476],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[128590,128599],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[128684,128685],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[128733,128737],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[128796,128797]},{"pos":[128853,128860],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[128921,128922],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[129199,129224],"content":"GetCustomAttributesData()","needQuote":true,"nodes":[{"content":"GetCustomAttributesData()","pos":[0,25]}]},{"pos":[129379,129402],"content":"GetCustomAttributesData","needQuote":true,"nodes":[{"content":"GetCustomAttributesData","pos":[0,23]}]},{"pos":[129501,129502],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[129529,129530],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[129630,129653],"content":"GetCustomAttributesData","needQuote":true,"nodes":[{"content":"GetCustomAttributesData","pos":[0,23]}]},{"pos":[129752,129753],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[129780,129781],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[130072,130093],"content":"_MemberInfo.GetType()","needQuote":true,"nodes":[{"content":"_MemberInfo.GetType()","pos":[0,21]}]},{"pos":[130366,130385],"content":"_MemberInfo.GetType","needQuote":true,"nodes":[{"content":"_MemberInfo.GetType","pos":[0,19]}]},{"pos":[130511,130512],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[130539,130540],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[130667,130717],"content":"System.Runtime.InteropServices._MemberInfo.GetType","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._MemberInfo.GetType","pos":[0,50]}]},{"pos":[130843,130844],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[130871,130872],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[131294,131330],"content":"_MemberInfo.GetTypeInfoCount(UInt32)","needQuote":true,"nodes":[{"content":"_MemberInfo.GetTypeInfoCount(UInt32)","pos":[0,36]}]},{"pos":[131665,131693],"content":"_MemberInfo.GetTypeInfoCount","needQuote":true,"nodes":[{"content":"_MemberInfo.GetTypeInfoCount","pos":[0,28]}]},{"pos":[131828,131829],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[131879,131885],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[131945,131946],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[132098,132157],"content":"System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount","pos":[0,59]}]},{"pos":[132292,132293],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[132343,132349],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[132409,132410],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[132909,132956],"content":"_MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)","needQuote":true,"nodes":[{"content":"_MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)","pos":[0,47]}]},{"pos":[133349,133372],"content":"_MemberInfo.GetTypeInfo","needQuote":true,"nodes":[{"content":"_MemberInfo.GetTypeInfo","pos":[0,23]}]},{"pos":[133502,133503],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[133553,133559],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[133620,133621]},{"pos":[133676,133682],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[133743,133744]},{"pos":[133799,133805],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[133865,133866],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[134040,134094],"content":"System.Runtime.InteropServices._MemberInfo.GetTypeInfo","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._MemberInfo.GetTypeInfo","pos":[0,54]}]},{"pos":[134224,134225],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[134275,134281],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[134342,134343]},{"pos":[134398,134404],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[134465,134466]},{"pos":[134521,134527],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[134587,134588],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[135160,135223],"content":"_MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)","needQuote":true,"nodes":[{"content":"_MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)","pos":[0,63]}]},{"pos":[135691,135716],"content":"_MemberInfo.GetIDsOfNames","needQuote":true,"nodes":[{"content":"_MemberInfo.GetIDsOfNames","pos":[0,25]}]},{"pos":[135848,135849],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[135897,135901],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[135960,135961]},{"pos":[136016,136022],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[136083,136084]},{"pos":[136139,136145],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[136206,136207]},{"pos":[136262,136268],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[136329,136330]},{"pos":[136385,136391],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[136451,136452],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[136655,136711],"content":"System.Runtime.InteropServices._MemberInfo.GetIDsOfNames","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._MemberInfo.GetIDsOfNames","pos":[0,56]}]},{"pos":[136843,136844],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[136892,136896],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[136955,136956]},{"pos":[137011,137017],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[137078,137079]},{"pos":[137134,137140],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[137201,137202]},{"pos":[137257,137263],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[137324,137325]},{"pos":[137380,137386],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[137446,137447],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[138114,138193],"content":"_MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)","needQuote":true,"nodes":[{"content":"_MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)","pos":[0,79]}]},{"pos":[138748,138766],"content":"_MemberInfo.Invoke","needQuote":true,"nodes":[{"content":"_MemberInfo.Invoke","pos":[0,18]}]},{"pos":[138891,138892],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[138942,138948],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[139009,139010]},{"pos":[139063,139067],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[139126,139127]},{"pos":[139182,139188],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[139249,139250]},{"pos":[139304,139309],"content":"Int16","needQuote":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"content":",","pos":[139369,139370]},{"pos":[139425,139431],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[139492,139493]},{"pos":[139548,139554],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[139615,139616]},{"pos":[139671,139677],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[139738,139739]},{"pos":[139794,139800],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[139860,139861],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[140098,140147],"content":"System.Runtime.InteropServices._MemberInfo.Invoke","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._MemberInfo.Invoke","pos":[0,49]}]},{"pos":[140272,140273],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[140323,140329],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[140390,140391]},{"pos":[140444,140448],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[140507,140508]},{"pos":[140563,140569],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[140630,140631]},{"pos":[140685,140690],"content":"Int16","needQuote":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"content":",","pos":[140750,140751]},{"pos":[140806,140812],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[140873,140874]},{"pos":[140929,140935],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[140996,140997]},{"pos":[141052,141058],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[141119,141120]},{"pos":[141175,141181],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[141241,141242],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[141828,141841],"content":"ReflectedType","needQuote":true,"nodes":[{"content":"ReflectedType","pos":[0,13]}]},{"pos":[142116,142132],"content":"CustomAttributes","needQuote":true,"nodes":[{"content":"CustomAttributes","pos":[0,16]}]},{"pos":[142413,142426],"content":"MetadataToken","needQuote":true,"nodes":[{"content":"MetadataToken","pos":[0,13]}]},{"pos":[142691,142697],"content":"Module","needQuote":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[142939,142961],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[143109,143115],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[143182,143183],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[143233,143239],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[143300,143301]},{"pos":[143356,143362],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[143422,143423],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[143520,143526],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[143593,143594],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[143644,143650],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[143711,143712]},{"pos":[143767,143773],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[143833,143834],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[144079,144110],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[144276,144291],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[144367,144368],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[144418,144424],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[144485,144486]},{"pos":[144541,144547],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[144607,144608],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[144714,144729],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[144805,144806],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[144856,144862],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[144923,144924]},{"pos":[144979,144985],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[145045,145046],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[145272,145281],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[145374,145381],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[145449,145450],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[145477,145478],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[145547,145554],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[145622,145623],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[145650,145651],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[145826,145843],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[145952,145967],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[146043,146044],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[146071,146072],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[146149,146164],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[146240,146241],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[146268,146269],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[146621,146639],"content":"HasMetadataToken()","needQuote":true,"nodes":[{"content":"HasMetadataToken()","pos":[0,18]}]},{"pos":[146800,146816],"content":"HasMetadataToken","needQuote":true,"nodes":[{"content":"HasMetadataToken","pos":[0,16]}]},{"pos":[146897,146898],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[146925,146926],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[147029,147045],"content":"HasMetadataToken","needQuote":true,"nodes":[{"content":"HasMetadataToken","pos":[0,16]}]},{"pos":[147126,147127],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[147154,147155],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[147578,147596],"content":"GetMetadataToken()","needQuote":true,"nodes":[{"content":"GetMetadataToken()","pos":[0,18]}]},{"pos":[147757,147773],"content":"GetMetadataToken","needQuote":true,"nodes":[{"content":"GetMetadataToken","pos":[0,16]}]},{"pos":[147854,147855],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[147882,147883],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[147986,148002],"content":"GetMetadataToken","needQuote":true,"nodes":[{"content":"GetMetadataToken","pos":[0,16]}]},{"pos":[148083,148084],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[148111,148112],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[148537,148556],"content":"GetBaseDefinition()","needQuote":true,"nodes":[{"content":"GetBaseDefinition()","pos":[0,19]}]},{"pos":[148719,148736],"content":"GetBaseDefinition","needQuote":true,"nodes":[{"content":"GetBaseDefinition","pos":[0,17]}]},{"pos":[148818,148819],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[148846,148847],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[148951,148968],"content":"GetBaseDefinition","needQuote":true,"nodes":[{"content":"GetBaseDefinition","pos":[0,17]}]},{"pos":[149050,149051],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[149078,149079],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[149548,149572],"content":"GetCustomAttribute(Type)","needQuote":true,"nodes":[{"content":"GetCustomAttribute(Type)","pos":[0,24]}]},{"pos":[149771,149789],"content":"GetCustomAttribute","needQuote":true,"nodes":[{"content":"GetCustomAttribute","pos":[0,18]}]},{"pos":[149877,149878],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[149926,149930],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[149988,149989],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[150112,150130],"content":"GetCustomAttribute","needQuote":true,"nodes":[{"content":"GetCustomAttribute","pos":[0,18]}]},{"pos":[150218,150219],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[150267,150271],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[150329,150330],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[150857,150890],"content":"GetCustomAttribute(Type, Boolean)","needQuote":true,"nodes":[{"content":"GetCustomAttribute(Type, Boolean)","pos":[0,33]}]},{"pos":[151120,151138],"content":"GetCustomAttribute","needQuote":true,"nodes":[{"content":"GetCustomAttribute","pos":[0,18]}]},{"pos":[151226,151227],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[151275,151279],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[151338,151339]},{"pos":[151395,151402],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[151463,151464],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[151602,151620],"content":"GetCustomAttribute","needQuote":true,"nodes":[{"content":"GetCustomAttribute","pos":[0,18]}]},{"pos":[151708,151709],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[151757,151761],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[151820,151821]},{"pos":[151877,151884],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[151945,151946],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[152448,152471],"content":"GetCustomAttribute<T>()","needQuote":true,"nodes":[{"content":"GetCustomAttribute&lt;T&gt;()","pos":[0,23],"source":"GetCustomAttribute<T>()"}]},{"pos":[152776,152797],"content":"GetCustomAttribute<T>","needQuote":true,"nodes":[{"content":"GetCustomAttribute&lt;T&gt;","pos":[0,21],"source":"GetCustomAttribute<T>"}]},{"pos":[152888,152889],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[152916,152917],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[153030,153054],"content":"GetCustomAttribute(Of T)","needQuote":true,"nodes":[{"content":"GetCustomAttribute(Of T)","pos":[0,24]}]},{"pos":[153148,153149],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[153176,153177],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[153748,153778],"content":"GetCustomAttribute<T>(Boolean)","needQuote":true,"nodes":[{"content":"GetCustomAttribute&lt;T&gt;(Boolean)","pos":[0,30],"source":"GetCustomAttribute<T>(Boolean)"}]},{"pos":[154134,154155],"content":"GetCustomAttribute<T>","needQuote":true,"nodes":[{"content":"GetCustomAttribute&lt;T&gt;","pos":[0,21],"source":"GetCustomAttribute<T>"}]},{"pos":[154246,154247],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[154298,154305],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[154366,154367],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[154496,154520],"content":"GetCustomAttribute(Of T)","needQuote":true,"nodes":[{"content":"GetCustomAttribute(Of T)","pos":[0,24]}]},{"pos":[154614,154615],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[154666,154673],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[154734,154735],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[155300,155321],"content":"GetCustomAttributes()","needQuote":true,"nodes":[{"content":"GetCustomAttributes()","pos":[0,21]}]},{"pos":[155498,155517],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[155606,155607],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[155634,155635],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[155746,155765],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[155854,155855],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[155882,155883],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[156374,156402],"content":"GetCustomAttributes(Boolean)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Boolean)","pos":[0,28]}]},{"pos":[156609,156628],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[156717,156718],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[156769,156776],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[156837,156838],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[156965,156984],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[157073,157074],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[157125,157132],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[157193,157194],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[157701,157726],"content":"GetCustomAttributes(Type)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Type)","pos":[0,25]}]},{"pos":[157927,157946],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[158035,158036],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[158084,158088],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[158146,158147],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[158271,158290],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[158379,158380],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[158428,158432],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[158490,158491],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[159022,159056],"content":"GetCustomAttributes(Type, Boolean)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Type, Boolean)","pos":[0,34]}]},{"pos":[159288,159307],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[159396,159397],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[159445,159449],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[159508,159509]},{"pos":[159565,159572],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[159633,159634],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[159773,159792],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[159881,159882],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[159930,159934],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[159993,159994]},{"pos":[160050,160057],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[160118,160119],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[160625,160649],"content":"GetCustomAttributes<T>()","needQuote":true,"nodes":[{"content":"GetCustomAttributes&lt;T&gt;()","pos":[0,24],"source":"GetCustomAttributes<T>()"}]},{"pos":[160958,160980],"content":"GetCustomAttributes<T>","needQuote":true,"nodes":[{"content":"GetCustomAttributes&lt;T&gt;","pos":[0,22],"source":"GetCustomAttributes<T>"}]},{"pos":[161072,161073],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[161100,161101],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[161215,161240],"content":"GetCustomAttributes(Of T)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Of T)","pos":[0,25]}]},{"pos":[161335,161336],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[161363,161364],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[161940,161971],"content":"GetCustomAttributes<T>(Boolean)","needQuote":true,"nodes":[{"content":"GetCustomAttributes&lt;T&gt;(Boolean)","pos":[0,31],"source":"GetCustomAttributes<T>(Boolean)"}]},{"pos":[162331,162353],"content":"GetCustomAttributes<T>","needQuote":true,"nodes":[{"content":"GetCustomAttributes&lt;T&gt;","pos":[0,22],"source":"GetCustomAttributes<T>"}]},{"pos":[162445,162446],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[162497,162504],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[162565,162566],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[162696,162721],"content":"GetCustomAttributes(Of T)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Of T)","pos":[0,25]}]},{"pos":[162816,162817],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[162868,162875],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[162936,162937],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[163510,163525],"content":"IsDefined(Type)","needQuote":true,"nodes":[{"content":"IsDefined(Type)","pos":[0,15]}]},{"pos":[163706,163715],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[163794,163795],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[163843,163847],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[163905,163906],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[164020,164029],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[164108,164109],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[164157,164161],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[164219,164220],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[164711,164735],"content":"IsDefined(Type, Boolean)","needQuote":true,"nodes":[{"content":"IsDefined(Type, Boolean)","pos":[0,24]}]},{"pos":[164947,164956],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[165035,165036],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[165084,165088],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[165147,165148]},{"pos":[165204,165211],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[165272,165273],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[165402,165411],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[165490,165491],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[165539,165543],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[165602,165603]},{"pos":[165659,165666],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[165727,165728],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[166224,166250],"content":"GetRuntimeBaseDefinition()","needQuote":true,"nodes":[{"content":"GetRuntimeBaseDefinition()","pos":[0,26]}]},{"pos":[166441,166465],"content":"GetRuntimeBaseDefinition","needQuote":true,"nodes":[{"content":"GetRuntimeBaseDefinition","pos":[0,24]}]},{"pos":[166561,166562],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[166589,166590],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[166708,166732],"content":"GetRuntimeBaseDefinition","needQuote":true,"nodes":[{"content":"GetRuntimeBaseDefinition","pos":[0,24]}]},{"pos":[166828,166829],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[166856,166857],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[167103,167109],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[167227,167244],"content":"System.Reflection","needQuote":true,"nodes":[{"content":"System.Reflection","pos":[0,17]}]},{"pos":[167408,167438],"content":"System.Runtime.InteropServices","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices","pos":[0,30]}]},{"pos":[167695,167723],"content":"HasMetadataToken(MemberInfo)","needQuote":true,"nodes":[{"content":"HasMetadataToken(MemberInfo)","pos":[0,28]}]},{"pos":[167942,167958],"content":"HasMetadataToken","needQuote":true,"nodes":[{"content":"HasMetadataToken","pos":[0,16]}]},{"pos":[168039,168040],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[168105,168115],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[168190,168191],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[168324,168340],"content":"HasMetadataToken","needQuote":true,"nodes":[{"content":"HasMetadataToken","pos":[0,16]}]},{"pos":[168421,168422],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[168487,168497],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[168572,168573],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[168859,168879],"content":"MemberInfoExtensions","needQuote":true,"nodes":[{"content":"MemberInfoExtensions","pos":[0,20]}]},{"pos":[169142,169170],"content":"GetMetadataToken(MemberInfo)","needQuote":true,"nodes":[{"content":"GetMetadataToken(MemberInfo)","pos":[0,28]}]},{"pos":[169389,169405],"content":"GetMetadataToken","needQuote":true,"nodes":[{"content":"GetMetadataToken","pos":[0,16]}]},{"pos":[169486,169487],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[169552,169562],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[169637,169638],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[169771,169787],"content":"GetMetadataToken","needQuote":true,"nodes":[{"content":"GetMetadataToken","pos":[0,16]}]},{"pos":[169868,169869],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[169934,169944],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[170019,170020],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[170325,170354],"content":"GetBaseDefinition(MethodInfo)","needQuote":true,"nodes":[{"content":"GetBaseDefinition(MethodInfo)","pos":[0,29]}]},{"pos":[170575,170592],"content":"GetBaseDefinition","needQuote":true,"nodes":[{"content":"GetBaseDefinition","pos":[0,17]}]},{"pos":[170674,170675],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[170740,170750],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[170825,170826],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[170960,170977],"content":"GetBaseDefinition","needQuote":true,"nodes":[{"content":"GetBaseDefinition","pos":[0,17]}]},{"pos":[171059,171060],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[171125,171135],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[171210,171211],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[171499,171519],"content":"MethodInfoExtensions","needQuote":true,"nodes":[{"content":"MethodInfoExtensions","pos":[0,20]}]},{"pos":[171801,171837],"content":"GetCustomAttribute(MemberInfo, Type)","needQuote":true,"nodes":[{"content":"GetCustomAttribute(MemberInfo, Type)","pos":[0,36]}]},{"pos":[172095,172113],"content":"GetCustomAttribute","needQuote":true,"nodes":[{"content":"GetCustomAttribute","pos":[0,18]}]},{"pos":[172201,172202],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[172267,172277],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[172353,172354]},{"pos":[172407,172411],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[172469,172470],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[172622,172640],"content":"GetCustomAttribute","needQuote":true,"nodes":[{"content":"GetCustomAttribute","pos":[0,18]}]},{"pos":[172728,172729],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[172794,172804],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[172880,172881]},{"pos":[172934,172938],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[172996,172997],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[173320,173345],"content":"CustomAttributeExtensions","needQuote":true,"nodes":[{"content":"CustomAttributeExtensions","pos":[0,25]}]},{"pos":[173657,173702],"content":"GetCustomAttribute(MemberInfo, Type, Boolean)","needQuote":true,"nodes":[{"content":"GetCustomAttribute(MemberInfo, Type, Boolean)","pos":[0,45]}]},{"pos":[173991,174009],"content":"GetCustomAttribute","needQuote":true,"nodes":[{"content":"GetCustomAttribute","pos":[0,18]}]},{"pos":[174097,174098],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[174163,174173],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[174249,174250]},{"pos":[174303,174307],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[174366,174367]},{"pos":[174423,174430],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[174491,174492],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[174659,174677],"content":"GetCustomAttribute","needQuote":true,"nodes":[{"content":"GetCustomAttribute","pos":[0,18]}]},{"pos":[174765,174766],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[174831,174841],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[174917,174918]},{"pos":[174971,174975],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[175034,175035]},{"pos":[175091,175098],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[175159,175160],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[175530,175563],"content":"GetCustomAttribute<T>(MemberInfo)","needQuote":true,"nodes":[{"content":"GetCustomAttribute&lt;T&gt;(MemberInfo)","pos":[0,33],"source":"GetCustomAttribute<T>(MemberInfo)"}]},{"pos":[175964,175985],"content":"GetCustomAttribute<T>","needQuote":true,"nodes":[{"content":"GetCustomAttribute&lt;T&gt;","pos":[0,21],"source":"GetCustomAttribute<T>"}]},{"pos":[176076,176077],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[176142,176152],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[176227,176228],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[176371,176395],"content":"GetCustomAttribute(Of T)","needQuote":true,"nodes":[{"content":"GetCustomAttribute(Of T)","pos":[0,24]}]},{"pos":[176489,176490],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[176555,176565],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[176640,176641],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[177072,177114],"content":"GetCustomAttribute<T>(MemberInfo, Boolean)","needQuote":true,"nodes":[{"content":"GetCustomAttribute&lt;T&gt;(MemberInfo, Boolean)","pos":[0,42],"source":"GetCustomAttribute<T>(MemberInfo, Boolean)"}]},{"pos":[177571,177592],"content":"GetCustomAttribute<T>","needQuote":true,"nodes":[{"content":"GetCustomAttribute&lt;T&gt;","pos":[0,21],"source":"GetCustomAttribute<T>"}]},{"pos":[177683,177684],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[177749,177759],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[177835,177836]},{"pos":[177892,177899],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[177960,177961],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[178119,178143],"content":"GetCustomAttribute(Of T)","needQuote":true,"nodes":[{"content":"GetCustomAttribute(Of T)","pos":[0,24]}]},{"pos":[178237,178238],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[178303,178313],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[178389,178390]},{"pos":[178446,178453],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[178514,178515],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[178962,178993],"content":"GetCustomAttributes(MemberInfo)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(MemberInfo)","pos":[0,31]}]},{"pos":[179228,179247],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[179336,179337],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[179402,179412],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[179487,179488],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[179629,179648],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[179737,179738],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[179803,179813],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[179888,179889],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[180232,180272],"content":"GetCustomAttributes(MemberInfo, Boolean)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(MemberInfo, Boolean)","pos":[0,40]}]},{"pos":[180538,180557],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[180646,180647],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[180712,180722],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[180798,180799]},{"pos":[180855,180862],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[180923,180924],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[181080,181099],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[181188,181189],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[181254,181264],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[181340,181341]},{"pos":[181397,181404],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[181465,181466],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[181830,181867],"content":"GetCustomAttributes(MemberInfo, Type)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(MemberInfo, Type)","pos":[0,37]}]},{"pos":[182127,182146],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[182235,182236],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[182301,182311],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[182387,182388]},{"pos":[182441,182445],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[182503,182504],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[182657,182676],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[182765,182766],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[182831,182841],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[182917,182918]},{"pos":[182971,182975],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[183033,183034],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[183407,183453],"content":"GetCustomAttributes(MemberInfo, Type, Boolean)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(MemberInfo, Type, Boolean)","pos":[0,46]}]},{"pos":[183744,183763],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[183852,183853],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[183918,183928],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[184004,184005]},{"pos":[184058,184062],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[184121,184122]},{"pos":[184178,184185],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[184246,184247],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[184415,184434],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[184523,184524],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[184589,184599],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[184675,184676]},{"pos":[184729,184733],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[184792,184793]},{"pos":[184849,184856],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[184917,184918],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[185291,185325],"content":"GetCustomAttributes<T>(MemberInfo)","needQuote":true,"nodes":[{"content":"GetCustomAttributes&lt;T&gt;(MemberInfo)","pos":[0,34],"source":"GetCustomAttributes<T>(MemberInfo)"}]},{"pos":[185730,185752],"content":"GetCustomAttributes<T>","needQuote":true,"nodes":[{"content":"GetCustomAttributes&lt;T&gt;","pos":[0,22],"source":"GetCustomAttributes<T>"}]},{"pos":[185844,185845],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[185910,185920],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[185995,185996],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[186140,186165],"content":"GetCustomAttributes(Of T)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Of T)","pos":[0,25]}]},{"pos":[186260,186261],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[186326,186336],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[186411,186412],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[186847,186890],"content":"GetCustomAttributes<T>(MemberInfo, Boolean)","needQuote":true,"nodes":[{"content":"GetCustomAttributes&lt;T&gt;(MemberInfo, Boolean)","pos":[0,43],"source":"GetCustomAttributes<T>(MemberInfo, Boolean)"}]},{"pos":[187351,187373],"content":"GetCustomAttributes<T>","needQuote":true,"nodes":[{"content":"GetCustomAttributes&lt;T&gt;","pos":[0,22],"source":"GetCustomAttributes<T>"}]},{"pos":[187465,187466],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[187531,187541],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[187617,187618]},{"pos":[187674,187681],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[187742,187743],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[187902,187927],"content":"GetCustomAttributes(Of T)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Of T)","pos":[0,25]}]},{"pos":[188022,188023],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[188088,188098],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[188174,188175]},{"pos":[188231,188238],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[188299,188300],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[188752,188779],"content":"IsDefined(MemberInfo, Type)","needQuote":true,"nodes":[{"content":"IsDefined(MemberInfo, Type)","pos":[0,27]}]},{"pos":[189019,189028],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[189107,189108],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[189173,189183],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[189259,189260]},{"pos":[189313,189317],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[189375,189376],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[189519,189528],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[189607,189608],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[189673,189683],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[189759,189760]},{"pos":[189813,189817],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[189875,189876],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[190219,190255],"content":"IsDefined(MemberInfo, Type, Boolean)","needQuote":true,"nodes":[{"content":"IsDefined(MemberInfo, Type, Boolean)","pos":[0,36]}]},{"pos":[190526,190535],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[190614,190615],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[190680,190690],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[190766,190767]},{"pos":[190820,190824],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[190883,190884]},{"pos":[190940,190947],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[191008,191009],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[191167,191176],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[191255,191256],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[191321,191331],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[191407,191408]},{"pos":[191461,191465],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[191524,191525]},{"pos":[191581,191588],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[191649,191650],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[192007,192043],"content":"GetRuntimeBaseDefinition(MethodInfo)","needQuote":true,"nodes":[{"content":"GetRuntimeBaseDefinition(MethodInfo)","pos":[0,36]}]},{"pos":[192292,192316],"content":"GetRuntimeBaseDefinition","needQuote":true,"nodes":[{"content":"GetRuntimeBaseDefinition","pos":[0,24]}]},{"pos":[192412,192413],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[192478,192488],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[192563,192564],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[192712,192736],"content":"GetRuntimeBaseDefinition","needQuote":true,"nodes":[{"content":"GetRuntimeBaseDefinition","pos":[0,24]}]},{"pos":[192832,192833],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[192898,192908],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[192983,192984],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[193307,193334],"content":"RuntimeReflectionExtensions","needQuote":true,"nodes":[{"content":"RuntimeReflectionExtensions","pos":[0,27]}]},{"pos":[193564,193570],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[193747,193763],"content":"MethodAttributes","needQuote":true,"nodes":[{"content":"MethodAttributes","pos":[0,16]}]},{"pos":[193994,194012],"content":"CallingConventions","needQuote":true,"nodes":[{"content":"CallingConventions","pos":[0,18]}]},{"pos":[194213,194217],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[194319,194325],"content":"Type[]","needQuote":true,"nodes":[{"content":"Type[]","pos":[0,6]}]},{"pos":[194445,194449],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[194487,194489]},{"pos":[194552,194556],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[194593,194595],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[194750,194756],"content":"Module","needQuote":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[194924,194931],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[195127,195137],"content":"Attributes","needQuote":true,"nodes":[{"content":"Attributes","pos":[0,10]}]},{"pos":[195404,195421],"content":"CallingConvention","needQuote":true,"nodes":[{"content":"CallingConvention","pos":[0,17]}]},{"pos":[195705,195718],"content":"DeclaringType","needQuote":true,"nodes":[{"content":"DeclaringType","pos":[0,13]}]},{"pos":[195981,195985],"content":"Name","needQuote":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[196231,196246],"content":"ReturnParameter","needQuote":true,"nodes":[{"content":"ReturnParameter","pos":[0,15]}]},{"pos":[196502,196515],"content":"ParameterInfo","needQuote":true,"nodes":[{"content":"ParameterInfo","pos":[0,13]}]},{"pos":[196750,196760],"content":"ReturnType","needQuote":true,"nodes":[{"content":"ReturnType","pos":[0,10]}]},{"pos":[197036,197056],"content":"CreateDelegate(Type)","needQuote":true,"nodes":[{"content":"CreateDelegate(Type)","pos":[0,20]}]},{"pos":[197217,197231],"content":"CreateDelegate","needQuote":true,"nodes":[{"content":"CreateDelegate","pos":[0,14]}]},{"pos":[197321,197322],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[197370,197374],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[197432,197433],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[197537,197551],"content":"CreateDelegate","needQuote":true,"nodes":[{"content":"CreateDelegate","pos":[0,14]}]},{"pos":[197641,197642],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[197690,197694],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[197752,197753],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[197958,197966],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[198195,198223],"content":"CreateDelegate(Type, Object)","needQuote":true,"nodes":[{"content":"CreateDelegate(Type, Object)","pos":[0,28]}]},{"pos":[198413,198427],"content":"CreateDelegate","needQuote":true,"nodes":[{"content":"CreateDelegate","pos":[0,14]}]},{"pos":[198517,198518],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[198566,198570],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[198629,198630]},{"pos":[198685,198691],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[198751,198752],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[198870,198884],"content":"CreateDelegate","needQuote":true,"nodes":[{"content":"CreateDelegate","pos":[0,14]}]},{"pos":[198974,198975],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[199023,199027],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[199086,199087]},{"pos":[199142,199148],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[199208,199209],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[199471,199482],"content":"ILGenerator","needQuote":true,"nodes":[{"content":"ILGenerator","pos":[0,11]}]},{"pos":[199673,199678],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[199871,199886],"content":"GetParameters()","needQuote":true,"nodes":[{"content":"GetParameters()","pos":[0,15]}]},{"pos":[200021,200034],"content":"GetParameters","needQuote":true,"nodes":[{"content":"GetParameters","pos":[0,13]}]},{"pos":[200102,200103],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[200130,200131],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[200221,200234],"content":"GetParameters","needQuote":true,"nodes":[{"content":"GetParameters","pos":[0,13]}]},{"pos":[200302,200303],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[200330,200331],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[200498,200513],"content":"ParameterInfo[]","needQuote":true,"nodes":[{"content":"ParameterInfo[]","pos":[0,15]}]},{"pos":[200702,200715],"content":"ParameterInfo","needQuote":true,"nodes":[{"content":"ParameterInfo","pos":[0,13]}]},{"content":"[]","pos":[200773,200775]},{"pos":[200858,200871],"content":"ParameterInfo","needQuote":true,"nodes":[{"content":"ParameterInfo","pos":[0,13]}]},{"pos":[200928,200930],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[201096,201106],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[201201,201209],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[201278,201279],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[201306,201307],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[201377,201385],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[201454,201455],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[201482,201483],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[201701,201726],"content":"MethodImplementationFlags","needQuote":true,"nodes":[{"content":"MethodImplementationFlags","pos":[0,25]}]},{"pos":[202019,202039],"content":"MethodImplAttributes","needQuote":true,"nodes":[{"content":"MethodImplAttributes","pos":[0,20]}]},{"pos":[202259,202276],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[202452,202473],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[202678,202699],"content":"NotSupportedException","needQuote":true,"nodes":[{"content":"NotSupportedException","pos":[0,21]}]},{"pos":[202908,202933],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]}],"content":"items:\n- uid: System.Reflection.Emit.DynamicMethod\n  commentId: T:System.Reflection.Emit.DynamicMethod\n  id: DynamicMethod\n  parent: System.Reflection.Emit\n  children:\n  - System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Reflection.Module,System.Boolean)\n  - System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type,System.Boolean)\n  - System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[])\n  - System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Boolean)\n  - System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Reflection.Module)\n  - System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Reflection.Module,System.Boolean)\n  - System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Type)\n  - System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Type,System.Boolean)\n  - System.Reflection.Emit.DynamicMethod.Attributes\n  - System.Reflection.Emit.DynamicMethod.CallingConvention\n  - System.Reflection.Emit.DynamicMethod.CreateDelegate(System.Type)\n  - System.Reflection.Emit.DynamicMethod.CreateDelegate(System.Type,System.Object)\n  - System.Reflection.Emit.DynamicMethod.DeclaringType\n  - System.Reflection.Emit.DynamicMethod.GetILGenerator\n  - System.Reflection.Emit.DynamicMethod.GetILGenerator(System.Int32)\n  - System.Reflection.Emit.DynamicMethod.GetParameters\n  - System.Reflection.Emit.DynamicMethod.InitLocals\n  - System.Reflection.Emit.DynamicMethod.MethodImplementationFlags\n  - System.Reflection.Emit.DynamicMethod.Name\n  - System.Reflection.Emit.DynamicMethod.ReturnParameter\n  - System.Reflection.Emit.DynamicMethod.ReturnType\n  - System.Reflection.Emit.DynamicMethod.ToString\n  langs:\n  - csharp\n  - vb\n  name: DynamicMethod\n  fullName: System.Reflection.Emit.DynamicMethod\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DynamicMethod\n    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n    startLine: 20\n  assemblies:\n  - System.Reflection.Emit.Lightweight\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Defines and represents a dynamic method that can be compiled, executed, and discarded. Discarded methods are available for garbage collection.</p>\\n\"\n  syntax:\n    content: >-\n      [ComVisible(true)]\n\n      public sealed class DynamicMethod : MethodInfo, ICustomAttributeProvider, _MemberInfo, _MethodBase, _MethodInfo\n    content.vb: >-\n      <ComVisible(True)>\n\n      Public NotInheritable Class DynamicMethod\n          Inherits MethodInfo\n          Implements ICustomAttributeProvider, _MemberInfo, _MethodBase, _MethodInfo\n  inheritance:\n  - System.Object\n  - System.Reflection.MemberInfo\n  - System.Reflection.MethodBase\n  - System.Reflection.MethodInfo\n  implements:\n  - System.Reflection.ICustomAttributeProvider\n  - System.Runtime.InteropServices._MemberInfo\n  - System.Runtime.InteropServices._MethodBase\n  - System.Runtime.InteropServices._MethodInfo\n  inheritedMembers:\n  - System.Reflection.MethodInfo.Equals(System.Object)\n  - System.Reflection.MethodInfo.GetHashCode\n  - System.Reflection.MethodInfo.GetBaseDefinition\n  - System.Reflection.MethodInfo.GetGenericArguments\n  - System.Reflection.MethodInfo.GetGenericMethodDefinition\n  - System.Reflection.MethodInfo.MakeGenericMethod(System.Type[])\n  - System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetType\n  - System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetTypeInfoCount(System.UInt32@)\n  - System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Reflection.MethodInfo.MemberType\n  - System.Reflection.MethodInfo.ReturnTypeCustomAttributes\n  - System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)\n  - System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)\n  - System.Reflection.MethodBase.GetCurrentMethod\n  - System.Reflection.MethodBase.GetMethodImplementationFlags\n  - System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  - System.Reflection.MethodBase.Invoke(System.Object,System.Object[])\n  - System.Reflection.MethodBase.GetMethodBody\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetType\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfoCount(System.UInt32@)\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Reflection.MethodBase.MethodHandle\n  - System.Reflection.MethodBase.IsGenericMethodDefinition\n  - System.Reflection.MethodBase.ContainsGenericParameters\n  - System.Reflection.MethodBase.IsGenericMethod\n  - System.Reflection.MethodBase.IsSecurityCritical\n  - System.Reflection.MethodBase.IsSecuritySafeCritical\n  - System.Reflection.MethodBase.IsSecurityTransparent\n  - System.Reflection.MethodBase.IsPublic\n  - System.Reflection.MethodBase.IsPrivate\n  - System.Reflection.MethodBase.IsFamily\n  - System.Reflection.MethodBase.IsAssembly\n  - System.Reflection.MethodBase.IsFamilyAndAssembly\n  - System.Reflection.MethodBase.IsFamilyOrAssembly\n  - System.Reflection.MethodBase.IsStatic\n  - System.Reflection.MethodBase.IsFinal\n  - System.Reflection.MethodBase.IsVirtual\n  - System.Reflection.MethodBase.IsHideBySig\n  - System.Reflection.MethodBase.IsAbstract\n  - System.Reflection.MethodBase.IsSpecialName\n  - System.Reflection.MethodBase.IsConstructor\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsPublic\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsPrivate\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamily\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsAssembly\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamilyAndAssembly\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamilyOrAssembly\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsStatic\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFinal\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsVirtual\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsHideBySig\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsAbstract\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsSpecialName\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsConstructor\n  - System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)\n  - System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)\n  - System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)\n  - System.Reflection.MemberInfo.GetCustomAttributesData\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Reflection.MemberInfo.ReflectedType\n  - System.Reflection.MemberInfo.CustomAttributes\n  - System.Reflection.MemberInfo.MetadataToken\n  - System.Reflection.MemberInfo.Module\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: DynamicMethod\n  extensionMethods:\n  - System.Reflection.MemberInfo.System.Reflection.MemberInfoExtensions.HasMetadataToken\n  - System.Reflection.MemberInfo.System.Reflection.MemberInfoExtensions.GetMetadataToken\n  - System.Reflection.MethodInfo.System.Reflection.MethodInfoExtensions.GetBaseDefinition\n  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type)\n  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type,System.Boolean)\n  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1\n  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Boolean)\n  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Boolean)\n  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type)\n  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type,System.Boolean)\n  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1\n  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Boolean)\n  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.IsDefined(System.Type)\n  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.IsDefined(System.Type,System.Boolean)\n  - System.Reflection.MethodInfo.System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition\n- uid: System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Reflection.Module,System.Boolean)\n  commentId: M:System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Reflection.Module,System.Boolean)\n  id: '#ctor(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Reflection.Module,System.Boolean)'\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  - vb\n  name: DynamicMethod(String, MethodAttributes, CallingConventions, Type, Type[], Module, Boolean)\n  fullName: System.Reflection.Emit.DynamicMethod.DynamicMethod(System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type[], System.Reflection.Module, System.Boolean)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n    startLine: 165\n  assemblies:\n  - System.Reflection.Emit.Lightweight\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Creates a dynamic method that is global to a module, specifying the method name, attributes, calling convention, return type, parameter types, module, and whether just-in-time (JIT) visibility checks should be skipped for types and members accessed by the Microsoft intermediate language (MSIL) of the dynamic method.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      [MethodImpl(MethodImplOptions.NoInlining)]\n\n      public DynamicMethod(string name, MethodAttributes attributes, CallingConventions callingConvention, Type returnType, Type[] parameterTypes, Module m, bool skipVisibility)\n    content.vb: >-\n      <SecurityCritical>\n\n      <MethodImpl(MethodImplOptions.NoInlining)>\n\n      Public Sub New(name As String, attributes As MethodAttributes, callingConvention As CallingConventions, returnType As Type, parameterTypes As Type(), m As  Module, skipVisibility As Boolean)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the dynamic method. This can be a zero-length string, but it cannot be <strong>null</strong>.</p>\\n\"\n    - id: attributes\n      type: System.Reflection.MethodAttributes\n      description: \"\\n<p>A bitwise combination of <xref href=\\\"System.Reflection.MethodAttributes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that specifies the attributes of the dynamic method. The only combination allowed is <xref href=\\\"System.Reflection.MethodAttributes.Public\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Reflection.MethodAttributes.Static\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: callingConvention\n      type: System.Reflection.CallingConventions\n      description: \"\\n<p>The calling convention for the dynamic method. Must be <xref href=\\\"System.Reflection.CallingConventions.Standard\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: returnType\n      type: System.Type\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that specifies the return type of the dynamic method, or <strong>null</strong> if the method has no return type. </p>\\n\"\n    - id: parameterTypes\n      type: System.Type[]\n      description: \"\\n<p>An array of <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects specifying the types of the parameters of the dynamic method, or <strong>null</strong> if the method has no parameters. </p>\\n\"\n    - id: m\n      type: System.Reflection.Module\n      description: \"\\n<p>A <xref href=\\\"System.Reflection.Module\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the module with which the dynamic method is to be logically associated. </p>\\n\"\n    - id: skipVisibility\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to skip JIT visibility checks on types and members accessed by the MSIL of the dynamic method; otherwise, <strong>false</strong>. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>An element of <em>parameterTypes</em> is <strong>null</strong> or <xref href=\\\"System.Void\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or-</p>\\n<p>\\n<em>m</em> is a module that provides anonymous hosting for dynamic methods.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n<p>-or-</p>\\n<p>\\n<em>m</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>attributes</em> is a combination of flags other than <xref href=\\\"System.Reflection.MethodAttributes.Public\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Reflection.MethodAttributes.Static\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or-</p>\\n<p>\\n<em>callingConvention</em> is not <xref href=\\\"System.Reflection.CallingConventions.Standard\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or-</p>\\n<p>\\n<em>returnType</em> is a type for which <xref href=\\\"System.Type.IsByRef\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> returns <strong>true</strong>. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.ReflectionPermission\n    commentId: T:System.Security.Permissions.ReflectionPermission\n  - type: System.Security.Permissions.ReflectionPermission\n    commentId: T:System.Security.Permissions.ReflectionPermission\n  attributes:\n  - type: System.Security.SecuritySafeCriticalAttribute\n    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Reflection.Emit.DynamicMethod.DynamicMethod(System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type(), System.Reflection.Module, System.Boolean)\n  name.vb: DynamicMethod(String, MethodAttributes, CallingConventions, Type, Type(), Module, Boolean)\n  nameWithType: DynamicMethod.DynamicMethod(String, MethodAttributes, CallingConventions, Type, Type[], Module, Boolean)\n  nameWithType.vb: DynamicMethod.DynamicMethod(String, MethodAttributes, CallingConventions, Type, Type(), Module, Boolean)\n- uid: System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type,System.Boolean)\n  commentId: M:System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type,System.Boolean)\n  id: '#ctor(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type,System.Boolean)'\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  - vb\n  name: DynamicMethod(String, MethodAttributes, CallingConventions, Type, Type[], Type, Boolean)\n  fullName: System.Reflection.Emit.DynamicMethod.DynamicMethod(System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type[], System.Type, System.Boolean)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n    startLine: 241\n  assemblies:\n  - System.Reflection.Emit.Lightweight\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Creates a dynamic method, specifying the method name, attributes, calling convention, return type, parameter types, the type with which the dynamic method is logically associated, and whether just-in-time (JIT) visibility checks should be skipped for types and members accessed by the Microsoft intermediate language (MSIL) of the dynamic method.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      [MethodImpl(MethodImplOptions.NoInlining)]\n\n      public DynamicMethod(string name, MethodAttributes attributes, CallingConventions callingConvention, Type returnType, Type[] parameterTypes, Type owner, bool skipVisibility)\n    content.vb: >-\n      <SecurityCritical>\n\n      <MethodImpl(MethodImplOptions.NoInlining)>\n\n      Public Sub New(name As String, attributes As MethodAttributes, callingConvention As CallingConventions, returnType As Type, parameterTypes As Type(), owner As Type, skipVisibility As Boolean)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the dynamic method. This can be a zero-length string, but it cannot be <strong>null</strong>.</p>\\n\"\n    - id: attributes\n      type: System.Reflection.MethodAttributes\n      description: \"\\n<p>A bitwise combination of <xref href=\\\"System.Reflection.MethodAttributes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that specifies the attributes of the dynamic method. The only combination allowed is <xref href=\\\"System.Reflection.MethodAttributes.Public\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Reflection.MethodAttributes.Static\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: callingConvention\n      type: System.Reflection.CallingConventions\n      description: \"\\n<p>The calling convention for the dynamic method. Must be <xref href=\\\"System.Reflection.CallingConventions.Standard\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: returnType\n      type: System.Type\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that specifies the return type of the dynamic method, or <strong>null</strong> if the method has no return type. </p>\\n\"\n    - id: parameterTypes\n      type: System.Type[]\n      description: \"\\n<p>An array of <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects specifying the types of the parameters of the dynamic method, or <strong>null</strong> if the method has no parameters. </p>\\n\"\n    - id: owner\n      type: System.Type\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with which the dynamic method is logically associated. The dynamic method has access to all members of the type.</p>\\n\"\n    - id: skipVisibility\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to skip JIT visibility checks on types and members accessed by the MSIL of the dynamic method; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>An element of <em>parameterTypes</em> is <strong>null</strong> or <xref href=\\\"System.Void\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n<p>-or-</p>\\n<p>\\n<em>owner</em> is an interface, an array, an open generic type, or a type parameter of a generic type or method.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n<p>-or-</p>\\n<p>\\n<em>owner</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>attributes</em> is a combination of flags other than <xref href=\\\"System.Reflection.MethodAttributes.Public\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Reflection.MethodAttributes.Static\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or-</p>\\n<p>\\n<em>callingConvention</em> is not <xref href=\\\"System.Reflection.CallingConventions.Standard\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or-</p>\\n<p>\\n<em>returnType</em> is a type for which <xref href=\\\"System.Type.IsByRef\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> returns <strong>true</strong>. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.ReflectionPermission\n    commentId: T:System.Security.Permissions.ReflectionPermission\n  - type: System.Security.Permissions.ReflectionPermission\n    commentId: T:System.Security.Permissions.ReflectionPermission\n  attributes:\n  - type: System.Security.SecuritySafeCriticalAttribute\n    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Reflection.Emit.DynamicMethod.DynamicMethod(System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type(), System.Type, System.Boolean)\n  name.vb: DynamicMethod(String, MethodAttributes, CallingConventions, Type, Type(), Type, Boolean)\n  nameWithType: DynamicMethod.DynamicMethod(String, MethodAttributes, CallingConventions, Type, Type[], Type, Boolean)\n  nameWithType.vb: DynamicMethod.DynamicMethod(String, MethodAttributes, CallingConventions, Type, Type(), Type, Boolean)\n- uid: System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[])\n  commentId: M:System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[])\n  id: '#ctor(System.String,System.Type,System.Type[])'\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  - vb\n  name: DynamicMethod(String, Type, Type[])\n  fullName: System.Reflection.Emit.DynamicMethod.DynamicMethod(System.String, System.Type, System.Type[])\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n    startLine: 74\n  assemblies:\n  - System.Reflection.Emit.Lightweight\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Initializes an anonymously hosted dynamic method, specifying the method name, return type, and parameter types. </p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      [MethodImpl(MethodImplOptions.NoInlining)]\n\n      public DynamicMethod(string name, Type returnType, Type[] parameterTypes)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      <MethodImpl(MethodImplOptions.NoInlining)>\n\n      Public Sub New(name As String, returnType As Type, parameterTypes As Type())\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the dynamic method. This can be a zero-length string, but it cannot be <strong>null</strong>. </p>\\n\"\n    - id: returnType\n      type: System.Type\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that specifies the return type of the dynamic method, or <strong>null</strong> if the method has no return type. </p>\\n\"\n    - id: parameterTypes\n      type: System.Type[]\n      description: \"\\n<p>An array of <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects specifying the types of the parameters of the dynamic method, or <strong>null</strong> if the method has no parameters. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>An element of <em>parameterTypes</em> is <strong>null</strong> or <xref href=\\\"System.Void\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>returnType</em> is a type for which <xref href=\\\"System.Type.IsByRef\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> returns <strong>true</strong>. </p>\\n\"\n  attributes:\n  - type: System.Security.SecuritySafeCriticalAttribute\n    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Reflection.Emit.DynamicMethod.DynamicMethod(System.String, System.Type, System.Type())\n  name.vb: DynamicMethod(String, Type, Type())\n  nameWithType: DynamicMethod.DynamicMethod(String, Type, Type[])\n  nameWithType.vb: DynamicMethod.DynamicMethod(String, Type, Type())\n- uid: System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Boolean)\n  commentId: M:System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Boolean)\n  id: '#ctor(System.String,System.Type,System.Type[],System.Boolean)'\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  - vb\n  name: DynamicMethod(String, Type, Type[], Boolean)\n  fullName: System.Reflection.Emit.DynamicMethod.DynamicMethod(System.String, System.Type, System.Type[], System.Boolean)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n    startLine: 94\n  assemblies:\n  - System.Reflection.Emit.Lightweight\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Initializes an anonymously hosted dynamic method, specifying the method name, return type, parameter types, and whether just-in-time (JIT) visibility checks should be skipped for types and members accessed by the Microsoft intermediate language (MSIL) of the dynamic method. </p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      [MethodImpl(MethodImplOptions.NoInlining)]\n\n      public DynamicMethod(string name, Type returnType, Type[] parameterTypes, bool restrictedSkipVisibility)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      <MethodImpl(MethodImplOptions.NoInlining)>\n\n      Public Sub New(name As String, returnType As Type, parameterTypes As Type(), restrictedSkipVisibility As Boolean)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the dynamic method. This can be a zero-length string, but it cannot be <strong>null</strong>. </p>\\n\"\n    - id: returnType\n      type: System.Type\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that specifies the return type of the dynamic method, or <strong>null</strong> if the method has no return type. </p>\\n\"\n    - id: parameterTypes\n      type: System.Type[]\n      description: \"\\n<p>An array of <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects specifying the types of the parameters of the dynamic method, or <strong>null</strong> if the method has no parameters. </p>\\n\"\n    - id: restrictedSkipVisibility\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to skip JIT visibility checks on types and members accessed by the MSIL of the dynamic method, with this restriction: the trust level of the assemblies that contain those types and members must be equal to or less than the trust level of the call stack that emits the dynamic method; otherwise, <strong>false</strong>. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>An element of <em>parameterTypes</em> is <strong>null</strong> or <xref href=\\\"System.Void\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>returnType</em> is a type for which <xref href=\\\"System.Type.IsByRef\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> returns <strong>true</strong>. </p>\\n\"\n  attributes:\n  - type: System.Security.SecuritySafeCriticalAttribute\n    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Reflection.Emit.DynamicMethod.DynamicMethod(System.String, System.Type, System.Type(), System.Boolean)\n  name.vb: DynamicMethod(String, Type, Type(), Boolean)\n  nameWithType: DynamicMethod.DynamicMethod(String, Type, Type[], Boolean)\n  nameWithType.vb: DynamicMethod.DynamicMethod(String, Type, Type(), Boolean)\n- uid: System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Reflection.Module)\n  commentId: M:System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Reflection.Module)\n  id: '#ctor(System.String,System.Type,System.Type[],System.Reflection.Module)'\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  - vb\n  name: DynamicMethod(String, Type, Type[], Module)\n  fullName: System.Reflection.Emit.DynamicMethod.DynamicMethod(System.String, System.Type, System.Type[], System.Reflection.Module)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n    startLine: 116\n  assemblies:\n  - System.Reflection.Emit.Lightweight\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Creates a dynamic method that is global to a module, specifying the method name, return type, parameter types, and module.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      [MethodImpl(MethodImplOptions.NoInlining)]\n\n      public DynamicMethod(string name, Type returnType, Type[] parameterTypes, Module m)\n    content.vb: >-\n      <SecurityCritical>\n\n      <MethodImpl(MethodImplOptions.NoInlining)>\n\n      Public Sub New(name As String, returnType As Type, parameterTypes As Type(), m As  Module)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the dynamic method. This can be a zero-length string, but it cannot be <strong>null</strong>. </p>\\n\"\n    - id: returnType\n      type: System.Type\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that specifies the return type of the dynamic method, or <strong>null</strong> if the method has no return type. </p>\\n\"\n    - id: parameterTypes\n      type: System.Type[]\n      description: \"\\n<p>An array of <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects specifying the types of the parameters of the dynamic method, or <strong>null</strong> if the method has no parameters. </p>\\n\"\n    - id: m\n      type: System.Reflection.Module\n      description: \"\\n<p>A <xref href=\\\"System.Reflection.Module\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the module with which the dynamic method is to be logically associated. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>An element of <em>parameterTypes</em> is <strong>null</strong> or <xref href=\\\"System.Void\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n<p>-or-</p>\\n<p>\\n<em>m</em> is a module that provides anonymous hosting for dynamic methods.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n<p>-or-</p>\\n<p>\\n<em>m</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>returnType</em> is a type for which <xref href=\\\"System.Type.IsByRef\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> returns <strong>true</strong>. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.ReflectionPermission\n    commentId: T:System.Security.Permissions.ReflectionPermission\n  attributes:\n  - type: System.Security.SecuritySafeCriticalAttribute\n    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Reflection.Emit.DynamicMethod.DynamicMethod(System.String, System.Type, System.Type(), System.Reflection.Module)\n  name.vb: DynamicMethod(String, Type, Type(), Module)\n  nameWithType: DynamicMethod.DynamicMethod(String, Type, Type[], Module)\n  nameWithType.vb: DynamicMethod.DynamicMethod(String, Type, Type(), Module)\n- uid: System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Reflection.Module,System.Boolean)\n  commentId: M:System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Reflection.Module,System.Boolean)\n  id: '#ctor(System.String,System.Type,System.Type[],System.Reflection.Module,System.Boolean)'\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  - vb\n  name: DynamicMethod(String, Type, Type[], Module, Boolean)\n  fullName: System.Reflection.Emit.DynamicMethod.DynamicMethod(System.String, System.Type, System.Type[], System.Reflection.Module, System.Boolean)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n    startLine: 140\n  assemblies:\n  - System.Reflection.Emit.Lightweight\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Creates a dynamic method that is global to a module, specifying the method name, return type, parameter types, module, and whether just-in-time (JIT) visibility checks should be skipped for types and members accessed by the Microsoft intermediate language (MSIL) of the dynamic method.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      [MethodImpl(MethodImplOptions.NoInlining)]\n\n      public DynamicMethod(string name, Type returnType, Type[] parameterTypes, Module m, bool skipVisibility)\n    content.vb: >-\n      <SecurityCritical>\n\n      <MethodImpl(MethodImplOptions.NoInlining)>\n\n      Public Sub New(name As String, returnType As Type, parameterTypes As Type(), m As  Module, skipVisibility As Boolean)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the dynamic method. This can be a zero-length string, but it cannot be <strong>null</strong>. </p>\\n\"\n    - id: returnType\n      type: System.Type\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that specifies the return type of the dynamic method, or <strong>null</strong> if the method has no return type. </p>\\n\"\n    - id: parameterTypes\n      type: System.Type[]\n      description: \"\\n<p>An array of <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects specifying the types of the parameters of the dynamic method, or <strong>null</strong> if the method has no parameters. </p>\\n\"\n    - id: m\n      type: System.Reflection.Module\n      description: \"\\n<p>A <xref href=\\\"System.Reflection.Module\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the module with which the dynamic method is to be logically associated. </p>\\n\"\n    - id: skipVisibility\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to skip JIT visibility checks on types and members accessed by the MSIL of the dynamic method. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>An element of <em>parameterTypes</em> is <strong>null</strong> or <xref href=\\\"System.Void\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n<p>-or-</p>\\n<p>\\n<em>m</em> is a module that provides anonymous hosting for dynamic methods.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n<p>-or-</p>\\n<p>\\n<em>m</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>returnType</em> is a type for which <xref href=\\\"System.Type.IsByRef\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> returns <strong>true</strong>. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.ReflectionPermission\n    commentId: T:System.Security.Permissions.ReflectionPermission\n  - type: System.Security.Permissions.ReflectionPermission\n    commentId: T:System.Security.Permissions.ReflectionPermission\n  attributes:\n  - type: System.Security.SecuritySafeCriticalAttribute\n    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Reflection.Emit.DynamicMethod.DynamicMethod(System.String, System.Type, System.Type(), System.Reflection.Module, System.Boolean)\n  name.vb: DynamicMethod(String, Type, Type(), Module, Boolean)\n  nameWithType: DynamicMethod.DynamicMethod(String, Type, Type[], Module, Boolean)\n  nameWithType.vb: DynamicMethod.DynamicMethod(String, Type, Type(), Module, Boolean)\n- uid: System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Type)\n  commentId: M:System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Type)\n  id: '#ctor(System.String,System.Type,System.Type[],System.Type)'\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  - vb\n  name: DynamicMethod(String, Type, Type[], Type)\n  fullName: System.Reflection.Emit.DynamicMethod.DynamicMethod(System.String, System.Type, System.Type[], System.Type)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n    startLine: 192\n  assemblies:\n  - System.Reflection.Emit.Lightweight\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Creates a dynamic method, specifying the method name, return type, parameter types, and the type with which the dynamic method is logically associated.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      [MethodImpl(MethodImplOptions.NoInlining)]\n\n      public DynamicMethod(string name, Type returnType, Type[] parameterTypes, Type owner)\n    content.vb: >-\n      <SecurityCritical>\n\n      <MethodImpl(MethodImplOptions.NoInlining)>\n\n      Public Sub New(name As String, returnType As Type, parameterTypes As Type(), owner As Type)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the dynamic method. This can be a zero-length string, but it cannot be <strong>null</strong>. </p>\\n\"\n    - id: returnType\n      type: System.Type\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that specifies the return type of the dynamic method, or <strong>null</strong> if the method has no return type. </p>\\n\"\n    - id: parameterTypes\n      type: System.Type[]\n      description: \"\\n<p>An array of <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects specifying the types of the parameters of the dynamic method, or <strong>null</strong> if the method has no parameters. </p>\\n\"\n    - id: owner\n      type: System.Type\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with which the dynamic method is logically associated. The dynamic method has access to all members of the type. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>An element of <em>parameterTypes</em> is <strong>null</strong> or <xref href=\\\"System.Void\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or- </p>\\n<p>\\n<em>owner</em> is an interface, an array, an open generic type, or a type parameter of a generic type or method. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n<p>-or-</p>\\n<p>\\n<em>owner</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>returnType</em> is <strong>null</strong>, or is a type for which <xref href=\\\"System.Type.IsByRef\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> returns <strong>true</strong>. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.ReflectionPermission\n    commentId: T:System.Security.Permissions.ReflectionPermission\n  attributes:\n  - type: System.Security.SecuritySafeCriticalAttribute\n    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Reflection.Emit.DynamicMethod.DynamicMethod(System.String, System.Type, System.Type(), System.Type)\n  name.vb: DynamicMethod(String, Type, Type(), Type)\n  nameWithType: DynamicMethod.DynamicMethod(String, Type, Type[], Type)\n  nameWithType.vb: DynamicMethod.DynamicMethod(String, Type, Type(), Type)\n- uid: System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Type,System.Boolean)\n  commentId: M:System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Type,System.Boolean)\n  id: '#ctor(System.String,System.Type,System.Type[],System.Type,System.Boolean)'\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  - vb\n  name: DynamicMethod(String, Type, Type[], Type, Boolean)\n  fullName: System.Reflection.Emit.DynamicMethod.DynamicMethod(System.String, System.Type, System.Type[], System.Type, System.Boolean)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n    startLine: 216\n  assemblies:\n  - System.Reflection.Emit.Lightweight\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Creates a dynamic method, specifying the method name, return type, parameter types, the type with which the dynamic method is logically associated, and whether just-in-time (JIT) visibility checks should be skipped for types and members accessed by the Microsoft intermediate language (MSIL) of the dynamic method.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      [MethodImpl(MethodImplOptions.NoInlining)]\n\n      public DynamicMethod(string name, Type returnType, Type[] parameterTypes, Type owner, bool skipVisibility)\n    content.vb: >-\n      <SecurityCritical>\n\n      <MethodImpl(MethodImplOptions.NoInlining)>\n\n      Public Sub New(name As String, returnType As Type, parameterTypes As Type(), owner As Type, skipVisibility As Boolean)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the dynamic method. This can be a zero-length string, but it cannot be <strong>null</strong>. </p>\\n\"\n    - id: returnType\n      type: System.Type\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that specifies the return type of the dynamic method, or <strong>null</strong> if the method has no return type. </p>\\n\"\n    - id: parameterTypes\n      type: System.Type[]\n      description: \"\\n<p>An array of <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects specifying the types of the parameters of the dynamic method, or <strong>null</strong> if the method has no parameters. </p>\\n\"\n    - id: owner\n      type: System.Type\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with which the dynamic method is logically associated. The dynamic method has access to all members of the type.</p>\\n\"\n    - id: skipVisibility\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to skip JIT visibility checks on types and members accessed by the MSIL of the dynamic method; otherwise, <strong>false</strong>. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>An element of <em>parameterTypes</em> is <strong>null</strong> or <xref href=\\\"System.Void\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or- </p>\\n<p>\\n<em>owner</em> is an interface, an array, an open generic type, or a type parameter of a generic type or method.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n<p>-or-</p>\\n<p>\\n<em>owner</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>returnType</em> is <strong>null</strong>, or is a type for which <xref href=\\\"System.Type.IsByRef\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> returns <strong>true</strong>. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.ReflectionPermission\n    commentId: T:System.Security.Permissions.ReflectionPermission\n  - type: System.Security.Permissions.ReflectionPermission\n    commentId: T:System.Security.Permissions.ReflectionPermission\n  attributes:\n  - type: System.Security.SecuritySafeCriticalAttribute\n    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Reflection.Emit.DynamicMethod.DynamicMethod(System.String, System.Type, System.Type(), System.Type, System.Boolean)\n  name.vb: DynamicMethod(String, Type, Type(), Type, Boolean)\n  nameWithType: DynamicMethod.DynamicMethod(String, Type, Type[], Type, Boolean)\n  nameWithType.vb: DynamicMethod.DynamicMethod(String, Type, Type(), Type, Boolean)\n- uid: System.Reflection.Emit.DynamicMethod.Attributes\n  commentId: P:System.Reflection.Emit.DynamicMethod.Attributes\n  id: Attributes\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  - vb\n  name: Attributes\n  fullName: System.Reflection.Emit.DynamicMethod.Attributes\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Attributes\n    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n    startLine: 616\n  assemblies:\n  - System.Reflection.Emit.Lightweight\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Gets the attributes specified when the dynamic method was created.</p>\\n\"\n  syntax:\n    content: public override MethodAttributes Attributes { get; }\n    content.vb: Public Overrides ReadOnly Property Attributes As MethodAttributes\n    parameters: []\n    return:\n      type: System.Reflection.MethodAttributes\n      description: \"\\n<p>A bitwise combination of the <xref href=\\\"System.Reflection.MethodAttributes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values representing the attributes for the method.</p>\\n\"\n  overridden: System.Reflection.MethodBase.Attributes\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: DynamicMethod.Attributes\n- uid: System.Reflection.Emit.DynamicMethod.CallingConvention\n  commentId: P:System.Reflection.Emit.DynamicMethod.CallingConvention\n  id: CallingConvention\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  - vb\n  name: CallingConvention\n  fullName: System.Reflection.Emit.DynamicMethod.CallingConvention\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CallingConvention\n    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n    startLine: 618\n  assemblies:\n  - System.Reflection.Emit.Lightweight\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Gets the calling convention specified when the dynamic method was created.</p>\\n\"\n  syntax:\n    content: public override CallingConventions CallingConvention { get; }\n    content.vb: Public Overrides ReadOnly Property CallingConvention As CallingConventions\n    parameters: []\n    return:\n      type: System.Reflection.CallingConventions\n      description: \"\\n<p>One of the <xref href=\\\"System.Reflection.CallingConventions\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that indicates the calling convention of the method.</p>\\n\"\n  overridden: System.Reflection.MethodBase.CallingConvention\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: DynamicMethod.CallingConvention\n- uid: System.Reflection.Emit.DynamicMethod.DeclaringType\n  commentId: P:System.Reflection.Emit.DynamicMethod.DeclaringType\n  id: DeclaringType\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  - vb\n  name: DeclaringType\n  fullName: System.Reflection.Emit.DynamicMethod.DeclaringType\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DeclaringType\n    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n    startLine: 607\n  assemblies:\n  - System.Reflection.Emit.Lightweight\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Gets the type that declares the method, which is always <strong>null</strong> for dynamic methods.</p>\\n\"\n  syntax:\n    content: public override Type DeclaringType { get; }\n    content.vb: Public Overrides ReadOnly Property DeclaringType As Type\n    parameters: []\n    return:\n      type: System.Type\n      description: \"\\n<p>Always <strong>null</strong>.</p>\\n\"\n  overridden: System.Reflection.MemberInfo.DeclaringType\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: DynamicMethod.DeclaringType\n- uid: System.Reflection.Emit.DynamicMethod.InitLocals\n  commentId: P:System.Reflection.Emit.DynamicMethod.InitLocals\n  id: InitLocals\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  - vb\n  name: InitLocals\n  fullName: System.Reflection.Emit.DynamicMethod.InitLocals\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: InitLocals\n    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n    startLine: 833\n  assemblies:\n  - System.Reflection.Emit.Lightweight\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Gets or sets a value indicating whether the local variables in the method are zero-initialized. </p>\\n\"\n  syntax:\n    content: public bool InitLocals { get; set; }\n    content.vb: Public Property InitLocals As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the local variables in the method are zero-initialized; otherwise, <strong>false</strong>. The default is <strong>true</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: DynamicMethod.InitLocals\n- uid: System.Reflection.Emit.DynamicMethod.Name\n  commentId: P:System.Reflection.Emit.DynamicMethod.Name\n  id: Name\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  - vb\n  name: Name\n  fullName: System.Reflection.Emit.DynamicMethod.Name\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Name\n    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n    startLine: 605\n  assemblies:\n  - System.Reflection.Emit.Lightweight\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Gets the name of the dynamic method.</p>\\n\"\n  syntax:\n    content: public override string Name { get; }\n    content.vb: Public Overrides ReadOnly Property Name As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The simple name of the method.</p>\\n\"\n  overridden: System.Reflection.MemberInfo.Name\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: DynamicMethod.Name\n- uid: System.Reflection.Emit.DynamicMethod.ReturnParameter\n  commentId: P:System.Reflection.Emit.DynamicMethod.ReturnParameter\n  id: ReturnParameter\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  - vb\n  name: ReturnParameter\n  fullName: System.Reflection.Emit.DynamicMethod.ReturnParameter\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ReturnParameter\n    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n    startLine: 770\n  assemblies:\n  - System.Reflection.Emit.Lightweight\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Gets the return parameter of the dynamic method.</p>\\n\"\n  syntax:\n    content: public override ParameterInfo ReturnParameter { get; }\n    content.vb: Public Overrides ReadOnly Property ReturnParameter As ParameterInfo\n    parameters: []\n    return:\n      type: System.Reflection.ParameterInfo\n      description: \"\\n<p>Always <strong>null</strong>. </p>\\n\"\n  overridden: System.Reflection.MethodInfo.ReturnParameter\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: DynamicMethod.ReturnParameter\n- uid: System.Reflection.Emit.DynamicMethod.ReturnType\n  commentId: P:System.Reflection.Emit.DynamicMethod.ReturnType\n  id: ReturnType\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  - vb\n  name: ReturnType\n  fullName: System.Reflection.Emit.DynamicMethod.ReturnType\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ReturnType\n    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n    startLine: 768\n  assemblies:\n  - System.Reflection.Emit.Lightweight\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Gets the type of return value for the dynamic method.</p>\\n\"\n  syntax:\n    content: public override Type ReturnType { get; }\n    content.vb: Public Overrides ReadOnly Property ReturnType As Type\n    parameters: []\n    return:\n      type: System.Type\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the type of the return value of the current method; <xref href=\\\"System.Void\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the method has no return type.</p>\\n\"\n  overridden: System.Reflection.MethodInfo.ReturnType\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: DynamicMethod.ReturnType\n- uid: System.Reflection.Emit.DynamicMethod.CreateDelegate(System.Type)\n  commentId: M:System.Reflection.Emit.DynamicMethod.CreateDelegate(System.Type)\n  id: CreateDelegate(System.Type)\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  - vb\n  name: CreateDelegate(Type)\n  fullName: System.Reflection.Emit.DynamicMethod.CreateDelegate(System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CreateDelegate\n    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n    startLine: 531\n  assemblies:\n  - System.Reflection.Emit.Lightweight\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Completes the dynamic method and creates a delegate that can be used to execute it.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      [ComVisible(true)]\n\n      public override sealed Delegate CreateDelegate(Type delegateType)\n    content.vb: \"<SecuritySafeCritical>\\n<ComVisible(True)>\\nPublic NotOverridable Overrides Function CreateDelegate(delegateType As Type) As \"\n    parameters:\n    - id: delegateType\n      type: System.Type\n      description: \"\\n<p>A delegate type whose signature matches that of the dynamic method. </p>\\n\"\n    return:\n      type: System.Delegate\n      description: \"\\n<p>A delegate of the specified type, which can be used to execute the dynamic method.</p>\\n\"\n  overridden: System.Reflection.MethodInfo.CreateDelegate(System.Type)\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The dynamic method has no method body.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>delegateType</em> has the wrong number of parameters or the wrong parameter types.</p>\\n\"\n  attributes:\n  - type: System.Security.SecuritySafeCriticalAttribute\n    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - override\n  - sealed\n  modifiers.vb:\n  - Public\n  - Overrides\n  - NotOverridable\n  nameWithType: DynamicMethod.CreateDelegate(Type)\n- uid: System.Reflection.Emit.DynamicMethod.CreateDelegate(System.Type,System.Object)\n  commentId: M:System.Reflection.Emit.DynamicMethod.CreateDelegate(System.Type,System.Object)\n  id: CreateDelegate(System.Type,System.Object)\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  - vb\n  name: CreateDelegate(Type, Object)\n  fullName: System.Reflection.Emit.DynamicMethod.CreateDelegate(System.Type, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CreateDelegate\n    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n    startLine: 547\n  assemblies:\n  - System.Reflection.Emit.Lightweight\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Completes the dynamic method and creates a delegate that can be used to execute it, specifying the delegate type and an object the delegate is bound to.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      [ComVisible(true)]\n\n      public override sealed Delegate CreateDelegate(Type delegateType, object target)\n    content.vb: \"<SecuritySafeCritical>\\n<ComVisible(True)>\\nPublic NotOverridable Overrides Function CreateDelegate(delegateType As Type, target As Object) As \"\n    parameters:\n    - id: delegateType\n      type: System.Type\n      description: \"\\n<p>A delegate type whose signature matches that of the dynamic method, minus the first parameter.</p>\\n\"\n    - id: target\n      type: System.Object\n      description: \"\\n<p>An object the delegate is bound to. Must be of the same type as the first parameter of the dynamic method. </p>\\n\"\n    return:\n      type: System.Delegate\n      description: \"\\n<p>A delegate of the specified type, which can be used to execute the dynamic method with the specified target object.</p>\\n\"\n  overridden: System.Reflection.MethodInfo.CreateDelegate(System.Type,System.Object)\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The dynamic method has no method body.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>target</em> is not the same type as the first parameter of the dynamic method, and is not assignable to that type.</p>\\n<p>-or-</p>\\n<p>\\n<em>delegateType</em> has the wrong number of parameters or the wrong parameter types.</p>\\n\"\n  attributes:\n  - type: System.Security.SecuritySafeCriticalAttribute\n    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - override\n  - sealed\n  modifiers.vb:\n  - Public\n  - Overrides\n  - NotOverridable\n  nameWithType: DynamicMethod.CreateDelegate(Type, Object)\n- uid: System.Reflection.Emit.DynamicMethod.GetILGenerator\n  commentId: M:System.Reflection.Emit.DynamicMethod.GetILGenerator\n  id: GetILGenerator\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  - vb\n  name: GetILGenerator()\n  fullName: System.Reflection.Emit.DynamicMethod.GetILGenerator()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetILGenerator\n    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n    startLine: 817\n  assemblies:\n  - System.Reflection.Emit.Lightweight\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Returns a Microsoft intermediate language (MSIL) generator for the method with a default MSIL stream size of 64 bytes.</p>\\n\"\n  syntax:\n    content: public ILGenerator GetILGenerator()\n    content.vb: Public Function GetILGenerator As ILGenerator\n    return:\n      type: System.Reflection.Emit.ILGenerator\n      description: \"\\n<p>An <xref href=\\\"System.Reflection.Emit.ILGenerator\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object for the method.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DynamicMethod.GetILGenerator()\n- uid: System.Reflection.Emit.DynamicMethod.GetILGenerator(System.Int32)\n  commentId: M:System.Reflection.Emit.DynamicMethod.GetILGenerator(System.Int32)\n  id: GetILGenerator(System.Int32)\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  - vb\n  name: GetILGenerator(Int32)\n  fullName: System.Reflection.Emit.DynamicMethod.GetILGenerator(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetILGenerator\n    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n    startLine: 821\n  assemblies:\n  - System.Reflection.Emit.Lightweight\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Returns a Microsoft intermediate language (MSIL) generator for the method with the specified MSIL stream size.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public ILGenerator GetILGenerator(int streamSize)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Function GetILGenerator(streamSize As Integer) As ILGenerator\n    parameters:\n    - id: streamSize\n      type: System.Int32\n      description: \"\\n<p>The size of the MSIL stream, in bytes. </p>\\n\"\n    return:\n      type: System.Reflection.Emit.ILGenerator\n      description: \"\\n<p>An <xref href=\\\"System.Reflection.Emit.ILGenerator\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object for the method, with the specified MSIL stream size.</p>\\n\"\n  attributes:\n  - type: System.Security.SecuritySafeCriticalAttribute\n    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DynamicMethod.GetILGenerator(Int32)\n- uid: System.Reflection.Emit.DynamicMethod.GetParameters\n  commentId: M:System.Reflection.Emit.DynamicMethod.GetParameters\n  id: GetParameters\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  - vb\n  name: GetParameters()\n  fullName: System.Reflection.Emit.DynamicMethod.GetParameters()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetParameters\n    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n    startLine: 622\n  assemblies:\n  - System.Reflection.Emit.Lightweight\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Returns the parameters of the dynamic method.</p>\\n\"\n  syntax:\n    content: public override ParameterInfo[] GetParameters()\n    content.vb: Public Overrides Function GetParameters As ParameterInfo()\n    return:\n      type: System.Reflection.ParameterInfo[]\n      description: \"\\n<p>An array of <xref href=\\\"System.Reflection.ParameterInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects that represent the parameters of the dynamic method.</p>\\n\"\n  overridden: System.Reflection.MethodBase.GetParameters\n  seealso:\n  - type: System.Reflection.Emit.DynamicMethod.DefineParameter(System.Int32,System.Reflection.ParameterAttributes,System.String)\n    commentId: M:System.Reflection.Emit.DynamicMethod.DefineParameter(System.Int32,System.Reflection.ParameterAttributes,System.String)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: DynamicMethod.GetParameters()\n- uid: System.Reflection.Emit.DynamicMethod.ToString\n  commentId: M:System.Reflection.Emit.DynamicMethod.ToString\n  id: ToString\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.Reflection.Emit.DynamicMethod.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToString\n    path: src/mscorlib/src/System/Reflection/Emit/DynamicMethod.cs\n    startLine: 603\n  assemblies:\n  - System.Reflection.Emit.Lightweight\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Returns the signature of the method, represented as a string.</p>\\n\"\n  syntax:\n    content: public override string ToString()\n    content.vb: Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>A string representing the method signature.</p>\\n\"\n  overridden: System.Object.ToString\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: DynamicMethod.ToString()\n- uid: System.Reflection.Emit.DynamicMethod.MethodImplementationFlags\n  commentId: P:System.Reflection.Emit.DynamicMethod.MethodImplementationFlags\n  id: MethodImplementationFlags\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  - vb\n  name: MethodImplementationFlags\n  fullName: System.Reflection.Emit.DynamicMethod.MethodImplementationFlags\n  type: Property\n  source:\n    remote:\n      path: src/System.Reflection.Emit.Lightweight/ref/System.Reflection.Emit.Lightweight.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MethodImplementationFlags\n    path: src/System.Reflection.Emit.Lightweight/ref/System.Reflection.Emit.Lightweight.Manual.cs\n    startLine: 12\n  assemblies:\n  - System.Reflection.Emit.Lightweight\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override MethodImplAttributes MethodImplementationFlags { get; }\n    content.vb: Public Overrides ReadOnly Property MethodImplementationFlags As MethodImplAttributes\n    parameters: []\n    return:\n      type: System.Reflection.MethodImplAttributes\n  overridden: System.Reflection.MethodBase.MethodImplementationFlags\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: DynamicMethod.MethodImplementationFlags\nreferences:\n- uid: System.Reflection.Emit\n  isExternal: false\n  name: System.Reflection.Emit\n  fullName: System.Reflection.Emit\n  nameWithType: System.Reflection.Emit\n  commentId: N:System.Reflection.Emit\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Reflection.MemberInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MemberInfo\n  fullName: System.Reflection.MemberInfo\n  nameWithType: MemberInfo\n  commentId: T:System.Reflection.MemberInfo\n- uid: System.Reflection.MethodBase\n  parent: System.Reflection\n  isExternal: false\n  name: MethodBase\n  fullName: System.Reflection.MethodBase\n  nameWithType: MethodBase\n  commentId: T:System.Reflection.MethodBase\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfo\n  fullName: System.Reflection.MethodInfo\n  nameWithType: MethodInfo\n  commentId: T:System.Reflection.MethodInfo\n- uid: System.Reflection.ICustomAttributeProvider\n  parent: System.Reflection\n  isExternal: false\n  name: ICustomAttributeProvider\n  fullName: System.Reflection.ICustomAttributeProvider\n  nameWithType: ICustomAttributeProvider\n  commentId: T:System.Reflection.ICustomAttributeProvider\n- uid: System.Runtime.InteropServices._MemberInfo\n  parent: System.Runtime.InteropServices\n  isExternal: true\n  name: _MemberInfo\n  fullName: System.Runtime.InteropServices._MemberInfo\n  nameWithType: _MemberInfo\n  commentId: T:System.Runtime.InteropServices._MemberInfo\n- uid: System.Runtime.InteropServices._MethodBase\n  parent: System.Runtime.InteropServices\n  isExternal: true\n  name: _MethodBase\n  fullName: System.Runtime.InteropServices._MethodBase\n  nameWithType: _MethodBase\n  commentId: T:System.Runtime.InteropServices._MethodBase\n- uid: System.Runtime.InteropServices._MethodInfo\n  parent: System.Runtime.InteropServices\n  isExternal: true\n  name: _MethodInfo\n  fullName: System.Runtime.InteropServices._MethodInfo\n  nameWithType: _MethodInfo\n  commentId: T:System.Runtime.InteropServices._MethodInfo\n- uid: System.Reflection.MethodInfo.Equals(System.Object)\n  parent: System.Reflection.MethodInfo\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Reflection.MethodInfo.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Reflection.MethodInfo.Equals(System.Object)\n    name: Equals\n    fullName: System.Reflection.MethodInfo.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodInfo.Equals(System.Object)\n    name: Equals\n    fullName: System.Reflection.MethodInfo.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MethodInfo.Equals(Object)\n  commentId: M:System.Reflection.MethodInfo.Equals(System.Object)\n- uid: System.Reflection.MethodInfo.GetHashCode\n  parent: System.Reflection.MethodInfo\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Reflection.MethodInfo.GetHashCode()\n  spec.csharp:\n  - uid: System.Reflection.MethodInfo.GetHashCode\n    name: GetHashCode\n    fullName: System.Reflection.MethodInfo.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodInfo.GetHashCode\n    name: GetHashCode\n    fullName: System.Reflection.MethodInfo.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MethodInfo.GetHashCode()\n  commentId: M:System.Reflection.MethodInfo.GetHashCode\n- uid: System.Reflection.MethodInfo.GetBaseDefinition\n  parent: System.Reflection.MethodInfo\n  isExternal: true\n  name: GetBaseDefinition()\n  fullName: System.Reflection.MethodInfo.GetBaseDefinition()\n  spec.csharp:\n  - uid: System.Reflection.MethodInfo.GetBaseDefinition\n    name: GetBaseDefinition\n    fullName: System.Reflection.MethodInfo.GetBaseDefinition\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodInfo.GetBaseDefinition\n    name: GetBaseDefinition\n    fullName: System.Reflection.MethodInfo.GetBaseDefinition\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MethodInfo.GetBaseDefinition()\n  commentId: M:System.Reflection.MethodInfo.GetBaseDefinition\n- uid: System.Reflection.MethodInfo.GetGenericArguments\n  parent: System.Reflection.MethodInfo\n  isExternal: true\n  name: GetGenericArguments()\n  fullName: System.Reflection.MethodInfo.GetGenericArguments()\n  spec.csharp:\n  - uid: System.Reflection.MethodInfo.GetGenericArguments\n    name: GetGenericArguments\n    fullName: System.Reflection.MethodInfo.GetGenericArguments\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodInfo.GetGenericArguments\n    name: GetGenericArguments\n    fullName: System.Reflection.MethodInfo.GetGenericArguments\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MethodInfo.GetGenericArguments()\n  commentId: M:System.Reflection.MethodInfo.GetGenericArguments\n- uid: System.Reflection.MethodInfo.GetGenericMethodDefinition\n  parent: System.Reflection.MethodInfo\n  isExternal: true\n  name: GetGenericMethodDefinition()\n  fullName: System.Reflection.MethodInfo.GetGenericMethodDefinition()\n  spec.csharp:\n  - uid: System.Reflection.MethodInfo.GetGenericMethodDefinition\n    name: GetGenericMethodDefinition\n    fullName: System.Reflection.MethodInfo.GetGenericMethodDefinition\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodInfo.GetGenericMethodDefinition\n    name: GetGenericMethodDefinition\n    fullName: System.Reflection.MethodInfo.GetGenericMethodDefinition\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MethodInfo.GetGenericMethodDefinition()\n  commentId: M:System.Reflection.MethodInfo.GetGenericMethodDefinition\n- uid: System.Reflection.MethodInfo.MakeGenericMethod(System.Type[])\n  parent: System.Reflection.MethodInfo\n  isExternal: true\n  name: MakeGenericMethod(Type[])\n  fullName: System.Reflection.MethodInfo.MakeGenericMethod(System.Type[])\n  fullname.vb: System.Reflection.MethodInfo.MakeGenericMethod(System.Type())\n  name.vb: MakeGenericMethod(Type())\n  spec.csharp:\n  - uid: System.Reflection.MethodInfo.MakeGenericMethod(System.Type[])\n    name: MakeGenericMethod\n    fullName: System.Reflection.MethodInfo.MakeGenericMethod\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodInfo.MakeGenericMethod(System.Type[])\n    name: MakeGenericMethod\n    fullName: System.Reflection.MethodInfo.MakeGenericMethod\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: MethodInfo.MakeGenericMethod(Type[])\n  nameWithType.vb: MethodInfo.MakeGenericMethod(Type())\n  commentId: M:System.Reflection.MethodInfo.MakeGenericMethod(System.Type[])\n- uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetType\n  parent: System.Reflection.MethodInfo\n  isExternal: true\n  name: _MethodInfo.GetType()\n  fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.GetType()\n  name.vb: System.Runtime.InteropServices._MethodInfo.GetType()\n  spec.csharp:\n  - uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetType\n    name: _MethodInfo.GetType\n    fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetType\n    name: System.Runtime.InteropServices._MethodInfo.GetType\n    fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MethodInfo._MethodInfo.GetType()\n  nameWithType.vb: MethodInfo.System.Runtime.InteropServices._MethodInfo.GetType()\n  commentId: M:System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetType\n- uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetTypeInfoCount(System.UInt32@)\n  parent: System.Reflection.MethodInfo\n  isExternal: true\n  name: _MethodInfo.GetTypeInfoCount(UInt32)\n  fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount(System.UInt32)\n  name.vb: System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount(UInt32)\n  spec.csharp:\n  - uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetTypeInfoCount(System.UInt32@)\n    name: _MethodInfo.GetTypeInfoCount\n    fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetTypeInfoCount(System.UInt32@)\n    name: System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount\n    fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MethodInfo._MethodInfo.GetTypeInfoCount(UInt32)\n  nameWithType.vb: MethodInfo.System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount(UInt32)\n  commentId: M:System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetTypeInfoCount(System.UInt32@)\n- uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.MethodInfo\n  isExternal: true\n  name: _MethodInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr)\n  name.vb: System.Runtime.InteropServices._MethodInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  spec.csharp:\n  - uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n    name: _MethodInfo.GetTypeInfo\n    fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.GetTypeInfo\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n    name: System.Runtime.InteropServices._MethodInfo.GetTypeInfo\n    fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.GetTypeInfo\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MethodInfo._MethodInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType.vb: MethodInfo.System.Runtime.InteropServices._MethodInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  commentId: M:System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n- uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.MethodInfo\n  isExternal: true\n  name: _MethodInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr)\n  name.vb: System.Runtime.InteropServices._MethodInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  spec.csharp:\n  - uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n    name: _MethodInfo.GetIDsOfNames\n    fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.GetIDsOfNames\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n    name: System.Runtime.InteropServices._MethodInfo.GetIDsOfNames\n    fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.GetIDsOfNames\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MethodInfo._MethodInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType.vb: MethodInfo.System.Runtime.InteropServices._MethodInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  commentId: M:System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n- uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Reflection.MethodInfo\n  isExternal: true\n  name: _MethodInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)\n  name.vb: System.Runtime.InteropServices._MethodInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  spec.csharp:\n  - uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n    name: _MethodInfo.Invoke\n    fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.Invoke\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int16\n    name: Int16\n    fullName: System.Int16\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n    name: System.Runtime.InteropServices._MethodInfo.Invoke\n    fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.Invoke\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int16\n    name: Int16\n    fullName: System.Int16\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MethodInfo._MethodInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType.vb: MethodInfo.System.Runtime.InteropServices._MethodInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  commentId: M:System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n- uid: System.Reflection.MethodInfo.MemberType\n  parent: System.Reflection.MethodInfo\n  isExternal: true\n  name: MemberType\n  fullName: System.Reflection.MethodInfo.MemberType\n  nameWithType: MethodInfo.MemberType\n  commentId: P:System.Reflection.MethodInfo.MemberType\n- uid: System.Reflection.MethodInfo.ReturnTypeCustomAttributes\n  parent: System.Reflection.MethodInfo\n  isExternal: true\n  name: ReturnTypeCustomAttributes\n  fullName: System.Reflection.MethodInfo.ReturnTypeCustomAttributes\n  nameWithType: MethodInfo.ReturnTypeCustomAttributes\n  commentId: P:System.Reflection.MethodInfo.ReturnTypeCustomAttributes\n- uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: GetMethodFromHandle(RuntimeMethodHandle)\n  fullName: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)\n  spec.csharp:\n  - uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)\n    name: GetMethodFromHandle\n    fullName: System.Reflection.MethodBase.GetMethodFromHandle\n  - name: (\n    fullName: (\n  - uid: System.RuntimeMethodHandle\n    name: RuntimeMethodHandle\n    fullName: System.RuntimeMethodHandle\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)\n    name: GetMethodFromHandle\n    fullName: System.Reflection.MethodBase.GetMethodFromHandle\n  - name: (\n    fullName: (\n  - uid: System.RuntimeMethodHandle\n    name: RuntimeMethodHandle\n    fullName: System.RuntimeMethodHandle\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MethodBase.GetMethodFromHandle(RuntimeMethodHandle)\n  commentId: M:System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)\n- uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: GetMethodFromHandle(RuntimeMethodHandle, RuntimeTypeHandle)\n  fullName: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle, System.RuntimeTypeHandle)\n  spec.csharp:\n  - uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)\n    name: GetMethodFromHandle\n    fullName: System.Reflection.MethodBase.GetMethodFromHandle\n  - name: (\n    fullName: (\n  - uid: System.RuntimeMethodHandle\n    name: RuntimeMethodHandle\n    fullName: System.RuntimeMethodHandle\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.RuntimeTypeHandle\n    name: RuntimeTypeHandle\n    fullName: System.RuntimeTypeHandle\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)\n    name: GetMethodFromHandle\n    fullName: System.Reflection.MethodBase.GetMethodFromHandle\n  - name: (\n    fullName: (\n  - uid: System.RuntimeMethodHandle\n    name: RuntimeMethodHandle\n    fullName: System.RuntimeMethodHandle\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.RuntimeTypeHandle\n    name: RuntimeTypeHandle\n    fullName: System.RuntimeTypeHandle\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MethodBase.GetMethodFromHandle(RuntimeMethodHandle, RuntimeTypeHandle)\n  commentId: M:System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)\n- uid: System.Reflection.MethodBase.GetCurrentMethod\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: GetCurrentMethod()\n  fullName: System.Reflection.MethodBase.GetCurrentMethod()\n  spec.csharp:\n  - uid: System.Reflection.MethodBase.GetCurrentMethod\n    name: GetCurrentMethod\n    fullName: System.Reflection.MethodBase.GetCurrentMethod\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodBase.GetCurrentMethod\n    name: GetCurrentMethod\n    fullName: System.Reflection.MethodBase.GetCurrentMethod\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MethodBase.GetCurrentMethod()\n  commentId: M:System.Reflection.MethodBase.GetCurrentMethod\n- uid: System.Reflection.MethodBase.GetMethodImplementationFlags\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: GetMethodImplementationFlags()\n  fullName: System.Reflection.MethodBase.GetMethodImplementationFlags()\n  spec.csharp:\n  - uid: System.Reflection.MethodBase.GetMethodImplementationFlags\n    name: GetMethodImplementationFlags\n    fullName: System.Reflection.MethodBase.GetMethodImplementationFlags\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodBase.GetMethodImplementationFlags\n    name: GetMethodImplementationFlags\n    fullName: System.Reflection.MethodBase.GetMethodImplementationFlags\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MethodBase.GetMethodImplementationFlags()\n  commentId: M:System.Reflection.MethodBase.GetMethodImplementationFlags\n- uid: System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)\n  fullName: System.Reflection.MethodBase.Invoke(System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)\n  fullname.vb: System.Reflection.MethodBase.Invoke(System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object(), System.Globalization.CultureInfo)\n  name.vb: Invoke(Object, BindingFlags, Binder, Object(), CultureInfo)\n  spec.csharp:\n  - uid: System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n    name: Invoke\n    fullName: System.Reflection.MethodBase.Invoke\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.Binder\n    name: Binder\n    fullName: System.Reflection.Binder\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Globalization.CultureInfo\n    name: CultureInfo\n    fullName: System.Globalization.CultureInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n    name: Invoke\n    fullName: System.Reflection.MethodBase.Invoke\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.Binder\n    name: Binder\n    fullName: System.Reflection.Binder\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Globalization.CultureInfo\n    name: CultureInfo\n    fullName: System.Globalization.CultureInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MethodBase.Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)\n  nameWithType.vb: MethodBase.Invoke(Object, BindingFlags, Binder, Object(), CultureInfo)\n  commentId: M:System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n- uid: System.Reflection.MethodBase.Invoke(System.Object,System.Object[])\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: Invoke(Object, Object[])\n  fullName: System.Reflection.MethodBase.Invoke(System.Object, System.Object[])\n  fullname.vb: System.Reflection.MethodBase.Invoke(System.Object, System.Object())\n  name.vb: Invoke(Object, Object())\n  spec.csharp:\n  - uid: System.Reflection.MethodBase.Invoke(System.Object,System.Object[])\n    name: Invoke\n    fullName: System.Reflection.MethodBase.Invoke\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodBase.Invoke(System.Object,System.Object[])\n    name: Invoke\n    fullName: System.Reflection.MethodBase.Invoke\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: MethodBase.Invoke(Object, Object[])\n  nameWithType.vb: MethodBase.Invoke(Object, Object())\n  commentId: M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])\n- uid: System.Reflection.MethodBase.GetMethodBody\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: GetMethodBody()\n  fullName: System.Reflection.MethodBase.GetMethodBody()\n  spec.csharp:\n  - uid: System.Reflection.MethodBase.GetMethodBody\n    name: GetMethodBody\n    fullName: System.Reflection.MethodBase.GetMethodBody\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodBase.GetMethodBody\n    name: GetMethodBody\n    fullName: System.Reflection.MethodBase.GetMethodBody\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MethodBase.GetMethodBody()\n  commentId: M:System.Reflection.MethodBase.GetMethodBody\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetType\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: _MethodBase.GetType()\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetType()\n  name.vb: System.Runtime.InteropServices._MethodBase.GetType()\n  spec.csharp:\n  - uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetType\n    name: _MethodBase.GetType\n    fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetType\n    name: System.Runtime.InteropServices._MethodBase.GetType\n    fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MethodBase._MethodBase.GetType()\n  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.GetType()\n  commentId: M:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetType\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfoCount(System.UInt32@)\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: _MethodBase.GetTypeInfoCount(UInt32)\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(System.UInt32)\n  name.vb: System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(UInt32)\n  spec.csharp:\n  - uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfoCount(System.UInt32@)\n    name: _MethodBase.GetTypeInfoCount\n    fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetTypeInfoCount\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfoCount(System.UInt32@)\n    name: System.Runtime.InteropServices._MethodBase.GetTypeInfoCount\n    fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetTypeInfoCount\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MethodBase._MethodBase.GetTypeInfoCount(UInt32)\n  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(UInt32)\n  commentId: M:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfoCount(System.UInt32@)\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: _MethodBase.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr)\n  name.vb: System.Runtime.InteropServices._MethodBase.GetTypeInfo(UInt32, UInt32, IntPtr)\n  spec.csharp:\n  - uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n    name: _MethodBase.GetTypeInfo\n    fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetTypeInfo\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n    name: System.Runtime.InteropServices._MethodBase.GetTypeInfo\n    fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetTypeInfo\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MethodBase._MethodBase.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.GetTypeInfo(UInt32, UInt32, IntPtr)\n  commentId: M:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: _MethodBase.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr)\n  name.vb: System.Runtime.InteropServices._MethodBase.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  spec.csharp:\n  - uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n    name: _MethodBase.GetIDsOfNames\n    fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetIDsOfNames\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n    name: System.Runtime.InteropServices._MethodBase.GetIDsOfNames\n    fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetIDsOfNames\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MethodBase._MethodBase.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  commentId: M:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: _MethodBase.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)\n  name.vb: System.Runtime.InteropServices._MethodBase.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  spec.csharp:\n  - uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n    name: _MethodBase.Invoke\n    fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.Invoke\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int16\n    name: Int16\n    fullName: System.Int16\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n    name: System.Runtime.InteropServices._MethodBase.Invoke\n    fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.Invoke\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int16\n    name: Int16\n    fullName: System.Int16\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MethodBase._MethodBase.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  commentId: M:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n- uid: System.Reflection.MethodBase.MethodHandle\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: MethodHandle\n  fullName: System.Reflection.MethodBase.MethodHandle\n  nameWithType: MethodBase.MethodHandle\n  commentId: P:System.Reflection.MethodBase.MethodHandle\n- uid: System.Reflection.MethodBase.IsGenericMethodDefinition\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsGenericMethodDefinition\n  fullName: System.Reflection.MethodBase.IsGenericMethodDefinition\n  nameWithType: MethodBase.IsGenericMethodDefinition\n  commentId: P:System.Reflection.MethodBase.IsGenericMethodDefinition\n- uid: System.Reflection.MethodBase.ContainsGenericParameters\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: ContainsGenericParameters\n  fullName: System.Reflection.MethodBase.ContainsGenericParameters\n  nameWithType: MethodBase.ContainsGenericParameters\n  commentId: P:System.Reflection.MethodBase.ContainsGenericParameters\n- uid: System.Reflection.MethodBase.IsGenericMethod\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsGenericMethod\n  fullName: System.Reflection.MethodBase.IsGenericMethod\n  nameWithType: MethodBase.IsGenericMethod\n  commentId: P:System.Reflection.MethodBase.IsGenericMethod\n- uid: System.Reflection.MethodBase.IsSecurityCritical\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: IsSecurityCritical\n  fullName: System.Reflection.MethodBase.IsSecurityCritical\n  nameWithType: MethodBase.IsSecurityCritical\n  commentId: P:System.Reflection.MethodBase.IsSecurityCritical\n- uid: System.Reflection.MethodBase.IsSecuritySafeCritical\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: IsSecuritySafeCritical\n  fullName: System.Reflection.MethodBase.IsSecuritySafeCritical\n  nameWithType: MethodBase.IsSecuritySafeCritical\n  commentId: P:System.Reflection.MethodBase.IsSecuritySafeCritical\n- uid: System.Reflection.MethodBase.IsSecurityTransparent\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: IsSecurityTransparent\n  fullName: System.Reflection.MethodBase.IsSecurityTransparent\n  nameWithType: MethodBase.IsSecurityTransparent\n  commentId: P:System.Reflection.MethodBase.IsSecurityTransparent\n- uid: System.Reflection.MethodBase.IsPublic\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsPublic\n  fullName: System.Reflection.MethodBase.IsPublic\n  nameWithType: MethodBase.IsPublic\n  commentId: P:System.Reflection.MethodBase.IsPublic\n- uid: System.Reflection.MethodBase.IsPrivate\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsPrivate\n  fullName: System.Reflection.MethodBase.IsPrivate\n  nameWithType: MethodBase.IsPrivate\n  commentId: P:System.Reflection.MethodBase.IsPrivate\n- uid: System.Reflection.MethodBase.IsFamily\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsFamily\n  fullName: System.Reflection.MethodBase.IsFamily\n  nameWithType: MethodBase.IsFamily\n  commentId: P:System.Reflection.MethodBase.IsFamily\n- uid: System.Reflection.MethodBase.IsAssembly\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsAssembly\n  fullName: System.Reflection.MethodBase.IsAssembly\n  nameWithType: MethodBase.IsAssembly\n  commentId: P:System.Reflection.MethodBase.IsAssembly\n- uid: System.Reflection.MethodBase.IsFamilyAndAssembly\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsFamilyAndAssembly\n  fullName: System.Reflection.MethodBase.IsFamilyAndAssembly\n  nameWithType: MethodBase.IsFamilyAndAssembly\n  commentId: P:System.Reflection.MethodBase.IsFamilyAndAssembly\n- uid: System.Reflection.MethodBase.IsFamilyOrAssembly\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsFamilyOrAssembly\n  fullName: System.Reflection.MethodBase.IsFamilyOrAssembly\n  nameWithType: MethodBase.IsFamilyOrAssembly\n  commentId: P:System.Reflection.MethodBase.IsFamilyOrAssembly\n- uid: System.Reflection.MethodBase.IsStatic\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsStatic\n  fullName: System.Reflection.MethodBase.IsStatic\n  nameWithType: MethodBase.IsStatic\n  commentId: P:System.Reflection.MethodBase.IsStatic\n- uid: System.Reflection.MethodBase.IsFinal\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsFinal\n  fullName: System.Reflection.MethodBase.IsFinal\n  nameWithType: MethodBase.IsFinal\n  commentId: P:System.Reflection.MethodBase.IsFinal\n- uid: System.Reflection.MethodBase.IsVirtual\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsVirtual\n  fullName: System.Reflection.MethodBase.IsVirtual\n  nameWithType: MethodBase.IsVirtual\n  commentId: P:System.Reflection.MethodBase.IsVirtual\n- uid: System.Reflection.MethodBase.IsHideBySig\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsHideBySig\n  fullName: System.Reflection.MethodBase.IsHideBySig\n  nameWithType: MethodBase.IsHideBySig\n  commentId: P:System.Reflection.MethodBase.IsHideBySig\n- uid: System.Reflection.MethodBase.IsAbstract\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsAbstract\n  fullName: System.Reflection.MethodBase.IsAbstract\n  nameWithType: MethodBase.IsAbstract\n  commentId: P:System.Reflection.MethodBase.IsAbstract\n- uid: System.Reflection.MethodBase.IsSpecialName\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsSpecialName\n  fullName: System.Reflection.MethodBase.IsSpecialName\n  nameWithType: MethodBase.IsSpecialName\n  commentId: P:System.Reflection.MethodBase.IsSpecialName\n- uid: System.Reflection.MethodBase.IsConstructor\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsConstructor\n  fullName: System.Reflection.MethodBase.IsConstructor\n  nameWithType: MethodBase.IsConstructor\n  commentId: P:System.Reflection.MethodBase.IsConstructor\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsPublic\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: _MethodBase.IsPublic\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsPublic\n  name.vb: System.Runtime.InteropServices._MethodBase.IsPublic\n  nameWithType: MethodBase._MethodBase.IsPublic\n  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.IsPublic\n  commentId: P:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsPublic\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsPrivate\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: _MethodBase.IsPrivate\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsPrivate\n  name.vb: System.Runtime.InteropServices._MethodBase.IsPrivate\n  nameWithType: MethodBase._MethodBase.IsPrivate\n  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.IsPrivate\n  commentId: P:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsPrivate\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamily\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: _MethodBase.IsFamily\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsFamily\n  name.vb: System.Runtime.InteropServices._MethodBase.IsFamily\n  nameWithType: MethodBase._MethodBase.IsFamily\n  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.IsFamily\n  commentId: P:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamily\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsAssembly\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: _MethodBase.IsAssembly\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsAssembly\n  name.vb: System.Runtime.InteropServices._MethodBase.IsAssembly\n  nameWithType: MethodBase._MethodBase.IsAssembly\n  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.IsAssembly\n  commentId: P:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsAssembly\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamilyAndAssembly\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: _MethodBase.IsFamilyAndAssembly\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly\n  name.vb: System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly\n  nameWithType: MethodBase._MethodBase.IsFamilyAndAssembly\n  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly\n  commentId: P:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamilyAndAssembly\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamilyOrAssembly\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: _MethodBase.IsFamilyOrAssembly\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly\n  name.vb: System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly\n  nameWithType: MethodBase._MethodBase.IsFamilyOrAssembly\n  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly\n  commentId: P:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamilyOrAssembly\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsStatic\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: _MethodBase.IsStatic\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsStatic\n  name.vb: System.Runtime.InteropServices._MethodBase.IsStatic\n  nameWithType: MethodBase._MethodBase.IsStatic\n  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.IsStatic\n  commentId: P:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsStatic\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFinal\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: _MethodBase.IsFinal\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsFinal\n  name.vb: System.Runtime.InteropServices._MethodBase.IsFinal\n  nameWithType: MethodBase._MethodBase.IsFinal\n  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.IsFinal\n  commentId: P:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFinal\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsVirtual\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: _MethodBase.IsVirtual\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsVirtual\n  name.vb: System.Runtime.InteropServices._MethodBase.IsVirtual\n  nameWithType: MethodBase._MethodBase.IsVirtual\n  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.IsVirtual\n  commentId: P:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsVirtual\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsHideBySig\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: _MethodBase.IsHideBySig\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsHideBySig\n  name.vb: System.Runtime.InteropServices._MethodBase.IsHideBySig\n  nameWithType: MethodBase._MethodBase.IsHideBySig\n  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.IsHideBySig\n  commentId: P:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsHideBySig\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsAbstract\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: _MethodBase.IsAbstract\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsAbstract\n  name.vb: System.Runtime.InteropServices._MethodBase.IsAbstract\n  nameWithType: MethodBase._MethodBase.IsAbstract\n  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.IsAbstract\n  commentId: P:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsAbstract\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsSpecialName\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: _MethodBase.IsSpecialName\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsSpecialName\n  name.vb: System.Runtime.InteropServices._MethodBase.IsSpecialName\n  nameWithType: MethodBase._MethodBase.IsSpecialName\n  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.IsSpecialName\n  commentId: P:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsSpecialName\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsConstructor\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: _MethodBase.IsConstructor\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsConstructor\n  name.vb: System.Runtime.InteropServices._MethodBase.IsConstructor\n  nameWithType: MethodBase._MethodBase.IsConstructor\n  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.IsConstructor\n  commentId: P:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsConstructor\n- uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)\n  parent: System.Reflection.MemberInfo\n  isExternal: true\n  name: GetCustomAttributes(Boolean)\n  fullName: System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.MemberInfo.GetCustomAttributes\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.MemberInfo.GetCustomAttributes\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MemberInfo.GetCustomAttributes(Boolean)\n  commentId: M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)\n- uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Reflection.MemberInfo\n  isExternal: true\n  name: GetCustomAttributes(Type, Boolean)\n  fullName: System.Reflection.MemberInfo.GetCustomAttributes(System.Type, System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.MemberInfo.GetCustomAttributes\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.MemberInfo.GetCustomAttributes\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MemberInfo.GetCustomAttributes(Type, Boolean)\n  commentId: M:System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)\n- uid: System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)\n  parent: System.Reflection.MemberInfo\n  isExternal: true\n  name: IsDefined(Type, Boolean)\n  fullName: System.Reflection.MemberInfo.IsDefined(System.Type, System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)\n    name: IsDefined\n    fullName: System.Reflection.MemberInfo.IsDefined\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)\n    name: IsDefined\n    fullName: System.Reflection.MemberInfo.IsDefined\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MemberInfo.IsDefined(Type, Boolean)\n  commentId: M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)\n- uid: System.Reflection.MemberInfo.GetCustomAttributesData\n  parent: System.Reflection.MemberInfo\n  isExternal: true\n  name: GetCustomAttributesData()\n  fullName: System.Reflection.MemberInfo.GetCustomAttributesData()\n  spec.csharp:\n  - uid: System.Reflection.MemberInfo.GetCustomAttributesData\n    name: GetCustomAttributesData\n    fullName: System.Reflection.MemberInfo.GetCustomAttributesData\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MemberInfo.GetCustomAttributesData\n    name: GetCustomAttributesData\n    fullName: System.Reflection.MemberInfo.GetCustomAttributesData\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MemberInfo.GetCustomAttributesData()\n  commentId: M:System.Reflection.MemberInfo.GetCustomAttributesData\n- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType\n  parent: System.Reflection.MemberInfo\n  isExternal: true\n  name: _MemberInfo.GetType()\n  fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetType()\n  name.vb: System.Runtime.InteropServices._MemberInfo.GetType()\n  spec.csharp:\n  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType\n    name: _MemberInfo.GetType\n    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType\n    name: System.Runtime.InteropServices._MemberInfo.GetType\n    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MemberInfo._MemberInfo.GetType()\n  nameWithType.vb: MemberInfo.System.Runtime.InteropServices._MemberInfo.GetType()\n  commentId: M:System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType\n- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)\n  parent: System.Reflection.MemberInfo\n  isExternal: true\n  name: _MemberInfo.GetTypeInfoCount(UInt32)\n  fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount(System.UInt32)\n  name.vb: System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount(UInt32)\n  spec.csharp:\n  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)\n    name: _MemberInfo.GetTypeInfoCount\n    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)\n    name: System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount\n    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MemberInfo._MemberInfo.GetTypeInfoCount(UInt32)\n  nameWithType.vb: MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount(UInt32)\n  commentId: M:System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)\n- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.MemberInfo\n  isExternal: true\n  name: _MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr)\n  name.vb: System.Runtime.InteropServices._MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  spec.csharp:\n  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n    name: _MemberInfo.GetTypeInfo\n    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfo\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n    name: System.Runtime.InteropServices._MemberInfo.GetTypeInfo\n    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfo\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MemberInfo._MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType.vb: MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  commentId: M:System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.MemberInfo\n  isExternal: true\n  name: _MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr)\n  name.vb: System.Runtime.InteropServices._MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  spec.csharp:\n  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n    name: _MemberInfo.GetIDsOfNames\n    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetIDsOfNames\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n    name: System.Runtime.InteropServices._MemberInfo.GetIDsOfNames\n    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetIDsOfNames\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MemberInfo._MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType.vb: MemberInfo.System.Runtime.InteropServices._MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  commentId: M:System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Reflection.MemberInfo\n  isExternal: true\n  name: _MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)\n  name.vb: System.Runtime.InteropServices._MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  spec.csharp:\n  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n    name: _MemberInfo.Invoke\n    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.Invoke\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int16\n    name: Int16\n    fullName: System.Int16\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n    name: System.Runtime.InteropServices._MemberInfo.Invoke\n    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.Invoke\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int16\n    name: Int16\n    fullName: System.Int16\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MemberInfo._MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType.vb: MemberInfo.System.Runtime.InteropServices._MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  commentId: M:System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n- uid: System.Reflection.MemberInfo.ReflectedType\n  parent: System.Reflection.MemberInfo\n  isExternal: true\n  name: ReflectedType\n  fullName: System.Reflection.MemberInfo.ReflectedType\n  nameWithType: MemberInfo.ReflectedType\n  commentId: P:System.Reflection.MemberInfo.ReflectedType\n- uid: System.Reflection.MemberInfo.CustomAttributes\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: CustomAttributes\n  fullName: System.Reflection.MemberInfo.CustomAttributes\n  nameWithType: MemberInfo.CustomAttributes\n  commentId: P:System.Reflection.MemberInfo.CustomAttributes\n- uid: System.Reflection.MemberInfo.MetadataToken\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: MetadataToken\n  fullName: System.Reflection.MemberInfo.MetadataToken\n  nameWithType: MemberInfo.MetadataToken\n  commentId: P:System.Reflection.MemberInfo.MetadataToken\n- uid: System.Reflection.MemberInfo.Module\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: Module\n  fullName: System.Reflection.MemberInfo.Module\n  nameWithType: MemberInfo.Module\n  commentId: P:System.Reflection.MemberInfo.Module\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System.Reflection.MemberInfo.System.Reflection.MemberInfoExtensions.HasMetadataToken\n  parent: System.Reflection.MemberInfoExtensions\n  definition: System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)\n  name: HasMetadataToken()\n  fullName: System.Reflection.MemberInfoExtensions.HasMetadataToken()\n  spec.csharp:\n  - uid: System.Reflection.MemberInfoExtensions.HasMetadataToken\n    name: HasMetadataToken\n    fullName: System.Reflection.MemberInfoExtensions.HasMetadataToken\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MemberInfoExtensions.HasMetadataToken\n    name: HasMetadataToken\n    fullName: System.Reflection.MemberInfoExtensions.HasMetadataToken\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MemberInfoExtensions.HasMetadataToken()\n  commentId: M:System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)\n- uid: System.Reflection.MemberInfo.System.Reflection.MemberInfoExtensions.GetMetadataToken\n  parent: System.Reflection.MemberInfoExtensions\n  definition: System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)\n  name: GetMetadataToken()\n  fullName: System.Reflection.MemberInfoExtensions.GetMetadataToken()\n  spec.csharp:\n  - uid: System.Reflection.MemberInfoExtensions.GetMetadataToken\n    name: GetMetadataToken\n    fullName: System.Reflection.MemberInfoExtensions.GetMetadataToken\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MemberInfoExtensions.GetMetadataToken\n    name: GetMetadataToken\n    fullName: System.Reflection.MemberInfoExtensions.GetMetadataToken\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MemberInfoExtensions.GetMetadataToken()\n  commentId: M:System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)\n- uid: System.Reflection.MethodInfo.System.Reflection.MethodInfoExtensions.GetBaseDefinition\n  parent: System.Reflection.MethodInfoExtensions\n  definition: System.Reflection.MethodInfoExtensions.GetBaseDefinition(System.Reflection.MethodInfo)\n  name: GetBaseDefinition()\n  fullName: System.Reflection.MethodInfoExtensions.GetBaseDefinition()\n  spec.csharp:\n  - uid: System.Reflection.MethodInfoExtensions.GetBaseDefinition\n    name: GetBaseDefinition\n    fullName: System.Reflection.MethodInfoExtensions.GetBaseDefinition\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodInfoExtensions.GetBaseDefinition\n    name: GetBaseDefinition\n    fullName: System.Reflection.MethodInfoExtensions.GetBaseDefinition\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MethodInfoExtensions.GetBaseDefinition()\n  commentId: M:System.Reflection.MethodInfoExtensions.GetBaseDefinition(System.Reflection.MethodInfo)\n- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type)\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  name: GetCustomAttribute(Type)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type)\n    name: GetCustomAttribute\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type)\n    name: GetCustomAttribute\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute(Type)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type,System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  name: GetCustomAttribute(Type, Boolean)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type, System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type,System.Boolean)\n    name: GetCustomAttribute\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type,System.Boolean)\n    name: GetCustomAttribute\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute(Type, Boolean)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)\n  name: GetCustomAttribute<T>()\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>()\n  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)()\n  name.vb: GetCustomAttribute(Of T)()\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1\n    name: GetCustomAttribute<T>\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1\n    name: GetCustomAttribute(Of T)\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>()\n  nameWithType.vb: CustomAttributeExtensions.GetCustomAttribute(Of T)()\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)\n- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)\n  name: GetCustomAttribute<T>(Boolean)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>(System.Boolean)\n  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)(System.Boolean)\n  name.vb: GetCustomAttribute(Of T)(Boolean)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Boolean)\n    name: GetCustomAttribute<T>\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Boolean)\n    name: GetCustomAttribute(Of T)\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(Boolean)\n  nameWithType.vb: CustomAttributeExtensions.GetCustomAttribute(Of T)(Boolean)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)\n- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)\n  name: GetCustomAttributes()\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes()\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes()\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)\n- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  name: GetCustomAttributes(Boolean)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(Boolean)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type)\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  name: GetCustomAttributes(Type)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(Type)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  name: GetCustomAttributes(Type, Boolean)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type, System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type,System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type,System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(Type, Boolean)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)\n  name: GetCustomAttributes<T>()\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>()\n  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)()\n  name.vb: GetCustomAttributes(Of T)()\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1\n    name: GetCustomAttributes<T>\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1\n    name: GetCustomAttributes(Of T)\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>()\n  nameWithType.vb: CustomAttributeExtensions.GetCustomAttributes(Of T)()\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)\n- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)\n  name: GetCustomAttributes<T>(Boolean)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>(System.Boolean)\n  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)(System.Boolean)\n  name.vb: GetCustomAttributes(Of T)(Boolean)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Boolean)\n    name: GetCustomAttributes<T>\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Boolean)\n    name: GetCustomAttributes(Of T)\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(Boolean)\n  nameWithType.vb: CustomAttributeExtensions.GetCustomAttributes(Of T)(Boolean)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)\n- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.IsDefined(System.Type)\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)\n  name: IsDefined(Type)\n  fullName: System.Reflection.CustomAttributeExtensions.IsDefined(System.Type)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Type)\n    name: IsDefined\n    fullName: System.Reflection.CustomAttributeExtensions.IsDefined\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Type)\n    name: IsDefined\n    fullName: System.Reflection.CustomAttributeExtensions.IsDefined\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.IsDefined(Type)\n  commentId: M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)\n- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.IsDefined(System.Type,System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  name: IsDefined(Type, Boolean)\n  fullName: System.Reflection.CustomAttributeExtensions.IsDefined(System.Type, System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Type,System.Boolean)\n    name: IsDefined\n    fullName: System.Reflection.CustomAttributeExtensions.IsDefined\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Type,System.Boolean)\n    name: IsDefined\n    fullName: System.Reflection.CustomAttributeExtensions.IsDefined\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.IsDefined(Type, Boolean)\n  commentId: M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n- uid: System.Reflection.MethodInfo.System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition\n  parent: System.Reflection.RuntimeReflectionExtensions\n  definition: System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition(System.Reflection.MethodInfo)\n  name: GetRuntimeBaseDefinition()\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition()\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition\n    name: GetRuntimeBaseDefinition\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition\n    name: GetRuntimeBaseDefinition\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: RuntimeReflectionExtensions.GetRuntimeBaseDefinition()\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition(System.Reflection.MethodInfo)\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Reflection\n  isExternal: false\n  name: System.Reflection\n  fullName: System.Reflection\n  nameWithType: System.Reflection\n  commentId: N:System.Reflection\n- uid: System.Runtime.InteropServices\n  isExternal: false\n  name: System.Runtime.InteropServices\n  fullName: System.Runtime.InteropServices\n  nameWithType: System.Runtime.InteropServices\n  commentId: N:System.Runtime.InteropServices\n- uid: System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)\n  isExternal: true\n  name: HasMetadataToken(MemberInfo)\n  fullName: System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)\n  spec.csharp:\n  - uid: System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)\n    name: HasMetadataToken\n    fullName: System.Reflection.MemberInfoExtensions.HasMetadataToken\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)\n    name: HasMetadataToken\n    fullName: System.Reflection.MemberInfoExtensions.HasMetadataToken\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MemberInfoExtensions.HasMetadataToken(MemberInfo)\n  commentId: M:System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)\n- uid: System.Reflection.MemberInfoExtensions\n  parent: System.Reflection\n  isExternal: false\n  name: MemberInfoExtensions\n  fullName: System.Reflection.MemberInfoExtensions\n  nameWithType: MemberInfoExtensions\n  commentId: T:System.Reflection.MemberInfoExtensions\n- uid: System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)\n  isExternal: true\n  name: GetMetadataToken(MemberInfo)\n  fullName: System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)\n  spec.csharp:\n  - uid: System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)\n    name: GetMetadataToken\n    fullName: System.Reflection.MemberInfoExtensions.GetMetadataToken\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)\n    name: GetMetadataToken\n    fullName: System.Reflection.MemberInfoExtensions.GetMetadataToken\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MemberInfoExtensions.GetMetadataToken(MemberInfo)\n  commentId: M:System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)\n- uid: System.Reflection.MethodInfoExtensions.GetBaseDefinition(System.Reflection.MethodInfo)\n  isExternal: true\n  name: GetBaseDefinition(MethodInfo)\n  fullName: System.Reflection.MethodInfoExtensions.GetBaseDefinition(System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Reflection.MethodInfoExtensions.GetBaseDefinition(System.Reflection.MethodInfo)\n    name: GetBaseDefinition\n    fullName: System.Reflection.MethodInfoExtensions.GetBaseDefinition\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodInfoExtensions.GetBaseDefinition(System.Reflection.MethodInfo)\n    name: GetBaseDefinition\n    fullName: System.Reflection.MethodInfoExtensions.GetBaseDefinition\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MethodInfoExtensions.GetBaseDefinition(MethodInfo)\n  commentId: M:System.Reflection.MethodInfoExtensions.GetBaseDefinition(System.Reflection.MethodInfo)\n- uid: System.Reflection.MethodInfoExtensions\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfoExtensions\n  fullName: System.Reflection.MethodInfoExtensions\n  nameWithType: MethodInfoExtensions\n  commentId: T:System.Reflection.MethodInfoExtensions\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  isExternal: true\n  name: GetCustomAttribute(MemberInfo, Type)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo, System.Type)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n    name: GetCustomAttribute\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n    name: GetCustomAttribute\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n- uid: System.Reflection.CustomAttributeExtensions\n  parent: System.Reflection\n  isExternal: false\n  name: CustomAttributeExtensions\n  fullName: System.Reflection.CustomAttributeExtensions\n  nameWithType: CustomAttributeExtensions\n  commentId: T:System.Reflection.CustomAttributeExtensions\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  isExternal: true\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n    name: GetCustomAttribute\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n    name: GetCustomAttribute\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type, Boolean)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)\n  isExternal: true\n  name: GetCustomAttribute<T>(MemberInfo)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>(System.Reflection.MemberInfo)\n  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)(System.Reflection.MemberInfo)\n  name.vb: GetCustomAttribute(Of T)(MemberInfo)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)\n    name: GetCustomAttribute<T>\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)\n    name: GetCustomAttribute(Of T)\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo)\n  nameWithType.vb: CustomAttributeExtensions.GetCustomAttribute(Of T)(MemberInfo)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)\n  isExternal: true\n  name: GetCustomAttribute<T>(MemberInfo, Boolean)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>(System.Reflection.MemberInfo, System.Boolean)\n  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)(System.Reflection.MemberInfo, System.Boolean)\n  name.vb: GetCustomAttribute(Of T)(MemberInfo, Boolean)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)\n    name: GetCustomAttribute<T>\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)\n    name: GetCustomAttribute(Of T)\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo, Boolean)\n  nameWithType.vb: CustomAttributeExtensions.GetCustomAttribute(Of T)(MemberInfo, Boolean)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)\n  isExternal: true\n  name: GetCustomAttributes(MemberInfo)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  isExternal: true\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Boolean)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  isExternal: true\n  name: GetCustomAttributes(MemberInfo, Type)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo, System.Type)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  isExternal: true\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type, Boolean)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)\n  isExternal: true\n  name: GetCustomAttributes<T>(MemberInfo)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>(System.Reflection.MemberInfo)\n  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)(System.Reflection.MemberInfo)\n  name.vb: GetCustomAttributes(Of T)(MemberInfo)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)\n    name: GetCustomAttributes<T>\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)\n    name: GetCustomAttributes(Of T)\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo)\n  nameWithType.vb: CustomAttributeExtensions.GetCustomAttributes(Of T)(MemberInfo)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)\n  isExternal: true\n  name: GetCustomAttributes<T>(MemberInfo, Boolean)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>(System.Reflection.MemberInfo, System.Boolean)\n  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)(System.Reflection.MemberInfo, System.Boolean)\n  name.vb: GetCustomAttributes(Of T)(MemberInfo, Boolean)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)\n    name: GetCustomAttributes<T>\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)\n    name: GetCustomAttributes(Of T)\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo, Boolean)\n  nameWithType.vb: CustomAttributeExtensions.GetCustomAttributes(Of T)(MemberInfo, Boolean)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)\n- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)\n  isExternal: true\n  name: IsDefined(MemberInfo, Type)\n  fullName: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo, System.Type)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)\n    name: IsDefined\n    fullName: System.Reflection.CustomAttributeExtensions.IsDefined\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)\n    name: IsDefined\n    fullName: System.Reflection.CustomAttributeExtensions.IsDefined\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.IsDefined(MemberInfo, Type)\n  commentId: M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)\n- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  isExternal: true\n  name: IsDefined(MemberInfo, Type, Boolean)\n  fullName: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n    name: IsDefined\n    fullName: System.Reflection.CustomAttributeExtensions.IsDefined\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n    name: IsDefined\n    fullName: System.Reflection.CustomAttributeExtensions.IsDefined\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.IsDefined(MemberInfo, Type, Boolean)\n  commentId: M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n- uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition(System.Reflection.MethodInfo)\n  isExternal: true\n  name: GetRuntimeBaseDefinition(MethodInfo)\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition(System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition(System.Reflection.MethodInfo)\n    name: GetRuntimeBaseDefinition\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition(System.Reflection.MethodInfo)\n    name: GetRuntimeBaseDefinition\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: RuntimeReflectionExtensions.GetRuntimeBaseDefinition(MethodInfo)\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition(System.Reflection.MethodInfo)\n- uid: System.Reflection.RuntimeReflectionExtensions\n  parent: System.Reflection\n  isExternal: false\n  name: RuntimeReflectionExtensions\n  fullName: System.Reflection.RuntimeReflectionExtensions\n  nameWithType: RuntimeReflectionExtensions\n  commentId: T:System.Reflection.RuntimeReflectionExtensions\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Reflection.MethodAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: MethodAttributes\n  fullName: System.Reflection.MethodAttributes\n  nameWithType: MethodAttributes\n  commentId: T:System.Reflection.MethodAttributes\n- uid: System.Reflection.CallingConventions\n  parent: System.Reflection\n  isExternal: false\n  name: CallingConventions\n  fullName: System.Reflection.CallingConventions\n  nameWithType: CallingConventions\n  commentId: T:System.Reflection.CallingConventions\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  nameWithType: Type\n  commentId: T:System.Type\n- uid: System.Type[]\n  name: Type[]\n  fullName: System.Type[]\n  fullname.vb: System.Type()\n  name.vb: Type()\n  spec.csharp:\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n  - name: ()\n    fullName: ()\n  nameWithType: Type[]\n  nameWithType.vb: Type()\n- uid: System.Reflection.Module\n  parent: System.Reflection\n  isExternal: false\n  name: Module\n  fullName: System.Reflection.Module\n  nameWithType: Module\n  commentId: T:System.Reflection.Module\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Reflection.MethodBase.Attributes\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: Attributes\n  fullName: System.Reflection.MethodBase.Attributes\n  nameWithType: MethodBase.Attributes\n  commentId: P:System.Reflection.MethodBase.Attributes\n- uid: System.Reflection.MethodBase.CallingConvention\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: CallingConvention\n  fullName: System.Reflection.MethodBase.CallingConvention\n  nameWithType: MethodBase.CallingConvention\n  commentId: P:System.Reflection.MethodBase.CallingConvention\n- uid: System.Reflection.MemberInfo.DeclaringType\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: DeclaringType\n  fullName: System.Reflection.MemberInfo.DeclaringType\n  nameWithType: MemberInfo.DeclaringType\n  commentId: P:System.Reflection.MemberInfo.DeclaringType\n- uid: System.Reflection.MemberInfo.Name\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: Name\n  fullName: System.Reflection.MemberInfo.Name\n  nameWithType: MemberInfo.Name\n  commentId: P:System.Reflection.MemberInfo.Name\n- uid: System.Reflection.MethodInfo.ReturnParameter\n  parent: System.Reflection.MethodInfo\n  isExternal: true\n  name: ReturnParameter\n  fullName: System.Reflection.MethodInfo.ReturnParameter\n  nameWithType: MethodInfo.ReturnParameter\n  commentId: P:System.Reflection.MethodInfo.ReturnParameter\n- uid: System.Reflection.ParameterInfo\n  parent: System.Reflection\n  isExternal: false\n  name: ParameterInfo\n  fullName: System.Reflection.ParameterInfo\n  nameWithType: ParameterInfo\n  commentId: T:System.Reflection.ParameterInfo\n- uid: System.Reflection.MethodInfo.ReturnType\n  parent: System.Reflection.MethodInfo\n  isExternal: true\n  name: ReturnType\n  fullName: System.Reflection.MethodInfo.ReturnType\n  nameWithType: MethodInfo.ReturnType\n  commentId: P:System.Reflection.MethodInfo.ReturnType\n- uid: System.Reflection.MethodInfo.CreateDelegate(System.Type)\n  parent: System.Reflection.MethodInfo\n  isExternal: true\n  name: CreateDelegate(Type)\n  fullName: System.Reflection.MethodInfo.CreateDelegate(System.Type)\n  spec.csharp:\n  - uid: System.Reflection.MethodInfo.CreateDelegate(System.Type)\n    name: CreateDelegate\n    fullName: System.Reflection.MethodInfo.CreateDelegate\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodInfo.CreateDelegate(System.Type)\n    name: CreateDelegate\n    fullName: System.Reflection.MethodInfo.CreateDelegate\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MethodInfo.CreateDelegate(Type)\n  commentId: M:System.Reflection.MethodInfo.CreateDelegate(System.Type)\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  fullName: System.Delegate\n  nameWithType: Delegate\n  commentId: T:System.Delegate\n- uid: System.Reflection.MethodInfo.CreateDelegate(System.Type,System.Object)\n  parent: System.Reflection.MethodInfo\n  isExternal: true\n  name: CreateDelegate(Type, Object)\n  fullName: System.Reflection.MethodInfo.CreateDelegate(System.Type, System.Object)\n  spec.csharp:\n  - uid: System.Reflection.MethodInfo.CreateDelegate(System.Type,System.Object)\n    name: CreateDelegate\n    fullName: System.Reflection.MethodInfo.CreateDelegate\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodInfo.CreateDelegate(System.Type,System.Object)\n    name: CreateDelegate\n    fullName: System.Reflection.MethodInfo.CreateDelegate\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MethodInfo.CreateDelegate(Type, Object)\n  commentId: M:System.Reflection.MethodInfo.CreateDelegate(System.Type,System.Object)\n- uid: System.Reflection.Emit.ILGenerator\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: ILGenerator\n  fullName: System.Reflection.Emit.ILGenerator\n  nameWithType: ILGenerator\n  commentId: T:System.Reflection.Emit.ILGenerator\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Reflection.MethodBase.GetParameters\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: GetParameters()\n  fullName: System.Reflection.MethodBase.GetParameters()\n  spec.csharp:\n  - uid: System.Reflection.MethodBase.GetParameters\n    name: GetParameters\n    fullName: System.Reflection.MethodBase.GetParameters\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodBase.GetParameters\n    name: GetParameters\n    fullName: System.Reflection.MethodBase.GetParameters\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MethodBase.GetParameters()\n  commentId: M:System.Reflection.MethodBase.GetParameters\n- uid: System.Reflection.ParameterInfo[]\n  name: ParameterInfo[]\n  fullName: System.Reflection.ParameterInfo[]\n  fullname.vb: System.Reflection.ParameterInfo()\n  name.vb: ParameterInfo()\n  spec.csharp:\n  - uid: System.Reflection.ParameterInfo\n    name: ParameterInfo\n    fullName: System.Reflection.ParameterInfo\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Reflection.ParameterInfo\n    name: ParameterInfo\n    fullName: System.Reflection.ParameterInfo\n  - name: ()\n    fullName: ()\n  nameWithType: ParameterInfo[]\n  nameWithType.vb: ParameterInfo()\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Reflection.MethodBase.MethodImplementationFlags\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: MethodImplementationFlags\n  fullName: System.Reflection.MethodBase.MethodImplementationFlags\n  nameWithType: MethodBase.MethodImplementationFlags\n  commentId: P:System.Reflection.MethodBase.MethodImplementationFlags\n- uid: System.Reflection.MethodImplAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: MethodImplAttributes\n  fullName: System.Reflection.MethodImplAttributes\n  nameWithType: MethodImplAttributes\n  commentId: T:System.Reflection.MethodImplAttributes\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  fullName: System.NotSupportedException\n  nameWithType: NotSupportedException\n  commentId: T:System.NotSupportedException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n"}