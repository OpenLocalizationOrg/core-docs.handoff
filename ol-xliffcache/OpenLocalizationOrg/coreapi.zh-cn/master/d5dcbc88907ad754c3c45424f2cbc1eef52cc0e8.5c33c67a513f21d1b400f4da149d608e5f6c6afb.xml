{"nodes":[{"pos":[1037,1060],"content":"RecipientInfoCollection","needQuote":true,"nodes":[{"content":"RecipientInfoCollection","pos":[0,23]}]},{"pos":[3442,3447],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"content":"\\n&lt;p&gt;An int value that represents the number of items in the collection.&lt;/p&gt;\\n","pos":[4456,4534],"source":"\\n<p>An int value that represents the number of items in the collection.</p>\\n"},{"pos":[5020,5031],"content":"Item[Int32]","needQuote":true,"nodes":[{"content":"Item[Int32]","pos":[0,11]}]},{"content":"\\n&lt;p&gt;An int value that represents the index in the collection.","pos":[6115,6177],"source":"\\n<p>An int value that represents the index in the collection."},{"content":"The index is zero based.&lt;/p&gt;\\n","pos":[6178,6208],"source":" The index is zero based.</p>\\n"},{"content":"\\n&lt;p&gt;The value of an argument was outside the allowable range of values as defined by the called method.&lt;/p&gt;\\n","pos":[6584,6694],"source":"\\n<p>The value of an argument was outside the allowable range of values as defined by the called method.</p>\\n"},{"pos":[7396,7422],"content":"ICollection.IsSynchronized","needQuote":true,"nodes":[{"content":"ICollection.IsSynchronized","pos":[0,26]}]},{"pos":[8976,8996],"content":"ICollection.SyncRoot","needQuote":true,"nodes":[{"content":"ICollection.SyncRoot","pos":[0,20]}]},{"pos":[10464,10484],"content":"CopyTo(Array, Int32)","needQuote":true,"nodes":[{"content":"CopyTo(Array, Int32)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;One of the arguments provided to a method was not valid.&lt;/p&gt;\\n","pos":[12187,12254],"source":"\\n<p>One of the arguments provided to a method was not valid.</p>\\n"},{"content":"\\n&lt;p&gt;A null reference was passed to a method that does not accept it as a valid argument.","pos":[12359,12448],"source":"\\n<p>A null reference was passed to a method that does not accept it as a valid argument."},{"content":"&lt;/p&gt;\\n","pos":[12449,12455],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The value of an argument was outside the allowable range of values as defined by the called method.&lt;/p&gt;\\n","pos":[12572,12682],"source":"\\n<p>The value of an argument was outside the allowable range of values as defined by the called method.</p>\\n"},{"pos":[13346,13376],"content":"CopyTo(RecipientInfo[], Int32)","needQuote":true,"nodes":[{"content":"CopyTo(RecipientInfo[], Int32)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;One of the arguments provided to a method was not valid.&lt;/p&gt;\\n","pos":[15358,15425],"source":"\\n<p>One of the arguments provided to a method was not valid.</p>\\n"},{"content":"\\n&lt;p&gt;A null reference was passed to a method that does not accept it as a valid argument.","pos":[15530,15619],"source":"\\n<p>A null reference was passed to a method that does not accept it as a valid argument."},{"content":"&lt;/p&gt;\\n","pos":[15620,15626],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The value of an argument was outside the allowable range of values as defined by the called method.&lt;/p&gt;\\n","pos":[15743,15853],"source":"\\n<p>The value of an argument was outside the allowable range of values as defined by the called method.</p>\\n"},{"pos":[16534,16549],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[18715,18742],"content":"IEnumerable.GetEnumerator()","needQuote":true,"nodes":[{"content":"IEnumerable.GetEnumerator()","pos":[0,27]}]},{"pos":[20866,20899],"content":"System.Security.Cryptography.Pkcs","needQuote":true,"nodes":[{"content":"System.Security.Cryptography.Pkcs","pos":[0,33]}]},{"pos":[21111,21117],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21291,21302],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[21515,21526],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[21725,21735],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[21830,21838],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[21907,21908],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21935,21936],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22006,22014],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[22083,22084],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22111,22112],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22295,22309],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[22428,22434],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[22501,22502],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22552,22558],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22618,22619],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22702,22708],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[22775,22776],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22826,22832],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22892,22893],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23107,23129],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[23277,23283],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[23350,23351],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23401,23407],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[23468,23469]},{"pos":[23524,23530],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23590,23591],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23688,23694],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[23761,23762],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23812,23818],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[23879,23880]},{"pos":[23935,23941],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24001,24002],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24247,24278],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[24444,24459],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[24535,24536],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24586,24592],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[24653,24654]},{"pos":[24709,24715],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24775,24776],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24882,24897],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[24973,24974],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25024,25030],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[25091,25092]},{"pos":[25147,25153],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[25213,25214],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25444,25457],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[25558,25569],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[25641,25642],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25669,25670],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25743,25754],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[25826,25827],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25854,25855],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26030,26039],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[26132,26139],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[26207,26208],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26235,26236],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26305,26312],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[26380,26381],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26408,26409],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26584,26601],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[26710,26725],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[26801,26802],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26829,26830],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26907,26922],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[26998,26999],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27026,27027],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27322,27335],"content":"AsQueryable()","needQuote":true,"nodes":[{"content":"AsQueryable()","pos":[0,13]}]},{"pos":[27452,27463],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[27522,27523],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27550,27551],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27632,27643],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[27702,27703],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27730,27731],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28086,28098],"content":"AsParallel()","needQuote":true,"nodes":[{"content":"AsParallel()","pos":[0,12]}]},{"pos":[28231,28241],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[28308,28309],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28336,28337],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28426,28436],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[28503,28504],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28531,28532],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28873,28888],"content":"Cast<TResult>()","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;()","pos":[0,15],"source":"Cast<TResult>()"}]},{"pos":[29092,29105],"content":"Cast<TResult>","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;","pos":[0,13],"source":"Cast<TResult>"}]},{"pos":[29167,29168],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29195,29196],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29274,29290],"content":"Cast(Of TResult)","needQuote":true,"nodes":[{"content":"Cast(Of TResult)","pos":[0,16]}]},{"pos":[29355,29356],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29383,29384],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29762,29779],"content":"OfType<TResult>()","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;()","pos":[0,17],"source":"OfType<TResult>()"}]},{"pos":[29991,30006],"content":"OfType<TResult>","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;","pos":[0,15],"source":"OfType<TResult>"}]},{"pos":[30070,30071],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30098,30099],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30179,30197],"content":"OfType(Of TResult)","needQuote":true,"nodes":[{"content":"OfType(Of TResult)","pos":[0,18]}]},{"pos":[30264,30265],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30292,30293],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30528,30534],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[30653,30671],"content":"System.Collections","needQuote":true,"nodes":[{"content":"System.Collections","pos":[0,18]}]},{"pos":[30872,30896],"content":"AsQueryable(IEnumerable)","needQuote":true,"nodes":[{"content":"AsQueryable(IEnumerable)","pos":[0,24]}]},{"pos":[31075,31086],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[31145,31146],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31213,31224],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[31301,31302],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31415,31426],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[31485,31486],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31553,31564],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[31641,31642],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31870,31879],"content":"Queryable","needQuote":true,"nodes":[{"content":"Queryable","pos":[0,9]}]},{"pos":[32085,32108],"content":"AsParallel(IEnumerable)","needQuote":true,"nodes":[{"content":"AsParallel(IEnumerable)","pos":[0,23]}]},{"pos":[32303,32313],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[32380,32381],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32448,32459],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[32536,32537],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32658,32668],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[32735,32736],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32803,32814],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[32891,32892],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33145,33163],"content":"ParallelEnumerable","needQuote":true,"nodes":[{"content":"ParallelEnumerable","pos":[0,18]}]},{"pos":[33385,33411],"content":"Cast<TResult>(IEnumerable)","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;(IEnumerable)","pos":[0,26],"source":"Cast<TResult>(IEnumerable)"}]},{"pos":[33718,33731],"content":"Cast<TResult>","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;","pos":[0,13],"source":"Cast<TResult>"}]},{"pos":[33793,33794],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33861,33872],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[33949,33950],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34060,34076],"content":"Cast(Of TResult)","needQuote":true,"nodes":[{"content":"Cast(Of TResult)","pos":[0,16]}]},{"pos":[34141,34142],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34209,34220],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[34297,34298],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34587,34597],"content":"Enumerable","needQuote":true,"nodes":[{"content":"Enumerable","pos":[0,10]}]},{"pos":[34797,34825],"content":"OfType<TResult>(IEnumerable)","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;(IEnumerable)","pos":[0,28],"source":"OfType<TResult>(IEnumerable)"}]},{"pos":[35140,35155],"content":"OfType<TResult>","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;","pos":[0,15],"source":"OfType<TResult>"}]},{"pos":[35219,35220],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35287,35298],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[35375,35376],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35488,35506],"content":"OfType(Of TResult)","needQuote":true,"nodes":[{"content":"OfType(Of TResult)","pos":[0,18]}]},{"pos":[35573,35574],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35641,35652],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[35729,35730],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35992,36003],"content":"System.Linq","needQuote":true,"nodes":[{"content":"System.Linq","pos":[0,11]}]},{"pos":[36196,36201],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[36402,36407],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[36610,36623],"content":"RecipientInfo","needQuote":true,"nodes":[{"content":"RecipientInfo","pos":[0,13]}]},{"pos":[36899,36913],"content":"IsSynchronized","needQuote":true,"nodes":[{"content":"IsSynchronized","pos":[0,14]}]},{"pos":[37143,37150],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[37348,37356],"content":"SyncRoot","needQuote":true,"nodes":[{"content":"SyncRoot","pos":[0,8]}]},{"pos":[37641,37661],"content":"CopyTo(Array, Int32)","needQuote":true,"nodes":[{"content":"CopyTo(Array, Int32)","pos":[0,20]}]},{"pos":[37839,37845],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[37908,37909],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37958,37963],"content":"Array","needQuote":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"content":",","pos":[38002,38003]},{"pos":[38057,38062],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[38121,38122],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38234,38240],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[38303,38304],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38353,38358],"content":"Array","needQuote":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"content":",","pos":[38397,38398]},{"pos":[38452,38457],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[38516,38517],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38728,38733],"content":"Array","needQuote":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[38874,38889],"content":"RecipientInfo[]","needQuote":true,"nodes":[{"content":"RecipientInfo[]","pos":[0,15]}]},{"pos":[39126,39139],"content":"RecipientInfo","needQuote":true,"nodes":[{"content":"RecipientInfo","pos":[0,13]}]},{"content":"[]","pos":[39213,39215]},{"pos":[39314,39327],"content":"RecipientInfo","needQuote":true,"nodes":[{"content":"RecipientInfo","pos":[0,13]}]},{"pos":[39400,39402],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[39624,39647],"content":"RecipientInfoEnumerator","needQuote":true,"nodes":[{"content":"RecipientInfoEnumerator","pos":[0,23]}]},{"pos":[39952,39967],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[40106,40119],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[40189,40190],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40217,40218],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40310,40323],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[40393,40394],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40421,40422],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40638,40649],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[40837,40864],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]},{"pos":[41083,41100],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[41276,41297],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]}],"content":"items:\n- uid: System.Security.Cryptography.Pkcs.RecipientInfoCollection\n  commentId: T:System.Security.Cryptography.Pkcs.RecipientInfoCollection\n  id: RecipientInfoCollection\n  parent: System.Security.Cryptography.Pkcs\n  children:\n  - System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Array,System.Int32)\n  - System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.RecipientInfo[],System.Int32)\n  - System.Security.Cryptography.Pkcs.RecipientInfoCollection.Count\n  - System.Security.Cryptography.Pkcs.RecipientInfoCollection.GetEnumerator\n  - System.Security.Cryptography.Pkcs.RecipientInfoCollection.Item(System.Int32)\n  - System.Security.Cryptography.Pkcs.RecipientInfoCollection.System#Collections#ICollection#IsSynchronized\n  - System.Security.Cryptography.Pkcs.RecipientInfoCollection.System#Collections#ICollection#SyncRoot\n  - System.Security.Cryptography.Pkcs.RecipientInfoCollection.System#Collections#IEnumerable#GetEnumerator\n  langs:\n  - csharp\n  - vb\n  name: RecipientInfoCollection\n  fullName: System.Security.Cryptography.Pkcs.RecipientInfoCollection\n  type: Class\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RecipientInfoCollection\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 189\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.RecipientInfoCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class represents a collection of <xref href=\\\"System.Security.Cryptography.Pkcs.RecipientInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects. <xref href=\\\"System.Security.Cryptography.Pkcs.RecipientInfoCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> implements the <xref href=\\\"System.Collections.ICollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> interface. </p>\\n\"\n  syntax:\n    content: 'public sealed class RecipientInfoCollection : ICollection, IEnumerable'\n    content.vb: >-\n      Public NotInheritable Class RecipientInfoCollection\n          Implements ICollection, IEnumerable\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.ICollection\n  - System.Collections.IEnumerable\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: RecipientInfoCollection\n  extensionMethods:\n  - System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable\n  - System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel\n  - System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1\n  - System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1\n- uid: System.Security.Cryptography.Pkcs.RecipientInfoCollection.Count\n  commentId: P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Count\n  id: Count\n  parent: System.Security.Cryptography.Pkcs.RecipientInfoCollection\n  langs:\n  - csharp\n  - vb\n  name: Count\n  fullName: System.Security.Cryptography.Pkcs.RecipientInfoCollection.Count\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Count\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 192\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.RecipientInfoCollection.Count\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property retrieves the number of items in the <xref href=\\\"System.Security.Cryptography.Pkcs.RecipientInfoCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> collection.</p>\\n\"\n  syntax:\n    content: public int Count { get; }\n    content.vb: Public ReadOnly Property Count As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>An int value that represents the number of items in the collection.</p>\\n\"\n  implements:\n  - System.Collections.ICollection.Count\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: RecipientInfoCollection.Count\n- uid: System.Security.Cryptography.Pkcs.RecipientInfoCollection.Item(System.Int32)\n  commentId: P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Security.Cryptography.Pkcs.RecipientInfoCollection\n  langs:\n  - csharp\n  - vb\n  name: Item[Int32]\n  fullName: System.Security.Cryptography.Pkcs.RecipientInfoCollection.Item[System.Int32]\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: this[]\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 193\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.RecipientInfoCollection.Item(System.Int32)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property retrieves the <xref href=\\\"System.Security.Cryptography.Pkcs.RecipientInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object at the specified index in the collection.</p>\\n\"\n  syntax:\n    content: public RecipientInfo this[int index] { get; }\n    content.vb: Public ReadOnly Property Item(index As Integer) As RecipientInfo\n    parameters:\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>An int value that represents the index in the collection. The index is zero based.</p>\\n\"\n    return:\n      type: System.Security.Cryptography.Pkcs.RecipientInfo\n      description: \"\\n<p>A <xref href=\\\"System.Security.Cryptography.Pkcs.RecipientInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object at the specified index.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The value of an argument was outside the allowable range of values as defined by the called method.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Security.Cryptography.Pkcs.RecipientInfoCollection.Item(System.Int32)\n  name.vb: Item(Int32)\n  nameWithType: RecipientInfoCollection.Item[Int32]\n  nameWithType.vb: RecipientInfoCollection.Item(Int32)\n- uid: System.Security.Cryptography.Pkcs.RecipientInfoCollection.System#Collections#ICollection#IsSynchronized\n  commentId: P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Security.Cryptography.Pkcs.RecipientInfoCollection\n  langs:\n  - csharp\n  - vb\n  name: ICollection.IsSynchronized\n  fullName: System.Security.Cryptography.Pkcs.RecipientInfoCollection.System.Collections.ICollection.IsSynchronized\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.ICollection.IsSynchronized\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 194\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  syntax:\n    content: bool ICollection.IsSynchronized { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.IsSynchronized As Boolean Implements ICollection.IsSynchronized\n    parameters: []\n    return:\n      type: System.Boolean\n  implements:\n  - System.Collections.ICollection.IsSynchronized\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  name.vb: System.Collections.ICollection.IsSynchronized\n  nameWithType: RecipientInfoCollection.ICollection.IsSynchronized\n  nameWithType.vb: RecipientInfoCollection.System.Collections.ICollection.IsSynchronized\n- uid: System.Security.Cryptography.Pkcs.RecipientInfoCollection.System#Collections#ICollection#SyncRoot\n  commentId: P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Security.Cryptography.Pkcs.RecipientInfoCollection\n  langs:\n  - csharp\n  - vb\n  name: ICollection.SyncRoot\n  fullName: System.Security.Cryptography.Pkcs.RecipientInfoCollection.System.Collections.ICollection.SyncRoot\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.ICollection.SyncRoot\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 195\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  syntax:\n    content: object ICollection.SyncRoot { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.SyncRoot As Object Implements ICollection.SyncRoot\n    parameters: []\n    return:\n      type: System.Object\n  implements:\n  - System.Collections.ICollection.SyncRoot\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  name.vb: System.Collections.ICollection.SyncRoot\n  nameWithType: RecipientInfoCollection.ICollection.SyncRoot\n  nameWithType.vb: RecipientInfoCollection.System.Collections.ICollection.SyncRoot\n- uid: System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Array,System.Int32)\n  commentId: M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Array,System.Int32)\n  id: CopyTo(System.Array,System.Int32)\n  parent: System.Security.Cryptography.Pkcs.RecipientInfoCollection\n  langs:\n  - csharp\n  - vb\n  name: CopyTo(Array, Int32)\n  fullName: System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Array, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CopyTo\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 196\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Array,System.Int32)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method copies the <xref href=\\\"System.Security.Cryptography.Pkcs.RecipientInfoCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> collection to an array.</p>\\n\"\n  syntax:\n    content: public void CopyTo(Array array, int index)\n    content.vb: Public Sub CopyTo(array As Array, index As Integer)\n    parameters:\n    - id: array\n      type: System.Array\n      description: \"\\n<p>An <xref href=\\\"System.Array\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to which  the <xref href=\\\"System.Security.Cryptography.Pkcs.RecipientInfoCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> collection is to be copied.</p>\\n\"\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The zero-based index in <em>array</em> where the <xref href=\\\"System.Security.Cryptography.Pkcs.RecipientInfoCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> collection is copied.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>One of the arguments provided to a method was not valid.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>A null reference was passed to a method that does not accept it as a valid argument. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The value of an argument was outside the allowable range of values as defined by the called method.</p>\\n\"\n  implements:\n  - System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RecipientInfoCollection.CopyTo(Array, Int32)\n- uid: System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.RecipientInfo[],System.Int32)\n  commentId: M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.RecipientInfo[],System.Int32)\n  id: CopyTo(System.Security.Cryptography.Pkcs.RecipientInfo[],System.Int32)\n  parent: System.Security.Cryptography.Pkcs.RecipientInfoCollection\n  langs:\n  - csharp\n  - vb\n  name: CopyTo(RecipientInfo[], Int32)\n  fullName: System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.RecipientInfo[], System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CopyTo\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 197\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.RecipientInfo[],System.Int32)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method copies the <xref href=\\\"System.Security.Cryptography.Pkcs.RecipientInfoCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> collection to a <xref href=\\\"System.Security.Cryptography.Pkcs.RecipientInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> array.</p>\\n\"\n  syntax:\n    content: public void CopyTo(RecipientInfo[] array, int index)\n    content.vb: Public Sub CopyTo(array As RecipientInfo(), index As Integer)\n    parameters:\n    - id: array\n      type: System.Security.Cryptography.Pkcs.RecipientInfo[]\n      description: \"\\n<p>An array of <xref href=\\\"System.Security.Cryptography.Pkcs.RecipientInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects where the <xref href=\\\"System.Security.Cryptography.Pkcs.RecipientInfoCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> collection is to be copied.</p>\\n\"\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The zero-based index in <em>array</em> where the <xref href=\\\"System.Security.Cryptography.Pkcs.RecipientInfoCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> collection is copied.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>One of the arguments provided to a method was not valid.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>A null reference was passed to a method that does not accept it as a valid argument. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The value of an argument was outside the allowable range of values as defined by the called method.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.RecipientInfo(), System.Int32)\n  name.vb: CopyTo(RecipientInfo(), Int32)\n  nameWithType: RecipientInfoCollection.CopyTo(RecipientInfo[], Int32)\n  nameWithType.vb: RecipientInfoCollection.CopyTo(RecipientInfo(), Int32)\n- uid: System.Security.Cryptography.Pkcs.RecipientInfoCollection.GetEnumerator\n  commentId: M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Security.Cryptography.Pkcs.RecipientInfoCollection\n  langs:\n  - csharp\n  - vb\n  name: GetEnumerator()\n  fullName: System.Security.Cryptography.Pkcs.RecipientInfoCollection.GetEnumerator()\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetEnumerator\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 198\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.RecipientInfoCollection.GetEnumerator\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method returns a <xref href=\\\"System.Security.Cryptography.Pkcs.RecipientInfoEnumerator\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object for the <xref href=\\\"System.Security.Cryptography.Pkcs.RecipientInfoCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> collection.</p>\\n\"\n  syntax:\n    content: public RecipientInfoEnumerator GetEnumerator()\n    content.vb: Public Function GetEnumerator As RecipientInfoEnumerator\n    return:\n      type: System.Security.Cryptography.Pkcs.RecipientInfoEnumerator\n      description: \"\\n<p>A <xref href=\\\"System.Security.Cryptography.Pkcs.RecipientInfoEnumerator\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that can be used to enumerate the <xref href=\\\"System.Security.Cryptography.Pkcs.RecipientInfoCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> collection.</p>\\n\"\n  seealso:\n  - type: System.Security.Cryptography.Pkcs.RecipientInfoEnumerator\n    commentId: T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RecipientInfoCollection.GetEnumerator()\n- uid: System.Security.Cryptography.Pkcs.RecipientInfoCollection.System#Collections#IEnumerable#GetEnumerator\n  commentId: M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Security.Cryptography.Pkcs.RecipientInfoCollection\n  langs:\n  - csharp\n  - vb\n  name: IEnumerable.GetEnumerator()\n  fullName: System.Security.Cryptography.Pkcs.RecipientInfoCollection.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IEnumerable.GetEnumerator\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 199\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.RecipientInfoCollection.System#Collections#IEnumerable#GetEnumerator\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method returns a <xref href=\\\"System.Security.Cryptography.Pkcs.RecipientInfoEnumerator\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object for the <xref href=\\\"System.Security.Cryptography.Pkcs.RecipientInfoCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> collection.</p>\\n\"\n  syntax:\n    content: IEnumerator IEnumerable.GetEnumerator()\n    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator\n    return:\n      type: System.Collections.IEnumerator\n      description: \"\\n<p>A <xref href=\\\"System.Security.Cryptography.Pkcs.RecipientInfoEnumerator\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that can be used to enumerate the <xref href=\\\"System.Security.Cryptography.Pkcs.RecipientInfoCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> collection.</p>\\n\"\n  seealso:\n  - type: System.Security.Cryptography.Pkcs.RecipientInfoCollection\n    commentId: T:System.Security.Cryptography.Pkcs.RecipientInfoCollection\n  implements:\n  - System.Collections.IEnumerable.GetEnumerator\n  name.vb: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: RecipientInfoCollection.IEnumerable.GetEnumerator()\n  nameWithType.vb: RecipientInfoCollection.System.Collections.IEnumerable.GetEnumerator()\nreferences:\n- uid: System.Security.Cryptography.Pkcs\n  isExternal: false\n  name: System.Security.Cryptography.Pkcs\n  fullName: System.Security.Cryptography.Pkcs\n  commentId: N:System.Security.Cryptography.Pkcs\n  nameWithType: System.Security.Cryptography.Pkcs\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: false\n  name: ICollection\n  fullName: System.Collections.ICollection\n  commentId: T:System.Collections.ICollection\n  nameWithType: ICollection\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerable\n  fullName: System.Collections.IEnumerable\n  commentId: T:System.Collections.IEnumerable\n  nameWithType: IEnumerable\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable\n  parent: System.Linq.Queryable\n  definition: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  name: AsQueryable()\n  fullName: System.Linq.Queryable.AsQueryable()\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  nameWithType: Queryable.AsQueryable()\n- uid: System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel\n  parent: System.Linq.ParallelEnumerable\n  definition: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  name: AsParallel()\n  fullName: System.Linq.ParallelEnumerable.AsParallel()\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel()\n- uid: System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  name: Cast<TResult>()\n  fullName: System.Linq.Enumerable.Cast<TResult>()\n  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)()\n  name.vb: Cast(Of TResult)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Cast``1\n    name: Cast<TResult>\n    fullName: System.Linq.Enumerable.Cast<TResult>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Cast``1\n    name: Cast(Of TResult)\n    fullName: System.Linq.Enumerable.Cast(Of TResult)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>()\n  nameWithType.vb: Enumerable.Cast(Of TResult)()\n- uid: System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  name: OfType<TResult>()\n  fullName: System.Linq.Enumerable.OfType<TResult>()\n  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)()\n  name.vb: OfType(Of TResult)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OfType``1\n    name: OfType<TResult>\n    fullName: System.Linq.Enumerable.OfType<TResult>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OfType``1\n    name: OfType(Of TResult)\n    fullName: System.Linq.Enumerable.OfType(Of TResult)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>()\n  nameWithType.vb: Enumerable.OfType(Of TResult)()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Collections\n  isExternal: false\n  name: System.Collections\n  fullName: System.Collections\n  commentId: N:System.Collections\n  nameWithType: System.Collections\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  isExternal: true\n  name: AsQueryable(IEnumerable)\n  fullName: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n- uid: System.Linq.Queryable\n  parent: System.Linq\n  isExternal: false\n  name: Queryable\n  fullName: System.Linq.Queryable\n  commentId: T:System.Linq.Queryable\n  nameWithType: Queryable\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  isExternal: true\n  name: AsParallel(IEnumerable)\n  fullName: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.ParallelEnumerable\n  parent: System.Linq\n  isExternal: false\n  name: ParallelEnumerable\n  fullName: System.Linq.ParallelEnumerable\n  commentId: T:System.Linq.ParallelEnumerable\n  nameWithType: ParallelEnumerable\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  isExternal: true\n  name: Cast<TResult>(IEnumerable)\n  fullName: System.Linq.Enumerable.Cast<TResult>(System.Collections.IEnumerable)\n  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)(System.Collections.IEnumerable)\n  name.vb: Cast(Of TResult)(IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n    name: Cast<TResult>\n    fullName: System.Linq.Enumerable.Cast<TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n    name: Cast(Of TResult)\n    fullName: System.Linq.Enumerable.Cast(Of TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  nameWithType.vb: Enumerable.Cast(Of TResult)(IEnumerable)\n- uid: System.Linq.Enumerable\n  parent: System.Linq\n  isExternal: false\n  name: Enumerable\n  fullName: System.Linq.Enumerable\n  commentId: T:System.Linq.Enumerable\n  nameWithType: Enumerable\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  isExternal: true\n  name: OfType<TResult>(IEnumerable)\n  fullName: System.Linq.Enumerable.OfType<TResult>(System.Collections.IEnumerable)\n  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)(System.Collections.IEnumerable)\n  name.vb: OfType(Of TResult)(IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n    name: OfType<TResult>\n    fullName: System.Linq.Enumerable.OfType<TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n    name: OfType(Of TResult)\n    fullName: System.Linq.Enumerable.OfType(Of TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  nameWithType.vb: Enumerable.OfType(Of TResult)(IEnumerable)\n- uid: System.Linq\n  isExternal: false\n  name: System.Linq\n  fullName: System.Linq\n  commentId: N:System.Linq\n  nameWithType: System.Linq\n- uid: System.Collections.ICollection.Count\n  parent: System.Collections.ICollection\n  isExternal: false\n  name: Count\n  fullName: System.Collections.ICollection.Count\n  commentId: P:System.Collections.ICollection.Count\n  nameWithType: ICollection.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.Security.Cryptography.Pkcs.RecipientInfo\n  parent: System.Security.Cryptography.Pkcs\n  isExternal: false\n  name: RecipientInfo\n  fullName: System.Security.Cryptography.Pkcs.RecipientInfo\n  commentId: T:System.Security.Cryptography.Pkcs.RecipientInfo\n  nameWithType: RecipientInfo\n- uid: System.Collections.ICollection.IsSynchronized\n  parent: System.Collections.ICollection\n  isExternal: false\n  name: IsSynchronized\n  fullName: System.Collections.ICollection.IsSynchronized\n  commentId: P:System.Collections.ICollection.IsSynchronized\n  nameWithType: ICollection.IsSynchronized\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Collections.ICollection.SyncRoot\n  parent: System.Collections.ICollection\n  isExternal: false\n  name: SyncRoot\n  fullName: System.Collections.ICollection.SyncRoot\n  commentId: P:System.Collections.ICollection.SyncRoot\n  nameWithType: ICollection.SyncRoot\n- uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n  parent: System.Collections.ICollection\n  isExternal: true\n  name: CopyTo(Array, Int32)\n  fullName: System.Collections.ICollection.CopyTo(System.Array, System.Int32)\n  spec.csharp:\n  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n    name: CopyTo\n    fullName: System.Collections.ICollection.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.Array\n    name: Array\n    fullName: System.Array\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n    name: CopyTo\n    fullName: System.Collections.ICollection.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.Array\n    name: Array\n    fullName: System.Array\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n  nameWithType: ICollection.CopyTo(Array, Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  fullName: System.Array\n  commentId: T:System.Array\n  nameWithType: Array\n- uid: System.Security.Cryptography.Pkcs.RecipientInfo[]\n  name: RecipientInfo[]\n  fullName: System.Security.Cryptography.Pkcs.RecipientInfo[]\n  fullname.vb: System.Security.Cryptography.Pkcs.RecipientInfo()\n  name.vb: RecipientInfo()\n  spec.csharp:\n  - uid: System.Security.Cryptography.Pkcs.RecipientInfo\n    name: RecipientInfo\n    fullName: System.Security.Cryptography.Pkcs.RecipientInfo\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Security.Cryptography.Pkcs.RecipientInfo\n    name: RecipientInfo\n    fullName: System.Security.Cryptography.Pkcs.RecipientInfo\n  - name: ()\n    fullName: ()\n  nameWithType: RecipientInfo[]\n  nameWithType.vb: RecipientInfo()\n- uid: System.Security.Cryptography.Pkcs.RecipientInfoEnumerator\n  parent: System.Security.Cryptography.Pkcs\n  isExternal: false\n  name: RecipientInfoEnumerator\n  fullName: System.Security.Cryptography.Pkcs.RecipientInfoEnumerator\n  commentId: T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator\n  nameWithType: RecipientInfoEnumerator\n- uid: System.Collections.IEnumerable.GetEnumerator\n  parent: System.Collections.IEnumerable\n  isExternal: false\n  name: GetEnumerator()\n  fullName: System.Collections.IEnumerable.GetEnumerator()\n  spec.csharp:\n  - uid: System.Collections.IEnumerable.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.IEnumerable.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IEnumerable.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.IEnumerable.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.IEnumerable.GetEnumerator\n  nameWithType: IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  fullName: System.Collections.IEnumerator\n  commentId: T:System.Collections.IEnumerator\n  nameWithType: IEnumerator\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n"}