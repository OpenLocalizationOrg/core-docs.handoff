{"nodes":[{"pos":[1148,1165],"content":"XStreamingElement","needQuote":true,"nodes":[{"content":"XStreamingElement","pos":[0,17]}]},{"pos":[2436,2460],"content":"XStreamingElement(XName)","needQuote":true,"nodes":[{"content":"XStreamingElement(XName)","pos":[0,24]}]},{"pos":[3890,3922],"content":"XStreamingElement(XName, Object)","needQuote":true,"nodes":[{"content":"XStreamingElement(XName, Object)","pos":[0,32]}]},{"content":"\\n&lt;p&gt;The contents of the element.&lt;/p&gt;\\n","pos":[4980,5019],"source":"\\n<p>The contents of the element.</p>\\n"},{"pos":[5458,5492],"content":"XStreamingElement(XName, Object[])","needQuote":true,"nodes":[{"content":"XStreamingElement(XName, Object[])","pos":[0,34]}]},{"content":"\\n&lt;p&gt;The contents of the element.&lt;/p&gt;\\n","pos":[6576,6615],"source":"\\n<p>The contents of the element.</p>\\n"},{"pos":[7159,7163],"content":"Name","needQuote":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[8303,8314],"content":"Add(Object)","needQuote":true,"nodes":[{"content":"Add(Object)","pos":[0,11]}]},{"content":"\\n&lt;p&gt;Content to be added to the streaming element.&lt;/p&gt;\\n","pos":[9065,9121],"source":"\\n<p>Content to be added to the streaming element.</p>\\n"},{"pos":[9465,9478],"content":"Add(Object[])","needQuote":true,"nodes":[{"content":"Add(Object[])","pos":[0,13]}]},{"content":"\\n&lt;p&gt;Content to be added to the streaming element.&lt;/p&gt;\\n","pos":[10255,10311],"source":"\\n<p>Content to be added to the streaming element.</p>\\n"},{"pos":[10809,10821],"content":"Save(Stream)","needQuote":true,"nodes":[{"content":"Save(Stream)","pos":[0,12]}]},{"pos":[12200,12225],"content":"Save(Stream, SaveOptions)","needQuote":true,"nodes":[{"content":"Save(Stream, SaveOptions)","pos":[0,25]}]},{"pos":[13885,13901],"content":"Save(TextWriter)","needQuote":true,"nodes":[{"content":"Save(TextWriter)","pos":[0,16]}]},{"pos":[15332,15361],"content":"Save(TextWriter, SaveOptions)","needQuote":true,"nodes":[{"content":"Save(TextWriter, SaveOptions)","pos":[0,29]}]},{"pos":[16945,16960],"content":"Save(XmlWriter)","needQuote":true,"nodes":[{"content":"Save(XmlWriter)","pos":[0,15]}]},{"pos":[18230,18240],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[19475,19496],"content":"ToString(SaveOptions)","needQuote":true,"nodes":[{"content":"ToString(SaveOptions)","pos":[0,21]}]},{"pos":[20940,20958],"content":"WriteTo(XmlWriter)","needQuote":true,"nodes":[{"content":"WriteTo(XmlWriter)","pos":[0,18]}]},{"pos":[22023,22038],"content":"System.Xml.Linq","needQuote":true,"nodes":[{"content":"System.Xml.Linq","pos":[0,15]}]},{"pos":[22196,22202],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22375,22389],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[22508,22514],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[22581,22582],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22632,22638],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22698,22699],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22782,22788],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[22855,22856],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22906,22912],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22972,22973],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23187,23209],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[23357,23363],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[23430,23431],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23481,23487],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[23548,23549]},{"pos":[23604,23610],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23670,23671],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23768,23774],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[23841,23842],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23892,23898],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[23959,23960]},{"pos":[24015,24021],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24081,24082],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24327,24358],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[24524,24539],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[24615,24616],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24666,24672],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[24733,24734]},{"pos":[24789,24795],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24855,24856],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24962,24977],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[25053,25054],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25104,25110],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[25171,25172]},{"pos":[25227,25233],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[25293,25294],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25524,25537],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[25638,25649],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[25721,25722],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25749,25750],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25823,25834],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[25906,25907],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25934,25935],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26110,26119],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[26212,26219],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[26287,26288],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26315,26316],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26385,26392],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[26460,26461],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26488,26489],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26664,26681],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[26790,26805],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[26881,26882],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26909,26910],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26987,27002],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[27078,27079],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27106,27107],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27252,27258],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[27406,27411],"content":"XName","needQuote":true,"nodes":[{"content":"XName","pos":[0,5]}]},{"pos":[27536,27544],"content":"Object[]","needQuote":true,"nodes":[{"content":"Object[]","pos":[0,8]}]},{"pos":[27672,27678],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[27739,27741]},{"pos":[27806,27812],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[27872,27874],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[28017,28023],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[28153,28162],"content":"System.IO","needQuote":true,"nodes":[{"content":"System.IO","pos":[0,9]}]},{"pos":[28325,28336],"content":"SaveOptions","needQuote":true,"nodes":[{"content":"SaveOptions","pos":[0,11]}]},{"pos":[28524,28534],"content":"TextWriter","needQuote":true,"nodes":[{"content":"TextWriter","pos":[0,10]}]},{"pos":[28708,28717],"content":"XmlWriter","needQuote":true,"nodes":[{"content":"XmlWriter","pos":[0,9]}]},{"pos":[28859,28869],"content":"System.Xml","needQuote":true,"nodes":[{"content":"System.Xml","pos":[0,10]}]},{"pos":[29027,29037],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[29132,29140],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[29209,29210],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29237,29238],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29308,29316],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[29385,29386],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29413,29414],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29569,29575],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"items:\n- uid: System.Xml.Linq.XStreamingElement\n  commentId: T:System.Xml.Linq.XStreamingElement\n  id: XStreamingElement\n  parent: System.Xml.Linq\n  children:\n  - System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName)\n  - System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName,System.Object)\n  - System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName,System.Object[])\n  - System.Xml.Linq.XStreamingElement.Add(System.Object)\n  - System.Xml.Linq.XStreamingElement.Add(System.Object[])\n  - System.Xml.Linq.XStreamingElement.Name\n  - System.Xml.Linq.XStreamingElement.Save(System.IO.Stream)\n  - System.Xml.Linq.XStreamingElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)\n  - System.Xml.Linq.XStreamingElement.Save(System.IO.TextWriter)\n  - System.Xml.Linq.XStreamingElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)\n  - System.Xml.Linq.XStreamingElement.Save(System.Xml.XmlWriter)\n  - System.Xml.Linq.XStreamingElement.ToString\n  - System.Xml.Linq.XStreamingElement.ToString(System.Xml.Linq.SaveOptions)\n  - System.Xml.Linq.XStreamingElement.WriteTo(System.Xml.XmlWriter)\n  langs:\n  - csharp\n  - vb\n  name: XStreamingElement\n  fullName: System.Xml.Linq.XStreamingElement\n  type: Class\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: XStreamingElement\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 433\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Represents elements in an XML tree that supports deferred streaming output.</p>\\n\"\n  syntax:\n    content: public class XStreamingElement\n    content.vb: Public Class XStreamingElement\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: XStreamingElement\n- uid: System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName)\n  commentId: M:System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName)\n  id: '#ctor(System.Xml.Linq.XName)'\n  parent: System.Xml.Linq.XStreamingElement\n  langs:\n  - csharp\n  - vb\n  name: XStreamingElement(XName)\n  fullName: System.Xml.Linq.XStreamingElement.XStreamingElement(System.Xml.Linq.XName)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 435\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class from the specified <xref href=\\\"System.Xml.Linq.XName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public XStreamingElement(XName name)\n    content.vb: Public Sub New(name As XName)\n    parameters:\n    - id: name\n      type: System.Xml.Linq.XName\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the name of the element.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XStreamingElement.XStreamingElement(XName)\n- uid: System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName,System.Object)\n  commentId: M:System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName,System.Object)\n  id: '#ctor(System.Xml.Linq.XName,System.Object)'\n  parent: System.Xml.Linq.XStreamingElement\n  langs:\n  - csharp\n  - vb\n  name: XStreamingElement(XName, Object)\n  fullName: System.Xml.Linq.XStreamingElement.XStreamingElement(System.Xml.Linq.XName, System.Object)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 436\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Xml.Linq.XStreamingElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified name and content.</p>\\n\"\n  syntax:\n    content: public XStreamingElement(XName name, object content)\n    content.vb: Public Sub New(name As XName, content As Object)\n    parameters:\n    - id: name\n      type: System.Xml.Linq.XName\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the element name.</p>\\n\"\n    - id: content\n      type: System.Object\n      description: \"\\n<p>The contents of the element.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XStreamingElement.XStreamingElement(XName, Object)\n- uid: System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName,System.Object[])\n  commentId: M:System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName,System.Object[])\n  id: '#ctor(System.Xml.Linq.XName,System.Object[])'\n  parent: System.Xml.Linq.XStreamingElement\n  langs:\n  - csharp\n  - vb\n  name: XStreamingElement(XName, Object[])\n  fullName: System.Xml.Linq.XStreamingElement.XStreamingElement(System.Xml.Linq.XName, System.Object[])\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 437\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Xml.Linq.XStreamingElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified name and content.</p>\\n\"\n  syntax:\n    content: public XStreamingElement(XName name, params object[] content)\n    content.vb: Public Sub New(name As XName, ParamArray content As Object())\n    parameters:\n    - id: name\n      type: System.Xml.Linq.XName\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the element name.</p>\\n\"\n    - id: content\n      type: System.Object[]\n      description: \"\\n<p>The contents of the element.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Xml.Linq.XStreamingElement.XStreamingElement(System.Xml.Linq.XName, System.Object())\n  name.vb: XStreamingElement(XName, Object())\n  nameWithType: XStreamingElement.XStreamingElement(XName, Object[])\n  nameWithType.vb: XStreamingElement.XStreamingElement(XName, Object())\n- uid: System.Xml.Linq.XStreamingElement.Name\n  commentId: P:System.Xml.Linq.XStreamingElement.Name\n  id: Name\n  parent: System.Xml.Linq.XStreamingElement\n  langs:\n  - csharp\n  - vb\n  name: Name\n  fullName: System.Xml.Linq.XStreamingElement.Name\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Name\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 438\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Gets or sets the name of this streaming element.</p>\\n\"\n  syntax:\n    content: public XName Name { get; set; }\n    content.vb: Public Property Name As XName\n    parameters: []\n    return:\n      type: System.Xml.Linq.XName\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the name of this streaming element.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: XStreamingElement.Name\n- uid: System.Xml.Linq.XStreamingElement.Add(System.Object)\n  commentId: M:System.Xml.Linq.XStreamingElement.Add(System.Object)\n  id: Add(System.Object)\n  parent: System.Xml.Linq.XStreamingElement\n  langs:\n  - csharp\n  - vb\n  name: Add(Object)\n  fullName: System.Xml.Linq.XStreamingElement.Add(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Add\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 439\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Adds the specified content as children to this <xref href=\\\"System.Xml.Linq.XStreamingElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void Add(object content)\n    content.vb: Public Sub Add(content As Object)\n    parameters:\n    - id: content\n      type: System.Object\n      description: \"\\n<p>Content to be added to the streaming element.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XStreamingElement.Add(Object)\n- uid: System.Xml.Linq.XStreamingElement.Add(System.Object[])\n  commentId: M:System.Xml.Linq.XStreamingElement.Add(System.Object[])\n  id: Add(System.Object[])\n  parent: System.Xml.Linq.XStreamingElement\n  langs:\n  - csharp\n  - vb\n  name: Add(Object[])\n  fullName: System.Xml.Linq.XStreamingElement.Add(System.Object[])\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Add\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 440\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Adds the specified content as children to this <xref href=\\\"System.Xml.Linq.XStreamingElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void Add(params object[] content)\n    content.vb: Public Sub Add(ParamArray content As Object())\n    parameters:\n    - id: content\n      type: System.Object[]\n      description: \"\\n<p>Content to be added to the streaming element.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Xml.Linq.XStreamingElement.Add(System.Object())\n  name.vb: Add(Object())\n  nameWithType: XStreamingElement.Add(Object[])\n  nameWithType.vb: XStreamingElement.Add(Object())\n- uid: System.Xml.Linq.XStreamingElement.Save(System.IO.Stream)\n  commentId: M:System.Xml.Linq.XStreamingElement.Save(System.IO.Stream)\n  id: Save(System.IO.Stream)\n  parent: System.Xml.Linq.XStreamingElement\n  langs:\n  - csharp\n  - vb\n  name: Save(Stream)\n  fullName: System.Xml.Linq.XStreamingElement.Save(System.IO.Stream)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Save\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 441\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Outputs this <xref href=\\\"System.Xml.Linq.XStreamingElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to the specified <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void Save(Stream stream)\n    content.vb: Public Sub Save(stream As Stream)\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: \"\\n<p>The stream to output this <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XStreamingElement.Save(Stream)\n- uid: System.Xml.Linq.XStreamingElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)\n  commentId: M:System.Xml.Linq.XStreamingElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)\n  id: Save(System.IO.Stream,System.Xml.Linq.SaveOptions)\n  parent: System.Xml.Linq.XStreamingElement\n  langs:\n  - csharp\n  - vb\n  name: Save(Stream, SaveOptions)\n  fullName: System.Xml.Linq.XStreamingElement.Save(System.IO.Stream, System.Xml.Linq.SaveOptions)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Save\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 442\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Outputs this <xref href=\\\"System.Xml.Linq.XStreamingElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to the specified <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, optionally specifying formatting behavior.</p>\\n\"\n  syntax:\n    content: public void Save(Stream stream, SaveOptions options)\n    content.vb: Public Sub Save(stream As Stream, options As SaveOptions)\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: \"\\n<p>The stream to output this <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to.</p>\\n\"\n    - id: options\n      type: System.Xml.Linq.SaveOptions\n      description: \"\\n<p>A <xref href=\\\"System.Xml.Linq.SaveOptions\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that specifies formatting behavior.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XStreamingElement.Save(Stream, SaveOptions)\n- uid: System.Xml.Linq.XStreamingElement.Save(System.IO.TextWriter)\n  commentId: M:System.Xml.Linq.XStreamingElement.Save(System.IO.TextWriter)\n  id: Save(System.IO.TextWriter)\n  parent: System.Xml.Linq.XStreamingElement\n  langs:\n  - csharp\n  - vb\n  name: Save(TextWriter)\n  fullName: System.Xml.Linq.XStreamingElement.Save(System.IO.TextWriter)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Save\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 443\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Serialize this streaming element to a <xref href=\\\"System.IO.TextWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void Save(TextWriter textWriter)\n    content.vb: Public Sub Save(textWriter As TextWriter)\n    parameters:\n    - id: textWriter\n      type: System.IO.TextWriter\n      description: \"\\n<p>A <xref href=\\\"System.IO.TextWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that the <xref href=\\\"System.Xml.Linq.XStreamingElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will be written to.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XStreamingElement.Save(TextWriter)\n- uid: System.Xml.Linq.XStreamingElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)\n  commentId: M:System.Xml.Linq.XStreamingElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)\n  id: Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)\n  parent: System.Xml.Linq.XStreamingElement\n  langs:\n  - csharp\n  - vb\n  name: Save(TextWriter, SaveOptions)\n  fullName: System.Xml.Linq.XStreamingElement.Save(System.IO.TextWriter, System.Xml.Linq.SaveOptions)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Save\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 444\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Serialize this streaming element to a <xref href=\\\"System.IO.TextWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, optionally disabling formatting.</p>\\n\"\n  syntax:\n    content: public void Save(TextWriter textWriter, SaveOptions options)\n    content.vb: Public Sub Save(textWriter As TextWriter, options As SaveOptions)\n    parameters:\n    - id: textWriter\n      type: System.IO.TextWriter\n      description: \"\\n<p>The <xref href=\\\"System.IO.TextWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to output the XML to.</p>\\n\"\n    - id: options\n      type: System.Xml.Linq.SaveOptions\n      description: \"\\n<p>A <xref href=\\\"System.Xml.Linq.SaveOptions\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that specifies formatting behavior.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XStreamingElement.Save(TextWriter, SaveOptions)\n- uid: System.Xml.Linq.XStreamingElement.Save(System.Xml.XmlWriter)\n  commentId: M:System.Xml.Linq.XStreamingElement.Save(System.Xml.XmlWriter)\n  id: Save(System.Xml.XmlWriter)\n  parent: System.Xml.Linq.XStreamingElement\n  langs:\n  - csharp\n  - vb\n  name: Save(XmlWriter)\n  fullName: System.Xml.Linq.XStreamingElement.Save(System.Xml.XmlWriter)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Save\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 445\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Serialize this streaming element to an <xref href=\\\"System.Xml.XmlWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void Save(XmlWriter writer)\n    content.vb: Public Sub Save(writer As XmlWriter)\n    parameters:\n    - id: writer\n      type: System.Xml.XmlWriter\n      description: \"\\n<p>A <xref href=\\\"System.Xml.XmlWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that the <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will be written to.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XStreamingElement.Save(XmlWriter)\n- uid: System.Xml.Linq.XStreamingElement.ToString\n  commentId: M:System.Xml.Linq.XStreamingElement.ToString\n  id: ToString\n  parent: System.Xml.Linq.XStreamingElement\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.Xml.Linq.XStreamingElement.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToString\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 446\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Returns the formatted (indented) XML for this streaming element.</p>\\n\"\n  syntax:\n    content: public override string ToString()\n    content.vb: Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the indented XML.</p>\\n\"\n  overridden: System.Object.ToString\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: XStreamingElement.ToString()\n- uid: System.Xml.Linq.XStreamingElement.ToString(System.Xml.Linq.SaveOptions)\n  commentId: M:System.Xml.Linq.XStreamingElement.ToString(System.Xml.Linq.SaveOptions)\n  id: ToString(System.Xml.Linq.SaveOptions)\n  parent: System.Xml.Linq.XStreamingElement\n  langs:\n  - csharp\n  - vb\n  name: ToString(SaveOptions)\n  fullName: System.Xml.Linq.XStreamingElement.ToString(System.Xml.Linq.SaveOptions)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToString\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 447\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Returns the XML for this streaming element, optionally disabling formatting.</p>\\n\"\n  syntax:\n    content: public string ToString(SaveOptions options)\n    content.vb: Public Function ToString(options As SaveOptions) As String\n    parameters:\n    - id: options\n      type: System.Xml.Linq.SaveOptions\n      description: \"\\n<p>A <xref href=\\\"System.Xml.Linq.SaveOptions\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that specifies formatting behavior.</p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the XML.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XStreamingElement.ToString(SaveOptions)\n- uid: System.Xml.Linq.XStreamingElement.WriteTo(System.Xml.XmlWriter)\n  commentId: M:System.Xml.Linq.XStreamingElement.WriteTo(System.Xml.XmlWriter)\n  id: WriteTo(System.Xml.XmlWriter)\n  parent: System.Xml.Linq.XStreamingElement\n  langs:\n  - csharp\n  - vb\n  name: WriteTo(XmlWriter)\n  fullName: System.Xml.Linq.XStreamingElement.WriteTo(System.Xml.XmlWriter)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteTo\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 448\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Writes this streaming element to an <xref href=\\\"System.Xml.XmlWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void WriteTo(XmlWriter writer)\n    content.vb: Public Sub WriteTo(writer As XmlWriter)\n    parameters:\n    - id: writer\n      type: System.Xml.XmlWriter\n      description: \"\\n<p>An <xref href=\\\"System.Xml.XmlWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> into which this method will write.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XStreamingElement.WriteTo(XmlWriter)\nreferences:\n- uid: System.Xml.Linq\n  isExternal: false\n  name: System.Xml.Linq\n  fullName: System.Xml.Linq\n  commentId: N:System.Xml.Linq\n  nameWithType: System.Xml.Linq\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Xml.Linq.XName\n  parent: System.Xml.Linq\n  isExternal: false\n  name: XName\n  fullName: System.Xml.Linq.XName\n  commentId: T:System.Xml.Linq.XName\n  nameWithType: XName\n- uid: System.Object[]\n  name: Object[]\n  fullName: System.Object[]\n  fullname.vb: System.Object()\n  name.vb: Object()\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Object[]\n  nameWithType.vb: Object()\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  fullName: System.IO.Stream\n  commentId: T:System.IO.Stream\n  nameWithType: Stream\n- uid: System.IO\n  isExternal: false\n  name: System.IO\n  fullName: System.IO\n  commentId: N:System.IO\n  nameWithType: System.IO\n- uid: System.Xml.Linq.SaveOptions\n  parent: System.Xml.Linq\n  isExternal: false\n  name: SaveOptions\n  fullName: System.Xml.Linq.SaveOptions\n  commentId: T:System.Xml.Linq.SaveOptions\n  nameWithType: SaveOptions\n- uid: System.IO.TextWriter\n  parent: System.IO\n  isExternal: false\n  name: TextWriter\n  fullName: System.IO.TextWriter\n  commentId: T:System.IO.TextWriter\n  nameWithType: TextWriter\n- uid: System.Xml.XmlWriter\n  parent: System.Xml\n  isExternal: false\n  name: XmlWriter\n  fullName: System.Xml.XmlWriter\n  commentId: T:System.Xml.XmlWriter\n  nameWithType: XmlWriter\n- uid: System.Xml\n  isExternal: false\n  name: System.Xml\n  fullName: System.Xml\n  commentId: N:System.Xml\n  nameWithType: System.Xml\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n"}