{"nodes":[{"pos":[1603,1614],"content":"PackagePart","needQuote":true,"nodes":[{"content":"PackagePart","pos":[0,11]}]},{"pos":[3061,3086],"content":"PackagePart(Package, Uri)","needQuote":true,"nodes":[{"content":"PackagePart(Package, Uri)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;package&lt;/em&gt; or &lt;em&gt;partUri&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[4508,4583],"source":"\\n<p>\\n<em>package</em> or <em>partUri</em> is <strong>null</strong>.</p>\\n"},{"pos":[5323,5356],"content":"PackagePart(Package, Uri, String)","needQuote":true,"nodes":[{"content":"PackagePart(Package, Uri, String)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;The MIME content type of the part data stream.&lt;/p&gt;\\n","pos":[6807,6864],"source":"\\n<p>The MIME content type of the part data stream.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;package&lt;/em&gt; or &lt;em&gt;partUri&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[6983,7058],"source":"\\n<p>\\n<em>package</em> or <em>partUri</em> is <strong>null</strong>.</p>\\n"},{"pos":[8158,8210],"content":"PackagePart(Package, Uri, String, CompressionOption)","needQuote":true,"nodes":[{"content":"PackagePart(Package, Uri, String, CompressionOption)","pos":[0,52]}]},{"content":"\\n&lt;p&gt;The MIME content type of the part's data stream.&lt;/p&gt;\\n","pos":[9876,9935],"source":"\\n<p>The MIME content type of the part's data stream.</p>\\n"},{"content":"\\n&lt;p&gt;The compression option of the part data stream.&lt;/p&gt;\\n","pos":[10035,10093],"source":"\\n<p>The compression option of the part data stream.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;package&lt;/em&gt; or &lt;em&gt;partUri&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[10212,10287],"source":"\\n<p>\\n<em>package</em> or <em>partUri</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;compressionOption&lt;/em&gt; value is not valid.&lt;/p&gt;\\n","pos":[10642,10703],"source":"\\n<p>The <em>compressionOption</em> value is not valid.</p>\\n"},{"pos":[11342,11359],"content":"CompressionOption","needQuote":true,"nodes":[{"content":"CompressionOption","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The compression option of the part content stream.&lt;/p&gt;\\n","pos":[12106,12167],"source":"\\n<p>The compression option of the part content stream.</p>\\n"},{"pos":[13150,13161],"content":"ContentType","needQuote":true,"nodes":[{"content":"ContentType","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The MIME type of the content data stream for the part.&lt;/p&gt;\\n","pos":[13824,13889],"source":"\\n<p>The MIME type of the content data stream for the part.</p>\\n"},{"pos":[15044,15051],"content":"Package","needQuote":true,"nodes":[{"content":"Package","pos":[0,7]}]},{"content":"\\n&lt;p&gt;The parent package of the part.&lt;/p&gt;\\n","pos":[15789,15831],"source":"\\n<p>The parent package of the part.</p>\\n"},{"pos":[16658,16661],"content":"Uri","needQuote":true,"nodes":[{"content":"Uri","pos":[0,3]}]},{"content":"\\n&lt;p&gt;The URI of the part relative to the package root.&lt;/p&gt;\\n","pos":[17267,17327],"source":"\\n<p>The URI of the part relative to the package root.</p>\\n"},{"pos":[18695,18738],"content":"CreateRelationship(Uri, TargetMode, String)","needQuote":true,"nodes":[{"content":"CreateRelationship(Uri, TargetMode, String)","pos":[0,43]}]},{"content":"\\n&lt;p&gt;The URI of the target part.&lt;/p&gt;\\n","pos":[19864,19902],"source":"\\n<p>The URI of the target part.</p>\\n"},{"content":"\\n&lt;p&gt;The role of the relationship.&lt;/p&gt;\\n","pos":[20571,20611],"source":"\\n<p>The role of the relationship.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;targetUri&lt;/em&gt; or &lt;em&gt;relationshipType&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[21602,21688],"source":"\\n<p>\\n<em>targetUri</em> or <em>relationshipType</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The package is read-only (a new relationship cannot be added).&lt;/p&gt;\\n","pos":[22510,22583],"source":"\\n<p>The package is read-only (a new relationship cannot be added).</p>\\n"},{"pos":[24004,24055],"content":"CreateRelationship(Uri, TargetMode, String, String)","needQuote":true,"nodes":[{"content":"CreateRelationship(Uri, TargetMode, String, String)","pos":[0,51]}]},{"content":"\\n&lt;p&gt;The URI of the target part.&lt;/p&gt;\\n","pos":[25221,25259],"source":"\\n<p>The URI of the target part.</p>\\n"},{"content":"\\n&lt;p&gt;The role of the relationship.&lt;/p&gt;\\n","pos":[25928,25968],"source":"\\n<p>The role of the relationship.</p>\\n"},{"content":"\\n&lt;p&gt;A unique ID for the relationship.&lt;/p&gt;\\n","pos":[26029,26073],"source":"\\n<p>A unique ID for the relationship.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;targetUri&lt;/em&gt; or &lt;em&gt;relationshipType&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[27064,27150],"source":"\\n<p>\\n<em>targetUri</em> or <em>relationshipType</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The package is read-only (a new relationship cannot be added).&lt;/p&gt;\\n","pos":[27972,28045],"source":"\\n<p>The package is read-only (a new relationship cannot be added).</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;id&lt;/em&gt; is not a valid XML identifier.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;A part with the specified &lt;em&gt;id&lt;/em&gt; already exists.&lt;/p&gt;\\n","pos":[28140,28270],"source":"\\n<p>\\n<em>id</em> is not a valid XML identifier.</p>\\n<p>-or-</p>\\n<p>A part with the specified <em>id</em> already exists.</p>\\n"},{"pos":[29531,29557],"content":"DeleteRelationship(String)","needQuote":true,"nodes":[{"content":"DeleteRelationship(String)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;id&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[31121,31171],"source":"\\n<p>\\n<em>id</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The package is read-only (relationships cannot be deleted).&lt;/p&gt;\\n","pos":[31262,31332],"source":"\\n<p>The package is read-only (relationships cannot be deleted).</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;id&lt;/em&gt; is not a valid XML identifier.&lt;/p&gt;\\n","pos":[31427,31482],"source":"\\n<p>\\n<em>id</em> is not a valid XML identifier.</p>\\n"},{"pos":[32681,32701],"content":"GetContentTypeCore()","needQuote":true,"nodes":[{"content":"GetContentTypeCore()","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The MIME type of the part content.&lt;/p&gt;\\n","pos":[33420,33465],"source":"\\n<p>The MIME type of the part content.</p>\\n"},{"pos":[34197,34220],"content":"GetRelationship(String)","needQuote":true,"nodes":[{"content":"GetRelationship(String)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The relationship that matches the specified &lt;em&gt;id&lt;/em&gt;.&lt;/p&gt;\\n","pos":[35286,35353],"source":"\\n<p>The relationship that matches the specified <em>id</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;id&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[35472,35522],"source":"\\n<p>\\n<em>id</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;id&lt;/em&gt; is not a valid XML identifier.&lt;/p&gt;\\n","pos":[35617,35672],"source":"\\n<p>\\n<em>id</em> is not a valid XML identifier.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;relationshipType&lt;/em&gt; is an empty string.&lt;/p&gt;\\n","pos":[35769,35827],"source":"\\n<p>\\n<em>relationshipType</em> is an empty string.</p>\\n"},{"content":"\\n&lt;p&gt;The package is write-only (relationship information cannot be read).&lt;/p&gt;\\n","pos":[36531,36610],"source":"\\n<p>The package is write-only (relationship information cannot be read).</p>\\n"},{"pos":[37806,37824],"content":"GetRelationships()","needQuote":true,"nodes":[{"content":"GetRelationships()","pos":[0,18]}]},{"content":"\\n&lt;p&gt;A collection of all the relationships that are owned by the part.&lt;/p&gt;\\n","pos":[38587,38663],"source":"\\n<p>A collection of all the relationships that are owned by the part.</p>\\n"},{"content":"\\n&lt;p&gt;The package is write-only (relationship information cannot be read).&lt;/p&gt;\\n","pos":[39283,39362],"source":"\\n<p>The package is write-only (relationship information cannot be read).</p>\\n"},{"pos":[40485,40515],"content":"GetRelationshipsByType(String)","needQuote":true,"nodes":[{"content":"GetRelationshipsByType(String)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;A collection of the relationships that match the specified &lt;em&gt;relationshipType&lt;/em&gt;.&lt;/p&gt;\\n","pos":[41757,41853],"source":"\\n<p>A collection of the relationships that match the specified <em>relationshipType</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;relationshipType&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[41972,42036],"source":"\\n<p>\\n<em>relationshipType</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;relationshipType&lt;/em&gt; is an empty string.&lt;/p&gt;\\n","pos":[42133,42191],"source":"\\n<p>\\n<em>relationshipType</em> is an empty string.</p>\\n"},{"content":"\\n&lt;p&gt;The package is write-only (relationship information cannot be read).&lt;/p&gt;\\n","pos":[42797,42876],"source":"\\n<p>The package is write-only (relationship information cannot be read).</p>\\n"},{"pos":[43194,43205],"content":"GetStream()","needQuote":true,"nodes":[{"content":"GetStream()","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The content data stream for the part.&lt;/p&gt;\\n","pos":[43824,43872],"source":"\\n<p>The content data stream for the part.</p>\\n"},{"pos":[45099,45118],"content":"GetStream(FileMode)","needQuote":true,"nodes":[{"content":"GetStream(FileMode)","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The I/O mode in which to open the content stream.&lt;/p&gt;\\n","pos":[45902,45962],"source":"\\n<p>The I/O mode in which to open the content stream.</p>\\n"},{"content":"\\n&lt;p&gt;The content stream of the part.&lt;/p&gt;\\n","pos":[46025,46067],"source":"\\n<p>The content stream of the part.</p>\\n"},{"pos":[47734,47765],"content":"GetStream(FileMode, FileAccess)","needQuote":true,"nodes":[{"content":"GetStream(FileMode, FileAccess)","pos":[0,31]}]},{"content":"\\n&lt;p&gt;The I/O mode in which to open the content stream.&lt;/p&gt;\\n","pos":[48700,48760],"source":"\\n<p>The I/O mode in which to open the content stream.</p>\\n"},{"content":"\\n&lt;p&gt;The access permissions to use in opening the content stream.&lt;/p&gt;\\n","pos":[48832,48903],"source":"\\n<p>The access permissions to use in opening the content stream.</p>\\n"},{"content":"\\n&lt;p&gt;The content stream for the part.&lt;/p&gt;\\n","pos":[48966,49009],"source":"\\n<p>The content stream for the part.</p>\\n"},{"pos":[51726,51761],"content":"GetStreamCore(FileMode, FileAccess)","needQuote":true,"nodes":[{"content":"GetStreamCore(FileMode, FileAccess)","pos":[0,35]}]},{"content":"\\n&lt;p&gt;The I/O mode in which to open the content stream.&lt;/p&gt;\\n","pos":[52776,52836],"source":"\\n<p>The I/O mode in which to open the content stream.</p>\\n"},{"content":"\\n&lt;p&gt;The access permissions to use in opening the content stream.&lt;/p&gt;\\n","pos":[52908,52979],"source":"\\n<p>The access permissions to use in opening the content stream.</p>\\n"},{"content":"\\n&lt;p&gt;The content data stream of the part.&lt;/p&gt;\\n","pos":[53042,53089],"source":"\\n<p>The content data stream of the part.</p>\\n"},{"pos":[53520,53546],"content":"RelationshipExists(String)","needQuote":true,"nodes":[{"content":"RelationshipExists(String)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if this part owns a relationship with the specified &lt;em&gt;id&lt;/em&gt;; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[54614,54748],"source":"\\n<p>\\n<strong>true</strong> if this part owns a relationship with the specified <em>id</em>; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;id&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[54867,54917],"source":"\\n<p>\\n<em>id</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;id&lt;/em&gt; is not a valid XML identifier.&lt;/p&gt;\\n","pos":[55012,55067],"source":"\\n<p>\\n<em>id</em> is not a valid XML identifier.</p>\\n"},{"content":"\\n&lt;p&gt;The package is write-only (relationship information cannot be read).&lt;/p&gt;\\n","pos":[55673,55752],"source":"\\n<p>The package is write-only (relationship information cannot be read).</p>\\n"},{"pos":[56792,56811],"content":"System.IO.Packaging","needQuote":true,"nodes":[{"content":"System.IO.Packaging","pos":[0,19]}]},{"pos":[56981,56987],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[57147,57157],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[57252,57260],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[57329,57330],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57357,57358],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57428,57436],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[57505,57506],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57533,57534],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57717,57731],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[57850,57856],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[57923,57924],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57974,57980],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[58040,58041],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58124,58130],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[58197,58198],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58248,58254],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[58314,58315],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58529,58551],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[58699,58705],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[58772,58773],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58823,58829],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[58890,58891]},{"pos":[58946,58952],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[59012,59013],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59110,59116],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[59183,59184],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59234,59240],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[59301,59302]},{"pos":[59357,59363],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[59423,59424],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59669,59700],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[59866,59881],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[59957,59958],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60008,60014],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[60075,60076]},{"pos":[60131,60137],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[60197,60198],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60304,60319],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[60395,60396],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60446,60452],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[60513,60514]},{"pos":[60569,60575],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[60635,60636],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60866,60879],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[60980,60991],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[61063,61064],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61091,61092],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61165,61176],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[61248,61249],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61276,61277],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61452,61461],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[61554,61561],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[61629,61630],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61657,61658],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61727,61734],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[61802,61803],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61830,61831],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62006,62023],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[62132,62147],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[62223,62224],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62251,62252],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62329,62344],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[62420,62421],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62448,62449],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62594,62600],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[62758,62765],"content":"Package","needQuote":true,"nodes":[{"content":"Package","pos":[0,7]}]},{"pos":[62936,62939],"content":"Uri","needQuote":true,"nodes":[{"content":"Uri","pos":[0,3]}]},{"pos":[63075,63081],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[63263,63280],"content":"CompressionOption","needQuote":true,"nodes":[{"content":"CompressionOption","pos":[0,17]}]},{"pos":[63514,63524],"content":"TargetMode","needQuote":true,"nodes":[{"content":"TargetMode","pos":[0,10]}]},{"pos":[63746,63765],"content":"PackageRelationship","needQuote":true,"nodes":[{"content":"PackageRelationship","pos":[0,19]}]},{"pos":[64024,64053],"content":"PackageRelationshipCollection","needQuote":true,"nodes":[{"content":"PackageRelationshipCollection","pos":[0,29]}]},{"pos":[64299,64305],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[64435,64444],"content":"System.IO","needQuote":true,"nodes":[{"content":"System.IO","pos":[0,9]}]},{"pos":[64592,64600],"content":"FileMode","needQuote":true,"nodes":[{"content":"FileMode","pos":[0,8]}]},{"pos":[64767,64777],"content":"FileAccess","needQuote":true,"nodes":[{"content":"FileAccess","pos":[0,10]}]},{"pos":[64941,64948],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[65094,65115],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[65316,65333],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[65515,65542],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]},{"pos":[65769,65794],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]},{"pos":[66007,66018],"content":"IOException","needQuote":true,"nodes":[{"content":"IOException","pos":[0,11]}]},{"pos":[66177,66189],"content":"XmlException","needQuote":true,"nodes":[{"content":"XmlException","pos":[0,12]}]},{"pos":[66375,66396],"content":"NotSupportedException","needQuote":true,"nodes":[{"content":"NotSupportedException","pos":[0,21]}]}],"content":"items:\n- uid: System.IO.Packaging.PackagePart\n  commentId: T:System.IO.Packaging.PackagePart\n  id: PackagePart\n  parent: System.IO.Packaging\n  children:\n  - System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri)\n  - System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String)\n  - System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String,System.IO.Packaging.CompressionOption)\n  - System.IO.Packaging.PackagePart.CompressionOption\n  - System.IO.Packaging.PackagePart.ContentType\n  - System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)\n  - System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)\n  - System.IO.Packaging.PackagePart.DeleteRelationship(System.String)\n  - System.IO.Packaging.PackagePart.GetContentTypeCore\n  - System.IO.Packaging.PackagePart.GetRelationship(System.String)\n  - System.IO.Packaging.PackagePart.GetRelationships\n  - System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)\n  - System.IO.Packaging.PackagePart.GetStream\n  - System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)\n  - System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode,System.IO.FileAccess)\n  - System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)\n  - System.IO.Packaging.PackagePart.Package\n  - System.IO.Packaging.PackagePart.RelationshipExists(System.String)\n  - System.IO.Packaging.PackagePart.Uri\n  langs:\n  - csharp\n  - vb\n  name: PackagePart\n  fullName: System.IO.Packaging.PackagePart\n  type: Class\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PackagePart\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 72\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Provides a base class for parts stored in a <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.  This class is abstract.</p>\\n\"\n  syntax:\n    content: public abstract class PackagePart\n    content.vb: Public MustInherit Class PackagePart\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: PackagePart\n- uid: System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri)\n  commentId: M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri)\n  id: '#ctor(System.IO.Packaging.Package,System.Uri)'\n  parent: System.IO.Packaging.PackagePart\n  langs:\n  - csharp\n  - vb\n  name: PackagePart(Package, Uri)\n  fullName: System.IO.Packaging.PackagePart.PackagePart(System.IO.Packaging.Package, System.Uri)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 74\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.Packaging.PackagePart\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified parent <xref href=\\\"System.IO.Packaging.PackagePart.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and part URI.</p>\\n\"\n  syntax:\n    content: protected PackagePart(Package package, Uri partUri)\n    content.vb: Protected Sub New(package As Package, partUri As Uri)\n    parameters:\n    - id: package\n      type: System.IO.Packaging.Package\n      description: \"\\n<p>The parent <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the part.</p>\\n\"\n    - id: partUri\n      type: System.Uri\n      description: \"\\n<p>The URI of the part, relative to the parent <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> root.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>package</em> or <em>partUri</em> is <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)\n    commentId: M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)\n  - type: System.IO.Packaging.PackagePart.GetStream\n    commentId: M:System.IO.Packaging.PackagePart.GetStream\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: PackagePart.PackagePart(Package, Uri)\n- uid: System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String)\n  commentId: M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String)\n  id: '#ctor(System.IO.Packaging.Package,System.Uri,System.String)'\n  parent: System.IO.Packaging.PackagePart\n  langs:\n  - csharp\n  - vb\n  name: PackagePart(Package, Uri, String)\n  fullName: System.IO.Packaging.PackagePart.PackagePart(System.IO.Packaging.Package, System.Uri, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 75\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.Packaging.PackagePart\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified parent <xref href=\\\"System.IO.Packaging.PackagePart.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, part URI, and MIME content type.</p>\\n\"\n  syntax:\n    content: protected PackagePart(Package package, Uri partUri, string contentType)\n    content.vb: Protected Sub New(package As Package, partUri As Uri, contentType As String)\n    parameters:\n    - id: package\n      type: System.IO.Packaging.Package\n      description: \"\\n<p>The parent <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the part.</p>\\n\"\n    - id: partUri\n      type: System.Uri\n      description: \"\\n<p>The URI of the part, relative to the parent <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> root.</p>\\n\"\n    - id: contentType\n      type: System.String\n      description: \"\\n<p>The MIME content type of the part data stream.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>package</em> or <em>partUri</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>partUri</em> is not a valid <xref href=\\\"System.IO.Packaging.PackagePart\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> URI.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)\n    commentId: M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)\n  - type: System.IO.Packaging.PackagePart.GetStream\n    commentId: M:System.IO.Packaging.PackagePart.GetStream\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: PackagePart.PackagePart(Package, Uri, String)\n- uid: System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String,System.IO.Packaging.CompressionOption)\n  commentId: M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String,System.IO.Packaging.CompressionOption)\n  id: '#ctor(System.IO.Packaging.Package,System.Uri,System.String,System.IO.Packaging.CompressionOption)'\n  parent: System.IO.Packaging.PackagePart\n  langs:\n  - csharp\n  - vb\n  name: PackagePart(Package, Uri, String, CompressionOption)\n  fullName: System.IO.Packaging.PackagePart.PackagePart(System.IO.Packaging.Package, System.Uri, System.String, System.IO.Packaging.CompressionOption)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 76\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.Packaging.PackagePart\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified parent <xref href=\\\"System.IO.Packaging.PackagePart.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, part URI, MIME content type, and <xref href=\\\"System.IO.Packaging.CompressionOption\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: protected PackagePart(Package package, Uri partUri, string contentType, CompressionOption compressionOption)\n    content.vb: Protected Sub New(package As Package, partUri As Uri, contentType As String, compressionOption As CompressionOption)\n    parameters:\n    - id: package\n      type: System.IO.Packaging.Package\n      description: \"\\n<p>The parent <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the part.</p>\\n\"\n    - id: partUri\n      type: System.Uri\n      description: \"\\n<p>The URI of the part, relative to the parent <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> root.</p>\\n\"\n    - id: contentType\n      type: System.String\n      description: \"\\n<p>The MIME content type of the part's data stream.</p>\\n\"\n    - id: compressionOption\n      type: System.IO.Packaging.CompressionOption\n      description: \"\\n<p>The compression option of the part data stream.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>package</em> or <em>partUri</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>partUri</em> is not a valid <xref href=\\\"System.IO.Packaging.PackagePart\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> URI.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>compressionOption</em> value is not valid.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)\n    commentId: M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)\n  - type: System.IO.Packaging.PackagePart.GetStream\n    commentId: M:System.IO.Packaging.PackagePart.GetStream\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: PackagePart.PackagePart(Package, Uri, String, CompressionOption)\n- uid: System.IO.Packaging.PackagePart.CompressionOption\n  commentId: P:System.IO.Packaging.PackagePart.CompressionOption\n  id: CompressionOption\n  parent: System.IO.Packaging.PackagePart\n  langs:\n  - csharp\n  - vb\n  name: CompressionOption\n  fullName: System.IO.Packaging.PackagePart.CompressionOption\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CompressionOption\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 77\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Gets the compression option of the part content stream.</p>\\n\"\n  syntax:\n    content: public CompressionOption CompressionOption { get; }\n    content.vb: Public ReadOnly Property CompressionOption As CompressionOption\n    parameters: []\n    return:\n      type: System.IO.Packaging.CompressionOption\n      description: \"\\n<p>The compression option of the part content stream.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The part has been deleted.</p>\\n<p>-or-</p>\\n<p>The <xref href=\\\"System.IO.Packaging.PackagePart.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not open (<xref href=\\\"System.IO.Packaging.Package.Dispose(System.Boolean)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.Packaging.Package.Close\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been called).</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.PackagePart.GetStream\n    commentId: M:System.IO.Packaging.PackagePart.GetStream\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: PackagePart.CompressionOption\n- uid: System.IO.Packaging.PackagePart.ContentType\n  commentId: P:System.IO.Packaging.PackagePart.ContentType\n  id: ContentType\n  parent: System.IO.Packaging.PackagePart\n  langs:\n  - csharp\n  - vb\n  name: ContentType\n  fullName: System.IO.Packaging.PackagePart.ContentType\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ContentType\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 78\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Gets the MIME type of the content stream.</p>\\n\"\n  syntax:\n    content: public string ContentType { get; }\n    content.vb: Public ReadOnly Property ContentType As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The MIME type of the content data stream for the part.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The part has been deleted.</p>\\n<p>-or-</p>\\n<p>The <xref href=\\\"System.IO.Packaging.PackagePart.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not open (<xref href=\\\"System.IO.Packaging.Package.Dispose(System.Boolean)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.Packaging.Package.Close\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been called).</p>\\n<p>-or-</p>\\n<p>The string returned by the derived class <xref href=\\\"System.IO.Packaging.PackagePart.GetContentTypeCore\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method is empty.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.PackagePart.GetStream\n    commentId: M:System.IO.Packaging.PackagePart.GetStream\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: PackagePart.ContentType\n- uid: System.IO.Packaging.PackagePart.Package\n  commentId: P:System.IO.Packaging.PackagePart.Package\n  id: Package\n  parent: System.IO.Packaging.PackagePart\n  langs:\n  - csharp\n  - vb\n  name: Package\n  fullName: System.IO.Packaging.PackagePart.Package\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Package\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 79\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Gets the parent <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the part.</p>\\n\"\n  syntax:\n    content: public Package Package { get; }\n    content.vb: Public ReadOnly Property Package As Package\n    parameters: []\n    return:\n      type: System.IO.Packaging.Package\n      description: \"\\n<p>The parent package of the part.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The part has been deleted.</p>\\n<p>-or-</p>\\n<p>The <xref href=\\\"System.IO.Packaging.PackagePart.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not open (<xref href=\\\"System.IO.Packaging.Package.Dispose(System.Boolean)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.Packaging.Package.Close\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been called).</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: PackagePart.Package\n- uid: System.IO.Packaging.PackagePart.Uri\n  commentId: P:System.IO.Packaging.PackagePart.Uri\n  id: Uri\n  parent: System.IO.Packaging.PackagePart\n  langs:\n  - csharp\n  - vb\n  name: Uri\n  fullName: System.IO.Packaging.PackagePart.Uri\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Uri\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 80\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Gets the URI of the part.</p>\\n\"\n  syntax:\n    content: public Uri Uri { get; }\n    content.vb: Public ReadOnly Property Uri As Uri\n    parameters: []\n    return:\n      type: System.Uri\n      description: \"\\n<p>The URI of the part relative to the package root.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The part has been deleted.</p>\\n<p>-or-</p>\\n<p>The <xref href=\\\"System.IO.Packaging.PackagePart.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not open (<xref href=\\\"System.IO.Packaging.Package.Dispose(System.Boolean)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.Packaging.Package.Close\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been called).</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)\n    commentId: M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)\n  - type: System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)\n    commentId: M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: PackagePart.Uri\n- uid: System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)\n  commentId: M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)\n  id: CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)\n  parent: System.IO.Packaging.PackagePart\n  langs:\n  - csharp\n  - vb\n  name: CreateRelationship(Uri, TargetMode, String)\n  fullName: System.IO.Packaging.PackagePart.CreateRelationship(System.Uri, System.IO.Packaging.TargetMode, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreateRelationship\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 81\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Creates a part-level relationship between this <xref href=\\\"System.IO.Packaging.PackagePart\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to a specified target <xref href=\\\"System.IO.Packaging.PackagePart\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or external resource.</p>\\n\"\n  syntax:\n    content: public PackageRelationship CreateRelationship(Uri targetUri, TargetMode targetMode, string relationshipType)\n    content.vb: Public Function CreateRelationship(targetUri As Uri, targetMode As TargetMode, relationshipType As String) As PackageRelationship\n    parameters:\n    - id: targetUri\n      type: System.Uri\n      description: \"\\n<p>The URI of the target part.</p>\\n\"\n    - id: targetMode\n      type: System.IO.Packaging.TargetMode\n      description: \"\\n<p>One of the enumeration values. For example, <xref href=\\\"System.IO.Packaging.TargetMode.Internal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the target part is inside the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>; or <xref href=\\\"System.IO.Packaging.TargetMode.External\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the target is a resource outside the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: relationshipType\n      type: System.String\n      description: \"\\n<p>The role of the relationship.</p>\\n\"\n    return:\n      type: System.IO.Packaging.PackageRelationship\n      description: \"\\n<p>The part-level relationship between this <xref href=\\\"System.IO.Packaging.PackagePart\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to the target <xref href=\\\"System.IO.Packaging.PackagePart\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or external resource.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The part has been deleted.</p>\\n<p>-or-</p>\\n<p>The <xref href=\\\"System.IO.Packaging.PackagePart.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not open (<xref href=\\\"System.IO.Packaging.Package.Dispose(System.Boolean)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.Packaging.Package.Close\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been called).</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>targetUri</em> or <em>relationshipType</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>targetMode</em> parameter is not a valid <xref href=\\\"System.IO.Packaging.TargetMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> enumeration value.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The part identified by the <em>targetUri</em> is a relationship (the target of a relationship cannot be another relationship).</p>\\n<p>-or-</p>\\n<p>\\n<em>targetMode</em> is specified as <xref href=\\\"System.IO.Packaging.TargetMode.Internal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> but <em>targetUri</em> is an absolute external URI.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The package is read-only (a new relationship cannot be added).</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)\n    commentId: M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)\n  - type: System.IO.Packaging.PackagePart.DeleteRelationship(System.String)\n    commentId: M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)\n  - type: System.IO.Packaging.PackagePart.GetRelationship(System.String)\n    commentId: M:System.IO.Packaging.PackagePart.GetRelationship(System.String)\n  - type: System.IO.Packaging.PackagePart.GetRelationships\n    commentId: M:System.IO.Packaging.PackagePart.GetRelationships\n  - type: System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)\n    commentId: M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: PackagePart.CreateRelationship(Uri, TargetMode, String)\n- uid: System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)\n  commentId: M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)\n  id: CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)\n  parent: System.IO.Packaging.PackagePart\n  langs:\n  - csharp\n  - vb\n  name: CreateRelationship(Uri, TargetMode, String, String)\n  fullName: System.IO.Packaging.PackagePart.CreateRelationship(System.Uri, System.IO.Packaging.TargetMode, System.String, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreateRelationship\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 82\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Creates a part-level relationship between this <xref href=\\\"System.IO.Packaging.PackagePart\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to a specified target <xref href=\\\"System.IO.Packaging.PackagePart\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or external resource.</p>\\n\"\n  syntax:\n    content: public PackageRelationship CreateRelationship(Uri targetUri, TargetMode targetMode, string relationshipType, string id)\n    content.vb: Public Function CreateRelationship(targetUri As Uri, targetMode As TargetMode, relationshipType As String, id As String) As PackageRelationship\n    parameters:\n    - id: targetUri\n      type: System.Uri\n      description: \"\\n<p>The URI of the target part.</p>\\n\"\n    - id: targetMode\n      type: System.IO.Packaging.TargetMode\n      description: \"\\n<p>One of the enumeration values. For example, <xref href=\\\"System.IO.Packaging.TargetMode.Internal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the target part is inside the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>; or <xref href=\\\"System.IO.Packaging.TargetMode.External\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the target is a resource outside the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: relationshipType\n      type: System.String\n      description: \"\\n<p>The role of the relationship.</p>\\n\"\n    - id: id\n      type: System.String\n      description: \"\\n<p>A unique ID for the relationship.</p>\\n\"\n    return:\n      type: System.IO.Packaging.PackageRelationship\n      description: \"\\n<p>The part-level relationship between this <xref href=\\\"System.IO.Packaging.PackagePart\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to the target <xref href=\\\"System.IO.Packaging.PackagePart\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or external resource.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The part has been deleted.</p>\\n<p>-or-</p>\\n<p>The <xref href=\\\"System.IO.Packaging.PackagePart.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not open (<xref href=\\\"System.IO.Packaging.Package.Dispose(System.Boolean)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.Packaging.Package.Close\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been called).</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>targetUri</em> or <em>relationshipType</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>targetMode</em> parameter is not a valid <xref href=\\\"System.IO.Packaging.TargetMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> enumeration value.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The part identified by the <em>targetUri</em> is a relationship (the target of a relationship cannot be another relationship).</p>\\n<p>-or-</p>\\n<p>\\n<em>targetMode</em> is specified as <xref href=\\\"System.IO.Packaging.TargetMode.Internal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> but <em>targetUri</em> is an absolute external URI.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The package is read-only (a new relationship cannot be added).</p>\\n\"\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>\\n<em>id</em> is not a valid XML identifier.</p>\\n<p>-or-</p>\\n<p>A part with the specified <em>id</em> already exists.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)\n    commentId: M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)\n  - type: System.IO.Packaging.PackagePart.DeleteRelationship(System.String)\n    commentId: M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)\n  - type: System.IO.Packaging.PackagePart.GetRelationship(System.String)\n    commentId: M:System.IO.Packaging.PackagePart.GetRelationship(System.String)\n  - type: System.IO.Packaging.PackagePart.GetRelationships\n    commentId: M:System.IO.Packaging.PackagePart.GetRelationships\n  - type: System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)\n    commentId: M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: PackagePart.CreateRelationship(Uri, TargetMode, String, String)\n- uid: System.IO.Packaging.PackagePart.DeleteRelationship(System.String)\n  commentId: M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)\n  id: DeleteRelationship(System.String)\n  parent: System.IO.Packaging.PackagePart\n  langs:\n  - csharp\n  - vb\n  name: DeleteRelationship(String)\n  fullName: System.IO.Packaging.PackagePart.DeleteRelationship(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DeleteRelationship\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 83\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Deletes a specified part-level <xref href=\\\"System.IO.Packaging.PackageRelationship\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void DeleteRelationship(string id)\n    content.vb: Public Sub DeleteRelationship(id As String)\n    parameters:\n    - id: id\n      type: System.String\n      description: \"\\n<p>The <xref href=\\\"System.IO.Packaging.PackageRelationship.Id\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the relationship to delete.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The part has been deleted.</p>\\n<p>-or-</p>\\n<p>The <xref href=\\\"System.IO.Packaging.PackagePart.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not open (<xref href=\\\"System.IO.Packaging.Package.Dispose(System.Boolean)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.Packaging.Package.Close\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been called).</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>id</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The package is read-only (relationships cannot be deleted).</p>\\n\"\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>\\n<em>id</em> is not a valid XML identifier.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)\n    commentId: M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)\n  - type: System.IO.Packaging.PackagePart.GetRelationship(System.String)\n    commentId: M:System.IO.Packaging.PackagePart.GetRelationship(System.String)\n  - type: System.IO.Packaging.PackagePart.GetRelationships\n    commentId: M:System.IO.Packaging.PackagePart.GetRelationships\n  - type: System.IO.Packaging.PackagePart.RelationshipExists(System.String)\n    commentId: M:System.IO.Packaging.PackagePart.RelationshipExists(System.String)\n  - type: System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)\n    commentId: M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: PackagePart.DeleteRelationship(String)\n- uid: System.IO.Packaging.PackagePart.GetContentTypeCore\n  commentId: M:System.IO.Packaging.PackagePart.GetContentTypeCore\n  id: GetContentTypeCore\n  parent: System.IO.Packaging.PackagePart\n  langs:\n  - csharp\n  - vb\n  name: GetContentTypeCore()\n  fullName: System.IO.Packaging.PackagePart.GetContentTypeCore()\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetContentTypeCore\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 84\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>When overridden in a derived class, returns the MIME type of the part content.</p>\\n\"\n  syntax:\n    content: protected virtual string GetContentTypeCore()\n    content.vb: Protected Overridable Function GetContentTypeCore As String\n    return:\n      type: System.String\n      description: \"\\n<p>The MIME type of the part content.</p>\\n\"\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The derived class does not provide an override implementation required for the <xref href=\\\"System.IO.Packaging.PackagePart.GetContentTypeCore\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  - virtual\n  modifiers.vb:\n  - Protected\n  - Overridable\n  nameWithType: PackagePart.GetContentTypeCore()\n- uid: System.IO.Packaging.PackagePart.GetRelationship(System.String)\n  commentId: M:System.IO.Packaging.PackagePart.GetRelationship(System.String)\n  id: GetRelationship(System.String)\n  parent: System.IO.Packaging.PackagePart\n  langs:\n  - csharp\n  - vb\n  name: GetRelationship(String)\n  fullName: System.IO.Packaging.PackagePart.GetRelationship(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetRelationship\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 85\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Returns the relationship that has a specified <xref href=\\\"System.IO.Packaging.PackageRelationship.Id\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: public PackageRelationship GetRelationship(string id)\n    content.vb: Public Function GetRelationship(id As String) As PackageRelationship\n    parameters:\n    - id: id\n      type: System.String\n      description: \"\\n<p>The <xref href=\\\"System.IO.Packaging.PackageRelationship.Id\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the relationship to return.</p>\\n\"\n    return:\n      type: System.IO.Packaging.PackageRelationship\n      description: \"\\n<p>The relationship that matches the specified <em>id</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>id</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>\\n<em>id</em> is not a valid XML identifier.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>relationshipType</em> is an empty string.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The part has been deleted.</p>\\n<p>-or-</p>\\n<p>The <xref href=\\\"System.IO.Packaging.PackagePart.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not open (<xref href=\\\"System.IO.Packaging.Package.Dispose(System.Boolean)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.Packaging.Package.Close\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been called).</p>\\n<p>-or-</p>\\n<p>A relationship with the specified <em>id</em> does not exist in the package.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The package is write-only (relationship information cannot be read).</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)\n    commentId: M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)\n  - type: System.IO.Packaging.PackagePart.DeleteRelationship(System.String)\n    commentId: M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)\n  - type: System.IO.Packaging.PackagePart.GetRelationships\n    commentId: M:System.IO.Packaging.PackagePart.GetRelationships\n  - type: System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)\n    commentId: M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)\n  - type: System.IO.Packaging.PackagePart.RelationshipExists(System.String)\n    commentId: M:System.IO.Packaging.PackagePart.RelationshipExists(System.String)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: PackagePart.GetRelationship(String)\n- uid: System.IO.Packaging.PackagePart.GetRelationships\n  commentId: M:System.IO.Packaging.PackagePart.GetRelationships\n  id: GetRelationships\n  parent: System.IO.Packaging.PackagePart\n  langs:\n  - csharp\n  - vb\n  name: GetRelationships()\n  fullName: System.IO.Packaging.PackagePart.GetRelationships()\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetRelationships\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 86\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Returns a collection of all the relationships that are owned by this part.</p>\\n\"\n  syntax:\n    content: public PackageRelationshipCollection GetRelationships()\n    content.vb: Public Function GetRelationships As PackageRelationshipCollection\n    return:\n      type: System.IO.Packaging.PackageRelationshipCollection\n      description: \"\\n<p>A collection of all the relationships that are owned by the part.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The part has been deleted.</p>\\n<p>-or-</p>\\n<p>The <xref href=\\\"System.IO.Packaging.PackagePart.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not open (<xref href=\\\"System.IO.Packaging.Package.Dispose(System.Boolean)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.Packaging.Package.Close\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been called).</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The package is write-only (relationship information cannot be read).</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)\n    commentId: M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)\n  - type: System.IO.Packaging.PackagePart.DeleteRelationship(System.String)\n    commentId: M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)\n  - type: System.IO.Packaging.PackagePart.GetRelationship(System.String)\n    commentId: M:System.IO.Packaging.PackagePart.GetRelationship(System.String)\n  - type: System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)\n    commentId: M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: PackagePart.GetRelationships()\n- uid: System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)\n  commentId: M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)\n  id: GetRelationshipsByType(System.String)\n  parent: System.IO.Packaging.PackagePart\n  langs:\n  - csharp\n  - vb\n  name: GetRelationshipsByType(String)\n  fullName: System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetRelationshipsByType\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 87\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Returns a collection of the relationships that match a specified <xref href=\\\"System.IO.Packaging.PackageRelationship.RelationshipType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public PackageRelationshipCollection GetRelationshipsByType(string relationshipType)\n    content.vb: Public Function GetRelationshipsByType(relationshipType As String) As PackageRelationshipCollection\n    parameters:\n    - id: relationshipType\n      type: System.String\n      description: \"\\n<p>The <xref href=\\\"System.IO.Packaging.PackageRelationship.RelationshipType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the relationships to locate and return in the collection.</p>\\n\"\n    return:\n      type: System.IO.Packaging.PackageRelationshipCollection\n      description: \"\\n<p>A collection of the relationships that match the specified <em>relationshipType</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>relationshipType</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>relationshipType</em> is an empty string.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The part has been deleted.</p>\\n<p>-or-</p>\\n<p>The <xref href=\\\"System.IO.Packaging.PackagePart.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not open (<xref href=\\\"System.IO.Packaging.Package.Dispose(System.Boolean)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.Packaging.Package.Close\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been called).</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The package is write-only (relationship information cannot be read).</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: PackagePart.GetRelationshipsByType(String)\n- uid: System.IO.Packaging.PackagePart.GetStream\n  commentId: M:System.IO.Packaging.PackagePart.GetStream\n  id: GetStream\n  parent: System.IO.Packaging.PackagePart\n  langs:\n  - csharp\n  - vb\n  name: GetStream()\n  fullName: System.IO.Packaging.PackagePart.GetStream()\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetStream\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 88\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Returns the part content data stream.</p>\\n\"\n  syntax:\n    content: public Stream GetStream()\n    content.vb: Public Function GetStream As Stream\n    return:\n      type: System.IO.Stream\n      description: \"\\n<p>The content data stream for the part.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The part has been deleted.</p>\\n<p>-or-</p>\\n<p>The <xref href=\\\"System.IO.Packaging.PackagePart.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not open (<xref href=\\\"System.IO.Packaging.Package.Dispose(System.Boolean)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.Packaging.Package.Close\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been called).</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The stream object returned by the <xref href=\\\"System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method of the derived subclass is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: PackagePart.GetStream()\n- uid: System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)\n  commentId: M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)\n  id: GetStream(System.IO.FileMode)\n  parent: System.IO.Packaging.PackagePart\n  langs:\n  - csharp\n  - vb\n  name: GetStream(FileMode)\n  fullName: System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetStream\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 89\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Returns the content stream opened in a specified I/O <xref href=\\\"System.IO.FileMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public Stream GetStream(FileMode mode)\n    content.vb: Public Function GetStream(mode As FileMode) As Stream\n    parameters:\n    - id: mode\n      type: System.IO.FileMode\n      description: \"\\n<p>The I/O mode in which to open the content stream.</p>\\n\"\n    return:\n      type: System.IO.Stream\n      description: \"\\n<p>The content stream of the part.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The part has been deleted.</p>\\n<p>-or-</p>\\n<p>The <xref href=\\\"System.IO.Packaging.PackagePart.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not open (<xref href=\\\"System.IO.Packaging.Package.Dispose(System.Boolean)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.Packaging.Package.Close\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been called).</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>mode</em> parameter is not a valid <xref href=\\\"System.IO.FileMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> enumeration value.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The <em>mode</em> parameter is not compatible with the package and part stream.</p>\\n<p>-or-</p>\\n<p>The stream object returned by the <xref href=\\\"System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method of the derived subclass is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: PackagePart.GetStream(FileMode)\n- uid: System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode,System.IO.FileAccess)\n  commentId: M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode,System.IO.FileAccess)\n  id: GetStream(System.IO.FileMode,System.IO.FileAccess)\n  parent: System.IO.Packaging.PackagePart\n  langs:\n  - csharp\n  - vb\n  name: GetStream(FileMode, FileAccess)\n  fullName: System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode, System.IO.FileAccess)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetStream\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 90\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Returns the part content stream opened with a specified <xref href=\\\"System.IO.FileMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.IO.FileAccess\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public Stream GetStream(FileMode mode, FileAccess access)\n    content.vb: Public Function GetStream(mode As FileMode, access As FileAccess) As Stream\n    parameters:\n    - id: mode\n      type: System.IO.FileMode\n      description: \"\\n<p>The I/O mode in which to open the content stream.</p>\\n\"\n    - id: access\n      type: System.IO.FileAccess\n      description: \"\\n<p>The access permissions to use in opening the content stream.</p>\\n\"\n    return:\n      type: System.IO.Stream\n      description: \"\\n<p>The content stream for the part.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The part has been deleted.</p>\\n<p>-or-</p>\\n<p>The <xref href=\\\"System.IO.Packaging.PackagePart.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not open (<xref href=\\\"System.IO.Packaging.Package.Dispose(System.Boolean)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.Packaging.Package.Close\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been called).</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>mode</em> parameter is not a valid <xref href=\\\"System.IO.FileMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> enumeration value.</p>\\n<p>-or-</p>\\n<p>The <em>access</em> parameter is not a valid <xref href=\\\"System.IO.FileAccess\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> enumeration value.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>\\n<em>mode</em> or <em>access</em> is not compatible with the package and part stream.</p>\\n<p>-or-</p>\\n<p>The <em>access</em> parameter is specified as <xref href=\\\"System.IO.FileAccess.Read\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> but the <em>mode</em> parameter requires write access.  (<xref href=\\\"System.IO.FileMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values of <xref href=\\\"System.IO.FileMode.Create\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.IO.FileMode.CreateNew\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.IO.FileMode.Truncate\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, and <xref href=\\\"System.IO.FileMode.Append\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> require <xref href=\\\"System.IO.FileAccess.Write\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.FileAccess.ReadWrite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> access.)</p>\\n<p>-or-</p>\\n<p>The stream object returned by the <xref href=\\\"System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method of the derived subclass is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: PackagePart.GetStream(FileMode, FileAccess)\n- uid: System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)\n  commentId: M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)\n  id: GetStreamCore(System.IO.FileMode,System.IO.FileAccess)\n  parent: System.IO.Packaging.PackagePart\n  langs:\n  - csharp\n  - vb\n  name: GetStreamCore(FileMode, FileAccess)\n  fullName: System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode, System.IO.FileAccess)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetStreamCore\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 91\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>When overridden in a derived class, returns the part content stream opened with a specified <xref href=\\\"System.IO.FileMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.IO.FileAccess\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: protected abstract Stream GetStreamCore(FileMode mode, FileAccess access)\n    content.vb: Protected MustOverride Function GetStreamCore(mode As FileMode, access As FileAccess) As Stream\n    parameters:\n    - id: mode\n      type: System.IO.FileMode\n      description: \"\\n<p>The I/O mode in which to open the content stream.</p>\\n\"\n    - id: access\n      type: System.IO.FileAccess\n      description: \"\\n<p>The access permissions to use in opening the content stream.</p>\\n\"\n    return:\n      type: System.IO.Stream\n      description: \"\\n<p>The content data stream of the part.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  - abstract\n  modifiers.vb:\n  - Protected\n  - MustOverride\n  nameWithType: PackagePart.GetStreamCore(FileMode, FileAccess)\n- uid: System.IO.Packaging.PackagePart.RelationshipExists(System.String)\n  commentId: M:System.IO.Packaging.PackagePart.RelationshipExists(System.String)\n  id: RelationshipExists(System.String)\n  parent: System.IO.Packaging.PackagePart\n  langs:\n  - csharp\n  - vb\n  name: RelationshipExists(String)\n  fullName: System.IO.Packaging.PackagePart.RelationshipExists(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RelationshipExists\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 92\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Returns a value that indicates whether this part owns a relationship with a specified <xref href=\\\"System.IO.Packaging.PackageRelationship.Id\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public bool RelationshipExists(string id)\n    content.vb: Public Function RelationshipExists(id As String) As Boolean\n    parameters:\n    - id: id\n      type: System.String\n      description: \"\\n<p>The <xref href=\\\"System.IO.Packaging.PackageRelationship.Id\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the relationship to check for.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if this part owns a relationship with the specified <em>id</em>; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>id</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>\\n<em>id</em> is not a valid XML identifier.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The part has been deleted.</p>\\n<p>-or-</p>\\n<p>The <xref href=\\\"System.IO.Packaging.PackagePart.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not open (<xref href=\\\"System.IO.Packaging.Package.Dispose(System.Boolean)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.Packaging.Package.Close\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been called).</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The package is write-only (relationship information cannot be read).</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)\n    commentId: M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)\n  - type: System.IO.Packaging.PackagePart.DeleteRelationship(System.String)\n    commentId: M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)\n  - type: System.IO.Packaging.PackagePart.GetRelationship(System.String)\n    commentId: M:System.IO.Packaging.PackagePart.GetRelationship(System.String)\n  - type: System.IO.Packaging.PackagePart.GetRelationships\n    commentId: M:System.IO.Packaging.PackagePart.GetRelationships\n  - type: System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)\n    commentId: M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: PackagePart.RelationshipExists(String)\nreferences:\n- uid: System.IO.Packaging\n  isExternal: false\n  name: System.IO.Packaging\n  fullName: System.IO.Packaging\n  commentId: N:System.IO.Packaging\n  nameWithType: System.IO.Packaging\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.IO.Packaging.Package\n  parent: System.IO.Packaging\n  isExternal: false\n  name: Package\n  fullName: System.IO.Packaging.Package\n  commentId: T:System.IO.Packaging.Package\n  nameWithType: Package\n- uid: System.Uri\n  parent: System\n  isExternal: false\n  name: Uri\n  fullName: System.Uri\n  commentId: T:System.Uri\n  nameWithType: Uri\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.IO.Packaging.CompressionOption\n  parent: System.IO.Packaging\n  isExternal: false\n  name: CompressionOption\n  fullName: System.IO.Packaging.CompressionOption\n  commentId: T:System.IO.Packaging.CompressionOption\n  nameWithType: CompressionOption\n- uid: System.IO.Packaging.TargetMode\n  parent: System.IO.Packaging\n  isExternal: false\n  name: TargetMode\n  fullName: System.IO.Packaging.TargetMode\n  commentId: T:System.IO.Packaging.TargetMode\n  nameWithType: TargetMode\n- uid: System.IO.Packaging.PackageRelationship\n  parent: System.IO.Packaging\n  isExternal: false\n  name: PackageRelationship\n  fullName: System.IO.Packaging.PackageRelationship\n  commentId: T:System.IO.Packaging.PackageRelationship\n  nameWithType: PackageRelationship\n- uid: System.IO.Packaging.PackageRelationshipCollection\n  parent: System.IO.Packaging\n  isExternal: false\n  name: PackageRelationshipCollection\n  fullName: System.IO.Packaging.PackageRelationshipCollection\n  commentId: T:System.IO.Packaging.PackageRelationshipCollection\n  nameWithType: PackageRelationshipCollection\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  fullName: System.IO.Stream\n  commentId: T:System.IO.Stream\n  nameWithType: Stream\n- uid: System.IO\n  isExternal: false\n  name: System.IO\n  fullName: System.IO\n  commentId: N:System.IO\n  nameWithType: System.IO\n- uid: System.IO.FileMode\n  parent: System.IO\n  isExternal: false\n  name: FileMode\n  fullName: System.IO.FileMode\n  commentId: T:System.IO.FileMode\n  nameWithType: FileMode\n- uid: System.IO.FileAccess\n  parent: System.IO\n  isExternal: false\n  name: FileAccess\n  fullName: System.IO.FileAccess\n  commentId: T:System.IO.FileAccess\n  nameWithType: FileAccess\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n- uid: System.IO.IOException\n  parent: System.IO\n  isExternal: false\n  name: IOException\n  fullName: System.IO.IOException\n  nameWithType: IOException\n  commentId: T:System.IO.IOException\n- uid: System.Xml.XmlException\n  isExternal: false\n  name: XmlException\n  fullName: System.Xml.XmlException\n  commentId: T:System.Xml.XmlException\n  nameWithType: XmlException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  fullName: System.NotSupportedException\n  nameWithType: NotSupportedException\n  commentId: T:System.NotSupportedException\n"}