{"nodes":[{"pos":[1228,1245],"content":"ValidationContext","needQuote":true,"nodes":[{"content":"ValidationContext","pos":[0,17]}]},{"pos":[2887,2912],"content":"ValidationContext(Object)","needQuote":true,"nodes":[{"content":"ValidationContext(Object)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;The object instance to validate.","pos":[3898,3935],"source":"\\n<p>The object instance to validate."},{"content":"It cannot be &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[3936,3977],"source":" It cannot be <strong>null</strong>.</p>\\n"},{"pos":[4607,4661],"content":"ValidationContext(Object, IDictionary<Object, Object>)","needQuote":true,"nodes":[{"content":"ValidationContext(Object, IDictionary&lt;Object, Object&gt;)","pos":[0,54],"source":"ValidationContext(Object, IDictionary<Object, Object>)"}]},{"content":"\\n&lt;p&gt;The object instance to validate.","pos":[5814,5851],"source":"\\n<p>The object instance to validate."},{"content":"It cannot be &lt;strong&gt;null&lt;/strong&gt;&lt;/p&gt;\\n","pos":[5853,5893],"source":"  It cannot be <strong>null</strong></p>\\n"},{"content":"\\n&lt;p&gt;An optional set of key/value pairs to make available to consumers.&lt;/p&gt;\\n","pos":[6011,6088],"source":"\\n<p>An optional set of key/value pairs to make available to consumers.</p>\\n"},{"pos":[7160,7232],"content":"ValidationContext(Object, IServiceProvider, IDictionary<Object, Object>)","needQuote":true,"nodes":[{"content":"ValidationContext(Object, IServiceProvider, IDictionary&lt;Object, Object&gt;)","pos":[0,72],"source":"ValidationContext(Object, IServiceProvider, IDictionary<Object, Object>)"}]},{"content":"\\n&lt;p&gt;The object to validate.","pos":[8489,8517],"source":"\\n<p>The object to validate."},{"content":"This parameter is required.&lt;/p&gt;\\n","pos":[8518,8551],"source":" This parameter is required.</p>\\n"},{"content":"\\n&lt;p&gt;A dictionary of key/value pairs to make available to the service consumers.","pos":[8917,8997],"source":"\\n<p>A dictionary of key/value pairs to make available to the service consumers."},{"content":"This parameter is optional.&lt;/p&gt;\\n","pos":[8998,9031],"source":" This parameter is optional.</p>\\n"},{"pos":[9877,9888],"content":"DisplayName","needQuote":true,"nodes":[{"content":"DisplayName","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The name of the member to validate.","pos":[10712,10752],"source":"\\n<p>The name of the member to validate."},{"content":"&lt;/p&gt;\\n","pos":[10753,10759],"source":" </p>\\n"},{"pos":[11140,11145],"content":"Items","needQuote":true,"nodes":[{"content":"Items","pos":[0,5]}]},{"content":"\\n&lt;p&gt;The dictionary of the key/value pairs for this context.&lt;/p&gt;\\n","pos":[12075,12141],"source":"\\n<p>The dictionary of the key/value pairs for this context.</p>\\n"},{"pos":[12536,12546],"content":"MemberName","needQuote":true,"nodes":[{"content":"MemberName","pos":[0,10]}]},{"content":"\\n&lt;p&gt;The name of the member to validate.","pos":[13366,13406],"source":"\\n<p>The name of the member to validate."},{"content":"&lt;/p&gt;\\n","pos":[13407,13413],"source":" </p>\\n"},{"pos":[13820,13834],"content":"ObjectInstance","needQuote":true,"nodes":[{"content":"ObjectInstance","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The object to validate.&lt;/p&gt;\\n","pos":[14653,14687],"source":"\\n<p>The object to validate.</p>\\n"},{"pos":[15091,15101],"content":"ObjectType","needQuote":true,"nodes":[{"content":"ObjectType","pos":[0,10]}]},{"content":"\\n&lt;p&gt;The type of the object to validate.&lt;/p&gt;\\n","pos":[15910,15956],"source":"\\n<p>The type of the object to validate.</p>\\n"},{"pos":[16395,16411],"content":"GetService(Type)","needQuote":true,"nodes":[{"content":"GetService(Type)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The type of the service to use for validation.&lt;/p&gt;\\n","pos":[17275,17332],"source":"\\n<p>The type of the service to use for validation.</p>\\n"},{"content":"\\n&lt;p&gt;An instance of the service, or &lt;strong&gt;null&lt;/strong&gt; if the service is not available.&lt;/p&gt;\\n","pos":[17392,17488],"source":"\\n<p>An instance of the service, or <strong>null</strong> if the service is not available.</p>\\n"},{"pos":[18238,18283],"content":"InitializeServiceProvider(Func<Type, Object>)","needQuote":true,"nodes":[{"content":"InitializeServiceProvider(Func&lt;Type, Object&gt;)","pos":[0,45],"source":"InitializeServiceProvider(Func<Type, Object>)"}]},{"content":"\\n&lt;p&gt;The service provider.&lt;/p&gt;\\n","pos":[19573,19605],"source":"\\n<p>The service provider.</p>\\n"},{"pos":[20117,20154],"content":"System.ComponentModel.DataAnnotations","needQuote":true,"nodes":[{"content":"System.ComponentModel.DataAnnotations","pos":[0,37]}]},{"pos":[20378,20384],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20539,20555],"content":"IServiceProvider","needQuote":true,"nodes":[{"content":"IServiceProvider","pos":[0,16]}]},{"pos":[20745,20755],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[20850,20858],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[20927,20928],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20955,20956],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21026,21034],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[21103,21104],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21131,21132],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21315,21329],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[21448,21454],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[21521,21522],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21572,21578],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21638,21639],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21722,21728],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[21795,21796],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21846,21852],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21912,21913],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22127,22149],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[22297,22303],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[22370,22371],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22421,22427],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[22488,22489]},{"pos":[22544,22550],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22610,22611],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22708,22714],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[22781,22782],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22832,22838],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[22899,22900]},{"pos":[22955,22961],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23021,23022],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23267,23298],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[23464,23479],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[23555,23556],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23606,23612],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[23673,23674]},{"pos":[23729,23735],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23795,23796],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23902,23917],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[23993,23994],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24044,24050],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[24111,24112]},{"pos":[24167,24173],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24233,24234],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24464,24477],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[24578,24589],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[24661,24662],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24689,24690],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24763,24774],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[24846,24847],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24874,24875],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25050,25059],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[25152,25159],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[25227,25228],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25255,25256],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25325,25332],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[25400,25401],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25428,25429],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25604,25621],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[25730,25745],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[25821,25822],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25849,25850],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25927,25942],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[26018,26019],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26046,26047],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26192,26198],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[26438,26465],"content":"IDictionary<Object, Object>","needQuote":true,"nodes":[{"content":"IDictionary&lt;Object, Object&gt;","pos":[0,27],"source":"IDictionary<Object, Object>"}]},{"pos":[26751,26762],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"pos":[26847,26848],"content":"<","needQuote":true,"nodes":[]},{"pos":[26898,26904],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[26965,26966]},{"pos":[27021,27027],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[27180,27191],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"content":"(Of","pos":[27277,27280]},{"pos":[27337,27343],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[27404,27405]},{"pos":[27460,27466],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[27526,27527],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27797,27822],"content":"IDictionary<TKey, TValue>","needQuote":true,"nodes":[{"content":"IDictionary&lt;TKey, TValue&gt;","pos":[0,25],"source":"IDictionary<TKey, TValue>"}]},{"pos":[28074,28085],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"pos":[28149,28150],"content":"<","needQuote":true,"nodes":[]},{"pos":[28177,28181],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[28212,28213]},{"pos":[28245,28251],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[28376,28387],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"content":"(Of","pos":[28452,28455]},{"pos":[28489,28493],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[28524,28525]},{"pos":[28557,28563],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[28595,28596],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28821,28847],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]},{"pos":[29038,29044],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[29187,29191],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[29380,29396],"content":"GetService(Type)","needQuote":true,"nodes":[{"content":"GetService(Type)","pos":[0,16]}]},{"pos":[29539,29549],"content":"GetService","needQuote":true,"nodes":[{"content":"GetService","pos":[0,10]}]},{"pos":[29630,29631],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29679,29683],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[29741,29742],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29837,29847],"content":"GetService","needQuote":true,"nodes":[{"content":"GetService","pos":[0,10]}]},{"pos":[29928,29929],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29977,29981],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[30039,30040],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30269,30287],"content":"Func<Type, Object>","needQuote":true,"nodes":[{"content":"Func&lt;Type, Object&gt;","pos":[0,18],"source":"Func<Type, Object>"}]},{"pos":[30479,30483],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[30541,30542],"content":"<","needQuote":true,"nodes":[]},{"pos":[30590,30594],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[30653,30654]},{"pos":[30709,30715],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[30841,30845],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[30904,30907]},{"pos":[30962,30966],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[31025,31026]},{"pos":[31081,31087],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[31147,31148],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31344,31360],"content":"Func<T, TResult>","needQuote":true,"nodes":[{"content":"Func&lt;T, TResult&gt;","pos":[0,16],"source":"Func<T, TResult>"}]},{"pos":[31518,31522],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[31559,31560],"content":"<","needQuote":true,"nodes":[]},{"pos":[31587,31588],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[31616,31617]},{"pos":[31649,31656],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[31755,31759],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[31797,31800]},{"pos":[31834,31835],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[31863,31864]},{"pos":[31896,31903],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[31936,31937],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]}],"content":"items:\n- uid: System.ComponentModel.DataAnnotations.ValidationContext\n  commentId: T:System.ComponentModel.DataAnnotations.ValidationContext\n  id: ValidationContext\n  parent: System.ComponentModel.DataAnnotations\n  children:\n  - System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object)\n  - System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object,System.Collections.Generic.IDictionary{System.Object,System.Object})\n  - System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object,System.IServiceProvider,System.Collections.Generic.IDictionary{System.Object,System.Object})\n  - System.ComponentModel.DataAnnotations.ValidationContext.DisplayName\n  - System.ComponentModel.DataAnnotations.ValidationContext.GetService(System.Type)\n  - System.ComponentModel.DataAnnotations.ValidationContext.InitializeServiceProvider(System.Func{System.Type,System.Object})\n  - System.ComponentModel.DataAnnotations.ValidationContext.Items\n  - System.ComponentModel.DataAnnotations.ValidationContext.MemberName\n  - System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance\n  - System.ComponentModel.DataAnnotations.ValidationContext.ObjectType\n  langs:\n  - csharp\n  - vb\n  name: ValidationContext\n  fullName: System.ComponentModel.DataAnnotations.ValidationContext\n  type: Class\n  source:\n    remote:\n      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ValidationContext\n    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs\n    startLine: 24\n  assemblies:\n  - System.ComponentModel.Annotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: \"\\n<p>Describes the context in which a validation check is performed.</p>\\n\"\n  syntax:\n    content: 'public sealed class ValidationContext : IServiceProvider'\n    content.vb: >-\n      Public NotInheritable Class ValidationContext\n          Implements IServiceProvider\n  inheritance:\n  - System.Object\n  implements:\n  - System.IServiceProvider\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: ValidationContext\n- uid: System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object)\n  commentId: M:System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object)\n  id: '#ctor(System.Object)'\n  parent: System.ComponentModel.DataAnnotations.ValidationContext\n  langs:\n  - csharp\n  - vb\n  name: ValidationContext(Object)\n  fullName: System.ComponentModel.DataAnnotations.ValidationContext.ValidationContext(System.Object)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs\n    startLine: 46\n  assemblies:\n  - System.ComponentModel.Annotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.ComponentModel.DataAnnotations.ValidationContext\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using the specified object instance</p>\\n\"\n  syntax:\n    content: public ValidationContext(object instance)\n    content.vb: Public Sub New(instance As Object)\n    parameters:\n    - id: instance\n      type: System.Object\n      description: \"\\n<p>The object instance to validate. It cannot be <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ValidationContext.ValidationContext(Object)\n- uid: System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object,System.Collections.Generic.IDictionary{System.Object,System.Object})\n  commentId: M:System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object,System.Collections.Generic.IDictionary{System.Object,System.Object})\n  id: '#ctor(System.Object,System.Collections.Generic.IDictionary{System.Object,System.Object})'\n  parent: System.ComponentModel.DataAnnotations.ValidationContext\n  langs:\n  - csharp\n  - vb\n  name: ValidationContext(Object, IDictionary<Object, Object>)\n  fullName: System.ComponentModel.DataAnnotations.ValidationContext.ValidationContext(System.Object, System.Collections.Generic.IDictionary<System.Object, System.Object>)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs\n    startLine: 62\n  assemblies:\n  - System.ComponentModel.Annotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.ComponentModel.DataAnnotations.ValidationContext\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using the specified object and an optional property bag.</p>\\n\"\n  syntax:\n    content: public ValidationContext(object instance, IDictionary<object, object> items)\n    content.vb: Public Sub New(instance As Object, items As IDictionary(Of Object, Object))\n    parameters:\n    - id: instance\n      type: System.Object\n      description: \"\\n<p>The object instance to validate.  It cannot be <strong>null</strong></p>\\n\"\n    - id: items\n      type: System.Collections.Generic.IDictionary{System.Object,System.Object}\n      description: \"\\n<p>An optional set of key/value pairs to make available to consumers.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.ComponentModel.DataAnnotations.ValidationContext.ValidationContext(System.Object, System.Collections.Generic.IDictionary(Of System.Object, System.Object))\n  name.vb: ValidationContext(Object, IDictionary(Of Object, Object))\n  nameWithType: ValidationContext.ValidationContext(Object, IDictionary<Object, Object>)\n  nameWithType.vb: ValidationContext.ValidationContext(Object, IDictionary(Of Object, Object))\n- uid: System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object,System.IServiceProvider,System.Collections.Generic.IDictionary{System.Object,System.Object})\n  commentId: M:System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object,System.IServiceProvider,System.Collections.Generic.IDictionary{System.Object,System.Object})\n  id: '#ctor(System.Object,System.IServiceProvider,System.Collections.Generic.IDictionary{System.Object,System.Object})'\n  parent: System.ComponentModel.DataAnnotations.ValidationContext\n  langs:\n  - csharp\n  - vb\n  name: ValidationContext(Object, IServiceProvider, IDictionary<Object, Object>)\n  fullName: System.ComponentModel.DataAnnotations.ValidationContext.ValidationContext(System.Object, System.IServiceProvider, System.Collections.Generic.IDictionary<System.Object, System.Object>)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs\n    startLine: 83\n  assemblies:\n  - System.ComponentModel.Annotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.ComponentModel.DataAnnotations.ValidationContext\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using the service provider and dictionary of service consumers. </p>\\n\"\n  syntax:\n    content: public ValidationContext(object instance, IServiceProvider serviceProvider, IDictionary<object, object> items)\n    content.vb: Public Sub New(instance As Object, serviceProvider As IServiceProvider, items As IDictionary(Of Object, Object))\n    parameters:\n    - id: instance\n      type: System.Object\n      description: \"\\n<p>The object to validate. This parameter is required.</p>\\n\"\n    - id: serviceProvider\n      type: System.IServiceProvider\n      description: \"\\n<p>The object that implements the <xref href=\\\"System.IServiceProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> interface. This parameter is optional.</p>\\n\"\n    - id: items\n      type: System.Collections.Generic.IDictionary{System.Object,System.Object}\n      description: \"\\n<p>A dictionary of key/value pairs to make available to the service consumers. This parameter is optional.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.ComponentModel.DataAnnotations.ValidationContext.ValidationContext(System.Object, System.IServiceProvider, System.Collections.Generic.IDictionary(Of System.Object, System.Object))\n  name.vb: ValidationContext(Object, IServiceProvider, IDictionary(Of Object, Object))\n  nameWithType: ValidationContext.ValidationContext(Object, IServiceProvider, IDictionary<Object, Object>)\n  nameWithType.vb: ValidationContext.ValidationContext(Object, IServiceProvider, IDictionary(Of Object, Object))\n- uid: System.ComponentModel.DataAnnotations.ValidationContext.DisplayName\n  commentId: P:System.ComponentModel.DataAnnotations.ValidationContext.DisplayName\n  id: DisplayName\n  parent: System.ComponentModel.DataAnnotations.ValidationContext\n  langs:\n  - csharp\n  - vb\n  name: DisplayName\n  fullName: System.ComponentModel.DataAnnotations.ValidationContext.DisplayName\n  type: Property\n  source:\n    remote:\n      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DisplayName\n    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs\n    startLine: 143\n  assemblies:\n  - System.ComponentModel.Annotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: \"\\n<p>Gets or sets the name of the member to validate. </p>\\n\"\n  syntax:\n    content: public string DisplayName { get; set; }\n    content.vb: Public Property DisplayName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The name of the member to validate. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: ValidationContext.DisplayName\n- uid: System.ComponentModel.DataAnnotations.ValidationContext.Items\n  commentId: P:System.ComponentModel.DataAnnotations.ValidationContext.Items\n  id: Items\n  parent: System.ComponentModel.DataAnnotations.ValidationContext\n  langs:\n  - csharp\n  - vb\n  name: Items\n  fullName: System.ComponentModel.DataAnnotations.ValidationContext.Items\n  type: Property\n  source:\n    remote:\n      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Items\n    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs\n    startLine: 187\n  assemblies:\n  - System.ComponentModel.Annotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: \"\\n<p>Gets the dictionary of key/value pairs that is associated with this context.</p>\\n\"\n  syntax:\n    content: public IDictionary<object, object> Items { get; }\n    content.vb: Public ReadOnly Property Items As IDictionary(Of Object, Object)\n    parameters: []\n    return:\n      type: System.Collections.Generic.IDictionary{System.Object,System.Object}\n      description: \"\\n<p>The dictionary of the key/value pairs for this context.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ValidationContext.Items\n- uid: System.ComponentModel.DataAnnotations.ValidationContext.MemberName\n  commentId: P:System.ComponentModel.DataAnnotations.ValidationContext.MemberName\n  id: MemberName\n  parent: System.ComponentModel.DataAnnotations.ValidationContext\n  langs:\n  - csharp\n  - vb\n  name: MemberName\n  fullName: System.ComponentModel.DataAnnotations.ValidationContext.MemberName\n  type: Property\n  source:\n    remote:\n      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MemberName\n    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs\n    startLine: 174\n  assemblies:\n  - System.ComponentModel.Annotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: \"\\n<p>Gets or sets the name of the member to validate. </p>\\n\"\n  syntax:\n    content: public string MemberName { get; set; }\n    content.vb: Public Property MemberName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The name of the member to validate. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: ValidationContext.MemberName\n- uid: System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance\n  commentId: P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance\n  id: ObjectInstance\n  parent: System.ComponentModel.DataAnnotations.ValidationContext\n  langs:\n  - csharp\n  - vb\n  name: ObjectInstance\n  fullName: System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance\n  type: Property\n  source:\n    remote:\n      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ObjectInstance\n    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs\n    startLine: 121\n  assemblies:\n  - System.ComponentModel.Annotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: \"\\n<p>Gets the object to validate.</p>\\n\"\n  syntax:\n    content: public object ObjectInstance { get; }\n    content.vb: Public ReadOnly Property ObjectInstance As Object\n    parameters: []\n    return:\n      type: System.Object\n      description: \"\\n<p>The object to validate.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ValidationContext.ObjectInstance\n- uid: System.ComponentModel.DataAnnotations.ValidationContext.ObjectType\n  commentId: P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectType\n  id: ObjectType\n  parent: System.ComponentModel.DataAnnotations.ValidationContext\n  langs:\n  - csharp\n  - vb\n  name: ObjectType\n  fullName: System.ComponentModel.DataAnnotations.ValidationContext.ObjectType\n  type: Property\n  source:\n    remote:\n      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ObjectType\n    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs\n    startLine: 129\n  assemblies:\n  - System.ComponentModel.Annotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: \"\\n<p>Gets the type of the object to validate.</p>\\n\"\n  syntax:\n    content: public Type ObjectType { get; }\n    content.vb: Public ReadOnly Property ObjectType As Type\n    parameters: []\n    return:\n      type: System.Type\n      description: \"\\n<p>The type of the object to validate.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ValidationContext.ObjectType\n- uid: System.ComponentModel.DataAnnotations.ValidationContext.GetService(System.Type)\n  commentId: M:System.ComponentModel.DataAnnotations.ValidationContext.GetService(System.Type)\n  id: GetService(System.Type)\n  parent: System.ComponentModel.DataAnnotations.ValidationContext\n  langs:\n  - csharp\n  - vb\n  name: GetService(Type)\n  fullName: System.ComponentModel.DataAnnotations.ValidationContext.GetService(System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetService\n    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs\n    startLine: 246\n  assemblies:\n  - System.ComponentModel.Annotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: \"\\n<p>Returns the service that provides custom validation.</p>\\n\"\n  syntax:\n    content: public object GetService(Type serviceType)\n    content.vb: Public Function GetService(serviceType As Type) As Object\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: \"\\n<p>The type of the service to use for validation.</p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>An instance of the service, or <strong>null</strong> if the service is not available.</p>\\n\"\n  seealso:\n  - type: System.IServiceProvider.GetService(System.Type)\n    commentId: M:System.IServiceProvider.GetService(System.Type)\n  implements:\n  - System.IServiceProvider.GetService(System.Type)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ValidationContext.GetService(Type)\n- uid: System.ComponentModel.DataAnnotations.ValidationContext.InitializeServiceProvider(System.Func{System.Type,System.Object})\n  commentId: M:System.ComponentModel.DataAnnotations.ValidationContext.InitializeServiceProvider(System.Func{System.Type,System.Object})\n  id: InitializeServiceProvider(System.Func{System.Type,System.Object})\n  parent: System.ComponentModel.DataAnnotations.ValidationContext\n  langs:\n  - csharp\n  - vb\n  name: InitializeServiceProvider(Func<Type, Object>)\n  fullName: System.ComponentModel.DataAnnotations.ValidationContext.InitializeServiceProvider(System.Func<System.Type, System.Object>)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: InitializeServiceProvider\n    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs\n    startLine: 232\n  assemblies:\n  - System.ComponentModel.Annotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: \"\\n<p>Initializes the <xref href=\\\"System.ComponentModel.DataAnnotations.ValidationContext\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> using a service provider that can return service instances by type when <see href=\\\"http://msdn.microsoft.com/library/system.web.mvc.idependencyresolver.getservice(VS.98).aspx\\\">GetService</see> is called.</p>\\n\"\n  syntax:\n    content: public void InitializeServiceProvider(Func<Type, object> serviceProvider)\n    content.vb: Public Sub InitializeServiceProvider(serviceProvider As Func(Of Type, Object))\n    parameters:\n    - id: serviceProvider\n      type: System.Func{System.Type,System.Object}\n      description: \"\\n<p>The service provider.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.ComponentModel.DataAnnotations.ValidationContext.InitializeServiceProvider(System.Func(Of System.Type, System.Object))\n  name.vb: InitializeServiceProvider(Func(Of Type, Object))\n  nameWithType: ValidationContext.InitializeServiceProvider(Func<Type, Object>)\n  nameWithType.vb: ValidationContext.InitializeServiceProvider(Func(Of Type, Object))\nreferences:\n- uid: System.ComponentModel.DataAnnotations\n  isExternal: false\n  name: System.ComponentModel.DataAnnotations\n  fullName: System.ComponentModel.DataAnnotations\n  nameWithType: System.ComponentModel.DataAnnotations\n  commentId: N:System.ComponentModel.DataAnnotations\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.IServiceProvider\n  parent: System\n  isExternal: false\n  name: IServiceProvider\n  fullName: System.IServiceProvider\n  nameWithType: IServiceProvider\n  commentId: T:System.IServiceProvider\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Collections.Generic.IDictionary{System.Object,System.Object}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IDictionary`2\n  name: IDictionary<Object, Object>\n  fullName: System.Collections.Generic.IDictionary<System.Object, System.Object>\n  fullname.vb: System.Collections.Generic.IDictionary(Of System.Object, System.Object)\n  name.vb: IDictionary(Of Object, Object)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IDictionary<Object, Object>\n  nameWithType.vb: IDictionary(Of Object, Object)\n  commentId: T:System.Collections.Generic.IDictionary{System.Object,System.Object}\n- uid: System.Collections.Generic.IDictionary`2\n  isExternal: false\n  name: IDictionary<TKey, TValue>\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)\n  name.vb: IDictionary(Of TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: IDictionary<TKey, TValue>\n  nameWithType.vb: IDictionary(Of TKey, TValue)\n  commentId: T:System.Collections.Generic.IDictionary`2\n- uid: System.Collections.Generic\n  isExternal: false\n  name: System.Collections.Generic\n  fullName: System.Collections.Generic\n  nameWithType: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  nameWithType: Type\n  commentId: T:System.Type\n- uid: System.IServiceProvider.GetService(System.Type)\n  parent: System.IServiceProvider\n  isExternal: true\n  name: GetService(Type)\n  fullName: System.IServiceProvider.GetService(System.Type)\n  spec.csharp:\n  - uid: System.IServiceProvider.GetService(System.Type)\n    name: GetService\n    fullName: System.IServiceProvider.GetService\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IServiceProvider.GetService(System.Type)\n    name: GetService\n    fullName: System.IServiceProvider.GetService\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IServiceProvider.GetService(Type)\n  commentId: M:System.IServiceProvider.GetService(System.Type)\n- uid: System.Func{System.Type,System.Object}\n  parent: System\n  definition: System.Func`2\n  name: Func<Type, Object>\n  fullName: System.Func<System.Type, System.Object>\n  fullname.vb: System.Func(Of System.Type, System.Object)\n  name.vb: Func(Of Type, Object)\n  spec.csharp:\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Func<Type, Object>\n  nameWithType.vb: Func(Of Type, Object)\n  commentId: T:System.Func{System.Type,System.Object}\n- uid: System.Func`2\n  isExternal: false\n  name: Func<T, TResult>\n  fullName: System.Func<T, TResult>\n  fullname.vb: System.Func(Of T, TResult)\n  name.vb: Func(Of T, TResult)\n  spec.csharp:\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  nameWithType: Func<T, TResult>\n  nameWithType.vb: Func(Of T, TResult)\n  commentId: T:System.Func`2\n"}