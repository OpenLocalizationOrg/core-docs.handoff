{"nodes":[{"pos":[850,873],"content":"DateTimeOffsetConverter","needQuote":true,"nodes":[{"content":"DateTimeOffsetConverter","pos":[0,23]}]},{"pos":[5712,5737],"content":"DateTimeOffsetConverter()","needQuote":true,"nodes":[{"content":"DateTimeOffsetConverter()","pos":[0,25]}]},{"pos":[7057,7101],"content":"CanConvertFrom(ITypeDescriptorContext, Type)","needQuote":true,"nodes":[{"content":"CanConvertFrom(ITypeDescriptorContext, Type)","pos":[0,44]}]},{"content":"\\n&lt;p&gt;The date format context.&lt;/p&gt;\\n","pos":[8228,8263],"source":"\\n<p>The date format context.</p>\\n"},{"content":"\\n&lt;p&gt;The source type to check.&lt;/p&gt;\\n","pos":[8330,8366],"source":"\\n<p>The source type to check.</p>\\n"},{"pos":[9342,9384],"content":"CanConvertTo(ITypeDescriptorContext, Type)","needQuote":true,"nodes":[{"content":"CanConvertTo(ITypeDescriptorContext, Type)","pos":[0,42]}]},{"content":"\\n&lt;p&gt;The date format context.&lt;/p&gt;\\n","pos":[10506,10541],"source":"\\n<p>The date format context.</p>\\n"},{"content":"\\n&lt;p&gt;The destination type to check.&lt;/p&gt;\\n","pos":[10613,10654],"source":"\\n<p>The destination type to check.</p>\\n"},{"pos":[11728,11784],"content":"ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)","needQuote":true,"nodes":[{"content":"ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)","pos":[0,56]}]},{"content":"\\n&lt;p&gt;The date format context.&lt;/p&gt;\\n","pos":[12910,12945],"source":"\\n<p>The date format context.</p>\\n"},{"content":"\\n&lt;p&gt;The date culture.&lt;/p&gt;\\n","pos":[13030,13058],"source":"\\n<p>The date culture.</p>\\n"},{"content":"\\n&lt;p&gt;The object to be converted.&lt;/p&gt;\\n","pos":[13122,13160],"source":"\\n<p>The object to be converted.</p>\\n"},{"content":"\\n&lt;p&gt;The conversion cannot be performed.&lt;/p&gt;\\n","pos":[13626,13672],"source":"\\n<p>The conversion cannot be performed.</p>\\n"},{"pos":[14412,14472],"content":"ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)","needQuote":true,"nodes":[{"content":"ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)","pos":[0,60]}]},{"content":"\\n&lt;p&gt;The date format context.&lt;/p&gt;\\n","pos":[15661,15696],"source":"\\n<p>The date format context.</p>\\n"},{"content":"\\n&lt;p&gt;The date culture.&lt;/p&gt;\\n","pos":[15781,15809],"source":"\\n<p>The date culture.</p>\\n"},{"content":"\\n&lt;p&gt;The type to convert to.&lt;/p&gt;\\n","pos":[16058,16092],"source":"\\n<p>The type to convert to.</p>\\n"},{"content":"\\n&lt;p&gt;The conversion cannot be performed.&lt;/p&gt;\\n","pos":[16582,16628],"source":"\\n<p>The conversion cannot be performed.</p>\\n"},{"pos":[16885,16906],"content":"System.ComponentModel","needQuote":true,"nodes":[{"content":"System.ComponentModel","pos":[0,21]}]},{"pos":[17082,17088],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17270,17283],"content":"TypeConverter","needQuote":true,"nodes":[{"content":"TypeConverter","pos":[0,13]}]},{"pos":[17557,17577],"content":"CanConvertFrom(Type)","needQuote":true,"nodes":[{"content":"CanConvertFrom(Type)","pos":[0,20]}]},{"pos":[17752,17766],"content":"CanConvertFrom","needQuote":true,"nodes":[{"content":"CanConvertFrom","pos":[0,14]}]},{"pos":[17842,17843],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17891,17895],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[17953,17954],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18065,18079],"content":"CanConvertFrom","needQuote":true,"nodes":[{"content":"CanConvertFrom","pos":[0,14]}]},{"pos":[18155,18156],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18204,18208],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[18266,18267],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18556,18574],"content":"CanConvertTo(Type)","needQuote":true,"nodes":[{"content":"CanConvertTo(Type)","pos":[0,18]}]},{"pos":[18745,18757],"content":"CanConvertTo","needQuote":true,"nodes":[{"content":"CanConvertTo","pos":[0,12]}]},{"pos":[18831,18832],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18880,18884],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[18942,18943],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19052,19064],"content":"CanConvertTo","needQuote":true,"nodes":[{"content":"CanConvertTo","pos":[0,12]}]},{"pos":[19138,19139],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19187,19191],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[19249,19250],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19536,19555],"content":"ConvertFrom(Object)","needQuote":true,"nodes":[{"content":"ConvertFrom(Object)","pos":[0,19]}]},{"pos":[19728,19739],"content":"ConvertFrom","needQuote":true,"nodes":[{"content":"ConvertFrom","pos":[0,11]}]},{"pos":[19812,19813],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19863,19869],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19929,19930],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20040,20051],"content":"ConvertFrom","needQuote":true,"nodes":[{"content":"ConvertFrom","pos":[0,11]}]},{"pos":[20124,20125],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20175,20181],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20241,20242],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20590,20648],"content":"ConvertFromInvariantString(ITypeDescriptorContext, String)","needQuote":true,"nodes":[{"content":"ConvertFromInvariantString(ITypeDescriptorContext, String)","pos":[0,58]}]},{"pos":[20942,20968],"content":"ConvertFromInvariantString","needQuote":true,"nodes":[{"content":"ConvertFromInvariantString","pos":[0,26]}]},{"pos":[21056,21057],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21138,21160],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[21231,21232]},{"pos":[21287,21293],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[21353,21354],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21524,21550],"content":"ConvertFromInvariantString","needQuote":true,"nodes":[{"content":"ConvertFromInvariantString","pos":[0,26]}]},{"pos":[21638,21639],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21720,21742],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[21813,21814]},{"pos":[21869,21875],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[21935,21936],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22338,22372],"content":"ConvertFromInvariantString(String)","needQuote":true,"nodes":[{"content":"ConvertFromInvariantString(String)","pos":[0,34]}]},{"pos":[22575,22601],"content":"ConvertFromInvariantString","needQuote":true,"nodes":[{"content":"ConvertFromInvariantString","pos":[0,26]}]},{"pos":[22689,22690],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22740,22746],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[22806,22807],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22932,22958],"content":"ConvertFromInvariantString","needQuote":true,"nodes":[{"content":"ConvertFromInvariantString","pos":[0,26]}]},{"pos":[23046,23047],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23097,23103],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[23163,23164],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23566,23628],"content":"ConvertFromString(ITypeDescriptorContext, CultureInfo, String)","needQuote":true,"nodes":[{"content":"ConvertFromString(ITypeDescriptorContext, CultureInfo, String)","pos":[0,62]}]},{"pos":[23971,23988],"content":"ConvertFromString","needQuote":true,"nodes":[{"content":"ConvertFromString","pos":[0,17]}]},{"pos":[24067,24068],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24149,24171],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[24242,24243]},{"pos":[24317,24328],"content":"CultureInfo","needQuote":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"content":",","pos":[24408,24409]},{"pos":[24464,24470],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[24530,24531],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24725,24742],"content":"ConvertFromString","needQuote":true,"nodes":[{"content":"ConvertFromString","pos":[0,17]}]},{"pos":[24821,24822],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24903,24925],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[24996,24997]},{"pos":[25071,25082],"content":"CultureInfo","needQuote":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"content":",","pos":[25162,25163]},{"pos":[25218,25224],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[25284,25285],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25751,25800],"content":"ConvertFromString(ITypeDescriptorContext, String)","needQuote":true,"nodes":[{"content":"ConvertFromString(ITypeDescriptorContext, String)","pos":[0,49]}]},{"pos":[26076,26093],"content":"ConvertFromString","needQuote":true,"nodes":[{"content":"ConvertFromString","pos":[0,17]}]},{"pos":[26172,26173],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26254,26276],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[26347,26348]},{"pos":[26403,26409],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[26469,26470],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26631,26648],"content":"ConvertFromString","needQuote":true,"nodes":[{"content":"ConvertFromString","pos":[0,17]}]},{"pos":[26727,26728],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26809,26831],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[26902,26903]},{"pos":[26958,26964],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[27024,27025],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27400,27425],"content":"ConvertFromString(String)","needQuote":true,"nodes":[{"content":"ConvertFromString(String)","pos":[0,25]}]},{"pos":[27610,27627],"content":"ConvertFromString","needQuote":true,"nodes":[{"content":"ConvertFromString","pos":[0,17]}]},{"pos":[27706,27707],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27757,27763],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[27823,27824],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27940,27957],"content":"ConvertFromString","needQuote":true,"nodes":[{"content":"ConvertFromString","pos":[0,17]}]},{"pos":[28036,28037],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28087,28093],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[28153,28154],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28464,28487],"content":"ConvertTo(Object, Type)","needQuote":true,"nodes":[{"content":"ConvertTo(Object, Type)","pos":[0,23]}]},{"pos":[28681,28690],"content":"ConvertTo","needQuote":true,"nodes":[{"content":"ConvertTo","pos":[0,9]}]},{"pos":[28761,28762],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28812,28818],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[28879,28880]},{"pos":[28933,28937],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[28995,28996],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29116,29125],"content":"ConvertTo","needQuote":true,"nodes":[{"content":"ConvertTo","pos":[0,9]}]},{"pos":[29196,29197],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29247,29253],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[29314,29315]},{"pos":[29368,29372],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[29430,29431],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29791,29847],"content":"ConvertToInvariantString(ITypeDescriptorContext, Object)","needQuote":true,"nodes":[{"content":"ConvertToInvariantString(ITypeDescriptorContext, Object)","pos":[0,56]}]},{"pos":[30137,30161],"content":"ConvertToInvariantString","needQuote":true,"nodes":[{"content":"ConvertToInvariantString","pos":[0,24]}]},{"pos":[30247,30248],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30329,30351],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[30422,30423]},{"pos":[30478,30484],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[30544,30545],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30713,30737],"content":"ConvertToInvariantString","needQuote":true,"nodes":[{"content":"ConvertToInvariantString","pos":[0,24]}]},{"pos":[30823,30824],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30905,30927],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[30998,30999]},{"pos":[31054,31060],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[31120,31121],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31517,31549],"content":"ConvertToInvariantString(Object)","needQuote":true,"nodes":[{"content":"ConvertToInvariantString(Object)","pos":[0,32]}]},{"pos":[31748,31772],"content":"ConvertToInvariantString","needQuote":true,"nodes":[{"content":"ConvertToInvariantString","pos":[0,24]}]},{"pos":[31858,31859],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31909,31915],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[31975,31976],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32099,32123],"content":"ConvertToInvariantString","needQuote":true,"nodes":[{"content":"ConvertToInvariantString","pos":[0,24]}]},{"pos":[32209,32210],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32260,32266],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[32326,32327],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32723,32783],"content":"ConvertToString(ITypeDescriptorContext, CultureInfo, Object)","needQuote":true,"nodes":[{"content":"ConvertToString(ITypeDescriptorContext, CultureInfo, Object)","pos":[0,60]}]},{"pos":[33122,33137],"content":"ConvertToString","needQuote":true,"nodes":[{"content":"ConvertToString","pos":[0,15]}]},{"pos":[33214,33215],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33296,33318],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[33389,33390]},{"pos":[33464,33475],"content":"CultureInfo","needQuote":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"content":",","pos":[33555,33556]},{"pos":[33611,33617],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[33677,33678],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33870,33885],"content":"ConvertToString","needQuote":true,"nodes":[{"content":"ConvertToString","pos":[0,15]}]},{"pos":[33962,33963],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34044,34066],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[34137,34138]},{"pos":[34212,34223],"content":"CultureInfo","needQuote":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"content":",","pos":[34303,34304]},{"pos":[34359,34365],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[34425,34426],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34886,34933],"content":"ConvertToString(ITypeDescriptorContext, Object)","needQuote":true,"nodes":[{"content":"ConvertToString(ITypeDescriptorContext, Object)","pos":[0,47]}]},{"pos":[35205,35220],"content":"ConvertToString","needQuote":true,"nodes":[{"content":"ConvertToString","pos":[0,15]}]},{"pos":[35297,35298],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35379,35401],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[35472,35473]},{"pos":[35528,35534],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[35594,35595],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35754,35769],"content":"ConvertToString","needQuote":true,"nodes":[{"content":"ConvertToString","pos":[0,15]}]},{"pos":[35846,35847],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35928,35950],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[36021,36022]},{"pos":[36077,36083],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[36143,36144],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36513,36536],"content":"ConvertToString(Object)","needQuote":true,"nodes":[{"content":"ConvertToString(Object)","pos":[0,23]}]},{"pos":[36717,36732],"content":"ConvertToString","needQuote":true,"nodes":[{"content":"ConvertToString","pos":[0,15]}]},{"pos":[36809,36810],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36860,36866],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[36926,36927],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37041,37056],"content":"ConvertToString","needQuote":true,"nodes":[{"content":"ConvertToString","pos":[0,15]}]},{"pos":[37133,37134],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37184,37190],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[37250,37251],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37567,37594],"content":"CreateInstance(IDictionary)","needQuote":true,"nodes":[{"content":"CreateInstance(IDictionary)","pos":[0,27]}]},{"pos":[37807,37821],"content":"CreateInstance","needQuote":true,"nodes":[{"content":"CreateInstance","pos":[0,14]}]},{"pos":[37897,37898],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37965,37976],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"pos":[38053,38054],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38184,38198],"content":"CreateInstance","needQuote":true,"nodes":[{"content":"CreateInstance","pos":[0,14]}]},{"pos":[38274,38275],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38342,38353],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"pos":[38430,38431],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38812,38863],"content":"CreateInstance(ITypeDescriptorContext, IDictionary)","needQuote":true,"nodes":[{"content":"CreateInstance(ITypeDescriptorContext, IDictionary)","pos":[0,51]}]},{"pos":[39167,39181],"content":"CreateInstance","needQuote":true,"nodes":[{"content":"CreateInstance","pos":[0,14]}]},{"pos":[39257,39258],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39339,39361],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[39432,39433]},{"pos":[39505,39516],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"pos":[39593,39594],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39769,39783],"content":"CreateInstance","needQuote":true,"nodes":[{"content":"CreateInstance","pos":[0,14]}]},{"pos":[39859,39860],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39941,39963],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[40034,40035]},{"pos":[40107,40118],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"pos":[40195,40196],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40593,40624],"content":"GetConvertFromException(Object)","needQuote":true,"nodes":[{"content":"GetConvertFromException(Object)","pos":[0,31]}]},{"pos":[40821,40844],"content":"GetConvertFromException","needQuote":true,"nodes":[{"content":"GetConvertFromException","pos":[0,23]}]},{"pos":[40929,40930],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40980,40986],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[41046,41047],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41169,41192],"content":"GetConvertFromException","needQuote":true,"nodes":[{"content":"GetConvertFromException","pos":[0,23]}]},{"pos":[41277,41278],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41328,41334],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[41394,41395],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41729,41764],"content":"GetConvertToException(Object, Type)","needQuote":true,"nodes":[{"content":"GetConvertToException(Object, Type)","pos":[0,35]}]},{"pos":[41982,42003],"content":"GetConvertToException","needQuote":true,"nodes":[{"content":"GetConvertToException","pos":[0,21]}]},{"pos":[42086,42087],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42137,42143],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[42204,42205]},{"pos":[42258,42262],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[42320,42321],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42453,42474],"content":"GetConvertToException","needQuote":true,"nodes":[{"content":"GetConvertToException","pos":[0,21]}]},{"pos":[42557,42558],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42608,42614],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[42675,42676]},{"pos":[42729,42733],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[42791,42792],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43119,43147],"content":"GetCreateInstanceSupported()","needQuote":true,"nodes":[{"content":"GetCreateInstanceSupported()","pos":[0,28]}]},{"pos":[43322,43348],"content":"GetCreateInstanceSupported","needQuote":true,"nodes":[{"content":"GetCreateInstanceSupported","pos":[0,26]}]},{"pos":[43436,43437],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43464,43465],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43575,43601],"content":"GetCreateInstanceSupported","needQuote":true,"nodes":[{"content":"GetCreateInstanceSupported","pos":[0,26]}]},{"pos":[43689,43690],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43717,43718],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44062,44112],"content":"GetCreateInstanceSupported(ITypeDescriptorContext)","needQuote":true,"nodes":[{"content":"GetCreateInstanceSupported(ITypeDescriptorContext)","pos":[0,50]}]},{"pos":[44377,44403],"content":"GetCreateInstanceSupported","needQuote":true,"nodes":[{"content":"GetCreateInstanceSupported","pos":[0,26]}]},{"pos":[44491,44492],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44573,44595],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[44665,44666],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44822,44848],"content":"GetCreateInstanceSupported","needQuote":true,"nodes":[{"content":"GetCreateInstanceSupported","pos":[0,26]}]},{"pos":[44936,44937],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45018,45040],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[45110,45111],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45523,45568],"content":"GetProperties(ITypeDescriptorContext, Object)","needQuote":true,"nodes":[{"content":"GetProperties(ITypeDescriptorContext, Object)","pos":[0,45]}]},{"pos":[45836,45849],"content":"GetProperties","needQuote":true,"nodes":[{"content":"GetProperties","pos":[0,13]}]},{"pos":[45924,45925],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46006,46028],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[46099,46100]},{"pos":[46155,46161],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[46221,46222],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46379,46392],"content":"GetProperties","needQuote":true,"nodes":[{"content":"GetProperties","pos":[0,13]}]},{"pos":[46467,46468],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46549,46571],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[46642,46643]},{"pos":[46698,46704],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[46764,46765],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47192,47250],"content":"GetProperties(ITypeDescriptorContext, Object, Attribute[])","needQuote":true,"nodes":[{"content":"GetProperties(ITypeDescriptorContext, Object, Attribute[])","pos":[0,58]}]},{"pos":[47773,47786],"content":"GetProperties","needQuote":true,"nodes":[{"content":"GetProperties","pos":[0,13]}]},{"pos":[47861,47862],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47943,47965],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[48036,48037]},{"pos":[48092,48098],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[48159,48160]},{"pos":[48218,48227],"content":"Attribute","needQuote":true,"nodes":[{"content":"Attribute","pos":[0,9]}]},{"content":"[]","pos":[48291,48293]},{"pos":[48324,48325],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[48501,48514],"content":"GetProperties","needQuote":true,"nodes":[{"content":"GetProperties","pos":[0,13]}]},{"pos":[48589,48590],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48671,48693],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[48764,48765]},{"pos":[48820,48826],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[48887,48888]},{"pos":[48946,48955],"content":"Attribute","needQuote":true,"nodes":[{"content":"Attribute","pos":[0,9]}]},{"pos":[49018,49020],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[49048,49049],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[49536,49557],"content":"GetProperties(Object)","needQuote":true,"nodes":[{"content":"GetProperties(Object)","pos":[0,21]}]},{"pos":[49734,49747],"content":"GetProperties","needQuote":true,"nodes":[{"content":"GetProperties","pos":[0,13]}]},{"pos":[49822,49823],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[49873,49879],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[49939,49940],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[50052,50065],"content":"GetProperties","needQuote":true,"nodes":[{"content":"GetProperties","pos":[0,13]}]},{"pos":[50140,50141],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[50191,50197],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[50257,50258],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[50547,50571],"content":"GetPropertiesSupported()","needQuote":true,"nodes":[{"content":"GetPropertiesSupported()","pos":[0,24]}]},{"pos":[50738,50760],"content":"GetPropertiesSupported","needQuote":true,"nodes":[{"content":"GetPropertiesSupported","pos":[0,22]}]},{"pos":[50844,50845],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[50872,50873],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[50979,51001],"content":"GetPropertiesSupported","needQuote":true,"nodes":[{"content":"GetPropertiesSupported","pos":[0,22]}]},{"pos":[51085,51086],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51113,51114],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51446,51492],"content":"GetPropertiesSupported(ITypeDescriptorContext)","needQuote":true,"nodes":[{"content":"GetPropertiesSupported(ITypeDescriptorContext)","pos":[0,46]}]},{"pos":[51749,51771],"content":"GetPropertiesSupported","needQuote":true,"nodes":[{"content":"GetPropertiesSupported","pos":[0,22]}]},{"pos":[51855,51856],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51937,51959],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[52029,52030],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[52182,52204],"content":"GetPropertiesSupported","needQuote":true,"nodes":[{"content":"GetPropertiesSupported","pos":[0,22]}]},{"pos":[52288,52289],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[52370,52392],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[52462,52463],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[52812,52831],"content":"GetStandardValues()","needQuote":true,"nodes":[{"content":"GetStandardValues()","pos":[0,19]}]},{"pos":[52988,53005],"content":"GetStandardValues","needQuote":true,"nodes":[{"content":"GetStandardValues","pos":[0,17]}]},{"pos":[53084,53085],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[53112,53113],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53214,53231],"content":"GetStandardValues","needQuote":true,"nodes":[{"content":"GetStandardValues","pos":[0,17]}]},{"pos":[53310,53311],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[53338,53339],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53656,53697],"content":"GetStandardValues(ITypeDescriptorContext)","needQuote":true,"nodes":[{"content":"GetStandardValues(ITypeDescriptorContext)","pos":[0,41]}]},{"pos":[53944,53961],"content":"GetStandardValues","needQuote":true,"nodes":[{"content":"GetStandardValues","pos":[0,17]}]},{"pos":[54040,54041],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[54122,54144],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[54214,54215],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[54362,54379],"content":"GetStandardValues","needQuote":true,"nodes":[{"content":"GetStandardValues","pos":[0,17]}]},{"pos":[54458,54459],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[54540,54562],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[54632,54633],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[54981,55009],"content":"GetStandardValuesExclusive()","needQuote":true,"nodes":[{"content":"GetStandardValuesExclusive()","pos":[0,28]}]},{"pos":[55184,55210],"content":"GetStandardValuesExclusive","needQuote":true,"nodes":[{"content":"GetStandardValuesExclusive","pos":[0,26]}]},{"pos":[55298,55299],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[55326,55327],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55437,55463],"content":"GetStandardValuesExclusive","needQuote":true,"nodes":[{"content":"GetStandardValuesExclusive","pos":[0,26]}]},{"pos":[55551,55552],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[55579,55580],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55924,55974],"content":"GetStandardValuesExclusive(ITypeDescriptorContext)","needQuote":true,"nodes":[{"content":"GetStandardValuesExclusive(ITypeDescriptorContext)","pos":[0,50]}]},{"pos":[56239,56265],"content":"GetStandardValuesExclusive","needQuote":true,"nodes":[{"content":"GetStandardValuesExclusive","pos":[0,26]}]},{"pos":[56353,56354],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[56435,56457],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[56527,56528],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[56684,56710],"content":"GetStandardValuesExclusive","needQuote":true,"nodes":[{"content":"GetStandardValuesExclusive","pos":[0,26]}]},{"pos":[56798,56799],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[56880,56902],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[56972,56973],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57339,57367],"content":"GetStandardValuesSupported()","needQuote":true,"nodes":[{"content":"GetStandardValuesSupported()","pos":[0,28]}]},{"pos":[57542,57568],"content":"GetStandardValuesSupported","needQuote":true,"nodes":[{"content":"GetStandardValuesSupported","pos":[0,26]}]},{"pos":[57656,57657],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57684,57685],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57795,57821],"content":"GetStandardValuesSupported","needQuote":true,"nodes":[{"content":"GetStandardValuesSupported","pos":[0,26]}]},{"pos":[57909,57910],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57937,57938],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58282,58332],"content":"GetStandardValuesSupported(ITypeDescriptorContext)","needQuote":true,"nodes":[{"content":"GetStandardValuesSupported(ITypeDescriptorContext)","pos":[0,50]}]},{"pos":[58597,58623],"content":"GetStandardValuesSupported","needQuote":true,"nodes":[{"content":"GetStandardValuesSupported","pos":[0,26]}]},{"pos":[58711,58712],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58793,58815],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[58885,58886],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59042,59068],"content":"GetStandardValuesSupported","needQuote":true,"nodes":[{"content":"GetStandardValuesSupported","pos":[0,26]}]},{"pos":[59156,59157],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59238,59260],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[59330,59331],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59737,59776],"content":"IsValid(ITypeDescriptorContext, Object)","needQuote":true,"nodes":[{"content":"IsValid(ITypeDescriptorContext, Object)","pos":[0,39]}]},{"pos":[60032,60039],"content":"IsValid","needQuote":true,"nodes":[{"content":"IsValid","pos":[0,7]}]},{"pos":[60108,60109],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60190,60212],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[60283,60284]},{"pos":[60339,60345],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[60405,60406],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60557,60564],"content":"IsValid","needQuote":true,"nodes":[{"content":"IsValid","pos":[0,7]}]},{"pos":[60633,60634],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60715,60737],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[60808,60809]},{"pos":[60864,60870],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[60930,60931],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61276,61291],"content":"IsValid(Object)","needQuote":true,"nodes":[{"content":"IsValid(Object)","pos":[0,15]}]},{"pos":[61456,61463],"content":"IsValid","needQuote":true,"nodes":[{"content":"IsValid","pos":[0,7]}]},{"pos":[61532,61533],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61583,61589],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[61649,61650],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61756,61763],"content":"IsValid","needQuote":true,"nodes":[{"content":"IsValid","pos":[0,7]}]},{"pos":[61832,61833],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61883,61889],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[61949,61950],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62286,62340],"content":"SortProperties(PropertyDescriptorCollection, String[])","needQuote":true,"nodes":[{"content":"SortProperties(PropertyDescriptorCollection, String[])","pos":[0,54]}]},{"pos":[62827,62841],"content":"SortProperties","needQuote":true,"nodes":[{"content":"SortProperties","pos":[0,14]}]},{"pos":[62917,62918],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63005,63033],"content":"PropertyDescriptorCollection","needQuote":true,"nodes":[{"content":"PropertyDescriptorCollection","pos":[0,28]}]},{"content":",","pos":[63110,63111]},{"pos":[63166,63172],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":"[]","pos":[63233,63235]},{"pos":[63266,63267],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63433,63447],"content":"SortProperties","needQuote":true,"nodes":[{"content":"SortProperties","pos":[0,14]}]},{"pos":[63523,63524],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63611,63639],"content":"PropertyDescriptorCollection","needQuote":true,"nodes":[{"content":"PropertyDescriptorCollection","pos":[0,28]}]},{"content":",","pos":[63716,63717]},{"pos":[63772,63778],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[63838,63840],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[63868,63869],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64274,64284],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[64379,64387],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[64456,64457],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64484,64485],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64555,64563],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[64632,64633],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64660,64661],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64844,64858],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[64977,64983],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[65050,65051],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65101,65107],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[65167,65168],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65251,65257],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[65324,65325],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65375,65381],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[65441,65442],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65656,65678],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[65826,65832],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[65899,65900],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65950,65956],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[66017,66018]},{"pos":[66073,66079],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[66139,66140],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66237,66243],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[66310,66311],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66361,66367],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[66428,66429]},{"pos":[66484,66490],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[66550,66551],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66796,66827],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[66993,67008],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[67084,67085],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67135,67141],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[67202,67203]},{"pos":[67258,67264],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[67324,67325],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67431,67446],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[67522,67523],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67573,67579],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[67640,67641]},{"pos":[67696,67702],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[67762,67763],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67993,68006],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[68107,68118],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[68190,68191],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68218,68219],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68292,68303],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[68375,68376],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68403,68404],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68579,68588],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[68681,68688],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[68756,68757],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68784,68785],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68854,68861],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[68929,68930],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68957,68958],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69133,69150],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[69259,69274],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[69350,69351],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69378,69379],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69456,69471],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[69547,69548],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69575,69576],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69721,69727],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[69981,70025],"content":"CanConvertFrom(ITypeDescriptorContext, Type)","needQuote":true,"nodes":[{"content":"CanConvertFrom(ITypeDescriptorContext, Type)","pos":[0,44]}]},{"pos":[70291,70305],"content":"CanConvertFrom","needQuote":true,"nodes":[{"content":"CanConvertFrom","pos":[0,14]}]},{"pos":[70381,70382],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70463,70485],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[70556,70557]},{"pos":[70610,70614],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[70672,70673],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70829,70843],"content":"CanConvertFrom","needQuote":true,"nodes":[{"content":"CanConvertFrom","pos":[0,14]}]},{"pos":[70919,70920],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71001,71023],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[71094,71095]},{"pos":[71148,71152],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[71210,71211],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71539,71561],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[71782,71786],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[71926,71933],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[72202,72244],"content":"CanConvertTo(ITypeDescriptorContext, Type)","needQuote":true,"nodes":[{"content":"CanConvertTo(ITypeDescriptorContext, Type)","pos":[0,42]}]},{"pos":[72506,72518],"content":"CanConvertTo","needQuote":true,"nodes":[{"content":"CanConvertTo","pos":[0,12]}]},{"pos":[72592,72593],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72674,72696],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[72767,72768]},{"pos":[72821,72825],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[72883,72884],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73038,73050],"content":"CanConvertTo","needQuote":true,"nodes":[{"content":"CanConvertTo","pos":[0,12]}]},{"pos":[73124,73125],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73206,73228],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[73299,73300]},{"pos":[73353,73357],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[73415,73416],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73849,73905],"content":"ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)","needQuote":true,"nodes":[{"content":"ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)","pos":[0,56]}]},{"pos":[74236,74247],"content":"ConvertFrom","needQuote":true,"nodes":[{"content":"ConvertFrom","pos":[0,11]}]},{"pos":[74320,74321],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74402,74424],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[74495,74496]},{"pos":[74570,74581],"content":"CultureInfo","needQuote":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"content":",","pos":[74661,74662]},{"pos":[74717,74723],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[74783,74784],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74972,74983],"content":"ConvertFrom","needQuote":true,"nodes":[{"content":"ConvertFrom","pos":[0,11]}]},{"pos":[75056,75057],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75138,75160],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[75231,75232]},{"pos":[75306,75317],"content":"CultureInfo","needQuote":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"content":",","pos":[75397,75398]},{"pos":[75453,75459],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[75519,75520],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75879,75890],"content":"CultureInfo","needQuote":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[76068,76088],"content":"System.Globalization","needQuote":true,"nodes":[{"content":"System.Globalization","pos":[0,20]}]},{"pos":[76426,76486],"content":"ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)","needQuote":true,"nodes":[{"content":"ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)","pos":[0,60]}]},{"pos":[76838,76847],"content":"ConvertTo","needQuote":true,"nodes":[{"content":"ConvertTo","pos":[0,9]}]},{"pos":[76918,76919],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77000,77022],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[77093,77094]},{"pos":[77168,77179],"content":"CultureInfo","needQuote":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"content":",","pos":[77259,77260]},{"pos":[77315,77321],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[77382,77383]},{"pos":[77436,77440],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[77498,77499],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77697,77706],"content":"ConvertTo","needQuote":true,"nodes":[{"content":"ConvertTo","pos":[0,9]}]},{"pos":[77777,77778],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77859,77881],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[77952,77953]},{"pos":[78027,78038],"content":"CultureInfo","needQuote":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"content":",","pos":[78118,78119]},{"pos":[78174,78180],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[78241,78242]},{"pos":[78295,78299],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[78357,78358],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78713,78734],"content":"NotSupportedException","needQuote":true,"nodes":[{"content":"NotSupportedException","pos":[0,21]}]}],"content":"items:\n- uid: System.ComponentModel.DateTimeOffsetConverter\n  commentId: T:System.ComponentModel.DateTimeOffsetConverter\n  id: DateTimeOffsetConverter\n  parent: System.ComponentModel\n  children:\n  - System.ComponentModel.DateTimeOffsetConverter.#ctor\n  - System.ComponentModel.DateTimeOffsetConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.ComponentModel.DateTimeOffsetConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.ComponentModel.DateTimeOffsetConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.DateTimeOffsetConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  langs:\n  - csharp\n  - vb\n  name: DateTimeOffsetConverter\n  fullName: System.ComponentModel.DateTimeOffsetConverter\n  type: Class\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/DateTimeOffsetConverter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DateTimeOffsetConverter\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/DateTimeOffsetConverter.cs\n    startLine: 14\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Provides a type converter to convert <xref href=\\\"System.DateTimeOffset\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structures to and from various other representations.</p>\\n\"\n  syntax:\n    content: 'public class DateTimeOffsetConverter : TypeConverter'\n    content.vb: >-\n      Public Class DateTimeOffsetConverter\n          Inherits TypeConverter\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  inheritedMembers:\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: DateTimeOffsetConverter\n- uid: System.ComponentModel.DateTimeOffsetConverter.#ctor\n  commentId: M:System.ComponentModel.DateTimeOffsetConverter.#ctor\n  id: '#ctor'\n  parent: System.ComponentModel.DateTimeOffsetConverter\n  langs:\n  - csharp\n  - vb\n  name: DateTimeOffsetConverter()\n  fullName: System.ComponentModel.DateTimeOffsetConverter.DateTimeOffsetConverter()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs\n    startLine: 121\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.ComponentModel.DateTimeOffsetConverter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class. </p>\\n\"\n  syntax:\n    content: public DateTimeOffsetConverter()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DateTimeOffsetConverter.DateTimeOffsetConverter()\n- uid: System.ComponentModel.DateTimeOffsetConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  commentId: M:System.ComponentModel.DateTimeOffsetConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ComponentModel.DateTimeOffsetConverter\n  langs:\n  - csharp\n  - vb\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: System.ComponentModel.DateTimeOffsetConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/DateTimeOffsetConverter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CanConvertFrom\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/DateTimeOffsetConverter.cs\n    startLine: 22\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns a value that indicates whether an object of the specified source type can be converted to a <xref href=\\\"System.DateTimeOffset\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType)\n    content.vb: Public Overrides Function CanConvertFrom(context As ITypeDescriptorContext, sourceType As Type) As Boolean\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: \"\\n<p>The date format context.</p>\\n\"\n    - id: sourceType\n      type: System.Type\n      description: \"\\n<p>The source type to check.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the specified type can be converted to a <xref href=\\\"System.DateTimeOffset\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: DateTimeOffsetConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n- uid: System.ComponentModel.DateTimeOffsetConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  commentId: M:System.ComponentModel.DateTimeOffsetConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ComponentModel.DateTimeOffsetConverter\n  langs:\n  - csharp\n  - vb\n  name: CanConvertTo(ITypeDescriptorContext, Type)\n  fullName: System.ComponentModel.DateTimeOffsetConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/DateTimeOffsetConverter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CanConvertTo\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/DateTimeOffsetConverter.cs\n    startLine: 33\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Returns a value that indicates whether a <xref href=\\\"System.DateTimeOffset\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> can be converted to an object of the specified type.</p>\\n\"\n  syntax:\n    content: public override bool CanConvertTo(ITypeDescriptorContext context, Type destinationType)\n    content.vb: Public Overrides Function CanConvertTo(context As ITypeDescriptorContext, destinationType As Type) As Boolean\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: \"\\n<p>The date format context.</p>\\n\"\n    - id: destinationType\n      type: System.Type\n      description: \"\\n<p>The destination type to check.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if a <xref href=\\\"System.DateTimeOffset\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> can be converted to the specified type; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: DateTimeOffsetConverter.CanConvertTo(ITypeDescriptorContext, Type)\n- uid: System.ComponentModel.DateTimeOffsetConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  commentId: M:System.ComponentModel.DateTimeOffsetConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.DateTimeOffsetConverter\n  langs:\n  - csharp\n  - vb\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: System.ComponentModel.DateTimeOffsetConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/DateTimeOffsetConverter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ConvertFrom\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/DateTimeOffsetConverter.cs\n    startLine: 48\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Converts the specified object to a <xref href=\\\"System.DateTimeOffset\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value)\n    content.vb: Public Overrides Function ConvertFrom(context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: \"\\n<p>The date format context.</p>\\n\"\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: \"\\n<p>The date culture.</p>\\n\"\n    - id: value\n      type: System.Object\n      description: \"\\n<p>The object to be converted.</p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>A <xref href=\\\"System.DateTimeOffset\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the specified object.</p>\\n\"\n  overridden: System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The conversion cannot be performed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: DateTimeOffsetConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.ComponentModel.DateTimeOffsetConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  commentId: M:System.ComponentModel.DateTimeOffsetConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.ComponentModel.DateTimeOffsetConverter\n  langs:\n  - csharp\n  - vb\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: System.ComponentModel.DateTimeOffsetConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/DateTimeOffsetConverter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ConvertTo\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/DateTimeOffsetConverter.cs\n    startLine: 93\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Converts a <xref href=\\\"System.DateTimeOffset\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to an object of the specified type.</p>\\n\"\n  syntax:\n    content: public override object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)\n    content.vb: Public Overrides Function ConvertTo(context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: \"\\n<p>The date format context.</p>\\n\"\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: \"\\n<p>The date culture.</p>\\n\"\n    - id: value\n      type: System.Object\n      description: \"\\n<p>The <xref href=\\\"System.DateTimeOffset\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to be converted.</p>\\n\"\n    - id: destinationType\n      type: System.Type\n      description: \"\\n<p>The type to convert to.</p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>An object of the specified type that represents the <xref href=\\\"System.DateTimeOffset\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  overridden: System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The conversion cannot be performed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: DateTimeOffsetConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\nreferences:\n- uid: System.ComponentModel\n  isExternal: false\n  name: System.ComponentModel\n  fullName: System.ComponentModel\n  nameWithType: System.ComponentModel\n  commentId: N:System.ComponentModel\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.ComponentModel.TypeConverter\n  parent: System.ComponentModel\n  isExternal: false\n  name: TypeConverter\n  fullName: System.ComponentModel.TypeConverter\n  nameWithType: TypeConverter\n  commentId: T:System.ComponentModel.TypeConverter\n- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: CanConvertFrom(Type)\n  fullName: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n    name: CanConvertFrom\n    fullName: System.ComponentModel.TypeConverter.CanConvertFrom\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n    name: CanConvertFrom\n    fullName: System.ComponentModel.TypeConverter.CanConvertFrom\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.CanConvertFrom(Type)\n  commentId: M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: CanConvertTo(Type)\n  fullName: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n    name: CanConvertTo\n    fullName: System.ComponentModel.TypeConverter.CanConvertTo\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n    name: CanConvertTo\n    fullName: System.ComponentModel.TypeConverter.CanConvertTo\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.CanConvertTo(Type)\n  commentId: M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: ConvertFrom(Object)\n  fullName: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n    name: ConvertFrom\n    fullName: System.ComponentModel.TypeConverter.ConvertFrom\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n    name: ConvertFrom\n    fullName: System.ComponentModel.TypeConverter.ConvertFrom\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.ConvertFrom(Object)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: ConvertFromInvariantString(ITypeDescriptorContext, String)\n  fullName: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext, System.String)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n    name: ConvertFromInvariantString\n    fullName: System.ComponentModel.TypeConverter.ConvertFromInvariantString\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n    name: ConvertFromInvariantString\n    fullName: System.ComponentModel.TypeConverter.ConvertFromInvariantString\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: ConvertFromInvariantString(String)\n  fullName: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n    name: ConvertFromInvariantString\n    fullName: System.ComponentModel.TypeConverter.ConvertFromInvariantString\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n    name: ConvertFromInvariantString\n    fullName: System.ComponentModel.TypeConverter.ConvertFromInvariantString\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.ConvertFromInvariantString(String)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  fullName: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.String)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n    name: ConvertFromString\n    fullName: System.ComponentModel.TypeConverter.ConvertFromString\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Globalization.CultureInfo\n    name: CultureInfo\n    fullName: System.Globalization.CultureInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n    name: ConvertFromString\n    fullName: System.ComponentModel.TypeConverter.ConvertFromString\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Globalization.CultureInfo\n    name: CultureInfo\n    fullName: System.Globalization.CultureInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: ConvertFromString(ITypeDescriptorContext, String)\n  fullName: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.String)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n    name: ConvertFromString\n    fullName: System.ComponentModel.TypeConverter.ConvertFromString\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n    name: ConvertFromString\n    fullName: System.ComponentModel.TypeConverter.ConvertFromString\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: ConvertFromString(String)\n  fullName: System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n    name: ConvertFromString\n    fullName: System.ComponentModel.TypeConverter.ConvertFromString\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n    name: ConvertFromString\n    fullName: System.ComponentModel.TypeConverter.ConvertFromString\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.ConvertFromString(String)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n- uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: ConvertTo(Object, Type)\n  fullName: System.ComponentModel.TypeConverter.ConvertTo(System.Object, System.Type)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n    name: ConvertTo\n    fullName: System.ComponentModel.TypeConverter.ConvertTo\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n    name: ConvertTo\n    fullName: System.ComponentModel.TypeConverter.ConvertTo\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.ConvertTo(Object, Type)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: ConvertToInvariantString(ITypeDescriptorContext, Object)\n  fullName: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext, System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n    name: ConvertToInvariantString\n    fullName: System.ComponentModel.TypeConverter.ConvertToInvariantString\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n    name: ConvertToInvariantString\n    fullName: System.ComponentModel.TypeConverter.ConvertToInvariantString\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: ConvertToInvariantString(Object)\n  fullName: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n    name: ConvertToInvariantString\n    fullName: System.ComponentModel.TypeConverter.ConvertToInvariantString\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n    name: ConvertToInvariantString\n    fullName: System.ComponentModel.TypeConverter.ConvertToInvariantString\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.ConvertToInvariantString(Object)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n    name: ConvertToString\n    fullName: System.ComponentModel.TypeConverter.ConvertToString\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Globalization.CultureInfo\n    name: CultureInfo\n    fullName: System.Globalization.CultureInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n    name: ConvertToString\n    fullName: System.ComponentModel.TypeConverter.ConvertToString\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Globalization.CultureInfo\n    name: CultureInfo\n    fullName: System.Globalization.CultureInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: ConvertToString(ITypeDescriptorContext, Object)\n  fullName: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n    name: ConvertToString\n    fullName: System.ComponentModel.TypeConverter.ConvertToString\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n    name: ConvertToString\n    fullName: System.ComponentModel.TypeConverter.ConvertToString\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: ConvertToString(Object)\n  fullName: System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n    name: ConvertToString\n    fullName: System.ComponentModel.TypeConverter.ConvertToString\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n    name: ConvertToString\n    fullName: System.ComponentModel.TypeConverter.ConvertToString\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.ConvertToString(Object)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: CreateInstance(IDictionary)\n  fullName: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n    name: CreateInstance\n    fullName: System.ComponentModel.TypeConverter.CreateInstance\n  - name: (\n    fullName: (\n  - uid: System.Collections.IDictionary\n    name: IDictionary\n    fullName: System.Collections.IDictionary\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n    name: CreateInstance\n    fullName: System.ComponentModel.TypeConverter.CreateInstance\n  - name: (\n    fullName: (\n  - uid: System.Collections.IDictionary\n    name: IDictionary\n    fullName: System.Collections.IDictionary\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.CreateInstance(IDictionary)\n  commentId: M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: CreateInstance(ITypeDescriptorContext, IDictionary)\n  fullName: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext, System.Collections.IDictionary)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n    name: CreateInstance\n    fullName: System.ComponentModel.TypeConverter.CreateInstance\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.IDictionary\n    name: IDictionary\n    fullName: System.Collections.IDictionary\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n    name: CreateInstance\n    fullName: System.ComponentModel.TypeConverter.CreateInstance\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.IDictionary\n    name: IDictionary\n    fullName: System.Collections.IDictionary\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n  commentId: M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n- uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: GetConvertFromException(Object)\n  fullName: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n    name: GetConvertFromException\n    fullName: System.ComponentModel.TypeConverter.GetConvertFromException\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n    name: GetConvertFromException\n    fullName: System.ComponentModel.TypeConverter.GetConvertFromException\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.GetConvertFromException(Object)\n  commentId: M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n- uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: GetConvertToException(Object, Type)\n  fullName: System.ComponentModel.TypeConverter.GetConvertToException(System.Object, System.Type)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n    name: GetConvertToException\n    fullName: System.ComponentModel.TypeConverter.GetConvertToException\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n    name: GetConvertToException\n    fullName: System.ComponentModel.TypeConverter.GetConvertToException\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.GetConvertToException(Object, Type)\n  commentId: M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported()\n  fullName: System.ComponentModel.TypeConverter.GetCreateInstanceSupported()\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n    name: GetCreateInstanceSupported\n    fullName: System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n    name: GetCreateInstanceSupported\n    fullName: System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.GetCreateInstanceSupported()\n  commentId: M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported(ITypeDescriptorContext)\n  fullName: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n    name: GetCreateInstanceSupported\n    fullName: System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n    name: GetCreateInstanceSupported\n    fullName: System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n  commentId: M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: GetProperties(ITypeDescriptorContext, Object)\n  fullName: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n    name: GetProperties\n    fullName: System.ComponentModel.TypeConverter.GetProperties\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n    name: GetProperties\n    fullName: System.ComponentModel.TypeConverter.GetProperties\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n  commentId: M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  fullName: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object, System.Attribute[])\n  fullname.vb: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object, System.Attribute())\n  name.vb: GetProperties(ITypeDescriptorContext, Object, Attribute())\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n    name: GetProperties\n    fullName: System.ComponentModel.TypeConverter.GetProperties\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Attribute\n    name: Attribute\n    fullName: System.Attribute\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n    name: GetProperties\n    fullName: System.ComponentModel.TypeConverter.GetProperties\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Attribute\n    name: Attribute\n    fullName: System.Attribute\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  nameWithType.vb: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute())\n  commentId: M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: GetProperties(Object)\n  fullName: System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)\n    name: GetProperties\n    fullName: System.ComponentModel.TypeConverter.GetProperties\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)\n    name: GetProperties\n    fullName: System.ComponentModel.TypeConverter.GetProperties\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.GetProperties(Object)\n  commentId: M:System.ComponentModel.TypeConverter.GetProperties(System.Object)\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported()\n  fullName: System.ComponentModel.TypeConverter.GetPropertiesSupported()\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.GetPropertiesSupported\n    name: GetPropertiesSupported\n    fullName: System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.GetPropertiesSupported\n    name: GetPropertiesSupported\n    fullName: System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.GetPropertiesSupported()\n  commentId: M:System.ComponentModel.TypeConverter.GetPropertiesSupported\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported(ITypeDescriptorContext)\n  fullName: System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n    name: GetPropertiesSupported\n    fullName: System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n    name: GetPropertiesSupported\n    fullName: System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)\n  commentId: M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetStandardValues\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValues()\n  fullName: System.ComponentModel.TypeConverter.GetStandardValues()\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.GetStandardValues\n    name: GetStandardValues\n    fullName: System.ComponentModel.TypeConverter.GetStandardValues\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.GetStandardValues\n    name: GetStandardValues\n    fullName: System.ComponentModel.TypeConverter.GetStandardValues\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.GetStandardValues()\n  commentId: M:System.ComponentModel.TypeConverter.GetStandardValues\n- uid: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValues(ITypeDescriptorContext)\n  fullName: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n    name: GetStandardValues\n    fullName: System.ComponentModel.TypeConverter.GetStandardValues\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n    name: GetStandardValues\n    fullName: System.ComponentModel.TypeConverter.GetStandardValues\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.GetStandardValues(ITypeDescriptorContext)\n  commentId: M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive()\n  fullName: System.ComponentModel.TypeConverter.GetStandardValuesExclusive()\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n    name: GetStandardValuesExclusive\n    fullName: System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n    name: GetStandardValuesExclusive\n    fullName: System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.GetStandardValuesExclusive()\n  commentId: M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n    name: GetStandardValuesExclusive\n    fullName: System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n    name: GetStandardValuesExclusive\n    fullName: System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  commentId: M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesSupported()\n  fullName: System.ComponentModel.TypeConverter.GetStandardValuesSupported()\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported\n    name: GetStandardValuesSupported\n    fullName: System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported\n    name: GetStandardValuesSupported\n    fullName: System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.GetStandardValuesSupported()\n  commentId: M:System.ComponentModel.TypeConverter.GetStandardValuesSupported\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n    name: GetStandardValuesSupported\n    fullName: System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n    name: GetStandardValuesSupported\n    fullName: System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  commentId: M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: IsValid(ITypeDescriptorContext, Object)\n  fullName: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext, System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n    name: IsValid\n    fullName: System.ComponentModel.TypeConverter.IsValid\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n    name: IsValid\n    fullName: System.ComponentModel.TypeConverter.IsValid\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n  commentId: M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n- uid: System.ComponentModel.TypeConverter.IsValid(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: IsValid(Object)\n  fullName: System.ComponentModel.TypeConverter.IsValid(System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.IsValid(System.Object)\n    name: IsValid\n    fullName: System.ComponentModel.TypeConverter.IsValid\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.IsValid(System.Object)\n    name: IsValid\n    fullName: System.ComponentModel.TypeConverter.IsValid\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.IsValid(Object)\n  commentId: M:System.ComponentModel.TypeConverter.IsValid(System.Object)\n- uid: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: SortProperties(PropertyDescriptorCollection, String[])\n  fullName: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection, System.String[])\n  fullname.vb: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection, System.String())\n  name.vb: SortProperties(PropertyDescriptorCollection, String())\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n    name: SortProperties\n    fullName: System.ComponentModel.TypeConverter.SortProperties\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.PropertyDescriptorCollection\n    name: PropertyDescriptorCollection\n    fullName: System.ComponentModel.PropertyDescriptorCollection\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n    name: SortProperties\n    fullName: System.ComponentModel.TypeConverter.SortProperties\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.PropertyDescriptorCollection\n    name: PropertyDescriptorCollection\n    fullName: System.ComponentModel.PropertyDescriptorCollection\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n  nameWithType.vb: TypeConverter.SortProperties(PropertyDescriptorCollection, String())\n  commentId: M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n    name: CanConvertFrom\n    fullName: System.ComponentModel.TypeConverter.CanConvertFrom\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n    name: CanConvertFrom\n    fullName: System.ComponentModel.TypeConverter.CanConvertFrom\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  commentId: M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  commentId: T:System.ComponentModel.ITypeDescriptorContext\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  nameWithType: Type\n  commentId: T:System.Type\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: CanConvertTo(ITypeDescriptorContext, Type)\n  fullName: System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n    name: CanConvertTo\n    fullName: System.ComponentModel.TypeConverter.CanConvertTo\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n    name: CanConvertTo\n    fullName: System.ComponentModel.TypeConverter.CanConvertTo\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  commentId: M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n    name: ConvertFrom\n    fullName: System.ComponentModel.TypeConverter.ConvertFrom\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Globalization.CultureInfo\n    name: CultureInfo\n    fullName: System.Globalization.CultureInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n    name: ConvertFrom\n    fullName: System.ComponentModel.TypeConverter.ConvertFrom\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Globalization.CultureInfo\n    name: CultureInfo\n    fullName: System.Globalization.CultureInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  fullName: System.Globalization.CultureInfo\n  nameWithType: CultureInfo\n  commentId: T:System.Globalization.CultureInfo\n- uid: System.Globalization\n  isExternal: false\n  name: System.Globalization\n  fullName: System.Globalization\n  nameWithType: System.Globalization\n  commentId: N:System.Globalization\n- uid: System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n    name: ConvertTo\n    fullName: System.ComponentModel.TypeConverter.ConvertTo\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Globalization.CultureInfo\n    name: CultureInfo\n    fullName: System.Globalization.CultureInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n    name: ConvertTo\n    fullName: System.ComponentModel.TypeConverter.ConvertTo\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Globalization.CultureInfo\n    name: CultureInfo\n    fullName: System.Globalization.CultureInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  fullName: System.NotSupportedException\n  nameWithType: NotSupportedException\n  commentId: T:System.NotSupportedException\n"}