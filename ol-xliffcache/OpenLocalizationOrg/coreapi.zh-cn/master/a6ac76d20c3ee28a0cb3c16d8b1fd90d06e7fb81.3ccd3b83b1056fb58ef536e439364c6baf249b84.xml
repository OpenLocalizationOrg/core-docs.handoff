{"nodes":[{"pos":[2188,2201],"content":"MethodBuilder","needQuote":true,"nodes":[{"content":"MethodBuilder","pos":[0,13]}]},{"pos":[11316,11326],"content":"Attributes","needQuote":true,"nodes":[{"content":"Attributes","pos":[0,10]}]},{"content":"\\n&lt;p&gt;Read-only.","pos":[12070,12085],"source":"\\n<p>Read-only."},{"content":"Retrieves the &lt;strong&gt;MethodAttributes&lt;/strong&gt; for this method.&lt;/p&gt;\\n","pos":[12086,12156],"source":" Retrieves the <strong>MethodAttributes</strong> for this method.</p>\\n"},{"pos":[12597,12614],"content":"CallingConvention","needQuote":true,"nodes":[{"content":"CallingConvention","pos":[0,17]}]},{"content":"\\n&lt;p&gt;Read-only.","pos":[13396,13411],"source":"\\n<p>Read-only."},{"content":"The calling convention of the method.&lt;/p&gt;\\n","pos":[13412,13455],"source":" The calling convention of the method.</p>\\n"},{"pos":[13934,13959],"content":"ContainsGenericParameters","needQuote":true,"nodes":[{"content":"ContainsGenericParameters","pos":[0,25]}]},{"content":"\\n&lt;p&gt;Not supported.&lt;/p&gt;\\n","pos":[14709,14734],"source":"\\n<p>Not supported.</p>\\n"},{"content":"\\n&lt;p&gt;The invoked method is not supported in the base class.&lt;/p&gt;\\n","pos":[14922,14987],"source":"\\n<p>The invoked method is not supported in the base class.</p>\\n"},{"pos":[15552,15565],"content":"DeclaringType","needQuote":true,"nodes":[{"content":"DeclaringType","pos":[0,13]}]},{"content":"\\n&lt;p&gt;Read-only.","pos":[16276,16291],"source":"\\n<p>Read-only."},{"content":"The type that declares this method.&lt;/p&gt;\\n","pos":[16292,16333],"source":" The type that declares this method.</p>\\n"},{"pos":[16759,16769],"content":"InitLocals","needQuote":true,"nodes":[{"content":"InitLocals","pos":[0,10]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the local variables in this method should be zero initialized; otherwise &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[17578,17712],"source":"\\n<p>\\n<strong>true</strong> if the local variables in this method should be zero initialized; otherwise <strong>false</strong>.</p>\\n"},{"pos":[18555,18570],"content":"IsGenericMethod","needQuote":true,"nodes":[{"content":"IsGenericMethod","pos":[0,15]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the method is generic; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[19315,19410],"source":"\\n<p>\\n<strong>true</strong> if the method is generic; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[19885,19910],"content":"IsGenericMethodDefinition","needQuote":true,"nodes":[{"content":"IsGenericMethodDefinition","pos":[0,25]}]},{"pos":[21493,21497],"content":"Name","needQuote":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"content":"\\n&lt;p&gt;Read-only.","pos":[22169,22184],"source":"\\n<p>Read-only."},{"content":"Retrieves a string containing the simple name of this method.&lt;/p&gt;\\n","pos":[22185,22252],"source":" Retrieves a string containing the simple name of this method.</p>\\n"},{"pos":[22675,22690],"content":"ReturnParameter","needQuote":true,"nodes":[{"content":"ReturnParameter","pos":[0,15]}]},{"content":"\\n&lt;p&gt;The declaring type has not been created.&lt;/p&gt;\\n","pos":[23973,24024],"source":"\\n<p>The declaring type has not been created.</p>\\n"},{"pos":[24696,24706],"content":"ReturnType","needQuote":true,"nodes":[{"content":"ReturnType","pos":[0,10]}]},{"content":"\\n&lt;p&gt;The return type of the method.&lt;/p&gt;\\n","pos":[25514,25555],"source":"\\n<p>The return type of the method.</p>\\n"},{"pos":[26065,26098],"content":"DefineGenericParameters(String[])","needQuote":true,"nodes":[{"content":"DefineGenericParameters(String[])","pos":[0,33]}]},{"content":"\\n&lt;p&gt;An array of strings that represent the names of the generic type parameters.&lt;/p&gt;\\n","pos":[27170,27257],"source":"\\n<p>An array of strings that represent the names of the generic type parameters.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;names&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;An element of &lt;em&gt;names&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[28154,28283],"source":"\\n<p>\\n<em>names</em> is <strong>null</strong>.</p>\\n<p>-or-</p>\\n<p>An element of <em>names</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;names&lt;/em&gt; is an empty array.&lt;/p&gt;\\n","pos":[28380,28426],"source":"\\n<p>\\n<em>names</em> is an empty array.</p>\\n"},{"pos":[29583,29634],"content":"DefineParameter(Int32, ParameterAttributes, String)","needQuote":true,"nodes":[{"content":"DefineParameter(Int32, ParameterAttributes, String)","pos":[0,51]}]},{"content":"\\n&lt;p&gt;The position of the parameter in the parameter list.","pos":[30777,30834],"source":"\\n<p>The position of the parameter in the parameter list."},{"content":"Parameters are indexed beginning with the number 1 for the first parameter; the number 0 represents the return value of the method.","pos":[30835,30966]},{"content":"&lt;/p&gt;\\n","pos":[30967,30973],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The parameter attributes of the parameter.","pos":[31066,31113],"source":"\\n<p>The parameter attributes of the parameter."},{"content":"&lt;/p&gt;\\n","pos":[31114,31120],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The name of the parameter.","pos":[31191,31222],"source":"\\n<p>The name of the parameter."},{"content":"The name can be the null string.","pos":[31223,31255]},{"content":"&lt;/p&gt;\\n","pos":[31256,31262],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Returns a &lt;strong&gt;ParameterBuilder&lt;/strong&gt; object that represents a parameter of this method or the return value of this method.&lt;/p&gt;\\n","pos":[31348,31488],"source":"\\n<p>Returns a <strong>ParameterBuilder</strong> object that represents a parameter of this method or the return value of this method.</p>\\n"},{"content":"\\n&lt;p&gt;The method has no parameters.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;position&lt;/em&gt; is less than zero.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;position&lt;/em&gt; is greater than the number of the method's parameters.","pos":[31619,31811],"source":"\\n<p>The method has no parameters.</p>\\n<p>-or- </p>\\n<p>\\n<em>position</em> is less than zero.</p>\\n<p>-or- </p>\\n<p>\\n<em>position</em> is greater than the number of the method's parameters."},{"content":"&lt;/p&gt;\\n","pos":[31812,31818],"source":" </p>\\n"},{"pos":[32854,32868],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The object to compare with this &lt;strong&gt;MethodBuilder&lt;/strong&gt; instance.","pos":[33674,33751],"source":"\\n<p>The object to compare with this <strong>MethodBuilder</strong> instance."},{"content":"&lt;/p&gt;\\n","pos":[33752,33758],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;obj&lt;/em&gt; is an instance of &lt;strong&gt;MethodBuilder&lt;/strong&gt; and is equal to this object; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[33819,33982],"source":"\\n<p>\\n<strong>true</strong> if <em>obj</em> is an instance of <strong>MethodBuilder</strong> and is equal to this object; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[34423,34444],"content":"GetGenericArguments()","needQuote":true,"nodes":[{"content":"GetGenericArguments()","pos":[0,21]}]},{"pos":[36212,36240],"content":"GetGenericMethodDefinition()","needQuote":true,"nodes":[{"content":"GetGenericMethodDefinition()","pos":[0,28]}]},{"pos":[38057,38070],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The hash code for this method.&lt;/p&gt;\\n","pos":[38733,38774],"source":"\\n<p>The hash code for this method.</p>\\n"},{"pos":[39189,39205],"content":"GetILGenerator()","needQuote":true,"nodes":[{"content":"GetILGenerator()","pos":[0,16]}]},{"content":"\\n&lt;p&gt;Returns an &lt;strong&gt;ILGenerator&lt;/strong&gt; object for this method.&lt;/p&gt;\\n","pos":[39995,40069],"source":"\\n<p>Returns an <strong>ILGenerator</strong> object for this method.</p>\\n"},{"pos":[41401,41422],"content":"GetILGenerator(Int32)","needQuote":true,"nodes":[{"content":"GetILGenerator(Int32)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The size of the MSIL stream, in bytes.","pos":[42238,42281],"source":"\\n<p>The size of the MSIL stream, in bytes."},{"content":"&lt;/p&gt;\\n","pos":[42282,42288],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Returns an &lt;strong&gt;ILGenerator&lt;/strong&gt; object for this method.&lt;/p&gt;\\n","pos":[42369,42443],"source":"\\n<p>Returns an <strong>ILGenerator</strong> object for this method.</p>\\n"},{"pos":[43737,43752],"content":"GetParameters()","needQuote":true,"nodes":[{"content":"GetParameters()","pos":[0,15]}]},{"content":"\\n&lt;p&gt;An array of &lt;strong&gt;ParameterInfo&lt;/strong&gt; objects that represent the parameters of the method.&lt;/p&gt;\\n","pos":[44467,44573],"source":"\\n<p>An array of <strong>ParameterInfo</strong> objects that represent the parameters of the method.</p>\\n"},{"pos":[45630,45655],"content":"MakeGenericMethod(Type[])","needQuote":true,"nodes":[{"content":"MakeGenericMethod(Type[])","pos":[0,25]}]},{"pos":[47800,47843],"content":"SetCustomAttribute(ConstructorInfo, Byte[])","needQuote":true,"nodes":[{"content":"SetCustomAttribute(ConstructorInfo, Byte[])","pos":[0,43]}]},{"content":"\\n&lt;p&gt;The constructor for the custom attribute.","pos":[48833,48879],"source":"\\n<p>The constructor for the custom attribute."},{"content":"&lt;/p&gt;\\n","pos":[48880,48886],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A byte blob representing the attributes.","pos":[48960,49005],"source":"\\n<p>A byte blob representing the attributes."},{"content":"&lt;/p&gt;\\n","pos":[49006,49012],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;con&lt;/em&gt; or &lt;em&gt;binaryAttribute&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[49131,49204],"source":"\\n<p>\\n<em>con</em> or <em>binaryAttribute</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[49205,49211],"source":" </p>\\n"},{"pos":[50446,50488],"content":"SetCustomAttribute(CustomAttributeBuilder)","needQuote":true,"nodes":[{"content":"SetCustomAttribute(CustomAttributeBuilder)","pos":[0,42]}]},{"content":"\\n&lt;p&gt;An instance of a helper class to describe the custom attribute.","pos":[51429,51497],"source":"\\n<p>An instance of a helper class to describe the custom attribute."},{"content":"&lt;/p&gt;\\n","pos":[51498,51504],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;customBuilder&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[51623,51678],"source":"\\n<p>\\n<em>customBuilder</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[51679,51685],"source":" </p>\\n"},{"pos":[52657,52701],"content":"SetImplementationFlags(MethodImplAttributes)","needQuote":true,"nodes":[{"content":"SetImplementationFlags(MethodImplAttributes)","pos":[0,44]}]},{"content":"\\n&lt;p&gt;The implementation flags to set.","pos":[53620,53657],"source":"\\n<p>The implementation flags to set."},{"content":"&lt;/p&gt;\\n","pos":[53658,53664],"source":" </p>\\n"},{"pos":[54728,54749],"content":"SetParameters(Type[])","needQuote":true,"nodes":[{"content":"SetParameters(Type[])","pos":[0,21]}]},{"pos":[56897,56916],"content":"SetReturnType(Type)","needQuote":true,"nodes":[{"content":"SetReturnType(Type)","pos":[0,19]}]},{"pos":[59061,59123],"content":"SetSignature(Type, Type[], Type[], Type[], Type[][], Type[][])","needQuote":true,"nodes":[{"content":"SetSignature(Type, Type[], Type[], Type[], Type[][], Type[][])","pos":[0,62]}]},{"content":"\\n&lt;p&gt;The return type of the method.&lt;/p&gt;\\n","pos":[60448,60489],"source":"\\n<p>The return type of the method.</p>\\n"},{"content":"\\n&lt;p&gt;The types of the parameters of the method.&lt;/p&gt;\\n","pos":[61346,61399],"source":"\\n<p>The types of the parameters of the method.</p>\\n"},{"pos":[64107,64117],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"content":"\\n&lt;p&gt;Returns a string containing the name, attributes, method signature, exceptions, and local signature of this method followed by the current Microsoft intermediate language (MSIL) stream.&lt;/p&gt;\\n","pos":[64879,65075],"source":"\\n<p>Returns a string containing the name, attributes, method signature, exceptions, and local signature of this method followed by the current Microsoft intermediate language (MSIL) stream.</p>\\n"},{"pos":[65502,65527],"content":"MethodImplementationFlags","needQuote":true,"nodes":[{"content":"MethodImplementationFlags","pos":[0,25]}]},{"pos":[66571,66593],"content":"System.Reflection.Emit","needQuote":true,"nodes":[{"content":"System.Reflection.Emit","pos":[0,22]}]},{"pos":[66772,66778],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[66949,66959],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[67164,67174],"content":"MethodBase","needQuote":true,"nodes":[{"content":"MethodBase","pos":[0,10]}]},{"pos":[67379,67389],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[67608,67632],"content":"ICustomAttributeProvider","needQuote":true,"nodes":[{"content":"ICustomAttributeProvider","pos":[0,24]}]},{"pos":[67905,67916],"content":"_MemberInfo","needQuote":true,"nodes":[{"content":"_MemberInfo","pos":[0,11]}]},{"pos":[68176,68187],"content":"_MethodBase","needQuote":true,"nodes":[{"content":"_MethodBase","pos":[0,11]}]},{"pos":[68447,68458],"content":"_MethodInfo","needQuote":true,"nodes":[{"content":"_MethodInfo","pos":[0,11]}]},{"pos":[68720,68739],"content":"GetBaseDefinition()","needQuote":true,"nodes":[{"content":"GetBaseDefinition()","pos":[0,19]}]},{"pos":[68882,68899],"content":"GetBaseDefinition","needQuote":true,"nodes":[{"content":"GetBaseDefinition","pos":[0,17]}]},{"pos":[68992,68993],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69020,69021],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69115,69132],"content":"GetBaseDefinition","needQuote":true,"nodes":[{"content":"GetBaseDefinition","pos":[0,17]}]},{"pos":[69225,69226],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69253,69254],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69510,69530],"content":"CreateDelegate(Type)","needQuote":true,"nodes":[{"content":"CreateDelegate(Type)","pos":[0,20]}]},{"pos":[69691,69705],"content":"CreateDelegate","needQuote":true,"nodes":[{"content":"CreateDelegate","pos":[0,14]}]},{"pos":[69795,69796],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69844,69848],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[69906,69907],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70011,70025],"content":"CreateDelegate","needQuote":true,"nodes":[{"content":"CreateDelegate","pos":[0,14]}]},{"pos":[70115,70116],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70164,70168],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[70226,70227],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70508,70536],"content":"CreateDelegate(Type, Object)","needQuote":true,"nodes":[{"content":"CreateDelegate(Type, Object)","pos":[0,28]}]},{"pos":[70726,70740],"content":"CreateDelegate","needQuote":true,"nodes":[{"content":"CreateDelegate","pos":[0,14]}]},{"pos":[70830,70831],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70879,70883],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[70942,70943]},{"pos":[70998,71004],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[71064,71065],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71183,71197],"content":"CreateDelegate","needQuote":true,"nodes":[{"content":"CreateDelegate","pos":[0,14]}]},{"pos":[71287,71288],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71336,71340],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[71399,71400]},{"pos":[71455,71461],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[71521,71522],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71834,71855],"content":"_MethodInfo.GetType()","needQuote":true,"nodes":[{"content":"_MethodInfo.GetType()","pos":[0,21]}]},{"pos":[72128,72147],"content":"_MethodInfo.GetType","needQuote":true,"nodes":[{"content":"_MethodInfo.GetType","pos":[0,19]}]},{"pos":[72273,72274],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72301,72302],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72429,72479],"content":"System.Runtime.InteropServices._MethodInfo.GetType","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodInfo.GetType","pos":[0,50]}]},{"pos":[72605,72606],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72633,72634],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73056,73092],"content":"_MethodInfo.GetTypeInfoCount(UInt32)","needQuote":true,"nodes":[{"content":"_MethodInfo.GetTypeInfoCount(UInt32)","pos":[0,36]}]},{"pos":[73427,73455],"content":"_MethodInfo.GetTypeInfoCount","needQuote":true,"nodes":[{"content":"_MethodInfo.GetTypeInfoCount","pos":[0,28]}]},{"pos":[73590,73591],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73641,73647],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[73707,73708],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73860,73919],"content":"System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount","pos":[0,59]}]},{"pos":[74054,74055],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74105,74111],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[74171,74172],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74671,74718],"content":"_MethodInfo.GetTypeInfo(UInt32, UInt32, IntPtr)","needQuote":true,"nodes":[{"content":"_MethodInfo.GetTypeInfo(UInt32, UInt32, IntPtr)","pos":[0,47]}]},{"pos":[75111,75134],"content":"_MethodInfo.GetTypeInfo","needQuote":true,"nodes":[{"content":"_MethodInfo.GetTypeInfo","pos":[0,23]}]},{"pos":[75264,75265],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75315,75321],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[75382,75383]},{"pos":[75438,75444],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[75505,75506]},{"pos":[75561,75567],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[75627,75628],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75802,75856],"content":"System.Runtime.InteropServices._MethodInfo.GetTypeInfo","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodInfo.GetTypeInfo","pos":[0,54]}]},{"pos":[75986,75987],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76037,76043],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[76104,76105]},{"pos":[76160,76166],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[76227,76228]},{"pos":[76283,76289],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[76349,76350],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76922,76985],"content":"_MethodInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)","needQuote":true,"nodes":[{"content":"_MethodInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)","pos":[0,63]}]},{"pos":[77453,77478],"content":"_MethodInfo.GetIDsOfNames","needQuote":true,"nodes":[{"content":"_MethodInfo.GetIDsOfNames","pos":[0,25]}]},{"pos":[77610,77611],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77659,77663],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[77722,77723]},{"pos":[77778,77784],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[77845,77846]},{"pos":[77901,77907],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[77968,77969]},{"pos":[78024,78030],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[78091,78092]},{"pos":[78147,78153],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[78213,78214],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78417,78473],"content":"System.Runtime.InteropServices._MethodInfo.GetIDsOfNames","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodInfo.GetIDsOfNames","pos":[0,56]}]},{"pos":[78605,78606],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78654,78658],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[78717,78718]},{"pos":[78773,78779],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[78840,78841]},{"pos":[78896,78902],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[78963,78964]},{"pos":[79019,79025],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[79086,79087]},{"pos":[79142,79148],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[79208,79209],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79876,79955],"content":"_MethodInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)","needQuote":true,"nodes":[{"content":"_MethodInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)","pos":[0,79]}]},{"pos":[80510,80528],"content":"_MethodInfo.Invoke","needQuote":true,"nodes":[{"content":"_MethodInfo.Invoke","pos":[0,18]}]},{"pos":[80653,80654],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80704,80710],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[80771,80772]},{"pos":[80825,80829],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[80888,80889]},{"pos":[80944,80950],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[81011,81012]},{"pos":[81066,81071],"content":"Int16","needQuote":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"content":",","pos":[81131,81132]},{"pos":[81187,81193],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[81254,81255]},{"pos":[81310,81316],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[81377,81378]},{"pos":[81433,81439],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[81500,81501]},{"pos":[81556,81562],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[81622,81623],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81860,81909],"content":"System.Runtime.InteropServices._MethodInfo.Invoke","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodInfo.Invoke","pos":[0,49]}]},{"pos":[82034,82035],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82085,82091],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[82152,82153]},{"pos":[82206,82210],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[82269,82270]},{"pos":[82325,82331],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[82392,82393]},{"pos":[82447,82452],"content":"Int16","needQuote":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"content":",","pos":[82512,82513]},{"pos":[82568,82574],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[82635,82636]},{"pos":[82691,82697],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[82758,82759]},{"pos":[82814,82820],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[82881,82882]},{"pos":[82937,82943],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[83003,83004],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83587,83597],"content":"MemberType","needQuote":true,"nodes":[{"content":"MemberType","pos":[0,10]}]},{"pos":[83872,83898],"content":"ReturnTypeCustomAttributes","needQuote":true,"nodes":[{"content":"ReturnTypeCustomAttributes","pos":[0,26]}]},{"pos":[84242,84282],"content":"GetMethodFromHandle(RuntimeMethodHandle)","needQuote":true,"nodes":[{"content":"GetMethodFromHandle(RuntimeMethodHandle)","pos":[0,40]}]},{"pos":[84483,84502],"content":"GetMethodFromHandle","needQuote":true,"nodes":[{"content":"GetMethodFromHandle","pos":[0,19]}]},{"pos":[84576,84577],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[84640,84659],"content":"RuntimeMethodHandle","needQuote":true,"nodes":[{"content":"RuntimeMethodHandle","pos":[0,19]}]},{"pos":[84732,84733],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[84857,84876],"content":"GetMethodFromHandle","needQuote":true,"nodes":[{"content":"GetMethodFromHandle","pos":[0,19]}]},{"pos":[84950,84951],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85014,85033],"content":"RuntimeMethodHandle","needQuote":true,"nodes":[{"content":"RuntimeMethodHandle","pos":[0,19]}]},{"pos":[85106,85107],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85459,85518],"content":"GetMethodFromHandle(RuntimeMethodHandle, RuntimeTypeHandle)","needQuote":true,"nodes":[{"content":"GetMethodFromHandle(RuntimeMethodHandle, RuntimeTypeHandle)","pos":[0,59]}]},{"pos":[85770,85789],"content":"GetMethodFromHandle","needQuote":true,"nodes":[{"content":"GetMethodFromHandle","pos":[0,19]}]},{"pos":[85863,85864],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85927,85946],"content":"RuntimeMethodHandle","needQuote":true,"nodes":[{"content":"RuntimeMethodHandle","pos":[0,19]}]},{"content":",","pos":[86020,86021]},{"pos":[86087,86104],"content":"RuntimeTypeHandle","needQuote":true,"nodes":[{"content":"RuntimeTypeHandle","pos":[0,17]}]},{"pos":[86175,86176],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86325,86344],"content":"GetMethodFromHandle","needQuote":true,"nodes":[{"content":"GetMethodFromHandle","pos":[0,19]}]},{"pos":[86418,86419],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86482,86501],"content":"RuntimeMethodHandle","needQuote":true,"nodes":[{"content":"RuntimeMethodHandle","pos":[0,19]}]},{"content":",","pos":[86575,86576]},{"pos":[86642,86659],"content":"RuntimeTypeHandle","needQuote":true,"nodes":[{"content":"RuntimeTypeHandle","pos":[0,17]}]},{"pos":[86730,86731],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87071,87089],"content":"GetCurrentMethod()","needQuote":true,"nodes":[{"content":"GetCurrentMethod()","pos":[0,18]}]},{"pos":[87230,87246],"content":"GetCurrentMethod","needQuote":true,"nodes":[{"content":"GetCurrentMethod","pos":[0,16]}]},{"pos":[87338,87339],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87366,87367],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87460,87476],"content":"GetCurrentMethod","needQuote":true,"nodes":[{"content":"GetCurrentMethod","pos":[0,16]}]},{"pos":[87568,87569],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87596,87597],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87853,87883],"content":"GetMethodImplementationFlags()","needQuote":true,"nodes":[{"content":"GetMethodImplementationFlags()","pos":[0,30]}]},{"pos":[88048,88076],"content":"GetMethodImplementationFlags","needQuote":true,"nodes":[{"content":"GetMethodImplementationFlags","pos":[0,28]}]},{"pos":[88159,88160],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88187,88188],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88293,88321],"content":"GetMethodImplementationFlags","needQuote":true,"nodes":[{"content":"GetMethodImplementationFlags","pos":[0,28]}]},{"pos":[88404,88405],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88432,88433],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88810,88869],"content":"Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)","needQuote":true,"nodes":[{"content":"Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)","pos":[0,59]}]},{"pos":[89478,89484],"content":"Invoke","needQuote":true,"nodes":[{"content":"Invoke","pos":[0,6]}]},{"pos":[89566,89567],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89617,89623],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[89684,89685]},{"pos":[89757,89769],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"content":",","pos":[89847,89848]},{"pos":[89914,89920],"content":"Binder","needQuote":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"content":",","pos":[89992,89993]},{"pos":[90048,90054],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[90115,90117]},{"content":",","pos":[90149,90150]},{"pos":[90224,90235],"content":"CultureInfo","needQuote":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[90314,90315],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90518,90524],"content":"Invoke","needQuote":true,"nodes":[{"content":"Invoke","pos":[0,6]}]},{"pos":[90606,90607],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90657,90663],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[90724,90725]},{"pos":[90797,90809],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"content":",","pos":[90887,90888]},{"pos":[90954,90960],"content":"Binder","needQuote":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"content":",","pos":[91032,91033]},{"pos":[91088,91094],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[91154,91156],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[91185,91186]},{"pos":[91260,91271],"content":"CultureInfo","needQuote":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[91350,91351],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91856,91880],"content":"Invoke(Object, Object[])","needQuote":true,"nodes":[{"content":"Invoke(Object, Object[])","pos":[0,24]}]},{"pos":[92181,92187],"content":"Invoke","needQuote":true,"nodes":[{"content":"Invoke","pos":[0,6]}]},{"pos":[92248,92249],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92299,92305],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[92366,92367]},{"pos":[92422,92428],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[92489,92491]},{"pos":[92522,92523],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92637,92643],"content":"Invoke","needQuote":true,"nodes":[{"content":"Invoke","pos":[0,6]}]},{"pos":[92704,92705],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92755,92761],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[92822,92823]},{"pos":[92878,92884],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[92944,92946],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[92974,92975],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93297,93312],"content":"GetMethodBody()","needQuote":true,"nodes":[{"content":"GetMethodBody()","pos":[0,15]}]},{"pos":[93447,93460],"content":"GetMethodBody","needQuote":true,"nodes":[{"content":"GetMethodBody","pos":[0,13]}]},{"pos":[93549,93550],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93577,93578],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93668,93681],"content":"GetMethodBody","needQuote":true,"nodes":[{"content":"GetMethodBody","pos":[0,13]}]},{"pos":[93770,93771],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93798,93799],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94070,94091],"content":"_MethodBase.GetType()","needQuote":true,"nodes":[{"content":"_MethodBase.GetType()","pos":[0,21]}]},{"pos":[94364,94383],"content":"_MethodBase.GetType","needQuote":true,"nodes":[{"content":"_MethodBase.GetType","pos":[0,19]}]},{"pos":[94509,94510],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94537,94538],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94665,94715],"content":"System.Runtime.InteropServices._MethodBase.GetType","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.GetType","pos":[0,50]}]},{"pos":[94841,94842],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94869,94870],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95292,95328],"content":"_MethodBase.GetTypeInfoCount(UInt32)","needQuote":true,"nodes":[{"content":"_MethodBase.GetTypeInfoCount(UInt32)","pos":[0,36]}]},{"pos":[95663,95691],"content":"_MethodBase.GetTypeInfoCount","needQuote":true,"nodes":[{"content":"_MethodBase.GetTypeInfoCount","pos":[0,28]}]},{"pos":[95826,95827],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95877,95883],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[95943,95944],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96096,96155],"content":"System.Runtime.InteropServices._MethodBase.GetTypeInfoCount","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.GetTypeInfoCount","pos":[0,59]}]},{"pos":[96290,96291],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96341,96347],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[96407,96408],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96907,96954],"content":"_MethodBase.GetTypeInfo(UInt32, UInt32, IntPtr)","needQuote":true,"nodes":[{"content":"_MethodBase.GetTypeInfo(UInt32, UInt32, IntPtr)","pos":[0,47]}]},{"pos":[97347,97370],"content":"_MethodBase.GetTypeInfo","needQuote":true,"nodes":[{"content":"_MethodBase.GetTypeInfo","pos":[0,23]}]},{"pos":[97500,97501],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[97551,97557],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[97618,97619]},{"pos":[97674,97680],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[97741,97742]},{"pos":[97797,97803],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[97863,97864],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[98038,98092],"content":"System.Runtime.InteropServices._MethodBase.GetTypeInfo","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.GetTypeInfo","pos":[0,54]}]},{"pos":[98222,98223],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[98273,98279],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[98340,98341]},{"pos":[98396,98402],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[98463,98464]},{"pos":[98519,98525],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[98585,98586],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[99158,99221],"content":"_MethodBase.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)","needQuote":true,"nodes":[{"content":"_MethodBase.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)","pos":[0,63]}]},{"pos":[99689,99714],"content":"_MethodBase.GetIDsOfNames","needQuote":true,"nodes":[{"content":"_MethodBase.GetIDsOfNames","pos":[0,25]}]},{"pos":[99846,99847],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[99895,99899],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[99958,99959]},{"pos":[100014,100020],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[100081,100082]},{"pos":[100137,100143],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[100204,100205]},{"pos":[100260,100266],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[100327,100328]},{"pos":[100383,100389],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[100449,100450],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[100653,100709],"content":"System.Runtime.InteropServices._MethodBase.GetIDsOfNames","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.GetIDsOfNames","pos":[0,56]}]},{"pos":[100841,100842],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[100890,100894],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[100953,100954]},{"pos":[101009,101015],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[101076,101077]},{"pos":[101132,101138],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[101199,101200]},{"pos":[101255,101261],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[101322,101323]},{"pos":[101378,101384],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[101444,101445],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[102112,102191],"content":"_MethodBase.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)","needQuote":true,"nodes":[{"content":"_MethodBase.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)","pos":[0,79]}]},{"pos":[102746,102764],"content":"_MethodBase.Invoke","needQuote":true,"nodes":[{"content":"_MethodBase.Invoke","pos":[0,18]}]},{"pos":[102889,102890],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[102940,102946],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[103007,103008]},{"pos":[103061,103065],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[103124,103125]},{"pos":[103180,103186],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[103247,103248]},{"pos":[103302,103307],"content":"Int16","needQuote":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"content":",","pos":[103367,103368]},{"pos":[103423,103429],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[103490,103491]},{"pos":[103546,103552],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[103613,103614]},{"pos":[103669,103675],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[103736,103737]},{"pos":[103792,103798],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[103858,103859],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[104096,104145],"content":"System.Runtime.InteropServices._MethodBase.Invoke","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.Invoke","pos":[0,49]}]},{"pos":[104270,104271],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[104321,104327],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[104388,104389]},{"pos":[104442,104446],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[104505,104506]},{"pos":[104561,104567],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[104628,104629]},{"pos":[104683,104688],"content":"Int16","needQuote":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"content":",","pos":[104748,104749]},{"pos":[104804,104810],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[104871,104872]},{"pos":[104927,104933],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[104994,104995]},{"pos":[105050,105056],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[105117,105118]},{"pos":[105173,105179],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[105239,105240],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[105825,105837],"content":"MethodHandle","needQuote":true,"nodes":[{"content":"MethodHandle","pos":[0,12]}]},{"pos":[106110,106128],"content":"IsSecurityCritical","needQuote":true,"nodes":[{"content":"IsSecurityCritical","pos":[0,18]}]},{"pos":[106423,106445],"content":"IsSecuritySafeCritical","needQuote":true,"nodes":[{"content":"IsSecuritySafeCritical","pos":[0,22]}]},{"pos":[106751,106772],"content":"IsSecurityTransparent","needQuote":true,"nodes":[{"content":"IsSecurityTransparent","pos":[0,21]}]},{"pos":[107063,107071],"content":"IsPublic","needQuote":true,"nodes":[{"content":"IsPublic","pos":[0,8]}]},{"pos":[107324,107333],"content":"IsPrivate","needQuote":true,"nodes":[{"content":"IsPrivate","pos":[0,9]}]},{"pos":[107588,107596],"content":"IsFamily","needQuote":true,"nodes":[{"content":"IsFamily","pos":[0,8]}]},{"pos":[107850,107860],"content":"IsAssembly","needQuote":true,"nodes":[{"content":"IsAssembly","pos":[0,10]}]},{"pos":[108129,108148],"content":"IsFamilyAndAssembly","needQuote":true,"nodes":[{"content":"IsFamilyAndAssembly","pos":[0,19]}]},{"pos":[108443,108461],"content":"IsFamilyOrAssembly","needQuote":true,"nodes":[{"content":"IsFamilyOrAssembly","pos":[0,18]}]},{"pos":[108743,108751],"content":"IsStatic","needQuote":true,"nodes":[{"content":"IsStatic","pos":[0,8]}]},{"pos":[109002,109009],"content":"IsFinal","needQuote":true,"nodes":[{"content":"IsFinal","pos":[0,7]}]},{"pos":[109259,109268],"content":"IsVirtual","needQuote":true,"nodes":[{"content":"IsVirtual","pos":[0,9]}]},{"pos":[109526,109537],"content":"IsHideBySig","needQuote":true,"nodes":[{"content":"IsHideBySig","pos":[0,11]}]},{"pos":[109800,109810],"content":"IsAbstract","needQuote":true,"nodes":[{"content":"IsAbstract","pos":[0,10]}]},{"pos":[110073,110086],"content":"IsSpecialName","needQuote":true,"nodes":[{"content":"IsSpecialName","pos":[0,13]}]},{"pos":[110358,110371],"content":"IsConstructor","needQuote":true,"nodes":[{"content":"IsConstructor","pos":[0,13]}]},{"pos":[110680,110700],"content":"_MethodBase.IsPublic","needQuote":true,"nodes":[{"content":"_MethodBase.IsPublic","pos":[0,20]}]},{"pos":[111238,111259],"content":"_MethodBase.IsPrivate","needQuote":true,"nodes":[{"content":"_MethodBase.IsPrivate","pos":[0,21]}]},{"pos":[111801,111821],"content":"_MethodBase.IsFamily","needQuote":true,"nodes":[{"content":"_MethodBase.IsFamily","pos":[0,20]}]},{"pos":[112360,112382],"content":"_MethodBase.IsAssembly","needQuote":true,"nodes":[{"content":"_MethodBase.IsAssembly","pos":[0,22]}]},{"pos":[112940,112971],"content":"_MethodBase.IsFamilyAndAssembly","needQuote":true,"nodes":[{"content":"_MethodBase.IsFamilyAndAssembly","pos":[0,31]}]},{"pos":[113573,113603],"content":"_MethodBase.IsFamilyOrAssembly","needQuote":true,"nodes":[{"content":"_MethodBase.IsFamilyOrAssembly","pos":[0,30]}]},{"pos":[114190,114210],"content":"_MethodBase.IsStatic","needQuote":true,"nodes":[{"content":"_MethodBase.IsStatic","pos":[0,20]}]},{"pos":[114746,114765],"content":"_MethodBase.IsFinal","needQuote":true,"nodes":[{"content":"_MethodBase.IsFinal","pos":[0,19]}]},{"pos":[115298,115319],"content":"_MethodBase.IsVirtual","needQuote":true,"nodes":[{"content":"_MethodBase.IsVirtual","pos":[0,21]}]},{"pos":[115864,115887],"content":"_MethodBase.IsHideBySig","needQuote":true,"nodes":[{"content":"_MethodBase.IsHideBySig","pos":[0,23]}]},{"pos":[116441,116463],"content":"_MethodBase.IsAbstract","needQuote":true,"nodes":[{"content":"_MethodBase.IsAbstract","pos":[0,22]}]},{"pos":[117015,117040],"content":"_MethodBase.IsSpecialName","needQuote":true,"nodes":[{"content":"_MethodBase.IsSpecialName","pos":[0,25]}]},{"pos":[117607,117632],"content":"_MethodBase.IsConstructor","needQuote":true,"nodes":[{"content":"_MethodBase.IsConstructor","pos":[0,25]}]},{"pos":[118178,118206],"content":"GetCustomAttributes(Boolean)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Boolean)","pos":[0,28]}]},{"pos":[118383,118402],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[118497,118498],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[118549,118556],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[118617,118618],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[118730,118749],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[118844,118845],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[118896,118903],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[118964,118965],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[119268,119302],"content":"GetCustomAttributes(Type, Boolean)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Type, Boolean)","pos":[0,34]}]},{"pos":[119504,119523],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[119618,119619],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[119667,119671],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[119730,119731]},{"pos":[119787,119794],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[119855,119856],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[119980,119999],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[120094,120095],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[120143,120147],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[120206,120207]},{"pos":[120263,120270],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[120331,120332],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[120643,120667],"content":"IsDefined(Type, Boolean)","needQuote":true,"nodes":[{"content":"IsDefined(Type, Boolean)","pos":[0,24]}]},{"pos":[120849,120858],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[120943,120944],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[120992,120996],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[121055,121056]},{"pos":[121112,121119],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[121180,121181],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[121295,121304],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[121389,121390],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[121438,121442],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[121501,121502]},{"pos":[121558,121565],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[121626,121627],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[121904,121929],"content":"GetCustomAttributesData()","needQuote":true,"nodes":[{"content":"GetCustomAttributesData()","pos":[0,25]}]},{"pos":[122084,122107],"content":"GetCustomAttributesData","needQuote":true,"nodes":[{"content":"GetCustomAttributesData","pos":[0,23]}]},{"pos":[122206,122207],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[122234,122235],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[122335,122358],"content":"GetCustomAttributesData","needQuote":true,"nodes":[{"content":"GetCustomAttributesData","pos":[0,23]}]},{"pos":[122457,122458],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[122485,122486],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[122777,122798],"content":"_MemberInfo.GetType()","needQuote":true,"nodes":[{"content":"_MemberInfo.GetType()","pos":[0,21]}]},{"pos":[123071,123090],"content":"_MemberInfo.GetType","needQuote":true,"nodes":[{"content":"_MemberInfo.GetType","pos":[0,19]}]},{"pos":[123216,123217],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[123244,123245],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[123372,123422],"content":"System.Runtime.InteropServices._MemberInfo.GetType","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._MemberInfo.GetType","pos":[0,50]}]},{"pos":[123548,123549],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[123576,123577],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[123999,124035],"content":"_MemberInfo.GetTypeInfoCount(UInt32)","needQuote":true,"nodes":[{"content":"_MemberInfo.GetTypeInfoCount(UInt32)","pos":[0,36]}]},{"pos":[124370,124398],"content":"_MemberInfo.GetTypeInfoCount","needQuote":true,"nodes":[{"content":"_MemberInfo.GetTypeInfoCount","pos":[0,28]}]},{"pos":[124533,124534],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[124584,124590],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[124650,124651],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[124803,124862],"content":"System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount","pos":[0,59]}]},{"pos":[124997,124998],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[125048,125054],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[125114,125115],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[125614,125661],"content":"_MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)","needQuote":true,"nodes":[{"content":"_MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)","pos":[0,47]}]},{"pos":[126054,126077],"content":"_MemberInfo.GetTypeInfo","needQuote":true,"nodes":[{"content":"_MemberInfo.GetTypeInfo","pos":[0,23]}]},{"pos":[126207,126208],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[126258,126264],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[126325,126326]},{"pos":[126381,126387],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[126448,126449]},{"pos":[126504,126510],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[126570,126571],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[126745,126799],"content":"System.Runtime.InteropServices._MemberInfo.GetTypeInfo","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._MemberInfo.GetTypeInfo","pos":[0,54]}]},{"pos":[126929,126930],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[126980,126986],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[127047,127048]},{"pos":[127103,127109],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[127170,127171]},{"pos":[127226,127232],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[127292,127293],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[127865,127928],"content":"_MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)","needQuote":true,"nodes":[{"content":"_MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)","pos":[0,63]}]},{"pos":[128396,128421],"content":"_MemberInfo.GetIDsOfNames","needQuote":true,"nodes":[{"content":"_MemberInfo.GetIDsOfNames","pos":[0,25]}]},{"pos":[128553,128554],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[128602,128606],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[128665,128666]},{"pos":[128721,128727],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[128788,128789]},{"pos":[128844,128850],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[128911,128912]},{"pos":[128967,128973],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[129034,129035]},{"pos":[129090,129096],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[129156,129157],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[129360,129416],"content":"System.Runtime.InteropServices._MemberInfo.GetIDsOfNames","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._MemberInfo.GetIDsOfNames","pos":[0,56]}]},{"pos":[129548,129549],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[129597,129601],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[129660,129661]},{"pos":[129716,129722],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[129783,129784]},{"pos":[129839,129845],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[129906,129907]},{"pos":[129962,129968],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[130029,130030]},{"pos":[130085,130091],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[130151,130152],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[130819,130898],"content":"_MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)","needQuote":true,"nodes":[{"content":"_MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)","pos":[0,79]}]},{"pos":[131453,131471],"content":"_MemberInfo.Invoke","needQuote":true,"nodes":[{"content":"_MemberInfo.Invoke","pos":[0,18]}]},{"pos":[131596,131597],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[131647,131653],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[131714,131715]},{"pos":[131768,131772],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[131831,131832]},{"pos":[131887,131893],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[131954,131955]},{"pos":[132009,132014],"content":"Int16","needQuote":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"content":",","pos":[132074,132075]},{"pos":[132130,132136],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[132197,132198]},{"pos":[132253,132259],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[132320,132321]},{"pos":[132376,132382],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[132443,132444]},{"pos":[132499,132505],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[132565,132566],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[132803,132852],"content":"System.Runtime.InteropServices._MemberInfo.Invoke","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._MemberInfo.Invoke","pos":[0,49]}]},{"pos":[132977,132978],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[133028,133034],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[133095,133096]},{"pos":[133149,133153],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[133212,133213]},{"pos":[133268,133274],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[133335,133336]},{"pos":[133390,133395],"content":"Int16","needQuote":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"content":",","pos":[133455,133456]},{"pos":[133511,133517],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[133578,133579]},{"pos":[133634,133640],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[133701,133702]},{"pos":[133757,133763],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[133824,133825]},{"pos":[133880,133886],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[133946,133947],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[134533,134546],"content":"ReflectedType","needQuote":true,"nodes":[{"content":"ReflectedType","pos":[0,13]}]},{"pos":[134821,134837],"content":"CustomAttributes","needQuote":true,"nodes":[{"content":"CustomAttributes","pos":[0,16]}]},{"pos":[135118,135131],"content":"MetadataToken","needQuote":true,"nodes":[{"content":"MetadataToken","pos":[0,13]}]},{"pos":[135396,135402],"content":"Module","needQuote":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[135644,135666],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[135814,135820],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[135887,135888],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[135938,135944],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[136005,136006]},{"pos":[136061,136067],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[136127,136128],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[136225,136231],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[136298,136299],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[136349,136355],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[136416,136417]},{"pos":[136472,136478],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[136538,136539],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[136784,136815],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[136981,136996],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[137072,137073],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[137123,137129],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[137190,137191]},{"pos":[137246,137252],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[137312,137313],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[137419,137434],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[137510,137511],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[137561,137567],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[137628,137629]},{"pos":[137684,137690],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[137750,137751],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[137977,137986],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[138079,138086],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[138154,138155],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[138182,138183],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[138252,138259],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[138327,138328],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[138355,138356],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[138531,138548],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[138657,138672],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[138748,138749],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[138776,138777],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[138854,138869],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[138945,138946],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[138973,138974],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[139326,139344],"content":"HasMetadataToken()","needQuote":true,"nodes":[{"content":"HasMetadataToken()","pos":[0,18]}]},{"pos":[139505,139521],"content":"HasMetadataToken","needQuote":true,"nodes":[{"content":"HasMetadataToken","pos":[0,16]}]},{"pos":[139602,139603],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[139630,139631],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[139734,139750],"content":"HasMetadataToken","needQuote":true,"nodes":[{"content":"HasMetadataToken","pos":[0,16]}]},{"pos":[139831,139832],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[139859,139860],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[140283,140301],"content":"GetMetadataToken()","needQuote":true,"nodes":[{"content":"GetMetadataToken()","pos":[0,18]}]},{"pos":[140462,140478],"content":"GetMetadataToken","needQuote":true,"nodes":[{"content":"GetMetadataToken","pos":[0,16]}]},{"pos":[140559,140560],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[140587,140588],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[140691,140707],"content":"GetMetadataToken","needQuote":true,"nodes":[{"content":"GetMetadataToken","pos":[0,16]}]},{"pos":[140788,140789],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[140816,140817],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[141242,141261],"content":"GetBaseDefinition()","needQuote":true,"nodes":[{"content":"GetBaseDefinition()","pos":[0,19]}]},{"pos":[141424,141441],"content":"GetBaseDefinition","needQuote":true,"nodes":[{"content":"GetBaseDefinition","pos":[0,17]}]},{"pos":[141523,141524],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[141551,141552],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[141656,141673],"content":"GetBaseDefinition","needQuote":true,"nodes":[{"content":"GetBaseDefinition","pos":[0,17]}]},{"pos":[141755,141756],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[141783,141784],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[142253,142277],"content":"GetCustomAttribute(Type)","needQuote":true,"nodes":[{"content":"GetCustomAttribute(Type)","pos":[0,24]}]},{"pos":[142476,142494],"content":"GetCustomAttribute","needQuote":true,"nodes":[{"content":"GetCustomAttribute","pos":[0,18]}]},{"pos":[142582,142583],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[142631,142635],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[142693,142694],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[142817,142835],"content":"GetCustomAttribute","needQuote":true,"nodes":[{"content":"GetCustomAttribute","pos":[0,18]}]},{"pos":[142923,142924],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[142972,142976],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[143034,143035],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[143562,143595],"content":"GetCustomAttribute(Type, Boolean)","needQuote":true,"nodes":[{"content":"GetCustomAttribute(Type, Boolean)","pos":[0,33]}]},{"pos":[143825,143843],"content":"GetCustomAttribute","needQuote":true,"nodes":[{"content":"GetCustomAttribute","pos":[0,18]}]},{"pos":[143931,143932],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[143980,143984],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[144043,144044]},{"pos":[144100,144107],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[144168,144169],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[144307,144325],"content":"GetCustomAttribute","needQuote":true,"nodes":[{"content":"GetCustomAttribute","pos":[0,18]}]},{"pos":[144413,144414],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[144462,144466],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[144525,144526]},{"pos":[144582,144589],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[144650,144651],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[145153,145176],"content":"GetCustomAttribute<T>()","needQuote":true,"nodes":[{"content":"GetCustomAttribute&lt;T&gt;()","pos":[0,23],"source":"GetCustomAttribute<T>()"}]},{"pos":[145481,145502],"content":"GetCustomAttribute<T>","needQuote":true,"nodes":[{"content":"GetCustomAttribute&lt;T&gt;","pos":[0,21],"source":"GetCustomAttribute<T>"}]},{"pos":[145593,145594],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[145621,145622],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[145735,145759],"content":"GetCustomAttribute(Of T)","needQuote":true,"nodes":[{"content":"GetCustomAttribute(Of T)","pos":[0,24]}]},{"pos":[145853,145854],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[145881,145882],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[146453,146483],"content":"GetCustomAttribute<T>(Boolean)","needQuote":true,"nodes":[{"content":"GetCustomAttribute&lt;T&gt;(Boolean)","pos":[0,30],"source":"GetCustomAttribute<T>(Boolean)"}]},{"pos":[146839,146860],"content":"GetCustomAttribute<T>","needQuote":true,"nodes":[{"content":"GetCustomAttribute&lt;T&gt;","pos":[0,21],"source":"GetCustomAttribute<T>"}]},{"pos":[146951,146952],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[147003,147010],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[147071,147072],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[147201,147225],"content":"GetCustomAttribute(Of T)","needQuote":true,"nodes":[{"content":"GetCustomAttribute(Of T)","pos":[0,24]}]},{"pos":[147319,147320],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[147371,147378],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[147439,147440],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[148005,148026],"content":"GetCustomAttributes()","needQuote":true,"nodes":[{"content":"GetCustomAttributes()","pos":[0,21]}]},{"pos":[148203,148222],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[148311,148312],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[148339,148340],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[148451,148470],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[148559,148560],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[148587,148588],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[149079,149107],"content":"GetCustomAttributes(Boolean)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Boolean)","pos":[0,28]}]},{"pos":[149314,149333],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[149422,149423],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[149474,149481],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[149542,149543],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[149670,149689],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[149778,149779],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[149830,149837],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[149898,149899],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[150406,150431],"content":"GetCustomAttributes(Type)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Type)","pos":[0,25]}]},{"pos":[150632,150651],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[150740,150741],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[150789,150793],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[150851,150852],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[150976,150995],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[151084,151085],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[151133,151137],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[151195,151196],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[151727,151761],"content":"GetCustomAttributes(Type, Boolean)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Type, Boolean)","pos":[0,34]}]},{"pos":[151993,152012],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[152101,152102],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[152150,152154],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[152213,152214]},{"pos":[152270,152277],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[152338,152339],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[152478,152497],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[152586,152587],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[152635,152639],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[152698,152699]},{"pos":[152755,152762],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[152823,152824],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[153330,153354],"content":"GetCustomAttributes<T>()","needQuote":true,"nodes":[{"content":"GetCustomAttributes&lt;T&gt;()","pos":[0,24],"source":"GetCustomAttributes<T>()"}]},{"pos":[153663,153685],"content":"GetCustomAttributes<T>","needQuote":true,"nodes":[{"content":"GetCustomAttributes&lt;T&gt;","pos":[0,22],"source":"GetCustomAttributes<T>"}]},{"pos":[153777,153778],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[153805,153806],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[153920,153945],"content":"GetCustomAttributes(Of T)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Of T)","pos":[0,25]}]},{"pos":[154040,154041],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[154068,154069],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[154645,154676],"content":"GetCustomAttributes<T>(Boolean)","needQuote":true,"nodes":[{"content":"GetCustomAttributes&lt;T&gt;(Boolean)","pos":[0,31],"source":"GetCustomAttributes<T>(Boolean)"}]},{"pos":[155036,155058],"content":"GetCustomAttributes<T>","needQuote":true,"nodes":[{"content":"GetCustomAttributes&lt;T&gt;","pos":[0,22],"source":"GetCustomAttributes<T>"}]},{"pos":[155150,155151],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[155202,155209],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[155270,155271],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[155401,155426],"content":"GetCustomAttributes(Of T)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Of T)","pos":[0,25]}]},{"pos":[155521,155522],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[155573,155580],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[155641,155642],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[156215,156230],"content":"IsDefined(Type)","needQuote":true,"nodes":[{"content":"IsDefined(Type)","pos":[0,15]}]},{"pos":[156411,156420],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[156499,156500],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[156548,156552],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[156610,156611],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[156725,156734],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[156813,156814],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[156862,156866],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[156924,156925],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[157416,157440],"content":"IsDefined(Type, Boolean)","needQuote":true,"nodes":[{"content":"IsDefined(Type, Boolean)","pos":[0,24]}]},{"pos":[157652,157661],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[157740,157741],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[157789,157793],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[157852,157853]},{"pos":[157909,157916],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[157977,157978],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[158107,158116],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[158195,158196],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[158244,158248],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[158307,158308]},{"pos":[158364,158371],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[158432,158433],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[158929,158955],"content":"GetRuntimeBaseDefinition()","needQuote":true,"nodes":[{"content":"GetRuntimeBaseDefinition()","pos":[0,26]}]},{"pos":[159146,159170],"content":"GetRuntimeBaseDefinition","needQuote":true,"nodes":[{"content":"GetRuntimeBaseDefinition","pos":[0,24]}]},{"pos":[159266,159267],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[159294,159295],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[159413,159437],"content":"GetRuntimeBaseDefinition","needQuote":true,"nodes":[{"content":"GetRuntimeBaseDefinition","pos":[0,24]}]},{"pos":[159533,159534],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[159561,159562],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[159808,159814],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[159932,159949],"content":"System.Reflection","needQuote":true,"nodes":[{"content":"System.Reflection","pos":[0,17]}]},{"pos":[160113,160143],"content":"System.Runtime.InteropServices","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices","pos":[0,30]}]},{"pos":[160400,160428],"content":"HasMetadataToken(MemberInfo)","needQuote":true,"nodes":[{"content":"HasMetadataToken(MemberInfo)","pos":[0,28]}]},{"pos":[160647,160663],"content":"HasMetadataToken","needQuote":true,"nodes":[{"content":"HasMetadataToken","pos":[0,16]}]},{"pos":[160744,160745],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[160810,160820],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[160895,160896],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[161029,161045],"content":"HasMetadataToken","needQuote":true,"nodes":[{"content":"HasMetadataToken","pos":[0,16]}]},{"pos":[161126,161127],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[161192,161202],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[161277,161278],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[161564,161584],"content":"MemberInfoExtensions","needQuote":true,"nodes":[{"content":"MemberInfoExtensions","pos":[0,20]}]},{"pos":[161847,161875],"content":"GetMetadataToken(MemberInfo)","needQuote":true,"nodes":[{"content":"GetMetadataToken(MemberInfo)","pos":[0,28]}]},{"pos":[162094,162110],"content":"GetMetadataToken","needQuote":true,"nodes":[{"content":"GetMetadataToken","pos":[0,16]}]},{"pos":[162191,162192],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[162257,162267],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[162342,162343],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[162476,162492],"content":"GetMetadataToken","needQuote":true,"nodes":[{"content":"GetMetadataToken","pos":[0,16]}]},{"pos":[162573,162574],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[162639,162649],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[162724,162725],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[163030,163059],"content":"GetBaseDefinition(MethodInfo)","needQuote":true,"nodes":[{"content":"GetBaseDefinition(MethodInfo)","pos":[0,29]}]},{"pos":[163280,163297],"content":"GetBaseDefinition","needQuote":true,"nodes":[{"content":"GetBaseDefinition","pos":[0,17]}]},{"pos":[163379,163380],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[163445,163455],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[163530,163531],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[163665,163682],"content":"GetBaseDefinition","needQuote":true,"nodes":[{"content":"GetBaseDefinition","pos":[0,17]}]},{"pos":[163764,163765],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[163830,163840],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[163915,163916],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[164204,164224],"content":"MethodInfoExtensions","needQuote":true,"nodes":[{"content":"MethodInfoExtensions","pos":[0,20]}]},{"pos":[164506,164542],"content":"GetCustomAttribute(MemberInfo, Type)","needQuote":true,"nodes":[{"content":"GetCustomAttribute(MemberInfo, Type)","pos":[0,36]}]},{"pos":[164800,164818],"content":"GetCustomAttribute","needQuote":true,"nodes":[{"content":"GetCustomAttribute","pos":[0,18]}]},{"pos":[164906,164907],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[164972,164982],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[165058,165059]},{"pos":[165112,165116],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[165174,165175],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[165327,165345],"content":"GetCustomAttribute","needQuote":true,"nodes":[{"content":"GetCustomAttribute","pos":[0,18]}]},{"pos":[165433,165434],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[165499,165509],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[165585,165586]},{"pos":[165639,165643],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[165701,165702],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[166025,166050],"content":"CustomAttributeExtensions","needQuote":true,"nodes":[{"content":"CustomAttributeExtensions","pos":[0,25]}]},{"pos":[166362,166407],"content":"GetCustomAttribute(MemberInfo, Type, Boolean)","needQuote":true,"nodes":[{"content":"GetCustomAttribute(MemberInfo, Type, Boolean)","pos":[0,45]}]},{"pos":[166696,166714],"content":"GetCustomAttribute","needQuote":true,"nodes":[{"content":"GetCustomAttribute","pos":[0,18]}]},{"pos":[166802,166803],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[166868,166878],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[166954,166955]},{"pos":[167008,167012],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[167071,167072]},{"pos":[167128,167135],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[167196,167197],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[167364,167382],"content":"GetCustomAttribute","needQuote":true,"nodes":[{"content":"GetCustomAttribute","pos":[0,18]}]},{"pos":[167470,167471],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[167536,167546],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[167622,167623]},{"pos":[167676,167680],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[167739,167740]},{"pos":[167796,167803],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[167864,167865],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[168235,168268],"content":"GetCustomAttribute<T>(MemberInfo)","needQuote":true,"nodes":[{"content":"GetCustomAttribute&lt;T&gt;(MemberInfo)","pos":[0,33],"source":"GetCustomAttribute<T>(MemberInfo)"}]},{"pos":[168669,168690],"content":"GetCustomAttribute<T>","needQuote":true,"nodes":[{"content":"GetCustomAttribute&lt;T&gt;","pos":[0,21],"source":"GetCustomAttribute<T>"}]},{"pos":[168781,168782],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[168847,168857],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[168932,168933],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[169076,169100],"content":"GetCustomAttribute(Of T)","needQuote":true,"nodes":[{"content":"GetCustomAttribute(Of T)","pos":[0,24]}]},{"pos":[169194,169195],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[169260,169270],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[169345,169346],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[169777,169819],"content":"GetCustomAttribute<T>(MemberInfo, Boolean)","needQuote":true,"nodes":[{"content":"GetCustomAttribute&lt;T&gt;(MemberInfo, Boolean)","pos":[0,42],"source":"GetCustomAttribute<T>(MemberInfo, Boolean)"}]},{"pos":[170276,170297],"content":"GetCustomAttribute<T>","needQuote":true,"nodes":[{"content":"GetCustomAttribute&lt;T&gt;","pos":[0,21],"source":"GetCustomAttribute<T>"}]},{"pos":[170388,170389],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[170454,170464],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[170540,170541]},{"pos":[170597,170604],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[170665,170666],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[170824,170848],"content":"GetCustomAttribute(Of T)","needQuote":true,"nodes":[{"content":"GetCustomAttribute(Of T)","pos":[0,24]}]},{"pos":[170942,170943],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[171008,171018],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[171094,171095]},{"pos":[171151,171158],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[171219,171220],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[171667,171698],"content":"GetCustomAttributes(MemberInfo)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(MemberInfo)","pos":[0,31]}]},{"pos":[171933,171952],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[172041,172042],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[172107,172117],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[172192,172193],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[172334,172353],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[172442,172443],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[172508,172518],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[172593,172594],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[172937,172977],"content":"GetCustomAttributes(MemberInfo, Boolean)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(MemberInfo, Boolean)","pos":[0,40]}]},{"pos":[173243,173262],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[173351,173352],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[173417,173427],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[173503,173504]},{"pos":[173560,173567],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[173628,173629],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[173785,173804],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[173893,173894],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[173959,173969],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[174045,174046]},{"pos":[174102,174109],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[174170,174171],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[174535,174572],"content":"GetCustomAttributes(MemberInfo, Type)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(MemberInfo, Type)","pos":[0,37]}]},{"pos":[174832,174851],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[174940,174941],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[175006,175016],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[175092,175093]},{"pos":[175146,175150],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[175208,175209],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[175362,175381],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[175470,175471],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[175536,175546],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[175622,175623]},{"pos":[175676,175680],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[175738,175739],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[176112,176158],"content":"GetCustomAttributes(MemberInfo, Type, Boolean)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(MemberInfo, Type, Boolean)","pos":[0,46]}]},{"pos":[176449,176468],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[176557,176558],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[176623,176633],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[176709,176710]},{"pos":[176763,176767],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[176826,176827]},{"pos":[176883,176890],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[176951,176952],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[177120,177139],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[177228,177229],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[177294,177304],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[177380,177381]},{"pos":[177434,177438],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[177497,177498]},{"pos":[177554,177561],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[177622,177623],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[177996,178030],"content":"GetCustomAttributes<T>(MemberInfo)","needQuote":true,"nodes":[{"content":"GetCustomAttributes&lt;T&gt;(MemberInfo)","pos":[0,34],"source":"GetCustomAttributes<T>(MemberInfo)"}]},{"pos":[178435,178457],"content":"GetCustomAttributes<T>","needQuote":true,"nodes":[{"content":"GetCustomAttributes&lt;T&gt;","pos":[0,22],"source":"GetCustomAttributes<T>"}]},{"pos":[178549,178550],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[178615,178625],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[178700,178701],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[178845,178870],"content":"GetCustomAttributes(Of T)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Of T)","pos":[0,25]}]},{"pos":[178965,178966],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[179031,179041],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[179116,179117],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[179552,179595],"content":"GetCustomAttributes<T>(MemberInfo, Boolean)","needQuote":true,"nodes":[{"content":"GetCustomAttributes&lt;T&gt;(MemberInfo, Boolean)","pos":[0,43],"source":"GetCustomAttributes<T>(MemberInfo, Boolean)"}]},{"pos":[180056,180078],"content":"GetCustomAttributes<T>","needQuote":true,"nodes":[{"content":"GetCustomAttributes&lt;T&gt;","pos":[0,22],"source":"GetCustomAttributes<T>"}]},{"pos":[180170,180171],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[180236,180246],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[180322,180323]},{"pos":[180379,180386],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[180447,180448],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[180607,180632],"content":"GetCustomAttributes(Of T)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Of T)","pos":[0,25]}]},{"pos":[180727,180728],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[180793,180803],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[180879,180880]},{"pos":[180936,180943],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[181004,181005],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[181457,181484],"content":"IsDefined(MemberInfo, Type)","needQuote":true,"nodes":[{"content":"IsDefined(MemberInfo, Type)","pos":[0,27]}]},{"pos":[181724,181733],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[181812,181813],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[181878,181888],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[181964,181965]},{"pos":[182018,182022],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[182080,182081],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[182224,182233],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[182312,182313],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[182378,182388],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[182464,182465]},{"pos":[182518,182522],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[182580,182581],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[182924,182960],"content":"IsDefined(MemberInfo, Type, Boolean)","needQuote":true,"nodes":[{"content":"IsDefined(MemberInfo, Type, Boolean)","pos":[0,36]}]},{"pos":[183231,183240],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[183319,183320],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[183385,183395],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[183471,183472]},{"pos":[183525,183529],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[183588,183589]},{"pos":[183645,183652],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[183713,183714],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[183872,183881],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[183960,183961],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[184026,184036],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[184112,184113]},{"pos":[184166,184170],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[184229,184230]},{"pos":[184286,184293],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[184354,184355],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[184712,184748],"content":"GetRuntimeBaseDefinition(MethodInfo)","needQuote":true,"nodes":[{"content":"GetRuntimeBaseDefinition(MethodInfo)","pos":[0,36]}]},{"pos":[184997,185021],"content":"GetRuntimeBaseDefinition","needQuote":true,"nodes":[{"content":"GetRuntimeBaseDefinition","pos":[0,24]}]},{"pos":[185117,185118],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[185183,185193],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[185268,185269],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[185417,185441],"content":"GetRuntimeBaseDefinition","needQuote":true,"nodes":[{"content":"GetRuntimeBaseDefinition","pos":[0,24]}]},{"pos":[185537,185538],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[185603,185613],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[185688,185689],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[186012,186039],"content":"RuntimeReflectionExtensions","needQuote":true,"nodes":[{"content":"RuntimeReflectionExtensions","pos":[0,27]}]},{"pos":[186317,186327],"content":"Attributes","needQuote":true,"nodes":[{"content":"Attributes","pos":[0,10]}]},{"pos":[186571,186587],"content":"MethodAttributes","needQuote":true,"nodes":[{"content":"MethodAttributes","pos":[0,16]}]},{"pos":[186839,186856],"content":"CallingConvention","needQuote":true,"nodes":[{"content":"CallingConvention","pos":[0,17]}]},{"pos":[187123,187141],"content":"CallingConventions","needQuote":true,"nodes":[{"content":"CallingConventions","pos":[0,18]}]},{"pos":[187407,187432],"content":"ContainsGenericParameters","needQuote":true,"nodes":[{"content":"ContainsGenericParameters","pos":[0,25]}]},{"pos":[187690,187697],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[187896,187909],"content":"DeclaringType","needQuote":true,"nodes":[{"content":"DeclaringType","pos":[0,13]}]},{"pos":[188128,188132],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[188324,188339],"content":"IsGenericMethod","needQuote":true,"nodes":[{"content":"IsGenericMethod","pos":[0,15]}]},{"pos":[188629,188654],"content":"IsGenericMethodDefinition","needQuote":true,"nodes":[{"content":"IsGenericMethodDefinition","pos":[0,25]}]},{"pos":[188953,188957],"content":"Name","needQuote":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[189151,189157],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[189354,189369],"content":"ReturnParameter","needQuote":true,"nodes":[{"content":"ReturnParameter","pos":[0,15]}]},{"pos":[189625,189638],"content":"ParameterInfo","needQuote":true,"nodes":[{"content":"ParameterInfo","pos":[0,13]}]},{"pos":[189873,189883],"content":"ReturnType","needQuote":true,"nodes":[{"content":"ReturnType","pos":[0,10]}]},{"pos":[190060,190068],"content":"String[]","needQuote":true,"nodes":[{"content":"String[]","pos":[0,8]}]},{"pos":[190196,190202],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":"[]","pos":[190263,190265]},{"pos":[190330,190336],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[190396,190398],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[190537,190566],"content":"GenericTypeParameterBuilder[]","needQuote":true,"nodes":[{"content":"GenericTypeParameterBuilder[]","pos":[0,29]}]},{"pos":[190826,190853],"content":"GenericTypeParameterBuilder","needQuote":true,"nodes":[{"content":"GenericTypeParameterBuilder","pos":[0,27]}]},{"content":"[]","pos":[190930,190932]},{"pos":[191034,191061],"content":"GenericTypeParameterBuilder","needQuote":true,"nodes":[{"content":"GenericTypeParameterBuilder","pos":[0,27]}]},{"pos":[191137,191139],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[191317,191322],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[191499,191518],"content":"ParameterAttributes","needQuote":true,"nodes":[{"content":"ParameterAttributes","pos":[0,19]}]},{"pos":[191766,191782],"content":"ParameterBuilder","needQuote":true,"nodes":[{"content":"ParameterBuilder","pos":[0,16]}]},{"pos":[192047,192061],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[192210,192216],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[192298,192299],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[192349,192355],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[192415,192416],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[192514,192520],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[192602,192603],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[192653,192659],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[192719,192720],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[192967,192988],"content":"GetGenericArguments()","needQuote":true,"nodes":[{"content":"GetGenericArguments()","pos":[0,21]}]},{"pos":[193135,193154],"content":"GetGenericArguments","needQuote":true,"nodes":[{"content":"GetGenericArguments","pos":[0,19]}]},{"pos":[193249,193250],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[193277,193278],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[193374,193393],"content":"GetGenericArguments","needQuote":true,"nodes":[{"content":"GetGenericArguments","pos":[0,19]}]},{"pos":[193488,193489],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[193516,193517],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[193676,193682],"content":"Type[]","needQuote":true,"nodes":[{"content":"Type[]","pos":[0,6]}]},{"pos":[193802,193806],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[193844,193846]},{"pos":[193909,193913],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[193950,193952],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[194148,194176],"content":"GetGenericMethodDefinition()","needQuote":true,"nodes":[{"content":"GetGenericMethodDefinition()","pos":[0,28]}]},{"pos":[194337,194363],"content":"GetGenericMethodDefinition","needQuote":true,"nodes":[{"content":"GetGenericMethodDefinition","pos":[0,26]}]},{"pos":[194465,194466],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[194493,194494],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[194597,194623],"content":"GetGenericMethodDefinition","needQuote":true,"nodes":[{"content":"GetGenericMethodDefinition","pos":[0,26]}]},{"pos":[194725,194726],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[194753,194754],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[195012,195025],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[195156,195167],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[195254,195255],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[195282,195283],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[195371,195382],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[195469,195470],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[195497,195498],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[195715,195726],"content":"ILGenerator","needQuote":true,"nodes":[{"content":"ILGenerator","pos":[0,11]}]},{"pos":[195969,195984],"content":"GetParameters()","needQuote":true,"nodes":[{"content":"GetParameters()","pos":[0,15]}]},{"pos":[196119,196132],"content":"GetParameters","needQuote":true,"nodes":[{"content":"GetParameters","pos":[0,13]}]},{"pos":[196200,196201],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[196228,196229],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[196319,196332],"content":"GetParameters","needQuote":true,"nodes":[{"content":"GetParameters","pos":[0,13]}]},{"pos":[196400,196401],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[196428,196429],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[196596,196611],"content":"ParameterInfo[]","needQuote":true,"nodes":[{"content":"ParameterInfo[]","pos":[0,15]}]},{"pos":[196800,196813],"content":"ParameterInfo","needQuote":true,"nodes":[{"content":"ParameterInfo","pos":[0,13]}]},{"content":"[]","pos":[196871,196873]},{"pos":[196956,196969],"content":"ParameterInfo","needQuote":true,"nodes":[{"content":"ParameterInfo","pos":[0,13]}]},{"pos":[197026,197028],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[197248,197273],"content":"MakeGenericMethod(Type[])","needQuote":true,"nodes":[{"content":"MakeGenericMethod(Type[])","pos":[0,25]}]},{"pos":[197558,197575],"content":"MakeGenericMethod","needQuote":true,"nodes":[{"content":"MakeGenericMethod","pos":[0,17]}]},{"pos":[197668,197669],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[197717,197721],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[197780,197782]},{"pos":[197813,197814],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[197923,197940],"content":"MakeGenericMethod","needQuote":true,"nodes":[{"content":"MakeGenericMethod","pos":[0,17]}]},{"pos":[198033,198034],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[198082,198086],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[198144,198146],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[198174,198175],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[198475,198490],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"pos":[198647,198653],"content":"Byte[]","needQuote":true,"nodes":[{"content":"Byte[]","pos":[0,6]}]},{"pos":[198773,198777],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[198836,198838]},{"pos":[198901,198905],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[198963,198965],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[199146,199168],"content":"CustomAttributeBuilder","needQuote":true,"nodes":[{"content":"CustomAttributeBuilder","pos":[0,22]}]},{"pos":[199429,199449],"content":"MethodImplAttributes","needQuote":true,"nodes":[{"content":"MethodImplAttributes","pos":[0,20]}]},{"pos":[199623,199631],"content":"Type[][]","needQuote":true,"nodes":[{"content":"Type[][]","pos":[0,8]}]},{"pos":[199757,199761],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[199820,199822]},{"content":"[]","pos":[199854,199856]},{"pos":[199919,199923],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[199981,199983],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[200011,200013],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[200165,200175],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[200270,200278],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[200347,200348],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[200375,200376],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[200446,200454],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[200523,200524],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[200551,200552],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[200770,200795],"content":"MethodImplementationFlags","needQuote":true,"nodes":[{"content":"MethodImplementationFlags","pos":[0,25]}]},{"pos":[201067,201088],"content":"NotSupportedException","needQuote":true,"nodes":[{"content":"NotSupportedException","pos":[0,21]}]},{"pos":[201297,201322],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]},{"pos":[201522,201543],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[201744,201761],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[201943,201970],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]}],"content":"items:\n- uid: System.Reflection.Emit.MethodBuilder\n  commentId: T:System.Reflection.Emit.MethodBuilder\n  id: MethodBuilder\n  parent: System.Reflection.Emit\n  children:\n  - System.Reflection.Emit.MethodBuilder.Attributes\n  - System.Reflection.Emit.MethodBuilder.CallingConvention\n  - System.Reflection.Emit.MethodBuilder.ContainsGenericParameters\n  - System.Reflection.Emit.MethodBuilder.DeclaringType\n  - System.Reflection.Emit.MethodBuilder.DefineGenericParameters(System.String[])\n  - System.Reflection.Emit.MethodBuilder.DefineParameter(System.Int32,System.Reflection.ParameterAttributes,System.String)\n  - System.Reflection.Emit.MethodBuilder.Equals(System.Object)\n  - System.Reflection.Emit.MethodBuilder.GetGenericArguments\n  - System.Reflection.Emit.MethodBuilder.GetGenericMethodDefinition\n  - System.Reflection.Emit.MethodBuilder.GetHashCode\n  - System.Reflection.Emit.MethodBuilder.GetILGenerator\n  - System.Reflection.Emit.MethodBuilder.GetILGenerator(System.Int32)\n  - System.Reflection.Emit.MethodBuilder.GetParameters\n  - System.Reflection.Emit.MethodBuilder.InitLocals\n  - System.Reflection.Emit.MethodBuilder.IsGenericMethod\n  - System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition\n  - System.Reflection.Emit.MethodBuilder.MakeGenericMethod(System.Type[])\n  - System.Reflection.Emit.MethodBuilder.MethodImplementationFlags\n  - System.Reflection.Emit.MethodBuilder.Name\n  - System.Reflection.Emit.MethodBuilder.ReturnParameter\n  - System.Reflection.Emit.MethodBuilder.ReturnType\n  - System.Reflection.Emit.MethodBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  - System.Reflection.Emit.MethodBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  - System.Reflection.Emit.MethodBuilder.SetImplementationFlags(System.Reflection.MethodImplAttributes)\n  - System.Reflection.Emit.MethodBuilder.SetParameters(System.Type[])\n  - System.Reflection.Emit.MethodBuilder.SetReturnType(System.Type)\n  - System.Reflection.Emit.MethodBuilder.SetSignature(System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])\n  - System.Reflection.Emit.MethodBuilder.ToString\n  langs:\n  - csharp\n  - vb\n  name: MethodBuilder\n  fullName: System.Reflection.Emit.MethodBuilder\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: MethodBuilder\n    path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n    startLine: 20\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Defines and represents a method (or constructor) on a dynamic class.</p>\\n\"\n  syntax:\n    content: >-\n      [HostProtection(MayLeakOnAbort = true)]\n\n      [ClassInterface(ClassInterfaceType.None)]\n\n      [ComDefaultInterface(typeof (_MethodBuilder))]\n\n      [ComVisible(true)]\n\n      public sealed class MethodBuilder : MethodInfo, ICustomAttributeProvider, _MemberInfo, _MethodBase, _MethodInfo, _MethodBuilder\n    content.vb: >-\n      <HostProtection(MayLeakOnAbort:=True)>\n\n      <ClassInterface(ClassInterfaceType.None)>\n\n      <ComDefaultInterface(GetType(_MethodBuilder))>\n\n      <ComVisible(True)>\n\n      Public NotInheritable Class MethodBuilder\n          Inherits MethodInfo\n          Implements ICustomAttributeProvider, _MemberInfo, _MethodBase, _MethodInfo, _MethodBuilder\n  inheritance:\n  - System.Object\n  - System.Reflection.MemberInfo\n  - System.Reflection.MethodBase\n  - System.Reflection.MethodInfo\n  implements:\n  - System.Reflection.ICustomAttributeProvider\n  - System.Runtime.InteropServices._MemberInfo\n  - System.Runtime.InteropServices._MethodBase\n  - System.Runtime.InteropServices._MethodInfo\n  inheritedMembers:\n  - System.Reflection.MethodInfo.GetBaseDefinition\n  - System.Reflection.MethodInfo.CreateDelegate(System.Type)\n  - System.Reflection.MethodInfo.CreateDelegate(System.Type,System.Object)\n  - System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetType\n  - System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetTypeInfoCount(System.UInt32@)\n  - System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Reflection.MethodInfo.MemberType\n  - System.Reflection.MethodInfo.ReturnTypeCustomAttributes\n  - System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)\n  - System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)\n  - System.Reflection.MethodBase.GetCurrentMethod\n  - System.Reflection.MethodBase.GetMethodImplementationFlags\n  - System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  - System.Reflection.MethodBase.Invoke(System.Object,System.Object[])\n  - System.Reflection.MethodBase.GetMethodBody\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetType\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfoCount(System.UInt32@)\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Reflection.MethodBase.MethodHandle\n  - System.Reflection.MethodBase.IsSecurityCritical\n  - System.Reflection.MethodBase.IsSecuritySafeCritical\n  - System.Reflection.MethodBase.IsSecurityTransparent\n  - System.Reflection.MethodBase.IsPublic\n  - System.Reflection.MethodBase.IsPrivate\n  - System.Reflection.MethodBase.IsFamily\n  - System.Reflection.MethodBase.IsAssembly\n  - System.Reflection.MethodBase.IsFamilyAndAssembly\n  - System.Reflection.MethodBase.IsFamilyOrAssembly\n  - System.Reflection.MethodBase.IsStatic\n  - System.Reflection.MethodBase.IsFinal\n  - System.Reflection.MethodBase.IsVirtual\n  - System.Reflection.MethodBase.IsHideBySig\n  - System.Reflection.MethodBase.IsAbstract\n  - System.Reflection.MethodBase.IsSpecialName\n  - System.Reflection.MethodBase.IsConstructor\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsPublic\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsPrivate\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamily\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsAssembly\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamilyAndAssembly\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamilyOrAssembly\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsStatic\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFinal\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsVirtual\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsHideBySig\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsAbstract\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsSpecialName\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsConstructor\n  - System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)\n  - System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)\n  - System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)\n  - System.Reflection.MemberInfo.GetCustomAttributesData\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Reflection.MemberInfo.ReflectedType\n  - System.Reflection.MemberInfo.CustomAttributes\n  - System.Reflection.MemberInfo.MetadataToken\n  - System.Reflection.MemberInfo.Module\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: MethodBuilder\n  extensionMethods:\n  - System.Reflection.MemberInfo.System.Reflection.MemberInfoExtensions.HasMetadataToken\n  - System.Reflection.MemberInfo.System.Reflection.MemberInfoExtensions.GetMetadataToken\n  - System.Reflection.MethodInfo.System.Reflection.MethodInfoExtensions.GetBaseDefinition\n  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type)\n  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type,System.Boolean)\n  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1\n  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Boolean)\n  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Boolean)\n  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type)\n  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type,System.Boolean)\n  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1\n  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Boolean)\n  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.IsDefined(System.Type)\n  - System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.IsDefined(System.Type,System.Boolean)\n  - System.Reflection.MethodInfo.System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition\n- uid: System.Reflection.Emit.MethodBuilder.Attributes\n  commentId: P:System.Reflection.Emit.MethodBuilder.Attributes\n  id: Attributes\n  parent: System.Reflection.Emit.MethodBuilder\n  langs:\n  - csharp\n  - vb\n  name: Attributes\n  fullName: System.Reflection.Emit.MethodBuilder.Attributes\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Attributes\n    path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n    startLine: 584\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Retrieves the attributes for this method.</p>\\n\"\n  syntax:\n    content: public override MethodAttributes Attributes { get; }\n    content.vb: Public Overrides ReadOnly Property Attributes As MethodAttributes\n    parameters: []\n    return:\n      type: System.Reflection.MethodAttributes\n      description: \"\\n<p>Read-only. Retrieves the <strong>MethodAttributes</strong> for this method.</p>\\n\"\n  overridden: System.Reflection.MethodBase.Attributes\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: MethodBuilder.Attributes\n- uid: System.Reflection.Emit.MethodBuilder.CallingConvention\n  commentId: P:System.Reflection.Emit.MethodBuilder.CallingConvention\n  id: CallingConvention\n  parent: System.Reflection.Emit.MethodBuilder\n  langs:\n  - csharp\n  - vb\n  name: CallingConvention\n  fullName: System.Reflection.Emit.MethodBuilder.CallingConvention\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CallingConvention\n    path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n    startLine: 589\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Returns the calling convention of the method.</p>\\n\"\n  syntax:\n    content: public override CallingConventions CallingConvention { get; }\n    content.vb: Public Overrides ReadOnly Property CallingConvention As CallingConventions\n    parameters: []\n    return:\n      type: System.Reflection.CallingConventions\n      description: \"\\n<p>Read-only. The calling convention of the method.</p>\\n\"\n  overridden: System.Reflection.MethodBase.CallingConvention\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: MethodBuilder.CallingConvention\n- uid: System.Reflection.Emit.MethodBuilder.ContainsGenericParameters\n  commentId: P:System.Reflection.Emit.MethodBuilder.ContainsGenericParameters\n  id: ContainsGenericParameters\n  parent: System.Reflection.Emit.MethodBuilder\n  langs:\n  - csharp\n  - vb\n  name: ContainsGenericParameters\n  fullName: System.Reflection.Emit.MethodBuilder.ContainsGenericParameters\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ContainsGenericParameters\n    path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n    startLine: 678\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Not supported for this type.</p>\\n\"\n  syntax:\n    content: public override bool ContainsGenericParameters { get; }\n    content.vb: Public Overrides ReadOnly Property ContainsGenericParameters As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Not supported.</p>\\n\"\n  overridden: System.Reflection.MethodBase.ContainsGenericParameters\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The invoked method is not supported in the base class.</p>\\n\"\n  seealso:\n  - type: System.Reflection.MethodInfo\n    commentId: T:System.Reflection.MethodInfo\n  - type: System.Type.IsGenericType\n    commentId: P:System.Type.IsGenericType\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: MethodBuilder.ContainsGenericParameters\n- uid: System.Reflection.Emit.MethodBuilder.DeclaringType\n  commentId: P:System.Reflection.Emit.MethodBuilder.DeclaringType\n  id: DeclaringType\n  parent: System.Reflection.Emit.MethodBuilder\n  langs:\n  - csharp\n  - vb\n  name: DeclaringType\n  fullName: System.Reflection.Emit.MethodBuilder.DeclaringType\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DeclaringType\n    path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n    startLine: 545\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Returns the type that declares this method.</p>\\n\"\n  syntax:\n    content: public override Type DeclaringType { get; }\n    content.vb: Public Overrides ReadOnly Property DeclaringType As Type\n    parameters: []\n    return:\n      type: System.Type\n      description: \"\\n<p>Read-only. The type that declares this method.</p>\\n\"\n  overridden: System.Reflection.MemberInfo.DeclaringType\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: MethodBuilder.DeclaringType\n- uid: System.Reflection.Emit.MethodBuilder.InitLocals\n  commentId: P:System.Reflection.Emit.MethodBuilder.InitLocals\n  id: InitLocals\n  parent: System.Reflection.Emit.MethodBuilder\n  langs:\n  - csharp\n  - vb\n  name: InitLocals\n  fullName: System.Reflection.Emit.MethodBuilder.InitLocals\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: InitLocals\n    path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n    startLine: 1146\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Gets or sets a Boolean value that specifies whether the local variables in this method are zero initialized. The default value of this property is <strong>true</strong>.</p>\\n\"\n  syntax:\n    content: public bool InitLocals { get; set; }\n    content.vb: Public Property InitLocals As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the local variables in this method should be zero initialized; otherwise <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>For the current method, the <xref href=\\\"System.Reflection.Emit.MethodBuilder.IsGenericMethod\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>true</strong>, but the <xref href=\\\"System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>false</strong>. (Get or set.)</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: MethodBuilder.InitLocals\n- uid: System.Reflection.Emit.MethodBuilder.IsGenericMethod\n  commentId: P:System.Reflection.Emit.MethodBuilder.IsGenericMethod\n  id: IsGenericMethod\n  parent: System.Reflection.Emit.MethodBuilder\n  langs:\n  - csharp\n  - vb\n  name: IsGenericMethod\n  fullName: System.Reflection.Emit.MethodBuilder.IsGenericMethod\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IsGenericMethod\n    path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n    startLine: 682\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Gets a value indicating whether the method is a generic method.</p>\\n\"\n  syntax:\n    content: public override bool IsGenericMethod { get; }\n    content.vb: Public Overrides ReadOnly Property IsGenericMethod As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the method is generic; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.Reflection.MethodBase.IsGenericMethod\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: MethodBuilder.IsGenericMethod\n- uid: System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition\n  commentId: P:System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition\n  id: IsGenericMethodDefinition\n  parent: System.Reflection.Emit.MethodBuilder\n  langs:\n  - csharp\n  - vb\n  name: IsGenericMethodDefinition\n  fullName: System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IsGenericMethodDefinition\n    path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n    startLine: 676\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Gets a value indicating whether the current <xref href=\\\"System.Reflection.Emit.MethodBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object represents the definition of a generic method.</p>\\n\"\n  syntax:\n    content: public override bool IsGenericMethodDefinition { get; }\n    content.vb: Public Overrides ReadOnly Property IsGenericMethodDefinition As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the current <xref href=\\\"System.Reflection.Emit.MethodBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object represents the definition of a generic method; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.Reflection.MethodBase.IsGenericMethodDefinition\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: MethodBuilder.IsGenericMethodDefinition\n- uid: System.Reflection.Emit.MethodBuilder.Name\n  commentId: P:System.Reflection.Emit.MethodBuilder.Name\n  id: Name\n  parent: System.Reflection.Emit.MethodBuilder\n  langs:\n  - csharp\n  - vb\n  name: Name\n  fullName: System.Reflection.Emit.MethodBuilder.Name\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Name\n    path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n    startLine: 521\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Retrieves the name of this method.</p>\\n\"\n  syntax:\n    content: public override string Name { get; }\n    content.vb: Public Overrides ReadOnly Property Name As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>Read-only. Retrieves a string containing the simple name of this method.</p>\\n\"\n  overridden: System.Reflection.MemberInfo.Name\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: MethodBuilder.Name\n- uid: System.Reflection.Emit.MethodBuilder.ReturnParameter\n  commentId: P:System.Reflection.Emit.MethodBuilder.ReturnParameter\n  id: ReturnParameter\n  parent: System.Reflection.Emit.MethodBuilder\n  langs:\n  - csharp\n  - vb\n  name: ReturnParameter\n  fullName: System.Reflection.Emit.MethodBuilder.ReturnParameter\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ReturnParameter\n    path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n    startLine: 640\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Gets a <xref href=\\\"System.Reflection.ParameterInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that contains information about the return type of the method, such as whether the return type has custom modifiers. </p>\\n\"\n  syntax:\n    content: public override ParameterInfo ReturnParameter { get; }\n    content.vb: Public Overrides ReadOnly Property ReturnParameter As ParameterInfo\n    parameters: []\n    return:\n      type: System.Reflection.ParameterInfo\n      description: \"\\n<p>A <xref href=\\\"System.Reflection.ParameterInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that contains information about the return type.</p>\\n\"\n  overridden: System.Reflection.MethodInfo.ReturnParameter\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The declaring type has not been created.</p>\\n\"\n  seealso:\n  - type: System.Reflection.ParameterInfo.GetOptionalCustomModifiers\n    commentId: M:System.Reflection.ParameterInfo.GetOptionalCustomModifiers\n  - type: System.Reflection.ParameterInfo.GetRequiredCustomModifiers\n    commentId: M:System.Reflection.ParameterInfo.GetRequiredCustomModifiers\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: MethodBuilder.ReturnParameter\n- uid: System.Reflection.Emit.MethodBuilder.ReturnType\n  commentId: P:System.Reflection.Emit.MethodBuilder.ReturnType\n  id: ReturnType\n  parent: System.Reflection.Emit.MethodBuilder\n  langs:\n  - csharp\n  - vb\n  name: ReturnType\n  fullName: System.Reflection.Emit.MethodBuilder.ReturnType\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ReturnType\n    path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n    startLine: 621\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Gets the return type of the method represented by this <xref href=\\\"System.Reflection.Emit.MethodBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override Type ReturnType { get; }\n    content.vb: Public Overrides ReadOnly Property ReturnType As Type\n    parameters: []\n    return:\n      type: System.Type\n      description: \"\\n<p>The return type of the method.</p>\\n\"\n  overridden: System.Reflection.MethodInfo.ReturnType\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: MethodBuilder.ReturnType\n- uid: System.Reflection.Emit.MethodBuilder.DefineGenericParameters(System.String[])\n  commentId: M:System.Reflection.Emit.MethodBuilder.DefineGenericParameters(System.String[])\n  id: DefineGenericParameters(System.String[])\n  parent: System.Reflection.Emit.MethodBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineGenericParameters(String[])\n  fullName: System.Reflection.Emit.MethodBuilder.DefineGenericParameters(System.String[])\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineGenericParameters\n    path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n    startLine: 692\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Sets the number of generic type parameters for the current method, specifies their names, and returns an array of <xref href=\\\"System.Reflection.Emit.GenericTypeParameterBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects that can be used to define their constraints.</p>\\n\"\n  syntax:\n    content: public GenericTypeParameterBuilder[] DefineGenericParameters(params string[] names)\n    content.vb: Public Function DefineGenericParameters(ParamArray names As String()) As GenericTypeParameterBuilder()\n    parameters:\n    - id: names\n      type: System.String[]\n      description: \"\\n<p>An array of strings that represent the names of the generic type parameters.</p>\\n\"\n    return:\n      type: System.Reflection.Emit.GenericTypeParameterBuilder[]\n      description: \"\\n<p>An array of <xref href=\\\"System.Reflection.Emit.GenericTypeParameterBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects representing the type parameters of the generic method.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>Generic type parameters have already been defined for this method.</p>\\n<p>-or-</p>\\n<p>The method has been completed already.</p>\\n<p>-or-</p>\\n<p>The <xref href=\\\"System.Reflection.Emit.MethodBuilder.SetImplementationFlags(System.Reflection.MethodImplAttributes)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method has been called for the current method.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>names</em> is <strong>null</strong>.</p>\\n<p>-or-</p>\\n<p>An element of <em>names</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>names</em> is an empty array.</p>\\n\"\n  seealso:\n  - type: System.Reflection.MethodInfo\n    commentId: T:System.Reflection.MethodInfo\n  - type: System.Type.IsGenericType\n    commentId: P:System.Type.IsGenericType\n  - type: System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes)\n    commentId: M:System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Reflection.Emit.MethodBuilder.DefineGenericParameters(System.String())\n  name.vb: DefineGenericParameters(String())\n  nameWithType: MethodBuilder.DefineGenericParameters(String[])\n  nameWithType.vb: MethodBuilder.DefineGenericParameters(String())\n- uid: System.Reflection.Emit.MethodBuilder.DefineParameter(System.Int32,System.Reflection.ParameterAttributes,System.String)\n  commentId: M:System.Reflection.Emit.MethodBuilder.DefineParameter(System.Int32,System.Reflection.ParameterAttributes,System.String)\n  id: DefineParameter(System.Int32,System.Reflection.ParameterAttributes,System.String)\n  parent: System.Reflection.Emit.MethodBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineParameter(Int32, ParameterAttributes, String)\n  fullName: System.Reflection.Emit.MethodBuilder.DefineParameter(System.Int32, System.Reflection.ParameterAttributes, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineParameter\n    path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n    startLine: 843\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Sets the parameter attributes and the name of a parameter of this method, or of the return value of this method. Returns a ParameterBuilder that can be used to apply custom attributes.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public ParameterBuilder DefineParameter(int position, ParameterAttributes attributes, string strParamName)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Function DefineParameter(position As Integer, attributes As ParameterAttributes, strParamName As String) As ParameterBuilder\n    parameters:\n    - id: position\n      type: System.Int32\n      description: \"\\n<p>The position of the parameter in the parameter list. Parameters are indexed beginning with the number 1 for the first parameter; the number 0 represents the return value of the method. </p>\\n\"\n    - id: attributes\n      type: System.Reflection.ParameterAttributes\n      description: \"\\n<p>The parameter attributes of the parameter. </p>\\n\"\n    - id: strParamName\n      type: System.String\n      description: \"\\n<p>The name of the parameter. The name can be the null string. </p>\\n\"\n    return:\n      type: System.Reflection.Emit.ParameterBuilder\n      description: \"\\n<p>Returns a <strong>ParameterBuilder</strong> object that represents a parameter of this method or the return value of this method.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The method has no parameters.</p>\\n<p>-or- </p>\\n<p>\\n<em>position</em> is less than zero.</p>\\n<p>-or- </p>\\n<p>\\n<em>position</em> is greater than the number of the method's parameters. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The containing type was previously created using <xref href=\\\"System.Reflection.Emit.TypeBuilder.CreateType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or-</p>\\n<p>For the current method, the <xref href=\\\"System.Reflection.Emit.MethodBuilder.IsGenericMethod\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>true</strong>, but the <xref href=\\\"System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>false</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: MethodBuilder.DefineParameter(Int32, ParameterAttributes, String)\n- uid: System.Reflection.Emit.MethodBuilder.Equals(System.Object)\n  commentId: M:System.Reflection.Emit.MethodBuilder.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Reflection.Emit.MethodBuilder\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  fullName: System.Reflection.Emit.MethodBuilder.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Equals\n    path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n    startLine: 482\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Determines whether the given object is equal to this instance.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public override bool Equals(object obj)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Overrides Function Equals(obj As Object) As Boolean\n    parameters:\n    - id: obj\n      type: System.Object\n      description: \"\\n<p>The object to compare with this <strong>MethodBuilder</strong> instance. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <em>obj</em> is an instance of <strong>MethodBuilder</strong> and is equal to this object; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.Reflection.MethodInfo.Equals(System.Object)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: MethodBuilder.Equals(Object)\n- uid: System.Reflection.Emit.MethodBuilder.GetGenericArguments\n  commentId: M:System.Reflection.Emit.MethodBuilder.GetGenericArguments\n  id: GetGenericArguments\n  parent: System.Reflection.Emit.MethodBuilder\n  langs:\n  - csharp\n  - vb\n  name: GetGenericArguments()\n  fullName: System.Reflection.Emit.MethodBuilder.GetGenericArguments()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetGenericArguments\n    path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n    startLine: 684\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Returns an array of <xref href=\\\"System.Reflection.Emit.GenericTypeParameterBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects that represent the type parameters of the method, if it is generic.</p>\\n\"\n  syntax:\n    content: public override Type[] GetGenericArguments()\n    content.vb: Public Overrides Function GetGenericArguments As Type()\n    return:\n      type: System.Type[]\n      description: \"\\n<p>An array of <xref href=\\\"System.Reflection.Emit.GenericTypeParameterBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects representing the type parameters, if the method is generic, or <strong>null</strong> if the method is not generic. </p>\\n\"\n  overridden: System.Reflection.MethodInfo.GetGenericArguments\n  seealso:\n  - type: System.Reflection.MethodInfo\n    commentId: T:System.Reflection.MethodInfo\n  - type: System.Type.IsGenericType\n    commentId: P:System.Type.IsGenericType\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: MethodBuilder.GetGenericArguments()\n- uid: System.Reflection.Emit.MethodBuilder.GetGenericMethodDefinition\n  commentId: M:System.Reflection.Emit.MethodBuilder.GetGenericMethodDefinition\n  id: GetGenericMethodDefinition\n  parent: System.Reflection.Emit.MethodBuilder\n  langs:\n  - csharp\n  - vb\n  name: GetGenericMethodDefinition()\n  fullName: System.Reflection.Emit.MethodBuilder.GetGenericMethodDefinition()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetGenericMethodDefinition\n    path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n    startLine: 680\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Returns this method.</p>\\n\"\n  syntax:\n    content: public override MethodInfo GetGenericMethodDefinition()\n    content.vb: Public Overrides Function GetGenericMethodDefinition As MethodInfo\n    return:\n      type: System.Reflection.MethodInfo\n      description: \"\\n<p>The current instance of <xref href=\\\"System.Reflection.Emit.MethodBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  overridden: System.Reflection.MethodInfo.GetGenericMethodDefinition\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The current method is not generic. That is, the <xref href=\\\"System.Reflection.Emit.MethodBuilder.IsGenericMethod\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property returns <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.Reflection.MethodInfo\n    commentId: T:System.Reflection.MethodInfo\n  - type: System.Type.IsGenericType\n    commentId: P:System.Type.IsGenericType\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: MethodBuilder.GetGenericMethodDefinition()\n- uid: System.Reflection.Emit.MethodBuilder.GetHashCode\n  commentId: M:System.Reflection.Emit.MethodBuilder.GetHashCode\n  id: GetHashCode\n  parent: System.Reflection.Emit.MethodBuilder\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  fullName: System.Reflection.Emit.MethodBuilder.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetHashCode\n    path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n    startLine: 502\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Gets the hash code for this method.</p>\\n\"\n  syntax:\n    content: public override int GetHashCode()\n    content.vb: Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>The hash code for this method.</p>\\n\"\n  overridden: System.Reflection.MethodInfo.GetHashCode\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: MethodBuilder.GetHashCode()\n- uid: System.Reflection.Emit.MethodBuilder.GetILGenerator\n  commentId: M:System.Reflection.Emit.MethodBuilder.GetILGenerator\n  id: GetILGenerator\n  parent: System.Reflection.Emit.MethodBuilder\n  langs:\n  - csharp\n  - vb\n  name: GetILGenerator()\n  fullName: System.Reflection.Emit.MethodBuilder.GetILGenerator()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetILGenerator\n    path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n    startLine: 1111\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Returns an <strong>ILGenerator</strong> for this method with a default Microsoft intermediate language (MSIL) stream size of 64 bytes.</p>\\n\"\n  syntax:\n    content: public ILGenerator GetILGenerator()\n    content.vb: Public Function GetILGenerator As ILGenerator\n    return:\n      type: System.Reflection.Emit.ILGenerator\n      description: \"\\n<p>Returns an <strong>ILGenerator</strong> object for this method.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The method should not have a body because of its <xref href=\\\"System.Reflection.MethodAttributes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.Reflection.MethodImplAttributes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> flags, for example because it has the <xref href=\\\"System.Reflection.MethodAttributes.PinvokeImpl\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> flag. </p>\\n<p>-or-</p>\\n<p>The method is a generic method, but not a generic method definition. That is, the <xref href=\\\"System.Reflection.Emit.MethodBuilder.IsGenericMethod\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>true</strong>, but the <xref href=\\\"System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>false</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: MethodBuilder.GetILGenerator()\n- uid: System.Reflection.Emit.MethodBuilder.GetILGenerator(System.Int32)\n  commentId: M:System.Reflection.Emit.MethodBuilder.GetILGenerator(System.Int32)\n  id: GetILGenerator(System.Int32)\n  parent: System.Reflection.Emit.MethodBuilder\n  langs:\n  - csharp\n  - vb\n  name: GetILGenerator(Int32)\n  fullName: System.Reflection.Emit.MethodBuilder.GetILGenerator(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetILGenerator\n    path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n    startLine: 1122\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Returns an <strong>ILGenerator</strong> for this method with the specified Microsoft intermediate language (MSIL) stream size.</p>\\n\"\n  syntax:\n    content: public ILGenerator GetILGenerator(int size)\n    content.vb: Public Function GetILGenerator(size As Integer) As ILGenerator\n    parameters:\n    - id: size\n      type: System.Int32\n      description: \"\\n<p>The size of the MSIL stream, in bytes. </p>\\n\"\n    return:\n      type: System.Reflection.Emit.ILGenerator\n      description: \"\\n<p>Returns an <strong>ILGenerator</strong> object for this method.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The method should not have a body because of its <xref href=\\\"System.Reflection.MethodAttributes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.Reflection.MethodImplAttributes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> flags, for example because it has the <xref href=\\\"System.Reflection.MethodAttributes.PinvokeImpl\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> flag. </p>\\n<p>-or-</p>\\n<p>The method is a generic method, but not a generic method definition. That is, the <xref href=\\\"System.Reflection.Emit.MethodBuilder.IsGenericMethod\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>true</strong>, but the <xref href=\\\"System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>false</strong>.   </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: MethodBuilder.GetILGenerator(Int32)\n- uid: System.Reflection.Emit.MethodBuilder.GetParameters\n  commentId: M:System.Reflection.Emit.MethodBuilder.GetParameters\n  id: GetParameters\n  parent: System.Reflection.Emit.MethodBuilder\n  langs:\n  - csharp\n  - vb\n  name: GetParameters()\n  fullName: System.Reflection.Emit.MethodBuilder.GetParameters()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetParameters\n    path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n    startLine: 629\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Returns the parameters of this method.</p>\\n\"\n  syntax:\n    content: public override ParameterInfo[] GetParameters()\n    content.vb: Public Overrides Function GetParameters As ParameterInfo()\n    return:\n      type: System.Reflection.ParameterInfo[]\n      description: \"\\n<p>An array of <strong>ParameterInfo</strong> objects that represent the parameters of the method.</p>\\n\"\n  overridden: System.Reflection.MethodBase.GetParameters\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>This method is not currently supported. Retrieve the method using <xref href=\\\"System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and call <strong>GetParameters</strong> on the returned <xref href=\\\"System.Reflection.MethodInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: MethodBuilder.GetParameters()\n- uid: System.Reflection.Emit.MethodBuilder.MakeGenericMethod(System.Type[])\n  commentId: M:System.Reflection.Emit.MethodBuilder.MakeGenericMethod(System.Type[])\n  id: MakeGenericMethod(System.Type[])\n  parent: System.Reflection.Emit.MethodBuilder\n  langs:\n  - csharp\n  - vb\n  name: MakeGenericMethod(Type[])\n  fullName: System.Reflection.Emit.MethodBuilder.MakeGenericMethod(System.Type[])\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: MakeGenericMethod\n    path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n    startLine: 686\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Returns a generic method constructed from the current generic method definition using the specified generic type arguments.</p>\\n\"\n  syntax:\n    content: public override MethodInfo MakeGenericMethod(params Type[] typeArguments)\n    content.vb: Public Overrides Function MakeGenericMethod(ParamArray typeArguments As Type()) As MethodInfo\n    parameters:\n    - id: typeArguments\n      type: System.Type[]\n      description: \"\\n<p>An array of <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects that represent the type arguments for the generic method.</p>\\n\"\n    return:\n      type: System.Reflection.MethodInfo\n      description: \"\\n<p>A <xref href=\\\"System.Reflection.MethodInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the generic method constructed from the current generic method definition using the specified generic type arguments.</p>\\n\"\n  overridden: System.Reflection.MethodInfo.MakeGenericMethod(System.Type[])\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.Reflection.Emit.MethodBuilder.MakeGenericMethod(System.Type())\n  name.vb: MakeGenericMethod(Type())\n  nameWithType: MethodBuilder.MakeGenericMethod(Type[])\n  nameWithType.vb: MethodBuilder.MakeGenericMethod(Type())\n- uid: System.Reflection.Emit.MethodBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  commentId: M:System.Reflection.Emit.MethodBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  id: SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  parent: System.Reflection.Emit.MethodBuilder\n  langs:\n  - csharp\n  - vb\n  name: SetCustomAttribute(ConstructorInfo, Byte[])\n  fullName: System.Reflection.Emit.MethodBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte[])\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetCustomAttribute\n    path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n    startLine: 1169\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Sets a custom attribute using a specified custom attribute blob.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      [ComVisible(true)]\n\n      public void SetCustomAttribute(ConstructorInfo con, byte[] binaryAttribute)\n    content.vb: >-\n      <SecurityCritical>\n\n      <ComVisible(True)>\n\n      Public Sub SetCustomAttribute(con As ConstructorInfo, binaryAttribute As Byte())\n    parameters:\n    - id: con\n      type: System.Reflection.ConstructorInfo\n      description: \"\\n<p>The constructor for the custom attribute. </p>\\n\"\n    - id: binaryAttribute\n      type: System.Byte[]\n      description: \"\\n<p>A byte blob representing the attributes. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>con</em> or <em>binaryAttribute</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>For the current method, the <xref href=\\\"System.Reflection.Emit.MethodBuilder.IsGenericMethod\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>true</strong>, but the <xref href=\\\"System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Reflection.Emit.MethodBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte())\n  name.vb: SetCustomAttribute(ConstructorInfo, Byte())\n  nameWithType: MethodBuilder.SetCustomAttribute(ConstructorInfo, Byte[])\n  nameWithType.vb: MethodBuilder.SetCustomAttribute(ConstructorInfo, Byte())\n- uid: System.Reflection.Emit.MethodBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  commentId: M:System.Reflection.Emit.MethodBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  id: SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  parent: System.Reflection.Emit.MethodBuilder\n  langs:\n  - csharp\n  - vb\n  name: SetCustomAttribute(CustomAttributeBuilder)\n  fullName: System.Reflection.Emit.MethodBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetCustomAttribute\n    path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n    startLine: 1193\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Sets a custom attribute using a custom attribute builder.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public void SetCustomAttribute(CustomAttributeBuilder customBuilder)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Sub SetCustomAttribute(customBuilder As CustomAttributeBuilder)\n    parameters:\n    - id: customBuilder\n      type: System.Reflection.Emit.CustomAttributeBuilder\n      description: \"\\n<p>An instance of a helper class to describe the custom attribute. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>customBuilder</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>For the current method, the <xref href=\\\"System.Reflection.Emit.MethodBuilder.IsGenericMethod\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>true</strong>, but the <xref href=\\\"System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: MethodBuilder.SetCustomAttribute(CustomAttributeBuilder)\n- uid: System.Reflection.Emit.MethodBuilder.SetImplementationFlags(System.Reflection.MethodImplAttributes)\n  commentId: M:System.Reflection.Emit.MethodBuilder.SetImplementationFlags(System.Reflection.MethodImplAttributes)\n  id: SetImplementationFlags(System.Reflection.MethodImplAttributes)\n  parent: System.Reflection.Emit.MethodBuilder\n  langs:\n  - csharp\n  - vb\n  name: SetImplementationFlags(MethodImplAttributes)\n  fullName: System.Reflection.Emit.MethodBuilder.SetImplementationFlags(System.Reflection.MethodImplAttributes)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetImplementationFlags\n    path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n    startLine: 1097\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Sets the implementation flags for this method.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public void SetImplementationFlags(MethodImplAttributes attributes)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Sub SetImplementationFlags(attributes As MethodImplAttributes)\n    parameters:\n    - id: attributes\n      type: System.Reflection.MethodImplAttributes\n      description: \"\\n<p>The implementation flags to set. </p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The containing type was previously created using <xref href=\\\"System.Reflection.Emit.TypeBuilder.CreateType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or-</p>\\n<p>For the current method, the <xref href=\\\"System.Reflection.Emit.MethodBuilder.IsGenericMethod\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>true</strong>, but the <xref href=\\\"System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>false</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: MethodBuilder.SetImplementationFlags(MethodImplAttributes)\n- uid: System.Reflection.Emit.MethodBuilder.SetParameters(System.Type[])\n  commentId: M:System.Reflection.Emit.MethodBuilder.SetParameters(System.Type[])\n  id: SetParameters(System.Type[])\n  parent: System.Reflection.Emit.MethodBuilder\n  langs:\n  - csharp\n  - vb\n  name: SetParameters(Type[])\n  fullName: System.Reflection.Emit.MethodBuilder.SetParameters(System.Type[])\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetParameters\n    path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n    startLine: 795\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Sets the number and types of parameters for a method. </p>\\n\"\n  syntax:\n    content: public void SetParameters(params Type[] parameterTypes)\n    content.vb: Public Sub SetParameters(ParamArray parameterTypes As Type())\n    parameters:\n    - id: parameterTypes\n      type: System.Type[]\n      description: \"\\n<p>An array of <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects representing the parameter types.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The current method is generic, but is not a generic method definition. That is, the <xref href=\\\"System.Reflection.Emit.MethodBuilder.IsGenericMethod\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>true</strong>, but the <xref href=\\\"System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.Reflection.Emit.MethodBuilder.SetReturnType(System.Type)\n    commentId: M:System.Reflection.Emit.MethodBuilder.SetReturnType(System.Type)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Reflection.Emit.MethodBuilder.SetParameters(System.Type())\n  name.vb: SetParameters(Type())\n  nameWithType: MethodBuilder.SetParameters(Type[])\n  nameWithType.vb: MethodBuilder.SetParameters(Type())\n- uid: System.Reflection.Emit.MethodBuilder.SetReturnType(System.Type)\n  commentId: M:System.Reflection.Emit.MethodBuilder.SetReturnType(System.Type)\n  id: SetReturnType(System.Type)\n  parent: System.Reflection.Emit.MethodBuilder\n  langs:\n  - csharp\n  - vb\n  name: SetReturnType(Type)\n  fullName: System.Reflection.Emit.MethodBuilder.SetReturnType(System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetReturnType\n    path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n    startLine: 802\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Sets the return type of the method.</p>\\n\"\n  syntax:\n    content: public void SetReturnType(Type returnType)\n    content.vb: Public Sub SetReturnType(returnType As Type)\n    parameters:\n    - id: returnType\n      type: System.Type\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents the return type of the method.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The current method is generic, but is not a generic method definition. That is, the <xref href=\\\"System.Reflection.Emit.MethodBuilder.IsGenericMethod\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>true</strong>, but the <xref href=\\\"System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.Reflection.Emit.MethodBuilder.SetParameters(System.Type[])\n    commentId: M:System.Reflection.Emit.MethodBuilder.SetParameters(System.Type[])\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: MethodBuilder.SetReturnType(Type)\n- uid: System.Reflection.Emit.MethodBuilder.SetSignature(System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])\n  commentId: M:System.Reflection.Emit.MethodBuilder.SetSignature(System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])\n  id: SetSignature(System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])\n  parent: System.Reflection.Emit.MethodBuilder\n  langs:\n  - csharp\n  - vb\n  name: SetSignature(Type, Type[], Type[], Type[], Type[][], Type[][])\n  fullName: System.Reflection.Emit.MethodBuilder.SetSignature(System.Type, System.Type[], System.Type[], System.Type[], System.Type[][], System.Type[][])\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetSignature\n    path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n    startLine: 809\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Sets the method signature, including the return type, the parameter types, and the required and optional custom modifiers of the return type and parameter types.</p>\\n\"\n  syntax:\n    content: public void SetSignature(Type returnType, Type[] returnTypeRequiredCustomModifiers, Type[] returnTypeOptionalCustomModifiers, Type[] parameterTypes, Type[][] parameterTypeRequiredCustomModifiers, Type[][] parameterTypeOptionalCustomModifiers)\n    content.vb: Public Sub SetSignature(returnType As Type, returnTypeRequiredCustomModifiers As Type(), returnTypeOptionalCustomModifiers As Type(), parameterTypes As Type(), parameterTypeRequiredCustomModifiers As Type()(), parameterTypeOptionalCustomModifiers As Type()())\n    parameters:\n    - id: returnType\n      type: System.Type\n      description: \"\\n<p>The return type of the method.</p>\\n\"\n    - id: returnTypeRequiredCustomModifiers\n      type: System.Type[]\n      description: \"\\n<p>An array of types representing the required custom modifiers, such as <xref href=\\\"System.Runtime.CompilerServices.IsConst\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, for the return type of the method. If the return type has no required custom modifiers, specify <strong>null</strong>.</p>\\n\"\n    - id: returnTypeOptionalCustomModifiers\n      type: System.Type[]\n      description: \"\\n<p>An array of types representing the optional custom modifiers, such as <xref href=\\\"System.Runtime.CompilerServices.IsConst\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, for the return type of the method. If the return type has no optional custom modifiers, specify <strong>null</strong>.</p>\\n\"\n    - id: parameterTypes\n      type: System.Type[]\n      description: \"\\n<p>The types of the parameters of the method.</p>\\n\"\n    - id: parameterTypeRequiredCustomModifiers\n      type: System.Type[][]\n      description: \"\\n<p>An array of arrays of types. Each array of types represents the required custom modifiers for the corresponding parameter, such as <xref href=\\\"System.Runtime.CompilerServices.IsConst\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. If a particular parameter has no required custom modifiers, specify <strong>null</strong> instead of an array of types. If none of the parameters have required custom modifiers, specify <strong>null</strong> instead of an array of arrays.</p>\\n\"\n    - id: parameterTypeOptionalCustomModifiers\n      type: System.Type[][]\n      description: \"\\n<p>An array of arrays of types. Each array of types represents the optional custom modifiers for the corresponding parameter, such as <xref href=\\\"System.Runtime.CompilerServices.IsConst\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. If a particular parameter has no optional custom modifiers, specify <strong>null</strong> instead of an array of types. If none of the parameters have optional custom modifiers, specify <strong>null</strong> instead of an array of arrays.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The current method is generic, but is not a generic method definition. That is, the <xref href=\\\"System.Reflection.Emit.MethodBuilder.IsGenericMethod\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>true</strong>, but the <xref href=\\\"System.Reflection.Emit.MethodBuilder.IsGenericMethodDefinition\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.Reflection.Emit.MethodBuilder.SetReturnType(System.Type)\n    commentId: M:System.Reflection.Emit.MethodBuilder.SetReturnType(System.Type)\n  - type: System.Reflection.Emit.MethodBuilder.SetParameters(System.Type[])\n    commentId: M:System.Reflection.Emit.MethodBuilder.SetParameters(System.Type[])\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Reflection.Emit.MethodBuilder.SetSignature(System.Type, System.Type(), System.Type(), System.Type(), System.Type()(), System.Type()())\n  name.vb: SetSignature(Type, Type(), Type(), Type(), Type()(), Type()())\n  nameWithType: MethodBuilder.SetSignature(Type, Type[], Type[], Type[], Type[][], Type[][])\n  nameWithType.vb: MethodBuilder.SetSignature(Type, Type(), Type(), Type(), Type()(), Type()())\n- uid: System.Reflection.Emit.MethodBuilder.ToString\n  commentId: M:System.Reflection.Emit.MethodBuilder.ToString\n  id: ToString\n  parent: System.Reflection.Emit.MethodBuilder\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.Reflection.Emit.MethodBuilder.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToString\n    path: src/mscorlib/src/System/Reflection/Emit/MethodBuilder.cs\n    startLine: 507\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Returns this <strong>MethodBuilder</strong> instance as a string.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public override string ToString()\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>Returns a string containing the name, attributes, method signature, exceptions, and local signature of this method followed by the current Microsoft intermediate language (MSIL) stream.</p>\\n\"\n  overridden: System.Object.ToString\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: MethodBuilder.ToString()\n- uid: System.Reflection.Emit.MethodBuilder.MethodImplementationFlags\n  commentId: P:System.Reflection.Emit.MethodBuilder.MethodImplementationFlags\n  id: MethodImplementationFlags\n  parent: System.Reflection.Emit.MethodBuilder\n  langs:\n  - csharp\n  - vb\n  name: MethodImplementationFlags\n  fullName: System.Reflection.Emit.MethodBuilder.MethodImplementationFlags\n  type: Property\n  source:\n    remote:\n      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MethodImplementationFlags\n    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.Manual.cs\n    startLine: 112\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override MethodImplAttributes MethodImplementationFlags { get; }\n    content.vb: Public Overrides ReadOnly Property MethodImplementationFlags As MethodImplAttributes\n    parameters: []\n    return:\n      type: System.Reflection.MethodImplAttributes\n  overridden: System.Reflection.MethodBase.MethodImplementationFlags\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: MethodBuilder.MethodImplementationFlags\nreferences:\n- uid: System.Reflection.Emit\n  isExternal: false\n  name: System.Reflection.Emit\n  fullName: System.Reflection.Emit\n  nameWithType: System.Reflection.Emit\n  commentId: N:System.Reflection.Emit\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Reflection.MemberInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MemberInfo\n  fullName: System.Reflection.MemberInfo\n  nameWithType: MemberInfo\n  commentId: T:System.Reflection.MemberInfo\n- uid: System.Reflection.MethodBase\n  parent: System.Reflection\n  isExternal: false\n  name: MethodBase\n  fullName: System.Reflection.MethodBase\n  nameWithType: MethodBase\n  commentId: T:System.Reflection.MethodBase\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfo\n  fullName: System.Reflection.MethodInfo\n  nameWithType: MethodInfo\n  commentId: T:System.Reflection.MethodInfo\n- uid: System.Reflection.ICustomAttributeProvider\n  parent: System.Reflection\n  isExternal: false\n  name: ICustomAttributeProvider\n  fullName: System.Reflection.ICustomAttributeProvider\n  nameWithType: ICustomAttributeProvider\n  commentId: T:System.Reflection.ICustomAttributeProvider\n- uid: System.Runtime.InteropServices._MemberInfo\n  parent: System.Runtime.InteropServices\n  isExternal: true\n  name: _MemberInfo\n  fullName: System.Runtime.InteropServices._MemberInfo\n  nameWithType: _MemberInfo\n  commentId: T:System.Runtime.InteropServices._MemberInfo\n- uid: System.Runtime.InteropServices._MethodBase\n  parent: System.Runtime.InteropServices\n  isExternal: true\n  name: _MethodBase\n  fullName: System.Runtime.InteropServices._MethodBase\n  nameWithType: _MethodBase\n  commentId: T:System.Runtime.InteropServices._MethodBase\n- uid: System.Runtime.InteropServices._MethodInfo\n  parent: System.Runtime.InteropServices\n  isExternal: true\n  name: _MethodInfo\n  fullName: System.Runtime.InteropServices._MethodInfo\n  nameWithType: _MethodInfo\n  commentId: T:System.Runtime.InteropServices._MethodInfo\n- uid: System.Reflection.MethodInfo.GetBaseDefinition\n  parent: System.Reflection.MethodInfo\n  isExternal: true\n  name: GetBaseDefinition()\n  fullName: System.Reflection.MethodInfo.GetBaseDefinition()\n  spec.csharp:\n  - uid: System.Reflection.MethodInfo.GetBaseDefinition\n    name: GetBaseDefinition\n    fullName: System.Reflection.MethodInfo.GetBaseDefinition\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodInfo.GetBaseDefinition\n    name: GetBaseDefinition\n    fullName: System.Reflection.MethodInfo.GetBaseDefinition\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MethodInfo.GetBaseDefinition()\n  commentId: M:System.Reflection.MethodInfo.GetBaseDefinition\n- uid: System.Reflection.MethodInfo.CreateDelegate(System.Type)\n  parent: System.Reflection.MethodInfo\n  isExternal: true\n  name: CreateDelegate(Type)\n  fullName: System.Reflection.MethodInfo.CreateDelegate(System.Type)\n  spec.csharp:\n  - uid: System.Reflection.MethodInfo.CreateDelegate(System.Type)\n    name: CreateDelegate\n    fullName: System.Reflection.MethodInfo.CreateDelegate\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodInfo.CreateDelegate(System.Type)\n    name: CreateDelegate\n    fullName: System.Reflection.MethodInfo.CreateDelegate\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MethodInfo.CreateDelegate(Type)\n  commentId: M:System.Reflection.MethodInfo.CreateDelegate(System.Type)\n- uid: System.Reflection.MethodInfo.CreateDelegate(System.Type,System.Object)\n  parent: System.Reflection.MethodInfo\n  isExternal: true\n  name: CreateDelegate(Type, Object)\n  fullName: System.Reflection.MethodInfo.CreateDelegate(System.Type, System.Object)\n  spec.csharp:\n  - uid: System.Reflection.MethodInfo.CreateDelegate(System.Type,System.Object)\n    name: CreateDelegate\n    fullName: System.Reflection.MethodInfo.CreateDelegate\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodInfo.CreateDelegate(System.Type,System.Object)\n    name: CreateDelegate\n    fullName: System.Reflection.MethodInfo.CreateDelegate\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MethodInfo.CreateDelegate(Type, Object)\n  commentId: M:System.Reflection.MethodInfo.CreateDelegate(System.Type,System.Object)\n- uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetType\n  parent: System.Reflection.MethodInfo\n  isExternal: true\n  name: _MethodInfo.GetType()\n  fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.GetType()\n  name.vb: System.Runtime.InteropServices._MethodInfo.GetType()\n  spec.csharp:\n  - uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetType\n    name: _MethodInfo.GetType\n    fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetType\n    name: System.Runtime.InteropServices._MethodInfo.GetType\n    fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MethodInfo._MethodInfo.GetType()\n  nameWithType.vb: MethodInfo.System.Runtime.InteropServices._MethodInfo.GetType()\n  commentId: M:System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetType\n- uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetTypeInfoCount(System.UInt32@)\n  parent: System.Reflection.MethodInfo\n  isExternal: true\n  name: _MethodInfo.GetTypeInfoCount(UInt32)\n  fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount(System.UInt32)\n  name.vb: System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount(UInt32)\n  spec.csharp:\n  - uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetTypeInfoCount(System.UInt32@)\n    name: _MethodInfo.GetTypeInfoCount\n    fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetTypeInfoCount(System.UInt32@)\n    name: System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount\n    fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MethodInfo._MethodInfo.GetTypeInfoCount(UInt32)\n  nameWithType.vb: MethodInfo.System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount(UInt32)\n  commentId: M:System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetTypeInfoCount(System.UInt32@)\n- uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.MethodInfo\n  isExternal: true\n  name: _MethodInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr)\n  name.vb: System.Runtime.InteropServices._MethodInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  spec.csharp:\n  - uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n    name: _MethodInfo.GetTypeInfo\n    fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.GetTypeInfo\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n    name: System.Runtime.InteropServices._MethodInfo.GetTypeInfo\n    fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.GetTypeInfo\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MethodInfo._MethodInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType.vb: MethodInfo.System.Runtime.InteropServices._MethodInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  commentId: M:System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n- uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.MethodInfo\n  isExternal: true\n  name: _MethodInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr)\n  name.vb: System.Runtime.InteropServices._MethodInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  spec.csharp:\n  - uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n    name: _MethodInfo.GetIDsOfNames\n    fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.GetIDsOfNames\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n    name: System.Runtime.InteropServices._MethodInfo.GetIDsOfNames\n    fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.GetIDsOfNames\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MethodInfo._MethodInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType.vb: MethodInfo.System.Runtime.InteropServices._MethodInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  commentId: M:System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n- uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Reflection.MethodInfo\n  isExternal: true\n  name: _MethodInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)\n  name.vb: System.Runtime.InteropServices._MethodInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  spec.csharp:\n  - uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n    name: _MethodInfo.Invoke\n    fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.Invoke\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int16\n    name: Int16\n    fullName: System.Int16\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n    name: System.Runtime.InteropServices._MethodInfo.Invoke\n    fullName: System.Reflection.MethodInfo.System.Runtime.InteropServices._MethodInfo.Invoke\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int16\n    name: Int16\n    fullName: System.Int16\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MethodInfo._MethodInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType.vb: MethodInfo.System.Runtime.InteropServices._MethodInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  commentId: M:System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n- uid: System.Reflection.MethodInfo.MemberType\n  parent: System.Reflection.MethodInfo\n  isExternal: true\n  name: MemberType\n  fullName: System.Reflection.MethodInfo.MemberType\n  nameWithType: MethodInfo.MemberType\n  commentId: P:System.Reflection.MethodInfo.MemberType\n- uid: System.Reflection.MethodInfo.ReturnTypeCustomAttributes\n  parent: System.Reflection.MethodInfo\n  isExternal: true\n  name: ReturnTypeCustomAttributes\n  fullName: System.Reflection.MethodInfo.ReturnTypeCustomAttributes\n  nameWithType: MethodInfo.ReturnTypeCustomAttributes\n  commentId: P:System.Reflection.MethodInfo.ReturnTypeCustomAttributes\n- uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: GetMethodFromHandle(RuntimeMethodHandle)\n  fullName: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)\n  spec.csharp:\n  - uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)\n    name: GetMethodFromHandle\n    fullName: System.Reflection.MethodBase.GetMethodFromHandle\n  - name: (\n    fullName: (\n  - uid: System.RuntimeMethodHandle\n    name: RuntimeMethodHandle\n    fullName: System.RuntimeMethodHandle\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)\n    name: GetMethodFromHandle\n    fullName: System.Reflection.MethodBase.GetMethodFromHandle\n  - name: (\n    fullName: (\n  - uid: System.RuntimeMethodHandle\n    name: RuntimeMethodHandle\n    fullName: System.RuntimeMethodHandle\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MethodBase.GetMethodFromHandle(RuntimeMethodHandle)\n  commentId: M:System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)\n- uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: GetMethodFromHandle(RuntimeMethodHandle, RuntimeTypeHandle)\n  fullName: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle, System.RuntimeTypeHandle)\n  spec.csharp:\n  - uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)\n    name: GetMethodFromHandle\n    fullName: System.Reflection.MethodBase.GetMethodFromHandle\n  - name: (\n    fullName: (\n  - uid: System.RuntimeMethodHandle\n    name: RuntimeMethodHandle\n    fullName: System.RuntimeMethodHandle\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.RuntimeTypeHandle\n    name: RuntimeTypeHandle\n    fullName: System.RuntimeTypeHandle\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)\n    name: GetMethodFromHandle\n    fullName: System.Reflection.MethodBase.GetMethodFromHandle\n  - name: (\n    fullName: (\n  - uid: System.RuntimeMethodHandle\n    name: RuntimeMethodHandle\n    fullName: System.RuntimeMethodHandle\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.RuntimeTypeHandle\n    name: RuntimeTypeHandle\n    fullName: System.RuntimeTypeHandle\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MethodBase.GetMethodFromHandle(RuntimeMethodHandle, RuntimeTypeHandle)\n  commentId: M:System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)\n- uid: System.Reflection.MethodBase.GetCurrentMethod\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: GetCurrentMethod()\n  fullName: System.Reflection.MethodBase.GetCurrentMethod()\n  spec.csharp:\n  - uid: System.Reflection.MethodBase.GetCurrentMethod\n    name: GetCurrentMethod\n    fullName: System.Reflection.MethodBase.GetCurrentMethod\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodBase.GetCurrentMethod\n    name: GetCurrentMethod\n    fullName: System.Reflection.MethodBase.GetCurrentMethod\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MethodBase.GetCurrentMethod()\n  commentId: M:System.Reflection.MethodBase.GetCurrentMethod\n- uid: System.Reflection.MethodBase.GetMethodImplementationFlags\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: GetMethodImplementationFlags()\n  fullName: System.Reflection.MethodBase.GetMethodImplementationFlags()\n  spec.csharp:\n  - uid: System.Reflection.MethodBase.GetMethodImplementationFlags\n    name: GetMethodImplementationFlags\n    fullName: System.Reflection.MethodBase.GetMethodImplementationFlags\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodBase.GetMethodImplementationFlags\n    name: GetMethodImplementationFlags\n    fullName: System.Reflection.MethodBase.GetMethodImplementationFlags\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MethodBase.GetMethodImplementationFlags()\n  commentId: M:System.Reflection.MethodBase.GetMethodImplementationFlags\n- uid: System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)\n  fullName: System.Reflection.MethodBase.Invoke(System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)\n  fullname.vb: System.Reflection.MethodBase.Invoke(System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object(), System.Globalization.CultureInfo)\n  name.vb: Invoke(Object, BindingFlags, Binder, Object(), CultureInfo)\n  spec.csharp:\n  - uid: System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n    name: Invoke\n    fullName: System.Reflection.MethodBase.Invoke\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.Binder\n    name: Binder\n    fullName: System.Reflection.Binder\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Globalization.CultureInfo\n    name: CultureInfo\n    fullName: System.Globalization.CultureInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n    name: Invoke\n    fullName: System.Reflection.MethodBase.Invoke\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.Binder\n    name: Binder\n    fullName: System.Reflection.Binder\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Globalization.CultureInfo\n    name: CultureInfo\n    fullName: System.Globalization.CultureInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MethodBase.Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)\n  nameWithType.vb: MethodBase.Invoke(Object, BindingFlags, Binder, Object(), CultureInfo)\n  commentId: M:System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n- uid: System.Reflection.MethodBase.Invoke(System.Object,System.Object[])\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: Invoke(Object, Object[])\n  fullName: System.Reflection.MethodBase.Invoke(System.Object, System.Object[])\n  fullname.vb: System.Reflection.MethodBase.Invoke(System.Object, System.Object())\n  name.vb: Invoke(Object, Object())\n  spec.csharp:\n  - uid: System.Reflection.MethodBase.Invoke(System.Object,System.Object[])\n    name: Invoke\n    fullName: System.Reflection.MethodBase.Invoke\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodBase.Invoke(System.Object,System.Object[])\n    name: Invoke\n    fullName: System.Reflection.MethodBase.Invoke\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: MethodBase.Invoke(Object, Object[])\n  nameWithType.vb: MethodBase.Invoke(Object, Object())\n  commentId: M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])\n- uid: System.Reflection.MethodBase.GetMethodBody\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: GetMethodBody()\n  fullName: System.Reflection.MethodBase.GetMethodBody()\n  spec.csharp:\n  - uid: System.Reflection.MethodBase.GetMethodBody\n    name: GetMethodBody\n    fullName: System.Reflection.MethodBase.GetMethodBody\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodBase.GetMethodBody\n    name: GetMethodBody\n    fullName: System.Reflection.MethodBase.GetMethodBody\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MethodBase.GetMethodBody()\n  commentId: M:System.Reflection.MethodBase.GetMethodBody\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetType\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: _MethodBase.GetType()\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetType()\n  name.vb: System.Runtime.InteropServices._MethodBase.GetType()\n  spec.csharp:\n  - uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetType\n    name: _MethodBase.GetType\n    fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetType\n    name: System.Runtime.InteropServices._MethodBase.GetType\n    fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MethodBase._MethodBase.GetType()\n  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.GetType()\n  commentId: M:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetType\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfoCount(System.UInt32@)\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: _MethodBase.GetTypeInfoCount(UInt32)\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(System.UInt32)\n  name.vb: System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(UInt32)\n  spec.csharp:\n  - uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfoCount(System.UInt32@)\n    name: _MethodBase.GetTypeInfoCount\n    fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetTypeInfoCount\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfoCount(System.UInt32@)\n    name: System.Runtime.InteropServices._MethodBase.GetTypeInfoCount\n    fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetTypeInfoCount\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MethodBase._MethodBase.GetTypeInfoCount(UInt32)\n  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(UInt32)\n  commentId: M:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfoCount(System.UInt32@)\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: _MethodBase.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr)\n  name.vb: System.Runtime.InteropServices._MethodBase.GetTypeInfo(UInt32, UInt32, IntPtr)\n  spec.csharp:\n  - uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n    name: _MethodBase.GetTypeInfo\n    fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetTypeInfo\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n    name: System.Runtime.InteropServices._MethodBase.GetTypeInfo\n    fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetTypeInfo\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MethodBase._MethodBase.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.GetTypeInfo(UInt32, UInt32, IntPtr)\n  commentId: M:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: _MethodBase.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr)\n  name.vb: System.Runtime.InteropServices._MethodBase.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  spec.csharp:\n  - uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n    name: _MethodBase.GetIDsOfNames\n    fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetIDsOfNames\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n    name: System.Runtime.InteropServices._MethodBase.GetIDsOfNames\n    fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetIDsOfNames\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MethodBase._MethodBase.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  commentId: M:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: _MethodBase.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)\n  name.vb: System.Runtime.InteropServices._MethodBase.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  spec.csharp:\n  - uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n    name: _MethodBase.Invoke\n    fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.Invoke\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int16\n    name: Int16\n    fullName: System.Int16\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n    name: System.Runtime.InteropServices._MethodBase.Invoke\n    fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.Invoke\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int16\n    name: Int16\n    fullName: System.Int16\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MethodBase._MethodBase.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  commentId: M:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n- uid: System.Reflection.MethodBase.MethodHandle\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: MethodHandle\n  fullName: System.Reflection.MethodBase.MethodHandle\n  nameWithType: MethodBase.MethodHandle\n  commentId: P:System.Reflection.MethodBase.MethodHandle\n- uid: System.Reflection.MethodBase.IsSecurityCritical\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: IsSecurityCritical\n  fullName: System.Reflection.MethodBase.IsSecurityCritical\n  nameWithType: MethodBase.IsSecurityCritical\n  commentId: P:System.Reflection.MethodBase.IsSecurityCritical\n- uid: System.Reflection.MethodBase.IsSecuritySafeCritical\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: IsSecuritySafeCritical\n  fullName: System.Reflection.MethodBase.IsSecuritySafeCritical\n  nameWithType: MethodBase.IsSecuritySafeCritical\n  commentId: P:System.Reflection.MethodBase.IsSecuritySafeCritical\n- uid: System.Reflection.MethodBase.IsSecurityTransparent\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: IsSecurityTransparent\n  fullName: System.Reflection.MethodBase.IsSecurityTransparent\n  nameWithType: MethodBase.IsSecurityTransparent\n  commentId: P:System.Reflection.MethodBase.IsSecurityTransparent\n- uid: System.Reflection.MethodBase.IsPublic\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsPublic\n  fullName: System.Reflection.MethodBase.IsPublic\n  nameWithType: MethodBase.IsPublic\n  commentId: P:System.Reflection.MethodBase.IsPublic\n- uid: System.Reflection.MethodBase.IsPrivate\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsPrivate\n  fullName: System.Reflection.MethodBase.IsPrivate\n  nameWithType: MethodBase.IsPrivate\n  commentId: P:System.Reflection.MethodBase.IsPrivate\n- uid: System.Reflection.MethodBase.IsFamily\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsFamily\n  fullName: System.Reflection.MethodBase.IsFamily\n  nameWithType: MethodBase.IsFamily\n  commentId: P:System.Reflection.MethodBase.IsFamily\n- uid: System.Reflection.MethodBase.IsAssembly\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsAssembly\n  fullName: System.Reflection.MethodBase.IsAssembly\n  nameWithType: MethodBase.IsAssembly\n  commentId: P:System.Reflection.MethodBase.IsAssembly\n- uid: System.Reflection.MethodBase.IsFamilyAndAssembly\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsFamilyAndAssembly\n  fullName: System.Reflection.MethodBase.IsFamilyAndAssembly\n  nameWithType: MethodBase.IsFamilyAndAssembly\n  commentId: P:System.Reflection.MethodBase.IsFamilyAndAssembly\n- uid: System.Reflection.MethodBase.IsFamilyOrAssembly\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsFamilyOrAssembly\n  fullName: System.Reflection.MethodBase.IsFamilyOrAssembly\n  nameWithType: MethodBase.IsFamilyOrAssembly\n  commentId: P:System.Reflection.MethodBase.IsFamilyOrAssembly\n- uid: System.Reflection.MethodBase.IsStatic\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsStatic\n  fullName: System.Reflection.MethodBase.IsStatic\n  nameWithType: MethodBase.IsStatic\n  commentId: P:System.Reflection.MethodBase.IsStatic\n- uid: System.Reflection.MethodBase.IsFinal\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsFinal\n  fullName: System.Reflection.MethodBase.IsFinal\n  nameWithType: MethodBase.IsFinal\n  commentId: P:System.Reflection.MethodBase.IsFinal\n- uid: System.Reflection.MethodBase.IsVirtual\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsVirtual\n  fullName: System.Reflection.MethodBase.IsVirtual\n  nameWithType: MethodBase.IsVirtual\n  commentId: P:System.Reflection.MethodBase.IsVirtual\n- uid: System.Reflection.MethodBase.IsHideBySig\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsHideBySig\n  fullName: System.Reflection.MethodBase.IsHideBySig\n  nameWithType: MethodBase.IsHideBySig\n  commentId: P:System.Reflection.MethodBase.IsHideBySig\n- uid: System.Reflection.MethodBase.IsAbstract\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsAbstract\n  fullName: System.Reflection.MethodBase.IsAbstract\n  nameWithType: MethodBase.IsAbstract\n  commentId: P:System.Reflection.MethodBase.IsAbstract\n- uid: System.Reflection.MethodBase.IsSpecialName\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsSpecialName\n  fullName: System.Reflection.MethodBase.IsSpecialName\n  nameWithType: MethodBase.IsSpecialName\n  commentId: P:System.Reflection.MethodBase.IsSpecialName\n- uid: System.Reflection.MethodBase.IsConstructor\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsConstructor\n  fullName: System.Reflection.MethodBase.IsConstructor\n  nameWithType: MethodBase.IsConstructor\n  commentId: P:System.Reflection.MethodBase.IsConstructor\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsPublic\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: _MethodBase.IsPublic\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsPublic\n  name.vb: System.Runtime.InteropServices._MethodBase.IsPublic\n  nameWithType: MethodBase._MethodBase.IsPublic\n  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.IsPublic\n  commentId: P:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsPublic\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsPrivate\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: _MethodBase.IsPrivate\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsPrivate\n  name.vb: System.Runtime.InteropServices._MethodBase.IsPrivate\n  nameWithType: MethodBase._MethodBase.IsPrivate\n  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.IsPrivate\n  commentId: P:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsPrivate\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamily\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: _MethodBase.IsFamily\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsFamily\n  name.vb: System.Runtime.InteropServices._MethodBase.IsFamily\n  nameWithType: MethodBase._MethodBase.IsFamily\n  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.IsFamily\n  commentId: P:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamily\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsAssembly\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: _MethodBase.IsAssembly\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsAssembly\n  name.vb: System.Runtime.InteropServices._MethodBase.IsAssembly\n  nameWithType: MethodBase._MethodBase.IsAssembly\n  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.IsAssembly\n  commentId: P:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsAssembly\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamilyAndAssembly\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: _MethodBase.IsFamilyAndAssembly\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly\n  name.vb: System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly\n  nameWithType: MethodBase._MethodBase.IsFamilyAndAssembly\n  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly\n  commentId: P:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamilyAndAssembly\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamilyOrAssembly\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: _MethodBase.IsFamilyOrAssembly\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly\n  name.vb: System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly\n  nameWithType: MethodBase._MethodBase.IsFamilyOrAssembly\n  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly\n  commentId: P:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamilyOrAssembly\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsStatic\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: _MethodBase.IsStatic\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsStatic\n  name.vb: System.Runtime.InteropServices._MethodBase.IsStatic\n  nameWithType: MethodBase._MethodBase.IsStatic\n  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.IsStatic\n  commentId: P:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsStatic\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFinal\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: _MethodBase.IsFinal\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsFinal\n  name.vb: System.Runtime.InteropServices._MethodBase.IsFinal\n  nameWithType: MethodBase._MethodBase.IsFinal\n  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.IsFinal\n  commentId: P:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFinal\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsVirtual\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: _MethodBase.IsVirtual\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsVirtual\n  name.vb: System.Runtime.InteropServices._MethodBase.IsVirtual\n  nameWithType: MethodBase._MethodBase.IsVirtual\n  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.IsVirtual\n  commentId: P:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsVirtual\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsHideBySig\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: _MethodBase.IsHideBySig\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsHideBySig\n  name.vb: System.Runtime.InteropServices._MethodBase.IsHideBySig\n  nameWithType: MethodBase._MethodBase.IsHideBySig\n  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.IsHideBySig\n  commentId: P:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsHideBySig\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsAbstract\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: _MethodBase.IsAbstract\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsAbstract\n  name.vb: System.Runtime.InteropServices._MethodBase.IsAbstract\n  nameWithType: MethodBase._MethodBase.IsAbstract\n  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.IsAbstract\n  commentId: P:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsAbstract\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsSpecialName\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: _MethodBase.IsSpecialName\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsSpecialName\n  name.vb: System.Runtime.InteropServices._MethodBase.IsSpecialName\n  nameWithType: MethodBase._MethodBase.IsSpecialName\n  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.IsSpecialName\n  commentId: P:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsSpecialName\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsConstructor\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: _MethodBase.IsConstructor\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsConstructor\n  name.vb: System.Runtime.InteropServices._MethodBase.IsConstructor\n  nameWithType: MethodBase._MethodBase.IsConstructor\n  nameWithType.vb: MethodBase.System.Runtime.InteropServices._MethodBase.IsConstructor\n  commentId: P:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsConstructor\n- uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)\n  parent: System.Reflection.MemberInfo\n  isExternal: true\n  name: GetCustomAttributes(Boolean)\n  fullName: System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.MemberInfo.GetCustomAttributes\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.MemberInfo.GetCustomAttributes\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MemberInfo.GetCustomAttributes(Boolean)\n  commentId: M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)\n- uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Reflection.MemberInfo\n  isExternal: true\n  name: GetCustomAttributes(Type, Boolean)\n  fullName: System.Reflection.MemberInfo.GetCustomAttributes(System.Type, System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.MemberInfo.GetCustomAttributes\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.MemberInfo.GetCustomAttributes\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MemberInfo.GetCustomAttributes(Type, Boolean)\n  commentId: M:System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)\n- uid: System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)\n  parent: System.Reflection.MemberInfo\n  isExternal: true\n  name: IsDefined(Type, Boolean)\n  fullName: System.Reflection.MemberInfo.IsDefined(System.Type, System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)\n    name: IsDefined\n    fullName: System.Reflection.MemberInfo.IsDefined\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)\n    name: IsDefined\n    fullName: System.Reflection.MemberInfo.IsDefined\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MemberInfo.IsDefined(Type, Boolean)\n  commentId: M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)\n- uid: System.Reflection.MemberInfo.GetCustomAttributesData\n  parent: System.Reflection.MemberInfo\n  isExternal: true\n  name: GetCustomAttributesData()\n  fullName: System.Reflection.MemberInfo.GetCustomAttributesData()\n  spec.csharp:\n  - uid: System.Reflection.MemberInfo.GetCustomAttributesData\n    name: GetCustomAttributesData\n    fullName: System.Reflection.MemberInfo.GetCustomAttributesData\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MemberInfo.GetCustomAttributesData\n    name: GetCustomAttributesData\n    fullName: System.Reflection.MemberInfo.GetCustomAttributesData\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MemberInfo.GetCustomAttributesData()\n  commentId: M:System.Reflection.MemberInfo.GetCustomAttributesData\n- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType\n  parent: System.Reflection.MemberInfo\n  isExternal: true\n  name: _MemberInfo.GetType()\n  fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetType()\n  name.vb: System.Runtime.InteropServices._MemberInfo.GetType()\n  spec.csharp:\n  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType\n    name: _MemberInfo.GetType\n    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType\n    name: System.Runtime.InteropServices._MemberInfo.GetType\n    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MemberInfo._MemberInfo.GetType()\n  nameWithType.vb: MemberInfo.System.Runtime.InteropServices._MemberInfo.GetType()\n  commentId: M:System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType\n- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)\n  parent: System.Reflection.MemberInfo\n  isExternal: true\n  name: _MemberInfo.GetTypeInfoCount(UInt32)\n  fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount(System.UInt32)\n  name.vb: System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount(UInt32)\n  spec.csharp:\n  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)\n    name: _MemberInfo.GetTypeInfoCount\n    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)\n    name: System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount\n    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MemberInfo._MemberInfo.GetTypeInfoCount(UInt32)\n  nameWithType.vb: MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount(UInt32)\n  commentId: M:System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)\n- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.MemberInfo\n  isExternal: true\n  name: _MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr)\n  name.vb: System.Runtime.InteropServices._MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  spec.csharp:\n  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n    name: _MemberInfo.GetTypeInfo\n    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfo\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n    name: System.Runtime.InteropServices._MemberInfo.GetTypeInfo\n    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfo\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MemberInfo._MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType.vb: MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  commentId: M:System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.MemberInfo\n  isExternal: true\n  name: _MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr)\n  name.vb: System.Runtime.InteropServices._MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  spec.csharp:\n  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n    name: _MemberInfo.GetIDsOfNames\n    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetIDsOfNames\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n    name: System.Runtime.InteropServices._MemberInfo.GetIDsOfNames\n    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetIDsOfNames\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MemberInfo._MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType.vb: MemberInfo.System.Runtime.InteropServices._MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  commentId: M:System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Reflection.MemberInfo\n  isExternal: true\n  name: _MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)\n  name.vb: System.Runtime.InteropServices._MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  spec.csharp:\n  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n    name: _MemberInfo.Invoke\n    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.Invoke\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int16\n    name: Int16\n    fullName: System.Int16\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n    name: System.Runtime.InteropServices._MemberInfo.Invoke\n    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.Invoke\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int16\n    name: Int16\n    fullName: System.Int16\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MemberInfo._MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType.vb: MemberInfo.System.Runtime.InteropServices._MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  commentId: M:System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n- uid: System.Reflection.MemberInfo.ReflectedType\n  parent: System.Reflection.MemberInfo\n  isExternal: true\n  name: ReflectedType\n  fullName: System.Reflection.MemberInfo.ReflectedType\n  nameWithType: MemberInfo.ReflectedType\n  commentId: P:System.Reflection.MemberInfo.ReflectedType\n- uid: System.Reflection.MemberInfo.CustomAttributes\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: CustomAttributes\n  fullName: System.Reflection.MemberInfo.CustomAttributes\n  nameWithType: MemberInfo.CustomAttributes\n  commentId: P:System.Reflection.MemberInfo.CustomAttributes\n- uid: System.Reflection.MemberInfo.MetadataToken\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: MetadataToken\n  fullName: System.Reflection.MemberInfo.MetadataToken\n  nameWithType: MemberInfo.MetadataToken\n  commentId: P:System.Reflection.MemberInfo.MetadataToken\n- uid: System.Reflection.MemberInfo.Module\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: Module\n  fullName: System.Reflection.MemberInfo.Module\n  nameWithType: MemberInfo.Module\n  commentId: P:System.Reflection.MemberInfo.Module\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System.Reflection.MemberInfo.System.Reflection.MemberInfoExtensions.HasMetadataToken\n  parent: System.Reflection.MemberInfoExtensions\n  definition: System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)\n  name: HasMetadataToken()\n  fullName: System.Reflection.MemberInfoExtensions.HasMetadataToken()\n  spec.csharp:\n  - uid: System.Reflection.MemberInfoExtensions.HasMetadataToken\n    name: HasMetadataToken\n    fullName: System.Reflection.MemberInfoExtensions.HasMetadataToken\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MemberInfoExtensions.HasMetadataToken\n    name: HasMetadataToken\n    fullName: System.Reflection.MemberInfoExtensions.HasMetadataToken\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MemberInfoExtensions.HasMetadataToken()\n  commentId: M:System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)\n- uid: System.Reflection.MemberInfo.System.Reflection.MemberInfoExtensions.GetMetadataToken\n  parent: System.Reflection.MemberInfoExtensions\n  definition: System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)\n  name: GetMetadataToken()\n  fullName: System.Reflection.MemberInfoExtensions.GetMetadataToken()\n  spec.csharp:\n  - uid: System.Reflection.MemberInfoExtensions.GetMetadataToken\n    name: GetMetadataToken\n    fullName: System.Reflection.MemberInfoExtensions.GetMetadataToken\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MemberInfoExtensions.GetMetadataToken\n    name: GetMetadataToken\n    fullName: System.Reflection.MemberInfoExtensions.GetMetadataToken\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MemberInfoExtensions.GetMetadataToken()\n  commentId: M:System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)\n- uid: System.Reflection.MethodInfo.System.Reflection.MethodInfoExtensions.GetBaseDefinition\n  parent: System.Reflection.MethodInfoExtensions\n  definition: System.Reflection.MethodInfoExtensions.GetBaseDefinition(System.Reflection.MethodInfo)\n  name: GetBaseDefinition()\n  fullName: System.Reflection.MethodInfoExtensions.GetBaseDefinition()\n  spec.csharp:\n  - uid: System.Reflection.MethodInfoExtensions.GetBaseDefinition\n    name: GetBaseDefinition\n    fullName: System.Reflection.MethodInfoExtensions.GetBaseDefinition\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodInfoExtensions.GetBaseDefinition\n    name: GetBaseDefinition\n    fullName: System.Reflection.MethodInfoExtensions.GetBaseDefinition\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MethodInfoExtensions.GetBaseDefinition()\n  commentId: M:System.Reflection.MethodInfoExtensions.GetBaseDefinition(System.Reflection.MethodInfo)\n- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type)\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  name: GetCustomAttribute(Type)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type)\n    name: GetCustomAttribute\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type)\n    name: GetCustomAttribute\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute(Type)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type,System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  name: GetCustomAttribute(Type, Boolean)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type, System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type,System.Boolean)\n    name: GetCustomAttribute\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type,System.Boolean)\n    name: GetCustomAttribute\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute(Type, Boolean)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)\n  name: GetCustomAttribute<T>()\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>()\n  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)()\n  name.vb: GetCustomAttribute(Of T)()\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1\n    name: GetCustomAttribute<T>\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1\n    name: GetCustomAttribute(Of T)\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>()\n  nameWithType.vb: CustomAttributeExtensions.GetCustomAttribute(Of T)()\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)\n- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)\n  name: GetCustomAttribute<T>(Boolean)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>(System.Boolean)\n  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)(System.Boolean)\n  name.vb: GetCustomAttribute(Of T)(Boolean)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Boolean)\n    name: GetCustomAttribute<T>\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Boolean)\n    name: GetCustomAttribute(Of T)\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(Boolean)\n  nameWithType.vb: CustomAttributeExtensions.GetCustomAttribute(Of T)(Boolean)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)\n- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)\n  name: GetCustomAttributes()\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes()\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes()\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)\n- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  name: GetCustomAttributes(Boolean)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(Boolean)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type)\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  name: GetCustomAttributes(Type)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(Type)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  name: GetCustomAttributes(Type, Boolean)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type, System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type,System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type,System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(Type, Boolean)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)\n  name: GetCustomAttributes<T>()\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>()\n  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)()\n  name.vb: GetCustomAttributes(Of T)()\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1\n    name: GetCustomAttributes<T>\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1\n    name: GetCustomAttributes(Of T)\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>()\n  nameWithType.vb: CustomAttributeExtensions.GetCustomAttributes(Of T)()\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)\n- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)\n  name: GetCustomAttributes<T>(Boolean)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>(System.Boolean)\n  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)(System.Boolean)\n  name.vb: GetCustomAttributes(Of T)(Boolean)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Boolean)\n    name: GetCustomAttributes<T>\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Boolean)\n    name: GetCustomAttributes(Of T)\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(Boolean)\n  nameWithType.vb: CustomAttributeExtensions.GetCustomAttributes(Of T)(Boolean)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)\n- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.IsDefined(System.Type)\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)\n  name: IsDefined(Type)\n  fullName: System.Reflection.CustomAttributeExtensions.IsDefined(System.Type)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Type)\n    name: IsDefined\n    fullName: System.Reflection.CustomAttributeExtensions.IsDefined\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Type)\n    name: IsDefined\n    fullName: System.Reflection.CustomAttributeExtensions.IsDefined\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.IsDefined(Type)\n  commentId: M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)\n- uid: System.Reflection.MemberInfo.System.Reflection.CustomAttributeExtensions.IsDefined(System.Type,System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  name: IsDefined(Type, Boolean)\n  fullName: System.Reflection.CustomAttributeExtensions.IsDefined(System.Type, System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Type,System.Boolean)\n    name: IsDefined\n    fullName: System.Reflection.CustomAttributeExtensions.IsDefined\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Type,System.Boolean)\n    name: IsDefined\n    fullName: System.Reflection.CustomAttributeExtensions.IsDefined\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.IsDefined(Type, Boolean)\n  commentId: M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n- uid: System.Reflection.MethodInfo.System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition\n  parent: System.Reflection.RuntimeReflectionExtensions\n  definition: System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition(System.Reflection.MethodInfo)\n  name: GetRuntimeBaseDefinition()\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition()\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition\n    name: GetRuntimeBaseDefinition\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition\n    name: GetRuntimeBaseDefinition\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: RuntimeReflectionExtensions.GetRuntimeBaseDefinition()\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition(System.Reflection.MethodInfo)\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Reflection\n  isExternal: false\n  name: System.Reflection\n  fullName: System.Reflection\n  nameWithType: System.Reflection\n  commentId: N:System.Reflection\n- uid: System.Runtime.InteropServices\n  isExternal: false\n  name: System.Runtime.InteropServices\n  fullName: System.Runtime.InteropServices\n  nameWithType: System.Runtime.InteropServices\n  commentId: N:System.Runtime.InteropServices\n- uid: System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)\n  isExternal: true\n  name: HasMetadataToken(MemberInfo)\n  fullName: System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)\n  spec.csharp:\n  - uid: System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)\n    name: HasMetadataToken\n    fullName: System.Reflection.MemberInfoExtensions.HasMetadataToken\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)\n    name: HasMetadataToken\n    fullName: System.Reflection.MemberInfoExtensions.HasMetadataToken\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MemberInfoExtensions.HasMetadataToken(MemberInfo)\n  commentId: M:System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)\n- uid: System.Reflection.MemberInfoExtensions\n  parent: System.Reflection\n  isExternal: false\n  name: MemberInfoExtensions\n  fullName: System.Reflection.MemberInfoExtensions\n  nameWithType: MemberInfoExtensions\n  commentId: T:System.Reflection.MemberInfoExtensions\n- uid: System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)\n  isExternal: true\n  name: GetMetadataToken(MemberInfo)\n  fullName: System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)\n  spec.csharp:\n  - uid: System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)\n    name: GetMetadataToken\n    fullName: System.Reflection.MemberInfoExtensions.GetMetadataToken\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)\n    name: GetMetadataToken\n    fullName: System.Reflection.MemberInfoExtensions.GetMetadataToken\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MemberInfoExtensions.GetMetadataToken(MemberInfo)\n  commentId: M:System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)\n- uid: System.Reflection.MethodInfoExtensions.GetBaseDefinition(System.Reflection.MethodInfo)\n  isExternal: true\n  name: GetBaseDefinition(MethodInfo)\n  fullName: System.Reflection.MethodInfoExtensions.GetBaseDefinition(System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Reflection.MethodInfoExtensions.GetBaseDefinition(System.Reflection.MethodInfo)\n    name: GetBaseDefinition\n    fullName: System.Reflection.MethodInfoExtensions.GetBaseDefinition\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodInfoExtensions.GetBaseDefinition(System.Reflection.MethodInfo)\n    name: GetBaseDefinition\n    fullName: System.Reflection.MethodInfoExtensions.GetBaseDefinition\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MethodInfoExtensions.GetBaseDefinition(MethodInfo)\n  commentId: M:System.Reflection.MethodInfoExtensions.GetBaseDefinition(System.Reflection.MethodInfo)\n- uid: System.Reflection.MethodInfoExtensions\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfoExtensions\n  fullName: System.Reflection.MethodInfoExtensions\n  nameWithType: MethodInfoExtensions\n  commentId: T:System.Reflection.MethodInfoExtensions\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  isExternal: true\n  name: GetCustomAttribute(MemberInfo, Type)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo, System.Type)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n    name: GetCustomAttribute\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n    name: GetCustomAttribute\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n- uid: System.Reflection.CustomAttributeExtensions\n  parent: System.Reflection\n  isExternal: false\n  name: CustomAttributeExtensions\n  fullName: System.Reflection.CustomAttributeExtensions\n  nameWithType: CustomAttributeExtensions\n  commentId: T:System.Reflection.CustomAttributeExtensions\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  isExternal: true\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n    name: GetCustomAttribute\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n    name: GetCustomAttribute\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type, Boolean)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)\n  isExternal: true\n  name: GetCustomAttribute<T>(MemberInfo)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>(System.Reflection.MemberInfo)\n  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)(System.Reflection.MemberInfo)\n  name.vb: GetCustomAttribute(Of T)(MemberInfo)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)\n    name: GetCustomAttribute<T>\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)\n    name: GetCustomAttribute(Of T)\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo)\n  nameWithType.vb: CustomAttributeExtensions.GetCustomAttribute(Of T)(MemberInfo)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)\n  isExternal: true\n  name: GetCustomAttribute<T>(MemberInfo, Boolean)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>(System.Reflection.MemberInfo, System.Boolean)\n  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)(System.Reflection.MemberInfo, System.Boolean)\n  name.vb: GetCustomAttribute(Of T)(MemberInfo, Boolean)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)\n    name: GetCustomAttribute<T>\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)\n    name: GetCustomAttribute(Of T)\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo, Boolean)\n  nameWithType.vb: CustomAttributeExtensions.GetCustomAttribute(Of T)(MemberInfo, Boolean)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)\n  isExternal: true\n  name: GetCustomAttributes(MemberInfo)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  isExternal: true\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Boolean)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  isExternal: true\n  name: GetCustomAttributes(MemberInfo, Type)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo, System.Type)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  isExternal: true\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type, Boolean)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)\n  isExternal: true\n  name: GetCustomAttributes<T>(MemberInfo)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>(System.Reflection.MemberInfo)\n  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)(System.Reflection.MemberInfo)\n  name.vb: GetCustomAttributes(Of T)(MemberInfo)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)\n    name: GetCustomAttributes<T>\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)\n    name: GetCustomAttributes(Of T)\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo)\n  nameWithType.vb: CustomAttributeExtensions.GetCustomAttributes(Of T)(MemberInfo)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)\n  isExternal: true\n  name: GetCustomAttributes<T>(MemberInfo, Boolean)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>(System.Reflection.MemberInfo, System.Boolean)\n  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)(System.Reflection.MemberInfo, System.Boolean)\n  name.vb: GetCustomAttributes(Of T)(MemberInfo, Boolean)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)\n    name: GetCustomAttributes<T>\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)\n    name: GetCustomAttributes(Of T)\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo, Boolean)\n  nameWithType.vb: CustomAttributeExtensions.GetCustomAttributes(Of T)(MemberInfo, Boolean)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)\n- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)\n  isExternal: true\n  name: IsDefined(MemberInfo, Type)\n  fullName: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo, System.Type)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)\n    name: IsDefined\n    fullName: System.Reflection.CustomAttributeExtensions.IsDefined\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)\n    name: IsDefined\n    fullName: System.Reflection.CustomAttributeExtensions.IsDefined\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.IsDefined(MemberInfo, Type)\n  commentId: M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)\n- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  isExternal: true\n  name: IsDefined(MemberInfo, Type, Boolean)\n  fullName: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n    name: IsDefined\n    fullName: System.Reflection.CustomAttributeExtensions.IsDefined\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n    name: IsDefined\n    fullName: System.Reflection.CustomAttributeExtensions.IsDefined\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.IsDefined(MemberInfo, Type, Boolean)\n  commentId: M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n- uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition(System.Reflection.MethodInfo)\n  isExternal: true\n  name: GetRuntimeBaseDefinition(MethodInfo)\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition(System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition(System.Reflection.MethodInfo)\n    name: GetRuntimeBaseDefinition\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition(System.Reflection.MethodInfo)\n    name: GetRuntimeBaseDefinition\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: RuntimeReflectionExtensions.GetRuntimeBaseDefinition(MethodInfo)\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition(System.Reflection.MethodInfo)\n- uid: System.Reflection.RuntimeReflectionExtensions\n  parent: System.Reflection\n  isExternal: false\n  name: RuntimeReflectionExtensions\n  fullName: System.Reflection.RuntimeReflectionExtensions\n  nameWithType: RuntimeReflectionExtensions\n  commentId: T:System.Reflection.RuntimeReflectionExtensions\n- uid: System.Reflection.MethodBase.Attributes\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: Attributes\n  fullName: System.Reflection.MethodBase.Attributes\n  nameWithType: MethodBase.Attributes\n  commentId: P:System.Reflection.MethodBase.Attributes\n- uid: System.Reflection.MethodAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: MethodAttributes\n  fullName: System.Reflection.MethodAttributes\n  nameWithType: MethodAttributes\n  commentId: T:System.Reflection.MethodAttributes\n- uid: System.Reflection.MethodBase.CallingConvention\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: CallingConvention\n  fullName: System.Reflection.MethodBase.CallingConvention\n  nameWithType: MethodBase.CallingConvention\n  commentId: P:System.Reflection.MethodBase.CallingConvention\n- uid: System.Reflection.CallingConventions\n  parent: System.Reflection\n  isExternal: false\n  name: CallingConventions\n  fullName: System.Reflection.CallingConventions\n  nameWithType: CallingConventions\n  commentId: T:System.Reflection.CallingConventions\n- uid: System.Reflection.MethodBase.ContainsGenericParameters\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: ContainsGenericParameters\n  fullName: System.Reflection.MethodBase.ContainsGenericParameters\n  nameWithType: MethodBase.ContainsGenericParameters\n  commentId: P:System.Reflection.MethodBase.ContainsGenericParameters\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Reflection.MemberInfo.DeclaringType\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: DeclaringType\n  fullName: System.Reflection.MemberInfo.DeclaringType\n  nameWithType: MemberInfo.DeclaringType\n  commentId: P:System.Reflection.MemberInfo.DeclaringType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  nameWithType: Type\n  commentId: T:System.Type\n- uid: System.Reflection.MethodBase.IsGenericMethod\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsGenericMethod\n  fullName: System.Reflection.MethodBase.IsGenericMethod\n  nameWithType: MethodBase.IsGenericMethod\n  commentId: P:System.Reflection.MethodBase.IsGenericMethod\n- uid: System.Reflection.MethodBase.IsGenericMethodDefinition\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsGenericMethodDefinition\n  fullName: System.Reflection.MethodBase.IsGenericMethodDefinition\n  nameWithType: MethodBase.IsGenericMethodDefinition\n  commentId: P:System.Reflection.MethodBase.IsGenericMethodDefinition\n- uid: System.Reflection.MemberInfo.Name\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: Name\n  fullName: System.Reflection.MemberInfo.Name\n  nameWithType: MemberInfo.Name\n  commentId: P:System.Reflection.MemberInfo.Name\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Reflection.MethodInfo.ReturnParameter\n  parent: System.Reflection.MethodInfo\n  isExternal: true\n  name: ReturnParameter\n  fullName: System.Reflection.MethodInfo.ReturnParameter\n  nameWithType: MethodInfo.ReturnParameter\n  commentId: P:System.Reflection.MethodInfo.ReturnParameter\n- uid: System.Reflection.ParameterInfo\n  parent: System.Reflection\n  isExternal: false\n  name: ParameterInfo\n  fullName: System.Reflection.ParameterInfo\n  nameWithType: ParameterInfo\n  commentId: T:System.Reflection.ParameterInfo\n- uid: System.Reflection.MethodInfo.ReturnType\n  parent: System.Reflection.MethodInfo\n  isExternal: true\n  name: ReturnType\n  fullName: System.Reflection.MethodInfo.ReturnType\n  nameWithType: MethodInfo.ReturnType\n  commentId: P:System.Reflection.MethodInfo.ReturnType\n- uid: System.String[]\n  name: String[]\n  fullName: System.String[]\n  fullname.vb: System.String()\n  name.vb: String()\n  spec.csharp:\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: String[]\n  nameWithType.vb: String()\n- uid: System.Reflection.Emit.GenericTypeParameterBuilder[]\n  name: GenericTypeParameterBuilder[]\n  fullName: System.Reflection.Emit.GenericTypeParameterBuilder[]\n  fullname.vb: System.Reflection.Emit.GenericTypeParameterBuilder()\n  name.vb: GenericTypeParameterBuilder()\n  spec.csharp:\n  - uid: System.Reflection.Emit.GenericTypeParameterBuilder\n    name: GenericTypeParameterBuilder\n    fullName: System.Reflection.Emit.GenericTypeParameterBuilder\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Reflection.Emit.GenericTypeParameterBuilder\n    name: GenericTypeParameterBuilder\n    fullName: System.Reflection.Emit.GenericTypeParameterBuilder\n  - name: ()\n    fullName: ()\n  nameWithType: GenericTypeParameterBuilder[]\n  nameWithType.vb: GenericTypeParameterBuilder()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Reflection.ParameterAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: ParameterAttributes\n  fullName: System.Reflection.ParameterAttributes\n  nameWithType: ParameterAttributes\n  commentId: T:System.Reflection.ParameterAttributes\n- uid: System.Reflection.Emit.ParameterBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: ParameterBuilder\n  fullName: System.Reflection.Emit.ParameterBuilder\n  nameWithType: ParameterBuilder\n  commentId: T:System.Reflection.Emit.ParameterBuilder\n- uid: System.Reflection.MethodInfo.Equals(System.Object)\n  parent: System.Reflection.MethodInfo\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Reflection.MethodInfo.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Reflection.MethodInfo.Equals(System.Object)\n    name: Equals\n    fullName: System.Reflection.MethodInfo.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodInfo.Equals(System.Object)\n    name: Equals\n    fullName: System.Reflection.MethodInfo.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MethodInfo.Equals(Object)\n  commentId: M:System.Reflection.MethodInfo.Equals(System.Object)\n- uid: System.Reflection.MethodInfo.GetGenericArguments\n  parent: System.Reflection.MethodInfo\n  isExternal: true\n  name: GetGenericArguments()\n  fullName: System.Reflection.MethodInfo.GetGenericArguments()\n  spec.csharp:\n  - uid: System.Reflection.MethodInfo.GetGenericArguments\n    name: GetGenericArguments\n    fullName: System.Reflection.MethodInfo.GetGenericArguments\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodInfo.GetGenericArguments\n    name: GetGenericArguments\n    fullName: System.Reflection.MethodInfo.GetGenericArguments\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MethodInfo.GetGenericArguments()\n  commentId: M:System.Reflection.MethodInfo.GetGenericArguments\n- uid: System.Type[]\n  name: Type[]\n  fullName: System.Type[]\n  fullname.vb: System.Type()\n  name.vb: Type()\n  spec.csharp:\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n  - name: ()\n    fullName: ()\n  nameWithType: Type[]\n  nameWithType.vb: Type()\n- uid: System.Reflection.MethodInfo.GetGenericMethodDefinition\n  parent: System.Reflection.MethodInfo\n  isExternal: true\n  name: GetGenericMethodDefinition()\n  fullName: System.Reflection.MethodInfo.GetGenericMethodDefinition()\n  spec.csharp:\n  - uid: System.Reflection.MethodInfo.GetGenericMethodDefinition\n    name: GetGenericMethodDefinition\n    fullName: System.Reflection.MethodInfo.GetGenericMethodDefinition\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodInfo.GetGenericMethodDefinition\n    name: GetGenericMethodDefinition\n    fullName: System.Reflection.MethodInfo.GetGenericMethodDefinition\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MethodInfo.GetGenericMethodDefinition()\n  commentId: M:System.Reflection.MethodInfo.GetGenericMethodDefinition\n- uid: System.Reflection.MethodInfo.GetHashCode\n  parent: System.Reflection.MethodInfo\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Reflection.MethodInfo.GetHashCode()\n  spec.csharp:\n  - uid: System.Reflection.MethodInfo.GetHashCode\n    name: GetHashCode\n    fullName: System.Reflection.MethodInfo.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodInfo.GetHashCode\n    name: GetHashCode\n    fullName: System.Reflection.MethodInfo.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MethodInfo.GetHashCode()\n  commentId: M:System.Reflection.MethodInfo.GetHashCode\n- uid: System.Reflection.Emit.ILGenerator\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: ILGenerator\n  fullName: System.Reflection.Emit.ILGenerator\n  nameWithType: ILGenerator\n  commentId: T:System.Reflection.Emit.ILGenerator\n- uid: System.Reflection.MethodBase.GetParameters\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: GetParameters()\n  fullName: System.Reflection.MethodBase.GetParameters()\n  spec.csharp:\n  - uid: System.Reflection.MethodBase.GetParameters\n    name: GetParameters\n    fullName: System.Reflection.MethodBase.GetParameters\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodBase.GetParameters\n    name: GetParameters\n    fullName: System.Reflection.MethodBase.GetParameters\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MethodBase.GetParameters()\n  commentId: M:System.Reflection.MethodBase.GetParameters\n- uid: System.Reflection.ParameterInfo[]\n  name: ParameterInfo[]\n  fullName: System.Reflection.ParameterInfo[]\n  fullname.vb: System.Reflection.ParameterInfo()\n  name.vb: ParameterInfo()\n  spec.csharp:\n  - uid: System.Reflection.ParameterInfo\n    name: ParameterInfo\n    fullName: System.Reflection.ParameterInfo\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Reflection.ParameterInfo\n    name: ParameterInfo\n    fullName: System.Reflection.ParameterInfo\n  - name: ()\n    fullName: ()\n  nameWithType: ParameterInfo[]\n  nameWithType.vb: ParameterInfo()\n- uid: System.Reflection.MethodInfo.MakeGenericMethod(System.Type[])\n  parent: System.Reflection.MethodInfo\n  isExternal: true\n  name: MakeGenericMethod(Type[])\n  fullName: System.Reflection.MethodInfo.MakeGenericMethod(System.Type[])\n  fullname.vb: System.Reflection.MethodInfo.MakeGenericMethod(System.Type())\n  name.vb: MakeGenericMethod(Type())\n  spec.csharp:\n  - uid: System.Reflection.MethodInfo.MakeGenericMethod(System.Type[])\n    name: MakeGenericMethod\n    fullName: System.Reflection.MethodInfo.MakeGenericMethod\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodInfo.MakeGenericMethod(System.Type[])\n    name: MakeGenericMethod\n    fullName: System.Reflection.MethodInfo.MakeGenericMethod\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: MethodInfo.MakeGenericMethod(Type[])\n  nameWithType.vb: MethodInfo.MakeGenericMethod(Type())\n  commentId: M:System.Reflection.MethodInfo.MakeGenericMethod(System.Type[])\n- uid: System.Reflection.ConstructorInfo\n  parent: System.Reflection\n  isExternal: false\n  name: ConstructorInfo\n  fullName: System.Reflection.ConstructorInfo\n  nameWithType: ConstructorInfo\n  commentId: T:System.Reflection.ConstructorInfo\n- uid: System.Byte[]\n  name: Byte[]\n  fullName: System.Byte[]\n  fullname.vb: System.Byte()\n  name.vb: Byte()\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Byte[]\n  nameWithType.vb: Byte()\n- uid: System.Reflection.Emit.CustomAttributeBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: CustomAttributeBuilder\n  fullName: System.Reflection.Emit.CustomAttributeBuilder\n  nameWithType: CustomAttributeBuilder\n  commentId: T:System.Reflection.Emit.CustomAttributeBuilder\n- uid: System.Reflection.MethodImplAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: MethodImplAttributes\n  fullName: System.Reflection.MethodImplAttributes\n  nameWithType: MethodImplAttributes\n  commentId: T:System.Reflection.MethodImplAttributes\n- uid: System.Type[][]\n  name: Type[][]\n  fullName: System.Type[][]\n  fullname.vb: System.Type()()\n  name.vb: Type()()\n  spec.csharp:\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ()\n    fullName: ()\n  nameWithType: Type[][]\n  nameWithType.vb: Type()()\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Reflection.MethodBase.MethodImplementationFlags\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: MethodImplementationFlags\n  fullName: System.Reflection.MethodBase.MethodImplementationFlags\n  nameWithType: MethodBase.MethodImplementationFlags\n  commentId: P:System.Reflection.MethodBase.MethodImplementationFlags\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  fullName: System.NotSupportedException\n  nameWithType: NotSupportedException\n  commentId: T:System.NotSupportedException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n"}